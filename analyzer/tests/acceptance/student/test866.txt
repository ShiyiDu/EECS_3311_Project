conjunction
add_command("D", "C", <<["D", "BOOLEAN"], ["INTEGER", "INTEGER"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["b", "a"], ["BOOLEAN", "C"]>>)
bool_value (true)
add_query("d", "D", <<["C", "BOOLEAN"]>>, "e")
subtraction
logical_negation
bool_value (false)
add_command("C", "D", <<["e", "b"], ["c", "INTEGER"], ["c", "INTEGER"], ["INTEGER", "D"], ["b", "D"]>>)
add_call_chain(<<B,C,C,C,A,e,a,D>>)
add_query("C", "D", <<["c", "BOOLEAN"]>>, "BOOLEAN")
add_query("C", "A", <<["e", "BOOLEAN"], ["A", "D"], ["BOOLEAN", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["d", "BOOLEAN"], ["B", "INTEGER"]>>, "D")
bool_value (true)
equals
add_call_chain(<<D>>)
add_class(B)
int_value (41)
generate_java_code
add_class(d)
add_call_chain(<<D,A,INTEGER,a,C,B,a>>)
addition
add_call_chain(<<b,b,a>>)
add_class(INTEGER)
numerical_negation
bool_value (true)
type_check
less_than
logical_negation
add_query("b", "e", <<["C", "C"], ["a", "BOOLEAN"], ["INTEGER", "INTEGER"], ["B", "INTEGER"]>>, "C")
logical_negation
bool_value (true)
add_command("d", "B", <<["d", "INTEGER"], ["D", "INTEGER"], ["D", "BOOLEAN"]>>)
add_attribute("B", "a", "c")
bool_value (false)
bool_value (false)
add_query("e", "b", <<["D", "INTEGER"], ["A", "BOOLEAN"], ["D", "INTEGER"], ["a", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "A"], ["INTEGER", "INTEGER"]>>, "e")
int_value (19)
bool_value (true)
add_command("d", "C", <<["B", "INTEGER"], ["A", "INTEGER"], ["a", "BOOLEAN"], ["a", "A"], ["BOOLEAN", "a"], ["D", "a"], ["A", "INTEGER"]>>)
generate_java_code
greater_than
add_attribute("C", "C", "BOOLEAN")
add_call_chain(<<d,a,B,A,B,B>>)
logical_negation
add_attribute("d", "a", "BOOLEAN")
bool_value (true)
add_query("C", "e", <<["A", "INTEGER"], ["a", "BOOLEAN"]>>, "e")
int_value (6)
bool_value (true)
logical_negation
subtraction
type_check
add_query("e", "A", <<["B", "BOOLEAN"], ["D", "INTEGER"], ["A", "INTEGER"], ["C", "D"], ["a", "D"]>>, "BOOLEAN")
add_command("a", "c", <<["e", "INTEGER"], ["C", "INTEGER"], ["c", "BOOLEAN"]>>)
add_call_chain(<<c,D>>)
int_value (1)
int_value (21)
add_command("INTEGER", "B", <<["D", "b"], ["D", "BOOLEAN"], ["c", "BOOLEAN"], ["INTEGER", "INTEGER"], ["d", "C"]>>)
bool_value (false)
conjunction
add_class(a)
add_call_chain(<<e,A>>)
add_attribute("A", "e", "BOOLEAN")
greater_than
int_value (30)
int_value (47)
numerical_negation
numerical_negation
bool_value (false)
add_query("B", "D", <<["A", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["d", "INTEGER"], ["INTEGER", "INTEGER"]>>, "B")
add_attribute("A", "c", "INTEGER")
conjunction
add_query("B", "e", <<["c", "D"], ["B", "INTEGER"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>, "e")
add_attribute("a", "a", "INTEGER")
generate_java_code
logical_negation
equals
generate_java_code
add_attribute("e", "d", "INTEGER")
add_attribute("b", "e", "INTEGER")
type_check
add_call_chain(<<C,D,a,B>>)
bool_value (true)
type_check
int_value (25)
int_value (31)
add_query("c", "C", <<["b", "A"], ["a", "INTEGER"], ["C", "C"], ["d", "A"], ["C", "d"], ["e", "e"], ["c", "INTEGER"]>>, "a")
int_value (19)
numerical_negation
equals
numerical_negation
numerical_negation
add_call_chain(<<b,b,BOOLEAN,d,BOOLEAN,e,C>>)
add_query("b", "C", <<["b", "BOOLEAN"], ["B", "INTEGER"], ["d", "BOOLEAN"], ["c", "B"], ["a", "D"]>>, "a")
int_value (37)
add_attribute("B", "d", "INTEGER")
bool_value (true)
add_attribute("B", "C", "INTEGER")
bool_value (false)
add_class(c)
add_query("A", "C", <<["BOOLEAN", "INTEGER"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["D", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "B"], ["b", "a"]>>, "b")
add_query("C", "BOOLEAN", <<["INTEGER", "BOOLEAN"], ["d", "BOOLEAN"]>>, "D")
add_query("a", "D", <<["d", "D"], ["D", "INTEGER"]>>, "c")
add_attribute("A", "B", "INTEGER")
numerical_negation
logical_negation
generate_java_code
logical_negation
logical_negation
bool_value (false)
add_query("a", "a", <<["INTEGER", "INTEGER"]>>, "B")
bool_value (false)
generate_java_code
add_attribute("A", "BOOLEAN", "B")
int_value (2)
add_call_chain(<<A,D>>)
add_command("B", "INTEGER", <<["e", "BOOLEAN"], ["A", "a"], ["D", "INTEGER"], ["A", "INTEGER"], ["A", "c"], ["INTEGER", "BOOLEAN"], ["a", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
int_value (25)
add_attribute("a", "a", "B")
generate_java_code
numerical_negation
bool_value (false)
numerical_negation
add_attribute("B", "D", "BOOLEAN")
add_query("B", "a", <<["B", "e"], ["a", "A"], ["a", "INTEGER"], ["B", "B"], ["D", "INTEGER"], ["B", "BOOLEAN"]>>, "d")
add_query("d", "D", <<["d", "INTEGER"], ["C", "BOOLEAN"], ["b", "INTEGER"]>>, "c")
disjunction
type_check
type_check
bool_value (false)
add_query("a", "d", <<["d", "INTEGER"], ["D", "BOOLEAN"], ["b", "b"], ["D", "BOOLEAN"], ["c", "INTEGER"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["D", "A"]>>, "B")
subtraction
generate_java_code
disjunction
bool_value (true)
add_call_chain(<<e,d,d,A>>)
add_attribute("b", "B", "INTEGER")
add_command("b", "INTEGER", <<["C", "INTEGER"], ["C", "D"], ["A", "INTEGER"], ["A", "BOOLEAN"]>>)
add_call_chain(<<d,b,e,A,A,BOOLEAN,b,C,A>>)
logical_negation
numerical_negation
add_call_chain(<<c,A,b>>)
add_call_chain(<<D,e,c>>)
greater_than
type_check
add_call_chain(<<b>>)
numerical_negation
int_value (45)
bool_value (false)
add_query("c", "e", <<["D", "B"], ["e", "A"], ["d", "d"], ["d", "BOOLEAN"], ["INTEGER", "d"], ["d", "INTEGER"], ["d", "BOOLEAN"]>>, "B")
add_attribute("A", "C", "C")
type_check
numerical_negation
numerical_negation
add_call_chain(<<b,d,A,b,D,e>>)
add_query("d", "A", <<["D", "INTEGER"]>>, "B")
add_call_chain(<<b>>)
add_call_chain(<<a,B,d,a,d,C,b>>)
int_value (39)
generate_java_code
generate_java_code
add_call_chain(<<INTEGER,c,a,B,d,a,D,d,a>>)
add_class(D)
greater_than
bool_value (false)
conjunction
addition
add_call_chain(<<A,e,C,B,d,C,A>>)
int_value (39)
add_query("c", "c", <<["d", "BOOLEAN"], ["INTEGER", "INTEGER"], ["INTEGER", "b"], ["BOOLEAN", "C"], ["B", "BOOLEAN"], ["INTEGER", "INTEGER"], ["d", "A"], ["a", "c"]>>, "a")
int_value (2)
logical_negation
int_value (22)
add_query("D", "c", <<["D", "D"], ["C", "INTEGER"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["A", "INTEGER"]>>, "a")
add_command("e", "C", <<["b", "BOOLEAN"], ["b", "b"], ["C", "C"], ["c", "C"], ["a", "d"], ["C", "c"], ["B", "d"]>>)
addition
logical_negation
add_call_chain(<<A,A,INTEGER,A,C,b,A,a,C>>)
add_call_chain(<<b,C,a,A,B>>)
add_call_chain(<<A,D,c,d>>)
add_call_chain(<<C>>)
add_query("d", "A", <<["a", "INTEGER"], ["a", "INTEGER"], ["a", "INTEGER"], ["b", "INTEGER"]>>, "a")
bool_value (false)
conjunction
type_check
add_query("B", "e", <<["d", "C"], ["D", "INTEGER"], ["C", "INTEGER"], ["A", "e"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["D", "INTEGER"], ["a", "INTEGER"]>>, "B")
logical_negation
add_class(a)
logical_negation
add_attribute("C", "B", "INTEGER")
bool_value (true)
add_call_chain(<<d,d,C>>)
add_command("B", "A", <<["b", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["e", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"]>>)
add_class(e)
bool_value (true)
add_class(d)
add_call_chain(<<c,INTEGER,C,b,INTEGER,D>>)
add_attribute("a", "d", "B")
int_value (25)
int_value (39)
add_query("D", "d", <<["B", "INTEGER"], ["e", "INTEGER"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "INTEGER"]>>, "d")
modulo
add_class(A)
add_query("BOOLEAN", "D", <<["d", "b"], ["D", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "INTEGER"], ["d", "BOOLEAN"]>>, "INTEGER")
conjunction
numerical_negation
logical_negation
add_command("b", "a", <<["A", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "INTEGER"], ["d", "BOOLEAN"], ["B", "c"], ["a", "INTEGER"], ["d", "BOOLEAN"], ["b", "INTEGER"], ["c", "D"]>>)
greater_than
int_value (47)
add_call_chain(<<D,e>>)
add_call_chain(<<d,C>>)
add_call_chain(<<C,B,a,C,c>>)
add_call_chain(<<e,C,D,D>>)
add_class(D)
numerical_negation
add_query("d", "C", <<["b", "a"]>>, "D")
bool_value (false)
add_command("b", "e", <<["e", "d"], ["a", "INTEGER"], ["a", "INTEGER"]>>)
bool_value (false)
logical_negation
conjunction
greater_than
int_value (11)
add_attribute("B", "b", "BOOLEAN")
int_value (34)
addition
add_query("B", "C", <<["C", "INTEGER"], ["e", "a"], ["e", "INTEGER"], ["A", "B"], ["D", "C"], ["B", "INTEGER"], ["d", "e"], ["INTEGER", "INTEGER"], ["a", "BOOLEAN"]>>, "C")
int_value (6)
add_call_chain(<<b,A,INTEGER>>)
multiplication
add_command("D", "A", <<["C", "INTEGER"], ["e", "BOOLEAN"], ["B", "e"], ["A", "b"], ["d", "b"], ["A", "e"], ["d", "D"]>>)
add_query("a", "d", <<["B", "INTEGER"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["C", "d"]>>, "D")
add_call_chain(<<e,A,C,B,e,b,a,D,b>>)
add_command("B", "C", <<["d", "b"], ["C", "D"], ["A", "c"], ["a", "BOOLEAN"], ["D", "B"]>>)
add_query("d", "INTEGER", <<["C", "BOOLEAN"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "BOOLEAN"]>>, "A")
add_attribute("a", "D", "INTEGER")
add_query("a", "d", <<["e", "BOOLEAN"]>>, "A")
numerical_negation
bool_value (false)
generate_java_code
add_command("C", "e", <<["A", "INTEGER"], ["b", "INTEGER"], ["C", "C"], ["INTEGER", "BOOLEAN"], ["C", "B"], ["B", "BOOLEAN"]>>)
logical_negation
add_call_chain(<<b,B,A,D,C,d,D,C,C>>)
numerical_negation
disjunction
int_value (19)
bool_value (true)
add_attribute("c", "A", "INTEGER")
equals
add_call_chain(<<A>>)
add_query("b", "B", <<["A", "d"], ["d", "INTEGER"], ["d", "BOOLEAN"], ["INTEGER", "INTEGER"], ["D", "BOOLEAN"], ["C", "BOOLEAN"]>>, "B")
int_value (5)
int_value (46)
add_command("B", "B", <<["C", "a"], ["D", "INTEGER"], ["d", "C"], ["A", "BOOLEAN"], ["A", "INTEGER"], ["D", "INTEGER"], ["a", "C"], ["b", "BOOLEAN"], ["A", "INTEGER"]>>)
bool_value (false)
logical_negation
int_value (32)
disjunction
add_command("b", "d", <<["A", "BOOLEAN"], ["B", "INTEGER"], ["a", "INTEGER"]>>)
add_command("BOOLEAN", "D", <<["d", "d"], ["A", "c"], ["D", "BOOLEAN"], ["c", "INTEGER"]>>)
less_than
