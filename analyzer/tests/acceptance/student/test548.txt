add_call_chain(<<c,D,C,C>>)
add_command("B", "C", <<["BOOLEAN", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "a"]>>)
add_call_chain(<<d,B,C,C,D>>)
quotient
numerical_negation
add_query("c", "A", <<["a", "BOOLEAN"], ["A", "b"], ["C", "BOOLEAN"]>>, "C")
logical_negation
add_call_chain(<<D>>)
add_call_chain(<<d,C,C,C,c,B,D>>)
generate_java_code
add_query("a", "d", <<["D", "INTEGER"], ["e", "BOOLEAN"], ["d", "INTEGER"], ["d", "D"], ["e", "INTEGER"], ["D", "BOOLEAN"]>>, "b")
bool_value (false)
add_attribute("a", "b", "INTEGER")
type_check
add_call_chain(<<B,D,d,e,B,A>>)
add_call_chain(<<B,D,d>>)
bool_value (false)
add_query("a", "d", <<["C", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "INTEGER"], ["INTEGER", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "d"], ["a", "BOOLEAN"]>>, "B")
int_value (35)
numerical_negation
int_value (18)
add_command("BOOLEAN", "D", <<["A", "BOOLEAN"], ["INTEGER", "INTEGER"]>>)
int_value (37)
conjunction
add_attribute("d", "INTEGER", "INTEGER")
add_class(D)
int_value (12)
conjunction
addition
bool_value (true)
disjunction
int_value (6)
bool_value (false)
add_call_chain(<<B>>)
add_command("e", "d", <<["D", "BOOLEAN"], ["D", "INTEGER"]>>)
add_call_chain(<<D>>)
add_call_chain(<<A,D,c,A,c,a>>)
conjunction
type_check
add_attribute("B", "BOOLEAN", "BOOLEAN")
add_attribute("A", "D", "BOOLEAN")
add_call_chain(<<b,a,d>>)
add_command("A", "C", <<["B", "INTEGER"], ["B", "BOOLEAN"], ["A", "B"], ["D", "BOOLEAN"], ["BOOLEAN", "e"], ["A", "INTEGER"], ["D", "BOOLEAN"]>>)
add_command("d", "A", <<["BOOLEAN", "BOOLEAN"]>>)
disjunction
add_call_chain(<<d,a>>)
add_call_chain(<<A,B,b,B>>)
generate_java_code
add_attribute("C", "b", "a")
add_query("C", "b", <<["C", "B"], ["A", "a"]>>, "INTEGER")
numerical_negation
add_query("A", "A", <<["A", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "d"], ["D", "INTEGER"], ["d", "INTEGER"]>>, "BOOLEAN")
add_command("D", "D", <<["A", "BOOLEAN"]>>)
disjunction
add_class(a)
numerical_negation
add_call_chain(<<C,BOOLEAN,B,INTEGER,d,a>>)
add_attribute("A", "C", "D")
logical_negation
add_call_chain(<<INTEGER,d,a,c,c,e,a,BOOLEAN,B>>)
numerical_negation
conjunction
add_call_chain(<<d,d,c>>)
add_call_chain(<<e,a>>)
add_attribute("D", "INTEGER", "INTEGER")
add_command("C", "b", <<["BOOLEAN", "INTEGER"], ["B", "INTEGER"], ["BOOLEAN", "a"], ["B", "INTEGER"], ["B", "b"], ["A", "C"], ["A", "e"]>>)
add_call_chain(<<b,C,BOOLEAN,d,BOOLEAN,e,BOOLEAN,B>>)
add_call_chain(<<b,A,c,C,a,C,d>>)
add_command("a", "e", <<["B", "INTEGER"], ["a", "INTEGER"], ["b", "INTEGER"], ["e", "b"], ["C", "BOOLEAN"], ["e", "c"], ["BOOLEAN", "BOOLEAN"], ["A", "BOOLEAN"]>>)
less_than
type_check
add_call_chain(<<B>>)
add_attribute("INTEGER", "b", "e")
greater_than
add_command("A", "A", <<["B", "BOOLEAN"], ["D", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["e", "BOOLEAN"], ["B", "INTEGER"]>>)
generate_java_code
add_attribute("a", "a", "BOOLEAN")
add_query("a", "C", <<["D", "BOOLEAN"], ["a", "INTEGER"], ["D", "INTEGER"], ["a", "A"], ["a", "BOOLEAN"], ["a", "BOOLEAN"]>>, "a")
disjunction
add_query("a", "C", <<["C", "BOOLEAN"], ["d", "BOOLEAN"], ["e", "e"]>>, "e")
logical_negation
add_command("e", "A", <<["d", "BOOLEAN"], ["A", "BOOLEAN"], ["INTEGER", "INTEGER"], ["a", "INTEGER"], ["D", "c"], ["A", "A"], ["C", "BOOLEAN"], ["B", "BOOLEAN"]>>)
add_call_chain(<<A,A,D,D,d,INTEGER,INTEGER>>)
generate_java_code
int_value (1)
add_query("B", "d", <<["e", "e"], ["b", "INTEGER"], ["B", "D"]>>, "e")
bool_value (true)
bool_value (false)
subtraction
generate_java_code
add_call_chain(<<D>>)
add_attribute("c", "A", "INTEGER")
greater_than
int_value (35)
add_call_chain(<<B,a,a,a,C,B,c>>)
add_class(b)
disjunction
bool_value (true)
add_query("e", "b", <<["c", "BOOLEAN"], ["e", "INTEGER"], ["A", "e"], ["A", "INTEGER"]>>, "d")
numerical_negation
subtraction
bool_value (false)
add_command("A", "a", <<["D", "BOOLEAN"], ["A", "INTEGER"], ["D", "INTEGER"], ["e", "BOOLEAN"], ["a", "INTEGER"], ["A", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "INTEGER"]>>)
int_value (35)
addition
equals
bool_value (false)
add_call_chain(<<A,B,b>>)
logical_negation
disjunction
add_attribute("e", "c", "B")
add_call_chain(<<a,a,D>>)
greater_than
numerical_negation
generate_java_code
add_query("C", "c", <<["C", "INTEGER"], ["INTEGER", "BOOLEAN"], ["D", "C"], ["BOOLEAN", "INTEGER"], ["C", "d"], ["e", "INTEGER"]>>, "BOOLEAN")
add_attribute("a", "C", "c")
int_value (4)
add_class(B)
add_call_chain(<<e,c,INTEGER>>)
add_command("e", "b", <<["INTEGER", "INTEGER"], ["B", "INTEGER"], ["c", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "c"], ["d", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "B"], ["B", "BOOLEAN"]>>)
bool_value (false)
type_check
add_command("d", "d", <<["B", "c"], ["d", "BOOLEAN"]>>)
generate_java_code
add_command("d", "d", <<["B", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
add_query("C", "B", <<["C", "BOOLEAN"]>>, "B")
int_value (36)
add_query("d", "C", <<["a", "A"], ["C", "BOOLEAN"], ["C", "INTEGER"]>>, "a")
int_value (15)
add_query("d", "A", <<["c", "BOOLEAN"], ["c", "BOOLEAN"]>>, "BOOLEAN")
add_attribute("INTEGER", "c", "BOOLEAN")
add_attribute("A", "b", "BOOLEAN")
add_call_chain(<<INTEGER,b,D,B,d,A,A>>)
bool_value (true)
equals
add_attribute("B", "BOOLEAN", "BOOLEAN")
conjunction
add_class(A)
type_check
generate_java_code
generate_java_code
add_command("C", "a", <<["D", "A"], ["b", "B"], ["A", "BOOLEAN"]>>)
add_command("D", "e", <<["D", "BOOLEAN"]>>)
add_query("a", "D", <<["B", "D"], ["e", "A"], ["D", "INTEGER"], ["D", "INTEGER"], ["A", "C"]>>, "c")
add_call_chain(<<C,C>>)
numerical_negation
add_attribute("a", "D", "INTEGER")
int_value (3)
add_attribute("c", "INTEGER", "c")
add_attribute("INTEGER", "d", "INTEGER")
logical_negation
logical_negation
bool_value (true)
int_value (23)
int_value (26)
add_attribute("A", "B", "BOOLEAN")
add_attribute("a", "b", "INTEGER")
int_value (25)
greater_than
numerical_negation
int_value (29)
logical_negation
add_attribute("e", "B", "INTEGER")
bool_value (true)
add_call_chain(<<D,e,B,b,a,A>>)
greater_than
disjunction
int_value (43)
add_call_chain(<<B,A,a,D,c,d,C,B>>)
disjunction
modulo
add_query("B", "D", <<["d", "INTEGER"], ["B", "BOOLEAN"], ["b", "a"], ["e", "BOOLEAN"]>>, "D")
add_call_chain(<<e,e,c,c,B,d,b>>)
add_command("D", "C", <<["c", "BOOLEAN"], ["C", "INTEGER"], ["C", "BOOLEAN"]>>)
add_attribute("C", "B", "INTEGER")
type_check
add_command("c", "a", <<["B", "INTEGER"], ["A", "BOOLEAN"], ["B", "a"], ["a", "D"]>>)
add_command("A", "d", <<["d", "BOOLEAN"], ["A", "BOOLEAN"], ["BOOLEAN", "A"]>>)
add_attribute("e", "e", "a")
disjunction
add_query("a", "a", <<["a", "INTEGER"]>>, "D")
int_value (19)
bool_value (true)
add_call_chain(<<A,INTEGER,C,A,D,c>>)
bool_value (true)
add_call_chain(<<INTEGER,b,B,BOOLEAN>>)
add_call_chain(<<c,e,b,C,INTEGER,C,INTEGER>>)
type_check
add_query("e", "b", <<["e", "BOOLEAN"], ["c", "INTEGER"], ["c", "INTEGER"], ["D", "b"], ["BOOLEAN", "BOOLEAN"]>>, "B")
add_call_chain(<<D,INTEGER>>)
add_query("a", "b", <<["A", "INTEGER"], ["c", "BOOLEAN"], ["b", "INTEGER"], ["A", "INTEGER"], ["a", "BOOLEAN"], ["e", "INTEGER"]>>, "D")
equals
equals
add_query("C", "b", <<["A", "A"], ["a", "INTEGER"], ["d", "B"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["d", "INTEGER"]>>, "e")
numerical_negation
numerical_negation
int_value (41)
logical_negation
add_call_chain(<<D,a,INTEGER,D,INTEGER>>)
add_call_chain(<<B,b,INTEGER>>)
logical_negation
logical_negation
logical_negation
add_query("D", "c", <<["B", "BOOLEAN"], ["b", "b"], ["D", "BOOLEAN"], ["b", "c"], ["B", "INTEGER"], ["e", "INTEGER"], ["C", "INTEGER"]>>, "C")
type_check
int_value (37)
add_call_chain(<<C,C>>)
numerical_negation
add_attribute("BOOLEAN", "B", "INTEGER")
add_call_chain(<<d,D,d,b,D,e,INTEGER>>)
add_query("c", "D", <<["b", "BOOLEAN"], ["a", "INTEGER"], ["B", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "d"], ["b", "INTEGER"], ["D", "D"]>>, "e")
numerical_negation
add_command("B", "c", <<["A", "INTEGER"]>>)
add_attribute("B", "D", "D")
add_class(e)
add_attribute("a", "INTEGER", "INTEGER")
equals
