bool_value (true)
add_call_chain(<<e,b,C,c,A>>)
add_call_chain(<<C,C,B,a,D,d,INTEGER,A>>)
logical_negation
quotient
numerical_negation
addition
add_call_chain(<<d,B,D,C,C,B,A>>)
logical_negation
add_query("A", "D", <<["a", "BOOLEAN"], ["d", "INTEGER"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["d", "C"]>>, "d")
type_check
add_call_chain(<<A,C,d,c,d,C,e>>)
add_call_chain(<<b,BOOLEAN,C,d,B,d>>)
int_value (23)
add_attribute("B", "D", "A")
add_call_chain(<<A,B,c,D,c,D>>)
add_command("a", "d", <<["b", "C"]>>)
add_call_chain(<<c,b,A,e,d,a,a,C,C>>)
add_command("b", "C", <<["A", "BOOLEAN"], ["INTEGER", "d"], ["D", "B"], ["d", "INTEGER"], ["d", "BOOLEAN"], ["A", "B"], ["C", "INTEGER"]>>)
add_call_chain(<<INTEGER,D,B>>)
modulo
add_command("d", "C", <<["D", "INTEGER"], ["c", "A"], ["INTEGER", "e"], ["BOOLEAN", "a"], ["b", "INTEGER"], ["D", "BOOLEAN"], ["D", "A"]>>)
add_call_chain(<<C,d,BOOLEAN>>)
int_value (1)
greater_than
type_check
add_command("B", "b", <<["e", "INTEGER"], ["A", "INTEGER"], ["d", "INTEGER"], ["C", "b"], ["e", "BOOLEAN"], ["d", "INTEGER"], ["b", "B"], ["c", "d"], ["d", "BOOLEAN"]>>)
conjunction
add_command("A", "c", <<["D", "c"], ["D", "BOOLEAN"]>>)
add_query("e", "INTEGER", <<["A", "a"], ["C", "A"], ["d", "C"], ["B", "C"]>>, "C")
logical_negation
generate_java_code
add_call_chain(<<b,INTEGER>>)
add_call_chain(<<b,C,a,e,D,a,d>>)
add_call_chain(<<A,d,b>>)
add_call_chain(<<INTEGER,c,C,B,C,A,B>>)
add_class(c)
add_command("INTEGER", "C", <<["e", "INTEGER"], ["a", "INTEGER"], ["C", "INTEGER"], ["D", "INTEGER"]>>)
numerical_negation
add_query("B", "D", <<["C", "INTEGER"], ["c", "INTEGER"], ["b", "BOOLEAN"], ["C", "INTEGER"], ["b", "b"], ["d", "d"], ["a", "BOOLEAN"], ["D", "INTEGER"], ["C", "INTEGER"]>>, "b")
numerical_negation
logical_negation
add_query("e", "A", <<["e", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["c", "B"], ["C", "INTEGER"], ["e", "A"]>>, "BOOLEAN")
add_query("A", "B", <<["c", "INTEGER"]>>, "e")
add_query("INTEGER", "B", <<["C", "INTEGER"], ["C", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["e", "INTEGER"], ["e", "BOOLEAN"]>>, "C")
type_check
generate_java_code
addition
add_query("e", "C", <<["INTEGER", "e"], ["e", "INTEGER"], ["BOOLEAN", "a"], ["A", "BOOLEAN"], ["A", "b"], ["e", "BOOLEAN"], ["e", "a"], ["A", "INTEGER"], ["D", "BOOLEAN"]>>, "c")
add_command("C", "a", <<["b", "INTEGER"]>>)
add_call_chain(<<b>>)
bool_value (false)
add_command("D", "C", <<["e", "C"], ["BOOLEAN", "BOOLEAN"]>>)
int_value (6)
add_attribute("B", "C", "INTEGER")
add_query("D", "B", <<["d", "INTEGER"], ["D", "INTEGER"], ["INTEGER", "c"], ["D", "D"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["d", "D"]>>, "C")
add_class(d)
add_query("b", "B", <<["e", "BOOLEAN"], ["D", "INTEGER"], ["C", "B"], ["D", "INTEGER"], ["A", "INTEGER"], ["b", "INTEGER"], ["INTEGER", "d"]>>, "INTEGER")
add_query("C", "B", <<["d", "C"], ["b", "INTEGER"], ["e", "D"], ["e", "INTEGER"]>>, "A")
add_attribute("c", "A", "BOOLEAN")
add_query("BOOLEAN", "B", <<["C", "INTEGER"], ["D", "INTEGER"], ["c", "INTEGER"], ["D", "B"]>>, "D")
bool_value (true)
add_call_chain(<<d>>)
type_check
add_query("D", "B", <<["D", "C"], ["e", "e"]>>, "C")
disjunction
add_call_chain(<<D>>)
int_value (26)
generate_java_code
quotient
less_than
add_call_chain(<<c,INTEGER,C,D,A,C,a,a>>)
add_attribute("d", "D", "INTEGER")
add_call_chain(<<D,C,d,D,c,D>>)
conjunction
type_check
logical_negation
bool_value (true)
add_call_chain(<<a,A,c,INTEGER,D,D>>)
add_attribute("b", "c", "A")
add_call_chain(<<B,c,B>>)
type_check
add_query("a", "C", <<["D", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["c", "INTEGER"]>>, "BOOLEAN")
type_check
add_query("D", "e", <<["b", "BOOLEAN"], ["A", "D"], ["A", "INTEGER"], ["a", "BOOLEAN"], ["BOOLEAN", "a"], ["a", "INTEGER"], ["D", "B"], ["a", "INTEGER"]>>, "c")
addition
add_command("e", "c", <<["A", "BOOLEAN"], ["C", "INTEGER"], ["D", "INTEGER"], ["b", "D"], ["A", "b"], ["C", "B"], ["e", "C"], ["A", "BOOLEAN"]>>)
bool_value (false)
add_attribute("d", "A", "INTEGER")
greater_than
type_check
type_check
add_command("a", "b", <<["BOOLEAN", "BOOLEAN"]>>)
add_class(C)
numerical_negation
numerical_negation
add_attribute("BOOLEAN", "A", "e")
add_call_chain(<<C,BOOLEAN,D>>)
add_query("BOOLEAN", "e", <<["D", "INTEGER"], ["A", "INTEGER"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "INTEGER"], ["A", "BOOLEAN"], ["d", "e"], ["D", "BOOLEAN"]>>, "a")
add_query("C", "INTEGER", <<["e", "BOOLEAN"], ["INTEGER", "INTEGER"]>>, "A")
add_call_chain(<<e,C,d,a,a,D,C,A>>)
bool_value (true)
int_value (7)
add_call_chain(<<B,d>>)
int_value (12)
addition
type_check
bool_value (true)
equals
add_attribute("D", "b", "INTEGER")
int_value (40)
generate_java_code
numerical_negation
add_query("d", "d", <<["e", "b"], ["INTEGER", "INTEGER"]>>, "b")
int_value (23)
generate_java_code
int_value (38)
conjunction
add_command("d", "C", <<["A", "C"], ["b", "INTEGER"], ["b", "INTEGER"], ["BOOLEAN", "INTEGER"], ["B", "a"], ["a", "BOOLEAN"]>>)
add_call_chain(<<a,A,d,b,d,e>>)
conjunction
numerical_negation
add_call_chain(<<BOOLEAN,C>>)
add_call_chain(<<D,C,A,A,D,a,B,d,e>>)
add_call_chain(<<A,b,C,e,a,C,a,b>>)
add_call_chain(<<D>>)
add_query("d", "INTEGER", <<["A", "INTEGER"], ["A", "BOOLEAN"], ["C", "d"], ["a", "BOOLEAN"], ["d", "INTEGER"], ["e", "c"], ["d", "BOOLEAN"]>>, "D")
int_value (1)
add_attribute("c", "BOOLEAN", "BOOLEAN")
numerical_negation
add_command("B", "C", <<["BOOLEAN", "INTEGER"], ["b", "c"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "C"], ["C", "e"], ["e", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
add_call_chain(<<C,B,B,C,D,c>>)
add_attribute("c", "B", "BOOLEAN")
bool_value (false)
add_attribute("B", "d", "BOOLEAN")
generate_java_code
add_command("D", "e", <<["B", "INTEGER"], ["c", "INTEGER"], ["B", "BOOLEAN"], ["b", "a"], ["B", "BOOLEAN"], ["e", "INTEGER"], ["A", "INTEGER"]>>)
add_call_chain(<<b,D,B,D,BOOLEAN>>)
logical_negation
add_command("C", "e", <<["b", "INTEGER"], ["D", "BOOLEAN"]>>)
type_check
logical_negation
add_attribute("B", "c", "b")
numerical_negation
bool_value (false)
bool_value (false)
numerical_negation
add_query("c", "A", <<["B", "C"], ["b", "BOOLEAN"], ["e", "INTEGER"], ["d", "INTEGER"]>>, "e")
add_command("INTEGER", "INTEGER", <<["B", "B"], ["d", "INTEGER"], ["c", "INTEGER"], ["d", "BOOLEAN"], ["e", "BOOLEAN"], ["c", "BOOLEAN"], ["e", "INTEGER"]>>)
greater_than
numerical_negation
disjunction
add_command("A", "a", <<["d", "BOOLEAN"], ["B", "INTEGER"]>>)
add_attribute("A", "C", "a")
add_command("INTEGER", "BOOLEAN", <<["e", "d"], ["A", "INTEGER"], ["A", "c"], ["b", "BOOLEAN"]>>)
add_attribute("d", "C", "b")
add_call_chain(<<INTEGER,D,c,A,A,B,B>>)
add_class(B)
bool_value (true)
conjunction
add_query("b", "e", <<["e", "BOOLEAN"], ["BOOLEAN", "d"], ["D", "INTEGER"], ["A", "BOOLEAN"], ["a", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["A", "b"]>>, "e")
bool_value (false)
type_check
add_call_chain(<<a,A>>)
add_query("d", "D", <<["B", "C"], ["c", "BOOLEAN"], ["A", "INTEGER"]>>, "d")
add_attribute("B", "a", "BOOLEAN")
add_query("b", "B", <<["A", "e"], ["b", "INTEGER"], ["A", "INTEGER"], ["e", "INTEGER"], ["e", "INTEGER"], ["C", "BOOLEAN"]>>, "D")
add_call_chain(<<a,b,d,D,A,B,A,d,A>>)
add_query("a", "A", <<["C", "a"], ["b", "c"], ["e", "C"], ["d", "BOOLEAN"]>>, "b")
bool_value (true)
generate_java_code
bool_value (true)
add_query("C", "c", <<["A", "INTEGER"], ["INTEGER", "INTEGER"], ["a", "BOOLEAN"], ["e", "C"], ["b", "INTEGER"], ["INTEGER", "a"]>>, "c")
add_query("B", "c", <<["INTEGER", "C"]>>, "c")
type_check
numerical_negation
add_query("a", "C", <<["C", "C"], ["C", "BOOLEAN"], ["BOOLEAN", "d"], ["e", "INTEGER"]>>, "e")
add_call_chain(<<a,BOOLEAN,e,A,e,B>>)
add_command("d", "c", <<["C", "INTEGER"], ["INTEGER", "INTEGER"], ["A", "A"], ["b", "A"], ["b", "BOOLEAN"], ["b", "INTEGER"], ["b", "INTEGER"], ["C", "b"], ["b", "e"]>>)
int_value (16)
add_call_chain(<<C,C,BOOLEAN,C,A,B,INTEGER,d,C>>)
add_call_chain(<<b,A,a,e,B,e>>)
add_query("D", "c", <<["e", "INTEGER"], ["a", "INTEGER"]>>, "B")
add_query("b", "A", <<["a", "BOOLEAN"], ["e", "BOOLEAN"], ["a", "D"], ["d", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "BOOLEAN"]>>, "d")
quotient
add_call_chain(<<a,D>>)
add_call_chain(<<d,A,e,b,d,C,c,INTEGER,BOOLEAN>>)
logical_negation
numerical_negation
add_call_chain(<<b,b,D,e,a,b>>)
add_call_chain(<<d>>)
add_attribute("A", "b", "INTEGER")
int_value (49)
add_attribute("c", "A", "BOOLEAN")
add_attribute("C", "B", "INTEGER")
generate_java_code
add_call_chain(<<e,c,A,B,c,A>>)
add_query("INTEGER", "A", <<["BOOLEAN", "BOOLEAN"], ["C", "INTEGER"], ["B", "C"], ["d", "b"], ["A", "BOOLEAN"], ["C", "a"]>>, "d")
add_call_chain(<<e,d>>)
generate_java_code
logical_negation
int_value (15)
greater_than
bool_value (false)
add_call_chain(<<b,d,c,e>>)
add_query("B", "BOOLEAN", <<["b", "BOOLEAN"], ["b", "INTEGER"], ["B", "INTEGER"], ["B", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "BOOLEAN"]>>, "C")
add_command("a", "BOOLEAN", <<["INTEGER", "INTEGER"], ["a", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "INTEGER"]>>)
multiplication
disjunction
add_call_chain(<<a>>)
less_than
generate_java_code
bool_value (false)
numerical_negation
subtraction
add_attribute("C", "c", "A")
int_value (21)
add_call_chain(<<d,A,C,INTEGER,e,A,INTEGER,e>>)
add_query("e", "BOOLEAN", <<["C", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "B"], ["b", "BOOLEAN"], ["e", "INTEGER"], ["B", "INTEGER"]>>, "b")
bool_value (false)
add_query("c", "C", <<["BOOLEAN", "BOOLEAN"], ["b", "BOOLEAN"], ["INTEGER", "INTEGER"], ["d", "B"], ["e", "c"], ["b", "A"], ["B", "a"], ["BOOLEAN", "INTEGER"], ["a", "INTEGER"]>>, "c")
add_call_chain(<<C,B,d,c,c,e,C,b>>)
bool_value (true)
generate_java_code
numerical_negation
numerical_negation
logical_negation
int_value (5)
disjunction
add_call_chain(<<b,c,C,b,C,B,B,b>>)
bool_value (false)
bool_value (true)
add_command("a", "d", <<["C", "BOOLEAN"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["d", "d"], ["a", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "B"]>>)
add_query("BOOLEAN", "D", <<["BOOLEAN", "a"], ["c", "INTEGER"], ["C", "INTEGER"]>>, "D")
numerical_negation
bool_value (false)
add_attribute("A", "a", "c")
add_attribute("c", "B", "INTEGER")
bool_value (true)
add_class(INTEGER)
int_value (17)
