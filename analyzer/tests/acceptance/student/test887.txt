add_call_chain(<<BOOLEAN,A>>)
numerical_negation
add_query("b", "C", <<["A", "b"], ["c", "INTEGER"], ["b", "A"], ["d", "BOOLEAN"], ["c", "e"]>>, "b")
disjunction
add_command("B", "A", <<["INTEGER", "a"], ["d", "A"], ["b", "BOOLEAN"]>>)
bool_value (true)
logical_negation
type_check
add_attribute("b", "e", "INTEGER")
logical_negation
add_command("A", "d", <<["A", "C"]>>)
add_call_chain(<<b,A,A,B,a,BOOLEAN,b,A,D>>)
logical_negation
add_command("d", "c", <<["B", "INTEGER"], ["C", "INTEGER"], ["D", "BOOLEAN"]>>)
add_query("B", "B", <<["D", "e"], ["c", "a"]>>, "e")
add_call_chain(<<B,a,a,C,d,b>>)
add_query("B", "D", <<["c", "b"], ["c", "BOOLEAN"], ["e", "B"], ["B", "D"], ["e", "INTEGER"], ["B", "a"], ["C", "BOOLEAN"], ["d", "INTEGER"]>>, "b")
add_query("c", "D", <<["B", "INTEGER"], ["A", "D"], ["B", "e"], ["b", "c"], ["a", "BOOLEAN"], ["c", "BOOLEAN"], ["e", "INTEGER"], ["a", "b"]>>, "a")
add_attribute("d", "INTEGER", "INTEGER")
add_attribute("D", "c", "BOOLEAN")
type_check
add_call_chain(<<INTEGER,d,D,A,D,d,A,C>>)
add_query("D", "A", <<["A", "BOOLEAN"]>>, "a")
numerical_negation
logical_negation
bool_value (true)
add_attribute("d", "b", "a")
add_class(c)
equals
add_query("D", "b", <<["c", "b"], ["d", "BOOLEAN"], ["b", "INTEGER"], ["INTEGER", "D"], ["e", "c"], ["c", "A"], ["a", "BOOLEAN"], ["e", "C"], ["INTEGER", "INTEGER"]>>, "C")
add_query("A", "A", <<["d", "B"]>>, "A")
generate_java_code
bool_value (false)
int_value (28)
generate_java_code
type_check
add_class(d)
int_value (7)
numerical_negation
bool_value (false)
add_call_chain(<<d,A,INTEGER,c>>)
add_query("a", "BOOLEAN", <<["C", "BOOLEAN"], ["B", "B"], ["D", "INTEGER"], ["INTEGER", "BOOLEAN"], ["e", "BOOLEAN"]>>, "D")
add_attribute("d", "a", "BOOLEAN")
greater_than
greater_than
logical_negation
logical_negation
bool_value (true)
int_value (21)
bool_value (false)
add_class(a)
add_attribute("B", "b", "BOOLEAN")
add_command("a", "D", <<["c", "INTEGER"]>>)
add_call_chain(<<d,A,d,d,A,e,e,BOOLEAN>>)
equals
add_call_chain(<<B,e,D,D,b,A,C,B,B>>)
add_command("a", "B", <<["b", "INTEGER"], ["c", "A"], ["a", "INTEGER"], ["e", "D"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["c", "INTEGER"]>>)
add_call_chain(<<b,B,d,d,d,e,C>>)
add_call_chain(<<e,b,B,a>>)
add_attribute("d", "b", "INTEGER")
bool_value (true)
disjunction
bool_value (true)
add_command("D", "b", <<["B", "BOOLEAN"], ["b", "INTEGER"], ["e", "INTEGER"], ["e", "BOOLEAN"], ["A", "d"], ["D", "INTEGER"], ["b", "BOOLEAN"], ["D", "b"], ["b", "c"]>>)
add_query("b", "d", <<["C", "BOOLEAN"], ["D", "C"]>>, "a")
equals
bool_value (true)
numerical_negation
disjunction
int_value (26)
generate_java_code
type_check
add_query("e", "C", <<["BOOLEAN", "BOOLEAN"], ["d", "B"], ["C", "INTEGER"], ["D", "A"], ["A", "INTEGER"], ["C", "a"], ["A", "INTEGER"], ["BOOLEAN", "INTEGER"], ["C", "B"]>>, "c")
logical_negation
generate_java_code
add_query("e", "a", <<["c", "A"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["b", "BOOLEAN"], ["d", "INTEGER"], ["B", "BOOLEAN"], ["B", "INTEGER"], ["A", "D"]>>, "a")
add_call_chain(<<D,b,INTEGER>>)
add_call_chain(<<b,a,C,INTEGER,D,B,d,BOOLEAN>>)
add_call_chain(<<D>>)
add_call_chain(<<c,B,BOOLEAN,e,C,C,A,A>>)
add_attribute("b", "D", "BOOLEAN")
add_call_chain(<<B,e>>)
add_query("a", "b", <<["b", "INTEGER"], ["D", "INTEGER"], ["d", "D"], ["BOOLEAN", "INTEGER"], ["BOOLEAN", "b"], ["D", "b"], ["B", "B"]>>, "C")
add_query("B", "c", <<["d", "C"]>>, "e")
equals
add_attribute("D", "e", "BOOLEAN")
add_call_chain(<<B,c,b,D,A>>)
add_class(D)
logical_negation
add_command("A", "d", <<["e", "INTEGER"], ["b", "A"]>>)
add_call_chain(<<c,c,d,b,C,A,BOOLEAN,b>>)
logical_negation
add_call_chain(<<B>>)
add_attribute("D", "D", "INTEGER")
add_call_chain(<<c,C,C,A,b,BOOLEAN,C,D>>)
add_call_chain(<<e,B,a,d,D,BOOLEAN,c>>)
add_attribute("a", "D", "BOOLEAN")
subtraction
type_check
add_attribute("INTEGER", "e", "INTEGER")
numerical_negation
add_call_chain(<<c>>)
conjunction
add_query("INTEGER", "B", <<["d", "INTEGER"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["A", "A"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["D", "INTEGER"]>>, "a")
addition
generate_java_code
add_query("a", "D", <<["INTEGER", "BOOLEAN"], ["d", "BOOLEAN"], ["e", "D"], ["B", "BOOLEAN"], ["D", "C"], ["b", "BOOLEAN"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["A", "A"]>>, "e")
add_attribute("b", "c", "BOOLEAN")
add_command("d", "A", <<["e", "INTEGER"], ["A", "C"], ["BOOLEAN", "c"]>>)
add_query("b", "b", <<["c", "B"], ["INTEGER", "c"], ["BOOLEAN", "INTEGER"], ["e", "INTEGER"], ["INTEGER", "a"], ["b", "d"], ["e", "INTEGER"], ["B", "BOOLEAN"], ["D", "BOOLEAN"]>>, "BOOLEAN")
add_query("d", "c", <<["e", "INTEGER"], ["B", "BOOLEAN"], ["d", "B"], ["e", "BOOLEAN"], ["B", "INTEGER"], ["d", "INTEGER"], ["A", "e"], ["D", "C"]>>, "c")
add_command("BOOLEAN", "c", <<["C", "BOOLEAN"], ["b", "INTEGER"], ["B", "INTEGER"], ["C", "c"], ["b", "d"], ["e", "BOOLEAN"], ["A", "BOOLEAN"], ["INTEGER", "INTEGER"], ["C", "b"]>>)
add_command("e", "B", <<["D", "BOOLEAN"], ["e", "INTEGER"], ["e", "BOOLEAN"], ["C", "D"], ["e", "INTEGER"], ["b", "BOOLEAN"]>>)
add_command("C", "BOOLEAN", <<["c", "INTEGER"], ["B", "B"], ["B", "BOOLEAN"], ["c", "a"], ["C", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["c", "INTEGER"], ["D", "A"]>>)
bool_value (false)
generate_java_code
add_class(BOOLEAN)
conjunction
add_query("a", "A", <<["B", "BOOLEAN"], ["d", "INTEGER"], ["B", "BOOLEAN"]>>, "c")
add_command("a", "e", <<["INTEGER", "INTEGER"], ["a", "INTEGER"], ["b", "BOOLEAN"], ["A", "d"], ["C", "d"], ["a", "D"]>>)
add_command("d", "A", <<["b", "INTEGER"], ["INTEGER", "INTEGER"]>>)
add_command("d", "B", <<["B", "INTEGER"]>>)
add_command("e", "A", <<["D", "d"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "d"]>>)
add_command("BOOLEAN", "d", <<["e", "BOOLEAN"]>>)
add_query("d", "B", <<["B", "b"], ["d", "INTEGER"], ["A", "INTEGER"], ["c", "d"], ["a", "BOOLEAN"], ["D", "INTEGER"], ["d", "BOOLEAN"], ["b", "INTEGER"]>>, "e")
bool_value (true)
add_attribute("B", "C", "INTEGER")
add_attribute("a", "c", "BOOLEAN")
add_call_chain(<<C,d>>)
numerical_negation
add_call_chain(<<c,c>>)
add_command("b", "d", <<["B", "INTEGER"], ["d", "B"], ["A", "D"], ["C", "INTEGER"], ["d", "INTEGER"], ["A", "C"], ["a", "B"], ["B", "INTEGER"]>>)
add_command("e", "D", <<["C", "INTEGER"], ["d", "BOOLEAN"], ["A", "A"], ["D", "INTEGER"], ["b", "INTEGER"], ["C", "INTEGER"], ["INTEGER", "INTEGER"], ["c", "BOOLEAN"]>>)
generate_java_code
add_query("B", "A", <<["C", "BOOLEAN"]>>, "c")
add_attribute("A", "d", "D")
generate_java_code
add_call_chain(<<C,d,e,a,c,d,A,b,C>>)
add_call_chain(<<e,C,e,B,b,a,b,C,c>>)
add_query("BOOLEAN", "A", <<["INTEGER", "BOOLEAN"], ["B", "INTEGER"], ["B", "INTEGER"], ["e", "INTEGER"], ["A", "C"], ["C", "INTEGER"], ["c", "d"]>>, "D")
add_call_chain(<<A,BOOLEAN,a,B,D>>)
add_call_chain(<<BOOLEAN,b,D,d,b,b,B,C,D>>)
disjunction
add_command("B", "A", <<["d", "INTEGER"]>>)
add_call_chain(<<C,INTEGER,C,B,b,d,B>>)
numerical_negation
quotient
add_query("C", "e", <<["d", "BOOLEAN"], ["c", "B"], ["e", "BOOLEAN"], ["d", "INTEGER"], ["e", "e"]>>, "D")
add_query("c", "a", <<["INTEGER", "INTEGER"], ["b", "INTEGER"], ["e", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "b"]>>, "e")
add_attribute("B", "INTEGER", "INTEGER")
add_class(A)
generate_java_code
generate_java_code
add_query("d", "c", <<["b", "A"], ["INTEGER", "B"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["A", "d"], ["c", "INTEGER"]>>, "D")
generate_java_code
add_class(C)
type_check
conjunction
conjunction
add_class(BOOLEAN)
bool_value (true)
type_check
numerical_negation
add_attribute("A", "BOOLEAN", "C")
type_check
type_check
int_value (7)
add_query("B", "a", <<["e", "A"], ["a", "BOOLEAN"], ["a", "BOOLEAN"]>>, "c")
add_call_chain(<<D,B,C,D,d>>)
quotient
numerical_negation
add_attribute("c", "BOOLEAN", "INTEGER")
add_call_chain(<<C>>)
numerical_negation
add_call_chain(<<B,c,b,c,e,b>>)
int_value (3)
add_query("D", "b", <<["e", "b"]>>, "A")
add_call_chain(<<d,c,a,BOOLEAN,D,B,BOOLEAN,e>>)
add_attribute("e", "b", "INTEGER")
logical_negation
add_attribute("e", "e", "INTEGER")
add_call_chain(<<D,c,A,a,C,A>>)
add_query("C", "D", <<["A", "INTEGER"], ["C", "D"]>>, "A")
add_command("e", "B", <<["d", "C"], ["b", "b"], ["d", "INTEGER"], ["B", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["D", "A"], ["a", "e"], ["c", "e"], ["c", "INTEGER"]>>)
add_query("C", "A", <<["A", "INTEGER"], ["d", "B"], ["INTEGER", "INTEGER"], ["a", "INTEGER"], ["b", "BOOLEAN"], ["A", "INTEGER"], ["A", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>, "C")
add_command("a", "C", <<["a", "c"], ["c", "BOOLEAN"], ["C", "INTEGER"], ["e", "A"], ["B", "INTEGER"], ["D", "INTEGER"], ["e", "BOOLEAN"], ["D", "INTEGER"]>>)
bool_value (true)
add_call_chain(<<C,BOOLEAN,C,D,b,INTEGER,C,D,D>>)
add_command("a", "c", <<["b", "d"], ["d", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "d"], ["INTEGER", "INTEGER"], ["c", "BOOLEAN"], ["e", "INTEGER"]>>)
add_attribute("b", "A", "a")
type_check
numerical_negation
add_attribute("A", "C", "e")
equals
quotient
add_call_chain(<<A,B,D,B,c,C>>)
add_command("B", "A", <<["INTEGER", "c"], ["A", "d"], ["c", "BOOLEAN"], ["b", "BOOLEAN"], ["e", "INTEGER"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["B", "B"]>>)
quotient
bool_value (false)
numerical_negation
add_query("c", "a", <<["B", "INTEGER"]>>, "D")
add_attribute("INTEGER", "d", "c")
add_class(A)
bool_value (true)
add_query("BOOLEAN", "BOOLEAN", <<["B", "BOOLEAN"], ["D", "a"], ["A", "A"], ["d", "BOOLEAN"], ["b", "INTEGER"], ["b", "D"], ["BOOLEAN", "INTEGER"]>>, "BOOLEAN")
logical_negation
bool_value (true)
int_value (42)
add_attribute("C", "d", "BOOLEAN")
add_call_chain(<<D,c,c,d,e,d,A>>)
bool_value (true)
add_call_chain(<<A,a>>)
add_class(a)
type_check
add_call_chain(<<b>>)
less_than
add_command("a", "b", <<["c", "INTEGER"], ["a", "b"], ["A", "B"], ["c", "INTEGER"], ["b", "BOOLEAN"], ["D", "INTEGER"], ["D", "INTEGER"], ["a", "e"], ["A", "INTEGER"]>>)
bool_value (true)
add_attribute("d", "b", "INTEGER")
add_command("e", "e", <<["BOOLEAN", "INTEGER"], ["C", "A"], ["BOOLEAN", "INTEGER"], ["C", "BOOLEAN"]>>)
add_call_chain(<<C>>)
logical_negation
numerical_negation
type_check
logical_negation
add_query("C", "b", <<["B", "INTEGER"], ["D", "BOOLEAN"], ["c", "INTEGER"], ["D", "B"], ["INTEGER", "A"]>>, "A")
add_call_chain(<<A,D,d,d,e>>)
add_class(B)
add_call_chain(<<D,B,C,b,c,e,BOOLEAN>>)
bool_value (false)
add_command("d", "d", <<["D", "A"], ["B", "D"], ["b", "a"], ["c", "B"], ["b", "BOOLEAN"], ["c", "INTEGER"], ["c", "BOOLEAN"], ["D", "d"]>>)
add_query("b", "a", <<["e", "B"], ["d", "BOOLEAN"]>>, "B")
add_command("B", "B", <<["b", "B"], ["B", "BOOLEAN"], ["c", "D"], ["e", "BOOLEAN"]>>)
add_query("D", "c", <<["C", "BOOLEAN"]>>, "INTEGER")
bool_value (false)
bool_value (false)
add_command("BOOLEAN", "A", <<["A", "B"], ["a", "c"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["INTEGER", "INTEGER"]>>)
add_query("a", "a", <<["b", "INTEGER"], ["B", "D"], ["D", "B"]>>, "INTEGER")
int_value (42)
add_query("D", "C", <<["C", "BOOLEAN"], ["d", "INTEGER"], ["a", "c"], ["b", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "INTEGER"]>>, "e")
add_attribute("e", "e", "BOOLEAN")
add_class(b)
add_query("INTEGER", "c", <<["e", "BOOLEAN"], ["C", "INTEGER"], ["d", "INTEGER"], ["D", "d"], ["D", "INTEGER"], ["c", "B"], ["c", "INTEGER"], ["d", "C"], ["B", "BOOLEAN"]>>, "BOOLEAN")
add_attribute("A", "e", "a")
add_attribute("e", "C", "BOOLEAN")
logical_negation
numerical_negation
add_attribute("B", "b", "INTEGER")
bool_value (true)
add_command("b", "A", <<["c", "INTEGER"], ["b", "INTEGER"], ["d", "INTEGER"], ["A", "INTEGER"]>>)
addition
add_attribute("c", "C", "INTEGER")
numerical_negation
bool_value (false)
add_query("a", "e", <<["c", "D"], ["D", "C"], ["C", "INTEGER"], ["e", "D"], ["C", "B"], ["D", "INTEGER"], ["A", "B"], ["B", "BOOLEAN"]>>, "D")
bool_value (false)
add_attribute("e", "D", "INTEGER")
disjunction
numerical_negation
add_call_chain(<<e,B,b,d>>)
modulo
