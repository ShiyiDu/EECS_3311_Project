modulo
type_check
add_query("c", "a", <<["A", "b"], ["c", "INTEGER"], ["B", "INTEGER"], ["A", "INTEGER"], ["d", "A"]>>, "C")
greater_than
add_call_chain(<<c,e,d,B,a>>)
add_query("B", "d", <<["D", "INTEGER"], ["d", "B"], ["D", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["a", "B"], ["B", "INTEGER"], ["B", "INTEGER"], ["b", "BOOLEAN"]>>, "c")
modulo
add_call_chain(<<D,INTEGER>>)
add_query("c", "INTEGER", <<["INTEGER", "D"], ["c", "INTEGER"], ["B", "d"], ["e", "INTEGER"], ["a", "BOOLEAN"], ["BOOLEAN", "e"], ["b", "BOOLEAN"]>>, "C")
add_command("INTEGER", "D", <<["B", "INTEGER"]>>)
bool_value (true)
generate_java_code
quotient
bool_value (false)
add_attribute("C", "d", "BOOLEAN")
disjunction
conjunction
int_value (45)
add_query("A", "d", <<["A", "INTEGER"]>>, "e")
logical_negation
equals
add_attribute("c", "C", "BOOLEAN")
add_call_chain(<<b,INTEGER>>)
add_call_chain(<<e,A,c,C,a,A>>)
int_value (2)
add_query("B", "a", <<["D", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "INTEGER"], ["D", "INTEGER"], ["c", "B"], ["b", "BOOLEAN"]>>, "d")
add_call_chain(<<b,D,b,D,A>>)
add_attribute("D", "B", "d")
int_value (26)
add_command("b", "INTEGER", <<["INTEGER", "INTEGER"]>>)
add_command("B", "d", <<["C", "BOOLEAN"], ["B", "C"], ["c", "B"], ["B", "INTEGER"]>>)
add_command("a", "b", <<["e", "INTEGER"], ["a", "D"], ["C", "c"], ["BOOLEAN", "a"], ["B", "INTEGER"]>>)
add_query("A", "e", <<["a", "INTEGER"]>>, "B")
numerical_negation
numerical_negation
add_call_chain(<<INTEGER,a,e,B,d,INTEGER>>)
add_attribute("INTEGER", "D", "BOOLEAN")
add_call_chain(<<d,B,d,C,C>>)
greater_than
numerical_negation
equals
add_call_chain(<<A>>)
multiplication
add_class(a)
generate_java_code
add_call_chain(<<A,BOOLEAN,C,A,A,b,e>>)
bool_value (false)
bool_value (false)
add_command("D", "C", <<["a", "INTEGER"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["d", "C"], ["e", "BOOLEAN"], ["a", "C"]>>)
numerical_negation
add_class(B)
numerical_negation
logical_negation
less_than
bool_value (true)
add_call_chain(<<A,INTEGER,A,e,d>>)
addition
add_call_chain(<<A,b,b,c>>)
int_value (30)
add_class(B)
int_value (13)
add_call_chain(<<D,C,e,b>>)
bool_value (true)
numerical_negation
generate_java_code
disjunction
numerical_negation
modulo
numerical_negation
add_command("e", "D", <<["D", "INTEGER"], ["e", "BOOLEAN"], ["a", "d"], ["b", "INTEGER"], ["a", "INTEGER"], ["A", "BOOLEAN"]>>)
add_call_chain(<<D,A,B>>)
add_attribute("c", "INTEGER", "B")
add_call_chain(<<INTEGER,BOOLEAN,C,A>>)
int_value (32)
bool_value (true)
add_call_chain(<<c,B,D,BOOLEAN,e,e>>)
type_check
logical_negation
add_call_chain(<<B,A,e,A,e>>)
add_command("b", "D", <<["c", "INTEGER"], ["D", "b"], ["D", "BOOLEAN"], ["A", "D"], ["B", "INTEGER"], ["INTEGER", "D"], ["C", "INTEGER"]>>)
generate_java_code
add_query("INTEGER", "C", <<["b", "INTEGER"], ["C", "INTEGER"], ["A", "A"], ["c", "B"], ["C", "INTEGER"], ["e", "INTEGER"], ["A", "C"], ["a", "BOOLEAN"]>>, "INTEGER")
add_command("D", "C", <<["INTEGER", "INTEGER"]>>)
generate_java_code
quotient
generate_java_code
bool_value (false)
add_query("b", "c", <<["B", "A"], ["c", "BOOLEAN"], ["d", "INTEGER"], ["D", "B"], ["a", "e"], ["b", "INTEGER"], ["A", "BOOLEAN"], ["a", "A"], ["C", "b"]>>, "a")
int_value (49)
add_command("e", "d", <<["a", "b"], ["c", "e"], ["B", "BOOLEAN"], ["e", "INTEGER"]>>)
numerical_negation
add_command("C", "D", <<["INTEGER", "d"], ["b", "INTEGER"], ["C", "INTEGER"], ["C", "INTEGER"], ["INTEGER", "BOOLEAN"], ["INTEGER", "A"], ["c", "INTEGER"], ["c", "BOOLEAN"]>>)
add_attribute("D", "D", "B")
modulo
add_attribute("A", "D", "INTEGER")
add_command("BOOLEAN", "B", <<["a", "C"], ["c", "a"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["A", "C"], ["B", "INTEGER"], ["C", "BOOLEAN"], ["c", "BOOLEAN"]>>)
add_command("e", "c", <<["BOOLEAN", "INTEGER"]>>)
logical_negation
add_query("A", "D", <<["INTEGER", "d"], ["D", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "INTEGER"]>>, "b")
generate_java_code
add_call_chain(<<a>>)
add_command("b", "b", <<["BOOLEAN", "c"], ["BOOLEAN", "BOOLEAN"], ["b", "BOOLEAN"]>>)
disjunction
add_command("C", "a", <<["d", "BOOLEAN"], ["A", "INTEGER"], ["a", "b"], ["a", "d"], ["a", "BOOLEAN"], ["d", "INTEGER"], ["INTEGER", "B"]>>)
numerical_negation
add_command("INTEGER", "e", <<["C", "BOOLEAN"], ["d", "B"], ["C", "INTEGER"], ["c", "INTEGER"], ["c", "C"], ["A", "d"], ["e", "c"]>>)
quotient
add_class(D)
int_value (29)
add_call_chain(<<b,e,d,b,INTEGER,D>>)
add_call_chain(<<a,a,INTEGER,c,BOOLEAN,D>>)
type_check
bool_value (false)
int_value (31)
add_query("A", "B", <<["INTEGER", "BOOLEAN"], ["b", "INTEGER"], ["b", "BOOLEAN"], ["D", "B"]>>, "A")
add_query("D", "B", <<["A", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["d", "INTEGER"], ["a", "BOOLEAN"], ["C", "INTEGER"], ["a", "INTEGER"], ["D", "e"]>>, "c")
int_value (19)
logical_negation
add_class(B)
int_value (1)
add_command("A", "C", <<["a", "INTEGER"], ["d", "INTEGER"], ["B", "BOOLEAN"]>>)
logical_negation
add_call_chain(<<a,c,D,A,d,b,c,A>>)
add_query("B", "B", <<["b", "B"]>>, "C")
add_class(b)
add_command("D", "A", <<["C", "INTEGER"], ["e", "INTEGER"], ["B", "BOOLEAN"]>>)
logical_negation
add_call_chain(<<A,B,A,BOOLEAN,e>>)
add_call_chain(<<a,C,e,BOOLEAN,D,INTEGER,INTEGER,D>>)
equals
add_command("a", "d", <<["INTEGER", "e"], ["A", "BOOLEAN"], ["BOOLEAN", "d"], ["C", "INTEGER"], ["A", "d"]>>)
add_call_chain(<<D,d,BOOLEAN,B,D,A,BOOLEAN,D,A>>)
add_query("a", "B", <<["D", "INTEGER"], ["c", "INTEGER"], ["e", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "d"], ["A", "b"], ["D", "a"], ["C", "BOOLEAN"]>>, "a")
add_call_chain(<<b,e,BOOLEAN,BOOLEAN,B,A>>)
add_query("D", "INTEGER", <<["D", "BOOLEAN"], ["b", "a"], ["C", "INTEGER"], ["b", "BOOLEAN"]>>, "a")
add_call_chain(<<b,C,C,b,D,D,c,INTEGER,B>>)
logical_negation
logical_negation
disjunction
conjunction
int_value (10)
logical_negation
type_check
add_command("D", "c", <<["d", "BOOLEAN"], ["D", "D"], ["C", "BOOLEAN"], ["c", "INTEGER"], ["D", "INTEGER"], ["b", "INTEGER"], ["A", "BOOLEAN"]>>)
add_command("c", "B", <<["A", "INTEGER"], ["B", "D"]>>)
bool_value (false)
type_check
add_call_chain(<<D,C,a,c,B,A,INTEGER,C,C>>)
add_command("BOOLEAN", "BOOLEAN", <<["a", "INTEGER"], ["A", "A"], ["D", "e"], ["b", "INTEGER"]>>)
add_command("e", "B", <<["C", "b"], ["C", "INTEGER"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["B", "e"], ["C", "a"], ["B", "INTEGER"]>>)
type_check
add_query("A", "a", <<["D", "BOOLEAN"], ["a", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["d", "INTEGER"]>>, "c")
add_class(BOOLEAN)
add_call_chain(<<B,A,e,B,B,D,D,INTEGER>>)
add_call_chain(<<b,b,C,A>>)
add_query("C", "a", <<["e", "B"], ["b", "BOOLEAN"], ["A", "INTEGER"], ["c", "b"], ["b", "C"]>>, "e")
type_check
add_attribute("INTEGER", "a", "C")
int_value (25)
add_attribute("B", "e", "d")
add_command("A", "a", <<["e", "e"], ["D", "b"], ["A", "INTEGER"], ["B", "INTEGER"], ["e", "e"], ["B", "e"], ["a", "INTEGER"], ["C", "BOOLEAN"], ["A", "BOOLEAN"]>>)
add_class(b)
add_call_chain(<<d>>)
logical_negation
numerical_negation
numerical_negation
int_value (24)
numerical_negation
add_query("e", "b", <<["C", "BOOLEAN"], ["b", "D"]>>, "a")
add_query("B", "c", <<["D", "INTEGER"], ["c", "INTEGER"]>>, "BOOLEAN")
add_call_chain(<<A,C,a,C,d,c,INTEGER,b,C>>)
add_call_chain(<<D,D,d,b,BOOLEAN,C,BOOLEAN>>)
add_call_chain(<<B,INTEGER,C,B,C>>)
add_attribute("b", "e", "BOOLEAN")
add_query("d", "D", <<["d", "INTEGER"], ["A", "C"]>>, "d")
add_attribute("C", "BOOLEAN", "e")
add_call_chain(<<d,e,C,A,D,BOOLEAN>>)
add_query("C", "a", <<["A", "INTEGER"], ["D", "INTEGER"], ["A", "e"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["BOOLEAN", "C"]>>, "C")
add_query("b", "A", <<["A", "e"], ["A", "d"], ["e", "INTEGER"], ["b", "A"], ["b", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["D", "e"]>>, "BOOLEAN")
add_call_chain(<<d,C,C,A,d,D,a>>)
int_value (7)
int_value (49)
add_command("d", "e", <<["a", "c"], ["e", "INTEGER"], ["A", "INTEGER"]>>)
add_call_chain(<<c,C,D,d,D>>)
add_call_chain(<<D,C>>)
generate_java_code
logical_negation
logical_negation
equals
numerical_negation
numerical_negation
bool_value (false)
int_value (5)
add_command("e", "c", <<["A", "e"], ["D", "INTEGER"]>>)
add_call_chain(<<e,D,e,e,BOOLEAN,C,INTEGER,A>>)
add_call_chain(<<a>>)
add_class(INTEGER)
equals
add_class(b)
add_command("e", "D", <<["a", "INTEGER"], ["C", "INTEGER"], ["BOOLEAN", "INTEGER"], ["C", "INTEGER"], ["C", "BOOLEAN"]>>)
numerical_negation
numerical_negation
disjunction
bool_value (false)
add_attribute("C", "c", "b")
conjunction
add_command("D", "A", <<["A", "d"], ["e", "INTEGER"], ["D", "INTEGER"], ["a", "BOOLEAN"], ["e", "INTEGER"], ["b", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "BOOLEAN"]>>)
conjunction
add_call_chain(<<c,c,e,B,D,A,B>>)
add_class(B)
add_class(A)
add_attribute("d", "A", "BOOLEAN")
add_attribute("D", "B", "C")
add_call_chain(<<B,D,c,d,B,D,c>>)
add_call_chain(<<C,C>>)
add_call_chain(<<d,D,A,B,BOOLEAN,c>>)
add_class(A)
bool_value (true)
add_command("A", "D", <<["e", "A"], ["d", "INTEGER"], ["INTEGER", "BOOLEAN"], ["c", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "D"]>>)
add_query("B", "a", <<["a", "INTEGER"], ["A", "INTEGER"], ["A", "c"], ["c", "BOOLEAN"], ["D", "D"], ["D", "BOOLEAN"], ["c", "INTEGER"], ["D", "c"]>>, "b")
int_value (19)
add_attribute("C", "BOOLEAN", "BOOLEAN")
add_call_chain(<<INTEGER,A,D,A,A,C>>)
conjunction
add_command("C", "B", <<["D", "INTEGER"], ["D", "BOOLEAN"], ["d", "D"], ["d", "INTEGER"], ["B", "A"], ["e", "BOOLEAN"], ["A", "B"], ["D", "BOOLEAN"], ["b", "b"]>>)
add_command("B", "A", <<["D", "BOOLEAN"]>>)
logical_negation
add_query("c", "A", <<["B", "INTEGER"], ["A", "c"], ["A", "BOOLEAN"]>>, "BOOLEAN")
multiplication
logical_negation
add_command("A", "C", <<["d", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "B"], ["C", "INTEGER"], ["D", "INTEGER"], ["b", "c"], ["A", "B"], ["A", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>)
logical_negation
generate_java_code
add_call_chain(<<b,d>>)
subtraction
type_check
add_call_chain(<<B,C,A,e,BOOLEAN,a>>)
bool_value (false)
add_attribute("b", "C", "A")
add_attribute("BOOLEAN", "A", "INTEGER")
bool_value (true)
add_class(C)
int_value (17)
bool_value (true)
add_class(A)
int_value (31)
add_class(D)
add_query("A", "C", <<["B", "BOOLEAN"], ["e", "INTEGER"]>>, "b")
add_attribute("c", "c", "INTEGER")
multiplication
int_value (34)
conjunction
bool_value (true)
generate_java_code
add_class(D)
subtraction
add_call_chain(<<BOOLEAN,B,a,c,b,BOOLEAN,C,d>>)
type_check
add_attribute("a", "C", "INTEGER")
add_query("B", "b", <<["A", "INTEGER"], ["d", "BOOLEAN"], ["D", "e"], ["C", "INTEGER"], ["d", "BOOLEAN"]>>, "a")
logical_negation
