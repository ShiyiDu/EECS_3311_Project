add_attribute("B", "a", "a")
type_check
add_call_chain(<<C>>)
quotient
subtraction
add_call_chain(<<C,d,INTEGER,D,D,c>>)
bool_value (false)
logical_negation
add_call_chain(<<c,A,d>>)
numerical_negation
add_query("C", "b", <<["a", "BOOLEAN"], ["B", "INTEGER"], ["e", "BOOLEAN"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["e", "BOOLEAN"], ["c", "BOOLEAN"], ["e", "B"], ["c", "INTEGER"]>>, "C")
add_call_chain(<<e,b,C,B,C,D>>)
add_attribute("B", "D", "e")
add_call_chain(<<e,A,C,e,A,a,d>>)
subtraction
add_call_chain(<<d,b,A>>)
add_command("BOOLEAN", "B", <<["a", "INTEGER"], ["C", "e"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["b", "BOOLEAN"]>>)
add_call_chain(<<C,C,a>>)
add_query("e", "d", <<["B", "e"], ["D", "BOOLEAN"]>>, "A")
type_check
add_class(d)
multiplication
add_call_chain(<<b,d,A,A,C>>)
logical_negation
type_check
add_attribute("a", "D", "B")
add_call_chain(<<B,INTEGER,BOOLEAN,b,D>>)
generate_java_code
add_command("C", "A", <<["c", "INTEGER"], ["e", "INTEGER"]>>)
add_call_chain(<<B,e,B,B,c,e,c,c,B>>)
add_call_chain(<<B,c,BOOLEAN,a,c>>)
numerical_negation
add_class(B)
add_command("A", "A", <<["D", "INTEGER"], ["D", "c"], ["D", "BOOLEAN"], ["a", "c"], ["b", "BOOLEAN"], ["a", "B"], ["INTEGER", "INTEGER"]>>)
add_call_chain(<<b,c,d,C,e,D,c>>)
numerical_negation
add_call_chain(<<d,a>>)
add_call_chain(<<a,D,c,a,b,D,a>>)
add_attribute("INTEGER", "d", "INTEGER")
generate_java_code
add_command("D", "a", <<["e", "e"], ["a", "b"], ["a", "INTEGER"], ["e", "INTEGER"], ["d", "B"], ["C", "INTEGER"]>>)
quotient
greater_than
add_attribute("A", "d", "D")
int_value (16)
type_check
conjunction
add_call_chain(<<a,A,B,C>>)
numerical_negation
logical_negation
add_command("b", "B", <<["a", "INTEGER"], ["e", "BOOLEAN"], ["C", "b"], ["d", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["A", "INTEGER"], ["e", "INTEGER"], ["c", "INTEGER"]>>)
add_query("e", "C", <<["A", "INTEGER"], ["b", "BOOLEAN"], ["e", "INTEGER"], ["B", "D"], ["BOOLEAN", "INTEGER"], ["A", "INTEGER"], ["b", "BOOLEAN"], ["c", "e"]>>, "d")
generate_java_code
add_query("B", "e", <<["a", "INTEGER"], ["c", "BOOLEAN"]>>, "B")
generate_java_code
add_attribute("d", "B", "BOOLEAN")
add_query("a", "e", <<["D", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "INTEGER"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "BOOLEAN"]>>, "c")
add_attribute("A", "A", "BOOLEAN")
bool_value (true)
add_call_chain(<<C,A,C,BOOLEAN,A>>)
numerical_negation
add_call_chain(<<D>>)
disjunction
add_call_chain(<<e,C,c,c>>)
add_call_chain(<<c,e,C,a,A>>)
add_call_chain(<<D,c,b,B,a,A,e,INTEGER,d>>)
add_attribute("b", "b", "BOOLEAN")
conjunction
bool_value (true)
logical_negation
int_value (24)
add_query("A", "e", <<["b", "INTEGER"], ["A", "INTEGER"], ["C", "c"], ["A", "BOOLEAN"], ["e", "b"], ["e", "a"], ["INTEGER", "INTEGER"]>>, "A")
bool_value (true)
add_class(A)
add_call_chain(<<e,c,c,INTEGER,B,D,B,d>>)
int_value (37)
generate_java_code
int_value (16)
numerical_negation
add_class(A)
add_command("D", "D", <<["e", "D"], ["b", "INTEGER"]>>)
numerical_negation
greater_than
add_query("e", "A", <<["b", "A"], ["D", "e"], ["BOOLEAN", "d"], ["c", "BOOLEAN"], ["d", "BOOLEAN"], ["c", "c"], ["a", "C"]>>, "A")
add_attribute("B", "D", "b")
type_check
int_value (11)
add_class(B)
bool_value (false)
numerical_negation
add_attribute("C", "C", "BOOLEAN")
add_query("c", "INTEGER", <<["b", "INTEGER"], ["INTEGER", "INTEGER"], ["C", "INTEGER"], ["c", "INTEGER"], ["B", "e"]>>, "C")
conjunction
add_call_chain(<<e,BOOLEAN,A,d,d,INTEGER>>)
disjunction
int_value (49)
add_attribute("D", "D", "D")
bool_value (false)
numerical_negation
add_command("A", "a", <<["e", "INTEGER"], ["C", "a"], ["b", "c"]>>)
add_command("b", "a", <<["INTEGER", "a"], ["B", "BOOLEAN"], ["D", "d"], ["D", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "B"]>>)
add_query("C", "e", <<["INTEGER", "BOOLEAN"], ["C", "INTEGER"], ["INTEGER", "INTEGER"], ["c", "INTEGER"], ["B", "b"], ["a", "INTEGER"], ["b", "INTEGER"]>>, "A")
add_command("C", "B", <<["B", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "e"], ["B", "e"]>>)
add_call_chain(<<c,C,a,C,D>>)
addition
disjunction
disjunction
add_query("C", "b", <<["A", "BOOLEAN"], ["b", "INTEGER"], ["A", "INTEGER"], ["a", "BOOLEAN"], ["D", "INTEGER"], ["A", "BOOLEAN"]>>, "e")
add_attribute("B", "INTEGER", "INTEGER")
add_attribute("d", "b", "BOOLEAN")
add_class(c)
add_call_chain(<<D,A>>)
quotient
generate_java_code
int_value (5)
type_check
numerical_negation
quotient
add_command("C", "a", <<["b", "INTEGER"], ["a", "INTEGER"], ["b", "INTEGER"], ["A", "BOOLEAN"], ["D", "C"], ["B", "A"]>>)
add_attribute("b", "B", "INTEGER")
type_check
int_value (31)
add_call_chain(<<B,C,INTEGER,c,B,a,d,B>>)
add_class(C)
add_call_chain(<<C>>)
bool_value (true)
add_attribute("c", "c", "INTEGER")
numerical_negation
numerical_negation
add_class(B)
generate_java_code
add_query("b", "C", <<["d", "BOOLEAN"], ["b", "a"], ["b", "BOOLEAN"], ["e", "INTEGER"], ["a", "B"]>>, "D")
disjunction
add_command("A", "b", <<["d", "INTEGER"], ["B", "INTEGER"], ["D", "c"]>>)
add_class(D)
logical_negation
modulo
generate_java_code
add_attribute("a", "c", "BOOLEAN")
add_attribute("D", "e", "D")
generate_java_code
int_value (17)
greater_than
logical_negation
numerical_negation
bool_value (true)
add_query("B", "C", <<["B", "INTEGER"], ["a", "e"]>>, "C")
type_check
add_call_chain(<<C,D,d,a,C,A,e>>)
int_value (37)
add_call_chain(<<b,D,d>>)
add_command("BOOLEAN", "e", <<["D", "INTEGER"], ["b", "INTEGER"], ["e", "BOOLEAN"], ["b", "INTEGER"]>>)
int_value (31)
add_call_chain(<<C,c,e,INTEGER>>)
generate_java_code
type_check
add_attribute("a", "D", "BOOLEAN")
add_query("A", "D", <<["C", "INTEGER"], ["a", "INTEGER"], ["A", "INTEGER"], ["BOOLEAN", "d"], ["b", "BOOLEAN"], ["D", "BOOLEAN"], ["a", "B"]>>, "INTEGER")
add_class(BOOLEAN)
type_check
numerical_negation
type_check
add_query("B", "e", <<["B", "BOOLEAN"], ["D", "B"], ["b", "BOOLEAN"], ["b", "INTEGER"], ["e", "INTEGER"]>>, "A")
add_class(D)
generate_java_code
numerical_negation
quotient
modulo
generate_java_code
add_call_chain(<<A,A,d,a,B>>)
int_value (47)
add_query("C", "e", <<["D", "INTEGER"]>>, "C")
add_query("A", "A", <<["BOOLEAN", "INTEGER"], ["e", "INTEGER"], ["BOOLEAN", "INTEGER"], ["b", "BOOLEAN"]>>, "A")
conjunction
addition
add_command("a", "c", <<["C", "INTEGER"], ["c", "INTEGER"], ["a", "e"]>>)
add_call_chain(<<a,d,b,D,A>>)
add_command("b", "BOOLEAN", <<["B", "INTEGER"], ["b", "INTEGER"], ["a", "B"]>>)
add_attribute("C", "d", "B")
generate_java_code
generate_java_code
add_query("C", "e", <<["BOOLEAN", "C"], ["b", "e"], ["D", "b"], ["c", "D"], ["B", "INTEGER"]>>, "INTEGER")
add_query("A", "c", <<["b", "INTEGER"], ["C", "e"], ["BOOLEAN", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["c", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>, "d")
add_call_chain(<<A,a,B,B,B,e,C,B>>)
greater_than
add_attribute("B", "BOOLEAN", "BOOLEAN")
add_query("BOOLEAN", "A", <<["B", "INTEGER"], ["B", "INTEGER"], ["d", "INTEGER"], ["b", "INTEGER"], ["a", "BOOLEAN"], ["B", "INTEGER"], ["C", "BOOLEAN"], ["B", "a"]>>, "e")
add_command("c", "A", <<["e", "d"], ["C", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "INTEGER"], ["A", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["INTEGER", "INTEGER"], ["a", "c"]>>)
add_class(B)
add_call_chain(<<C>>)
int_value (1)
add_command("D", "a", <<["e", "INTEGER"], ["c", "INTEGER"], ["a", "BOOLEAN"], ["B", "BOOLEAN"], ["INTEGER", "B"], ["c", "INTEGER"]>>)
int_value (47)
add_query("A", "A", <<["B", "INTEGER"], ["a", "INTEGER"], ["d", "BOOLEAN"], ["b", "INTEGER"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "BOOLEAN"]>>, "c")
add_call_chain(<<e,A,B>>)
add_attribute("B", "a", "BOOLEAN")
int_value (48)
add_attribute("a", "INTEGER", "a")
int_value (26)
add_call_chain(<<D>>)
add_call_chain(<<b,b,c,A>>)
numerical_negation
add_command("d", "c", <<["C", "INTEGER"]>>)
add_call_chain(<<b,d,a>>)
numerical_negation
less_than
generate_java_code
numerical_negation
equals
add_command("b", "b", <<["D", "BOOLEAN"], ["D", "B"], ["C", "c"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "INTEGER"], ["B", "b"], ["B", "INTEGER"]>>)
bool_value (true)
type_check
add_query("D", "c", <<["A", "INTEGER"], ["a", "BOOLEAN"], ["BOOLEAN", "A"], ["b", "INTEGER"], ["d", "BOOLEAN"], ["d", "INTEGER"], ["A", "c"], ["d", "A"], ["C", "BOOLEAN"]>>, "d")
int_value (13)
add_attribute("C", "b", "INTEGER")
quotient
logical_negation
int_value (30)
logical_negation
int_value (15)
add_call_chain(<<B>>)
generate_java_code
add_class(B)
add_command("A", "A", <<["B", "INTEGER"], ["a", "BOOLEAN"]>>)
add_call_chain(<<d,e,e,B,B,D>>)
add_attribute("C", "A", "INTEGER")
logical_negation
logical_negation
add_class(d)
bool_value (true)
subtraction
add_call_chain(<<c,D,C,C,INTEGER,A>>)
add_call_chain(<<C,e,D,C>>)
add_class(b)
add_attribute("B", "BOOLEAN", "BOOLEAN")
type_check
bool_value (true)
add_attribute("c", "B", "INTEGER")
add_call_chain(<<a>>)
int_value (17)
add_query("B", "b", <<["A", "B"], ["C", "INTEGER"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["BOOLEAN", "b"]>>, "C")
add_call_chain(<<INTEGER,A,a,d,d,b>>)
add_class(A)
conjunction
logical_negation
add_class(B)
add_command("a", "b", <<["e", "INTEGER"], ["d", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "INTEGER"]>>)
add_call_chain(<<BOOLEAN,D,d,BOOLEAN,a,A,b>>)
int_value (31)
int_value (3)
logical_negation
conjunction
add_class(d)
add_attribute("b", "c", "BOOLEAN")
add_call_chain(<<a,C,e,e,D,c,c,D,a>>)
bool_value (false)
add_command("INTEGER", "b", <<["A", "c"]>>)
add_class(c)
add_attribute("a", "B", "D")
add_call_chain(<<a>>)
add_call_chain(<<C,d,a>>)
add_command("C", "INTEGER", <<["c", "BOOLEAN"], ["A", "A"], ["e", "BOOLEAN"], ["b", "INTEGER"], ["e", "b"], ["D", "INTEGER"], ["b", "INTEGER"], ["c", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
numerical_negation
add_class(a)
add_command("a", "d", <<["a", "INTEGER"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["B", "d"], ["C", "BOOLEAN"], ["C", "a"], ["INTEGER", "BOOLEAN"]>>)
add_attribute("A", "C", "INTEGER")
type_check
disjunction
add_call_chain(<<d,A,A,a,a,b,c>>)
add_query("A", "A", <<["D", "BOOLEAN"]>>, "BOOLEAN")
add_class(a)
int_value (40)
add_query("b", "b", <<["d", "INTEGER"], ["A", "BOOLEAN"], ["A", "B"], ["b", "B"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["a", "D"]>>, "D")
add_attribute("D", "c", "B")
add_query("e", "A", <<["b", "BOOLEAN"], ["c", "INTEGER"], ["c", "BOOLEAN"], ["d", "INTEGER"], ["A", "INTEGER"], ["B", "INTEGER"], ["B", "BOOLEAN"], ["C", "INTEGER"]>>, "A")
int_value (44)
logical_negation
equals
add_attribute("A", "C", "INTEGER")
add_call_chain(<<B,C,C,a,e,e,B,C,b>>)
int_value (24)
add_attribute("e", "A", "INTEGER")
add_query("b", "e", <<["c", "C"], ["D", "b"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["e", "b"]>>, "A")
add_query("A", "b", <<["b", "INTEGER"], ["C", "BOOLEAN"], ["d", "A"], ["a", "D"], ["D", "BOOLEAN"]>>, "A")
logical_negation
generate_java_code
int_value (30)
add_query("C", "INTEGER", <<["a", "D"], ["A", "INTEGER"], ["D", "C"], ["A", "BOOLEAN"], ["D", "INTEGER"], ["BOOLEAN", "D"], ["INTEGER", "BOOLEAN"], ["b", "BOOLEAN"]>>, "b")
int_value (39)
add_attribute("D", "c", "BOOLEAN")
subtraction
