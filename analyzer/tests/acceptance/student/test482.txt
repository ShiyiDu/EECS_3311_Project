add_call_chain(<<INTEGER,D>>)
add_query("b", "A", <<["d", "d"], ["d", "INTEGER"]>>, "c")
logical_negation
less_than
logical_negation
bool_value (false)
numerical_negation
logical_negation
disjunction
int_value (31)
add_command("INTEGER", "BOOLEAN", <<["c", "INTEGER"], ["D", "c"]>>)
int_value (22)
add_call_chain(<<B,INTEGER,c,a,a>>)
add_query("B", "b", <<["BOOLEAN", "INTEGER"], ["A", "d"]>>, "D")
type_check
add_attribute("a", "c", "BOOLEAN")
logical_negation
int_value (47)
generate_java_code
bool_value (true)
add_query("B", "D", <<["D", "BOOLEAN"]>>, "D")
add_call_chain(<<D,C,B,INTEGER,D,a,e>>)
int_value (27)
add_attribute("D", "B", "INTEGER")
bool_value (true)
quotient
bool_value (false)
add_call_chain(<<D,A,e,e,a,c,INTEGER,b>>)
disjunction
type_check
add_call_chain(<<b,c,D,D,A>>)
type_check
add_call_chain(<<d,d,c,B,A,c>>)
add_query("A", "b", <<["e", "BOOLEAN"], ["A", "INTEGER"], ["e", "INTEGER"], ["e", "B"], ["e", "BOOLEAN"], ["A", "C"]>>, "BOOLEAN")
bool_value (true)
type_check
add_query("C", "C", <<["b", "BOOLEAN"], ["b", "e"], ["c", "INTEGER"], ["INTEGER", "D"], ["d", "BOOLEAN"], ["C", "e"], ["C", "BOOLEAN"], ["b", "b"], ["d", "D"]>>, "b")
type_check
greater_than
numerical_negation
add_command("c", "D", <<["d", "INTEGER"]>>)
logical_negation
add_call_chain(<<d,d,C,C,A,A,c>>)
generate_java_code
bool_value (false)
disjunction
addition
add_command("b", "B", <<["A", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "INTEGER"], ["e", "INTEGER"]>>)
multiplication
add_call_chain(<<e,B,a,B>>)
add_class(e)
add_call_chain(<<d>>)
add_class(d)
bool_value (true)
greater_than
add_attribute("b", "A", "d")
add_call_chain(<<d>>)
bool_value (false)
add_command("b", "C", <<["A", "BOOLEAN"], ["b", "INTEGER"]>>)
subtraction
type_check
bool_value (false)
add_class(C)
add_query("e", "e", <<["A", "INTEGER"], ["a", "INTEGER"], ["a", "BOOLEAN"], ["a", "INTEGER"], ["INTEGER", "INTEGER"], ["C", "INTEGER"], ["INTEGER", "d"]>>, "e")
conjunction
add_attribute("d", "D", "BOOLEAN")
add_attribute("B", "e", "BOOLEAN")
add_query("INTEGER", "c", <<["BOOLEAN", "A"], ["D", "d"], ["C", "BOOLEAN"], ["BOOLEAN", "a"], ["B", "b"], ["C", "INTEGER"], ["a", "INTEGER"]>>, "e")
add_class(d)
add_call_chain(<<B,D,b>>)
add_class(B)
logical_negation
add_command("C", "C", <<["A", "INTEGER"], ["D", "BOOLEAN"], ["B", "INTEGER"]>>)
add_call_chain(<<B,a,A,d,c,D,A,B,BOOLEAN>>)
numerical_negation
add_call_chain(<<C,e,C,D,B,B>>)
int_value (47)
generate_java_code
add_query("A", "a", <<["e", "d"], ["C", "BOOLEAN"], ["d", "INTEGER"], ["A", "INTEGER"], ["C", "BOOLEAN"]>>, "B")
equals
add_attribute("b", "C", "a")
numerical_negation
add_call_chain(<<e,C>>)
add_command("c", "B", <<["d", "BOOLEAN"], ["A", "INTEGER"], ["b", "BOOLEAN"], ["C", "b"]>>)
int_value (28)
int_value (33)
add_command("c", "c", <<["BOOLEAN", "BOOLEAN"]>>)
bool_value (false)
bool_value (true)
int_value (10)
logical_negation
conjunction
multiplication
int_value (30)
equals
add_attribute("C", "A", "INTEGER")
add_query("c", "A", <<["a", "BOOLEAN"], ["e", "e"], ["a", "BOOLEAN"], ["D", "INTEGER"], ["b", "INTEGER"], ["B", "BOOLEAN"]>>, "C")
add_class(A)
add_query("D", "d", <<["d", "A"], ["d", "INTEGER"]>>, "C")
add_attribute("C", "B", "INTEGER")
add_call_chain(<<c>>)
type_check
logical_negation
logical_negation
int_value (31)
type_check
quotient
add_query("c", "e", <<["D", "INTEGER"], ["BOOLEAN", "INTEGER"], ["b", "C"], ["a", "INTEGER"], ["D", "A"], ["D", "BOOLEAN"], ["d", "e"]>>, "C")
add_call_chain(<<B,b,D,BOOLEAN,c,c,INTEGER>>)
add_attribute("A", "A", "INTEGER")
add_command("B", "b", <<["D", "INTEGER"]>>)
bool_value (true)
int_value (23)
add_command("B", "d", <<["A", "BOOLEAN"], ["e", "a"], ["a", "C"], ["B", "INTEGER"], ["A", "a"], ["A", "BOOLEAN"], ["D", "INTEGER"]>>)
add_query("A", "B", <<["BOOLEAN", "e"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "BOOLEAN"]>>, "BOOLEAN")
numerical_negation
add_call_chain(<<c>>)
add_call_chain(<<A,e,a,d>>)
multiplication
bool_value (false)
add_query("B", "C", <<["b", "BOOLEAN"], ["B", "b"], ["C", "INTEGER"]>>, "C")
add_call_chain(<<BOOLEAN,b,A,D,B,D,A,e,C>>)
int_value (38)
add_attribute("D", "d", "BOOLEAN")
add_class(BOOLEAN)
conjunction
add_class(C)
logical_negation
add_query("D", "a", <<["c", "INTEGER"]>>, "e")
add_query("C", "C", <<["a", "INTEGER"], ["C", "B"], ["A", "INTEGER"], ["b", "BOOLEAN"], ["e", "BOOLEAN"]>>, "A")
add_query("B", "C", <<["d", "INTEGER"], ["a", "INTEGER"], ["a", "D"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["a", "b"], ["c", "INTEGER"]>>, "A")
add_class(b)
add_query("c", "BOOLEAN", <<["d", "BOOLEAN"], ["D", "A"], ["B", "BOOLEAN"], ["e", "b"], ["e", "INTEGER"], ["A", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "INTEGER"], ["C", "INTEGER"]>>, "B")
add_query("e", "e", <<["BOOLEAN", "INTEGER"], ["c", "B"]>>, "e")
add_class(a)
logical_negation
addition
numerical_negation
bool_value (false)
add_call_chain(<<A,c,c,e,A>>)
logical_negation
generate_java_code
add_call_chain(<<c,B,d,a,e,B,d,A,d>>)
add_class(D)
add_call_chain(<<BOOLEAN,D,B,c,d>>)
add_command("B", "d", <<["B", "D"], ["D", "INTEGER"], ["D", "INTEGER"], ["e", "INTEGER"]>>)
bool_value (true)
add_query("A", "e", <<["INTEGER", "INTEGER"], ["C", "INTEGER"], ["d", "A"], ["b", "INTEGER"], ["A", "c"]>>, "e")
add_call_chain(<<A,d,D,e,C,d,d,D,a>>)
add_class(b)
int_value (38)
int_value (11)
add_command("INTEGER", "A", <<["e", "D"], ["BOOLEAN", "BOOLEAN"], ["B", "INTEGER"], ["A", "INTEGER"], ["A", "INTEGER"], ["b", "INTEGER"], ["b", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "c"]>>)
add_query("B", "e", <<["a", "BOOLEAN"], ["b", "INTEGER"], ["d", "BOOLEAN"], ["c", "e"], ["b", "BOOLEAN"], ["BOOLEAN", "A"], ["e", "BOOLEAN"]>>, "C")
add_call_chain(<<b,A,c,B,INTEGER,d,C,a,e>>)
quotient
numerical_negation
quotient
disjunction
subtraction
add_call_chain(<<e,a,e,C>>)
add_call_chain(<<D,D,BOOLEAN,d,e,B>>)
add_call_chain(<<e,A,b,A,a>>)
add_command("D", "C", <<["INTEGER", "BOOLEAN"], ["A", "INTEGER"], ["D", "BOOLEAN"]>>)
add_command("b", "INTEGER", <<["e", "BOOLEAN"], ["BOOLEAN", "e"], ["B", "b"]>>)
add_command("d", "A", <<["D", "INTEGER"], ["e", "c"], ["B", "INTEGER"]>>)
add_call_chain(<<B,B,b,INTEGER,A,D,b,A>>)
add_call_chain(<<BOOLEAN,D,d,e,BOOLEAN,C>>)
bool_value (false)
addition
add_command("BOOLEAN", "b", <<["d", "BOOLEAN"], ["C", "e"], ["B", "BOOLEAN"], ["D", "C"], ["a", "INTEGER"], ["B", "INTEGER"], ["B", "C"], ["BOOLEAN", "INTEGER"]>>)
add_call_chain(<<d,C,e,d,d,c,D>>)
add_attribute("BOOLEAN", "e", "INTEGER")
add_class(d)
add_class(D)
logical_negation
greater_than
add_attribute("c", "C", "BOOLEAN")
add_call_chain(<<c,A,b,e,C,C,D>>)
logical_negation
add_command("c", "D", <<["D", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "INTEGER"]>>)
modulo
add_command("d", "A", <<["INTEGER", "INTEGER"], ["c", "INTEGER"], ["e", "C"], ["e", "b"]>>)
add_attribute("d", "C", "d")
equals
add_call_chain(<<e>>)
type_check
int_value (47)
int_value (44)
add_class(c)
int_value (47)
int_value (14)
add_attribute("C", "D", "BOOLEAN")
int_value (2)
bool_value (true)
numerical_negation
add_command("A", "A", <<["C", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["d", "BOOLEAN"]>>)
bool_value (false)
add_class(b)
bool_value (false)
add_command("A", "C", <<["A", "c"], ["INTEGER", "D"], ["d", "d"], ["b", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "INTEGER"], ["INTEGER", "BOOLEAN"], ["A", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
bool_value (false)
numerical_negation
conjunction
add_command("D", "D", <<["c", "B"]>>)
numerical_negation
logical_negation
add_call_chain(<<c,B,C,e,d,BOOLEAN,a,c,C>>)
disjunction
add_call_chain(<<B,BOOLEAN,c,A,BOOLEAN,d,e,D,C>>)
int_value (24)
int_value (40)
add_attribute("A", "C", "BOOLEAN")
generate_java_code
add_attribute("c", "c", "b")
bool_value (false)
bool_value (false)
add_attribute("a", "c", "BOOLEAN")
int_value (48)
disjunction
add_attribute("d", "c", "D")
add_call_chain(<<d,A,B,A>>)
bool_value (true)
logical_negation
