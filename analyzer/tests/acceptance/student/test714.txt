add_call_chain(<<INTEGER,A,A,B,B,a>>)
type_check
add_query("d", "D", <<["a", "BOOLEAN"], ["d", "BOOLEAN"], ["INTEGER", "INTEGER"], ["A", "A"], ["INTEGER", "INTEGER"], ["A", "BOOLEAN"]>>, "C")
add_class(C)
addition
equals
add_query("a", "d", <<["C", "C"], ["a", "D"], ["b", "C"], ["a", "INTEGER"], ["b", "INTEGER"]>>, "C")
add_query("A", "B", <<["A", "INTEGER"], ["D", "BOOLEAN"], ["a", "e"], ["a", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["C", "B"]>>, "A")
add_query("d", "C", <<["e", "BOOLEAN"], ["e", "BOOLEAN"]>>, "d")
int_value (35)
add_call_chain(<<B,B,B,c,BOOLEAN,D,A>>)
add_attribute("A", "INTEGER", "INTEGER")
add_class(a)
add_attribute("a", "A", "BOOLEAN")
add_call_chain(<<INTEGER>>)
add_call_chain(<<D,b,B,A>>)
bool_value (false)
generate_java_code
conjunction
add_attribute("e", "b", "INTEGER")
logical_negation
add_command("d", "A", <<["e", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "C"], ["D", "D"]>>)
generate_java_code
generate_java_code
logical_negation
add_attribute("A", "b", "INTEGER")
disjunction
conjunction
add_call_chain(<<C,a,A,B,c,B,A,b>>)
add_call_chain(<<D,c,D>>)
int_value (19)
type_check
add_query("e", "d", <<["D", "D"], ["C", "INTEGER"]>>, "b")
conjunction
add_query("B", "A", <<["BOOLEAN", "BOOLEAN"], ["B", "INTEGER"], ["c", "BOOLEAN"], ["d", "BOOLEAN"]>>, "B")
add_query("b", "C", <<["e", "e"], ["c", "BOOLEAN"], ["C", "BOOLEAN"]>>, "a")
add_command("B", "d", <<["A", "INTEGER"], ["C", "BOOLEAN"]>>)
int_value (22)
logical_negation
add_query("C", "C", <<["a", "a"], ["A", "INTEGER"]>>, "D")
subtraction
add_call_chain(<<a,C,a,C,A,D,D,C,BOOLEAN>>)
numerical_negation
int_value (5)
logical_negation
bool_value (true)
type_check
type_check
add_query("e", "A", <<["C", "INTEGER"], ["D", "BOOLEAN"], ["c", "INTEGER"], ["C", "INTEGER"], ["INTEGER", "BOOLEAN"], ["C", "INTEGER"]>>, "b")
type_check
addition
bool_value (false)
add_query("d", "D", <<["b", "INTEGER"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["a", "BOOLEAN"], ["A", "INTEGER"], ["BOOLEAN", "INTEGER"], ["D", "BOOLEAN"], ["a", "BOOLEAN"]>>, "b")
logical_negation
add_call_chain(<<D,B>>)
add_call_chain(<<BOOLEAN,D,D,A,D,d>>)
add_command("D", "A", <<["D", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "INTEGER"]>>)
add_command("C", "C", <<["BOOLEAN", "INTEGER"], ["B", "INTEGER"], ["a", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["e", "INTEGER"], ["C", "INTEGER"]>>)
numerical_negation
add_call_chain(<<D>>)
bool_value (true)
bool_value (true)
add_query("D", "A", <<["b", "BOOLEAN"], ["b", "d"], ["C", "BOOLEAN"], ["a", "BOOLEAN"]>>, "a")
add_command("INTEGER", "e", <<["A", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["A", "BOOLEAN"], ["D", "INTEGER"], ["c", "INTEGER"], ["C", "INTEGER"], ["INTEGER", "INTEGER"]>>)
add_command("d", "A", <<["D", "A"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["c", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["INTEGER", "c"], ["d", "BOOLEAN"]>>)
int_value (27)
generate_java_code
logical_negation
add_class(C)
add_command("D", "c", <<["b", "d"], ["a", "INTEGER"], ["B", "INTEGER"], ["BOOLEAN", "INTEGER"], ["d", "BOOLEAN"], ["D", "A"], ["C", "BOOLEAN"], ["a", "INTEGER"]>>)
add_attribute("D", "A", "BOOLEAN")
add_query("INTEGER", "a", <<["a", "INTEGER"], ["A", "BOOLEAN"], ["D", "b"], ["d", "BOOLEAN"], ["d", "C"]>>, "a")
add_query("c", "C", <<["D", "INTEGER"], ["c", "BOOLEAN"], ["e", "C"], ["C", "BOOLEAN"], ["e", "BOOLEAN"], ["c", "C"], ["b", "BOOLEAN"]>>, "c")
add_class(BOOLEAN)
multiplication
add_attribute("INTEGER", "c", "INTEGER")
int_value (38)
subtraction
add_attribute("b", "d", "INTEGER")
add_call_chain(<<BOOLEAN,D,B,e>>)
add_command("D", "b", <<["a", "A"], ["c", "INTEGER"], ["C", "INTEGER"], ["INTEGER", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "BOOLEAN"], ["e", "e"], ["C", "B"]>>)
add_query("C", "a", <<["B", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "e"], ["b", "INTEGER"], ["D", "INTEGER"], ["e", "d"], ["b", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["B", "BOOLEAN"]>>, "c")
bool_value (true)
addition
numerical_negation
add_query("d", "A", <<["BOOLEAN", "INTEGER"], ["c", "INTEGER"], ["b", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["A", "INTEGER"], ["D", "BOOLEAN"]>>, "b")
equals
bool_value (true)
add_call_chain(<<A,C,B,b,B,B,A,a>>)
logical_negation
add_command("a", "INTEGER", <<["c", "INTEGER"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["INTEGER", "BOOLEAN"], ["D", "INTEGER"], ["e", "BOOLEAN"], ["e", "INTEGER"], ["A", "c"], ["a", "e"]>>)
add_attribute("C", "c", "BOOLEAN")
add_command("C", "c", <<["C", "INTEGER"], ["A", "C"], ["e", "BOOLEAN"], ["c", "BOOLEAN"], ["a", "c"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["B", "INTEGER"]>>)
int_value (29)
add_call_chain(<<d,D,d,D,d,B,BOOLEAN,D,e>>)
add_class(B)
add_command("b", "b", <<["d", "INTEGER"], ["b", "BOOLEAN"]>>)
add_query("BOOLEAN", "A", <<["d", "BOOLEAN"], ["C", "D"], ["A", "a"], ["D", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "C"], ["B", "d"]>>, "INTEGER")
add_class(INTEGER)
type_check
int_value (26)
add_query("D", "D", <<["D", "B"], ["INTEGER", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["b", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "b"], ["b", "BOOLEAN"], ["b", "BOOLEAN"]>>, "d")
add_class(C)
add_query("INTEGER", "e", <<["b", "D"], ["C", "D"], ["A", "BOOLEAN"], ["A", "B"], ["e", "D"]>>, "C")
int_value (38)
numerical_negation
int_value (6)
generate_java_code
add_call_chain(<<D,B,d,a,A,e,e,A,INTEGER>>)
add_call_chain(<<D,c>>)
int_value (49)
add_call_chain(<<INTEGER,a>>)
add_query("C", "A", <<["D", "d"], ["b", "C"], ["INTEGER", "BOOLEAN"], ["b", "INTEGER"], ["A", "BOOLEAN"], ["b", "INTEGER"], ["d", "INTEGER"], ["c", "INTEGER"], ["b", "INTEGER"]>>, "A")
add_call_chain(<<D,e,D,b>>)
logical_negation
numerical_negation
modulo
numerical_negation
int_value (41)
add_class(A)
logical_negation
add_class(C)
add_attribute("D", "b", "C")
numerical_negation
add_query("B", "d", <<["INTEGER", "BOOLEAN"], ["b", "B"], ["b", "INTEGER"], ["d", "BOOLEAN"], ["c", "INTEGER"], ["B", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "B"], ["e", "INTEGER"]>>, "b")
add_attribute("B", "D", "BOOLEAN")
add_command("D", "C", <<["b", "C"], ["b", "INTEGER"], ["A", "INTEGER"], ["A", "INTEGER"], ["C", "BOOLEAN"]>>)
add_call_chain(<<A,d,b,c>>)
numerical_negation
add_query("e", "D", <<["e", "BOOLEAN"], ["D", "INTEGER"], ["A", "BOOLEAN"]>>, "d")
add_class(c)
add_command("a", "A", <<["b", "INTEGER"], ["c", "C"], ["D", "INTEGER"], ["B", "BOOLEAN"], ["A", "D"]>>)
add_command("C", "A", <<["B", "INTEGER"], ["e", "c"]>>)
disjunction
type_check
int_value (28)
bool_value (true)
add_call_chain(<<A,D,b>>)
bool_value (false)
add_query("b", "d", <<["BOOLEAN", "A"], ["C", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["b", "BOOLEAN"], ["d", "INTEGER"]>>, "B")
generate_java_code
equals
logical_negation
add_command("B", "C", <<["B", "e"], ["c", "INTEGER"], ["b", "INTEGER"], ["c", "INTEGER"], ["B", "INTEGER"], ["B", "BOOLEAN"]>>)
int_value (37)
add_call_chain(<<d,A,C,B,c,b,a,D>>)
numerical_negation
bool_value (false)
subtraction
add_attribute("A", "INTEGER", "INTEGER")
add_attribute("D", "A", "BOOLEAN")
generate_java_code
add_class(d)
add_attribute("C", "C", "BOOLEAN")
add_query("e", "a", <<["a", "INTEGER"], ["A", "INTEGER"], ["a", "A"], ["B", "INTEGER"], ["a", "a"]>>, "d")
type_check
int_value (37)
add_class(D)
int_value (42)
add_call_chain(<<b>>)
add_command("C", "d", <<["e", "D"], ["BOOLEAN", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "BOOLEAN"]>>)
add_command("A", "A", <<["C", "BOOLEAN"], ["a", "INTEGER"]>>)
add_query("D", "d", <<["D", "BOOLEAN"], ["a", "A"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["b", "b"], ["d", "B"]>>, "c")
generate_java_code
numerical_negation
generate_java_code
disjunction
int_value (13)
numerical_negation
add_call_chain(<<d,D,A,B,c>>)
generate_java_code
int_value (16)
int_value (15)
add_call_chain(<<A,C,C,A,BOOLEAN>>)
less_than
add_query("D", "INTEGER", <<["B", "BOOLEAN"], ["A", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["d", "INTEGER"], ["d", "INTEGER"], ["d", "D"]>>, "BOOLEAN")
int_value (7)
add_class(a)
int_value (31)
type_check
int_value (10)
addition
logical_negation
generate_java_code
modulo
add_attribute("A", "D", "BOOLEAN")
add_command("D", "a", <<["D", "INTEGER"]>>)
add_attribute("C", "B", "INTEGER")
add_attribute("e", "a", "INTEGER")
disjunction
type_check
add_call_chain(<<a>>)
logical_negation
bool_value (true)
bool_value (true)
equals
add_attribute("e", "C", "BOOLEAN")
logical_negation
bool_value (true)
add_command("D", "d", <<["B", "INTEGER"], ["e", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["a", "b"]>>)
add_command("b", "D", <<["INTEGER", "BOOLEAN"], ["e", "INTEGER"], ["INTEGER", "A"], ["A", "INTEGER"], ["D", "d"]>>)
add_attribute("b", "a", "INTEGER")
add_attribute("b", "INTEGER", "INTEGER")
add_class(BOOLEAN)
add_call_chain(<<e,C,d,a>>)
add_command("d", "c", <<["B", "BOOLEAN"], ["d", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "INTEGER"]>>)
add_query("INTEGER", "C", <<["d", "BOOLEAN"], ["e", "BOOLEAN"]>>, "b")
generate_java_code
logical_negation
add_query("b", "a", <<["a", "a"], ["C", "INTEGER"], ["a", "INTEGER"], ["e", "INTEGER"]>>, "e")
greater_than
add_command("A", "C", <<["INTEGER", "D"], ["D", "D"], ["D", "b"], ["a", "INTEGER"], ["A", "INTEGER"], ["INTEGER", "BOOLEAN"], ["A", "D"]>>)
add_call_chain(<<B,b>>)
add_call_chain(<<a,D,A,INTEGER,INTEGER,C,a,B,a>>)
logical_negation
add_attribute("A", "a", "d")
add_query("D", "B", <<["a", "INTEGER"], ["B", "BOOLEAN"], ["c", "D"], ["c", "INTEGER"], ["INTEGER", "a"], ["d", "d"], ["A", "D"], ["a", "D"]>>, "INTEGER")
disjunction
add_command("INTEGER", "D", <<["e", "a"], ["BOOLEAN", "INTEGER"]>>)
greater_than
generate_java_code
disjunction
bool_value (true)
addition
add_query("B", "D", <<["B", "d"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["e", "INTEGER"]>>, "b")
generate_java_code
add_attribute("b", "B", "INTEGER")
bool_value (false)
add_call_chain(<<d,d,A,C,a,C,c,a>>)
numerical_negation
disjunction
add_command("C", "C", <<["a", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "INTEGER"]>>)
logical_negation
logical_negation
int_value (24)
add_call_chain(<<INTEGER,BOOLEAN,a,c,a>>)
add_query("D", "b", <<["d", "BOOLEAN"], ["c", "INTEGER"], ["D", "C"], ["b", "A"], ["D", "e"], ["e", "BOOLEAN"], ["a", "INTEGER"], ["a", "e"]>>, "e")
numerical_negation
add_call_chain(<<a,D,b,D,C,c>>)
add_call_chain(<<a,D>>)
add_call_chain(<<d,b,c,b,c,D,b,a>>)
add_command("A", "C", <<["C", "B"], ["c", "d"], ["e", "INTEGER"], ["c", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "INTEGER"]>>)
generate_java_code
add_command("d", "BOOLEAN", <<["A", "b"], ["A", "C"], ["C", "BOOLEAN"], ["b", "C"], ["c", "b"], ["BOOLEAN", "INTEGER"], ["D", "BOOLEAN"], ["a", "B"]>>)
add_query("A", "b", <<["b", "BOOLEAN"], ["B", "A"]>>, "INTEGER")
disjunction
numerical_negation
disjunction
bool_value (false)
bool_value (true)
add_call_chain(<<c,C,INTEGER>>)
add_call_chain(<<e,D,C,D,C,b,D,D>>)
logical_negation
multiplication
int_value (48)
add_query("D", "c", <<["d", "BOOLEAN"], ["c", "INTEGER"], ["C", "d"], ["c", "BOOLEAN"], ["e", "INTEGER"], ["c", "D"]>>, "a")
add_class(d)
add_attribute("C", "a", "A")
bool_value (false)
add_call_chain(<<d,B,B,A,e>>)
add_call_chain(<<a,d,b,D>>)
quotient
add_class(d)
numerical_negation
numerical_negation
