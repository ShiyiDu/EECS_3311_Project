add_class(BOOLEAN)
addition
bool_value (true)
bool_value (false)
disjunction
add_call_chain(<<B,b,D,D>>)
add_attribute("BOOLEAN", "a", "BOOLEAN")
logical_negation
add_call_chain(<<b,d>>)
add_command("INTEGER", "D", <<["D", "BOOLEAN"], ["A", "INTEGER"], ["a", "INTEGER"], ["C", "C"], ["b", "d"], ["e", "BOOLEAN"], ["C", "c"], ["A", "BOOLEAN"]>>)
logical_negation
add_query("e", "c", <<["A", "BOOLEAN"], ["d", "B"], ["d", "INTEGER"]>>, "e")
add_command("A", "d", <<["C", "INTEGER"], ["B", "d"], ["B", "C"], ["d", "INTEGER"], ["e", "INTEGER"], ["b", "d"], ["B", "INTEGER"]>>)
logical_negation
add_call_chain(<<a,e,d,d,B,BOOLEAN,D,a>>)
add_command("c", "e", <<["C", "a"], ["A", "B"], ["c", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "C"], ["e", "BOOLEAN"]>>)
add_command("INTEGER", "d", <<["B", "a"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["B", "BOOLEAN"], ["c", "BOOLEAN"]>>)
add_call_chain(<<B,D>>)
generate_java_code
add_attribute("D", "a", "INTEGER")
add_query("BOOLEAN", "INTEGER", <<["c", "B"], ["D", "e"], ["D", "INTEGER"], ["e", "INTEGER"], ["A", "C"], ["e", "BOOLEAN"]>>, "c")
numerical_negation
numerical_negation
bool_value (false)
add_call_chain(<<B,D,c,A,A>>)
type_check
bool_value (false)
add_command("C", "D", <<["A", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "INTEGER"], ["D", "INTEGER"], ["d", "BOOLEAN"], ["e", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "b"], ["d", "BOOLEAN"]>>)
add_attribute("A", "a", "INTEGER")
add_attribute("A", "C", "B")
add_call_chain(<<D,a,C,a,c,b,a>>)
bool_value (false)
add_command("c", "c", <<["C", "INTEGER"]>>)
add_class(e)
conjunction
add_attribute("C", "c", "INTEGER")
modulo
add_command("INTEGER", "B", <<["C", "INTEGER"], ["d", "A"], ["D", "INTEGER"], ["e", "b"], ["e", "C"], ["C", "INTEGER"], ["b", "INTEGER"], ["b", "b"], ["a", "C"]>>)
add_call_chain(<<C,C,b,e,A,INTEGER>>)
logical_negation
bool_value (false)
bool_value (false)
logical_negation
generate_java_code
int_value (15)
greater_than
add_call_chain(<<D,BOOLEAN,D,C>>)
numerical_negation
disjunction
add_command("B", "a", <<["b", "BOOLEAN"]>>)
add_call_chain(<<b,B,B,C,c,INTEGER,D>>)
int_value (18)
add_attribute("A", "A", "b")
add_call_chain(<<A,c,B,D,c,e,e,B>>)
add_query("c", "e", <<["a", "a"], ["C", "c"], ["D", "B"], ["C", "BOOLEAN"], ["C", "b"], ["C", "a"], ["d", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "a"]>>, "C")
add_call_chain(<<C,C,a,d,c,d,d,INTEGER,A>>)
generate_java_code
add_attribute("C", "b", "BOOLEAN")
type_check
int_value (11)
bool_value (false)
conjunction
bool_value (false)
add_attribute("a", "B", "INTEGER")
bool_value (true)
logical_negation
int_value (47)
bool_value (false)
int_value (15)
add_attribute("D", "e", "A")
add_command("BOOLEAN", "INTEGER", <<["d", "BOOLEAN"], ["d", "INTEGER"], ["c", "INTEGER"], ["C", "BOOLEAN"], ["D", "INTEGER"]>>)
conjunction
bool_value (false)
conjunction
int_value (35)
add_call_chain(<<A,d,c,a,e,d>>)
add_attribute("BOOLEAN", "C", "BOOLEAN")
equals
int_value (36)
add_command("B", "c", <<["b", "INTEGER"], ["D", "INTEGER"], ["c", "D"], ["D", "INTEGER"]>>)
logical_negation
add_attribute("b", "b", "INTEGER")
bool_value (false)
add_call_chain(<<c,b,C,B,D,B,B,A,D>>)
add_query("C", "BOOLEAN", <<["INTEGER", "INTEGER"], ["a", "INTEGER"]>>, "B")
add_call_chain(<<d,B,b>>)
less_than
logical_negation
add_call_chain(<<C,e>>)
generate_java_code
numerical_negation
add_attribute("b", "BOOLEAN", "C")
less_than
add_attribute("e", "INTEGER", "INTEGER")
numerical_negation
add_call_chain(<<e,C,d,B>>)
add_call_chain(<<e,B,c,c,b,e>>)
generate_java_code
add_query("d", "b", <<["A", "INTEGER"], ["B", "BOOLEAN"], ["c", "e"], ["A", "BOOLEAN"], ["d", "INTEGER"], ["c", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "BOOLEAN"]>>, "b")
add_call_chain(<<b,a,C,e,B,D,A,A>>)
add_command("B", "B", <<["A", "INTEGER"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "B"]>>)
add_call_chain(<<d,e,a,d,BOOLEAN>>)
add_call_chain(<<a,A,a,D,b,d,e,A>>)
add_call_chain(<<C,D,e>>)
add_call_chain(<<a,c,A,B,C>>)
logical_negation
equals
add_call_chain(<<INTEGER,B,c,INTEGER,b,C>>)
bool_value (true)
add_command("D", "B", <<["c", "INTEGER"], ["C", "INTEGER"], ["BOOLEAN", "INTEGER"], ["C", "INTEGER"], ["e", "A"]>>)
type_check
add_call_chain(<<a,BOOLEAN,A,b,d,BOOLEAN,B>>)
logical_negation
add_call_chain(<<BOOLEAN,d,b,e>>)
add_query("B", "B", <<["A", "A"]>>, "D")
type_check
int_value (39)
int_value (36)
less_than
numerical_negation
add_command("B", "D", <<["e", "BOOLEAN"], ["D", "BOOLEAN"]>>)
bool_value (true)
add_query("b", "A", <<["c", "INTEGER"], ["a", "B"], ["a", "INTEGER"], ["INTEGER", "b"], ["b", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "INTEGER"]>>, "a")
add_call_chain(<<BOOLEAN,a,A,a,B>>)
logical_negation
subtraction
add_call_chain(<<B,D,A,D,A,INTEGER,B,B>>)
int_value (8)
bool_value (false)
conjunction
add_class(a)
add_attribute("C", "a", "BOOLEAN")
less_than
bool_value (true)
add_attribute("C", "B", "INTEGER")
addition
less_than
logical_negation
add_query("c", "C", <<["D", "C"], ["b", "a"], ["d", "BOOLEAN"], ["e", "INTEGER"], ["D", "e"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["A", "BOOLEAN"]>>, "C")
add_query("e", "e", <<["A", "BOOLEAN"], ["a", "d"], ["BOOLEAN", "BOOLEAN"], ["B", "BOOLEAN"]>>, "b")
add_call_chain(<<D,B,B,C>>)
add_call_chain(<<D,INTEGER>>)
add_call_chain(<<D,A>>)
bool_value (false)
less_than
less_than
add_command("e", "A", <<["D", "INTEGER"], ["C", "b"], ["a", "c"], ["D", "a"], ["c", "c"], ["C", "INTEGER"], ["e", "c"], ["b", "BOOLEAN"]>>)
bool_value (true)
add_command("a", "A", <<["A", "INTEGER"], ["BOOLEAN", "D"], ["D", "e"], ["INTEGER", "d"], ["B", "BOOLEAN"], ["INTEGER", "C"]>>)
add_command("A", "A", <<["c", "BOOLEAN"], ["a", "BOOLEAN"]>>)
add_command("e", "c", <<["e", "INTEGER"], ["C", "BOOLEAN"], ["b", "a"], ["a", "INTEGER"], ["A", "INTEGER"], ["e", "BOOLEAN"]>>)
add_attribute("c", "B", "b")
numerical_negation
logical_negation
add_call_chain(<<C,c,b,C,b,D>>)
add_attribute("a", "C", "B")
type_check
add_attribute("D", "b", "B")
add_command("e", "c", <<["a", "INTEGER"], ["C", "INTEGER"], ["A", "INTEGER"], ["BOOLEAN", "INTEGER"]>>)
add_call_chain(<<C,A,B,C>>)
add_query("C", "e", <<["d", "BOOLEAN"], ["D", "BOOLEAN"], ["d", "A"]>>, "e")
bool_value (false)
type_check
numerical_negation
add_command("D", "C", <<["e", "BOOLEAN"], ["C", "B"]>>)
add_call_chain(<<e,B,B,D>>)
type_check
add_attribute("BOOLEAN", "D", "BOOLEAN")
disjunction
modulo
generate_java_code
add_class(a)
add_query("BOOLEAN", "b", <<["b", "d"], ["D", "INTEGER"], ["D", "INTEGER"], ["C", "INTEGER"], ["d", "INTEGER"]>>, "C")
type_check
bool_value (false)
multiplication
modulo
type_check
add_class(D)
add_call_chain(<<BOOLEAN,d,b,C,d,b,A,d>>)
add_call_chain(<<C,C,a,d,D,d>>)
add_query("c", "D", <<["B", "INTEGER"], ["A", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "INTEGER"], ["c", "C"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["B", "INTEGER"]>>, "b")
equals
equals
logical_negation
add_command("d", "INTEGER", <<["c", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["d", "INTEGER"], ["b", "INTEGER"], ["c", "INTEGER"], ["b", "BOOLEAN"]>>)
add_call_chain(<<D,BOOLEAN,d,B,BOOLEAN,d,C,C,d>>)
less_than
add_call_chain(<<b,BOOLEAN>>)
add_call_chain(<<BOOLEAN,c,BOOLEAN,D>>)
add_attribute("D", "e", "C")
int_value (25)
add_command("d", "C", <<["C", "BOOLEAN"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["c", "c"], ["B", "BOOLEAN"]>>)
add_attribute("B", "C", "d")
add_query("C", "B", <<["A", "INTEGER"], ["d", "INTEGER"], ["b", "INTEGER"], ["b", "c"]>>, "a")
add_query("e", "A", <<["D", "INTEGER"], ["D", "INTEGER"], ["a", "INTEGER"], ["e", "INTEGER"], ["e", "BOOLEAN"], ["a", "D"], ["A", "e"], ["b", "a"]>>, "C")
add_call_chain(<<INTEGER,a,d>>)
add_command("B", "D", <<["C", "BOOLEAN"], ["e", "C"], ["e", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "b"]>>)
add_query("C", "A", <<["a", "BOOLEAN"], ["B", "C"], ["b", "INTEGER"]>>, "a")
add_class(A)
add_call_chain(<<d,b,a,BOOLEAN,e,d,d,BOOLEAN>>)
logical_negation
add_command("d", "c", <<["A", "D"], ["D", "BOOLEAN"], ["c", "BOOLEAN"], ["b", "INTEGER"], ["e", "d"], ["d", "INTEGER"], ["C", "BOOLEAN"], ["b", "INTEGER"]>>)
generate_java_code
greater_than
modulo
add_attribute("c", "b", "INTEGER")
add_command("d", "BOOLEAN", <<["b", "BOOLEAN"]>>)
add_query("BOOLEAN", "C", <<["D", "BOOLEAN"], ["A", "BOOLEAN"], ["BOOLEAN", "d"], ["C", "e"], ["D", "d"], ["a", "INTEGER"], ["B", "BOOLEAN"], ["c", "BOOLEAN"]>>, "D")
disjunction
numerical_negation
add_query("D", "A", <<["C", "INTEGER"], ["A", "D"], ["A", "c"], ["D", "BOOLEAN"]>>, "B")
add_call_chain(<<d,B,INTEGER,a,e,D>>)
int_value (12)
generate_java_code
generate_java_code
add_command("c", "BOOLEAN", <<["D", "BOOLEAN"], ["C", "INTEGER"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["e", "b"]>>)
int_value (36)
add_call_chain(<<B,c,e,a>>)
add_call_chain(<<b,C,e,D,B>>)
add_attribute("d", "D", "INTEGER")
add_command("D", "INTEGER", <<["INTEGER", "BOOLEAN"]>>)
add_call_chain(<<e,e>>)
add_call_chain(<<e,INTEGER,e,B,D,B,d,a,e>>)
add_call_chain(<<c>>)
add_call_chain(<<D,a,B,A,c,C>>)
add_query("D", "d", <<["D", "INTEGER"], ["BOOLEAN", "INTEGER"], ["D", "INTEGER"], ["e", "INTEGER"], ["b", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "INTEGER"]>>, "c")
conjunction
add_attribute("b", "INTEGER", "INTEGER")
add_query("e", "D", <<["d", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "INTEGER"], ["a", "INTEGER"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["d", "A"]>>, "C")
bool_value (true)
