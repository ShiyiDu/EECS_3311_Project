add_query("a", "d", <<["B", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["e", "INTEGER"], ["d", "BOOLEAN"], ["BOOLEAN", "b"], ["A", "BOOLEAN"]>>, "BOOLEAN")
generate_java_code
bool_value (true)
int_value (26)
equals
add_class(C)
numerical_negation
multiplication
subtraction
greater_than
type_check
add_attribute("D", "b", "INTEGER")
type_check
add_command("e", "A", <<["a", "BOOLEAN"]>>)
add_call_chain(<<b,A,B,c,a,C>>)
add_query("C", "B", <<["e", "INTEGER"], ["c", "B"], ["A", "A"], ["BOOLEAN", "BOOLEAN"], ["c", "b"], ["B", "INTEGER"], ["a", "BOOLEAN"]>>, "c")
add_call_chain(<<b,d,D,B,e,c>>)
type_check
add_call_chain(<<A,e,d,B,BOOLEAN,c,e>>)
add_query("B", "d", <<["a", "INTEGER"], ["A", "BOOLEAN"], ["d", "B"], ["C", "BOOLEAN"], ["e", "BOOLEAN"]>>, "C")
add_command("a", "b", <<["D", "BOOLEAN"]>>)
quotient
modulo
numerical_negation
add_class(INTEGER)
bool_value (true)
add_attribute("b", "c", "BOOLEAN")
add_command("d", "A", <<["A", "BOOLEAN"]>>)
bool_value (true)
add_call_chain(<<D,c,d,C,A,A>>)
add_query("C", "A", <<["e", "d"], ["INTEGER", "INTEGER"]>>, "A")
add_call_chain(<<C,B,c,b,A,b>>)
add_call_chain(<<d,D,C,A>>)
generate_java_code
add_call_chain(<<d>>)
add_class(a)
bool_value (true)
logical_negation
add_call_chain(<<INTEGER>>)
add_query("d", "BOOLEAN", <<["c", "a"], ["a", "INTEGER"], ["B", "c"], ["B", "C"], ["e", "BOOLEAN"], ["c", "INTEGER"]>>, "b")
numerical_negation
less_than
add_call_chain(<<B,C>>)
disjunction
add_command("INTEGER", "BOOLEAN", <<["c", "BOOLEAN"]>>)
add_query("B", "B", <<["c", "INTEGER"], ["d", "e"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "INTEGER"]>>, "C")
add_command("b", "B", <<["d", "INTEGER"], ["A", "INTEGER"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "d"]>>)
conjunction
int_value (13)
add_command("D", "B", <<["B", "INTEGER"], ["e", "INTEGER"], ["e", "INTEGER"]>>)
bool_value (false)
add_call_chain(<<B,c,B,BOOLEAN>>)
logical_negation
add_command("A", "C", <<["a", "INTEGER"], ["b", "A"], ["c", "BOOLEAN"]>>)
add_attribute("A", "D", "BOOLEAN")
add_call_chain(<<a,C,A,B,A,b,a,C,b>>)
addition
add_attribute("c", "d", "BOOLEAN")
subtraction
add_query("A", "d", <<["A", "BOOLEAN"], ["B", "INTEGER"], ["B", "INTEGER"], ["b", "INTEGER"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["c", "BOOLEAN"], ["C", "A"]>>, "a")
int_value (22)
type_check
add_call_chain(<<C>>)
logical_negation
add_class(d)
numerical_negation
add_call_chain(<<B,C,INTEGER,B>>)
int_value (45)
generate_java_code
add_command("C", "INTEGER", <<["B", "INTEGER"], ["C", "e"], ["B", "INTEGER"], ["A", "c"], ["BOOLEAN", "D"], ["a", "INTEGER"], ["A", "INTEGER"]>>)
add_class(B)
type_check
add_call_chain(<<A,INTEGER,b,c>>)
add_command("c", "b", <<["c", "BOOLEAN"], ["a", "C"], ["b", "INTEGER"], ["e", "b"], ["C", "C"], ["C", "INTEGER"], ["INTEGER", "INTEGER"]>>)
add_attribute("D", "e", "c")
numerical_negation
conjunction
add_command("B", "b", <<["BOOLEAN", "BOOLEAN"], ["C", "A"], ["a", "INTEGER"], ["D", "INTEGER"], ["B", "c"]>>)
add_class(a)
generate_java_code
logical_negation
add_call_chain(<<b,a,C,C,B,a,INTEGER,c,C>>)
bool_value (false)
add_command("c", "d", <<["B", "BOOLEAN"]>>)
logical_negation
add_class(D)
greater_than
bool_value (true)
add_call_chain(<<D,e,a,B,a,b,a,c>>)
numerical_negation
add_attribute("INTEGER", "INTEGER", "BOOLEAN")
add_command("D", "D", <<["C", "BOOLEAN"], ["c", "INTEGER"], ["c", "INTEGER"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["INTEGER", "A"], ["a", "BOOLEAN"], ["D", "c"]>>)
equals
add_command("C", "D", <<["INTEGER", "B"], ["c", "INTEGER"], ["d", "INTEGER"], ["c", "BOOLEAN"], ["A", "b"], ["C", "INTEGER"], ["c", "e"], ["c", "INTEGER"], ["a", "INTEGER"]>>)
add_attribute("a", "c", "BOOLEAN")
add_call_chain(<<B,a,B,A,C,d,D,A,A>>)
generate_java_code
add_call_chain(<<c,B>>)
addition
add_call_chain(<<b,D,d,b,d,c,C,b>>)
add_call_chain(<<BOOLEAN,a,INTEGER,C,c,d,e>>)
numerical_negation
disjunction
add_command("B", "A", <<["b", "INTEGER"], ["INTEGER", "d"], ["D", "b"], ["B", "b"], ["INTEGER", "INTEGER"], ["D", "BOOLEAN"]>>)
addition
add_class(C)
logical_negation
add_call_chain(<<D,A,b,D,e,D,C,b,D>>)
bool_value (true)
add_call_chain(<<INTEGER,d,C,C,BOOLEAN,D,d,C,C>>)
add_query("e", "a", <<["C", "A"], ["c", "INTEGER"], ["b", "A"], ["BOOLEAN", "C"]>>, "D")
add_call_chain(<<d,D,A,A,A,A,C,B>>)
add_call_chain(<<C,INTEGER,e,e>>)
add_command("D", "B", <<["INTEGER", "BOOLEAN"], ["D", "INTEGER"], ["INTEGER", "INTEGER"], ["a", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>)
generate_java_code
add_attribute("d", "A", "INTEGER")
less_than
bool_value (false)
generate_java_code
add_call_chain(<<A,e,c,C,b,D,c,INTEGER,e>>)
add_query("b", "INTEGER", <<["a", "INTEGER"], ["c", "BOOLEAN"], ["INTEGER", "INTEGER"], ["b", "INTEGER"], ["d", "INTEGER"], ["a", "INTEGER"], ["B", "INTEGER"], ["A", "D"], ["A", "BOOLEAN"]>>, "C")
add_query("e", "c", <<["a", "D"], ["D", "BOOLEAN"]>>, "B")
add_attribute("INTEGER", "D", "INTEGER")
add_call_chain(<<BOOLEAN,c>>)
logical_negation
add_attribute("B", "C", "BOOLEAN")
numerical_negation
numerical_negation
numerical_negation
generate_java_code
add_attribute("a", "C", "BOOLEAN")
numerical_negation
logical_negation
modulo
add_call_chain(<<A,C,B,C,D,c,B>>)
addition
add_call_chain(<<C,A,e,B,B,INTEGER>>)
add_command("D", "b", <<["C", "b"], ["A", "A"], ["a", "BOOLEAN"], ["D", "INTEGER"], ["b", "d"], ["b", "B"], ["c", "INTEGER"], ["b", "INTEGER"], ["c", "BOOLEAN"]>>)
numerical_negation
int_value (22)
add_attribute("B", "e", "INTEGER")
numerical_negation
add_class(INTEGER)
generate_java_code
add_attribute("D", "D", "INTEGER")
logical_negation
bool_value (true)
modulo
add_call_chain(<<d,C,b,e,b,a,a,a,b>>)
logical_negation
add_command("C", "C", <<["a", "D"], ["BOOLEAN", "INTEGER"]>>)
greater_than
add_query("D", "b", <<["C", "b"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["A", "c"]>>, "a")
generate_java_code
add_call_chain(<<INTEGER,d,e,e,b,a,BOOLEAN>>)
add_query("e", "b", <<["D", "INTEGER"], ["B", "INTEGER"], ["B", "BOOLEAN"]>>, "a")
add_query("D", "a", <<["b", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["d", "C"], ["c", "BOOLEAN"], ["b", "d"]>>, "BOOLEAN")
add_query("C", "INTEGER", <<["d", "INTEGER"], ["c", "INTEGER"], ["b", "BOOLEAN"], ["INTEGER", "B"], ["BOOLEAN", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "BOOLEAN"]>>, "A")
add_call_chain(<<A,B,A>>)
add_command("INTEGER", "d", <<["D", "D"], ["a", "INTEGER"], ["B", "BOOLEAN"], ["a", "A"], ["BOOLEAN", "INTEGER"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "INTEGER"]>>)
int_value (42)
add_class(a)
bool_value (false)
add_class(e)
numerical_negation
int_value (7)
bool_value (true)
add_attribute("c", "BOOLEAN", "INTEGER")
logical_negation
numerical_negation
bool_value (false)
add_attribute("C", "c", "INTEGER")
add_attribute("e", "b", "BOOLEAN")
add_attribute("c", "B", "BOOLEAN")
add_query("B", "b", <<["INTEGER", "INTEGER"], ["BOOLEAN", "B"], ["D", "C"], ["a", "c"], ["INTEGER", "BOOLEAN"], ["A", "a"], ["a", "BOOLEAN"], ["D", "BOOLEAN"]>>, "BOOLEAN")
numerical_negation
bool_value (false)
type_check
add_call_chain(<<d,C>>)
add_class(a)
add_query("D", "C", <<["B", "BOOLEAN"], ["c", "C"], ["b", "BOOLEAN"]>>, "b")
add_call_chain(<<D,c,C,C>>)
bool_value (false)
add_query("b", "d", <<["D", "B"], ["e", "BOOLEAN"], ["D", "A"]>>, "C")
add_query("D", "c", <<["b", "INTEGER"]>>, "e")
add_query("B", "D", <<["D", "d"], ["b", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "INTEGER"]>>, "b")
numerical_negation
type_check
logical_negation
add_class(b)
int_value (20)
add_query("A", "A", <<["b", "INTEGER"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["a", "INTEGER"]>>, "INTEGER")
add_call_chain(<<d,D,c,C,e,D,C,d>>)
numerical_negation
numerical_negation
numerical_negation
disjunction
numerical_negation
add_class(d)
add_query("C", "e", <<["D", "BOOLEAN"], ["INTEGER", "INTEGER"], ["B", "BOOLEAN"], ["a", "INTEGER"], ["b", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "INTEGER"]>>, "C")
equals
add_query("a", "A", <<["a", "INTEGER"], ["a", "BOOLEAN"]>>, "INTEGER")
bool_value (false)
type_check
add_command("A", "d", <<["D", "INTEGER"], ["b", "INTEGER"], ["BOOLEAN", "A"], ["C", "D"], ["c", "INTEGER"], ["d", "BOOLEAN"]>>)
add_command("b", "C", <<["e", "INTEGER"], ["e", "b"], ["c", "BOOLEAN"], ["d", "INTEGER"], ["b", "BOOLEAN"]>>)
int_value (32)
add_call_chain(<<A,A>>)
add_query("B", "e", <<["A", "INTEGER"], ["e", "INTEGER"], ["a", "BOOLEAN"]>>, "a")
add_class(D)
add_call_chain(<<A,a,C,C,e,d,INTEGER,D,C>>)
conjunction
