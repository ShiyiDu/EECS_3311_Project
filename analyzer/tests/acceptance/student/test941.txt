greater_than
add_call_chain(<<C>>)
add_class(INTEGER)
add_query("b", "INTEGER", <<["b", "INTEGER"], ["b", "BOOLEAN"], ["A", "INTEGER"]>>, "c")
add_call_chain(<<A,A,a,C,A,INTEGER,a,d,INTEGER>>)
addition
generate_java_code
add_command("c", "e", <<["D", "BOOLEAN"], ["INTEGER", "d"], ["C", "BOOLEAN"], ["a", "A"], ["D", "INTEGER"]>>)
disjunction
add_attribute("e", "D", "BOOLEAN")
add_query("B", "D", <<["d", "INTEGER"], ["B", "e"], ["B", "INTEGER"]>>, "INTEGER")
add_attribute("A", "INTEGER", "INTEGER")
less_than
type_check
type_check
logical_negation
int_value (49)
add_call_chain(<<d,D,B>>)
addition
int_value (29)
add_query("c", "C", <<["C", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["d", "BOOLEAN"], ["c", "INTEGER"], ["e", "INTEGER"], ["b", "INTEGER"], ["b", "INTEGER"], ["D", "c"], ["c", "BOOLEAN"]>>, "B")
int_value (18)
add_query("a", "D", <<["c", "INTEGER"], ["B", "INTEGER"], ["B", "INTEGER"], ["INTEGER", "A"], ["B", "INTEGER"], ["d", "A"]>>, "A")
logical_negation
add_call_chain(<<C,c>>)
add_attribute("d", "D", "INTEGER")
disjunction
add_call_chain(<<a,C,BOOLEAN,INTEGER,C>>)
bool_value (true)
greater_than
numerical_negation
generate_java_code
int_value (45)
add_call_chain(<<D,BOOLEAN,D,e,b>>)
add_command("C", "B", <<["A", "BOOLEAN"], ["B", "INTEGER"], ["b", "A"]>>)
addition
add_attribute("C", "e", "BOOLEAN")
add_attribute("B", "a", "BOOLEAN")
numerical_negation
add_attribute("c", "A", "BOOLEAN")
quotient
add_call_chain(<<D,e,D,B,B,a,d,C>>)
int_value (7)
add_class(d)
numerical_negation
add_call_chain(<<e,D,c,D,A,B,d,C>>)
logical_negation
int_value (24)
add_attribute("e", "e", "d")
less_than
add_attribute("a", "d", "INTEGER")
add_query("C", "BOOLEAN", <<["A", "c"], ["A", "c"], ["d", "INTEGER"], ["C", "BOOLEAN"], ["e", "INTEGER"]>>, "A")
add_attribute("e", "b", "BOOLEAN")
add_call_chain(<<D,D,D,b,B,b,C,A,C>>)
add_call_chain(<<C,C,BOOLEAN,e,B,D>>)
logical_negation
add_attribute("C", "b", "BOOLEAN")
logical_negation
int_value (34)
greater_than
logical_negation
add_call_chain(<<B,B,A,D,B,D>>)
disjunction
type_check
int_value (27)
modulo
generate_java_code
add_attribute("c", "BOOLEAN", "BOOLEAN")
int_value (32)
add_call_chain(<<b,A,A,e,A>>)
disjunction
bool_value (true)
add_command("a", "C", <<["C", "INTEGER"]>>)
add_query("d", "B", <<["d", "INTEGER"]>>, "a")
numerical_negation
numerical_negation
int_value (31)
greater_than
add_query("B", "D", <<["A", "BOOLEAN"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["C", "BOOLEAN"]>>, "B")
type_check
add_call_chain(<<e>>)
add_call_chain(<<b,d,c,b,d,INTEGER,a,C,BOOLEAN>>)
add_class(D)
equals
add_call_chain(<<D,C>>)
add_attribute("C", "A", "INTEGER")
equals
greater_than
add_command("c", "C", <<["e", "BOOLEAN"], ["C", "INTEGER"], ["d", "B"], ["C", "BOOLEAN"]>>)
add_query("INTEGER", "C", <<["A", "BOOLEAN"], ["D", "d"], ["C", "A"], ["a", "a"], ["D", "INTEGER"], ["a", "B"], ["A", "b"], ["A", "BOOLEAN"], ["D", "a"]>>, "d")
add_attribute("D", "B", "INTEGER")
logical_negation
bool_value (true)
int_value (17)
add_attribute("c", "c", "INTEGER")
add_command("D", "c", <<["d", "BOOLEAN"], ["A", "INTEGER"], ["a", "INTEGER"], ["a", "BOOLEAN"]>>)
bool_value (true)
add_command("INTEGER", "INTEGER", <<["A", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "INTEGER"]>>)
add_call_chain(<<D,e,C,A>>)
numerical_negation
add_query("BOOLEAN", "D", <<["b", "BOOLEAN"], ["INTEGER", "INTEGER"], ["c", "BOOLEAN"], ["A", "a"], ["INTEGER", "A"], ["INTEGER", "c"]>>, "D")
numerical_negation
numerical_negation
add_call_chain(<<D,C>>)
add_attribute("B", "A", "INTEGER")
add_call_chain(<<b,a,d,A,B,d,e,A,b>>)
add_query("D", "B", <<["c", "BOOLEAN"], ["b", "INTEGER"], ["b", "A"], ["BOOLEAN", "INTEGER"], ["C", "a"]>>, "A")
type_check
add_command("D", "a", <<["B", "c"], ["BOOLEAN", "BOOLEAN"], ["C", "C"], ["A", "BOOLEAN"], ["d", "INTEGER"], ["A", "BOOLEAN"], ["a", "e"], ["c", "A"], ["A", "BOOLEAN"]>>)
bool_value (true)
add_query("INTEGER", "e", <<["b", "d"], ["D", "INTEGER"], ["d", "INTEGER"], ["D", "INTEGER"], ["INTEGER", "BOOLEAN"]>>, "c")
add_query("D", "b", <<["B", "a"]>>, "BOOLEAN")
bool_value (false)
add_call_chain(<<e,C,B,B>>)
add_call_chain(<<B,B,a,a,c,B,D,B>>)
add_query("D", "INTEGER", <<["c", "INTEGER"], ["b", "D"], ["c", "BOOLEAN"], ["A", "a"], ["a", "a"], ["b", "C"], ["c", "INTEGER"], ["INTEGER", "INTEGER"]>>, "C")
add_attribute("B", "A", "C")
quotient
add_class(d)
greater_than
disjunction
numerical_negation
generate_java_code
add_command("A", "e", <<["b", "INTEGER"]>>)
add_attribute("e", "D", "BOOLEAN")
logical_negation
numerical_negation
bool_value (false)
greater_than
type_check
add_call_chain(<<d,d,b,C,B,A>>)
add_call_chain(<<d,D,C,D,C,e,A,D>>)
add_query("e", "A", <<["C", "INTEGER"], ["d", "INTEGER"], ["b", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "D"], ["INTEGER", "INTEGER"], ["c", "B"], ["a", "INTEGER"]>>, "b")
add_attribute("C", "BOOLEAN", "BOOLEAN")
add_command("e", "a", <<["e", "c"], ["e", "e"], ["BOOLEAN", "A"], ["B", "c"], ["C", "c"]>>)
add_attribute("A", "B", "INTEGER")
bool_value (true)
int_value (34)
add_command("D", "C", <<["a", "INTEGER"], ["A", "INTEGER"]>>)
add_command("D", "c", <<["e", "BOOLEAN"]>>)
add_query("a", "B", <<["D", "BOOLEAN"]>>, "INTEGER")
add_attribute("D", "a", "INTEGER")
add_query("C", "a", <<["a", "BOOLEAN"], ["c", "INTEGER"], ["a", "INTEGER"], ["b", "INTEGER"], ["b", "INTEGER"], ["b", "b"], ["a", "D"], ["D", "BOOLEAN"], ["a", "e"]>>, "c")
numerical_negation
logical_negation
logical_negation
add_call_chain(<<B,C,c,c,INTEGER>>)
logical_negation
int_value (48)
int_value (7)
add_call_chain(<<d,c,e,d,B>>)
bool_value (true)
add_command("BOOLEAN", "c", <<["A", "BOOLEAN"], ["INTEGER", "INTEGER"], ["d", "INTEGER"], ["a", "INTEGER"], ["C", "B"]>>)
logical_negation
add_attribute("C", "A", "BOOLEAN")
add_query("b", "D", <<["A", "INTEGER"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["b", "INTEGER"], ["a", "B"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "e"], ["B", "BOOLEAN"]>>, "D")
int_value (33)
type_check
numerical_negation
add_command("e", "b", <<["B", "d"]>>)
logical_negation
subtraction
equals
conjunction
add_attribute("BOOLEAN", "B", "BOOLEAN")
int_value (3)
add_attribute("C", "e", "b")
add_query("B", "e", <<["A", "d"], ["A", "c"], ["b", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["B", "INTEGER"]>>, "e")
generate_java_code
bool_value (false)
add_call_chain(<<C,BOOLEAN,A>>)
int_value (7)
equals
add_command("D", "C", <<["D", "INTEGER"]>>)
conjunction
add_call_chain(<<A,d,d,BOOLEAN,b,INTEGER>>)
add_query("e", "B", <<["d", "BOOLEAN"]>>, "b")
numerical_negation
add_call_chain(<<e,c,e,c,a,C,C,d,BOOLEAN>>)
add_query("a", "A", <<["e", "BOOLEAN"], ["d", "INTEGER"], ["BOOLEAN", "INTEGER"], ["A", "e"], ["b", "B"], ["C", "BOOLEAN"], ["b", "C"], ["A", "B"], ["c", "INTEGER"]>>, "A")
int_value (4)
add_call_chain(<<B>>)
add_class(d)
add_command("e", "A", <<["BOOLEAN", "INTEGER"], ["c", "INTEGER"], ["e", "INTEGER"], ["C", "BOOLEAN"], ["b", "a"], ["b", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "c"], ["c", "C"]>>)
add_attribute("A", "BOOLEAN", "BOOLEAN")
bool_value (true)
int_value (22)
logical_negation
type_check
numerical_negation
add_call_chain(<<c,BOOLEAN,C,d,C,A>>)
numerical_negation
int_value (17)
add_attribute("A", "C", "INTEGER")
logical_negation
