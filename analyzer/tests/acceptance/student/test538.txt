bool_value (false)
add_attribute("e", "e", "c")
equals
add_attribute("C", "B", "d")
add_call_chain(<<A,D,INTEGER,D,a,e>>)
logical_negation
generate_java_code
int_value (17)
logical_negation
greater_than
logical_negation
type_check
add_class(e)
type_check
int_value (25)
add_class(BOOLEAN)
add_attribute("B", "c", "INTEGER")
generate_java_code
generate_java_code
add_query("d", "B", <<["INTEGER", "INTEGER"], ["e", "INTEGER"], ["A", "INTEGER"], ["D", "c"], ["D", "c"], ["c", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "BOOLEAN"]>>, "A")
int_value (26)
add_class(b)
bool_value (true)
int_value (1)
add_class(D)
add_query("d", "A", <<["c", "INTEGER"], ["D", "INTEGER"], ["BOOLEAN", "INTEGER"], ["A", "BOOLEAN"]>>, "A")
equals
type_check
add_query("BOOLEAN", "C", <<["C", "BOOLEAN"], ["e", "INTEGER"], ["A", "C"], ["B", "BOOLEAN"], ["c", "INTEGER"], ["e", "b"], ["INTEGER", "A"]>>, "c")
bool_value (true)
add_query("BOOLEAN", "BOOLEAN", <<["C", "INTEGER"], ["A", "INTEGER"], ["a", "BOOLEAN"], ["A", "INTEGER"], ["B", "D"], ["D", "e"], ["c", "BOOLEAN"], ["b", "INTEGER"]>>, "C")
int_value (3)
add_query("c", "D", <<["a", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "BOOLEAN"], ["d", "BOOLEAN"], ["d", "INTEGER"], ["d", "BOOLEAN"]>>, "a")
add_command("a", "d", <<["INTEGER", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["a", "d"], ["e", "BOOLEAN"]>>)
numerical_negation
generate_java_code
int_value (45)
add_call_chain(<<d,a,A,A,c,d>>)
bool_value (true)
add_attribute("C", "C", "B")
add_query("INTEGER", "A", <<["c", "c"], ["a", "INTEGER"], ["d", "BOOLEAN"], ["d", "c"], ["D", "BOOLEAN"], ["b", "b"], ["b", "INTEGER"], ["d", "C"]>>, "BOOLEAN")
logical_negation
greater_than
add_call_chain(<<D,a>>)
add_command("b", "e", <<["B", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "c"], ["BOOLEAN", "a"], ["A", "C"], ["B", "BOOLEAN"]>>)
generate_java_code
add_class(B)
logical_negation
add_attribute("BOOLEAN", "B", "INTEGER")
int_value (29)
int_value (36)
add_attribute("B", "e", "BOOLEAN")
add_attribute("A", "b", "BOOLEAN")
add_attribute("BOOLEAN", "D", "INTEGER")
less_than
add_query("C", "C", <<["d", "BOOLEAN"], ["d", "INTEGER"], ["BOOLEAN", "INTEGER"], ["D", "BOOLEAN"], ["c", "INTEGER"], ["c", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>, "D")
add_call_chain(<<C,C,b,D,a,C,d,A>>)
numerical_negation
numerical_negation
int_value (15)
int_value (25)
subtraction
numerical_negation
add_call_chain(<<D,a,INTEGER,d,A,INTEGER>>)
add_query("a", "c", <<["D", "BOOLEAN"], ["a", "INTEGER"], ["D", "BOOLEAN"], ["INTEGER", "INTEGER"]>>, "b")
generate_java_code
add_query("INTEGER", "a", <<["INTEGER", "INTEGER"], ["d", "BOOLEAN"], ["a", "a"]>>, "A")
generate_java_code
add_command("c", "C", <<["INTEGER", "c"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["a", "BOOLEAN"]>>)
numerical_negation
add_query("D", "d", <<["d", "INTEGER"]>>, "c")
add_call_chain(<<c>>)
logical_negation
add_query("a", "a", <<["B", "BOOLEAN"], ["B", "INTEGER"], ["d", "INTEGER"], ["e", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "INTEGER"], ["B", "C"], ["c", "INTEGER"]>>, "D")
add_query("b", "a", <<["D", "b"], ["A", "D"], ["c", "INTEGER"], ["D", "INTEGER"]>>, "C")
type_check
add_query("D", "INTEGER", <<["e", "BOOLEAN"], ["a", "INTEGER"], ["a", "C"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["c", "A"], ["D", "BOOLEAN"], ["c", "BOOLEAN"]>>, "D")
add_query("A", "A", <<["d", "INTEGER"], ["D", "d"], ["C", "b"]>>, "C")
add_attribute("C", "d", "INTEGER")
logical_negation
bool_value (false)
subtraction
numerical_negation
add_call_chain(<<D,A,B,d,d>>)
int_value (9)
add_call_chain(<<INTEGER,c,C,a,e,c,a,d,A>>)
generate_java_code
generate_java_code
add_call_chain(<<c,e,a,a,a,B>>)
subtraction
add_query("B", "e", <<["e", "BOOLEAN"], ["INTEGER", "b"], ["C", "B"]>>, "b")
add_call_chain(<<b,d,e>>)
add_call_chain(<<b>>)
add_attribute("c", "b", "BOOLEAN")
add_call_chain(<<A,d,C>>)
add_query("b", "BOOLEAN", <<["d", "BOOLEAN"], ["d", "INTEGER"], ["B", "INTEGER"], ["D", "e"], ["BOOLEAN", "c"], ["c", "INTEGER"], ["C", "B"]>>, "e")
conjunction
disjunction
add_class(C)
int_value (35)
bool_value (false)
numerical_negation
numerical_negation
add_call_chain(<<A,C,d,e,d,c,b,A>>)
add_call_chain(<<D,C,C,b,c,b,B,c>>)
numerical_negation
add_call_chain(<<C,a,b>>)
generate_java_code
add_command("b", "b", <<["D", "INTEGER"]>>)
add_attribute("INTEGER", "B", "BOOLEAN")
bool_value (false)
add_command("BOOLEAN", "a", <<["C", "INTEGER"], ["C", "b"], ["D", "INTEGER"]>>)
add_attribute("A", "C", "BOOLEAN")
add_query("D", "INTEGER", <<["D", "BOOLEAN"], ["e", "INTEGER"], ["B", "INTEGER"]>>, "A")
add_command("B", "A", <<["d", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["INTEGER", "INTEGER"]>>)
logical_negation
add_command("A", "a", <<["BOOLEAN", "BOOLEAN"], ["B", "INTEGER"], ["b", "BOOLEAN"], ["e", "INTEGER"]>>)
numerical_negation
add_call_chain(<<B,d,c,B>>)
numerical_negation
logical_negation
add_query("C", "D", <<["e", "e"]>>, "d")
add_call_chain(<<b,e>>)
add_call_chain(<<c,D,B,c>>)
add_attribute("C", "A", "BOOLEAN")
add_class(e)
add_call_chain(<<INTEGER,d,D,d,c>>)
add_command("c", "C", <<["BOOLEAN", "A"]>>)
add_call_chain(<<a,B,e,d>>)
int_value (7)
add_command("a", "A", <<["a", "INTEGER"], ["D", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "BOOLEAN"]>>)
add_query("A", "b", <<["a", "e"], ["b", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["d", "D"]>>, "c")
add_call_chain(<<a>>)
add_query("B", "C", <<["b", "INTEGER"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "BOOLEAN"]>>, "C")
add_call_chain(<<d,A,a,D,B,INTEGER,C>>)
logical_negation
add_query("b", "B", <<["b", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["INTEGER", "INTEGER"], ["A", "BOOLEAN"], ["d", "BOOLEAN"], ["INTEGER", "e"], ["d", "A"]>>, "B")
numerical_negation
logical_negation
add_attribute("BOOLEAN", "d", "A")
numerical_negation
add_query("BOOLEAN", "C", <<["A", "INTEGER"], ["e", "c"]>>, "BOOLEAN")
add_command("B", "C", <<["B", "A"], ["a", "INTEGER"], ["INTEGER", "INTEGER"], ["c", "INTEGER"]>>)
logical_negation
add_attribute("d", "a", "INTEGER")
add_query("A", "d", <<["D", "BOOLEAN"]>>, "C")
add_call_chain(<<c,A>>)
int_value (11)
add_query("B", "d", <<["d", "BOOLEAN"], ["d", "INTEGER"], ["D", "BOOLEAN"], ["d", "C"], ["D", "e"]>>, "b")
add_attribute("d", "B", "d")
add_call_chain(<<C,BOOLEAN,a,b,e,e,d,d>>)
add_command("e", "a", <<["B", "d"], ["a", "INTEGER"], ["D", "BOOLEAN"], ["D", "e"]>>)
type_check
numerical_negation
disjunction
equals
bool_value (true)
add_call_chain(<<INTEGER,BOOLEAN,B,c,A>>)
add_command("d", "D", <<["D", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["A", "BOOLEAN"], ["D", "INTEGER"], ["e", "INTEGER"], ["A", "BOOLEAN"], ["D", "C"], ["B", "BOOLEAN"], ["A", "BOOLEAN"]>>)
logical_negation
numerical_negation
add_query("b", "D", <<["b", "INTEGER"], ["b", "BOOLEAN"], ["INTEGER", "INTEGER"], ["B", "INTEGER"], ["c", "INTEGER"]>>, "BOOLEAN")
int_value (48)
add_query("e", "BOOLEAN", <<["A", "b"], ["B", "BOOLEAN"]>>, "D")
add_attribute("B", "c", "INTEGER")
add_query("BOOLEAN", "D", <<["a", "BOOLEAN"], ["d", "INTEGER"], ["a", "INTEGER"], ["D", "C"], ["a", "d"], ["b", "INTEGER"], ["b", "BOOLEAN"], ["INTEGER", "e"], ["B", "A"]>>, "D")
add_command("C", "D", <<["e", "BOOLEAN"], ["A", "INTEGER"], ["C", "INTEGER"]>>)
add_call_chain(<<C,A,C>>)
add_attribute("A", "BOOLEAN", "BOOLEAN")
type_check
add_command("b", "INTEGER", <<["D", "INTEGER"]>>)
add_query("b", "INTEGER", <<["INTEGER", "BOOLEAN"]>>, "B")
add_query("C", "e", <<["d", "BOOLEAN"], ["C", "INTEGER"], ["B", "INTEGER"], ["c", "C"], ["C", "BOOLEAN"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["d", "INTEGER"]>>, "b")
numerical_negation
add_command("C", "A", <<["B", "INTEGER"], ["B", "D"], ["a", "D"], ["e", "INTEGER"], ["a", "BOOLEAN"]>>)
add_command("a", "A", <<["D", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "INTEGER"], ["a", "B"], ["a", "A"], ["d", "INTEGER"], ["D", "INTEGER"]>>)
add_query("C", "C", <<["d", "BOOLEAN"]>>, "c")
logical_negation
add_attribute("D", "D", "BOOLEAN")
int_value (16)
conjunction
int_value (29)
numerical_negation
add_call_chain(<<c,A>>)
conjunction
add_query("e", "INTEGER", <<["A", "BOOLEAN"], ["c", "INTEGER"], ["C", "INTEGER"], ["d", "INTEGER"], ["a", "BOOLEAN"], ["INTEGER", "c"]>>, "C")
add_command("a", "A", <<["A", "BOOLEAN"]>>)
add_call_chain(<<d,C,c>>)
add_call_chain(<<d,e>>)
add_command("e", "BOOLEAN", <<["C", "INTEGER"]>>)
add_call_chain(<<D,A,A,d,C,a,c>>)
add_call_chain(<<D,D,A>>)
add_call_chain(<<c,a,BOOLEAN,b,A,c,B,D,d>>)
disjunction
numerical_negation
add_class(d)
bool_value (false)
numerical_negation
int_value (10)
add_command("A", "INTEGER", <<["INTEGER", "B"], ["A", "e"], ["D", "BOOLEAN"], ["a", "BOOLEAN"]>>)
add_attribute("b", "D", "INTEGER")
numerical_negation
add_query("BOOLEAN", "D", <<["a", "BOOLEAN"], ["e", "b"], ["C", "INTEGER"], ["D", "d"], ["A", "C"], ["D", "BOOLEAN"], ["B", "D"]>>, "D")
add_command("d", "A", <<["c", "D"], ["b", "B"], ["B", "INTEGER"]>>)
add_command("INTEGER", "a", <<["BOOLEAN", "BOOLEAN"], ["A", "A"], ["D", "BOOLEAN"], ["c", "a"], ["B", "BOOLEAN"], ["e", "INTEGER"], ["C", "D"], ["B", "D"], ["C", "BOOLEAN"]>>)
add_command("B", "A", <<["D", "INTEGER"], ["INTEGER", "C"], ["c", "BOOLEAN"], ["A", "BOOLEAN"]>>)
logical_negation
logical_negation
conjunction
bool_value (true)
add_attribute("D", "a", "INTEGER")
generate_java_code
add_command("B", "B", <<["d", "a"], ["d", "d"], ["BOOLEAN", "BOOLEAN"], ["a", "D"], ["B", "BOOLEAN"], ["INTEGER", "B"], ["a", "BOOLEAN"], ["A", "INTEGER"]>>)
logical_negation
add_command("BOOLEAN", "B", <<["D", "d"], ["B", "A"], ["d", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "INTEGER"], ["e", "INTEGER"], ["BOOLEAN", "INTEGER"], ["C", "b"], ["A", "BOOLEAN"]>>)
int_value (31)
add_call_chain(<<B>>)
add_attribute("D", "A", "BOOLEAN")
add_query("A", "B", <<["D", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "B"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["a", "A"], ["e", "INTEGER"]>>, "C")
add_attribute("INTEGER", "e", "INTEGER")
add_query("b", "BOOLEAN", <<["D", "INTEGER"], ["b", "INTEGER"], ["B", "d"]>>, "e")
add_attribute("e", "BOOLEAN", "e")
add_command("D", "B", <<["B", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>)
add_call_chain(<<D,b,A>>)
add_call_chain(<<e,C,a,c,e,D,B,d>>)
add_command("a", "B", <<["INTEGER", "INTEGER"]>>)
add_query("b", "e", <<["a", "B"], ["a", "B"]>>, "C")
bool_value (false)
greater_than
bool_value (true)
logical_negation
generate_java_code
add_attribute("d", "a", "BOOLEAN")
add_call_chain(<<B,INTEGER,D,e,INTEGER,INTEGER,D,c>>)
