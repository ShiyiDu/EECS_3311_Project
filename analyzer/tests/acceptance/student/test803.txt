add_attribute("B", "a", "A")
int_value (29)
numerical_negation
type_check
conjunction
generate_java_code
add_call_chain(<<A,D,c>>)
int_value (19)
bool_value (false)
numerical_negation
add_call_chain(<<c,A,b,A,a,D,e,C>>)
add_class(d)
add_class(C)
type_check
add_call_chain(<<e,c,C>>)
add_call_chain(<<a,C,d,c>>)
numerical_negation
add_call_chain(<<A,C,C,B,d>>)
add_query("e", "B", <<["d", "BOOLEAN"], ["b", "INTEGER"], ["D", "INTEGER"], ["B", "INTEGER"], ["A", "b"], ["e", "INTEGER"], ["A", "BOOLEAN"]>>, "c")
logical_negation
conjunction
int_value (45)
add_command("INTEGER", "a", <<["BOOLEAN", "BOOLEAN"], ["B", "d"]>>)
add_command("D", "C", <<["e", "INTEGER"], ["c", "BOOLEAN"], ["e", "INTEGER"], ["A", "BOOLEAN"]>>)
numerical_negation
bool_value (true)
add_class(A)
greater_than
logical_negation
generate_java_code
add_call_chain(<<c,D,B,c,a,A,b>>)
int_value (24)
type_check
add_query("A", "INTEGER", <<["C", "C"], ["b", "INTEGER"], ["D", "b"], ["c", "B"]>>, "BOOLEAN")
add_command("BOOLEAN", "d", <<["A", "INTEGER"], ["d", "INTEGER"], ["b", "BOOLEAN"], ["e", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
add_class(b)
bool_value (false)
bool_value (false)
add_call_chain(<<a,D,BOOLEAN,d,BOOLEAN,b,e,c>>)
add_query("D", "B", <<["a", "INTEGER"], ["B", "INTEGER"], ["a", "BOOLEAN"], ["c", "INTEGER"], ["D", "INTEGER"], ["D", "C"], ["B", "INTEGER"], ["e", "e"]>>, "BOOLEAN")
less_than
add_call_chain(<<D,BOOLEAN,D>>)
generate_java_code
bool_value (false)
add_query("B", "B", <<["C", "c"], ["a", "BOOLEAN"], ["A", "BOOLEAN"]>>, "e")
equals
numerical_negation
conjunction
subtraction
generate_java_code
add_call_chain(<<b,D,d>>)
add_class(e)
add_call_chain(<<A,e>>)
int_value (43)
add_call_chain(<<A,C>>)
add_command("D", "e", <<["b", "INTEGER"], ["BOOLEAN", "INTEGER"]>>)
add_class(d)
int_value (27)
logical_negation
bool_value (true)
add_call_chain(<<INTEGER,D>>)
add_call_chain(<<B>>)
add_call_chain(<<d,B,A>>)
add_call_chain(<<B,A,d,a,INTEGER,b,INTEGER>>)
int_value (19)
type_check
numerical_negation
add_attribute("b", "A", "INTEGER")
add_attribute("B", "A", "INTEGER")
numerical_negation
add_class(b)
numerical_negation
add_query("C", "C", <<["A", "INTEGER"], ["C", "c"], ["D", "BOOLEAN"], ["e", "INTEGER"]>>, "b")
add_command("C", "BOOLEAN", <<["BOOLEAN", "INTEGER"], ["c", "INTEGER"]>>)
add_command("B", "d", <<["c", "BOOLEAN"], ["INTEGER", "D"], ["D", "INTEGER"]>>)
logical_negation
bool_value (true)
int_value (10)
equals
add_class(e)
add_class(e)
generate_java_code
add_call_chain(<<a,A,A,d,a,C,C,a,C>>)
add_command("B", "C", <<["e", "INTEGER"], ["a", "BOOLEAN"]>>)
numerical_negation
add_attribute("b", "D", "INTEGER")
add_query("INTEGER", "C", <<["B", "d"]>>, "a")
logical_negation
bool_value (true)
equals
generate_java_code
add_call_chain(<<D,d,d,a,D,B,c>>)
subtraction
numerical_negation
add_query("d", "c", <<["C", "c"], ["e", "b"], ["c", "INTEGER"]>>, "c")
add_command("a", "c", <<["a", "INTEGER"], ["B", "BOOLEAN"], ["BOOLEAN", "C"], ["a", "d"], ["e", "INTEGER"], ["C", "b"], ["d", "INTEGER"]>>)
add_command("INTEGER", "BOOLEAN", <<["d", "D"], ["b", "BOOLEAN"]>>)
add_call_chain(<<D,c,BOOLEAN,a,INTEGER,C,A>>)
type_check
int_value (14)
less_than
int_value (11)
numerical_negation
add_class(e)
add_command("B", "INTEGER", <<["c", "B"], ["B", "INTEGER"], ["a", "INTEGER"], ["a", "BOOLEAN"]>>)
add_attribute("a", "b", "d")
logical_negation
add_command("B", "B", <<["c", "INTEGER"], ["C", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["c", "INTEGER"]>>)
logical_negation
add_command("d", "C", <<["B", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>)
subtraction
logical_negation
add_command("C", "B", <<["INTEGER", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "INTEGER"], ["c", "D"], ["BOOLEAN", "BOOLEAN"], ["A", "d"], ["e", "INTEGER"]>>)
add_query("C", "A", <<["e", "BOOLEAN"], ["INTEGER", "INTEGER"]>>, "d")
add_attribute("BOOLEAN", "B", "INTEGER")
add_query("B", "B", <<["BOOLEAN", "D"], ["C", "INTEGER"], ["a", "c"]>>, "b")
add_attribute("e", "B", "INTEGER")
type_check
bool_value (true)
add_attribute("C", "A", "BOOLEAN")
add_class(D)
generate_java_code
add_command("d", "D", <<["e", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["BOOLEAN", "a"], ["INTEGER", "BOOLEAN"], ["d", "INTEGER"], ["a", "b"]>>)
add_class(e)
add_call_chain(<<D>>)
add_query("e", "A", <<["C", "BOOLEAN"], ["c", "INTEGER"]>>, "BOOLEAN")
int_value (30)
add_attribute("D", "A", "BOOLEAN")
add_call_chain(<<D,d,a>>)
subtraction
generate_java_code
less_than
add_call_chain(<<c,a,A,D>>)
bool_value (true)
numerical_negation
add_attribute("A", "C", "INTEGER")
add_query("b", "b", <<["D", "A"], ["D", "D"], ["D", "a"], ["c", "INTEGER"], ["INTEGER", "BOOLEAN"], ["B", "BOOLEAN"]>>, "b")
add_attribute("c", "D", "c")
type_check
add_query("A", "a", <<["d", "BOOLEAN"], ["b", "BOOLEAN"], ["e", "A"], ["c", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["D", "BOOLEAN"]>>, "b")
numerical_negation
logical_negation
add_call_chain(<<b,C,c,B,A>>)
add_query("C", "b", <<["a", "c"]>>, "c")
generate_java_code
add_query("INTEGER", "d", <<["e", "BOOLEAN"], ["A", "INTEGER"], ["C", "INTEGER"], ["e", "INTEGER"]>>, "A")
add_attribute("D", "C", "INTEGER")
add_call_chain(<<B,c,a,BOOLEAN,b,C,a,a>>)
add_attribute("b", "a", "INTEGER")
add_class(D)
add_class(A)
int_value (37)
add_class(b)
add_query("e", "BOOLEAN", <<["a", "INTEGER"]>>, "e")
add_class(c)
type_check
add_call_chain(<<B,BOOLEAN,INTEGER,b,c>>)
add_class(C)
less_than
add_call_chain(<<INTEGER,A>>)
add_call_chain(<<c,c,B,e,e,D,c,BOOLEAN,a>>)
logical_negation
numerical_negation
add_attribute("d", "a", "BOOLEAN")
add_class(C)
greater_than
subtraction
bool_value (true)
add_class(BOOLEAN)
add_query("b", "c", <<["A", "BOOLEAN"], ["a", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["e", "B"], ["b", "A"], ["e", "INTEGER"], ["INTEGER", "BOOLEAN"], ["A", "BOOLEAN"]>>, "B")
add_class(e)
add_query("BOOLEAN", "A", <<["d", "INTEGER"]>>, "D")
add_command("d", "a", <<["d", "B"], ["BOOLEAN", "INTEGER"], ["a", "b"], ["BOOLEAN", "BOOLEAN"], ["D", "D"], ["D", "BOOLEAN"], ["c", "B"], ["d", "INTEGER"]>>)
add_attribute("d", "a", "INTEGER")
generate_java_code
type_check
add_query("C", "C", <<["d", "B"], ["BOOLEAN", "BOOLEAN"]>>, "B")
add_call_chain(<<D,e,C,B,D,a,a>>)
add_attribute("e", "A", "BOOLEAN")
int_value (29)
add_call_chain(<<b,A,D>>)
int_value (5)
bool_value (false)
add_class(e)
bool_value (true)
add_call_chain(<<d,B,D,c,a,A,C>>)
add_call_chain(<<e>>)
add_call_chain(<<D,C,INTEGER,BOOLEAN>>)
conjunction
bool_value (true)
add_command("b", "b", <<["D", "BOOLEAN"], ["C", "INTEGER"], ["a", "INTEGER"], ["C", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
logical_negation
add_command("A", "C", <<["B", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "BOOLEAN"]>>)
add_command("C", "BOOLEAN", <<["D", "D"], ["a", "INTEGER"], ["b", "B"], ["c", "d"], ["B", "INTEGER"], ["D", "e"], ["d", "BOOLEAN"], ["d", "INTEGER"]>>)
add_command("c", "b", <<["BOOLEAN", "e"], ["e", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["B", "INTEGER"], ["b", "BOOLEAN"]>>)
less_than
add_command("BOOLEAN", "b", <<["B", "BOOLEAN"], ["e", "BOOLEAN"], ["INTEGER", "d"], ["b", "c"], ["a", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "D"], ["C", "INTEGER"], ["a", "INTEGER"]>>)
add_class(BOOLEAN)
modulo
type_check
add_attribute("b", "C", "BOOLEAN")
numerical_negation
int_value (42)
add_query("D", "INTEGER", <<["C", "BOOLEAN"], ["b", "INTEGER"]>>, "INTEGER")
add_command("b", "b", <<["BOOLEAN", "C"], ["A", "BOOLEAN"], ["c", "A"], ["C", "d"], ["e", "INTEGER"], ["C", "BOOLEAN"], ["e", "INTEGER"], ["c", "INTEGER"]>>)
add_command("C", "D", <<["a", "e"], ["B", "c"], ["BOOLEAN", "INTEGER"], ["e", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "b"], ["D", "e"]>>)
add_call_chain(<<c,A,B>>)
generate_java_code
generate_java_code
add_class(a)
add_call_chain(<<c,d,b,BOOLEAN,b,D,e,a,b>>)
add_query("C", "BOOLEAN", <<["b", "INTEGER"]>>, "b")
add_class(D)
add_attribute("c", "d", "D")
type_check
int_value (39)
add_attribute("D", "a", "BOOLEAN")
add_attribute("c", "INTEGER", "INTEGER")
logical_negation
bool_value (false)
add_call_chain(<<d,A,a,INTEGER,b,D,INTEGER>>)
disjunction
add_class(d)
add_query("d", "d", <<["B", "D"], ["C", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "a"], ["B", "BOOLEAN"]>>, "a")
add_command("e", "INTEGER", <<["A", "BOOLEAN"], ["c", "INTEGER"], ["B", "d"], ["C", "a"], ["e", "BOOLEAN"], ["B", "INTEGER"], ["a", "A"]>>)
generate_java_code
type_check
add_command("d", "C", <<["B", "INTEGER"], ["b", "INTEGER"]>>)
bool_value (true)
add_query("B", "b", <<["C", "INTEGER"]>>, "B")
quotient
int_value (32)
add_attribute("c", "B", "BOOLEAN")
add_class(b)
bool_value (true)
logical_negation
add_call_chain(<<BOOLEAN,A,INTEGER,b,BOOLEAN,D,A,d,BOOLEAN>>)
type_check
less_than
less_than
add_call_chain(<<BOOLEAN,b>>)
multiplication
add_query("b", "C", <<["a", "INTEGER"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "d"], ["C", "BOOLEAN"]>>, "e")
add_attribute("C", "e", "B")
add_call_chain(<<A,B,INTEGER,D,c,C,C>>)
int_value (12)
add_command("d", "INTEGER", <<["A", "INTEGER"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["BOOLEAN", "INTEGER"], ["C", "BOOLEAN"], ["c", "B"]>>)
int_value (39)
add_call_chain(<<a,B,D,a,c,C,d,D>>)
