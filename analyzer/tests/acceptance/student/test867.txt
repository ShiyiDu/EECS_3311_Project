add_call_chain(<<BOOLEAN,b,c>>)
subtraction
type_check
add_attribute("a", "c", "B")
int_value (12)
add_class(e)
add_attribute("c", "d", "C")
add_query("B", "C", <<["c", "INTEGER"], ["a", "INTEGER"], ["D", "INTEGER"], ["c", "BOOLEAN"], ["D", "BOOLEAN"]>>, "e")
numerical_negation
add_call_chain(<<D,D,D,a>>)
equals
logical_negation
logical_negation
add_call_chain(<<A,d,c>>)
logical_negation
add_query("D", "BOOLEAN", <<["a", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "d"], ["C", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["D", "B"], ["BOOLEAN", "BOOLEAN"], ["d", "BOOLEAN"]>>, "c")
add_attribute("C", "a", "INTEGER")
add_call_chain(<<b,B>>)
add_query("BOOLEAN", "d", <<["a", "e"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["d", "a"], ["A", "a"], ["c", "BOOLEAN"], ["A", "BOOLEAN"]>>, "a")
type_check
bool_value (false)
add_attribute("e", "c", "INTEGER")
add_call_chain(<<c,C,D>>)
add_call_chain(<<D,B,d,a>>)
add_query("A", "C", <<["A", "INTEGER"], ["e", "c"], ["b", "INTEGER"], ["c", "INTEGER"], ["C", "INTEGER"], ["d", "INTEGER"]>>, "a")
add_query("C", "d", <<["A", "INTEGER"], ["B", "d"], ["d", "INTEGER"], ["C", "A"], ["D", "C"]>>, "B")
equals
add_attribute("d", "a", "c")
less_than
add_call_chain(<<A,B,B,c>>)
logical_negation
add_call_chain(<<D,B,a,d,D,b,e>>)
add_attribute("a", "e", "INTEGER")
add_command("C", "a", <<["e", "INTEGER"], ["C", "C"]>>)
add_command("A", "b", <<["d", "INTEGER"], ["C", "INTEGER"], ["BOOLEAN", "INTEGER"], ["D", "INTEGER"], ["C", "D"], ["A", "BOOLEAN"]>>)
bool_value (false)
add_call_chain(<<A,B,INTEGER,A,c,e,A>>)
bool_value (true)
add_command("d", "D", <<["INTEGER", "INTEGER"], ["C", "BOOLEAN"]>>)
add_attribute("b", "A", "INTEGER")
add_call_chain(<<C,e,INTEGER,a,d,e,b,INTEGER,C>>)
bool_value (true)
int_value (16)
addition
logical_negation
addition
logical_negation
int_value (30)
numerical_negation
logical_negation
type_check
add_command("d", "A", <<["A", "b"], ["a", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "BOOLEAN"]>>)
int_value (48)
add_call_chain(<<B,D,d,c,BOOLEAN,C>>)
add_query("INTEGER", "d", <<["D", "INTEGER"], ["c", "INTEGER"], ["b", "INTEGER"], ["C", "BOOLEAN"]>>, "c")
generate_java_code
add_query("a", "d", <<["D", "d"], ["BOOLEAN", "BOOLEAN"]>>, "BOOLEAN")
bool_value (false)
subtraction
add_class(d)
add_call_chain(<<D,D,A,A,c,b,B>>)
add_query("d", "a", <<["C", "A"], ["a", "INTEGER"]>>, "A")
logical_negation
add_class(A)
numerical_negation
bool_value (false)
type_check
modulo
numerical_negation
disjunction
add_call_chain(<<B,B,B,A>>)
bool_value (true)
conjunction
int_value (45)
bool_value (false)
add_command("d", "a", <<["a", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["A", "e"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["C", "BOOLEAN"]>>)
generate_java_code
int_value (11)
add_attribute("D", "a", "d")
add_query("a", "b", <<["A", "BOOLEAN"], ["b", "INTEGER"], ["b", "D"], ["a", "BOOLEAN"], ["D", "A"], ["c", "INTEGER"], ["D", "INTEGER"], ["C", "INTEGER"]>>, "d")
add_command("A", "D", <<["a", "BOOLEAN"], ["e", "INTEGER"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "C"], ["d", "INTEGER"], ["b", "INTEGER"]>>)
logical_negation
add_attribute("B", "A", "C")
less_than
numerical_negation
add_command("BOOLEAN", "e", <<["B", "D"], ["b", "D"], ["e", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["C", "C"], ["b", "BOOLEAN"]>>)
numerical_negation
add_call_chain(<<c,a,c,A,A,b>>)
add_call_chain(<<B,D,A,C,BOOLEAN,c,B,C,a>>)
add_attribute("a", "BOOLEAN", "BOOLEAN")
add_call_chain(<<A,c,INTEGER>>)
add_query("e", "b", <<["C", "BOOLEAN"], ["D", "a"], ["c", "INTEGER"], ["e", "c"], ["a", "B"], ["b", "INTEGER"]>>, "D")
add_attribute("B", "a", "B")
add_command("b", "d", <<["B", "e"]>>)
bool_value (true)
add_command("INTEGER", "INTEGER", <<["C", "C"], ["b", "BOOLEAN"], ["c", "INTEGER"], ["BOOLEAN", "c"]>>)
add_call_chain(<<e,A,BOOLEAN,e,a,INTEGER,a>>)
add_call_chain(<<d,a,B,A,C,B,b>>)
add_query("d", "c", <<["INTEGER", "BOOLEAN"], ["C", "d"], ["D", "c"], ["D", "D"], ["b", "BOOLEAN"], ["c", "BOOLEAN"]>>, "A")
add_query("D", "B", <<["d", "INTEGER"], ["INTEGER", "c"], ["d", "BOOLEAN"], ["D", "BOOLEAN"]>>, "C")
numerical_negation
logical_negation
bool_value (true)
type_check
generate_java_code
generate_java_code
add_command("D", "a", <<["d", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["c", "BOOLEAN"], ["a", "INTEGER"], ["c", "B"], ["B", "INTEGER"], ["c", "INTEGER"], ["D", "BOOLEAN"]>>)
equals
add_call_chain(<<A,D,d,B,a>>)
bool_value (false)
add_command("d", "b", <<["d", "c"]>>)
add_class(a)
int_value (5)
add_call_chain(<<BOOLEAN,D,D,c,c,INTEGER>>)
greater_than
add_class(INTEGER)
int_value (20)
generate_java_code
add_class(BOOLEAN)
disjunction
bool_value (false)
generate_java_code
less_than
add_attribute("b", "d", "BOOLEAN")
type_check
bool_value (true)
multiplication
conjunction
add_query("e", "D", <<["c", "BOOLEAN"], ["A", "INTEGER"], ["A", "A"], ["c", "d"], ["D", "B"], ["e", "INTEGER"], ["BOOLEAN", "INTEGER"], ["a", "BOOLEAN"], ["A", "INTEGER"]>>, "C")
add_command("D", "C", <<["B", "BOOLEAN"], ["C", "BOOLEAN"], ["d", "BOOLEAN"], ["INTEGER", "INTEGER"], ["e", "BOOLEAN"], ["D", "INTEGER"], ["e", "INTEGER"], ["A", "INTEGER"], ["d", "INTEGER"]>>)
logical_negation
add_query("e", "C", <<["e", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["INTEGER", "a"], ["c", "BOOLEAN"], ["C", "C"], ["D", "INTEGER"], ["B", "INTEGER"], ["B", "a"]>>, "c")
greater_than
add_call_chain(<<B,D>>)
add_call_chain(<<b,D,d,b,B,A>>)
add_query("d", "d", <<["INTEGER", "BOOLEAN"], ["C", "INTEGER"]>>, "e")
add_call_chain(<<B,c,b,d>>)
add_command("b", "INTEGER", <<["a", "D"], ["C", "b"], ["c", "BOOLEAN"], ["c", "b"], ["INTEGER", "BOOLEAN"], ["C", "INTEGER"], ["c", "BOOLEAN"]>>)
conjunction
bool_value (true)
add_attribute("e", "BOOLEAN", "INTEGER")
add_command("B", "d", <<["B", "INTEGER"], ["C", "INTEGER"], ["a", "BOOLEAN"], ["c", "e"], ["e", "INTEGER"], ["c", "B"]>>)
conjunction
logical_negation
bool_value (false)
add_class(BOOLEAN)
add_command("a", "c", <<["c", "INTEGER"]>>)
add_query("C", "a", <<["D", "B"], ["INTEGER", "BOOLEAN"], ["D", "INTEGER"], ["b", "INTEGER"], ["B", "BOOLEAN"]>>, "BOOLEAN")
add_call_chain(<<d,B,D,e>>)
add_attribute("BOOLEAN", "d", "e")
generate_java_code
bool_value (false)
add_query("C", "B", <<["C", "B"], ["d", "d"], ["A", "a"]>>, "D")
add_call_chain(<<a,BOOLEAN,B,e,B,D,B>>)
generate_java_code
add_command("B", "b", <<["d", "d"], ["D", "a"], ["INTEGER", "c"]>>)
quotient
bool_value (true)
add_query("C", "d", <<["e", "INTEGER"], ["C", "C"], ["B", "INTEGER"], ["e", "B"], ["C", "d"]>>, "B")
add_command("D", "b", <<["A", "BOOLEAN"]>>)
add_class(B)
add_command("A", "d", <<["D", "D"]>>)
bool_value (true)
numerical_negation
bool_value (true)
add_call_chain(<<INTEGER,A,B,e>>)
add_call_chain(<<b,d,a>>)
add_call_chain(<<C>>)
logical_negation
add_command("D", "A", <<["a", "BOOLEAN"], ["e", "INTEGER"], ["A", "A"], ["C", "BOOLEAN"], ["d", "C"]>>)
add_attribute("B", "B", "INTEGER")
add_command("e", "D", <<["C", "B"], ["A", "INTEGER"]>>)
type_check
add_query("d", "A", <<["e", "BOOLEAN"], ["D", "INTEGER"], ["a", "INTEGER"], ["C", "INTEGER"], ["e", "INTEGER"], ["C", "A"]>>, "B")
logical_negation
add_command("c", "a", <<["D", "INTEGER"], ["C", "BOOLEAN"], ["e", "d"], ["A", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
numerical_negation
add_call_chain(<<c>>)
add_class(D)
add_call_chain(<<D,c,c,D,INTEGER,A,D,C>>)
add_call_chain(<<D,INTEGER,D,e,D,B,A,a>>)
add_call_chain(<<a,C,D,B,BOOLEAN,c,e,A>>)
equals
add_query("C", "B", <<["d", "BOOLEAN"], ["d", "b"], ["A", "BOOLEAN"]>>, "e")
multiplication
numerical_negation
addition
add_query("a", "D", <<["A", "BOOLEAN"], ["D", "INTEGER"]>>, "b")
add_command("b", "b", <<["a", "C"], ["c", "BOOLEAN"], ["d", "d"], ["D", "INTEGER"]>>)
add_query("c", "b", <<["A", "INTEGER"], ["e", "BOOLEAN"], ["b", "B"], ["d", "d"]>>, "b")
add_command("b", "b", <<["D", "D"], ["c", "c"], ["C", "INTEGER"], ["b", "D"]>>)
add_attribute("B", "e", "INTEGER")
add_call_chain(<<e,c,C>>)
type_check
int_value (43)
add_command("INTEGER", "b", <<["c", "INTEGER"], ["D", "b"], ["e", "BOOLEAN"], ["D", "INTEGER"], ["C", "BOOLEAN"]>>)
bool_value (false)
add_query("BOOLEAN", "A", <<["BOOLEAN", "B"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["b", "INTEGER"], ["e", "INTEGER"], ["D", "INTEGER"], ["e", "INTEGER"], ["d", "INTEGER"]>>, "c")
add_call_chain(<<a,b,b,A,c,B,D,B,D>>)
logical_negation
numerical_negation
add_call_chain(<<e,c,A,B,e,D,e,C,BOOLEAN>>)
add_command("c", "INTEGER", <<["c", "BOOLEAN"], ["B", "INTEGER"], ["e", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "INTEGER"], ["BOOLEAN", "c"], ["C", "INTEGER"]>>)
add_command("INTEGER", "b", <<["a", "BOOLEAN"], ["a", "INTEGER"], ["b", "b"], ["BOOLEAN", "BOOLEAN"], ["d", "e"], ["C", "INTEGER"], ["d", "INTEGER"], ["c", "BOOLEAN"], ["b", "C"]>>)
addition
type_check
quotient
add_call_chain(<<A,INTEGER,A,BOOLEAN,C,a>>)
add_call_chain(<<a,a,a,C,B,A>>)
add_call_chain(<<B,BOOLEAN,BOOLEAN,BOOLEAN,e,D,C,B,C>>)
add_class(a)
add_call_chain(<<D,D,d>>)
type_check
type_check
add_command("B", "D", <<["d", "BOOLEAN"], ["B", "D"], ["A", "INTEGER"], ["d", "A"], ["a", "INTEGER"], ["A", "INTEGER"], ["D", "INTEGER"], ["a", "INTEGER"], ["c", "INTEGER"]>>)
add_call_chain(<<C,a,c,D>>)
add_query("A", "B", <<["e", "a"], ["B", "a"], ["D", "INTEGER"], ["a", "C"], ["b", "a"], ["b", "A"], ["e", "d"], ["BOOLEAN", "BOOLEAN"], ["b", "INTEGER"]>>, "d")
int_value (23)
generate_java_code
add_query("b", "A", <<["BOOLEAN", "B"]>>, "A")
add_call_chain(<<INTEGER,b,c,A,INTEGER,c>>)
modulo
equals
add_query("a", "C", <<["c", "INTEGER"], ["e", "INTEGER"], ["a", "INTEGER"], ["a", "INTEGER"], ["A", "BOOLEAN"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["e", "BOOLEAN"]>>, "A")
disjunction
add_call_chain(<<BOOLEAN>>)
add_command("a", "c", <<["C", "INTEGER"], ["A", "A"], ["B", "INTEGER"], ["a", "INTEGER"], ["D", "a"], ["B", "INTEGER"]>>)
add_call_chain(<<A,B,c>>)
less_than
conjunction
type_check
add_call_chain(<<a,A,C,INTEGER,INTEGER,A,A,e>>)
add_call_chain(<<B,D,A,c,B,A,D>>)
add_command("D", "c", <<["e", "BOOLEAN"], ["B", "d"], ["C", "INTEGER"], ["d", "e"]>>)
add_attribute("a", "a", "BOOLEAN")
add_class(D)
add_command("A", "B", <<["A", "INTEGER"], ["D", "INTEGER"], ["e", "d"]>>)
add_call_chain(<<B,BOOLEAN,A>>)
