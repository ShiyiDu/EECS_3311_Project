generate_java_code
add_call_chain(<<a,A,a>>)
subtraction
add_class(b)
add_attribute("a", "a", "INTEGER")
type_check
int_value (12)
add_call_chain(<<D,INTEGER>>)
subtraction
add_command("C", "d", <<["BOOLEAN", "INTEGER"], ["a", "e"], ["d", "INTEGER"], ["A", "INTEGER"]>>)
add_call_chain(<<C,A,a,D,d>>)
add_call_chain(<<B,D,D,e,d,a>>)
add_query("D", "D", <<["e", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["B", "A"]>>, "b")
add_command("d", "D", <<["C", "INTEGER"], ["a", "D"]>>)
bool_value (true)
add_call_chain(<<A,D,c,a,d,C,INTEGER>>)
numerical_negation
addition
add_command("e", "D", <<["A", "BOOLEAN"], ["d", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "B"], ["INTEGER", "INTEGER"]>>)
add_attribute("D", "d", "BOOLEAN")
conjunction
logical_negation
int_value (34)
add_query("b", "c", <<["C", "INTEGER"], ["INTEGER", "b"]>>, "d")
bool_value (true)
add_call_chain(<<D,B,INTEGER,B,B,e,C>>)
add_command("b", "a", <<["d", "D"], ["A", "INTEGER"], ["A", "INTEGER"]>>)
add_query("C", "d", <<["B", "b"], ["D", "BOOLEAN"], ["c", "INTEGER"], ["d", "INTEGER"], ["INTEGER", "BOOLEAN"], ["C", "BOOLEAN"]>>, "c")
add_query("d", "b", <<["A", "c"], ["D", "INTEGER"]>>, "c")
add_call_chain(<<B,D,D>>)
generate_java_code
bool_value (true)
int_value (13)
numerical_negation
add_command("e", "D", <<["D", "C"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "A"], ["c", "INTEGER"], ["c", "INTEGER"]>>)
int_value (1)
add_call_chain(<<a,c,C,B,c,a,d,d,e>>)
generate_java_code
add_call_chain(<<D,d,c,BOOLEAN,BOOLEAN>>)
add_command("B", "C", <<["D", "d"], ["e", "BOOLEAN"], ["d", "INTEGER"], ["C", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["c", "e"], ["d", "BOOLEAN"], ["a", "BOOLEAN"]>>)
disjunction
bool_value (false)
int_value (33)
add_attribute("B", "a", "e")
add_query("D", "D", <<["A", "BOOLEAN"], ["D", "d"], ["D", "b"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["a", "d"]>>, "d")
generate_java_code
greater_than
add_query("D", "INTEGER", <<["e", "INTEGER"], ["b", "C"], ["a", "INTEGER"], ["A", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "BOOLEAN"]>>, "B")
numerical_negation
add_attribute("INTEGER", "d", "BOOLEAN")
int_value (26)
add_query("D", "INTEGER", <<["e", "D"], ["b", "d"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["a", "e"], ["A", "BOOLEAN"], ["B", "INTEGER"]>>, "BOOLEAN")
add_command("B", "B", <<["D", "INTEGER"], ["a", "BOOLEAN"], ["C", "e"], ["D", "d"], ["b", "A"], ["INTEGER", "INTEGER"], ["A", "BOOLEAN"]>>)
add_attribute("C", "c", "BOOLEAN")
add_class(a)
add_attribute("B", "a", "INTEGER")
addition
bool_value (true)
add_attribute("c", "D", "BOOLEAN")
logical_negation
add_call_chain(<<C,A,B,B,c>>)
add_attribute("A", "c", "B")
add_call_chain(<<e,D,C,d,e,d>>)
modulo
numerical_negation
numerical_negation
numerical_negation
type_check
add_query("D", "A", <<["INTEGER", "INTEGER"], ["D", "B"], ["a", "BOOLEAN"], ["c", "e"], ["A", "INTEGER"]>>, "c")
bool_value (true)
int_value (42)
add_attribute("D", "e", "BOOLEAN")
type_check
add_call_chain(<<e,A,b,C,A,BOOLEAN>>)
int_value (38)
logical_negation
add_attribute("b", "D", "BOOLEAN")
type_check
logical_negation
int_value (29)
subtraction
add_call_chain(<<C,d,D,D,C,BOOLEAN>>)
add_command("D", "A", <<["c", "C"], ["B", "INTEGER"]>>)
add_attribute("D", "A", "d")
int_value (21)
add_call_chain(<<BOOLEAN,c>>)
add_query("c", "C", <<["e", "BOOLEAN"], ["c", "D"], ["b", "b"], ["A", "BOOLEAN"], ["INTEGER", "d"], ["c", "BOOLEAN"], ["D", "INTEGER"]>>, "C")
bool_value (false)
numerical_negation
add_attribute("d", "d", "INTEGER")
add_query("e", "a", <<["c", "C"], ["D", "A"], ["a", "e"]>>, "d")
add_command("C", "B", <<["B", "INTEGER"], ["C", "a"], ["C", "BOOLEAN"], ["c", "a"], ["C", "INTEGER"]>>)
int_value (2)
logical_negation
numerical_negation
add_command("D", "c", <<["d", "D"]>>)
add_class(D)
bool_value (false)
add_attribute("a", "B", "INTEGER")
add_query("b", "a", <<["D", "BOOLEAN"], ["b", "c"], ["d", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "b"], ["C", "INTEGER"]>>, "INTEGER")
numerical_negation
add_query("C", "d", <<["A", "D"], ["D", "INTEGER"]>>, "d")
numerical_negation
add_query("BOOLEAN", "C", <<["e", "C"], ["D", "BOOLEAN"]>>, "D")
add_call_chain(<<INTEGER,A,e,B,A,d>>)
numerical_negation
subtraction
add_query("D", "C", <<["C", "BOOLEAN"], ["b", "e"], ["d", "INTEGER"], ["C", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "D"]>>, "a")
bool_value (true)
add_call_chain(<<D>>)
add_call_chain(<<A,A,C,a,B,a>>)
add_class(B)
bool_value (false)
int_value (13)
int_value (15)
bool_value (true)
add_call_chain(<<d,c,A>>)
add_command("B", "D", <<["d", "e"], ["C", "b"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["D", "INTEGER"]>>)
add_command("e", "C", <<["e", "a"], ["a", "BOOLEAN"], ["a", "INTEGER"], ["a", "INTEGER"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["e", "c"], ["C", "INTEGER"]>>)
generate_java_code
disjunction
generate_java_code
add_attribute("C", "A", "INTEGER")
conjunction
add_attribute("d", "INTEGER", "BOOLEAN")
bool_value (true)
add_call_chain(<<A,a,d,C,b>>)
int_value (2)
type_check
logical_negation
bool_value (false)
add_call_chain(<<b,b,b,d,BOOLEAN,e,D>>)
logical_negation
add_query("A", "D", <<["c", "D"], ["A", "INTEGER"], ["D", "C"], ["a", "BOOLEAN"], ["A", "a"], ["d", "INTEGER"], ["INTEGER", "INTEGER"], ["C", "A"], ["B", "INTEGER"]>>, "c")
add_call_chain(<<INTEGER,C>>)
modulo
numerical_negation
add_command("D", "d", <<["a", "BOOLEAN"], ["C", "A"], ["d", "INTEGER"]>>)
add_command("B", "INTEGER", <<["C", "C"], ["INTEGER", "BOOLEAN"], ["B", "INTEGER"], ["d", "D"], ["a", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["d", "INTEGER"]>>)
int_value (4)
add_attribute("B", "e", "INTEGER")
generate_java_code
add_class(e)
int_value (14)
logical_negation
add_call_chain(<<C,C,D,d>>)
add_query("B", "B", <<["b", "A"], ["B", "INTEGER"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["e", "INTEGER"], ["e", "BOOLEAN"]>>, "c")
add_command("B", "c", <<["INTEGER", "A"], ["e", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["c", "C"], ["D", "c"], ["b", "BOOLEAN"], ["c", "INTEGER"]>>)
add_call_chain(<<C,C,b,b,e,A,b>>)
add_attribute("D", "b", "BOOLEAN")
add_class(c)
add_query("A", "C", <<["B", "d"]>>, "B")
generate_java_code
addition
add_call_chain(<<e,B,C,d>>)
type_check
type_check
add_class(BOOLEAN)
equals
add_class(e)
conjunction
bool_value (true)
add_call_chain(<<c,c>>)
add_call_chain(<<c,b,b,INTEGER,c,D,C,A>>)
int_value (36)
subtraction
generate_java_code
add_class(c)
disjunction
numerical_negation
add_attribute("e", "BOOLEAN", "C")
add_class(e)
add_attribute("C", "e", "INTEGER")
add_call_chain(<<a,b,e,d,B>>)
logical_negation
add_command("A", "D", <<["D", "BOOLEAN"], ["c", "BOOLEAN"]>>)
add_attribute("b", "D", "BOOLEAN")
bool_value (true)
bool_value (true)
modulo
numerical_negation
add_query("a", "d", <<["D", "c"], ["D", "BOOLEAN"], ["b", "a"], ["B", "INTEGER"], ["d", "BOOLEAN"]>>, "a")
add_command("d", "B", <<["D", "INTEGER"], ["c", "INTEGER"], ["B", "INTEGER"], ["c", "INTEGER"], ["a", "C"], ["B", "e"], ["A", "INTEGER"]>>)
conjunction
logical_negation
add_attribute("INTEGER", "d", "INTEGER")
add_call_chain(<<a,A,a,B,b,b,D,D>>)
add_call_chain(<<c,B,BOOLEAN,BOOLEAN,b,e,b,C,C>>)
generate_java_code
bool_value (false)
add_class(e)
add_call_chain(<<C>>)
add_call_chain(<<a,C,d,B,A,e,D,B>>)
add_attribute("b", "INTEGER", "INTEGER")
add_query("c", "b", <<["d", "BOOLEAN"], ["C", "D"], ["e", "BOOLEAN"]>>, "C")
bool_value (true)
add_command("C", "C", <<["INTEGER", "INTEGER"], ["b", "INTEGER"], ["b", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "INTEGER"], ["b", "INTEGER"], ["BOOLEAN", "INTEGER"]>>)
logical_negation
add_class(C)
logical_negation
generate_java_code
add_command("D", "D", <<["C", "INTEGER"], ["C", "e"]>>)
greater_than
add_command("C", "A", <<["c", "b"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["C", "INTEGER"]>>)
bool_value (true)
bool_value (true)
conjunction
type_check
bool_value (true)
add_attribute("e", "e", "BOOLEAN")
add_class(A)
add_call_chain(<<b>>)
add_attribute("a", "C", "C")
add_query("C", "b", <<["a", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["e", "BOOLEAN"]>>, "D")
add_attribute("D", "BOOLEAN", "a")
add_command("B", "B", <<["D", "C"], ["a", "BOOLEAN"], ["C", "b"], ["B", "INTEGER"], ["D", "INTEGER"], ["c", "INTEGER"]>>)
numerical_negation
int_value (1)
bool_value (false)
type_check
add_call_chain(<<B,A,A,c,D,D,C,e,C>>)
add_attribute("C", "INTEGER", "INTEGER")
add_call_chain(<<B,D,a,A,D,C,c,a,D>>)
add_attribute("c", "INTEGER", "INTEGER")
add_query("INTEGER", "INTEGER", <<["BOOLEAN", "INTEGER"], ["B", "A"], ["a", "INTEGER"], ["b", "INTEGER"]>>, "D")
disjunction
equals
int_value (37)
add_call_chain(<<b,c,b,B,b,D>>)
logical_negation
generate_java_code
add_command("d", "A", <<["D", "A"], ["a", "INTEGER"]>>)
bool_value (true)
add_class(D)
less_than
logical_negation
add_class(b)
numerical_negation
int_value (15)
add_command("A", "D", <<["e", "d"], ["d", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["A", "B"], ["b", "b"], ["B", "C"], ["A", "BOOLEAN"], ["c", "BOOLEAN"]>>)
subtraction
generate_java_code
add_class(d)
bool_value (true)
int_value (42)
add_command("D", "B", <<["d", "d"], ["a", "INTEGER"], ["b", "INTEGER"], ["c", "b"], ["d", "b"], ["B", "BOOLEAN"], ["d", "a"], ["a", "INTEGER"]>>)
