disjunction
logical_negation
numerical_negation
add_attribute("A", "b", "C")
int_value (27)
int_value (27)
int_value (37)
int_value (19)
conjunction
generate_java_code
add_call_chain(<<a>>)
add_command("A", "BOOLEAN", <<["INTEGER", "c"], ["a", "INTEGER"], ["e", "BOOLEAN"], ["BOOLEAN", "B"], ["B", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["c", "BOOLEAN"], ["c", "INTEGER"], ["B", "b"]>>)
add_call_chain(<<d,A,a,B,INTEGER,b>>)
type_check
numerical_negation
bool_value (false)
add_command("d", "b", <<["D", "D"], ["B", "b"], ["INTEGER", "e"]>>)
type_check
addition
int_value (19)
add_query("D", "B", <<["D", "BOOLEAN"], ["C", "INTEGER"], ["e", "BOOLEAN"]>>, "INTEGER")
add_attribute("e", "e", "a")
logical_negation
add_command("b", "b", <<["c", "INTEGER"], ["a", "D"], ["BOOLEAN", "BOOLEAN"], ["e", "A"], ["c", "INTEGER"], ["a", "INTEGER"], ["A", "INTEGER"], ["b", "BOOLEAN"], ["B", "INTEGER"]>>)
add_call_chain(<<A,B,c,b,d,C,b,a>>)
conjunction
add_call_chain(<<c,c,D,d,C,A>>)
add_call_chain(<<c,d,a,A,B,INTEGER,C,c,b>>)
add_command("INTEGER", "d", <<["a", "INTEGER"], ["INTEGER", "C"], ["B", "BOOLEAN"], ["A", "e"]>>)
type_check
logical_negation
modulo
add_call_chain(<<a>>)
less_than
logical_negation
numerical_negation
add_call_chain(<<C,e>>)
type_check
logical_negation
numerical_negation
generate_java_code
logical_negation
add_call_chain(<<INTEGER,d,B,b,a,a,c,b,D>>)
add_call_chain(<<C,d,B,INTEGER,B,c,c,e,B>>)
modulo
numerical_negation
add_call_chain(<<B>>)
add_call_chain(<<e,B,BOOLEAN>>)
bool_value (false)
add_call_chain(<<b,a,b,INTEGER,d,e,B,e>>)
generate_java_code
add_call_chain(<<a,b,A,INTEGER,a,a,C,C,A>>)
add_call_chain(<<e>>)
add_command("D", "D", <<["C", "INTEGER"], ["C", "BOOLEAN"], ["d", "INTEGER"]>>)
add_query("C", "e", <<["D", "BOOLEAN"], ["b", "A"], ["BOOLEAN", "INTEGER"], ["c", "D"], ["D", "INTEGER"]>>, "d")
numerical_negation
add_query("b", "A", <<["C", "INTEGER"], ["D", "BOOLEAN"]>>, "D")
add_command("A", "C", <<["c", "a"]>>)
bool_value (true)
add_call_chain(<<C>>)
add_command("d", "C", <<["A", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "a"]>>)
add_command("A", "A", <<["BOOLEAN", "BOOLEAN"]>>)
add_class(B)
equals
add_query("D", "C", <<["B", "C"], ["C", "INTEGER"], ["B", "BOOLEAN"]>>, "d")
add_query("a", "c", <<["a", "BOOLEAN"], ["D", "b"], ["C", "BOOLEAN"], ["INTEGER", "B"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "BOOLEAN"], ["b", "INTEGER"]>>, "b")
add_attribute("C", "A", "INTEGER")
numerical_negation
int_value (28)
add_call_chain(<<B,c,c,C>>)
add_call_chain(<<c,a,b,D,a,A,D,c,d>>)
add_query("e", "b", <<["D", "INTEGER"], ["B", "BOOLEAN"], ["D", "INTEGER"]>>, "c")
quotient
generate_java_code
generate_java_code
bool_value (false)
add_call_chain(<<e,c,d,D,b,c,A,a>>)
add_attribute("INTEGER", "C", "INTEGER")
generate_java_code
numerical_negation
add_call_chain(<<d,e,D,A,a,c,c,c,C>>)
conjunction
numerical_negation
type_check
add_call_chain(<<C,B>>)
logical_negation
add_call_chain(<<A,B,D>>)
logical_negation
int_value (48)
numerical_negation
modulo
bool_value (true)
numerical_negation
logical_negation
add_query("e", "a", <<["b", "BOOLEAN"], ["D", "e"], ["B", "D"], ["D", "BOOLEAN"]>>, "C")
add_call_chain(<<b,B,d,D,C,e,d,B,b>>)
bool_value (false)
type_check
add_call_chain(<<a,c>>)
add_attribute("B", "d", "INTEGER")
add_command("B", "d", <<["A", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "D"], ["a", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "C"], ["INTEGER", "INTEGER"]>>)
logical_negation
less_than
add_attribute("a", "b", "C")
bool_value (false)
subtraction
int_value (6)
add_call_chain(<<c,b>>)
int_value (44)
logical_negation
add_call_chain(<<c,D,D,a>>)
int_value (27)
type_check
generate_java_code
logical_negation
add_attribute("D", "A", "BOOLEAN")
add_command("b", "e", <<["a", "BOOLEAN"], ["B", "INTEGER"], ["A", "INTEGER"], ["d", "C"]>>)
type_check
addition
add_command("A", "A", <<["C", "e"], ["BOOLEAN", "e"], ["B", "INTEGER"], ["c", "BOOLEAN"], ["d", "b"], ["B", "e"], ["a", "A"]>>)
add_command("B", "b", <<["b", "INTEGER"], ["INTEGER", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "BOOLEAN"]>>)
int_value (13)
logical_negation
add_attribute("D", "b", "INTEGER")
disjunction
numerical_negation
type_check
bool_value (false)
disjunction
add_class(d)
add_query("D", "C", <<["INTEGER", "INTEGER"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["a", "INTEGER"], ["d", "BOOLEAN"], ["D", "D"], ["D", "INTEGER"], ["e", "INTEGER"], ["D", "INTEGER"]>>, "A")
bool_value (false)
bool_value (true)
int_value (21)
add_call_chain(<<e,C>>)
add_class(D)
add_call_chain(<<A,a,d,a,B,B,INTEGER,b,A>>)
add_query("e", "A", <<["e", "BOOLEAN"], ["a", "d"]>>, "A")
add_call_chain(<<B,B,B,D,c,e,e,A,BOOLEAN>>)
less_than
equals
multiplication
generate_java_code
type_check
add_query("C", "A", <<["A", "INTEGER"], ["B", "INTEGER"], ["b", "d"], ["d", "BOOLEAN"], ["a", "INTEGER"], ["B", "BOOLEAN"], ["e", "D"], ["d", "e"], ["A", "INTEGER"]>>, "INTEGER")
numerical_negation
bool_value (false)
add_query("B", "e", <<["d", "BOOLEAN"], ["c", "D"], ["a", "BOOLEAN"], ["B", "INTEGER"], ["a", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>, "e")
add_attribute("b", "d", "INTEGER")
int_value (34)
multiplication
add_query("a", "B", <<["INTEGER", "BOOLEAN"], ["B", "D"], ["C", "INTEGER"], ["D", "B"]>>, "D")
add_command("A", "d", <<["C", "INTEGER"], ["e", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["INTEGER", "B"], ["b", "BOOLEAN"]>>)
add_query("INTEGER", "e", <<["b", "BOOLEAN"]>>, "e")
bool_value (false)
generate_java_code
add_class(D)
add_command("INTEGER", "a", <<["A", "INTEGER"]>>)
conjunction
add_call_chain(<<C,C,e,C,BOOLEAN,INTEGER,c,D>>)
int_value (27)
add_command("d", "c", <<["a", "e"]>>)
add_query("A", "D", <<["c", "D"], ["D", "A"], ["d", "BOOLEAN"], ["c", "BOOLEAN"]>>, "a")
add_attribute("A", "a", "BOOLEAN")
type_check
add_call_chain(<<A,b,INTEGER,INTEGER,D,D,C,e,b>>)
add_class(A)
add_attribute("a", "e", "A")
generate_java_code
add_query("e", "A", <<["c", "B"], ["D", "BOOLEAN"], ["e", "INTEGER"], ["a", "BOOLEAN"], ["b", "INTEGER"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["B", "INTEGER"]>>, "BOOLEAN")
add_class(B)
logical_negation
bool_value (false)
add_query("B", "BOOLEAN", <<["B", "BOOLEAN"], ["A", "b"], ["A", "INTEGER"], ["A", "INTEGER"], ["C", "c"]>>, "e")
numerical_negation
add_call_chain(<<BOOLEAN,D,A,d,e>>)
add_command("c", "INTEGER", <<["C", "c"], ["D", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "BOOLEAN"]>>)
logical_negation
add_attribute("A", "e", "C")
add_query("a", "A", <<["e", "BOOLEAN"], ["b", "INTEGER"], ["d", "INTEGER"]>>, "c")
int_value (15)
numerical_negation
logical_negation
disjunction
add_call_chain(<<A>>)
add_call_chain(<<A,B,INTEGER,b>>)
numerical_negation
add_attribute("C", "A", "INTEGER")
generate_java_code
add_query("A", "BOOLEAN", <<["C", "BOOLEAN"]>>, "e")
int_value (4)
logical_negation
