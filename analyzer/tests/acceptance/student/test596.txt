add_attribute("B", "d", "D")
add_class(d)
disjunction
less_than
logical_negation
add_query("e", "D", <<["e", "BOOLEAN"], ["d", "A"], ["INTEGER", "INTEGER"], ["C", "e"], ["A", "B"], ["A", "INTEGER"], ["D", "INTEGER"]>>, "b")
type_check
add_attribute("B", "e", "BOOLEAN")
add_query("b", "D", <<["a", "d"], ["a", "e"], ["c", "b"], ["b", "BOOLEAN"]>>, "b")
multiplication
numerical_negation
add_call_chain(<<d,C,C>>)
add_call_chain(<<BOOLEAN,D,c,A,C>>)
add_command("A", "a", <<["c", "INTEGER"], ["INTEGER", "INTEGER"], ["A", "B"], ["d", "c"]>>)
add_query("C", "e", <<["a", "d"], ["e", "INTEGER"]>>, "B")
add_call_chain(<<b,e,C,D>>)
add_query("A", "c", <<["e", "BOOLEAN"], ["d", "BOOLEAN"]>>, "d")
int_value (19)
add_query("a", "a", <<["c", "INTEGER"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["d", "A"]>>, "C")
bool_value (true)
logical_negation
int_value (34)
modulo
add_call_chain(<<A,INTEGER,b>>)
add_call_chain(<<b,e,a,D,b>>)
int_value (24)
add_class(C)
subtraction
add_class(D)
less_than
add_command("BOOLEAN", "A", <<["c", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["BOOLEAN", "b"], ["A", "BOOLEAN"]>>)
int_value (14)
add_attribute("c", "e", "BOOLEAN")
add_command("C", "e", <<["b", "d"], ["e", "INTEGER"], ["d", "BOOLEAN"], ["D", "INTEGER"], ["b", "BOOLEAN"], ["a", "B"], ["D", "b"], ["e", "b"]>>)
quotient
bool_value (true)
numerical_negation
numerical_negation
add_call_chain(<<e,B,c,C,INTEGER,b,A,D>>)
generate_java_code
add_call_chain(<<C>>)
logical_negation
conjunction
generate_java_code
add_command("b", "d", <<["B", "INTEGER"], ["INTEGER", "BOOLEAN"], ["e", "INTEGER"], ["A", "BOOLEAN"], ["d", "C"]>>)
numerical_negation
generate_java_code
bool_value (true)
greater_than
add_attribute("e", "e", "C")
generate_java_code
add_attribute("C", "b", "BOOLEAN")
add_call_chain(<<A,a,A,B,a,d,a>>)
conjunction
add_attribute("b", "B", "INTEGER")
bool_value (true)
add_class(d)
logical_negation
add_attribute("BOOLEAN", "d", "BOOLEAN")
type_check
add_command("B", "INTEGER", <<["B", "c"], ["D", "INTEGER"], ["a", "a"], ["BOOLEAN", "D"], ["C", "BOOLEAN"], ["d", "INTEGER"], ["BOOLEAN", "INTEGER"], ["b", "A"], ["B", "D"]>>)
subtraction
add_attribute("C", "B", "A")
add_query("b", "a", <<["D", "INTEGER"], ["B", "INTEGER"], ["C", "C"], ["B", "A"], ["e", "BOOLEAN"]>>, "d")
generate_java_code
type_check
modulo
conjunction
type_check
conjunction
generate_java_code
numerical_negation
add_attribute("b", "a", "INTEGER")
type_check
int_value (49)
bool_value (true)
type_check
add_call_chain(<<a>>)
numerical_negation
disjunction
logical_negation
add_call_chain(<<A,b,c,C,d,c,c,BOOLEAN,e>>)
add_attribute("d", "b", "INTEGER")
int_value (4)
greater_than
bool_value (true)
add_call_chain(<<A,e,c>>)
add_call_chain(<<C,INTEGER,BOOLEAN,INTEGER,A,B,d,b>>)
numerical_negation
add_call_chain(<<D,e,C,c,c,c,A,B>>)
logical_negation
bool_value (true)
bool_value (false)
numerical_negation
numerical_negation
subtraction
add_call_chain(<<a,b,e,D,c,C>>)
add_class(c)
add_query("C", "C", <<["A", "C"], ["C", "BOOLEAN"], ["B", "INTEGER"], ["A", "A"], ["B", "INTEGER"], ["B", "BOOLEAN"]>>, "e")
int_value (5)
int_value (24)
add_command("a", "C", <<["C", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "e"], ["e", "INTEGER"], ["b", "A"]>>)
generate_java_code
add_query("b", "b", <<["A", "BOOLEAN"], ["c", "BOOLEAN"], ["a", "INTEGER"], ["a", "b"], ["c", "D"], ["C", "BOOLEAN"]>>, "B")
bool_value (false)
int_value (46)
generate_java_code
add_query("C", "b", <<["c", "INTEGER"], ["D", "BOOLEAN"]>>, "BOOLEAN")
type_check
add_attribute("D", "e", "INTEGER")
equals
add_command("C", "b", <<["D", "B"]>>)
add_command("C", "C", <<["B", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["a", "A"]>>)
add_command("B", "A", <<["a", "BOOLEAN"], ["d", "INTEGER"]>>)
equals
logical_negation
add_call_chain(<<B,A,D>>)
bool_value (false)
add_command("b", "A", <<["INTEGER", "a"]>>)
add_attribute("e", "A", "INTEGER")
add_call_chain(<<a,a,A,D,D,D>>)
add_call_chain(<<a,c,BOOLEAN,b,d,D,D>>)
add_query("b", "D", <<["d", "INTEGER"], ["B", "BOOLEAN"], ["d", "c"], ["e", "BOOLEAN"], ["d", "INTEGER"], ["d", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "BOOLEAN"]>>, "e")
add_attribute("e", "d", "BOOLEAN")
add_query("a", "a", <<["b", "INTEGER"], ["INTEGER", "B"], ["D", "INTEGER"], ["A", "c"], ["e", "INTEGER"], ["a", "BOOLEAN"], ["A", "e"], ["BOOLEAN", "INTEGER"], ["d", "e"]>>, "c")
equals
add_attribute("C", "D", "BOOLEAN")
conjunction
logical_negation
bool_value (true)
add_attribute("INTEGER", "B", "c")
add_query("c", "b", <<["d", "BOOLEAN"], ["c", "B"], ["a", "BOOLEAN"], ["b", "BOOLEAN"], ["b", "B"], ["b", "D"]>>, "d")
add_query("INTEGER", "b", <<["e", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "BOOLEAN"]>>, "a")
add_class(C)
int_value (47)
generate_java_code
add_attribute("e", "b", "INTEGER")
logical_negation
subtraction
numerical_negation
bool_value (true)
int_value (42)
bool_value (true)
add_call_chain(<<D,B,a,c,b,e,c,b,a>>)
add_attribute("b", "a", "BOOLEAN")
disjunction
add_call_chain(<<B,D,a,C,A,D,d,c>>)
int_value (2)
disjunction
add_attribute("c", "BOOLEAN", "BOOLEAN")
add_class(d)
bool_value (false)
logical_negation
add_class(C)
bool_value (true)
type_check
logical_negation
add_query("BOOLEAN", "INTEGER", <<["C", "INTEGER"], ["b", "BOOLEAN"], ["b", "B"], ["c", "c"], ["d", "BOOLEAN"], ["a", "a"]>>, "A")
int_value (43)
int_value (11)
add_query("e", "a", <<["D", "BOOLEAN"], ["D", "C"], ["B", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["a", "INTEGER"], ["d", "INTEGER"], ["a", "BOOLEAN"]>>, "A")
add_call_chain(<<c,b,D,B,D,INTEGER>>)
generate_java_code
add_query("D", "BOOLEAN", <<["e", "INTEGER"]>>, "c")
bool_value (true)
add_call_chain(<<B,B>>)
add_attribute("A", "C", "INTEGER")
quotient
type_check
add_call_chain(<<d,A,D,C,BOOLEAN,e,BOOLEAN>>)
multiplication
add_query("B", "A", <<["C", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["A", "INTEGER"], ["INTEGER", "C"], ["A", "BOOLEAN"], ["B", "INTEGER"]>>, "c")
generate_java_code
int_value (49)
equals
int_value (46)
add_attribute("d", "A", "INTEGER")
numerical_negation
logical_negation
numerical_negation
add_query("e", "b", <<["C", "BOOLEAN"], ["c", "BOOLEAN"]>>, "b")
add_call_chain(<<B,INTEGER,d>>)
equals
logical_negation
add_attribute("D", "A", "d")
add_call_chain(<<INTEGER>>)
int_value (49)
numerical_negation
int_value (31)
type_check
addition
add_call_chain(<<B>>)
add_command("a", "c", <<["B", "d"], ["a", "BOOLEAN"], ["c", "BOOLEAN"]>>)
add_attribute("BOOLEAN", "A", "INTEGER")
numerical_negation
int_value (27)
logical_negation
add_attribute("B", "B", "b")
int_value (20)
numerical_negation
add_attribute("B", "B", "BOOLEAN")
bool_value (true)
add_attribute("B", "C", "INTEGER")
type_check
add_call_chain(<<D,C,c,c>>)
add_attribute("A", "a", "BOOLEAN")
add_command("C", "d", <<["B", "INTEGER"], ["d", "BOOLEAN"], ["e", "INTEGER"], ["C", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "e"], ["e", "INTEGER"], ["e", "BOOLEAN"], ["d", "BOOLEAN"]>>)
logical_negation
int_value (17)
add_attribute("C", "d", "INTEGER")
bool_value (true)
add_attribute("d", "D", "BOOLEAN")
add_attribute("BOOLEAN", "e", "INTEGER")
addition
bool_value (true)
