add_command("D", "C", <<["B", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "D"], ["C", "INTEGER"]>>)
add_class(BOOLEAN)
generate_java_code
add_command("BOOLEAN", "b", <<["D", "B"], ["A", "INTEGER"], ["a", "BOOLEAN"], ["e", "a"], ["A", "A"]>>)
add_class(d)
bool_value (true)
add_command("b", "d", <<["A", "b"], ["c", "d"]>>)
bool_value (true)
add_call_chain(<<a,D,D,B,a>>)
less_than
equals
add_class(e)
equals
type_check
add_class(A)
add_call_chain(<<c,c,D,B,d,a,C>>)
add_query("b", "A", <<["a", "a"], ["c", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "d"], ["C", "D"], ["b", "INTEGER"]>>, "A")
bool_value (true)
numerical_negation
equals
add_class(d)
add_query("A", "A", <<["a", "INTEGER"], ["C", "INTEGER"], ["b", "c"], ["C", "A"], ["d", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "BOOLEAN"]>>, "b")
generate_java_code
add_command("BOOLEAN", "A", <<["B", "a"], ["A", "INTEGER"], ["A", "BOOLEAN"], ["C", "e"]>>)
add_call_chain(<<INTEGER,b,INTEGER,d,d,BOOLEAN,a,e,b>>)
add_call_chain(<<A,c,BOOLEAN>>)
bool_value (false)
logical_negation
int_value (25)
add_class(BOOLEAN)
numerical_negation
generate_java_code
logical_negation
int_value (8)
int_value (21)
greater_than
add_command("D", "D", <<["c", "BOOLEAN"], ["e", "INTEGER"], ["c", "d"], ["a", "INTEGER"], ["A", "C"], ["D", "b"], ["A", "D"], ["A", "BOOLEAN"]>>)
add_call_chain(<<A,B>>)
bool_value (true)
add_call_chain(<<a,B,A,B,C,A>>)
add_query("b", "a", <<["A", "c"], ["C", "INTEGER"], ["INTEGER", "BOOLEAN"], ["C", "INTEGER"]>>, "d")
bool_value (true)
int_value (42)
logical_negation
add_query("B", "BOOLEAN", <<["B", "INTEGER"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["B", "B"], ["C", "BOOLEAN"], ["b", "INTEGER"]>>, "A")
add_class(B)
numerical_negation
logical_negation
add_query("a", "INTEGER", <<["BOOLEAN", "BOOLEAN"], ["INTEGER", "b"], ["B", "BOOLEAN"], ["b", "d"], ["b", "INTEGER"], ["BOOLEAN", "INTEGER"], ["C", "D"]>>, "d")
logical_negation
numerical_negation
bool_value (true)
bool_value (true)
type_check
add_query("a", "C", <<["b", "INTEGER"], ["D", "c"]>>, "b")
int_value (22)
bool_value (false)
add_call_chain(<<d,b,d,e,B,c,a,C>>)
logical_negation
disjunction
logical_negation
conjunction
add_command("A", "D", <<["b", "A"], ["e", "INTEGER"], ["c", "A"]>>)
logical_negation
conjunction
add_query("INTEGER", "INTEGER", <<["d", "D"], ["A", "BOOLEAN"], ["D", "INTEGER"], ["a", "A"], ["C", "INTEGER"], ["a", "INTEGER"]>>, "b")
add_call_chain(<<e,BOOLEAN,e,D,D,c,e,C,e>>)
logical_negation
logical_negation
int_value (23)
subtraction
less_than
type_check
int_value (20)
add_query("e", "d", <<["BOOLEAN", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "INTEGER"], ["A", "BOOLEAN"], ["c", "e"], ["a", "d"]>>, "b")
add_call_chain(<<a>>)
add_command("B", "A", <<["a", "INTEGER"], ["C", "D"]>>)
add_attribute("b", "B", "BOOLEAN")
add_query("d", "c", <<["a", "BOOLEAN"], ["B", "INTEGER"], ["C", "INTEGER"], ["C", "INTEGER"], ["d", "C"], ["c", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "INTEGER"]>>, "e")
add_query("e", "c", <<["e", "C"], ["A", "INTEGER"], ["d", "BOOLEAN"], ["D", "B"], ["b", "BOOLEAN"], ["C", "e"], ["c", "BOOLEAN"], ["C", "INTEGER"], ["b", "BOOLEAN"]>>, "e")
add_call_chain(<<A,b>>)
add_query("B", "c", <<["c", "INTEGER"], ["INTEGER", "INTEGER"], ["A", "BOOLEAN"], ["d", "INTEGER"], ["C", "BOOLEAN"], ["e", "INTEGER"], ["e", "INTEGER"], ["B", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>, "BOOLEAN")
add_query("A", "a", <<["c", "BOOLEAN"]>>, "a")
add_attribute("A", "a", "b")
add_query("B", "INTEGER", <<["a", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["BOOLEAN", "D"], ["e", "BOOLEAN"], ["e", "BOOLEAN"]>>, "INTEGER")
bool_value (true)
add_call_chain(<<c,A,b>>)
add_class(c)
multiplication
logical_negation
add_query("B", "b", <<["a", "BOOLEAN"], ["e", "A"], ["D", "INTEGER"], ["d", "C"]>>, "b")
add_class(D)
add_call_chain(<<a,B,C,b,d,a,C>>)
add_query("B", "D", <<["b", "BOOLEAN"], ["A", "BOOLEAN"]>>, "A")
numerical_negation
numerical_negation
generate_java_code
add_call_chain(<<e>>)
add_call_chain(<<C,B,A,C,INTEGER,B,BOOLEAN,a,d>>)
type_check
generate_java_code
int_value (11)
add_query("INTEGER", "e", <<["INTEGER", "BOOLEAN"]>>, "C")
add_call_chain(<<D,d,C,c,c,d,C>>)
numerical_negation
add_command("A", "D", <<["a", "C"], ["e", "INTEGER"], ["C", "e"], ["A", "BOOLEAN"], ["A", "INTEGER"], ["e", "BOOLEAN"]>>)
int_value (34)
add_query("B", "e", <<["B", "D"], ["D", "d"], ["INTEGER", "BOOLEAN"], ["a", "A"]>>, "b")
type_check
add_class(a)
add_command("A", "B", <<["INTEGER", "B"], ["b", "b"], ["a", "INTEGER"], ["INTEGER", "INTEGER"], ["b", "d"], ["c", "BOOLEAN"], ["b", "BOOLEAN"]>>)
conjunction
add_query("C", "e", <<["B", "BOOLEAN"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["B", "d"], ["C", "INTEGER"], ["B", "INTEGER"], ["d", "B"], ["b", "B"]>>, "c")
type_check
type_check
add_attribute("e", "C", "BOOLEAN")
generate_java_code
add_attribute("d", "INTEGER", "BOOLEAN")
add_command("a", "BOOLEAN", <<["a", "INTEGER"], ["e", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["B", "INTEGER"], ["C", "D"], ["A", "a"], ["a", "A"]>>)
equals
add_query("e", "B", <<["INTEGER", "C"], ["c", "c"], ["D", "BOOLEAN"]>>, "INTEGER")
generate_java_code
add_call_chain(<<a,D,e,D,C,a>>)
add_query("D", "BOOLEAN", <<["BOOLEAN", "INTEGER"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["c", "INTEGER"], ["C", "b"], ["INTEGER", "INTEGER"]>>, "B")
numerical_negation
numerical_negation
add_command("B", "e", <<["e", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["A", "D"], ["C", "INTEGER"], ["B", "BOOLEAN"]>>)
add_attribute("C", "a", "BOOLEAN")
add_command("c", "C", <<["D", "a"]>>)
bool_value (false)
type_check
add_class(d)
add_query("A", "d", <<["c", "INTEGER"], ["C", "d"], ["b", "e"], ["e", "BOOLEAN"]>>, "D")
add_attribute("d", "e", "INTEGER")
modulo
bool_value (false)
add_attribute("c", "a", "b")
numerical_negation
generate_java_code
greater_than
add_call_chain(<<e,C,A>>)
numerical_negation
conjunction
generate_java_code
add_attribute("e", "c", "A")
int_value (32)
quotient
add_query("BOOLEAN", "b", <<["A", "BOOLEAN"]>>, "a")
bool_value (false)
type_check
add_attribute("b", "a", "INTEGER")
add_call_chain(<<C,B,INTEGER,C,B>>)
add_query("a", "c", <<["C", "A"], ["D", "INTEGER"]>>, "A")
add_query("D", "d", <<["INTEGER", "b"], ["e", "A"], ["INTEGER", "BOOLEAN"], ["e", "INTEGER"], ["d", "BOOLEAN"], ["b", "c"], ["b", "BOOLEAN"], ["INTEGER", "A"], ["b", "BOOLEAN"]>>, "e")
int_value (8)
add_command("c", "B", <<["B", "BOOLEAN"], ["B", "INTEGER"], ["A", "BOOLEAN"]>>)
int_value (23)
greater_than
int_value (44)
add_call_chain(<<e>>)
int_value (20)
addition
add_attribute("d", "B", "BOOLEAN")
quotient
numerical_negation
int_value (22)
add_query("e", "D", <<["e", "INTEGER"], ["a", "BOOLEAN"], ["C", "INTEGER"], ["a", "BOOLEAN"], ["c", "INTEGER"], ["d", "C"], ["BOOLEAN", "INTEGER"], ["D", "BOOLEAN"], ["b", "INTEGER"]>>, "D")
bool_value (true)
generate_java_code
add_command("B", "B", <<["C", "BOOLEAN"], ["e", "e"], ["D", "BOOLEAN"]>>)
add_query("BOOLEAN", "D", <<["c", "b"], ["a", "INTEGER"], ["BOOLEAN", "INTEGER"], ["A", "BOOLEAN"], ["a", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["INTEGER", "a"]>>, "b")
add_call_chain(<<e,C>>)
add_command("c", "e", <<["C", "INTEGER"], ["A", "BOOLEAN"], ["b", "e"], ["b", "D"], ["BOOLEAN", "BOOLEAN"], ["c", "INTEGER"], ["C", "b"], ["b", "INTEGER"], ["a", "BOOLEAN"]>>)
logical_negation
add_call_chain(<<d,BOOLEAN,C,A,d,B,C,b>>)
add_query("d", "INTEGER", <<["c", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "A"]>>, "d")
add_query("d", "a", <<["c", "INTEGER"], ["C", "B"], ["D", "C"], ["a", "INTEGER"], ["D", "c"]>>, "A")
bool_value (true)
add_attribute("d", "INTEGER", "e")
numerical_negation
type_check
add_call_chain(<<b>>)
numerical_negation
add_command("d", "C", <<["C", "e"], ["a", "BOOLEAN"], ["INTEGER", "INTEGER"], ["D", "INTEGER"], ["B", "INTEGER"], ["a", "e"], ["e", "INTEGER"], ["c", "INTEGER"], ["a", "BOOLEAN"]>>)
generate_java_code
numerical_negation
numerical_negation
numerical_negation
add_query("a", "C", <<["C", "INTEGER"], ["D", "INTEGER"]>>, "BOOLEAN")
int_value (32)
bool_value (false)
add_command("d", "B", <<["C", "D"], ["C", "c"], ["C", "INTEGER"], ["a", "INTEGER"], ["a", "B"], ["c", "BOOLEAN"], ["B", "C"], ["a", "BOOLEAN"], ["c", "BOOLEAN"]>>)
add_class(d)
add_call_chain(<<B,b,c,B,B,BOOLEAN>>)
add_call_chain(<<b,D,C,A>>)
equals
add_call_chain(<<e,D,a>>)
add_call_chain(<<d,c,INTEGER>>)
greater_than
add_query("D", "e", <<["c", "d"], ["c", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "BOOLEAN"]>>, "c")
int_value (33)
add_attribute("D", "C", "INTEGER")
add_call_chain(<<A,c,BOOLEAN,d,b,D>>)
logical_negation
add_attribute("B", "B", "e")
add_class(D)
type_check
int_value (43)
add_call_chain(<<B,A,e,BOOLEAN>>)
numerical_negation
logical_negation
bool_value (false)
type_check
type_check
bool_value (true)
numerical_negation
logical_negation
type_check
add_call_chain(<<C,e,B,d,A>>)
add_class(e)
add_call_chain(<<a,c,BOOLEAN,C,A,D,C,c,D>>)
add_call_chain(<<D,A,B,C,BOOLEAN>>)
less_than
