int_value (10)
add_call_chain(<<d>>)
add_class(BOOLEAN)
add_attribute("b", "C", "BOOLEAN")
bool_value (false)
numerical_negation
type_check
type_check
greater_than
conjunction
type_check
modulo
add_command("B", "B", <<["D", "A"], ["C", "D"], ["D", "INTEGER"], ["INTEGER", "A"], ["A", "D"]>>)
add_attribute("D", "c", "BOOLEAN")
add_call_chain(<<d,a,A>>)
add_command("D", "d", <<["A", "INTEGER"], ["BOOLEAN", "a"], ["C", "BOOLEAN"], ["e", "INTEGER"]>>)
add_command("A", "B", <<["A", "INTEGER"], ["b", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "INTEGER"], ["D", "B"], ["D", "BOOLEAN"], ["B", "e"], ["a", "B"]>>)
add_attribute("B", "c", "C")
add_query("B", "b", <<["b", "INTEGER"]>>, "b")
add_attribute("D", "C", "c")
add_call_chain(<<B,BOOLEAN,c>>)
int_value (14)
add_query("A", "d", <<["c", "c"], ["C", "c"]>>, "C")
add_call_chain(<<D>>)
addition
numerical_negation
add_call_chain(<<C,a,A>>)
add_query("BOOLEAN", "A", <<["D", "BOOLEAN"]>>, "BOOLEAN")
add_attribute("b", "B", "INTEGER")
int_value (14)
type_check
add_query("a", "e", <<["C", "INTEGER"], ["c", "C"]>>, "B")
type_check
int_value (23)
logical_negation
add_command("d", "c", <<["B", "d"], ["B", "INTEGER"], ["c", "INTEGER"], ["b", "c"], ["C", "BOOLEAN"], ["a", "INTEGER"], ["e", "INTEGER"], ["BOOLEAN", "INTEGER"], ["C", "B"]>>)
add_command("c", "A", <<["d", "BOOLEAN"], ["D", "C"], ["d", "BOOLEAN"]>>)
add_call_chain(<<INTEGER,d,d,e,C,BOOLEAN>>)
int_value (34)
bool_value (true)
int_value (41)
logical_negation
logical_negation
add_class(c)
conjunction
add_attribute("D", "C", "e")
add_attribute("e", "INTEGER", "D")
logical_negation
add_call_chain(<<A,d,INTEGER,d,A>>)
modulo
int_value (20)
add_call_chain(<<b,b,C,a>>)
add_call_chain(<<D,B>>)
numerical_negation
numerical_negation
int_value (47)
add_command("B", "d", <<["C", "BOOLEAN"]>>)
numerical_negation
generate_java_code
int_value (17)
numerical_negation
logical_negation
bool_value (false)
logical_negation
add_attribute("C", "C", "BOOLEAN")
int_value (23)
bool_value (false)
add_attribute("INTEGER", "e", "BOOLEAN")
add_attribute("a", "D", "BOOLEAN")
add_attribute("A", "e", "INTEGER")
add_call_chain(<<c>>)
bool_value (true)
multiplication
logical_negation
generate_java_code
generate_java_code
numerical_negation
add_query("a", "e", <<["A", "INTEGER"], ["b", "INTEGER"]>>, "b")
add_class(C)
int_value (25)
add_call_chain(<<d,D,D>>)
add_attribute("b", "D", "INTEGER")
add_class(C)
add_class(c)
bool_value (true)
add_call_chain(<<D>>)
multiplication
bool_value (true)
int_value (47)
bool_value (true)
logical_negation
add_call_chain(<<A,BOOLEAN,A>>)
disjunction
add_attribute("C", "BOOLEAN", "b")
add_attribute("d", "c", "A")
add_command("C", "c", <<["d", "INTEGER"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["D", "INTEGER"]>>)
type_check
bool_value (false)
logical_negation
int_value (5)
add_call_chain(<<c,INTEGER,e,B,C,D,A>>)
logical_negation
add_command("B", "c", <<["a", "c"], ["c", "BOOLEAN"]>>)
add_query("a", "b", <<["c", "D"], ["INTEGER", "INTEGER"], ["b", "d"]>>, "INTEGER")
type_check
add_class(C)
bool_value (false)
add_call_chain(<<e,D>>)
numerical_negation
add_attribute("d", "d", "D")
bool_value (true)
generate_java_code
numerical_negation
add_query("INTEGER", "C", <<["b", "INTEGER"], ["C", "INTEGER"], ["B", "INTEGER"], ["B", "INTEGER"], ["e", "BOOLEAN"], ["D", "a"], ["c", "BOOLEAN"], ["b", "BOOLEAN"]>>, "BOOLEAN")
type_check
add_attribute("C", "e", "BOOLEAN")
bool_value (false)
less_than
add_attribute("b", "c", "BOOLEAN")
add_call_chain(<<BOOLEAN,INTEGER,B>>)
add_class(b)
add_class(B)
add_call_chain(<<d,a>>)
int_value (39)
multiplication
add_query("a", "d", <<["a", "BOOLEAN"], ["C", "e"], ["b", "BOOLEAN"], ["a", "c"], ["C", "INTEGER"], ["B", "D"], ["INTEGER", "BOOLEAN"], ["c", "INTEGER"]>>, "e")
add_query("A", "C", <<["B", "BOOLEAN"], ["A", "D"], ["a", "BOOLEAN"], ["D", "d"], ["b", "BOOLEAN"], ["c", "e"]>>, "d")
add_query("b", "b", <<["c", "INTEGER"], ["BOOLEAN", "C"], ["D", "B"], ["D", "INTEGER"]>>, "B")
conjunction
add_command("d", "C", <<["INTEGER", "BOOLEAN"], ["B", "b"], ["A", "e"], ["C", "BOOLEAN"], ["e", "INTEGER"], ["d", "BOOLEAN"], ["e", "INTEGER"], ["BOOLEAN", "INTEGER"], ["A", "INTEGER"]>>)
logical_negation
add_attribute("INTEGER", "INTEGER", "INTEGER")
equals
add_query("c", "d", <<["D", "INTEGER"], ["A", "INTEGER"], ["b", "BOOLEAN"], ["e", "INTEGER"], ["e", "b"], ["d", "INTEGER"], ["A", "B"], ["c", "d"]>>, "e")
add_call_chain(<<b,A,d,b,c,D,D,a>>)
add_call_chain(<<C>>)
add_query("C", "a", <<["d", "D"], ["a", "INTEGER"], ["A", "INTEGER"]>>, "e")
add_query("A", "d", <<["D", "B"], ["a", "INTEGER"]>>, "c")
int_value (42)
bool_value (false)
add_command("a", "d", <<["C", "INTEGER"], ["c", "BOOLEAN"], ["C", "INTEGER"], ["INTEGER", "B"], ["a", "d"]>>)
add_query("c", "c", <<["BOOLEAN", "INTEGER"], ["B", "B"], ["d", "INTEGER"], ["A", "B"], ["C", "c"], ["BOOLEAN", "B"]>>, "B")
int_value (46)
add_query("D", "INTEGER", <<["A", "INTEGER"], ["INTEGER", "INTEGER"], ["e", "C"], ["D", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["c", "BOOLEAN"]>>, "e")
equals
add_command("B", "B", <<["BOOLEAN", "BOOLEAN"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["D", "BOOLEAN"], ["a", "D"], ["a", "BOOLEAN"], ["D", "INTEGER"], ["c", "BOOLEAN"], ["D", "BOOLEAN"]>>)
int_value (23)
bool_value (true)
add_call_chain(<<D,b,B,e,D,B,a,A,D>>)
bool_value (false)
add_attribute("D", "d", "INTEGER")
greater_than
logical_negation
add_call_chain(<<d,b,A,BOOLEAN,B>>)
add_attribute("d", "c", "BOOLEAN")
disjunction
add_call_chain(<<C,D,d,INTEGER,e>>)
disjunction
add_call_chain(<<INTEGER,e,INTEGER,e,D,a>>)
bool_value (false)
add_query("BOOLEAN", "A", <<["C", "BOOLEAN"], ["a", "A"], ["a", "BOOLEAN"], ["e", "BOOLEAN"], ["d", "D"], ["c", "d"]>>, "d")
add_command("c", "D", <<["C", "B"], ["a", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
subtraction
logical_negation
numerical_negation
numerical_negation
add_class(B)
int_value (9)
add_query("b", "A", <<["A", "INTEGER"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["b", "BOOLEAN"]>>, "a")
int_value (43)
int_value (10)
logical_negation
generate_java_code
int_value (29)
add_class(D)
type_check
logical_negation
bool_value (true)
type_check
add_query("c", "a", <<["d", "BOOLEAN"], ["D", "BOOLEAN"], ["INTEGER", "INTEGER"], ["B", "INTEGER"], ["a", "INTEGER"], ["D", "INTEGER"], ["c", "BOOLEAN"]>>, "c")
add_query("D", "b", <<["A", "BOOLEAN"], ["a", "b"], ["e", "B"], ["BOOLEAN", "A"]>>, "c")
quotient
int_value (38)
add_call_chain(<<C,d,c,a,INTEGER,a,c,A>>)
type_check
add_command("b", "d", <<["a", "INTEGER"], ["INTEGER", "d"], ["c", "INTEGER"], ["b", "BOOLEAN"], ["a", "INTEGER"], ["D", "d"]>>)
add_call_chain(<<C,a>>)
logical_negation
generate_java_code
numerical_negation
bool_value (true)
modulo
logical_negation
int_value (48)
add_query("c", "A", <<["B", "c"], ["e", "INTEGER"], ["b", "INTEGER"], ["c", "BOOLEAN"]>>, "C")
add_command("B", "b", <<["BOOLEAN", "INTEGER"], ["b", "BOOLEAN"], ["INTEGER", "INTEGER"], ["c", "INTEGER"], ["c", "B"], ["d", "INTEGER"], ["a", "b"]>>)
add_call_chain(<<e,a,D,b,a>>)
less_than
add_attribute("d", "D", "BOOLEAN")
type_check
add_query("b", "c", <<["C", "INTEGER"], ["D", "BOOLEAN"], ["INTEGER", "b"], ["b", "INTEGER"]>>, "a")
bool_value (false)
add_call_chain(<<C,C,B,D,d,D>>)
numerical_negation
bool_value (false)
conjunction
add_query("A", "a", <<["B", "D"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["b", "BOOLEAN"], ["d", "INTEGER"], ["D", "INTEGER"], ["c", "INTEGER"], ["A", "BOOLEAN"], ["A", "e"]>>, "C")
conjunction
less_than
add_call_chain(<<C,b,C,B,D,c,A,C>>)
numerical_negation
logical_negation
add_command("D", "D", <<["A", "c"], ["d", "D"], ["C", "INTEGER"], ["a", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "INTEGER"]>>)
add_call_chain(<<c>>)
subtraction
add_query("B", "A", <<["D", "INTEGER"], ["a", "C"]>>, "A")
add_query("c", "c", <<["b", "BOOLEAN"], ["A", "INTEGER"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["C", "INTEGER"], ["D", "INTEGER"]>>, "d")
add_call_chain(<<C,e,D,C,D,C,c>>)
add_query("c", "C", <<["C", "INTEGER"], ["c", "BOOLEAN"], ["e", "C"], ["d", "INTEGER"], ["B", "a"], ["D", "e"], ["C", "BOOLEAN"]>>, "c")
add_attribute("C", "D", "INTEGER")
add_attribute("c", "d", "INTEGER")
add_call_chain(<<B,B,C>>)
int_value (26)
add_class(c)
add_call_chain(<<A,d>>)
bool_value (true)
add_attribute("a", "C", "BOOLEAN")
add_attribute("C", "D", "INTEGER")
add_class(BOOLEAN)
bool_value (false)
disjunction
add_command("B", "b", <<["B", "INTEGER"], ["B", "C"], ["D", "B"], ["C", "BOOLEAN"]>>)
add_attribute("BOOLEAN", "b", "INTEGER")
add_call_chain(<<b,A,C,c>>)
bool_value (true)
add_command("A", "D", <<["D", "INTEGER"], ["A", "INTEGER"], ["A", "D"]>>)
quotient
add_command("a", "B", <<["B", "INTEGER"]>>)
add_call_chain(<<b,B,d,d,d,BOOLEAN,b>>)
bool_value (true)
add_call_chain(<<a,C,C>>)
subtraction
add_call_chain(<<e,e,D,INTEGER,INTEGER,a,b,D>>)
add_call_chain(<<D,BOOLEAN,B,C,B,B,B,D,C>>)
add_class(D)
logical_negation
addition
