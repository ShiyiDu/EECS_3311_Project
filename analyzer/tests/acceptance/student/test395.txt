bool_value (false)
add_class(e)
quotient
add_query("A", "C", <<["C", "D"], ["e", "INTEGER"], ["D", "d"]>>, "A")
add_call_chain(<<C,e,e,C,A>>)
logical_negation
add_attribute("a", "b", "BOOLEAN")
add_query("d", "B", <<["d", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "INTEGER"]>>, "A")
conjunction
add_command("d", "c", <<["A", "INTEGER"], ["d", "BOOLEAN"], ["A", "INTEGER"], ["b", "BOOLEAN"], ["b", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "d"], ["a", "INTEGER"]>>)
type_check
add_class(D)
int_value (22)
bool_value (true)
add_class(c)
add_attribute("d", "b", "b")
modulo
bool_value (true)
numerical_negation
numerical_negation
add_call_chain(<<C,e,a,a,c,c,C,D,D>>)
add_attribute("c", "B", "BOOLEAN")
add_command("b", "A", <<["C", "INTEGER"], ["e", "INTEGER"], ["e", "BOOLEAN"], ["e", "D"], ["INTEGER", "D"], ["B", "D"]>>)
add_command("a", "b", <<["D", "D"], ["a", "d"], ["a", "BOOLEAN"], ["C", "INTEGER"], ["a", "b"]>>)
numerical_negation
generate_java_code
add_attribute("D", "D", "INTEGER")
add_call_chain(<<INTEGER,D,D,d,c>>)
add_call_chain(<<D,c,C,b,c,c,A,A>>)
generate_java_code
int_value (6)
add_call_chain(<<b,D,D,a,D,D,c,B>>)
add_command("C", "b", <<["C", "INTEGER"], ["INTEGER", "d"]>>)
add_query("INTEGER", "a", <<["C", "INTEGER"], ["C", "BOOLEAN"]>>, "B")
type_check
add_call_chain(<<D,e,a,a,e>>)
add_call_chain(<<INTEGER,b>>)
logical_negation
generate_java_code
generate_java_code
add_call_chain(<<A,B,BOOLEAN,B,C,A,BOOLEAN,e>>)
logical_negation
bool_value (false)
add_call_chain(<<a,b,B,D,e,a,a,c,C>>)
add_attribute("c", "d", "B")
numerical_negation
type_check
add_class(c)
quotient
add_command("A", "BOOLEAN", <<["C", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "BOOLEAN"]>>)
add_class(B)
logical_negation
add_call_chain(<<c,C,d,b>>)
int_value (14)
add_attribute("A", "c", "c")
int_value (41)
add_command("b", "c", <<["c", "BOOLEAN"], ["c", "BOOLEAN"], ["e", "A"], ["a", "INTEGER"], ["a", "BOOLEAN"]>>)
disjunction
numerical_negation
add_query("B", "b", <<["c", "BOOLEAN"], ["A", "INTEGER"], ["INTEGER", "D"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["D", "INTEGER"]>>, "D")
add_call_chain(<<d,e,c,d,A,d,d,e>>)
add_attribute("B", "c", "INTEGER")
greater_than
add_call_chain(<<e,D>>)
add_call_chain(<<C,C>>)
add_command("B", "A", <<["c", "INTEGER"], ["A", "d"], ["a", "INTEGER"], ["B", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "BOOLEAN"], ["INTEGER", "INTEGER"]>>)
conjunction
logical_negation
add_command("C", "BOOLEAN", <<["A", "INTEGER"], ["e", "BOOLEAN"]>>)
conjunction
add_class(B)
disjunction
add_query("D", "e", <<["d", "BOOLEAN"], ["A", "BOOLEAN"]>>, "D")
multiplication
bool_value (false)
generate_java_code
add_call_chain(<<B,c>>)
add_query("b", "B", <<["D", "A"], ["INTEGER", "INTEGER"], ["e", "D"], ["D", "BOOLEAN"], ["d", "BOOLEAN"], ["d", "INTEGER"], ["d", "BOOLEAN"]>>, "b")
add_class(C)
bool_value (true)
add_query("e", "A", <<["B", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "INTEGER"], ["C", "c"], ["c", "INTEGER"], ["C", "c"], ["A", "INTEGER"], ["D", "e"], ["B", "BOOLEAN"]>>, "d")
add_query("d", "B", <<["d", "BOOLEAN"], ["c", "INTEGER"], ["D", "INTEGER"], ["BOOLEAN", "D"], ["c", "BOOLEAN"]>>, "b")
generate_java_code
numerical_negation
add_attribute("c", "A", "BOOLEAN")
int_value (5)
logical_negation
int_value (33)
add_call_chain(<<e,d,A>>)
add_call_chain(<<a,C,INTEGER,b,D>>)
add_command("d", "A", <<["b", "INTEGER"], ["a", "C"], ["BOOLEAN", "BOOLEAN"], ["A", "INTEGER"], ["A", "a"], ["A", "INTEGER"], ["INTEGER", "d"], ["A", "BOOLEAN"]>>)
logical_negation
add_call_chain(<<D>>)
int_value (30)
generate_java_code
add_command("B", "B", <<["D", "B"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["b", "BOOLEAN"], ["e", "INTEGER"], ["C", "INTEGER"]>>)
add_call_chain(<<c,B,C>>)
add_command("e", "b", <<["A", "INTEGER"], ["A", "BOOLEAN"]>>)
add_command("D", "A", <<["A", "INTEGER"], ["B", "BOOLEAN"], ["c", "C"], ["b", "INTEGER"], ["a", "INTEGER"]>>)
bool_value (false)
add_call_chain(<<A,A,C,B,D,C,A>>)
logical_negation
numerical_negation
add_query("D", "c", <<["c", "d"]>>, "c")
numerical_negation
add_attribute("B", "A", "INTEGER")
conjunction
numerical_negation
logical_negation
numerical_negation
add_call_chain(<<b,D>>)
greater_than
bool_value (true)
add_class(A)
type_check
add_call_chain(<<c,c>>)
add_call_chain(<<C,B,A,D>>)
generate_java_code
int_value (37)
add_call_chain(<<c,C,e,a,INTEGER,e,BOOLEAN,D>>)
less_than
modulo
numerical_negation
less_than
add_class(e)
int_value (23)
type_check
logical_negation
generate_java_code
add_attribute("INTEGER", "INTEGER", "INTEGER")
add_call_chain(<<A,a,INTEGER,A,C,c>>)
add_attribute("B", "B", "BOOLEAN")
int_value (48)
add_call_chain(<<C,a,e>>)
numerical_negation
numerical_negation
add_call_chain(<<D,D,e,e,e,e,c>>)
less_than
logical_negation
add_call_chain(<<b,c>>)
greater_than
bool_value (true)
bool_value (true)
add_call_chain(<<b>>)
quotient
numerical_negation
int_value (28)
add_command("e", "BOOLEAN", <<["D", "INTEGER"], ["d", "BOOLEAN"], ["D", "INTEGER"], ["d", "a"], ["d", "INTEGER"], ["e", "INTEGER"], ["D", "INTEGER"]>>)
numerical_negation
int_value (31)
logical_negation
add_attribute("B", "a", "BOOLEAN")
add_command("d", "B", <<["C", "a"], ["c", "C"], ["C", "A"], ["c", "BOOLEAN"], ["B", "BOOLEAN"], ["BOOLEAN", "e"], ["D", "BOOLEAN"]>>)
type_check
quotient
logical_negation
add_query("C", "c", <<["C", "d"], ["b", "BOOLEAN"], ["a", "C"]>>, "d")
numerical_negation
add_call_chain(<<D,C,B,d,c>>)
disjunction
add_class(b)
generate_java_code
add_attribute("B", "d", "A")
add_call_chain(<<c>>)
add_attribute("d", "e", "e")
add_command("a", "BOOLEAN", <<["B", "BOOLEAN"], ["A", "B"], ["c", "BOOLEAN"], ["b", "INTEGER"]>>)
add_query("D", "D", <<["B", "INTEGER"], ["a", "A"], ["C", "B"], ["e", "INTEGER"], ["e", "INTEGER"], ["d", "INTEGER"], ["d", "e"]>>, "A")
int_value (10)
numerical_negation
conjunction
numerical_negation
type_check
bool_value (false)
add_query("B", "D", <<["d", "BOOLEAN"], ["INTEGER", "D"], ["e", "BOOLEAN"]>>, "B")
add_call_chain(<<d>>)
add_query("C", "D", <<["d", "BOOLEAN"], ["c", "c"], ["D", "INTEGER"], ["e", "BOOLEAN"], ["c", "C"], ["INTEGER", "a"]>>, "B")
type_check
add_call_chain(<<d,B,d,D,b,c,c,INTEGER>>)
add_class(A)
add_query("c", "C", <<["C", "INTEGER"], ["d", "b"], ["INTEGER", "BOOLEAN"], ["c", "BOOLEAN"], ["b", "INTEGER"], ["D", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["b", "BOOLEAN"]>>, "A")
add_call_chain(<<c,b,A,a,A,C,e>>)
equals
int_value (32)
bool_value (false)
add_class(B)
equals
int_value (34)
numerical_negation
int_value (47)
bool_value (true)
add_query("INTEGER", "D", <<["A", "C"]>>, "A")
add_class(c)
numerical_negation
add_class(b)
add_class(e)
add_attribute("B", "A", "INTEGER")
numerical_negation
subtraction
add_attribute("d", "A", "BOOLEAN")
generate_java_code
add_class(C)
add_attribute("D", "D", "INTEGER")
generate_java_code
bool_value (true)
add_command("B", "BOOLEAN", <<["B", "c"], ["b", "D"], ["C", "D"]>>)
add_attribute("a", "b", "BOOLEAN")
add_query("A", "b", <<["e", "BOOLEAN"], ["b", "INTEGER"], ["D", "BOOLEAN"]>>, "e")
bool_value (false)
numerical_negation
add_call_chain(<<B,c,B,e,a,c>>)
add_query("e", "A", <<["b", "d"], ["c", "INTEGER"], ["C", "INTEGER"], ["A", "a"], ["b", "e"], ["A", "BOOLEAN"]>>, "D")
numerical_negation
