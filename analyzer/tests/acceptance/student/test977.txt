add_command("C", "c", <<["c", "INTEGER"], ["e", "e"], ["d", "BOOLEAN"], ["a", "BOOLEAN"]>>)
add_call_chain(<<B>>)
numerical_negation
modulo
logical_negation
bool_value (true)
type_check
numerical_negation
add_command("C", "A", <<["d", "INTEGER"], ["a", "BOOLEAN"], ["d", "a"], ["D", "INTEGER"], ["C", "INTEGER"], ["D", "INTEGER"], ["B", "BOOLEAN"], ["d", "A"]>>)
bool_value (false)
numerical_negation
numerical_negation
add_call_chain(<<A,a,A,A,D,a,INTEGER,a,A>>)
generate_java_code
add_command("INTEGER", "a", <<["c", "INTEGER"], ["b", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "INTEGER"], ["B", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["INTEGER", "b"], ["INTEGER", "c"]>>)
add_call_chain(<<B,BOOLEAN,INTEGER,D>>)
logical_negation
add_attribute("a", "C", "INTEGER")
generate_java_code
add_call_chain(<<d,c,e,e,a>>)
add_call_chain(<<D,B>>)
bool_value (true)
add_call_chain(<<D,d,INTEGER,A,b,c,e,c,D>>)
add_query("D", "D", <<["BOOLEAN", "A"], ["D", "d"], ["a", "BOOLEAN"]>>, "BOOLEAN")
add_class(D)
add_query("a", "D", <<["a", "INTEGER"]>>, "b")
addition
logical_negation
numerical_negation
int_value (5)
add_call_chain(<<D,b,B,D>>)
add_attribute("c", "A", "INTEGER")
add_call_chain(<<A,c,A,d,e>>)
add_attribute("a", "C", "INTEGER")
type_check
bool_value (true)
equals
add_class(d)
add_call_chain(<<b,BOOLEAN,C,D,B,B>>)
add_query("b", "C", <<["INTEGER", "INTEGER"], ["C", "c"], ["A", "B"], ["e", "BOOLEAN"], ["B", "B"]>>, "BOOLEAN")
numerical_negation
disjunction
bool_value (false)
bool_value (true)
add_attribute("BOOLEAN", "D", "BOOLEAN")
generate_java_code
bool_value (false)
bool_value (true)
add_call_chain(<<B,a,b,A,A,c,d,C>>)
add_attribute("C", "d", "INTEGER")
numerical_negation
logical_negation
add_command("A", "d", <<["c", "BOOLEAN"], ["e", "BOOLEAN"]>>)
logical_negation
equals
add_attribute("c", "e", "C")
add_class(e)
add_call_chain(<<C,e,B,d,e>>)
type_check
add_call_chain(<<INTEGER,D>>)
bool_value (false)
greater_than
numerical_negation
add_query("B", "B", <<["C", "BOOLEAN"], ["C", "INTEGER"], ["e", "A"], ["e", "d"], ["d", "INTEGER"], ["C", "INTEGER"]>>, "b")
add_call_chain(<<B,BOOLEAN,a,INTEGER,c,C,C>>)
numerical_negation
add_attribute("c", "INTEGER", "b")
int_value (6)
type_check
int_value (6)
numerical_negation
add_class(D)
type_check
add_call_chain(<<C,c,BOOLEAN,d,D,b,b,A>>)
type_check
bool_value (true)
add_attribute("b", "B", "BOOLEAN")
add_call_chain(<<a,a,c,d,B>>)
add_query("a", "e", <<["C", "BOOLEAN"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["D", "D"]>>, "d")
subtraction
numerical_negation
disjunction
int_value (1)
add_call_chain(<<A,A,C,c,c,A>>)
int_value (43)
add_call_chain(<<D,a,a,a,d,INTEGER>>)
type_check
add_call_chain(<<c>>)
add_attribute("d", "a", "D")
numerical_negation
numerical_negation
add_call_chain(<<e,B,b,B,c,c,B,C,e>>)
bool_value (false)
add_attribute("b", "B", "INTEGER")
int_value (7)
add_class(a)
equals
add_command("D", "d", <<["a", "INTEGER"], ["B", "INTEGER"], ["e", "INTEGER"], ["d", "D"], ["B", "C"]>>)
int_value (2)
disjunction
type_check
add_class(c)
type_check
int_value (20)
add_attribute("c", "c", "BOOLEAN")
disjunction
add_call_chain(<<e,A,c,b,B>>)
generate_java_code
generate_java_code
add_query("e", "b", <<["B", "BOOLEAN"]>>, "C")
add_call_chain(<<D,B,e,d,B,B>>)
add_query("b", "c", <<["b", "e"], ["A", "INTEGER"], ["c", "a"], ["D", "BOOLEAN"]>>, "a")
add_command("c", "A", <<["d", "D"], ["b", "BOOLEAN"], ["d", "D"], ["A", "B"], ["C", "BOOLEAN"], ["c", "b"]>>)
bool_value (true)
greater_than
logical_negation
conjunction
logical_negation
add_call_chain(<<D,c,e,a>>)
logical_negation
add_class(B)
bool_value (true)
type_check
type_check
add_call_chain(<<C,B,d>>)
add_call_chain(<<D,B,a,b>>)
add_query("d", "A", <<["d", "c"], ["B", "b"], ["e", "INTEGER"], ["e", "c"]>>, "D")
bool_value (false)
disjunction
int_value (49)
logical_negation
add_call_chain(<<C,C,a,c,C,e,C,D>>)
logical_negation
add_call_chain(<<a,e,a,INTEGER,c>>)
bool_value (true)
logical_negation
greater_than
add_command("a", "a", <<["e", "INTEGER"], ["d", "BOOLEAN"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["C", "d"], ["A", "BOOLEAN"]>>)
int_value (27)
multiplication
bool_value (true)
numerical_negation
add_query("e", "A", <<["INTEGER", "INTEGER"]>>, "b")
add_call_chain(<<B,C,INTEGER,A,INTEGER>>)
generate_java_code
add_call_chain(<<c>>)
add_call_chain(<<A,D,C,a,B,INTEGER,c,D>>)
logical_negation
add_query("e", "c", <<["D", "BOOLEAN"], ["B", "d"], ["d", "BOOLEAN"], ["d", "BOOLEAN"]>>, "A")
add_attribute("B", "BOOLEAN", "INTEGER")
bool_value (true)
numerical_negation
numerical_negation
logical_negation
generate_java_code
add_query("B", "c", <<["B", "INTEGER"], ["c", "BOOLEAN"], ["b", "INTEGER"], ["A", "e"], ["d", "BOOLEAN"], ["b", "INTEGER"]>>, "A")
bool_value (true)
add_call_chain(<<D,C,c,B,INTEGER,d,d,a>>)
add_call_chain(<<C,c,A,A,a,C,B>>)
add_command("A", "b", <<["D", "INTEGER"], ["b", "BOOLEAN"]>>)
add_query("C", "B", <<["D", "c"], ["D", "C"], ["C", "A"]>>, "A")
type_check
less_than
add_command("A", "A", <<["a", "INTEGER"], ["d", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "d"], ["A", "INTEGER"], ["a", "BOOLEAN"], ["e", "d"], ["B", "INTEGER"], ["C", "BOOLEAN"]>>)
add_command("d", "C", <<["e", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["C", "b"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["INTEGER", "B"], ["b", "INTEGER"], ["C", "BOOLEAN"]>>)
greater_than
logical_negation
logical_negation
greater_than
add_call_chain(<<c,a>>)
add_query("d", "A", <<["D", "e"], ["C", "e"], ["C", "INTEGER"], ["c", "INTEGER"], ["C", "A"], ["D", "INTEGER"]>>, "a")
add_query("c", "d", <<["a", "INTEGER"], ["D", "BOOLEAN"], ["c", "d"], ["e", "INTEGER"], ["A", "B"]>>, "b")
add_query("A", "INTEGER", <<["BOOLEAN", "BOOLEAN"], ["D", "INTEGER"], ["B", "c"], ["d", "BOOLEAN"], ["D", "a"], ["B", "BOOLEAN"], ["d", "D"], ["b", "B"]>>, "INTEGER")
add_call_chain(<<INTEGER,d,c,c>>)
add_call_chain(<<D,d,B,D,e,b,B,a,B>>)
int_value (37)
generate_java_code
add_call_chain(<<d,b,e>>)
add_call_chain(<<D>>)
int_value (23)
add_query("D", "a", <<["BOOLEAN", "BOOLEAN"], ["INTEGER", "INTEGER"], ["D", "C"]>>, "e")
add_call_chain(<<C,c,A,a,c,a,c,B,c>>)
less_than
add_call_chain(<<A,A,B,e>>)
logical_negation
add_call_chain(<<e,C,D,C,e,a,D>>)
add_query("C", "B", <<["c", "BOOLEAN"], ["D", "e"], ["A", "INTEGER"], ["c", "INTEGER"], ["c", "BOOLEAN"], ["C", "BOOLEAN"], ["BOOLEAN", "d"], ["b", "BOOLEAN"]>>, "C")
add_query("INTEGER", "A", <<["C", "BOOLEAN"]>>, "A")
add_call_chain(<<c,a,a>>)
add_attribute("a", "e", "BOOLEAN")
logical_negation
numerical_negation
add_attribute("c", "c", "INTEGER")
generate_java_code
add_attribute("b", "D", "BOOLEAN")
add_query("A", "A", <<["d", "INTEGER"], ["a", "INTEGER"], ["INTEGER", "INTEGER"], ["a", "INTEGER"], ["D", "INTEGER"], ["e", "B"], ["C", "C"]>>, "D")
add_command("d", "e", <<["INTEGER", "d"], ["B", "INTEGER"], ["c", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "INTEGER"], ["a", "BOOLEAN"]>>)
add_command("A", "B", <<["A", "BOOLEAN"], ["A", "BOOLEAN"]>>)
numerical_negation
add_query("e", "B", <<["D", "INTEGER"], ["d", "INTEGER"], ["d", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["b", "B"], ["b", "D"], ["d", "BOOLEAN"], ["B", "BOOLEAN"]>>, "e")
add_query("B", "C", <<["d", "BOOLEAN"], ["D", "INTEGER"], ["D", "INTEGER"], ["B", "INTEGER"]>>, "BOOLEAN")
generate_java_code
add_query("C", "d", <<["e", "BOOLEAN"], ["b", "C"], ["b", "INTEGER"]>>, "INTEGER")
add_query("A", "a", <<["INTEGER", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["A", "INTEGER"]>>, "b")
add_class(c)
add_command("A", "c", <<["B", "B"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["C", "INTEGER"]>>)
add_query("INTEGER", "d", <<["BOOLEAN", "INTEGER"], ["B", "B"], ["e", "INTEGER"], ["b", "BOOLEAN"]>>, "c")
add_query("a", "c", <<["C", "BOOLEAN"], ["A", "INTEGER"]>>, "b")
bool_value (true)
add_call_chain(<<D,B,B,d,INTEGER,c>>)
bool_value (false)
