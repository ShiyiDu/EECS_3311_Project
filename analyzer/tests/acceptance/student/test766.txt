add_command("a", "e", <<["e", "BOOLEAN"], ["b", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "INTEGER"]>>)
conjunction
int_value (44)
numerical_negation
generate_java_code
add_query("b", "D", <<["C", "C"], ["D", "BOOLEAN"], ["c", "D"]>>, "C")
bool_value (true)
add_attribute("B", "BOOLEAN", "C")
add_call_chain(<<a,e>>)
bool_value (true)
logical_negation
logical_negation
add_call_chain(<<C,a,a,A,INTEGER,a>>)
add_query("a", "A", <<["C", "BOOLEAN"]>>, "A")
add_call_chain(<<c,a>>)
bool_value (true)
add_command("C", "a", <<["b", "A"], ["b", "INTEGER"], ["A", "INTEGER"], ["C", "INTEGER"], ["d", "INTEGER"], ["D", "A"], ["BOOLEAN", "BOOLEAN"], ["b", "D"], ["D", "BOOLEAN"]>>)
add_attribute("A", "d", "BOOLEAN")
numerical_negation
add_attribute("b", "A", "INTEGER")
type_check
numerical_negation
add_class(BOOLEAN)
add_attribute("D", "e", "INTEGER")
add_attribute("a", "D", "BOOLEAN")
add_command("a", "d", <<["B", "a"], ["BOOLEAN", "INTEGER"], ["a", "BOOLEAN"], ["A", "INTEGER"], ["C", "INTEGER"], ["D", "d"]>>)
add_call_chain(<<e,BOOLEAN,b,e,D,A,A,a,B>>)
int_value (36)
add_attribute("b", "A", "INTEGER")
conjunction
addition
quotient
generate_java_code
add_query("b", "c", <<["b", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["a", "INTEGER"], ["b", "D"], ["B", "INTEGER"], ["a", "BOOLEAN"], ["B", "A"]>>, "INTEGER")
int_value (48)
generate_java_code
modulo
numerical_negation
bool_value (false)
add_query("C", "B", <<["INTEGER", "BOOLEAN"], ["a", "b"], ["e", "INTEGER"], ["D", "INTEGER"], ["D", "INTEGER"], ["e", "b"], ["a", "a"], ["e", "BOOLEAN"]>>, "A")
add_command("C", "c", <<["a", "BOOLEAN"], ["c", "BOOLEAN"], ["e", "B"], ["d", "INTEGER"], ["d", "INTEGER"], ["C", "BOOLEAN"], ["d", "D"], ["a", "INTEGER"]>>)
int_value (30)
add_query("INTEGER", "A", <<["C", "e"], ["d", "INTEGER"], ["a", "INTEGER"], ["b", "a"], ["D", "D"]>>, "A")
add_class(c)
int_value (29)
bool_value (true)
int_value (16)
type_check
int_value (13)
numerical_negation
add_query("C", "c", <<["D", "INTEGER"], ["a", "c"], ["a", "B"], ["D", "INTEGER"], ["A", "BOOLEAN"]>>, "a")
add_class(a)
add_query("B", "INTEGER", <<["BOOLEAN", "BOOLEAN"], ["A", "B"], ["b", "INTEGER"], ["INTEGER", "d"], ["c", "BOOLEAN"], ["e", "B"], ["a", "INTEGER"], ["C", "e"]>>, "c")
add_attribute("c", "B", "INTEGER")
add_attribute("a", "c", "D")
logical_negation
add_query("INTEGER", "D", <<["A", "B"], ["D", "INTEGER"], ["d", "e"]>>, "e")
add_query("d", "A", <<["d", "BOOLEAN"], ["b", "d"], ["BOOLEAN", "C"], ["A", "INTEGER"], ["D", "INTEGER"], ["INTEGER", "BOOLEAN"], ["C", "d"], ["c", "INTEGER"]>>, "D")
generate_java_code
add_call_chain(<<D>>)
add_command("c", "b", <<["A", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["b", "B"]>>)
add_command("A", "D", <<["C", "BOOLEAN"], ["C", "INTEGER"], ["d", "BOOLEAN"], ["e", "a"]>>)
conjunction
add_query("a", "a", <<["c", "BOOLEAN"], ["D", "INTEGER"], ["INTEGER", "A"], ["b", "INTEGER"]>>, "c")
bool_value (false)
less_than
add_command("B", "D", <<["e", "C"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["e", "BOOLEAN"], ["B", "C"], ["INTEGER", "C"], ["INTEGER", "BOOLEAN"]>>)
add_query("C", "B", <<["c", "B"], ["C", "INTEGER"], ["C", "d"], ["D", "BOOLEAN"], ["b", "INTEGER"], ["A", "b"]>>, "A")
generate_java_code
add_attribute("b", "B", "BOOLEAN")
generate_java_code
add_class(A)
type_check
int_value (14)
multiplication
bool_value (false)
add_call_chain(<<d,A,b,a,A,d>>)
equals
logical_negation
add_attribute("c", "a", "BOOLEAN")
numerical_negation
add_call_chain(<<A,c,B,e,INTEGER,a>>)
greater_than
add_call_chain(<<C>>)
subtraction
int_value (5)
int_value (3)
add_attribute("b", "A", "A")
int_value (28)
add_class(b)
multiplication
add_attribute("a", "D", "INTEGER")
bool_value (false)
bool_value (true)
disjunction
conjunction
add_query("B", "C", <<["e", "b"], ["B", "BOOLEAN"], ["D", "INTEGER"], ["B", "INTEGER"], ["c", "b"], ["D", "A"]>>, "e")
bool_value (false)
disjunction
add_attribute("INTEGER", "D", "INTEGER")
int_value (7)
type_check
add_call_chain(<<D,b,A,e,D,D,d>>)
add_query("INTEGER", "C", <<["B", "INTEGER"], ["b", "d"], ["e", "BOOLEAN"], ["B", "b"], ["C", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "BOOLEAN"]>>, "C")
add_call_chain(<<d,D,d,b,e,e,A,B,A>>)
type_check
numerical_negation
add_query("b", "b", <<["e", "INTEGER"], ["c", "INTEGER"]>>, "B")
int_value (47)
add_attribute("a", "a", "b")
add_call_chain(<<d,C,INTEGER,e,BOOLEAN>>)
generate_java_code
add_call_chain(<<D,C,A,a,INTEGER>>)
type_check
add_call_chain(<<C>>)
add_command("C", "C", <<["C", "BOOLEAN"], ["b", "A"], ["C", "INTEGER"], ["e", "BOOLEAN"], ["d", "B"], ["c", "INTEGER"], ["A", "b"]>>)
int_value (15)
bool_value (false)
numerical_negation
logical_negation
add_command("BOOLEAN", "INTEGER", <<["C", "D"], ["C", "INTEGER"], ["a", "INTEGER"], ["c", "B"], ["a", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "D"], ["a", "d"], ["C", "BOOLEAN"]>>)
add_query("A", "B", <<["A", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "b"], ["D", "C"], ["B", "INTEGER"], ["e", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "INTEGER"]>>, "a")
numerical_negation
add_attribute("b", "B", "INTEGER")
add_call_chain(<<D>>)
add_query("c", "d", <<["b", "BOOLEAN"], ["d", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "INTEGER"], ["INTEGER", "INTEGER"]>>, "A")
add_class(c)
add_call_chain(<<A,C,BOOLEAN,A,BOOLEAN,INTEGER,A,b>>)
bool_value (false)
add_call_chain(<<b,B,C,B,B>>)
numerical_negation
add_command("B", "D", <<["D", "c"], ["b", "D"], ["A", "BOOLEAN"]>>)
numerical_negation
add_attribute("B", "a", "A")
add_command("c", "D", <<["e", "a"], ["B", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "INTEGER"], ["D", "INTEGER"], ["INTEGER", "BOOLEAN"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>)
generate_java_code
greater_than
int_value (2)
logical_negation
type_check
add_query("B", "b", <<["B", "BOOLEAN"], ["d", "BOOLEAN"]>>, "b")
conjunction
add_attribute("d", "e", "BOOLEAN")
add_call_chain(<<A,A,B,C,a,b,a,d>>)
logical_negation
bool_value (false)
add_call_chain(<<e,a,D>>)
bool_value (true)
add_command("C", "c", <<["c", "BOOLEAN"]>>)
add_class(b)
logical_negation
type_check
type_check
numerical_negation
add_class(A)
add_call_chain(<<a,B,b,d,a,d,d,D,D>>)
bool_value (true)
add_call_chain(<<e,d,a,INTEGER>>)
add_attribute("c", "a", "INTEGER")
generate_java_code
generate_java_code
numerical_negation
add_command("b", "d", <<["a", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "B"], ["d", "INTEGER"], ["e", "A"], ["c", "BOOLEAN"], ["B", "C"], ["b", "D"], ["a", "BOOLEAN"]>>)
add_command("a", "A", <<["e", "INTEGER"], ["A", "INTEGER"], ["A", "BOOLEAN"], ["B", "BOOLEAN"]>>)
multiplication
add_call_chain(<<c,D,d>>)
add_class(b)
add_call_chain(<<a,a,d,INTEGER,INTEGER>>)
int_value (24)
add_query("BOOLEAN", "d", <<["A", "BOOLEAN"], ["A", "INTEGER"], ["D", "e"], ["C", "INTEGER"], ["A", "INTEGER"]>>, "INTEGER")
logical_negation
numerical_negation
add_command("B", "c", <<["B", "BOOLEAN"], ["a", "INTEGER"], ["b", "C"], ["b", "c"], ["D", "BOOLEAN"], ["e", "D"], ["c", "BOOLEAN"], ["D", "INTEGER"]>>)
equals
add_query("a", "d", <<["BOOLEAN", "BOOLEAN"], ["B", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["d", "INTEGER"], ["d", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "INTEGER"]>>, "B")
type_check
greater_than
add_call_chain(<<C,c,INTEGER,a,d,c,e,A,A>>)
add_attribute("D", "A", "BOOLEAN")
generate_java_code
numerical_negation
add_query("a", "c", <<["c", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "BOOLEAN"], ["c", "D"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>, "BOOLEAN")
add_command("BOOLEAN", "b", <<["e", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["D", "INTEGER"], ["B", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["C", "INTEGER"], ["d", "e"]>>)
add_attribute("a", "D", "INTEGER")
add_call_chain(<<D,B,D,C,A,b,A,b,C>>)
add_query("a", "INTEGER", <<["INTEGER", "INTEGER"], ["D", "B"], ["d", "INTEGER"], ["b", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["b", "B"], ["B", "INTEGER"], ["b", "BOOLEAN"]>>, "c")
bool_value (false)
bool_value (true)
add_attribute("d", "BOOLEAN", "BOOLEAN")
add_attribute("c", "c", "BOOLEAN")
add_attribute("A", "BOOLEAN", "INTEGER")
add_command("a", "BOOLEAN", <<["C", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["D", "INTEGER"], ["B", "b"], ["e", "INTEGER"]>>)
add_call_chain(<<b,B,a,B,D,e,A,a>>)
add_query("D", "a", <<["e", "INTEGER"], ["c", "D"], ["e", "B"], ["C", "BOOLEAN"], ["A", "A"], ["D", "BOOLEAN"], ["d", "D"], ["D", "C"], ["B", "INTEGER"]>>, "e")
int_value (5)
add_attribute("A", "d", "INTEGER")
numerical_negation
add_call_chain(<<B,e,D,d,e>>)
add_call_chain(<<A,c,C,c,A,A>>)
add_attribute("e", "INTEGER", "d")
numerical_negation
add_command("b", "BOOLEAN", <<["INTEGER", "INTEGER"]>>)
numerical_negation
add_command("C", "c", <<["d", "INTEGER"], ["e", "D"], ["BOOLEAN", "INTEGER"], ["D", "BOOLEAN"]>>)
add_query("D", "D", <<["B", "INTEGER"], ["BOOLEAN", "e"]>>, "D")
disjunction
generate_java_code
bool_value (true)
add_query("B", "D", <<["a", "INTEGER"], ["d", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "C"]>>, "D")
add_query("BOOLEAN", "A", <<["b", "BOOLEAN"]>>, "c")
int_value (35)
modulo
add_query("B", "C", <<["BOOLEAN", "c"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["B", "INTEGER"], ["e", "c"], ["c", "BOOLEAN"], ["c", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "INTEGER"]>>, "C")
add_query("b", "A", <<["e", "d"], ["e", "INTEGER"]>>, "C")
add_call_chain(<<INTEGER,e,INTEGER,b,D,D,a>>)
numerical_negation
bool_value (false)
generate_java_code
logical_negation
add_attribute("A", "C", "A")
add_attribute("c", "e", "INTEGER")
add_attribute("BOOLEAN", "b", "BOOLEAN")
addition
add_call_chain(<<C,c,D,d>>)
logical_negation
add_command("a", "C", <<["e", "BOOLEAN"], ["a", "B"], ["C", "INTEGER"], ["INTEGER", "BOOLEAN"], ["d", "BOOLEAN"], ["e", "e"], ["A", "INTEGER"]>>)
add_call_chain(<<C,D,b>>)
add_call_chain(<<c,d,D,C>>)
add_class(A)
add_call_chain(<<b,c,A,b>>)
generate_java_code
add_command("b", "b", <<["D", "BOOLEAN"], ["d", "B"], ["b", "INTEGER"]>>)
add_call_chain(<<A,c>>)
