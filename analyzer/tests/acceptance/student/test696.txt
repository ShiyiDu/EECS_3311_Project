add_query("C", "d", <<["D", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["b", "B"]>>, "C")
numerical_negation
generate_java_code
add_command("B", "B", <<["a", "D"], ["C", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "B"], ["e", "A"], ["BOOLEAN", "BOOLEAN"]>>)
int_value (1)
add_call_chain(<<c,A,C>>)
multiplication
logical_negation
multiplication
int_value (30)
add_command("A", "a", <<["B", "INTEGER"], ["A", "INTEGER"], ["D", "BOOLEAN"]>>)
add_attribute("C", "C", "INTEGER")
int_value (26)
bool_value (true)
generate_java_code
add_command("A", "D", <<["c", "INTEGER"], ["c", "BOOLEAN"], ["b", "BOOLEAN"], ["e", "A"]>>)
add_command("B", "b", <<["BOOLEAN", "e"], ["BOOLEAN", "INTEGER"], ["D", "INTEGER"], ["c", "C"], ["A", "A"], ["C", "D"], ["INTEGER", "INTEGER"]>>)
add_call_chain(<<D,A,d,c,BOOLEAN,D>>)
add_query("B", "C", <<["A", "BOOLEAN"], ["d", "INTEGER"], ["d", "INTEGER"], ["a", "A"], ["d", "BOOLEAN"], ["C", "INTEGER"]>>, "b")
type_check
add_attribute("B", "B", "e")
int_value (11)
type_check
numerical_negation
add_call_chain(<<e,e>>)
add_query("b", "d", <<["A", "INTEGER"], ["a", "BOOLEAN"], ["a", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["b", "BOOLEAN"]>>, "a")
multiplication
int_value (22)
add_command("c", "d", <<["e", "e"], ["B", "b"]>>)
bool_value (false)
add_call_chain(<<D,B,a,D,D,C,C>>)
modulo
bool_value (false)
numerical_negation
add_attribute("D", "D", "BOOLEAN")
int_value (16)
logical_negation
add_class(c)
logical_negation
add_command("b", "a", <<["A", "INTEGER"], ["INTEGER", "BOOLEAN"], ["B", "INTEGER"], ["A", "e"], ["e", "BOOLEAN"]>>)
add_call_chain(<<a,B>>)
add_query("D", "A", <<["C", "INTEGER"], ["B", "INTEGER"], ["D", "BOOLEAN"]>>, "D")
add_query("e", "D", <<["BOOLEAN", "INTEGER"], ["a", "INTEGER"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "INTEGER"], ["A", "a"], ["a", "INTEGER"], ["A", "INTEGER"], ["C", "BOOLEAN"]>>, "a")
add_call_chain(<<INTEGER,b,c>>)
add_attribute("c", "D", "BOOLEAN")
add_call_chain(<<a,INTEGER,b,C,c,D,a,C>>)
numerical_negation
add_attribute("d", "D", "INTEGER")
logical_negation
add_command("A", "C", <<["C", "A"], ["C", "INTEGER"], ["A", "INTEGER"], ["c", "INTEGER"], ["D", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "INTEGER"]>>)
add_class(B)
generate_java_code
add_call_chain(<<B,A,INTEGER,D,a,c,c>>)
bool_value (true)
conjunction
less_than
add_query("D", "b", <<["B", "BOOLEAN"], ["c", "INTEGER"], ["d", "INTEGER"], ["B", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["B", "D"], ["d", "BOOLEAN"], ["a", "INTEGER"]>>, "BOOLEAN")
generate_java_code
add_attribute("d", "B", "c")
generate_java_code
generate_java_code
add_command("A", "d", <<["a", "c"], ["A", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "BOOLEAN"]>>)
generate_java_code
add_query("b", "a", <<["A", "a"], ["b", "B"], ["e", "BOOLEAN"], ["B", "B"], ["B", "B"], ["b", "BOOLEAN"], ["C", "INTEGER"], ["C", "D"], ["D", "BOOLEAN"]>>, "INTEGER")
add_call_chain(<<a>>)
add_command("D", "d", <<["INTEGER", "BOOLEAN"], ["b", "BOOLEAN"]>>)
int_value (13)
add_attribute("A", "d", "INTEGER")
add_call_chain(<<e,D,B,A,a>>)
type_check
conjunction
generate_java_code
bool_value (false)
logical_negation
logical_negation
int_value (47)
type_check
add_call_chain(<<D,c,A,d>>)
add_call_chain(<<a,C,A,e,BOOLEAN,a>>)
int_value (32)
logical_negation
add_call_chain(<<a,D,c,C,A>>)
numerical_negation
quotient
bool_value (false)
add_call_chain(<<INTEGER>>)
logical_negation
add_command("a", "b", <<["D", "INTEGER"], ["e", "d"], ["d", "BOOLEAN"], ["A", "D"]>>)
add_query("C", "d", <<["e", "BOOLEAN"], ["b", "e"], ["BOOLEAN", "e"], ["A", "d"], ["d", "d"], ["INTEGER", "INTEGER"]>>, "c")
add_call_chain(<<INTEGER,d,c>>)
greater_than
add_call_chain(<<b,e,a,C,d,INTEGER,e,D>>)
equals
add_call_chain(<<B,INTEGER>>)
add_class(c)
add_call_chain(<<BOOLEAN>>)
numerical_negation
generate_java_code
add_call_chain(<<C,A,INTEGER,a,b,C,d,d,D>>)
generate_java_code
type_check
bool_value (true)
add_command("C", "e", <<["c", "INTEGER"]>>)
quotient
add_command("a", "a", <<["BOOLEAN", "BOOLEAN"], ["b", "INTEGER"]>>)
int_value (31)
generate_java_code
less_than
add_query("C", "B", <<["d", "INTEGER"], ["a", "INTEGER"]>>, "A")
less_than
numerical_negation
type_check
equals
add_call_chain(<<a,A,e,a,c,B,D>>)
int_value (20)
add_call_chain(<<D,b>>)
numerical_negation
int_value (6)
add_command("a", "b", <<["c", "INTEGER"], ["b", "INTEGER"], ["B", "BOOLEAN"]>>)
int_value (32)
bool_value (true)
add_query("B", "B", <<["INTEGER", "D"], ["INTEGER", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "D"], ["c", "BOOLEAN"]>>, "BOOLEAN")
add_query("INTEGER", "D", <<["BOOLEAN", "B"]>>, "b")
generate_java_code
add_call_chain(<<B,B,A,B>>)
add_call_chain(<<d,B,BOOLEAN,C,B,BOOLEAN,d,D>>)
add_query("d", "A", <<["d", "INTEGER"], ["A", "INTEGER"], ["BOOLEAN", "INTEGER"], ["C", "A"], ["B", "BOOLEAN"], ["d", "e"], ["b", "a"], ["C", "A"], ["D", "e"]>>, "BOOLEAN")
add_call_chain(<<b,B,B,d,d,A,C,a>>)
logical_negation
add_query("b", "d", <<["B", "INTEGER"], ["d", "c"], ["d", "c"]>>, "D")
add_command("a", "e", <<["B", "BOOLEAN"], ["A", "e"], ["INTEGER", "INTEGER"], ["INTEGER", "b"]>>)
logical_negation
add_call_chain(<<B,A,B,C,e,a,B,c>>)
add_query("B", "A", <<["b", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "INTEGER"], ["d", "BOOLEAN"], ["a", "INTEGER"], ["a", "BOOLEAN"], ["d", "BOOLEAN"]>>, "C")
add_class(e)
add_command("a", "e", <<["D", "BOOLEAN"], ["INTEGER", "B"], ["d", "INTEGER"]>>)
numerical_negation
logical_negation
conjunction
int_value (35)
add_attribute("B", "A", "INTEGER")
add_class(e)
add_command("a", "c", <<["A", "B"], ["c", "BOOLEAN"], ["B", "B"]>>)
add_query("C", "b", <<["C", "D"], ["d", "BOOLEAN"], ["D", "D"], ["A", "D"], ["e", "BOOLEAN"], ["b", "INTEGER"]>>, "b")
logical_negation
add_query("C", "a", <<["a", "INTEGER"], ["a", "INTEGER"], ["b", "BOOLEAN"], ["B", "B"], ["A", "C"], ["INTEGER", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["b", "b"], ["e", "INTEGER"]>>, "b")
logical_negation
add_query("e", "INTEGER", <<["d", "INTEGER"], ["a", "a"], ["c", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["e", "BOOLEAN"]>>, "d")
int_value (1)
add_query("d", "C", <<["C", "INTEGER"]>>, "B")
add_query("D", "a", <<["A", "C"]>>, "c")
int_value (13)
add_query("a", "A", <<["e", "INTEGER"], ["A", "C"], ["B", "INTEGER"], ["D", "BOOLEAN"]>>, "b")
generate_java_code
add_attribute("e", "C", "INTEGER")
int_value (26)
type_check
add_call_chain(<<e,B,INTEGER>>)
add_class(d)
add_query("c", "B", <<["e", "INTEGER"], ["A", "BOOLEAN"]>>, "a")
add_attribute("B", "c", "INTEGER")
add_call_chain(<<c,D>>)
int_value (31)
add_attribute("A", "b", "B")
add_command("c", "C", <<["C", "INTEGER"], ["A", "BOOLEAN"], ["A", "INTEGER"], ["c", "INTEGER"]>>)
add_attribute("e", "d", "BOOLEAN")
add_command("D", "e", <<["INTEGER", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "INTEGER"], ["D", "C"], ["e", "INTEGER"], ["B", "BOOLEAN"], ["a", "BOOLEAN"]>>)
type_check
type_check
bool_value (true)
add_command("e", "A", <<["A", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "c"], ["C", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>)
quotient
conjunction
add_class(BOOLEAN)
add_query("B", "c", <<["e", "BOOLEAN"], ["C", "a"], ["BOOLEAN", "INTEGER"]>>, "C")
numerical_negation
add_command("a", "D", <<["B", "INTEGER"], ["b", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "INTEGER"], ["D", "C"], ["A", "BOOLEAN"], ["D", "BOOLEAN"]>>)
greater_than
equals
add_query("c", "C", <<["a", "INTEGER"], ["A", "INTEGER"], ["b", "BOOLEAN"], ["c", "INTEGER"], ["C", "BOOLEAN"], ["a", "INTEGER"], ["b", "e"], ["A", "A"], ["B", "INTEGER"]>>, "C")
add_command("e", "A", <<["c", "BOOLEAN"], ["INTEGER", "INTEGER"], ["c", "e"], ["b", "b"], ["B", "e"], ["C", "b"], ["D", "b"], ["A", "INTEGER"]>>)
int_value (10)
bool_value (true)
bool_value (true)
int_value (3)
add_attribute("C", "d", "BOOLEAN")
bool_value (true)
add_command("a", "d", <<["a", "a"], ["C", "INTEGER"], ["b", "BOOLEAN"], ["b", "D"]>>)
logical_negation
int_value (6)
add_call_chain(<<c,D,c,D,C,d,c,a,a>>)
less_than
bool_value (false)
bool_value (true)
bool_value (true)
add_query("c", "d", <<["d", "A"]>>, "D")
modulo
int_value (31)
bool_value (true)
logical_negation
equals
int_value (28)
numerical_negation
greater_than
int_value (43)
add_query("C", "e", <<["a", "e"], ["b", "BOOLEAN"]>>, "BOOLEAN")
add_class(B)
add_call_chain(<<D,A,C,D,C,a>>)
add_attribute("D", "D", "INTEGER")
bool_value (false)
add_call_chain(<<B,C,D,C,B>>)
add_attribute("a", "B", "INTEGER")
add_call_chain(<<C,b,b,D>>)
add_call_chain(<<a,A,e,b>>)
logical_negation
generate_java_code
numerical_negation
generate_java_code
less_than
disjunction
conjunction
int_value (31)
add_query("C", "d", <<["A", "A"], ["BOOLEAN", "B"], ["A", "BOOLEAN"], ["A", "INTEGER"], ["c", "b"], ["B", "INTEGER"], ["B", "C"], ["INTEGER", "C"], ["a", "D"]>>, "C")
add_class(b)
add_attribute("B", "a", "C")
add_class(B)
quotient
int_value (28)
type_check
add_call_chain(<<INTEGER,B,D,B>>)
bool_value (true)
multiplication
add_call_chain(<<a,C,e,e,c,INTEGER,c,C,C>>)
add_query("A", "A", <<["b", "BOOLEAN"], ["C", "INTEGER"], ["B", "INTEGER"], ["A", "INTEGER"], ["A", "INTEGER"]>>, "e")
numerical_negation
generate_java_code
add_command("e", "a", <<["C", "BOOLEAN"], ["B", "INTEGER"], ["A", "INTEGER"], ["c", "INTEGER"]>>)
add_command("C", "c", <<["A", "BOOLEAN"], ["d", "INTEGER"]>>)
add_command("a", "d", <<["A", "a"], ["D", "BOOLEAN"], ["e", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "c"], ["e", "C"]>>)
add_attribute("D", "b", "INTEGER")
add_attribute("A", "e", "INTEGER")
add_call_chain(<<a,c,A,b>>)
equals
add_query("b", "a", <<["b", "C"], ["D", "BOOLEAN"], ["B", "c"], ["e", "D"], ["c", "INTEGER"], ["c", "C"], ["a", "BOOLEAN"], ["d", "BOOLEAN"], ["INTEGER", "B"]>>, "d")
bool_value (false)
less_than
add_call_chain(<<INTEGER,b>>)
type_check
quotient
add_call_chain(<<e,A,BOOLEAN,B,a,D,b,c>>)
add_call_chain(<<BOOLEAN,B,a,INTEGER,INTEGER,c>>)
logical_negation
add_attribute("C", "BOOLEAN", "D")
int_value (7)
bool_value (true)
add_call_chain(<<A,A,A>>)
add_attribute("A", "INTEGER", "BOOLEAN")
numerical_negation
