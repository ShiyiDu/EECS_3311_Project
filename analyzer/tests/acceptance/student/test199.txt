add_attribute("c", "d", "D")
add_query("b", "c", <<["D", "BOOLEAN"], ["BOOLEAN", "e"], ["e", "d"], ["d", "BOOLEAN"], ["c", "INTEGER"], ["B", "INTEGER"], ["A", "INTEGER"], ["A", "BOOLEAN"]>>, "b")
logical_negation
numerical_negation
add_call_chain(<<C,B,b,A,INTEGER,C>>)
add_query("a", "C", <<["c", "B"], ["B", "BOOLEAN"]>>, "d")
type_check
add_call_chain(<<A,e,c,a,D,A>>)
int_value (10)
bool_value (false)
add_class(D)
disjunction
add_attribute("A", "b", "A")
greater_than
logical_negation
logical_negation
add_call_chain(<<A,D,a,B,b,D,a,a>>)
add_command("A", "b", <<["C", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "B"]>>)
add_attribute("e", "INTEGER", "INTEGER")
add_attribute("C", "A", "INTEGER")
add_command("A", "D", <<["b", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "INTEGER"], ["BOOLEAN", "INTEGER"], ["INTEGER", "BOOLEAN"], ["C", "INTEGER"]>>)
add_attribute("C", "d", "BOOLEAN")
add_call_chain(<<A,C,e,c,c,BOOLEAN,e,C,b>>)
add_class(C)
add_call_chain(<<b,d,B,b,BOOLEAN>>)
greater_than
add_query("A", "c", <<["B", "INTEGER"], ["B", "b"], ["b", "INTEGER"], ["c", "A"], ["B", "INTEGER"], ["INTEGER", "C"], ["INTEGER", "INTEGER"], ["B", "b"], ["INTEGER", "C"]>>, "b")
add_attribute("INTEGER", "e", "d")
add_command("BOOLEAN", "A", <<["b", "a"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["a", "BOOLEAN"]>>)
bool_value (false)
disjunction
add_call_chain(<<a,e,c>>)
add_class(D)
numerical_negation
numerical_negation
add_command("c", "C", <<["e", "INTEGER"], ["D", "BOOLEAN"], ["INTEGER", "C"], ["INTEGER", "BOOLEAN"], ["d", "BOOLEAN"], ["c", "INTEGER"], ["B", "INTEGER"]>>)
logical_negation
add_attribute("b", "d", "INTEGER")
generate_java_code
type_check
add_query("C", "A", <<["e", "INTEGER"]>>, "B")
add_attribute("C", "B", "BOOLEAN")
int_value (23)
add_query("b", "b", <<["A", "INTEGER"], ["D", "BOOLEAN"]>>, "A")
add_attribute("B", "d", "BOOLEAN")
add_call_chain(<<A>>)
add_command("INTEGER", "INTEGER", <<["C", "INTEGER"], ["D", "BOOLEAN"], ["C", "b"], ["a", "C"], ["b", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "A"], ["B", "C"], ["b", "D"]>>)
add_class(a)
add_command("a", "B", <<["e", "A"], ["e", "a"], ["e", "BOOLEAN"], ["c", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "INTEGER"], ["D", "BOOLEAN"]>>)
add_call_chain(<<D,C,INTEGER,A>>)
add_query("d", "b", <<["C", "BOOLEAN"], ["A", "BOOLEAN"]>>, "b")
bool_value (false)
add_attribute("e", "B", "B")
add_call_chain(<<B,a,b,C,B,e,D>>)
add_query("d", "e", <<["c", "b"], ["a", "INTEGER"], ["D", "BOOLEAN"], ["C", "BOOLEAN"], ["BOOLEAN", "D"]>>, "c")
generate_java_code
int_value (11)
type_check
bool_value (false)
add_call_chain(<<INTEGER,e,c,a>>)
add_attribute("d", "d", "INTEGER")
numerical_negation
generate_java_code
greater_than
int_value (35)
type_check
logical_negation
add_call_chain(<<B,A>>)
bool_value (false)
equals
numerical_negation
add_attribute("b", "A", "c")
numerical_negation
add_call_chain(<<A>>)
bool_value (false)
type_check
numerical_negation
int_value (12)
numerical_negation
int_value (15)
add_command("c", "A", <<["A", "BOOLEAN"], ["a", "B"], ["d", "INTEGER"], ["D", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["INTEGER", "a"], ["B", "INTEGER"], ["c", "INTEGER"]>>)
bool_value (true)
add_call_chain(<<a>>)
bool_value (true)
add_attribute("A", "C", "INTEGER")
add_call_chain(<<c,b,D,a,a,B,A,c>>)
logical_negation
type_check
logical_negation
bool_value (true)
type_check
generate_java_code
add_call_chain(<<C,c,c,C>>)
add_attribute("A", "BOOLEAN", "BOOLEAN")
type_check
int_value (19)
add_query("C", "A", <<["c", "B"], ["c", "c"], ["C", "BOOLEAN"], ["C", "B"], ["D", "INTEGER"], ["D", "c"], ["B", "INTEGER"], ["a", "a"]>>, "C")
subtraction
add_call_chain(<<INTEGER,A,INTEGER>>)
add_call_chain(<<c,A>>)
subtraction
add_query("a", "c", <<["e", "c"], ["C", "INTEGER"], ["d", "INTEGER"], ["d", "d"], ["d", "c"], ["A", "INTEGER"], ["INTEGER", "c"]>>, "e")
add_attribute("B", "A", "INTEGER")
generate_java_code
logical_negation
bool_value (false)
add_command("C", "d", <<["b", "b"], ["b", "INTEGER"], ["C", "A"], ["d", "BOOLEAN"]>>)
add_query("e", "D", <<["A", "INTEGER"], ["a", "BOOLEAN"], ["d", "BOOLEAN"]>>, "B")
type_check
conjunction
conjunction
generate_java_code
generate_java_code
add_query("D", "D", <<["B", "BOOLEAN"], ["a", "BOOLEAN"], ["INTEGER", "INTEGER"]>>, "BOOLEAN")
add_call_chain(<<A,C,C,C,a>>)
add_call_chain(<<b,e>>)
add_call_chain(<<C,b>>)
numerical_negation
numerical_negation
add_attribute("c", "A", "C")
bool_value (false)
disjunction
type_check
int_value (21)
add_query("d", "B", <<["A", "B"], ["d", "BOOLEAN"], ["e", "INTEGER"], ["c", "BOOLEAN"], ["A", "c"], ["B", "INTEGER"], ["C", "INTEGER"]>>, "C")
add_class(d)
disjunction
numerical_negation
add_command("a", "B", <<["A", "INTEGER"], ["d", "B"], ["B", "BOOLEAN"]>>)
numerical_negation
bool_value (false)
add_call_chain(<<b,B,A>>)
bool_value (true)
add_query("a", "B", <<["B", "BOOLEAN"], ["B", "A"]>>, "C")
generate_java_code
type_check
generate_java_code
add_command("C", "C", <<["B", "INTEGER"]>>)
int_value (38)
add_query("D", "a", <<["C", "INTEGER"]>>, "c")
addition
multiplication
add_command("B", "C", <<["d", "C"]>>)
numerical_negation
generate_java_code
multiplication
add_attribute("D", "a", "BOOLEAN")
bool_value (false)
add_command("e", "d", <<["BOOLEAN", "BOOLEAN"], ["C", "INTEGER"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "INTEGER"]>>)
add_class(a)
add_call_chain(<<C,C,c,d>>)
add_query("B", "A", <<["c", "d"], ["c", "B"], ["b", "BOOLEAN"], ["C", "BOOLEAN"]>>, "b")
conjunction
type_check
add_call_chain(<<D,d>>)
add_class(B)
generate_java_code
quotient
add_attribute("b", "e", "D")
type_check
add_command("A", "A", <<["B", "INTEGER"], ["C", "INTEGER"], ["a", "INTEGER"], ["e", "INTEGER"], ["a", "INTEGER"], ["b", "B"], ["a", "d"], ["d", "INTEGER"], ["C", "B"]>>)
add_call_chain(<<A>>)
add_query("B", "b", <<["B", "d"], ["b", "c"], ["c", "INTEGER"], ["B", "BOOLEAN"]>>, "d")
less_than
add_attribute("D", "D", "BOOLEAN")
add_attribute("C", "A", "INTEGER")
add_attribute("A", "BOOLEAN", "BOOLEAN")
add_command("D", "C", <<["b", "C"]>>)
disjunction
add_query("D", "d", <<["INTEGER", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["A", "INTEGER"]>>, "d")
int_value (45)
add_call_chain(<<BOOLEAN>>)
add_call_chain(<<D,A,D,B,d,a>>)
add_call_chain(<<INTEGER,b,B>>)
add_command("C", "B", <<["D", "BOOLEAN"], ["B", "INTEGER"], ["b", "INTEGER"]>>)
numerical_negation
add_call_chain(<<b,d>>)
add_call_chain(<<d,D,A,A,C,a,B>>)
conjunction
numerical_negation
generate_java_code
add_call_chain(<<d,e,b,a>>)
add_command("a", "INTEGER", <<["C", "B"], ["C", "e"]>>)
add_query("B", "e", <<["INTEGER", "b"], ["B", "BOOLEAN"], ["A", "D"], ["e", "INTEGER"], ["d", "BOOLEAN"]>>, "C")
add_call_chain(<<d,B,A,D,D,C,D,D>>)
add_command("A", "A", <<["d", "B"], ["C", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "INTEGER"], ["e", "C"], ["C", "BOOLEAN"], ["B", "BOOLEAN"]>>)
disjunction
add_attribute("B", "b", "INTEGER")
numerical_negation
int_value (49)
conjunction
int_value (39)
add_query("e", "BOOLEAN", <<["d", "A"], ["a", "A"], ["D", "INTEGER"], ["d", "BOOLEAN"], ["B", "INTEGER"], ["B", "INTEGER"]>>, "d")
add_call_chain(<<A,B,INTEGER,A,c,d,e,D>>)
add_attribute("BOOLEAN", "c", "INTEGER")
int_value (12)
add_command("D", "D", <<["e", "BOOLEAN"], ["e", "INTEGER"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["A", "B"]>>)
add_query("A", "BOOLEAN", <<["a", "INTEGER"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["C", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["b", "d"], ["a", "D"]>>, "D")
add_call_chain(<<b,D,D,C,B,A>>)
add_query("A", "B", <<["e", "e"], ["B", "BOOLEAN"], ["C", "D"]>>, "e")
add_call_chain(<<a,c,b>>)
add_attribute("INTEGER", "b", "BOOLEAN")
type_check
int_value (44)
int_value (28)
greater_than
add_command("D", "B", <<["A", "B"], ["A", "b"], ["D", "A"], ["c", "INTEGER"]>>)
logical_negation
type_check
add_query("B", "b", <<["A", "d"], ["c", "e"], ["B", "INTEGER"], ["B", "d"], ["e", "INTEGER"], ["b", "INTEGER"]>>, "a")
int_value (28)
generate_java_code
int_value (5)
add_command("e", "c", <<["A", "INTEGER"], ["A", "D"], ["a", "b"]>>)
generate_java_code
add_command("c", "B", <<["d", "BOOLEAN"], ["B", "INTEGER"], ["a", "INTEGER"], ["b", "BOOLEAN"], ["d", "INTEGER"], ["B", "e"], ["a", "b"], ["b", "A"], ["c", "BOOLEAN"]>>)
add_class(C)
logical_negation
add_call_chain(<<e,INTEGER,A>>)
add_command("C", "INTEGER", <<["a", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "A"], ["INTEGER", "BOOLEAN"], ["D", "INTEGER"], ["d", "INTEGER"], ["A", "A"], ["e", "INTEGER"]>>)
add_class(A)
generate_java_code
bool_value (true)
add_command("a", "A", <<["d", "INTEGER"], ["C", "INTEGER"], ["a", "a"], ["BOOLEAN", "INTEGER"]>>)
disjunction
generate_java_code
add_call_chain(<<e,INTEGER,C,B,B,C,e>>)
conjunction
generate_java_code
logical_negation
add_call_chain(<<d,C,a,C,B>>)
add_command("INTEGER", "e", <<["a", "INTEGER"], ["D", "INTEGER"], ["D", "INTEGER"], ["BOOLEAN", "c"]>>)
int_value (9)
add_call_chain(<<D,B,e,A,e,A,e,B,D>>)
equals
add_attribute("b", "B", "a")
add_class(c)
modulo
add_call_chain(<<D,a>>)
bool_value (true)
add_call_chain(<<B,c,C,D>>)
int_value (46)
type_check
generate_java_code
less_than
add_call_chain(<<b,c,B,B,B,e,c>>)
equals
int_value (38)
numerical_negation
add_query("D", "b", <<["a", "BOOLEAN"], ["A", "INTEGER"], ["B", "D"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["a", "c"]>>, "b")
add_query("d", "d", <<["e", "INTEGER"], ["D", "INTEGER"], ["e", "INTEGER"], ["D", "INTEGER"], ["a", "BOOLEAN"], ["C", "INTEGER"], ["a", "INTEGER"], ["a", "e"]>>, "B")
multiplication
add_class(c)
type_check
int_value (2)
add_call_chain(<<c,D,B,INTEGER>>)
add_attribute("A", "d", "C")
subtraction
add_command("D", "C", <<["A", "BOOLEAN"], ["A", "INTEGER"], ["a", "BOOLEAN"], ["b", "INTEGER"], ["D", "c"]>>)
add_call_chain(<<c>>)
numerical_negation
