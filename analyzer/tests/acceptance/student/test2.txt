less_than
type_check
numerical_negation
numerical_negation
numerical_negation
numerical_negation
add_call_chain(<<INTEGER,BOOLEAN,c,e>>)
bool_value (true)
add_query("e", "c", <<["C", "A"], ["e", "INTEGER"], ["BOOLEAN", "INTEGER"]>>, "B")
bool_value (true)
int_value (41)
add_call_chain(<<D>>)
add_class(C)
add_class(e)
add_attribute("D", "A", "INTEGER")
add_query("A", "B", <<["e", "INTEGER"], ["B", "BOOLEAN"], ["INTEGER", "INTEGER"], ["C", "BOOLEAN"], ["a", "INTEGER"], ["e", "INTEGER"], ["e", "INTEGER"], ["INTEGER", "C"], ["d", "e"]>>, "D")
add_attribute("c", "C", "c")
add_command("D", "D", <<["c", "a"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "A"], ["INTEGER", "A"]>>)
bool_value (false)
int_value (48)
add_query("BOOLEAN", "c", <<["d", "B"]>>, "c")
bool_value (false)
add_attribute("A", "BOOLEAN", "INTEGER")
type_check
disjunction
add_call_chain(<<C,b,e>>)
equals
add_attribute("e", "B", "INTEGER")
add_query("D", "A", <<["B", "C"], ["C", "d"]>>, "D")
int_value (21)
disjunction
add_call_chain(<<a,INTEGER>>)
add_attribute("C", "B", "BOOLEAN")
add_attribute("e", "D", "INTEGER")
logical_negation
add_query("BOOLEAN", "D", <<["b", "A"]>>, "C")
bool_value (false)
type_check
add_query("D", "A", <<["C", "BOOLEAN"], ["d", "INTEGER"], ["INTEGER", "B"], ["INTEGER", "B"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["D", "BOOLEAN"], ["c", "B"], ["B", "INTEGER"]>>, "D")
add_command("a", "B", <<["e", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["A", "INTEGER"], ["c", "INTEGER"], ["D", "INTEGER"]>>)
generate_java_code
add_call_chain(<<B,e>>)
type_check
bool_value (true)
add_query("a", "b", <<["D", "INTEGER"], ["d", "D"]>>, "INTEGER")
int_value (20)
add_call_chain(<<A,B,d,B,c,BOOLEAN,e,B,b>>)
add_class(A)
conjunction
bool_value (false)
less_than
add_command("INTEGER", "D", <<["A", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["c", "BOOLEAN"], ["B", "BOOLEAN"]>>)
add_attribute("d", "C", "INTEGER")
add_command("e", "INTEGER", <<["d", "BOOLEAN"], ["A", "BOOLEAN"]>>)
add_query("B", "a", <<["e", "D"], ["C", "c"], ["BOOLEAN", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "B"], ["e", "a"], ["INTEGER", "A"]>>, "B")
numerical_negation
add_attribute("e", "C", "INTEGER")
add_command("INTEGER", "A", <<["D", "INTEGER"], ["A", "a"], ["B", "BOOLEAN"], ["e", "B"], ["a", "BOOLEAN"], ["e", "INTEGER"], ["B", "e"], ["c", "D"]>>)
type_check
numerical_negation
numerical_negation
add_command("d", "b", <<["B", "c"], ["d", "BOOLEAN"], ["e", "BOOLEAN"], ["c", "BOOLEAN"], ["d", "BOOLEAN"], ["b", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "INTEGER"], ["b", "B"]>>)
add_query("C", "d", <<["C", "BOOLEAN"], ["c", "D"], ["D", "INTEGER"], ["a", "INTEGER"]>>, "B")
add_call_chain(<<C,c,c,e,a>>)
add_call_chain(<<a,B,c,d,D,B,D>>)
type_check
bool_value (true)
add_call_chain(<<C,INTEGER,D>>)
add_call_chain(<<c,D,INTEGER>>)
conjunction
add_call_chain(<<d,D,a,e,c,a>>)
int_value (2)
int_value (31)
add_query("A", "c", <<["D", "INTEGER"]>>, "c")
int_value (47)
modulo
add_query("e", "A", <<["BOOLEAN", "BOOLEAN"], ["D", "A"], ["A", "BOOLEAN"], ["e", "INTEGER"], ["d", "BOOLEAN"], ["C", "b"], ["C", "INTEGER"], ["INTEGER", "BOOLEAN"]>>, "b")
add_command("b", "A", <<["D", "INTEGER"], ["B", "INTEGER"], ["e", "INTEGER"], ["A", "INTEGER"], ["B", "D"], ["a", "B"]>>)
generate_java_code
conjunction
logical_negation
bool_value (true)
add_query("INTEGER", "B", <<["e", "e"], ["b", "BOOLEAN"], ["b", "INTEGER"], ["c", "A"], ["a", "BOOLEAN"], ["C", "INTEGER"]>>, "b")
numerical_negation
logical_negation
numerical_negation
add_call_chain(<<a,A,e>>)
int_value (3)
add_attribute("D", "C", "BOOLEAN")
add_attribute("B", "C", "b")
add_call_chain(<<e,a,INTEGER>>)
add_call_chain(<<B,C,D,e,B,e,d>>)
add_command("B", "c", <<["INTEGER", "INTEGER"], ["b", "BOOLEAN"], ["e", "C"], ["D", "INTEGER"], ["d", "INTEGER"], ["c", "c"]>>)
add_command("c", "a", <<["a", "INTEGER"], ["d", "BOOLEAN"], ["B", "a"], ["B", "a"]>>)
int_value (34)
add_call_chain(<<BOOLEAN,b,d>>)
logical_negation
bool_value (true)
add_call_chain(<<A,BOOLEAN,a,INTEGER,A,D,INTEGER>>)
numerical_negation
add_command("a", "C", <<["e", "INTEGER"], ["C", "INTEGER"], ["A", "b"], ["e", "BOOLEAN"]>>)
generate_java_code
add_attribute("c", "e", "b")
add_command("d", "D", <<["C", "C"], ["C", "INTEGER"], ["INTEGER", "BOOLEAN"], ["d", "BOOLEAN"], ["b", "D"], ["A", "INTEGER"], ["e", "BOOLEAN"]>>)
type_check
logical_negation
add_command("D", "a", <<["e", "BOOLEAN"], ["b", "INTEGER"], ["A", "BOOLEAN"]>>)
add_attribute("D", "e", "INTEGER")
type_check
add_call_chain(<<C,e,b>>)
add_query("A", "D", <<["D", "INTEGER"], ["B", "C"], ["a", "a"], ["B", "INTEGER"], ["B", "D"], ["c", "BOOLEAN"], ["e", "INTEGER"], ["a", "BOOLEAN"]>>, "D")
add_command("b", "c", <<["d", "B"], ["INTEGER", "a"], ["e", "INTEGER"], ["d", "INTEGER"], ["c", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "BOOLEAN"]>>)
add_call_chain(<<b,C,e>>)
numerical_negation
numerical_negation
conjunction
numerical_negation
add_call_chain(<<D,C,A,a>>)
add_command("b", "D", <<["d", "BOOLEAN"], ["e", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "BOOLEAN"]>>)
add_attribute("b", "BOOLEAN", "INTEGER")
bool_value (true)
type_check
int_value (35)
add_command("C", "D", <<["D", "BOOLEAN"]>>)
add_command("e", "C", <<["C", "BOOLEAN"]>>)
add_class(e)
add_call_chain(<<b,A>>)
add_command("a", "C", <<["A", "BOOLEAN"], ["e", "BOOLEAN"], ["c", "D"], ["B", "INTEGER"]>>)
numerical_negation
conjunction
conjunction
int_value (18)
numerical_negation
conjunction
add_command("D", "C", <<["C", "INTEGER"], ["B", "INTEGER"], ["INTEGER", "BOOLEAN"], ["e", "INTEGER"], ["D", "INTEGER"], ["c", "BOOLEAN"], ["D", "A"], ["D", "BOOLEAN"], ["A", "INTEGER"]>>)
add_call_chain(<<A,INTEGER>>)
bool_value (false)
add_command("C", "e", <<["c", "D"], ["b", "BOOLEAN"], ["d", "INTEGER"], ["a", "B"], ["a", "INTEGER"], ["D", "BOOLEAN"], ["INTEGER", "INTEGER"]>>)
add_class(d)
add_call_chain(<<INTEGER,D,a,c,B>>)
add_command("C", "e", <<["A", "BOOLEAN"]>>)
int_value (32)
add_class(INTEGER)
numerical_negation
type_check
modulo
bool_value (true)
type_check
logical_negation
logical_negation
add_command("e", "D", <<["C", "INTEGER"], ["B", "a"], ["c", "INTEGER"], ["INTEGER", "INTEGER"]>>)
add_attribute("D", "BOOLEAN", "BOOLEAN")
add_call_chain(<<INTEGER,d,e>>)
add_call_chain(<<e,BOOLEAN,C,C,e,e>>)
bool_value (true)
bool_value (false)
type_check
addition
bool_value (true)
type_check
bool_value (true)
add_class(e)
add_query("a", "C", <<["C", "INTEGER"], ["e", "BOOLEAN"], ["a", "B"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["e", "BOOLEAN"], ["C", "BOOLEAN"]>>, "INTEGER")
add_query("b", "e", <<["c", "D"], ["A", "d"], ["B", "d"], ["e", "BOOLEAN"], ["d", "BOOLEAN"]>>, "e")
equals
disjunction
add_query("D", "e", <<["b", "INTEGER"], ["D", "BOOLEAN"]>>, "d")
add_attribute("A", "D", "BOOLEAN")
int_value (8)
conjunction
type_check
add_command("INTEGER", "C", <<["b", "BOOLEAN"], ["b", "INTEGER"], ["B", "INTEGER"], ["d", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"]>>)
add_attribute("b", "B", "INTEGER")
generate_java_code
logical_negation
add_call_chain(<<e,A,A,d,a,b>>)
logical_negation
add_call_chain(<<e,BOOLEAN,d,d,A,D,e>>)
disjunction
disjunction
add_call_chain(<<D>>)
int_value (46)
add_command("c", "c", <<["B", "BOOLEAN"]>>)
type_check
add_command("INTEGER", "a", <<["B", "INTEGER"], ["A", "INTEGER"], ["D", "INTEGER"], ["d", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "D"], ["d", "INTEGER"]>>)
add_call_chain(<<e,d,c,A,A,D>>)
generate_java_code
numerical_negation
add_command("a", "B", <<["D", "INTEGER"], ["BOOLEAN", "INTEGER"], ["A", "BOOLEAN"]>>)
add_command("A", "b", <<["B", "BOOLEAN"], ["C", "INTEGER"], ["C", "INTEGER"], ["D", "a"], ["B", "INTEGER"], ["c", "BOOLEAN"], ["C", "INTEGER"], ["A", "INTEGER"]>>)
add_call_chain(<<D>>)
add_call_chain(<<D,B,D>>)
add_class(B)
add_query("D", "B", <<["A", "A"]>>, "B")
add_command("A", "b", <<["a", "INTEGER"], ["A", "D"], ["d", "A"], ["e", "INTEGER"], ["d", "BOOLEAN"], ["C", "INTEGER"]>>)
greater_than
greater_than
logical_negation
add_class(d)
int_value (44)
add_command("BOOLEAN", "c", <<["B", "BOOLEAN"], ["INTEGER", "b"]>>)
bool_value (false)
bool_value (false)
subtraction
add_class(C)
numerical_negation
equals
type_check
add_class(d)
int_value (48)
int_value (16)
bool_value (false)
int_value (11)
add_attribute("D", "c", "b")
bool_value (false)
bool_value (true)
logical_negation
int_value (39)
add_command("BOOLEAN", "INTEGER", <<["b", "INTEGER"], ["D", "INTEGER"], ["e", "INTEGER"]>>)
less_than
numerical_negation
add_command("A", "d", <<["a", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "INTEGER"], ["A", "B"], ["B", "BOOLEAN"]>>)
add_attribute("a", "a", "INTEGER")
type_check
add_call_chain(<<a,a,INTEGER>>)
add_command("c", "c", <<["INTEGER", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["c", "BOOLEAN"]>>)
generate_java_code
generate_java_code
disjunction
