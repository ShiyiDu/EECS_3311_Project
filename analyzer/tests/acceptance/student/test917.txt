generate_java_code
bool_value (false)
add_call_chain(<<b,e>>)
numerical_negation
logical_negation
numerical_negation
numerical_negation
bool_value (false)
type_check
add_attribute("A", "d", "A")
add_command("c", "C", <<["c", "INTEGER"]>>)
add_call_chain(<<INTEGER,D,e,B,C,e,C>>)
add_attribute("D", "C", "INTEGER")
add_command("B", "A", <<["b", "BOOLEAN"], ["B", "INTEGER"], ["a", "D"], ["B", "BOOLEAN"]>>)
bool_value (true)
bool_value (true)
add_query("e", "C", <<["a", "INTEGER"], ["e", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "INTEGER"]>>, "a")
add_command("C", "c", <<["b", "D"]>>)
add_class(B)
add_call_chain(<<B,B,INTEGER,D,c,a>>)
multiplication
add_attribute("B", "c", "INTEGER")
int_value (49)
add_command("D", "B", <<["C", "C"], ["D", "INTEGER"]>>)
add_attribute("c", "C", "BOOLEAN")
numerical_negation
add_command("b", "a", <<["b", "INTEGER"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "B"]>>)
add_class(C)
add_class(D)
add_attribute("C", "D", "INTEGER")
numerical_negation
int_value (46)
numerical_negation
add_query("B", "a", <<["B", "BOOLEAN"]>>, "D")
generate_java_code
greater_than
add_query("a", "d", <<["B", "c"], ["a", "INTEGER"]>>, "A")
add_call_chain(<<a,a,c,e>>)
add_attribute("a", "D", "INTEGER")
add_call_chain(<<BOOLEAN,BOOLEAN,B,a,b,D>>)
type_check
add_query("B", "A", <<["A", "INTEGER"], ["A", "D"], ["c", "INTEGER"], ["b", "BOOLEAN"], ["A", "BOOLEAN"]>>, "B")
add_class(D)
add_class(A)
add_command("D", "C", <<["INTEGER", "INTEGER"]>>)
bool_value (false)
add_class(A)
numerical_negation
add_command("c", "d", <<["c", "c"]>>)
int_value (12)
equals
add_call_chain(<<e,a>>)
generate_java_code
add_query("e", "D", <<["A", "BOOLEAN"], ["A", "INTEGER"], ["C", "INTEGER"], ["b", "D"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["b", "INTEGER"]>>, "D")
int_value (22)
add_call_chain(<<B,A,e,c,b,c,c,a,C>>)
generate_java_code
add_command("b", "e", <<["e", "INTEGER"], ["c", "A"], ["c", "INTEGER"], ["A", "INTEGER"], ["C", "A"], ["c", "INTEGER"]>>)
generate_java_code
type_check
type_check
type_check
bool_value (true)
equals
generate_java_code
int_value (43)
bool_value (false)
add_query("d", "a", <<["a", "A"], ["BOOLEAN", "BOOLEAN"], ["A", "B"], ["INTEGER", "INTEGER"], ["C", "BOOLEAN"], ["e", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "A"], ["D", "BOOLEAN"]>>, "A")
add_call_chain(<<a,b,A,c,B,INTEGER,B,e,D>>)
less_than
numerical_negation
bool_value (true)
disjunction
generate_java_code
add_call_chain(<<b,INTEGER,d,b,A,c,d>>)
add_class(d)
numerical_negation
int_value (27)
add_call_chain(<<b,b,d,C,e,e>>)
equals
int_value (16)
addition
add_call_chain(<<C,BOOLEAN,A>>)
add_query("D", "A", <<["B", "BOOLEAN"]>>, "c")
add_call_chain(<<b>>)
add_attribute("b", "INTEGER", "B")
add_call_chain(<<c,a,e,e,a>>)
add_query("A", "a", <<["B", "BOOLEAN"], ["BOOLEAN", "D"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["d", "BOOLEAN"]>>, "C")
add_query("c", "INTEGER", <<["D", "BOOLEAN"], ["b", "BOOLEAN"], ["b", "INTEGER"], ["C", "INTEGER"], ["A", "INTEGER"], ["b", "BOOLEAN"]>>, "D")
add_call_chain(<<D,D,B,D,c,B>>)
logical_negation
add_call_chain(<<A,a,C,A,d,d,a,a,a>>)
disjunction
add_command("d", "D", <<["D", "d"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["D", "b"], ["BOOLEAN", "INTEGER"], ["e", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["d", "C"], ["INTEGER", "a"]>>)
add_call_chain(<<A,D,D,e>>)
add_attribute("e", "A", "BOOLEAN")
addition
int_value (3)
logical_negation
generate_java_code
add_query("B", "b", <<["B", "INTEGER"], ["B", "INTEGER"], ["c", "d"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "e"]>>, "B")
add_call_chain(<<b,a,e,C,B,b>>)
add_attribute("b", "INTEGER", "A")
type_check
add_query("d", "d", <<["c", "INTEGER"], ["a", "BOOLEAN"], ["A", "INTEGER"], ["B", "d"]>>, "c")
bool_value (false)
add_call_chain(<<B,b,C,B,B>>)
add_query("B", "a", <<["e", "e"], ["D", "INTEGER"], ["A", "B"], ["C", "INTEGER"], ["e", "INTEGER"], ["C", "BOOLEAN"], ["d", "INTEGER"], ["D", "A"], ["e", "e"]>>, "b")
greater_than
add_query("C", "b", <<["d", "BOOLEAN"], ["b", "C"], ["B", "B"]>>, "e")
type_check
logical_negation
bool_value (false)
int_value (31)
int_value (9)
disjunction
add_query("c", "A", <<["a", "BOOLEAN"], ["d", "INTEGER"], ["C", "BOOLEAN"], ["c", "INTEGER"], ["d", "BOOLEAN"], ["a", "b"], ["C", "INTEGER"]>>, "B")
logical_negation
add_attribute("b", "d", "INTEGER")
add_call_chain(<<A,C,d,b,c,D,c,B,e>>)
add_call_chain(<<a,B,e,c,e,d,A,b,a>>)
int_value (20)
addition
add_command("A", "BOOLEAN", <<["b", "BOOLEAN"], ["a", "INTEGER"], ["A", "BOOLEAN"]>>)
generate_java_code
add_query("BOOLEAN", "C", <<["d", "c"], ["A", "INTEGER"]>>, "b")
add_class(b)
logical_negation
add_call_chain(<<BOOLEAN,C,D,D,D,B>>)
add_command("A", "B", <<["D", "INTEGER"], ["BOOLEAN", "a"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["b", "INTEGER"], ["a", "BOOLEAN"]>>)
add_class(D)
add_call_chain(<<C,D,D,c,d,c>>)
type_check
add_query("C", "e", <<["B", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["C", "INTEGER"], ["d", "BOOLEAN"], ["a", "b"]>>, "BOOLEAN")
add_query("c", "e", <<["B", "d"], ["a", "BOOLEAN"], ["d", "c"], ["c", "BOOLEAN"], ["B", "C"], ["A", "INTEGER"], ["A", "c"], ["INTEGER", "BOOLEAN"]>>, "c")
numerical_negation
add_attribute("A", "e", "c")
add_call_chain(<<D,A,A,a,D>>)
disjunction
numerical_negation
add_class(D)
add_class(d)
logical_negation
add_query("e", "B", <<["B", "C"], ["D", "e"], ["INTEGER", "INTEGER"], ["a", "BOOLEAN"]>>, "D")
int_value (5)
add_attribute("c", "B", "BOOLEAN")
add_call_chain(<<c,B>>)
logical_negation
greater_than
add_call_chain(<<e,C,e,C,B,b,c,a,b>>)
add_attribute("C", "D", "BOOLEAN")
numerical_negation
add_query("B", "B", <<["c", "INTEGER"], ["b", "A"]>>, "a")
add_query("b", "d", <<["BOOLEAN", "INTEGER"], ["a", "a"]>>, "A")
add_command("A", "B", <<["e", "INTEGER"], ["D", "BOOLEAN"]>>)
add_call_chain(<<INTEGER,e,C>>)
add_call_chain(<<INTEGER,a,e>>)
add_call_chain(<<BOOLEAN,A,INTEGER,b,B,D>>)
add_call_chain(<<e>>)
type_check
add_query("BOOLEAN", "a", <<["b", "BOOLEAN"], ["a", "INTEGER"]>>, "D")
modulo
bool_value (false)
add_call_chain(<<D>>)
add_attribute("c", "a", "D")
type_check
conjunction
type_check
multiplication
generate_java_code
logical_negation
add_call_chain(<<INTEGER,c>>)
type_check
add_command("e", "b", <<["INTEGER", "INTEGER"], ["c", "BOOLEAN"], ["a", "INTEGER"], ["D", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "BOOLEAN"]>>)
add_command("c", "B", <<["d", "D"], ["a", "BOOLEAN"], ["e", "B"], ["a", "INTEGER"], ["c", "BOOLEAN"]>>)
add_call_chain(<<B,BOOLEAN,b,B,INTEGER,D,D,A,A>>)
add_call_chain(<<b,b>>)
disjunction
int_value (13)
type_check
generate_java_code
add_attribute("c", "d", "b")
numerical_negation
add_call_chain(<<a,D,A,b,d,c,e,BOOLEAN>>)
greater_than
logical_negation
disjunction
equals
generate_java_code
add_attribute("c", "c", "a")
add_command("b", "d", <<["d", "INTEGER"], ["B", "INTEGER"], ["e", "INTEGER"], ["C", "BOOLEAN"], ["a", "b"], ["B", "c"], ["B", "a"], ["a", "BOOLEAN"]>>)
numerical_negation
numerical_negation
add_call_chain(<<B,a,a>>)
bool_value (true)
bool_value (false)
add_attribute("D", "a", "A")
add_call_chain(<<e,C,C,a,B,INTEGER>>)
equals
numerical_negation
bool_value (false)
add_query("B", "d", <<["e", "INTEGER"], ["e", "INTEGER"], ["c", "b"], ["A", "BOOLEAN"], ["C", "BOOLEAN"]>>, "c")
greater_than
add_attribute("D", "e", "BOOLEAN")
add_call_chain(<<e>>)
add_class(INTEGER)
type_check
generate_java_code
conjunction
add_attribute("b", "e", "INTEGER")
bool_value (true)
add_query("C", "C", <<["C", "BOOLEAN"], ["d", "e"]>>, "A")
type_check
add_call_chain(<<INTEGER,e,A,B,B,c,e>>)
add_class(B)
add_class(D)
add_query("a", "D", <<["c", "INTEGER"], ["A", "c"], ["BOOLEAN", "BOOLEAN"], ["a", "BOOLEAN"]>>, "d")
int_value (34)
add_attribute("C", "b", "INTEGER")
add_command("INTEGER", "a", <<["a", "BOOLEAN"], ["B", "C"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["d", "d"]>>)
int_value (28)
greater_than
add_call_chain(<<D,D,B,BOOLEAN,B>>)
numerical_negation
type_check
add_call_chain(<<b,A,d,C,b,b,D,D,C>>)
logical_negation
add_query("c", "a", <<["C", "INTEGER"], ["d", "BOOLEAN"], ["d", "INTEGER"], ["B", "c"], ["B", "BOOLEAN"], ["B", "A"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>, "d")
conjunction
generate_java_code
logical_negation
int_value (5)
add_attribute("B", "a", "INTEGER")
int_value (40)
int_value (45)
int_value (45)
add_call_chain(<<b,c,C,BOOLEAN,INTEGER,d>>)
logical_negation
