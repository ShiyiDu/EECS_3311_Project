add_query("d", "A", <<["d", "BOOLEAN"], ["e", "INTEGER"]>>, "B")
type_check
numerical_negation
equals
int_value (36)
add_query("b", "A", <<["b", "c"], ["D", "BOOLEAN"]>>, "B")
logical_negation
quotient
int_value (38)
type_check
add_command("B", "INTEGER", <<["C", "d"], ["A", "d"], ["C", "A"]>>)
equals
add_attribute("A", "d", "c")
generate_java_code
int_value (29)
conjunction
add_call_chain(<<b,c,D>>)
bool_value (false)
add_query("D", "INTEGER", <<["A", "INTEGER"], ["D", "INTEGER"], ["B", "INTEGER"], ["e", "BOOLEAN"]>>, "D")
int_value (39)
type_check
modulo
numerical_negation
equals
generate_java_code
add_call_chain(<<BOOLEAN,A,BOOLEAN,e,D,a,BOOLEAN,e>>)
logical_negation
add_call_chain(<<B,a,INTEGER>>)
add_query("A", "C", <<["e", "INTEGER"], ["B", "INTEGER"], ["D", "INTEGER"], ["c", "INTEGER"], ["c", "D"], ["BOOLEAN", "BOOLEAN"], ["e", "INTEGER"], ["A", "INTEGER"]>>, "B")
logical_negation
add_call_chain(<<b,A,A,b,A,d>>)
add_attribute("C", "d", "BOOLEAN")
greater_than
int_value (42)
int_value (36)
add_call_chain(<<BOOLEAN>>)
add_attribute("C", "b", "BOOLEAN")
add_attribute("B", "B", "C")
add_attribute("e", "INTEGER", "INTEGER")
add_attribute("A", "D", "INTEGER")
type_check
modulo
add_call_chain(<<C,C,e,B,d>>)
bool_value (false)
logical_negation
bool_value (true)
generate_java_code
numerical_negation
disjunction
add_command("a", "B", <<["INTEGER", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["d", "a"], ["a", "BOOLEAN"]>>)
quotient
generate_java_code
add_command("BOOLEAN", "c", <<["B", "a"], ["e", "BOOLEAN"], ["B", "B"], ["a", "INTEGER"]>>)
greater_than
disjunction
numerical_negation
add_command("C", "D", <<["D", "b"], ["A", "B"], ["C", "INTEGER"], ["B", "e"], ["D", "e"], ["e", "BOOLEAN"], ["B", "INTEGER"], ["B", "BOOLEAN"]>>)
add_class(D)
add_query("C", "A", <<["A", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "INTEGER"], ["b", "INTEGER"], ["A", "BOOLEAN"], ["a", "BOOLEAN"]>>, "e")
add_attribute("C", "B", "BOOLEAN")
add_call_chain(<<a,C,b,BOOLEAN,b,a,B>>)
int_value (24)
add_call_chain(<<INTEGER,d,a,a,C,C,INTEGER>>)
add_query("D", "C", <<["a", "INTEGER"], ["e", "INTEGER"], ["e", "A"], ["D", "INTEGER"], ["B", "INTEGER"], ["A", "C"], ["d", "INTEGER"], ["INTEGER", "b"]>>, "D")
add_attribute("a", "e", "D")
add_call_chain(<<A,C,d,C>>)
bool_value (false)
add_call_chain(<<C,A,A,d,a,BOOLEAN,c>>)
add_query("a", "d", <<["A", "INTEGER"]>>, "B")
numerical_negation
add_query("c", "b", <<["a", "INTEGER"], ["INTEGER", "INTEGER"], ["e", "b"], ["B", "d"], ["a", "INTEGER"]>>, "a")
logical_negation
numerical_negation
logical_negation
int_value (21)
add_call_chain(<<a,C,b,C,B,B,a,B>>)
add_class(D)
bool_value (false)
add_call_chain(<<B,D,c,B,b,d>>)
add_command("A", "a", <<["C", "INTEGER"], ["C", "BOOLEAN"]>>)
add_command("e", "INTEGER", <<["a", "BOOLEAN"], ["a", "A"]>>)
type_check
add_call_chain(<<c,C,c,C,BOOLEAN,c,b,e,C>>)
add_query("D", "D", <<["a", "INTEGER"], ["D", "D"], ["d", "INTEGER"], ["INTEGER", "INTEGER"]>>, "d")
add_command("d", "BOOLEAN", <<["B", "BOOLEAN"], ["d", "BOOLEAN"], ["c", "INTEGER"], ["B", "BOOLEAN"], ["B", "INTEGER"], ["C", "D"], ["B", "BOOLEAN"], ["C", "INTEGER"], ["A", "e"]>>)
add_call_chain(<<D,D>>)
add_attribute("D", "d", "BOOLEAN")
int_value (2)
add_call_chain(<<INTEGER,b,C,C,B,INTEGER,a,a>>)
generate_java_code
add_query("c", "B", <<["INTEGER", "A"], ["e", "INTEGER"], ["C", "e"], ["e", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "C"]>>, "B")
add_attribute("C", "C", "BOOLEAN")
add_call_chain(<<A,a,a,d,D,a,C>>)
int_value (19)
add_class(a)
add_class(INTEGER)
add_attribute("BOOLEAN", "c", "BOOLEAN")
int_value (12)
greater_than
generate_java_code
logical_negation
generate_java_code
add_query("INTEGER", "C", <<["INTEGER", "INTEGER"], ["b", "INTEGER"]>>, "b")
numerical_negation
add_call_chain(<<e>>)
add_attribute("d", "D", "INTEGER")
add_attribute("a", "a", "B")
equals
generate_java_code
add_class(d)
add_class(c)
type_check
add_call_chain(<<b>>)
greater_than
add_command("B", "b", <<["c", "D"], ["e", "A"], ["b", "A"], ["e", "BOOLEAN"]>>)
numerical_negation
add_call_chain(<<C,b,c,A,A>>)
add_call_chain(<<D,b,A,INTEGER,e,BOOLEAN>>)
add_attribute("c", "e", "BOOLEAN")
bool_value (true)
type_check
add_call_chain(<<D,c>>)
logical_negation
add_call_chain(<<e>>)
logical_negation
add_command("A", "C", <<["a", "D"], ["a", "INTEGER"], ["c", "a"], ["e", "e"], ["BOOLEAN", "c"], ["B", "INTEGER"], ["a", "BOOLEAN"]>>)
numerical_negation
add_query("C", "b", <<["C", "c"], ["b", "INTEGER"], ["b", "C"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["D", "INTEGER"]>>, "e")
add_call_chain(<<b,INTEGER,e,BOOLEAN,A,a,C,C>>)
bool_value (true)
add_query("BOOLEAN", "BOOLEAN", <<["C", "BOOLEAN"]>>, "D")
add_query("C", "B", <<["D", "INTEGER"], ["c", "INTEGER"], ["A", "INTEGER"], ["A", "C"], ["D", "C"], ["a", "BOOLEAN"]>>, "INTEGER")
add_call_chain(<<C>>)
greater_than
numerical_negation
add_call_chain(<<b>>)
add_call_chain(<<A,B,B,A,a,d,d,c,c>>)
add_attribute("d", "a", "INTEGER")
add_call_chain(<<INTEGER,e,D,D,B,D>>)
conjunction
add_call_chain(<<a,INTEGER,INTEGER>>)
bool_value (false)
bool_value (true)
quotient
add_attribute("A", "b", "INTEGER")
less_than
conjunction
add_query("c", "D", <<["INTEGER", "INTEGER"], ["C", "d"], ["e", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["c", "INTEGER"], ["c", "B"], ["d", "e"]>>, "C")
add_query("e", "D", <<["c", "BOOLEAN"], ["C", "INTEGER"], ["D", "INTEGER"], ["e", "BOOLEAN"], ["D", "e"]>>, "B")
add_query("BOOLEAN", "e", <<["C", "INTEGER"]>>, "D")
add_command("A", "BOOLEAN", <<["A", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["B", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>)
logical_negation
less_than
bool_value (true)
add_command("c", "D", <<["D", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["d", "INTEGER"], ["e", "B"], ["C", "INTEGER"], ["b", "C"], ["C", "BOOLEAN"]>>)
add_attribute("A", "e", "BOOLEAN")
add_attribute("A", "c", "INTEGER")
type_check
bool_value (false)
add_command("D", "c", <<["INTEGER", "BOOLEAN"], ["d", "BOOLEAN"], ["c", "INTEGER"], ["b", "a"], ["b", "C"], ["c", "B"]>>)
add_call_chain(<<a,b,A>>)
add_attribute("e", "BOOLEAN", "BOOLEAN")
add_command("D", "B", <<["D", "INTEGER"], ["BOOLEAN", "e"], ["a", "b"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "INTEGER"], ["c", "INTEGER"], ["e", "INTEGER"]>>)
conjunction
type_check
multiplication
int_value (47)
generate_java_code
add_attribute("INTEGER", "INTEGER", "INTEGER")
equals
add_command("d", "e", <<["d", "c"], ["B", "INTEGER"], ["INTEGER", "BOOLEAN"], ["e", "B"]>>)
less_than
bool_value (false)
add_class(BOOLEAN)
bool_value (false)
add_call_chain(<<a,c,a,C>>)
addition
add_command("b", "INTEGER", <<["A", "A"], ["B", "INTEGER"]>>)
int_value (47)
add_command("d", "B", <<["a", "BOOLEAN"], ["e", "BOOLEAN"], ["a", "INTEGER"], ["d", "B"], ["B", "d"], ["D", "BOOLEAN"], ["B", "A"], ["e", "INTEGER"]>>)
logical_negation
add_query("C", "b", <<["B", "c"], ["INTEGER", "c"], ["C", "BOOLEAN"], ["A", "INTEGER"]>>, "D")
addition
add_call_chain(<<B,A,b,A>>)
add_query("d", "C", <<["A", "B"], ["A", "INTEGER"], ["BOOLEAN", "A"], ["A", "e"], ["A", "INTEGER"], ["b", "c"]>>, "b")
int_value (35)
greater_than
generate_java_code
add_attribute("D", "c", "BOOLEAN")
add_call_chain(<<b,b,INTEGER,C,d,b,INTEGER,C,c>>)
conjunction
generate_java_code
int_value (25)
numerical_negation
add_call_chain(<<a,BOOLEAN>>)
add_call_chain(<<BOOLEAN,B,d,BOOLEAN,INTEGER>>)
int_value (34)
disjunction
add_call_chain(<<B,C,C,C,d,INTEGER,C,C,d>>)
greater_than
add_command("A", "a", <<["D", "BOOLEAN"]>>)
int_value (1)
add_query("A", "C", <<["a", "BOOLEAN"]>>, "c")
add_query("a", "INTEGER", <<["D", "INTEGER"], ["b", "BOOLEAN"], ["A", "D"], ["e", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "INTEGER"]>>, "A")
numerical_negation
add_call_chain(<<D,c,a,D,B,C,C>>)
add_query("c", "C", <<["a", "INTEGER"], ["b", "d"], ["d", "BOOLEAN"]>>, "A")
add_class(e)
add_attribute("c", "a", "INTEGER")
multiplication
generate_java_code
generate_java_code
modulo
add_query("c", "B", <<["INTEGER", "b"], ["C", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "INTEGER"], ["C", "INTEGER"], ["e", "INTEGER"], ["BOOLEAN", "a"]>>, "INTEGER")
add_query("A", "a", <<["b", "INTEGER"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "D"], ["B", "INTEGER"], ["b", "INTEGER"], ["d", "BOOLEAN"]>>, "C")
disjunction
bool_value (false)
add_attribute("c", "A", "BOOLEAN")
int_value (5)
less_than
add_query("c", "b", <<["e", "D"], ["d", "INTEGER"], ["e", "INTEGER"], ["B", "c"], ["C", "BOOLEAN"], ["e", "INTEGER"], ["a", "BOOLEAN"]>>, "d")
type_check
add_command("e", "d", <<["e", "BOOLEAN"], ["e", "INTEGER"], ["C", "BOOLEAN"], ["d", "BOOLEAN"], ["b", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["INTEGER", "e"], ["BOOLEAN", "C"], ["BOOLEAN", "INTEGER"]>>)
bool_value (false)
type_check
