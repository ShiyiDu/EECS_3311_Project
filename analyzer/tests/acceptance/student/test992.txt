add_call_chain(<<e,d,a,b,B,C,b>>)
logical_negation
add_call_chain(<<C,c,b>>)
add_call_chain(<<e>>)
bool_value (false)
logical_negation
add_command("B", "BOOLEAN", <<["A", "INTEGER"], ["C", "INTEGER"], ["D", "INTEGER"], ["A", "A"], ["C", "INTEGER"]>>)
numerical_negation
numerical_negation
add_attribute("D", "a", "BOOLEAN")
add_attribute("B", "C", "BOOLEAN")
bool_value (true)
logical_negation
numerical_negation
add_attribute("a", "INTEGER", "C")
logical_negation
add_command("a", "d", <<["C", "BOOLEAN"], ["c", "INTEGER"], ["B", "e"], ["C", "C"], ["a", "BOOLEAN"], ["B", "BOOLEAN"]>>)
add_query("INTEGER", "D", <<["a", "INTEGER"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["c", "INTEGER"], ["D", "INTEGER"], ["a", "BOOLEAN"], ["e", "INTEGER"], ["D", "INTEGER"]>>, "a")
generate_java_code
int_value (7)
int_value (25)
generate_java_code
add_query("a", "A", <<["b", "D"], ["e", "INTEGER"]>>, "B")
add_call_chain(<<c,A,B,b,C>>)
add_query("D", "C", <<["A", "C"], ["INTEGER", "b"], ["C", "BOOLEAN"], ["e", "INTEGER"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["A", "INTEGER"]>>, "e")
add_query("a", "A", <<["A", "INTEGER"], ["b", "B"], ["D", "INTEGER"], ["e", "BOOLEAN"], ["c", "b"], ["BOOLEAN", "BOOLEAN"], ["BOOLEAN", "d"], ["D", "D"]>>, "b")
add_command("d", "e", <<["b", "d"]>>)
bool_value (false)
add_command("b", "C", <<["c", "BOOLEAN"]>>)
add_command("b", "b", <<["d", "INTEGER"], ["b", "B"], ["A", "INTEGER"], ["e", "B"], ["b", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["C", "INTEGER"]>>)
numerical_negation
add_call_chain(<<C,B>>)
add_call_chain(<<B,B,e,A,A>>)
add_command("C", "B", <<["A", "BOOLEAN"], ["e", "d"], ["BOOLEAN", "a"], ["e", "b"], ["b", "BOOLEAN"], ["d", "BOOLEAN"], ["b", "INTEGER"]>>)
generate_java_code
add_attribute("C", "b", "c")
generate_java_code
add_command("D", "a", <<["d", "BOOLEAN"], ["a", "b"], ["C", "e"], ["D", "INTEGER"], ["e", "BOOLEAN"], ["e", "INTEGER"], ["INTEGER", "INTEGER"], ["B", "A"], ["c", "A"]>>)
numerical_negation
add_call_chain(<<B>>)
type_check
logical_negation
numerical_negation
logical_negation
numerical_negation
add_attribute("c", "B", "A")
bool_value (false)
bool_value (false)
type_check
add_command("INTEGER", "D", <<["a", "INTEGER"], ["b", "INTEGER"], ["e", "BOOLEAN"]>>)
add_command("e", "e", <<["d", "b"], ["INTEGER", "B"], ["A", "BOOLEAN"], ["d", "INTEGER"], ["d", "INTEGER"], ["C", "a"], ["A", "INTEGER"]>>)
add_call_chain(<<INTEGER,D,A,B,D>>)
add_query("a", "D", <<["a", "BOOLEAN"], ["e", "INTEGER"], ["C", "BOOLEAN"], ["D", "D"]>>, "e")
add_command("B", "b", <<["e", "BOOLEAN"], ["a", "INTEGER"], ["A", "A"], ["BOOLEAN", "BOOLEAN"], ["c", "INTEGER"], ["B", "e"], ["D", "A"], ["b", "e"], ["e", "a"]>>)
add_query("B", "e", <<["B", "C"], ["c", "D"], ["a", "BOOLEAN"], ["B", "BOOLEAN"]>>, "A")
bool_value (false)
bool_value (false)
add_call_chain(<<c,e,c,A,e,a,d,a>>)
add_call_chain(<<a,B,c,B,c,A,d,INTEGER>>)
numerical_negation
numerical_negation
greater_than
conjunction
bool_value (true)
add_attribute("C", "a", "BOOLEAN")
add_query("D", "d", <<["BOOLEAN", "INTEGER"]>>, "A")
generate_java_code
add_call_chain(<<A,A,d,C,c>>)
add_command("INTEGER", "b", <<["A", "C"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["a", "BOOLEAN"]>>)
add_attribute("B", "b", "BOOLEAN")
add_call_chain(<<A,e>>)
add_call_chain(<<e,e,D>>)
add_query("D", "d", <<["b", "INTEGER"]>>, "B")
add_command("c", "d", <<["A", "BOOLEAN"], ["d", "INTEGER"], ["B", "INTEGER"]>>)
add_call_chain(<<e,A,A>>)
add_call_chain(<<d,B,a>>)
bool_value (false)
numerical_negation
add_command("A", "e", <<["B", "BOOLEAN"]>>)
add_command("b", "A", <<["D", "C"], ["d", "INTEGER"], ["INTEGER", "b"], ["b", "BOOLEAN"], ["a", "BOOLEAN"]>>)
add_call_chain(<<b>>)
add_query("B", "C", <<["A", "INTEGER"]>>, "d")
add_call_chain(<<D,A,d,A,C,c>>)
add_command("b", "a", <<["D", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "D"], ["e", "INTEGER"], ["INTEGER", "A"], ["e", "INTEGER"], ["A", "BOOLEAN"], ["INTEGER", "INTEGER"]>>)
numerical_negation
int_value (31)
logical_negation
conjunction
bool_value (false)
add_call_chain(<<c,C,C,e,a,A,A,C>>)
numerical_negation
add_call_chain(<<INTEGER,A>>)
add_call_chain(<<C,d>>)
numerical_negation
bool_value (true)
add_call_chain(<<BOOLEAN,INTEGER,A,e,INTEGER,A,d>>)
add_attribute("BOOLEAN", "e", "BOOLEAN")
add_attribute("D", "B", "BOOLEAN")
add_attribute("d", "INTEGER", "BOOLEAN")
add_call_chain(<<A,e,e,e,d,D,D,B,e>>)
add_call_chain(<<e,e,c,INTEGER,b,BOOLEAN>>)
generate_java_code
bool_value (true)
add_query("A", "a", <<["e", "INTEGER"], ["A", "INTEGER"]>>, "C")
add_call_chain(<<b,e,BOOLEAN,b,d>>)
add_attribute("C", "A", "e")
conjunction
add_attribute("A", "d", "BOOLEAN")
add_command("B", "e", <<["e", "BOOLEAN"], ["e", "d"]>>)
add_class(B)
add_call_chain(<<D,INTEGER,b,d,e>>)
int_value (46)
add_query("e", "C", <<["e", "C"], ["c", "C"], ["B", "BOOLEAN"], ["B", "INTEGER"], ["e", "B"]>>, "B")
add_attribute("C", "a", "INTEGER")
add_query("C", "a", <<["A", "BOOLEAN"], ["d", "A"], ["c", "BOOLEAN"], ["INTEGER", "C"], ["C", "INTEGER"]>>, "BOOLEAN")
int_value (36)
int_value (25)
generate_java_code
addition
logical_negation
add_command("D", "a", <<["C", "INTEGER"], ["a", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "c"], ["A", "e"], ["b", "B"], ["C", "INTEGER"], ["C", "b"]>>)
disjunction
numerical_negation
type_check
logical_negation
add_attribute("a", "a", "INTEGER")
generate_java_code
logical_negation
add_call_chain(<<INTEGER,A,e,D,C,a,INTEGER,c>>)
add_query("BOOLEAN", "A", <<["e", "BOOLEAN"]>>, "B")
logical_negation
bool_value (true)
modulo
type_check
greater_than
int_value (4)
add_command("e", "e", <<["c", "BOOLEAN"], ["e", "BOOLEAN"], ["a", "BOOLEAN"]>>)
logical_negation
add_command("e", "A", <<["d", "INTEGER"], ["INTEGER", "BOOLEAN"], ["b", "B"], ["a", "BOOLEAN"]>>)
bool_value (false)
add_call_chain(<<INTEGER,C,a,INTEGER,C,b>>)
less_than
add_class(A)
disjunction
logical_negation
logical_negation
bool_value (true)
bool_value (true)
greater_than
add_call_chain(<<e>>)
add_call_chain(<<BOOLEAN,B,A>>)
type_check
int_value (44)
logical_negation
add_command("C", "C", <<["BOOLEAN", "BOOLEAN"], ["D", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>)
add_call_chain(<<C,A,e,C>>)
numerical_negation
bool_value (true)
add_attribute("a", "B", "BOOLEAN")
equals
bool_value (false)
logical_negation
add_command("a", "B", <<["D", "INTEGER"], ["C", "C"], ["e", "B"], ["C", "e"], ["e", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "D"], ["D", "C"], ["d", "BOOLEAN"]>>)
add_call_chain(<<a,C,e,B,D,e,B,e,a>>)
type_check
bool_value (false)
add_call_chain(<<C>>)
add_call_chain(<<A,D,a,a,INTEGER,INTEGER>>)
add_query("e", "a", <<["D", "INTEGER"], ["d", "INTEGER"], ["C", "b"], ["A", "e"]>>, "INTEGER")
logical_negation
add_class(D)
logical_negation
greater_than
add_attribute("d", "b", "C")
add_call_chain(<<A,D,B>>)
add_query("BOOLEAN", "a", <<["D", "INTEGER"], ["c", "BOOLEAN"], ["b", "BOOLEAN"], ["b", "a"], ["d", "e"], ["A", "BOOLEAN"], ["B", "a"]>>, "c")
add_class(D)
add_query("B", "e", <<["a", "a"], ["C", "BOOLEAN"], ["c", "A"], ["D", "D"]>>, "b")
add_attribute("b", "C", "INTEGER")
int_value (17)
add_call_chain(<<D,INTEGER,C,e,d,e>>)
add_call_chain(<<A,BOOLEAN,c,b>>)
add_query("A", "B", <<["C", "c"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>, "d")
bool_value (true)
bool_value (true)
less_than
logical_negation
conjunction
numerical_negation
generate_java_code
add_attribute("c", "A", "BOOLEAN")
bool_value (true)
add_attribute("BOOLEAN", "A", "BOOLEAN")
add_call_chain(<<INTEGER,C,B,d,c,B>>)
bool_value (true)
quotient
type_check
add_attribute("c", "B", "INTEGER")
numerical_negation
add_call_chain(<<C,a,d,b,d,a,C,C,b>>)
generate_java_code
logical_negation
numerical_negation
add_call_chain(<<D,BOOLEAN,e,C,e,a,D,b,B>>)
add_call_chain(<<B,B,D,a,c>>)
add_call_chain(<<A,A,e,b,e,b,B,INTEGER>>)
less_than
add_call_chain(<<INTEGER,A,INTEGER,c,d,C,D>>)
add_class(d)
bool_value (false)
less_than
bool_value (false)
