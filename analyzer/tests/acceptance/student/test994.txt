int_value (32)
quotient
add_call_chain(<<A,BOOLEAN,B,e,C,C,B,C>>)
add_attribute("e", "C", "BOOLEAN")
type_check
add_attribute("A", "a", "b")
type_check
add_class(BOOLEAN)
conjunction
conjunction
type_check
int_value (19)
bool_value (true)
add_command("C", "c", <<["A", "INTEGER"], ["b", "BOOLEAN"], ["c", "a"], ["INTEGER", "INTEGER"], ["A", "INTEGER"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["B", "D"]>>)
add_command("c", "BOOLEAN", <<["A", "d"], ["d", "INTEGER"], ["c", "BOOLEAN"], ["D", "BOOLEAN"]>>)
add_attribute("b", "a", "BOOLEAN")
add_call_chain(<<c,c,BOOLEAN>>)
equals
logical_negation
add_call_chain(<<b,D,B,b,c,b,B,d>>)
add_call_chain(<<c,b,c,b,D,B,C,B,C>>)
add_query("e", "BOOLEAN", <<["C", "INTEGER"], ["e", "BOOLEAN"], ["D", "INTEGER"]>>, "A")
add_command("d", "b", <<["c", "INTEGER"], ["A", "INTEGER"], ["D", "c"], ["D", "INTEGER"], ["e", "e"]>>)
disjunction
equals
int_value (29)
logical_negation
generate_java_code
greater_than
int_value (24)
add_call_chain(<<d,e,d,C,b>>)
bool_value (true)
add_command("C", "b", <<["C", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "A"], ["B", "B"], ["b", "INTEGER"], ["A", "BOOLEAN"]>>)
equals
int_value (20)
add_call_chain(<<INTEGER,a,d,D,B,C,c,d>>)
bool_value (true)
add_query("b", "C", <<["BOOLEAN", "INTEGER"], ["A", "BOOLEAN"], ["b", "INTEGER"], ["e", "INTEGER"], ["b", "BOOLEAN"]>>, "c")
bool_value (false)
type_check
bool_value (true)
bool_value (true)
multiplication
add_attribute("c", "a", "BOOLEAN")
disjunction
logical_negation
logical_negation
add_call_chain(<<c,d,D,B,D,C,INTEGER,c,B>>)
less_than
add_query("BOOLEAN", "D", <<["D", "BOOLEAN"]>>, "D")
bool_value (true)
add_attribute("b", "BOOLEAN", "BOOLEAN")
add_query("a", "D", <<["C", "BOOLEAN"], ["A", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "BOOLEAN"], ["b", "INTEGER"], ["INTEGER", "INTEGER"]>>, "c")
type_check
add_call_chain(<<B,D,a,A,d,c,D,D>>)
add_attribute("c", "INTEGER", "INTEGER")
logical_negation
add_query("D", "d", <<["B", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "B"], ["INTEGER", "BOOLEAN"], ["C", "INTEGER"], ["e", "B"]>>, "a")
add_class(e)
add_query("a", "e", <<["a", "BOOLEAN"], ["b", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "INTEGER"]>>, "d")
generate_java_code
add_call_chain(<<B,D,c,A,C,A,B,e,b>>)
type_check
int_value (25)
add_command("BOOLEAN", "C", <<["C", "INTEGER"], ["D", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["c", "BOOLEAN"], ["a", "INTEGER"], ["e", "INTEGER"]>>)
generate_java_code
addition
add_attribute("d", "e", "a")
add_query("C", "BOOLEAN", <<["BOOLEAN", "INTEGER"], ["B", "INTEGER"], ["INTEGER", "BOOLEAN"]>>, "b")
numerical_negation
add_command("b", "B", <<["c", "c"], ["a", "BOOLEAN"], ["C", "A"]>>)
add_attribute("B", "A", "BOOLEAN")
add_call_chain(<<C,A,A,c>>)
subtraction
logical_negation
bool_value (true)
int_value (23)
add_call_chain(<<INTEGER,BOOLEAN,a>>)
add_query("B", "D", <<["B", "BOOLEAN"], ["d", "C"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["c", "c"], ["a", "INTEGER"], ["a", "INTEGER"], ["B", "BOOLEAN"]>>, "BOOLEAN")
add_query("e", "e", <<["D", "b"], ["INTEGER", "d"], ["B", "INTEGER"], ["e", "BOOLEAN"]>>, "e")
add_class(D)
type_check
add_command("C", "c", <<["e", "B"], ["b", "INTEGER"], ["e", "BOOLEAN"], ["C", "e"], ["B", "D"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["e", "BOOLEAN"]>>)
add_query("A", "D", <<["C", "INTEGER"], ["a", "B"], ["INTEGER", "BOOLEAN"], ["a", "INTEGER"], ["d", "BOOLEAN"], ["a", "INTEGER"]>>, "B")
add_class(b)
add_call_chain(<<e>>)
add_command("c", "b", <<["c", "d"], ["C", "A"], ["D", "e"]>>)
generate_java_code
numerical_negation
greater_than
add_call_chain(<<c,A>>)
bool_value (false)
add_command("BOOLEAN", "C", <<["d", "BOOLEAN"]>>)
bool_value (false)
logical_negation
logical_negation
add_call_chain(<<B,c,b,BOOLEAN,BOOLEAN,c>>)
logical_negation
logical_negation
add_query("B", "A", <<["D", "d"], ["b", "c"], ["A", "C"], ["A", "B"], ["b", "BOOLEAN"], ["INTEGER", "A"], ["C", "INTEGER"], ["a", "BOOLEAN"]>>, "d")
add_query("D", "c", <<["b", "INTEGER"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["C", "BOOLEAN"], ["d", "BOOLEAN"], ["c", "e"], ["a", "BOOLEAN"]>>, "B")
logical_negation
add_call_chain(<<A,e,D,B,D,d,C>>)
add_call_chain(<<c,D,c>>)
add_attribute("b", "d", "INTEGER")
type_check
add_call_chain(<<C,C,D,c,d>>)
add_call_chain(<<b,C,B,B>>)
add_query("A", "A", <<["d", "INTEGER"], ["D", "INTEGER"], ["a", "c"], ["a", "C"], ["D", "b"], ["A", "C"]>>, "B")
add_attribute("a", "d", "BOOLEAN")
add_call_chain(<<c,A,D,a,B,C,A>>)
add_command("b", "d", <<["a", "INTEGER"], ["D", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "BOOLEAN"], ["INTEGER", "INTEGER"], ["C", "INTEGER"]>>)
add_call_chain(<<B,b,a,d>>)
equals
add_command("D", "A", <<["B", "BOOLEAN"], ["b", "INTEGER"], ["INTEGER", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "B"], ["B", "INTEGER"], ["D", "INTEGER"], ["A", "BOOLEAN"], ["a", "INTEGER"]>>)
type_check
add_call_chain(<<D,D,B,c>>)
add_command("A", "b", <<["c", "INTEGER"], ["C", "INTEGER"], ["B", "a"]>>)
disjunction
bool_value (false)
add_command("B", "d", <<["BOOLEAN", "INTEGER"], ["INTEGER", "BOOLEAN"], ["B", "INTEGER"], ["d", "BOOLEAN"], ["a", "BOOLEAN"]>>)
add_class(d)
generate_java_code
add_call_chain(<<d,C,D,D,a,C>>)
add_attribute("A", "C", "INTEGER")
add_class(e)
generate_java_code
type_check
numerical_negation
add_call_chain(<<D>>)
add_call_chain(<<a,D,b,C,BOOLEAN>>)
logical_negation
generate_java_code
greater_than
numerical_negation
add_query("BOOLEAN", "c", <<["C", "A"]>>, "INTEGER")
add_command("B", "b", <<["a", "c"], ["e", "C"], ["e", "INTEGER"], ["b", "INTEGER"], ["BOOLEAN", "INTEGER"], ["A", "D"]>>)
add_class(b)
add_attribute("C", "d", "INTEGER")
bool_value (true)
add_attribute("d", "INTEGER", "b")
add_command("C", "b", <<["A", "INTEGER"], ["a", "e"], ["A", "INTEGER"], ["A", "INTEGER"], ["d", "INTEGER"]>>)
add_call_chain(<<d,c,C,b,b>>)
bool_value (true)
add_class(B)
add_command("c", "d", <<["a", "INTEGER"]>>)
add_call_chain(<<B,d,e,b,A,A>>)
add_command("BOOLEAN", "B", <<["C", "BOOLEAN"], ["A", "A"], ["B", "INTEGER"]>>)
add_attribute("b", "BOOLEAN", "BOOLEAN")
numerical_negation
bool_value (true)
int_value (8)
add_call_chain(<<A,B,a,a,d,e,e>>)
add_query("e", "INTEGER", <<["e", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "INTEGER"], ["D", "INTEGER"], ["e", "BOOLEAN"]>>, "D")
add_attribute("D", "a", "INTEGER")
bool_value (true)
add_attribute("a", "BOOLEAN", "BOOLEAN")
subtraction
greater_than
add_query("b", "INTEGER", <<["e", "INTEGER"], ["A", "BOOLEAN"], ["c", "e"], ["BOOLEAN", "b"], ["INTEGER", "c"]>>, "B")
numerical_negation
add_attribute("B", "C", "BOOLEAN")
add_call_chain(<<d,c,a,D,A,D,B>>)
add_call_chain(<<e,d>>)
logical_negation
add_query("b", "A", <<["D", "a"]>>, "c")
bool_value (true)
generate_java_code
int_value (30)
add_query("B", "D", <<["a", "C"], ["d", "INTEGER"], ["a", "BOOLEAN"], ["a", "BOOLEAN"]>>, "a")
generate_java_code
numerical_negation
generate_java_code
add_command("B", "INTEGER", <<["D", "INTEGER"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["e", "a"], ["C", "INTEGER"]>>)
less_than
add_call_chain(<<a,e,B,INTEGER,A,c,B,c>>)
add_call_chain(<<D,d,A,a,d,d>>)
add_call_chain(<<A,A,D,A,e,INTEGER>>)
logical_negation
logical_negation
add_call_chain(<<A,e,b,C,b,b,D,BOOLEAN,C>>)
