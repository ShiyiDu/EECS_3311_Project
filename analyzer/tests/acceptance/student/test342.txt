generate_java_code
add_attribute("C", "b", "INTEGER")
add_query("C", "BOOLEAN", <<["BOOLEAN", "D"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["INTEGER", "D"], ["e", "INTEGER"], ["c", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "INTEGER"]>>, "A")
subtraction
logical_negation
add_command("d", "d", <<["c", "BOOLEAN"], ["b", "INTEGER"], ["d", "INTEGER"], ["B", "d"], ["C", "INTEGER"]>>)
add_call_chain(<<BOOLEAN,B,a,d,B,C>>)
disjunction
add_query("A", "b", <<["C", "BOOLEAN"], ["b", "a"], ["C", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "INTEGER"], ["D", "INTEGER"], ["C", "INTEGER"]>>, "B")
generate_java_code
add_query("e", "e", <<["c", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["A", "INTEGER"]>>, "e")
subtraction
int_value (23)
numerical_negation
add_call_chain(<<b,D>>)
add_command("BOOLEAN", "b", <<["D", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["c", "INTEGER"], ["B", "INTEGER"], ["C", "INTEGER"], ["BOOLEAN", "INTEGER"], ["b", "D"], ["A", "INTEGER"]>>)
add_call_chain(<<C,C,A,b,d,C,C,B>>)
int_value (16)
add_call_chain(<<e,b,BOOLEAN,D,c,b,A,A>>)
generate_java_code
add_class(b)
add_attribute("b", "c", "BOOLEAN")
generate_java_code
bool_value (true)
quotient
int_value (4)
add_query("a", "c", <<["c", "D"], ["c", "C"], ["d", "INTEGER"], ["e", "INTEGER"]>>, "c")
numerical_negation
add_call_chain(<<A,B,A,A,d,C,b,e>>)
int_value (45)
logical_negation
add_class(d)
add_call_chain(<<b,INTEGER,D,D,D,d>>)
add_query("b", "a", <<["b", "BOOLEAN"], ["b", "B"], ["C", "C"]>>, "e")
numerical_negation
add_query("e", "D", <<["e", "INTEGER"], ["INTEGER", "INTEGER"]>>, "C")
add_attribute("e", "C", "INTEGER")
type_check
add_command("B", "a", <<["A", "INTEGER"], ["A", "INTEGER"], ["e", "INTEGER"], ["e", "A"], ["C", "e"], ["B", "B"], ["a", "B"], ["b", "INTEGER"], ["e", "C"]>>)
numerical_negation
add_class(INTEGER)
add_call_chain(<<c,A,BOOLEAN,A>>)
add_attribute("B", "B", "INTEGER")
bool_value (true)
int_value (39)
quotient
conjunction
bool_value (false)
add_call_chain(<<B,b,C>>)
add_query("C", "c", <<["e", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "INTEGER"], ["B", "BOOLEAN"], ["B", "BOOLEAN"]>>, "a")
add_command("b", "b", <<["B", "a"], ["c", "D"], ["B", "c"], ["A", "INTEGER"], ["d", "C"], ["D", "C"], ["B", "B"]>>)
add_command("c", "B", <<["B", "D"], ["c", "INTEGER"], ["A", "BOOLEAN"], ["D", "INTEGER"]>>)
add_class(B)
add_attribute("INTEGER", "a", "BOOLEAN")
bool_value (false)
add_attribute("D", "a", "b")
add_class(D)
int_value (30)
add_attribute("a", "C", "BOOLEAN")
bool_value (false)
add_query("A", "A", <<["c", "BOOLEAN"], ["e", "BOOLEAN"], ["d", "INTEGER"], ["BOOLEAN", "INTEGER"], ["A", "c"]>>, "B")
add_attribute("C", "c", "BOOLEAN")
int_value (1)
add_call_chain(<<B,b,e,b,D,C,e,D>>)
type_check
logical_negation
bool_value (false)
numerical_negation
int_value (42)
type_check
add_attribute("INTEGER", "a", "BOOLEAN")
logical_negation
conjunction
add_attribute("A", "B", "BOOLEAN")
add_attribute("c", "C", "b")
add_attribute("e", "D", "BOOLEAN")
generate_java_code
disjunction
bool_value (true)
type_check
bool_value (true)
logical_negation
add_command("C", "c", <<["A", "a"]>>)
add_command("B", "BOOLEAN", <<["C", "C"], ["A", "D"]>>)
add_command("INTEGER", "a", <<["A", "d"], ["b", "BOOLEAN"], ["c", "INTEGER"], ["c", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "C"], ["BOOLEAN", "BOOLEAN"], ["B", "BOOLEAN"]>>)
add_call_chain(<<C,BOOLEAN,c,C,c,B,B,d,e>>)
numerical_negation
add_class(c)
int_value (38)
add_attribute("C", "INTEGER", "C")
add_class(b)
add_attribute("A", "A", "INTEGER")
bool_value (false)
add_call_chain(<<C,INTEGER,d>>)
int_value (10)
add_query("a", "a", <<["B", "b"], ["d", "b"], ["e", "B"]>>, "a")
add_query("c", "BOOLEAN", <<["a", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "BOOLEAN"]>>, "D")
numerical_negation
numerical_negation
disjunction
bool_value (true)
add_class(D)
add_call_chain(<<INTEGER,C>>)
add_call_chain(<<c,D,C,a,c>>)
int_value (26)
subtraction
type_check
int_value (3)
conjunction
numerical_negation
int_value (33)
add_attribute("C", "a", "D")
generate_java_code
equals
int_value (17)
add_call_chain(<<a,INTEGER,C,c,a,D>>)
int_value (4)
add_command("A", "c", <<["a", "INTEGER"], ["B", "INTEGER"], ["b", "D"], ["D", "INTEGER"]>>)
add_command("D", "C", <<["B", "BOOLEAN"], ["a", "BOOLEAN"]>>)
add_query("e", "B", <<["b", "INTEGER"]>>, "a")
add_command("e", "e", <<["D", "B"], ["INTEGER", "INTEGER"], ["c", "BOOLEAN"], ["A", "INTEGER"], ["A", "INTEGER"], ["a", "INTEGER"]>>)
add_attribute("B", "BOOLEAN", "INTEGER")
logical_negation
add_attribute("C", "A", "BOOLEAN")
generate_java_code
add_attribute("A", "e", "BOOLEAN")
type_check
generate_java_code
bool_value (false)
add_command("D", "A", <<["e", "INTEGER"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["c", "INTEGER"], ["d", "BOOLEAN"], ["INTEGER", "INTEGER"], ["b", "INTEGER"], ["a", "BOOLEAN"], ["a", "BOOLEAN"]>>)
add_attribute("A", "INTEGER", "INTEGER")
logical_negation
add_call_chain(<<C,B,B,a,d,A,A,a,INTEGER>>)
type_check
type_check
generate_java_code
add_attribute("D", "c", "a")
logical_negation
add_class(A)
numerical_negation
add_call_chain(<<B,C,C>>)
equals
int_value (19)
add_attribute("B", "A", "BOOLEAN")
modulo
add_call_chain(<<C,C,C>>)
bool_value (true)
add_command("c", "B", <<["B", "INTEGER"]>>)
add_call_chain(<<B,D,A,D,b,a,b,INTEGER>>)
int_value (36)
add_query("D", "c", <<["B", "INTEGER"], ["a", "BOOLEAN"]>>, "A")
type_check
generate_java_code
add_command("b", "c", <<["A", "b"], ["BOOLEAN", "BOOLEAN"], ["d", "INTEGER"], ["c", "BOOLEAN"], ["d", "C"], ["e", "BOOLEAN"], ["a", "BOOLEAN"]>>)
type_check
generate_java_code
add_class(B)
add_query("b", "D", <<["INTEGER", "C"], ["c", "a"], ["b", "BOOLEAN"], ["d", "INTEGER"], ["A", "BOOLEAN"], ["e", "INTEGER"], ["B", "INTEGER"]>>, "B")
bool_value (false)
type_check
int_value (12)
equals
add_attribute("C", "d", "INTEGER")
bool_value (false)
logical_negation
subtraction
int_value (5)
logical_negation
add_attribute("B", "B", "a")
conjunction
bool_value (false)
bool_value (false)
multiplication
add_call_chain(<<B,c,B,b,C,e,INTEGER,C,e>>)
add_query("d", "A", <<["a", "BOOLEAN"], ["e", "INTEGER"], ["b", "d"], ["B", "INTEGER"], ["BOOLEAN", "INTEGER"]>>, "C")
int_value (22)
add_attribute("b", "d", "INTEGER")
int_value (47)
add_attribute("d", "A", "BOOLEAN")
add_query("D", "a", <<["D", "C"], ["D", "INTEGER"], ["INTEGER", "INTEGER"], ["c", "D"], ["e", "c"], ["e", "C"], ["a", "BOOLEAN"]>>, "d")
add_command("a", "A", <<["c", "B"], ["d", "INTEGER"], ["c", "INTEGER"], ["c", "BOOLEAN"], ["c", "b"]>>)
add_attribute("INTEGER", "e", "BOOLEAN")
bool_value (false)
numerical_negation
numerical_negation
int_value (48)
add_call_chain(<<BOOLEAN,BOOLEAN,c,e,b,A,D,c,A>>)
conjunction
add_attribute("C", "C", "BOOLEAN")
int_value (12)
add_command("d", "A", <<["C", "BOOLEAN"], ["c", "INTEGER"], ["D", "INTEGER"], ["b", "BOOLEAN"], ["A", "e"], ["C", "INTEGER"], ["a", "INTEGER"], ["C", "INTEGER"]>>)
type_check
add_query("d", "b", <<["a", "BOOLEAN"], ["A", "INTEGER"], ["c", "BOOLEAN"]>>, "D")
add_class(c)
add_call_chain(<<e,C,INTEGER,c,b,c,a>>)
numerical_negation
multiplication
add_query("B", "BOOLEAN", <<["b", "BOOLEAN"], ["INTEGER", "e"], ["A", "BOOLEAN"], ["e", "B"], ["d", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "BOOLEAN"], ["b", "B"]>>, "D")
add_query("e", "d", <<["a", "B"], ["B", "INTEGER"], ["b", "INTEGER"], ["BOOLEAN", "b"], ["C", "BOOLEAN"], ["B", "d"], ["e", "INTEGER"]>>, "b")
add_attribute("e", "b", "BOOLEAN")
add_attribute("A", "c", "BOOLEAN")
add_query("a", "D", <<["A", "INTEGER"], ["INTEGER", "INTEGER"], ["a", "INTEGER"], ["D", "BOOLEAN"], ["e", "INTEGER"]>>, "c")
add_query("D", "e", <<["a", "d"], ["d", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["e", "BOOLEAN"], ["d", "BOOLEAN"], ["INTEGER", "d"], ["e", "BOOLEAN"], ["e", "BOOLEAN"]>>, "BOOLEAN")
add_command("BOOLEAN", "A", <<["D", "INTEGER"], ["D", "INTEGER"], ["a", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "INTEGER"], ["B", "INTEGER"], ["d", "A"]>>)
numerical_negation
modulo
less_than
add_command("A", "b", <<["A", "BOOLEAN"], ["d", "BOOLEAN"]>>)
multiplication
int_value (17)
add_class(INTEGER)
int_value (18)
logical_negation
add_call_chain(<<a>>)
generate_java_code
add_class(d)
int_value (28)
bool_value (true)
add_call_chain(<<BOOLEAN,b,D,INTEGER,d,e,C,C,BOOLEAN>>)
add_query("BOOLEAN", "d", <<["c", "C"], ["BOOLEAN", "INTEGER"], ["C", "INTEGER"], ["d", "BOOLEAN"], ["C", "a"]>>, "B")
add_call_chain(<<B,D>>)
logical_negation
add_command("B", "c", <<["C", "INTEGER"], ["D", "INTEGER"], ["A", "a"], ["c", "e"]>>)
add_call_chain(<<d,e,INTEGER,d,INTEGER,b,c,c,D>>)
add_query("d", "BOOLEAN", <<["INTEGER", "c"], ["a", "b"], ["D", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "INTEGER"], ["a", "BOOLEAN"], ["BOOLEAN", "a"], ["b", "D"], ["B", "BOOLEAN"]>>, "BOOLEAN")
add_attribute("e", "A", "BOOLEAN")
add_attribute("c", "e", "B")
add_attribute("B", "c", "a")
add_attribute("D", "A", "INTEGER")
add_query("a", "a", <<["c", "BOOLEAN"], ["C", "BOOLEAN"], ["BOOLEAN", "A"], ["c", "d"]>>, "B")
logical_negation
add_call_chain(<<e,BOOLEAN>>)
bool_value (false)
add_attribute("a", "e", "BOOLEAN")
logical_negation
add_attribute("C", "d", "INTEGER")
generate_java_code
greater_than
