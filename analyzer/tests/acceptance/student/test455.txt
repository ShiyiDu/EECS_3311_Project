add_command("INTEGER", "a", <<["BOOLEAN", "INTEGER"]>>)
disjunction
int_value (43)
add_query("A", "INTEGER", <<["B", "C"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["d", "INTEGER"], ["D", "e"]>>, "C")
greater_than
add_query("B", "d", <<["b", "BOOLEAN"], ["b", "INTEGER"], ["e", "d"], ["e", "INTEGER"]>>, "D")
add_call_chain(<<C,A>>)
add_call_chain(<<a,C,INTEGER,b,d,INTEGER,D,INTEGER,C>>)
logical_negation
modulo
add_call_chain(<<A,B,c,B,INTEGER>>)
add_attribute("B", "b", "BOOLEAN")
add_command("A", "e", <<["B", "INTEGER"], ["B", "BOOLEAN"]>>)
add_call_chain(<<b,e,C,B,INTEGER,b,c,d>>)
add_call_chain(<<c,A,a,c,a,D,B,A,A>>)
bool_value (false)
add_command("A", "D", <<["d", "BOOLEAN"], ["e", "d"], ["b", "BOOLEAN"], ["c", "b"], ["C", "INTEGER"], ["d", "C"], ["C", "INTEGER"], ["c", "d"]>>)
add_attribute("C", "C", "INTEGER")
type_check
add_attribute("D", "d", "b")
logical_negation
add_attribute("INTEGER", "B", "INTEGER")
numerical_negation
add_attribute("c", "a", "INTEGER")
generate_java_code
bool_value (false)
add_attribute("D", "A", "c")
conjunction
add_call_chain(<<b,A,B,c,d,b,B>>)
greater_than
add_command("d", "e", <<["D", "INTEGER"], ["BOOLEAN", "INTEGER"], ["a", "INTEGER"], ["b", "INTEGER"], ["e", "INTEGER"]>>)
type_check
generate_java_code
multiplication
type_check
add_call_chain(<<b,e,a,INTEGER,D,B>>)
add_command("a", "C", <<["c", "INTEGER"], ["b", "D"], ["C", "b"], ["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "INTEGER"]>>)
add_query("D", "a", <<["A", "BOOLEAN"], ["b", "INTEGER"], ["e", "C"], ["C", "INTEGER"], ["C", "b"], ["INTEGER", "BOOLEAN"]>>, "c")
type_check
add_call_chain(<<b,d,a,b,C,C>>)
generate_java_code
add_command("e", "b", <<["C", "INTEGER"], ["a", "BOOLEAN"], ["e", "INTEGER"], ["d", "BOOLEAN"], ["D", "INTEGER"], ["d", "INTEGER"]>>)
numerical_negation
addition
add_attribute("d", "D", "INTEGER")
add_attribute("D", "C", "INTEGER")
add_class(B)
add_command("a", "C", <<["d", "INTEGER"], ["INTEGER", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["b", "INTEGER"], ["a", "INTEGER"], ["BOOLEAN", "INTEGER"]>>)
add_attribute("a", "C", "e")
add_call_chain(<<D,a,e,a,D,BOOLEAN,C>>)
add_attribute("b", "a", "BOOLEAN")
add_class(a)
add_call_chain(<<d,D,C,D,e,b,B,INTEGER,a>>)
modulo
subtraction
logical_negation
bool_value (true)
int_value (26)
add_query("D", "A", <<["b", "INTEGER"]>>, "B")
add_query("D", "B", <<["INTEGER", "INTEGER"], ["a", "INTEGER"], ["D", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>, "B")
int_value (34)
equals
bool_value (true)
add_attribute("A", "BOOLEAN", "e")
add_command("D", "C", <<["C", "BOOLEAN"]>>)
add_call_chain(<<BOOLEAN,B,D,B,B,C,c,D,D>>)
add_command("a", "e", <<["e", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "D"], ["INTEGER", "INTEGER"]>>)
conjunction
disjunction
add_class(b)
add_query("D", "a", <<["c", "BOOLEAN"], ["c", "b"], ["D", "d"], ["a", "C"], ["D", "BOOLEAN"], ["a", "c"], ["B", "INTEGER"], ["A", "INTEGER"], ["c", "INTEGER"]>>, "a")
add_command("D", "d", <<["C", "INTEGER"], ["b", "BOOLEAN"], ["a", "INTEGER"]>>)
add_attribute("a", "a", "BOOLEAN")
bool_value (true)
bool_value (true)
numerical_negation
add_call_chain(<<D,a,c,a,a,D>>)
add_command("C", "INTEGER", <<["b", "INTEGER"], ["A", "INTEGER"], ["C", "INTEGER"]>>)
bool_value (false)
add_attribute("c", "A", "BOOLEAN")
generate_java_code
add_query("D", "b", <<["b", "INTEGER"], ["a", "b"], ["e", "BOOLEAN"]>>, "INTEGER")
add_query("e", "a", <<["e", "BOOLEAN"], ["D", "INTEGER"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "INTEGER"]>>, "INTEGER")
numerical_negation
add_query("a", "B", <<["C", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["c", "BOOLEAN"], ["b", "INTEGER"], ["e", "BOOLEAN"]>>, "A")
add_command("INTEGER", "A", <<["c", "e"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["B", "INTEGER"], ["B", "D"], ["C", "BOOLEAN"]>>)
conjunction
bool_value (true)
logical_negation
modulo
add_class(a)
type_check
int_value (10)
bool_value (false)
add_call_chain(<<BOOLEAN,A,e,D,a,b,B,e,c>>)
logical_negation
int_value (30)
add_call_chain(<<B>>)
logical_negation
add_call_chain(<<a,c,B,BOOLEAN,C,b,A,b>>)
add_attribute("C", "C", "BOOLEAN")
add_class(A)
generate_java_code
add_query("d", "c", <<["BOOLEAN", "INTEGER"]>>, "C")
logical_negation
add_class(C)
generate_java_code
numerical_negation
add_call_chain(<<d,c,d,C,a,C,BOOLEAN,e>>)
add_command("D", "b", <<["b", "INTEGER"]>>)
add_call_chain(<<INTEGER,c,d,d,D,b,A>>)
logical_negation
bool_value (true)
numerical_negation
add_command("D", "b", <<["d", "INTEGER"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["c", "INTEGER"], ["B", "INTEGER"]>>)
bool_value (false)
bool_value (true)
add_call_chain(<<A,INTEGER,BOOLEAN,b,b,A,B,BOOLEAN>>)
add_query("d", "C", <<["b", "BOOLEAN"], ["C", "INTEGER"]>>, "INTEGER")
numerical_negation
numerical_negation
equals
bool_value (false)
add_attribute("a", "C", "INTEGER")
bool_value (false)
bool_value (true)
multiplication
equals
modulo
add_command("e", "b", <<["c", "D"], ["a", "d"], ["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "BOOLEAN"]>>)
add_query("C", "D", <<["a", "INTEGER"], ["B", "INTEGER"]>>, "A")
add_class(B)
subtraction
generate_java_code
type_check
add_call_chain(<<BOOLEAN,d,e,e,b,c,e>>)
int_value (19)
add_class(C)
add_command("B", "C", <<["a", "BOOLEAN"], ["e", "INTEGER"], ["b", "B"], ["B", "INTEGER"], ["INTEGER", "BOOLEAN"], ["b", "A"], ["d", "C"]>>)
int_value (1)
add_attribute("A", "e", "B")
add_command("B", "C", <<["D", "INTEGER"], ["b", "C"], ["D", "BOOLEAN"]>>)
type_check
add_query("BOOLEAN", "a", <<["c", "INTEGER"], ["a", "D"], ["b", "INTEGER"]>>, "C")
add_call_chain(<<D,c,d,a,D,d,BOOLEAN>>)
numerical_negation
int_value (41)
bool_value (false)
logical_negation
bool_value (true)
add_query("B", "a", <<["c", "BOOLEAN"], ["d", "INTEGER"], ["e", "D"]>>, "d")
numerical_negation
logical_negation
generate_java_code
add_command("a", "c", <<["A", "BOOLEAN"], ["e", "BOOLEAN"], ["d", "e"]>>)
generate_java_code
add_attribute("e", "d", "C")
logical_negation
add_query("BOOLEAN", "c", <<["a", "C"], ["C", "B"], ["B", "INTEGER"], ["D", "INTEGER"], ["d", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["e", "BOOLEAN"]>>, "d")
add_call_chain(<<C,a,e,e,C,a,C>>)
generate_java_code
bool_value (true)
numerical_negation
add_class(c)
bool_value (true)
type_check
add_command("D", "a", <<["D", "INTEGER"], ["A", "BOOLEAN"], ["INTEGER", "INTEGER"], ["INTEGER", "c"], ["BOOLEAN", "INTEGER"], ["D", "BOOLEAN"], ["a", "e"], ["c", "INTEGER"], ["c", "BOOLEAN"]>>)
add_command("B", "B", <<["a", "INTEGER"], ["d", "D"], ["INTEGER", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "a"], ["e", "BOOLEAN"]>>)
add_call_chain(<<A,A,d,a,b>>)
equals
logical_negation
subtraction
add_class(C)
int_value (47)
bool_value (false)
bool_value (true)
less_than
generate_java_code
add_attribute("c", "D", "INTEGER")
quotient
bool_value (true)
logical_negation
generate_java_code
numerical_negation
add_class(INTEGER)
add_query("D", "A", <<["a", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "a"], ["A", "INTEGER"]>>, "C")
add_attribute("D", "C", "INTEGER")
add_call_chain(<<A,a,a,A>>)
add_attribute("D", "c", "c")
add_call_chain(<<B,C,B,e,C,A,A>>)
add_call_chain(<<A,e,e,c,C,D,c>>)
type_check
int_value (33)
greater_than
int_value (31)
add_call_chain(<<C,C,a,d,C,B,D,A,a>>)
add_attribute("D", "e", "INTEGER")
numerical_negation
numerical_negation
add_command("C", "INTEGER", <<["BOOLEAN", "d"], ["d", "INTEGER"], ["d", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "a"], ["C", "BOOLEAN"]>>)
int_value (44)
add_call_chain(<<a,C>>)
int_value (3)
numerical_negation
int_value (44)
int_value (34)
generate_java_code
logical_negation
quotient
numerical_negation
numerical_negation
add_command("C", "e", <<["D", "a"], ["BOOLEAN", "INTEGER"], ["A", "BOOLEAN"], ["D", "INTEGER"], ["e", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["a", "BOOLEAN"]>>)
add_attribute("D", "e", "BOOLEAN")
add_class(B)
add_call_chain(<<D,A,B,D>>)
add_query("D", "B", <<["B", "INTEGER"], ["b", "C"], ["A", "b"], ["B", "A"], ["a", "D"], ["a", "A"], ["D", "BOOLEAN"], ["e", "BOOLEAN"]>>, "D")
add_query("A", "A", <<["B", "C"], ["INTEGER", "b"], ["b", "B"], ["BOOLEAN", "INTEGER"], ["e", "c"]>>, "C")
add_call_chain(<<a,D>>)
add_command("C", "D", <<["c", "INTEGER"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["BOOLEAN", "A"], ["d", "BOOLEAN"], ["INTEGER", "INTEGER"], ["d", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["D", "C"]>>)
add_attribute("c", "B", "INTEGER")
add_class(A)
numerical_negation
generate_java_code
conjunction
multiplication
add_call_chain(<<A,B,C,C,B,D,B,D,c>>)
numerical_negation
add_call_chain(<<D,D,c,C,BOOLEAN,d,A>>)
bool_value (true)
add_class(b)
bool_value (false)
add_call_chain(<<b,d,e>>)
add_command("e", "c", <<["a", "BOOLEAN"], ["C", "INTEGER"], ["A", "b"]>>)
generate_java_code
add_command("B", "INTEGER", <<["B", "INTEGER"], ["A", "INTEGER"], ["D", "INTEGER"], ["d", "INTEGER"], ["a", "BOOLEAN"], ["d", "c"], ["b", "B"], ["A", "BOOLEAN"]>>)
add_query("c", "D", <<["d", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["D", "D"], ["c", "BOOLEAN"]>>, "b")
generate_java_code
bool_value (true)
