type_check
add_query("B", "d", <<["INTEGER", "BOOLEAN"], ["D", "b"], ["A", "INTEGER"], ["BOOLEAN", "INTEGER"], ["B", "INTEGER"]>>, "a")
add_query("A", "d", <<["b", "INTEGER"], ["d", "B"], ["D", "INTEGER"], ["a", "INTEGER"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["C", "C"], ["B", "BOOLEAN"]>>, "a")
bool_value (true)
disjunction
subtraction
numerical_negation
add_query("C", "b", <<["B", "BOOLEAN"], ["a", "INTEGER"], ["D", "BOOLEAN"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["b", "INTEGER"], ["C", "BOOLEAN"]>>, "B")
add_attribute("D", "B", "INTEGER")
add_class(c)
bool_value (true)
add_call_chain(<<b,B,a,c,D,C,e>>)
add_query("C", "d", <<["b", "C"], ["A", "e"]>>, "e")
int_value (6)
add_command("c", "B", <<["A", "D"], ["c", "BOOLEAN"], ["b", "INTEGER"], ["D", "INTEGER"], ["c", "D"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "A"]>>)
int_value (13)
disjunction
less_than
add_call_chain(<<A,a,A,c>>)
add_attribute("B", "D", "d")
add_query("d", "A", <<["C", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "INTEGER"], ["BOOLEAN", "D"]>>, "B")
add_call_chain(<<INTEGER,C,A>>)
int_value (7)
add_call_chain(<<A,b,d,BOOLEAN,A>>)
modulo
logical_negation
int_value (24)
type_check
numerical_negation
add_command("C", "b", <<["A", "INTEGER"], ["B", "INTEGER"], ["c", "BOOLEAN"], ["D", "INTEGER"], ["c", "BOOLEAN"], ["b", "INTEGER"], ["C", "b"]>>)
add_attribute("B", "e", "INTEGER")
add_command("C", "C", <<["A", "BOOLEAN"], ["D", "BOOLEAN"], ["a", "c"], ["B", "e"], ["d", "D"], ["e", "c"], ["c", "INTEGER"]>>)
int_value (41)
add_attribute("D", "BOOLEAN", "BOOLEAN")
add_attribute("C", "e", "d")
numerical_negation
type_check
type_check
add_call_chain(<<a>>)
add_command("c", "b", <<["INTEGER", "INTEGER"], ["b", "INTEGER"], ["B", "INTEGER"], ["d", "BOOLEAN"], ["A", "INTEGER"], ["D", "INTEGER"]>>)
less_than
int_value (34)
add_call_chain(<<A,B,d,C,e,a>>)
add_call_chain(<<D,c,C>>)
add_command("c", "c", <<["B", "B"], ["B", "C"], ["a", "B"], ["B", "A"], ["INTEGER", "INTEGER"], ["C", "BOOLEAN"], ["b", "D"], ["a", "BOOLEAN"]>>)
add_query("e", "d", <<["D", "d"], ["INTEGER", "c"], ["e", "BOOLEAN"], ["e", "INTEGER"], ["D", "INTEGER"], ["D", "INTEGER"], ["BOOLEAN", "D"], ["INTEGER", "BOOLEAN"], ["b", "INTEGER"]>>, "B")
add_attribute("c", "d", "INTEGER")
add_class(B)
add_call_chain(<<A,D,B,b,d,c>>)
disjunction
add_command("d", "B", <<["A", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["B", "a"], ["c", "BOOLEAN"], ["c", "b"], ["d", "BOOLEAN"]>>)
add_call_chain(<<A,C,A,e,d,B,B>>)
logical_negation
add_query("B", "BOOLEAN", <<["B", "INTEGER"], ["D", "INTEGER"], ["D", "D"], ["C", "INTEGER"], ["a", "BOOLEAN"], ["c", "e"], ["A", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "BOOLEAN"]>>, "a")
logical_negation
add_query("c", "B", <<["e", "BOOLEAN"], ["d", "BOOLEAN"], ["d", "BOOLEAN"]>>, "e")
type_check
add_attribute("c", "INTEGER", "D")
logical_negation
add_call_chain(<<b,BOOLEAN,b,D,INTEGER,A,BOOLEAN,C>>)
add_attribute("a", "INTEGER", "BOOLEAN")
logical_negation
logical_negation
add_call_chain(<<D,B,INTEGER,e,b,A,D,D>>)
add_call_chain(<<INTEGER>>)
add_query("a", "INTEGER", <<["a", "BOOLEAN"]>>, "INTEGER")
quotient
add_call_chain(<<D>>)
less_than
int_value (24)
add_call_chain(<<b,BOOLEAN,B,d,D,A>>)
add_call_chain(<<B,A,c,a,D,e>>)
less_than
bool_value (true)
logical_negation
type_check
generate_java_code
add_attribute("A", "D", "BOOLEAN")
bool_value (true)
add_query("c", "c", <<["d", "C"], ["A", "INTEGER"], ["a", "A"], ["A", "BOOLEAN"], ["d", "e"]>>, "c")
add_command("b", "INTEGER", <<["b", "INTEGER"], ["c", "BOOLEAN"], ["D", "A"], ["B", "e"], ["e", "C"], ["c", "INTEGER"]>>)
type_check
add_call_chain(<<b,c,B,A>>)
add_query("C", "C", <<["INTEGER", "c"], ["A", "INTEGER"], ["e", "C"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["c", "INTEGER"], ["C", "BOOLEAN"], ["B", "INTEGER"], ["A", "INTEGER"]>>, "C")
numerical_negation
int_value (21)
type_check
numerical_negation
generate_java_code
add_call_chain(<<a,e,d,B,c,D>>)
add_class(c)
add_query("D", "INTEGER", <<["C", "B"], ["B", "BOOLEAN"], ["a", "D"], ["e", "INTEGER"]>>, "B")
disjunction
add_command("D", "BOOLEAN", <<["a", "INTEGER"], ["c", "BOOLEAN"], ["a", "INTEGER"]>>)
add_command("c", "INTEGER", <<["b", "INTEGER"]>>)
disjunction
conjunction
int_value (9)
bool_value (true)
add_call_chain(<<D,e,c,C>>)
add_command("A", "c", <<["C", "c"], ["c", "B"]>>)
add_command("a", "D", <<["e", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "BOOLEAN"], ["e", "d"], ["A", "BOOLEAN"], ["c", "C"]>>)
add_class(b)
add_call_chain(<<e>>)
add_call_chain(<<C,a,c,b,a,c>>)
add_command("A", "b", <<["a", "INTEGER"], ["e", "D"], ["C", "INTEGER"]>>)
add_call_chain(<<B>>)
bool_value (false)
add_class(c)
add_query("b", "BOOLEAN", <<["a", "INTEGER"], ["A", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "INTEGER"], ["e", "d"], ["A", "e"], ["a", "B"], ["C", "C"], ["D", "INTEGER"]>>, "D")
int_value (35)
int_value (15)
logical_negation
generate_java_code
add_command("c", "C", <<["b", "INTEGER"], ["b", "INTEGER"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["A", "c"]>>)
subtraction
add_command("B", "BOOLEAN", <<["d", "A"], ["C", "BOOLEAN"], ["d", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["INTEGER", "INTEGER"]>>)
add_attribute("C", "d", "BOOLEAN")
add_class(a)
subtraction
logical_negation
numerical_negation
type_check
add_query("D", "c", <<["A", "INTEGER"], ["INTEGER", "e"], ["c", "INTEGER"], ["C", "INTEGER"]>>, "a")
modulo
less_than
int_value (36)
logical_negation
subtraction
add_attribute("C", "A", "INTEGER")
add_attribute("b", "D", "INTEGER")
add_class(BOOLEAN)
add_attribute("b", "B", "BOOLEAN")
add_command("d", "a", <<["A", "A"], ["d", "BOOLEAN"]>>)
bool_value (false)
add_call_chain(<<b,d,C>>)
bool_value (false)
add_call_chain(<<C,D,BOOLEAN,D,b,C,INTEGER,D>>)
int_value (10)
logical_negation
add_query("b", "INTEGER", <<["b", "INTEGER"], ["D", "BOOLEAN"], ["b", "INTEGER"], ["e", "A"], ["INTEGER", "BOOLEAN"], ["D", "INTEGER"], ["D", "d"], ["A", "INTEGER"], ["A", "INTEGER"]>>, "a")
add_query("D", "e", <<["A", "INTEGER"]>>, "b")
numerical_negation
add_query("A", "e", <<["e", "BOOLEAN"], ["B", "e"], ["INTEGER", "INTEGER"], ["A", "D"], ["b", "D"]>>, "D")
generate_java_code
bool_value (true)
type_check
bool_value (true)
int_value (17)
numerical_negation
logical_negation
add_command("BOOLEAN", "A", <<["D", "INTEGER"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["c", "d"], ["e", "a"]>>)
add_command("d", "c", <<["B", "c"]>>)
add_class(B)
add_call_chain(<<A,A,INTEGER,B,b,D,D,d,INTEGER>>)
add_command("C", "a", <<["C", "BOOLEAN"], ["c", "C"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["d", "b"], ["D", "INTEGER"], ["d", "INTEGER"], ["D", "BOOLEAN"]>>)
multiplication
numerical_negation
bool_value (false)
add_query("B", "a", <<["b", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "A"], ["INTEGER", "BOOLEAN"], ["INTEGER", "a"], ["A", "INTEGER"], ["d", "INTEGER"], ["b", "BOOLEAN"]>>, "C")
equals
bool_value (false)
add_attribute("D", "BOOLEAN", "BOOLEAN")
bool_value (false)
generate_java_code
generate_java_code
add_command("A", "a", <<["A", "INTEGER"], ["A", "INTEGER"], ["a", "INTEGER"], ["D", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "D"]>>)
type_check
bool_value (false)
less_than
add_attribute("C", "b", "e")
add_call_chain(<<c,d,b,B,b,A,A,BOOLEAN>>)
add_call_chain(<<A>>)
numerical_negation
add_call_chain(<<b,e,b,INTEGER,B,BOOLEAN,a,B>>)
add_query("b", "e", <<["c", "d"], ["b", "D"], ["A", "b"], ["d", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "BOOLEAN"]>>, "C")
add_call_chain(<<b,c,D,A,B>>)
add_call_chain(<<B,A,d,BOOLEAN,c,BOOLEAN,b,A>>)
add_call_chain(<<e>>)
add_command("C", "b", <<["D", "INTEGER"], ["c", "BOOLEAN"]>>)
int_value (37)
numerical_negation
add_attribute("D", "a", "d")
generate_java_code
logical_negation
disjunction
type_check
add_query("d", "A", <<["c", "BOOLEAN"], ["B", "INTEGER"], ["e", "INTEGER"]>>, "d")
disjunction
add_attribute("C", "e", "INTEGER")
add_class(INTEGER)
type_check
add_query("a", "d", <<["INTEGER", "INTEGER"], ["c", "BOOLEAN"], ["c", "INTEGER"], ["C", "d"], ["e", "BOOLEAN"]>>, "A")
conjunction
int_value (19)
int_value (2)
