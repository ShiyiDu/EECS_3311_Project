logical_negation
add_class(C)
multiplication
greater_than
add_command("INTEGER", "D", <<["D", "INTEGER"], ["c", "BOOLEAN"], ["a", "D"]>>)
add_call_chain(<<A,a,c,b,A,INTEGER,c,a,D>>)
add_call_chain(<<d,c,a,d,B,d>>)
numerical_negation
add_class(A)
add_attribute("BOOLEAN", "B", "BOOLEAN")
add_call_chain(<<BOOLEAN,b,a,b,c,C,INTEGER,B>>)
add_call_chain(<<B,e,B,b,INTEGER>>)
greater_than
less_than
generate_java_code
greater_than
int_value (27)
add_command("INTEGER", "e", <<["a", "D"], ["B", "B"], ["B", "BOOLEAN"], ["b", "a"], ["A", "BOOLEAN"]>>)
type_check
add_command("B", "A", <<["INTEGER", "A"], ["c", "BOOLEAN"], ["B", "A"], ["BOOLEAN", "INTEGER"], ["B", "A"]>>)
bool_value (false)
add_call_chain(<<D,D,B>>)
add_command("b", "INTEGER", <<["b", "c"], ["A", "BOOLEAN"], ["INTEGER", "B"], ["a", "INTEGER"], ["D", "BOOLEAN"], ["b", "B"], ["e", "INTEGER"]>>)
add_class(a)
add_call_chain(<<C,BOOLEAN,e,e,A,C,D>>)
int_value (46)
greater_than
numerical_negation
add_query("A", "e", <<["c", "INTEGER"], ["B", "INTEGER"], ["INTEGER", "b"]>>, "a")
numerical_negation
add_call_chain(<<BOOLEAN,d,c,e,INTEGER,e,a>>)
bool_value (false)
int_value (26)
add_command("a", "C", <<["e", "INTEGER"], ["BOOLEAN", "D"], ["d", "INTEGER"]>>)
add_query("e", "D", <<["D", "BOOLEAN"]>>, "e")
disjunction
add_query("e", "BOOLEAN", <<["d", "C"], ["A", "a"], ["e", "INTEGER"], ["B", "INTEGER"], ["d", "BOOLEAN"]>>, "A")
numerical_negation
add_command("B", "C", <<["A", "B"], ["A", "INTEGER"], ["A", "INTEGER"], ["INTEGER", "B"]>>)
bool_value (false)
int_value (27)
int_value (23)
multiplication
add_query("d", "BOOLEAN", <<["a", "BOOLEAN"], ["B", "INTEGER"]>>, "A")
add_query("B", "c", <<["b", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "B"], ["a", "BOOLEAN"], ["C", "INTEGER"]>>, "D")
add_call_chain(<<C,d,C>>)
numerical_negation
greater_than
multiplication
add_call_chain(<<d,a,C,b,c>>)
add_attribute("D", "A", "D")
add_attribute("a", "C", "INTEGER")
add_call_chain(<<A,INTEGER,e,B,D,INTEGER,b,b,b>>)
add_class(C)
add_class(D)
generate_java_code
int_value (15)
add_call_chain(<<BOOLEAN,B,c,e,C,d>>)
generate_java_code
int_value (7)
int_value (48)
generate_java_code
int_value (33)
bool_value (false)
add_command("c", "C", <<["b", "INTEGER"], ["C", "B"], ["C", "d"], ["D", "INTEGER"], ["INTEGER", "INTEGER"], ["d", "BOOLEAN"], ["D", "e"], ["e", "BOOLEAN"]>>)
int_value (37)
add_query("d", "A", <<["a", "C"], ["INTEGER", "INTEGER"], ["B", "BOOLEAN"]>>, "c")
add_command("INTEGER", "B", <<["C", "INTEGER"], ["a", "c"]>>)
int_value (4)
multiplication
add_query("d", "D", <<["d", "INTEGER"], ["INTEGER", "BOOLEAN"], ["C", "C"]>>, "D")
equals
int_value (35)
bool_value (true)
type_check
modulo
disjunction
multiplication
int_value (47)
add_query("b", "a", <<["B", "BOOLEAN"], ["BOOLEAN", "d"], ["A", "c"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["B", "INTEGER"], ["A", "BOOLEAN"]>>, "b")
generate_java_code
add_class(c)
add_query("B", "a", <<["D", "INTEGER"], ["e", "BOOLEAN"], ["D", "INTEGER"], ["C", "A"], ["d", "BOOLEAN"], ["c", "A"], ["C", "INTEGER"], ["INTEGER", "INTEGER"]>>, "C")
add_attribute("C", "B", "C")
add_command("d", "B", <<["INTEGER", "INTEGER"], ["D", "BOOLEAN"], ["D", "BOOLEAN"], ["d", "e"]>>)
add_query("C", "BOOLEAN", <<["e", "BOOLEAN"], ["C", "INTEGER"], ["b", "INTEGER"], ["D", "c"], ["D", "INTEGER"], ["e", "D"]>>, "c")
add_call_chain(<<a,D,b,b,C,d>>)
type_check
add_query("C", "INTEGER", <<["b", "B"], ["a", "INTEGER"], ["C", "b"], ["c", "INTEGER"], ["C", "INTEGER"], ["b", "INTEGER"], ["a", "b"], ["A", "INTEGER"], ["b", "INTEGER"]>>, "c")
add_call_chain(<<d,D,c>>)
add_command("e", "e", <<["e", "C"], ["BOOLEAN", "B"], ["A", "e"], ["a", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["A", "e"], ["a", "D"]>>)
bool_value (false)
bool_value (false)
add_call_chain(<<C>>)
numerical_negation
generate_java_code
quotient
add_class(C)
add_attribute("e", "b", "a")
add_query("b", "e", <<["d", "INTEGER"], ["a", "INTEGER"], ["c", "A"], ["A", "INTEGER"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["INTEGER", "BOOLEAN"]>>, "INTEGER")
numerical_negation
generate_java_code
add_attribute("C", "B", "d")
equals
conjunction
add_call_chain(<<b,e,INTEGER,D,A,a,e>>)
add_call_chain(<<B,C,e,D,A,A,C,c>>)
logical_negation
subtraction
generate_java_code
int_value (30)
add_query("d", "c", <<["C", "INTEGER"], ["a", "BOOLEAN"]>>, "c")
add_call_chain(<<e,C,c,A,B,B,b>>)
add_class(b)
add_call_chain(<<C,A,d,c,C,b,c>>)
add_attribute("A", "e", "C")
logical_negation
numerical_negation
add_call_chain(<<d,A,A,a,D,C,c,b>>)
add_query("B", "D", <<["A", "b"], ["B", "BOOLEAN"]>>, "c")
add_query("a", "A", <<["A", "BOOLEAN"]>>, "b")
type_check
logical_negation
add_command("e", "c", <<["e", "BOOLEAN"], ["c", "BOOLEAN"]>>)
add_command("A", "C", <<["B", "INTEGER"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["e", "D"], ["C", "INTEGER"], ["e", "INTEGER"]>>)
generate_java_code
bool_value (false)
addition
add_call_chain(<<d,b,c,d,C,a>>)
add_command("c", "a", <<["C", "D"], ["A", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "B"], ["b", "BOOLEAN"], ["d", "b"], ["D", "b"], ["c", "INTEGER"], ["d", "INTEGER"]>>)
bool_value (true)
add_command("C", "e", <<["INTEGER", "BOOLEAN"], ["D", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "b"], ["BOOLEAN", "INTEGER"], ["A", "INTEGER"], ["C", "INTEGER"], ["d", "INTEGER"]>>)
add_call_chain(<<c>>)
generate_java_code
add_call_chain(<<b,INTEGER,A,d>>)
numerical_negation
add_attribute("c", "b", "INTEGER")
add_call_chain(<<d,D,a,d>>)
subtraction
disjunction
less_than
add_attribute("B", "INTEGER", "BOOLEAN")
generate_java_code
add_query("C", "BOOLEAN", <<["B", "BOOLEAN"], ["c", "INTEGER"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["A", "d"], ["D", "INTEGER"]>>, "D")
generate_java_code
add_query("B", "e", <<["e", "INTEGER"]>>, "a")
add_command("BOOLEAN", "a", <<["d", "INTEGER"], ["INTEGER", "BOOLEAN"], ["e", "BOOLEAN"], ["c", "e"]>>)
add_attribute("B", "a", "INTEGER")
add_attribute("B", "C", "INTEGER")
add_class(d)
bool_value (true)
add_attribute("A", "e", "BOOLEAN")
add_attribute("e", "D", "INTEGER")
add_call_chain(<<d,c,A,b>>)
add_call_chain(<<A,A,e,BOOLEAN,c,e,e,A,INTEGER>>)
add_attribute("c", "b", "C")
add_query("c", "e", <<["e", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "INTEGER"], ["c", "BOOLEAN"], ["B", "INTEGER"], ["e", "c"], ["b", "d"], ["d", "A"]>>, "d")
type_check
type_check
add_query("D", "c", <<["e", "INTEGER"], ["C", "BOOLEAN"], ["BOOLEAN", "d"], ["A", "BOOLEAN"], ["c", "a"], ["a", "D"]>>, "D")
add_query("D", "C", <<["c", "e"], ["b", "BOOLEAN"], ["B", "D"], ["A", "a"], ["c", "BOOLEAN"]>>, "A")
bool_value (false)
add_attribute("D", "c", "INTEGER")
bool_value (false)
add_attribute("c", "INTEGER", "INTEGER")
add_call_chain(<<a,B,A,a,A,D,D,e>>)
conjunction
add_command("D", "a", <<["e", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["C", "INTEGER"], ["e", "INTEGER"]>>)
addition
add_class(B)
add_call_chain(<<INTEGER,A,C,D,A,e,B>>)
bool_value (false)
numerical_negation
addition
numerical_negation
add_class(D)
bool_value (false)
add_attribute("e", "b", "BOOLEAN")
add_command("A", "C", <<["INTEGER", "BOOLEAN"], ["D", "INTEGER"], ["b", "c"], ["B", "C"], ["INTEGER", "INTEGER"], ["d", "INTEGER"], ["BOOLEAN", "INTEGER"], ["B", "INTEGER"]>>)
type_check
add_call_chain(<<INTEGER,C,D,B,d,D,A,b,C>>)
add_call_chain(<<B,A,b,C,b,d,a>>)
int_value (28)
logical_negation
generate_java_code
logical_negation
conjunction
generate_java_code
conjunction
type_check
bool_value (false)
add_class(D)
logical_negation
add_command("A", "B", <<["C", "INTEGER"], ["BOOLEAN", "A"], ["a", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "INTEGER"]>>)
generate_java_code
bool_value (true)
add_call_chain(<<B,a,d,INTEGER,e,e,B,a,B>>)
add_call_chain(<<A,BOOLEAN,B,e,c,A,INTEGER,A>>)
add_attribute("d", "e", "D")
add_attribute("b", "b", "BOOLEAN")
add_query("e", "c", <<["e", "B"], ["e", "INTEGER"], ["A", "B"]>>, "a")
add_call_chain(<<B,e,b,e,D,e,a,C>>)
add_query("D", "e", <<["BOOLEAN", "BOOLEAN"]>>, "A")
logical_negation
add_attribute("BOOLEAN", "b", "e")
type_check
add_call_chain(<<D,b,C>>)
generate_java_code
greater_than
add_class(c)
disjunction
numerical_negation
add_attribute("C", "d", "BOOLEAN")
type_check
int_value (42)
add_query("a", "c", <<["INTEGER", "c"], ["D", "BOOLEAN"], ["INTEGER", "INTEGER"], ["BOOLEAN", "b"]>>, "D")
add_command("a", "e", <<["B", "A"]>>)
bool_value (true)
add_call_chain(<<b>>)
add_call_chain(<<C,D>>)
logical_negation
quotient
generate_java_code
add_attribute("e", "C", "BOOLEAN")
bool_value (false)
add_attribute("B", "e", "BOOLEAN")
add_command("B", "d", <<["e", "INTEGER"]>>)
bool_value (false)
equals
add_query("d", "A", <<["C", "INTEGER"], ["D", "INTEGER"], ["B", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["D", "INTEGER"], ["B", "INTEGER"], ["d", "BOOLEAN"], ["a", "BOOLEAN"]>>, "c")
generate_java_code
add_attribute("A", "D", "BOOLEAN")
add_command("e", "C", <<["d", "C"]>>)
logical_negation
type_check
conjunction
add_command("D", "a", <<["a", "INTEGER"], ["A", "INTEGER"], ["d", "BOOLEAN"], ["B", "INTEGER"], ["b", "INTEGER"], ["D", "INTEGER"], ["C", "D"]>>)
type_check
add_class(a)
add_attribute("c", "D", "BOOLEAN")
add_attribute("B", "D", "BOOLEAN")
add_attribute("B", "e", "c")
add_query("A", "C", <<["C", "BOOLEAN"], ["a", "d"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "INTEGER"], ["C", "BOOLEAN"]>>, "INTEGER")
add_class(D)
disjunction
greater_than
logical_negation
int_value (23)
conjunction
bool_value (true)
add_query("b", "a", <<["d", "BOOLEAN"], ["e", "INTEGER"], ["C", "e"], ["d", "BOOLEAN"], ["D", "BOOLEAN"]>>, "A")
int_value (11)
add_class(INTEGER)
add_call_chain(<<b,c,A,d,B,BOOLEAN,b,B>>)
add_class(d)
add_call_chain(<<A,B,b,BOOLEAN,d>>)
add_query("A", "C", <<["B", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "A"], ["BOOLEAN", "BOOLEAN"], ["B", "BOOLEAN"]>>, "D")
bool_value (false)
bool_value (true)
add_call_chain(<<d,c>>)
modulo
numerical_negation
add_attribute("INTEGER", "A", "d")
bool_value (true)
equals
add_class(D)
quotient
add_query("a", "a", <<["c", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "BOOLEAN"], ["a", "B"]>>, "D")
modulo
add_call_chain(<<d,B,b,d,C,B>>)
add_call_chain(<<c,INTEGER,C>>)
add_attribute("D", "D", "INTEGER")
type_check
add_call_chain(<<e,c,e,D,B,a,d,B,d>>)
add_call_chain(<<d,B>>)
add_attribute("B", "a", "BOOLEAN")
add_query("C", "D", <<["A", "BOOLEAN"], ["B", "INTEGER"], ["d", "a"], ["BOOLEAN", "e"]>>, "c")
add_command("D", "b", <<["b", "BOOLEAN"], ["e", "B"], ["A", "BOOLEAN"], ["c", "BOOLEAN"]>>)
int_value (41)
add_command("A", "a", <<["C", "A"], ["D", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["b", "INTEGER"], ["a", "c"], ["D", "BOOLEAN"]>>)
add_command("b", "a", <<["D", "INTEGER"], ["a", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["e", "BOOLEAN"], ["D", "INTEGER"], ["C", "INTEGER"]>>)
add_command("C", "d", <<["D", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "BOOLEAN"]>>)
bool_value (true)
add_query("B", "b", <<["C", "a"], ["b", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["D", "e"], ["A", "BOOLEAN"], ["d", "BOOLEAN"]>>, "c")
add_call_chain(<<D,D,d>>)
add_call_chain(<<D,C,e,b,BOOLEAN,A,c>>)
add_command("e", "BOOLEAN", <<["A", "INTEGER"], ["C", "BOOLEAN"], ["d", "c"], ["b", "C"], ["A", "B"], ["D", "BOOLEAN"], ["d", "a"]>>)
add_query("B", "b", <<["e", "BOOLEAN"], ["a", "INTEGER"]>>, "e")
numerical_negation
add_call_chain(<<e,a,D,e,b,C,C,C,e>>)
logical_negation
add_attribute("e", "e", "C")
add_call_chain(<<b,c>>)
numerical_negation
addition
bool_value (true)
int_value (48)
add_query("INTEGER", "B", <<["d", "INTEGER"], ["b", "INTEGER"], ["INTEGER", "INTEGER"], ["C", "BOOLEAN"], ["a", "INTEGER"], ["INTEGER", "INTEGER"]>>, "B")
int_value (25)
add_attribute("c", "A", "BOOLEAN")
add_call_chain(<<d,e,D,D,D,a,e,C,d>>)
add_attribute("D", "A", "B")
int_value (30)
add_call_chain(<<A,A,a,C,d>>)
