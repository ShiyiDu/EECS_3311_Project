add_call_chain(<<a,c,c,C,b>>)
add_call_chain(<<e,e,e,c,e,B>>)
modulo
add_call_chain(<<INTEGER,b,B,C,c,C>>)
add_query("D", "B", <<["e", "INTEGER"], ["C", "INTEGER"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["A", "INTEGER"], ["c", "d"], ["c", "a"], ["b", "INTEGER"], ["A", "b"]>>, "B")
numerical_negation
add_class(B)
numerical_negation
bool_value (true)
numerical_negation
add_call_chain(<<d,INTEGER,INTEGER,b>>)
add_command("B", "C", <<["b", "INTEGER"], ["e", "c"], ["B", "BOOLEAN"], ["e", "d"], ["d", "BOOLEAN"], ["BOOLEAN", "b"]>>)
add_attribute("c", "c", "INTEGER")
addition
add_call_chain(<<D>>)
bool_value (true)
logical_negation
subtraction
add_command("C", "b", <<["a", "A"], ["e", "c"], ["b", "INTEGER"], ["INTEGER", "D"], ["B", "a"], ["c", "BOOLEAN"]>>)
add_attribute("INTEGER", "d", "a")
generate_java_code
int_value (36)
generate_java_code
numerical_negation
add_call_chain(<<INTEGER,A>>)
generate_java_code
less_than
type_check
bool_value (true)
add_query("c", "C", <<["c", "B"]>>, "C")
add_call_chain(<<BOOLEAN,e,b,B,a,b,INTEGER>>)
generate_java_code
conjunction
add_class(c)
generate_java_code
type_check
add_call_chain(<<D>>)
int_value (46)
add_class(B)
int_value (16)
add_call_chain(<<C,C,e,b,B,BOOLEAN,d,a>>)
add_class(e)
type_check
generate_java_code
add_command("C", "c", <<["a", "BOOLEAN"], ["B", "INTEGER"]>>)
add_attribute("C", "A", "INTEGER")
equals
add_command("INTEGER", "a", <<["B", "BOOLEAN"], ["A", "INTEGER"], ["D", "C"], ["A", "BOOLEAN"], ["INTEGER", "INTEGER"], ["e", "C"]>>)
add_class(c)
conjunction
conjunction
type_check
add_attribute("e", "d", "INTEGER")
add_call_chain(<<A,a,C,a>>)
add_attribute("D", "A", "INTEGER")
bool_value (false)
add_command("C", "B", <<["a", "c"], ["b", "INTEGER"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "BOOLEAN"]>>)
add_command("e", "d", <<["D", "INTEGER"], ["c", "INTEGER"], ["a", "INTEGER"], ["D", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "INTEGER"]>>)
bool_value (false)
add_attribute("D", "C", "INTEGER")
add_call_chain(<<a,D>>)
add_query("B", "INTEGER", <<["c", "INTEGER"], ["B", "INTEGER"], ["A", "INTEGER"]>>, "a")
bool_value (true)
add_class(C)
add_call_chain(<<C,B>>)
add_attribute("a", "C", "BOOLEAN")
add_command("b", "C", <<["e", "B"], ["c", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "a"], ["C", "INTEGER"], ["C", "INTEGER"]>>)
add_command("A", "b", <<["D", "b"], ["e", "INTEGER"], ["B", "BOOLEAN"]>>)
addition
numerical_negation
subtraction
logical_negation
add_call_chain(<<B,C,B,b,INTEGER>>)
add_call_chain(<<INTEGER,A,C,B,b,e,B>>)
add_command("A", "d", <<["D", "BOOLEAN"], ["b", "INTEGER"], ["D", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "INTEGER"]>>)
add_query("A", "d", <<["e", "BOOLEAN"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>, "A")
add_call_chain(<<B>>)
add_command("A", "C", <<["d", "C"], ["d", "D"], ["c", "D"], ["D", "INTEGER"], ["C", "INTEGER"]>>)
add_attribute("C", "b", "BOOLEAN")
bool_value (true)
add_call_chain(<<C,c,a,B>>)
add_query("C", "d", <<["b", "B"], ["b", "BOOLEAN"], ["A", "BOOLEAN"], ["INTEGER", "D"], ["BOOLEAN", "INTEGER"], ["A", "BOOLEAN"], ["b", "a"], ["b", "c"]>>, "C")
add_call_chain(<<e,B,BOOLEAN,C,BOOLEAN,b,c,C>>)
bool_value (false)
add_class(e)
add_command("B", "D", <<["INTEGER", "BOOLEAN"], ["INTEGER", "INTEGER"], ["BOOLEAN", "D"], ["b", "INTEGER"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "C"], ["d", "BOOLEAN"], ["A", "e"]>>)
add_query("b", "D", <<["b", "INTEGER"], ["B", "INTEGER"], ["a", "BOOLEAN"], ["c", "INTEGER"], ["c", "BOOLEAN"], ["c", "BOOLEAN"]>>, "D")
numerical_negation
add_class(c)
add_query("D", "D", <<["A", "BOOLEAN"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["INTEGER", "b"]>>, "c")
numerical_negation
type_check
generate_java_code
add_attribute("B", "A", "B")
int_value (35)
add_call_chain(<<B,D,b,C,C,a,D,a>>)
logical_negation
generate_java_code
add_command("A", "C", <<["c", "BOOLEAN"], ["B", "B"], ["d", "INTEGER"]>>)
add_call_chain(<<INTEGER,A,d,A,e>>)
logical_negation
add_attribute("B", "A", "a")
add_call_chain(<<A,C,D,A>>)
add_call_chain(<<c,C,d,C,BOOLEAN,d,D,e>>)
generate_java_code
bool_value (true)
modulo
logical_negation
add_command("A", "e", <<["B", "INTEGER"], ["d", "INTEGER"], ["INTEGER", "B"], ["e", "c"], ["INTEGER", "e"], ["C", "d"], ["d", "C"], ["D", "D"], ["c", "b"]>>)
add_call_chain(<<B,a>>)
add_class(INTEGER)
int_value (20)
add_attribute("A", "d", "INTEGER")
bool_value (false)
multiplication
add_query("e", "C", <<["B", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["D", "INTEGER"], ["A", "b"]>>, "A")
add_call_chain(<<a,a>>)
generate_java_code
conjunction
generate_java_code
multiplication
bool_value (true)
add_call_chain(<<B,C>>)
logical_negation
logical_negation
bool_value (false)
bool_value (false)
add_class(A)
add_call_chain(<<c,c,A,a,c,a,b>>)
add_call_chain(<<d,C,c,B,e>>)
logical_negation
add_command("A", "BOOLEAN", <<["c", "A"], ["d", "INTEGER"], ["d", "INTEGER"], ["B", "d"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "A"], ["BOOLEAN", "BOOLEAN"]>>)
add_call_chain(<<B,D,C,b,D,a,e,INTEGER,d>>)
add_attribute("BOOLEAN", "D", "INTEGER")
add_attribute("D", "a", "BOOLEAN")
add_command("b", "b", <<["INTEGER", "INTEGER"], ["B", "BOOLEAN"]>>)
generate_java_code
add_class(D)
equals
add_command("D", "BOOLEAN", <<["c", "BOOLEAN"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["a", "BOOLEAN"], ["C", "e"], ["c", "INTEGER"], ["b", "D"], ["INTEGER", "INTEGER"]>>)
add_attribute("d", "a", "C")
add_command("A", "B", <<["B", "b"], ["A", "INTEGER"], ["C", "C"], ["C", "d"], ["b", "INTEGER"], ["C", "A"]>>)
logical_negation
int_value (7)
add_command("e", "D", <<["b", "A"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["B", "INTEGER"], ["A", "C"], ["B", "BOOLEAN"]>>)
numerical_negation
add_query("a", "d", <<["D", "BOOLEAN"], ["B", "D"], ["d", "b"], ["B", "b"], ["D", "BOOLEAN"]>>, "INTEGER")
bool_value (true)
generate_java_code
int_value (20)
bool_value (false)
add_query("B", "c", <<["A", "b"], ["D", "INTEGER"], ["C", "INTEGER"], ["e", "BOOLEAN"]>>, "D")
conjunction
type_check
numerical_negation
add_attribute("b", "A", "d")
add_command("e", "BOOLEAN", <<["b", "b"], ["d", "INTEGER"], ["D", "BOOLEAN"], ["d", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "BOOLEAN"]>>)
greater_than
subtraction
add_call_chain(<<B,D,a,b,D,B,a,C,B>>)
bool_value (false)
add_call_chain(<<d,b,C,D,a,a,A>>)
bool_value (true)
bool_value (true)
int_value (23)
add_call_chain(<<d,D,BOOLEAN,B,b,c,e>>)
greater_than
add_attribute("d", "C", "BOOLEAN")
add_command("b", "D", <<["D", "INTEGER"]>>)
add_query("BOOLEAN", "d", <<["B", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["e", "INTEGER"], ["a", "INTEGER"], ["a", "BOOLEAN"], ["D", "a"], ["B", "BOOLEAN"], ["a", "INTEGER"], ["B", "C"]>>, "a")
numerical_negation
add_query("INTEGER", "C", <<["B", "INTEGER"], ["B", "B"], ["c", "BOOLEAN"], ["a", "e"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "D"], ["B", "e"]>>, "B")
numerical_negation
add_attribute("b", "a", "D")
bool_value (false)
int_value (16)
logical_negation
add_query("c", "d", <<["D", "A"], ["c", "INTEGER"], ["e", "BOOLEAN"], ["a", "d"], ["a", "BOOLEAN"], ["A", "INTEGER"]>>, "c")
add_call_chain(<<C,D,c,e,a,INTEGER>>)
add_call_chain(<<B,A,D,d>>)
type_check
numerical_negation
add_call_chain(<<a,d>>)
conjunction
add_attribute("D", "B", "d")
add_call_chain(<<D,c,B>>)
modulo
bool_value (true)
quotient
multiplication
add_attribute("e", "B", "BOOLEAN")
add_attribute("c", "b", "INTEGER")
bool_value (false)
logical_negation
add_call_chain(<<e,d,b,d>>)
add_command("BOOLEAN", "B", <<["b", "BOOLEAN"], ["C", "A"]>>)
add_call_chain(<<a>>)
add_attribute("a", "e", "INTEGER")
add_call_chain(<<B,e,d,D,e,b,b,A,B>>)
add_query("d", "d", <<["C", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["A", "INTEGER"], ["BOOLEAN", "INTEGER"], ["A", "INTEGER"], ["C", "INTEGER"]>>, "B")
addition
logical_negation
bool_value (true)
type_check
logical_negation
add_query("D", "B", <<["INTEGER", "B"], ["a", "B"], ["a", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["e", "BOOLEAN"], ["e", "a"]>>, "BOOLEAN")
bool_value (false)
add_call_chain(<<BOOLEAN,a,a,A,D,BOOLEAN,a,D>>)
add_query("B", "C", <<["b", "INTEGER"]>>, "D")
add_query("d", "b", <<["d", "BOOLEAN"], ["c", "BOOLEAN"], ["a", "BOOLEAN"], ["b", "c"], ["D", "BOOLEAN"], ["A", "BOOLEAN"]>>, "d")
add_class(A)
add_call_chain(<<BOOLEAN,e,A,a,c,a,a>>)
generate_java_code
add_class(A)
bool_value (true)
logical_negation
logical_negation
add_class(a)
add_call_chain(<<C,B,D,D>>)
add_attribute("d", "a", "INTEGER")
add_attribute("b", "c", "BOOLEAN")
conjunction
add_attribute("INTEGER", "c", "D")
add_query("C", "A", <<["A", "BOOLEAN"]>>, "D")
bool_value (false)
add_query("D", "B", <<["c", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "INTEGER"]>>, "B")
add_attribute("e", "A", "INTEGER")
add_command("A", "a", <<["c", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "C"], ["BOOLEAN", "BOOLEAN"], ["A", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
logical_negation
add_call_chain(<<INTEGER,C,D,a>>)
less_than
add_call_chain(<<d>>)
add_class(a)
add_call_chain(<<A>>)
add_call_chain(<<A,INTEGER>>)
int_value (37)
conjunction
add_call_chain(<<d,b,a,A,A,A,e>>)
add_attribute("c", "INTEGER", "b")
numerical_negation
addition
add_query("INTEGER", "C", <<["BOOLEAN", "INTEGER"], ["D", "INTEGER"], ["INTEGER", "BOOLEAN"], ["b", "INTEGER"], ["e", "BOOLEAN"], ["b", "BOOLEAN"]>>, "B")
add_command("B", "B", <<["b", "INTEGER"], ["B", "BOOLEAN"], ["a", "INTEGER"], ["A", "e"], ["B", "INTEGER"], ["e", "INTEGER"], ["A", "INTEGER"], ["a", "BOOLEAN"], ["d", "BOOLEAN"]>>)
int_value (5)
generate_java_code
int_value (23)
add_attribute("B", "B", "INTEGER")
add_query("c", "C", <<["A", "INTEGER"]>>, "c")
bool_value (true)
add_call_chain(<<C,e,B,A,D,B,e,INTEGER>>)
type_check
bool_value (false)
add_class(INTEGER)
add_attribute("B", "d", "BOOLEAN")
add_query("INTEGER", "e", <<["d", "INTEGER"], ["c", "INTEGER"], ["d", "INTEGER"], ["c", "A"]>>, "c")
add_query("b", "e", <<["B", "INTEGER"], ["D", "d"], ["b", "BOOLEAN"], ["b", "e"], ["e", "BOOLEAN"], ["d", "C"], ["A", "C"], ["A", "INTEGER"], ["a", "INTEGER"]>>, "BOOLEAN")
logical_negation
add_attribute("C", "a", "INTEGER")
generate_java_code
add_query("B", "d", <<["BOOLEAN", "BOOLEAN"], ["d", "INTEGER"], ["D", "INTEGER"]>>, "D")
disjunction
int_value (37)
add_call_chain(<<a,D,B,b,B>>)
disjunction
add_command("B", "c", <<["C", "INTEGER"], ["e", "INTEGER"], ["INTEGER", "INTEGER"], ["A", "INTEGER"], ["d", "BOOLEAN"], ["D", "B"], ["A", "INTEGER"], ["C", "INTEGER"]>>)
disjunction
add_attribute("c", "A", "BOOLEAN")
add_query("e", "A", <<["A", "INTEGER"], ["A", "C"], ["c", "INTEGER"]>>, "C")
add_call_chain(<<A,c>>)
add_query("d", "D", <<["C", "d"], ["b", "BOOLEAN"], ["A", "INTEGER"], ["d", "BOOLEAN"], ["b", "INTEGER"], ["d", "BOOLEAN"]>>, "C")
add_call_chain(<<e,b,B,d,B,D,D,BOOLEAN,e>>)
add_query("BOOLEAN", "b", <<["A", "a"], ["D", "BOOLEAN"], ["C", "e"], ["INTEGER", "BOOLEAN"], ["B", "D"], ["B", "INTEGER"], ["INTEGER", "INTEGER"], ["c", "BOOLEAN"]>>, "C")
numerical_negation
add_attribute("D", "B", "C")
disjunction
add_call_chain(<<A,d,C,d,B,B,d,B>>)
add_query("d", "A", <<["c", "C"], ["a", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["b", "INTEGER"], ["a", "BOOLEAN"], ["B", "BOOLEAN"]>>, "e")
add_command("a", "D", <<["a", "INTEGER"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["A", "INTEGER"], ["d", "A"]>>)
add_class(b)
subtraction
add_query("a", "e", <<["b", "BOOLEAN"], ["C", "INTEGER"], ["a", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["C", "BOOLEAN"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "A"]>>, "C")
add_query("b", "C", <<["B", "c"], ["a", "D"], ["BOOLEAN", "BOOLEAN"]>>, "INTEGER")
addition
add_command("b", "d", <<["b", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["B", "INTEGER"], ["d", "BOOLEAN"], ["A", "BOOLEAN"], ["INTEGER", "A"]>>)
add_attribute("c", "BOOLEAN", "D")
int_value (37)
int_value (44)
add_query("A", "b", <<["D", "BOOLEAN"], ["C", "INTEGER"], ["C", "INTEGER"]>>, "INTEGER")
add_query("INTEGER", "A", <<["B", "b"], ["d", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "INTEGER"]>>, "e")
add_command("C", "C", <<["d", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "b"], ["a", "e"], ["B", "d"], ["B", "d"]>>)
add_command("B", "C", <<["A", "BOOLEAN"], ["C", "INTEGER"], ["B", "BOOLEAN"]>>)
add_call_chain(<<C,D,INTEGER,A,b,d,b>>)
type_check
generate_java_code
numerical_negation
add_call_chain(<<C,c>>)
add_call_chain(<<C,d>>)
numerical_negation
int_value (20)
logical_negation
modulo
int_value (4)
int_value (18)
generate_java_code
add_command("A", "c", <<["D", "A"]>>)
add_query("c", "a", <<["a", "B"], ["D", "c"], ["b", "BOOLEAN"]>>, "d")
add_class(BOOLEAN)
add_attribute("C", "c", "INTEGER")
type_check
add_class(c)
int_value (40)
