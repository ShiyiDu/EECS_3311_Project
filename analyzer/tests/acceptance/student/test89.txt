generate_java_code
add_class(C)
add_class(A)
conjunction
bool_value (true)
numerical_negation
generate_java_code
add_call_chain(<<e,A,c>>)
add_query("INTEGER", "A", <<["C", "BOOLEAN"], ["D", "A"], ["B", "a"], ["C", "C"], ["e", "INTEGER"], ["b", "INTEGER"]>>, "C")
bool_value (false)
add_command("D", "e", <<["c", "INTEGER"], ["A", "BOOLEAN"], ["A", "D"], ["d", "A"], ["D", "BOOLEAN"], ["a", "A"], ["d", "b"], ["C", "BOOLEAN"], ["d", "C"]>>)
bool_value (false)
add_attribute("d", "A", "BOOLEAN")
multiplication
add_command("a", "A", <<["b", "D"]>>)
generate_java_code
add_attribute("C", "c", "BOOLEAN")
type_check
add_query("B", "D", <<["e", "BOOLEAN"], ["B", "C"], ["D", "INTEGER"], ["c", "INTEGER"], ["B", "A"], ["BOOLEAN", "INTEGER"], ["b", "INTEGER"], ["c", "INTEGER"]>>, "A")
addition
add_command("A", "C", <<["A", "BOOLEAN"], ["C", "INTEGER"]>>)
add_query("B", "e", <<["A", "INTEGER"], ["a", "INTEGER"], ["b", "INTEGER"], ["B", "b"], ["e", "d"], ["C", "BOOLEAN"], ["d", "INTEGER"]>>, "B")
int_value (21)
add_command("e", "d", <<["a", "INTEGER"], ["b", "INTEGER"], ["c", "INTEGER"], ["D", "BOOLEAN"]>>)
bool_value (true)
add_command("a", "C", <<["a", "BOOLEAN"], ["b", "C"], ["e", "INTEGER"], ["INTEGER", "D"], ["INTEGER", "BOOLEAN"]>>)
add_command("C", "C", <<["a", "a"], ["b", "BOOLEAN"], ["a", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>)
add_attribute("INTEGER", "a", "INTEGER")
add_command("C", "b", <<["B", "C"], ["d", "A"], ["D", "INTEGER"], ["A", "e"], ["d", "A"]>>)
conjunction
numerical_negation
add_attribute("b", "e", "BOOLEAN")
disjunction
add_command("B", "C", <<["D", "BOOLEAN"], ["A", "INTEGER"], ["B", "INTEGER"], ["C", "D"], ["b", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["C", "INTEGER"], ["B", "A"]>>)
add_call_chain(<<e,d,d,A,INTEGER>>)
int_value (26)
add_class(C)
add_call_chain(<<C,d,d>>)
add_call_chain(<<d>>)
logical_negation
add_query("B", "D", <<["A", "b"], ["A", "BOOLEAN"], ["d", "INTEGER"], ["C", "INTEGER"], ["a", "BOOLEAN"], ["B", "INTEGER"], ["e", "A"], ["e", "INTEGER"], ["C", "BOOLEAN"]>>, "B")
add_query("c", "e", <<["C", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["C", "d"], ["INTEGER", "A"]>>, "a")
add_call_chain(<<d,e,e,D,B,A,BOOLEAN,a,b>>)
disjunction
less_than
add_call_chain(<<C,C,C,C,C,INTEGER>>)
multiplication
add_class(d)
add_attribute("B", "C", "INTEGER")
int_value (21)
equals
generate_java_code
add_command("a", "C", <<["BOOLEAN", "e"], ["A", "INTEGER"], ["e", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "C"], ["A", "INTEGER"], ["A", "INTEGER"]>>)
add_command("D", "C", <<["b", "INTEGER"], ["d", "INTEGER"]>>)
add_call_chain(<<b,D,INTEGER,D,C,B,B,B>>)
generate_java_code
add_command("C", "INTEGER", <<["d", "INTEGER"], ["b", "BOOLEAN"], ["D", "B"], ["B", "BOOLEAN"], ["B", "BOOLEAN"]>>)
add_call_chain(<<B,a,A,a,D,C,D,B,e>>)
less_than
add_call_chain(<<d,d,e,A,b,B,b,C,a>>)
generate_java_code
greater_than
type_check
int_value (41)
type_check
add_command("A", "d", <<["c", "INTEGER"], ["D", "BOOLEAN"], ["C", "BOOLEAN"], ["BOOLEAN", "B"]>>)
add_attribute("D", "e", "INTEGER")
add_query("a", "B", <<["a", "INTEGER"], ["INTEGER", "BOOLEAN"], ["BOOLEAN", "e"], ["B", "BOOLEAN"]>>, "A")
numerical_negation
bool_value (true)
bool_value (true)
int_value (40)
generate_java_code
disjunction
add_class(C)
generate_java_code
add_attribute("c", "A", "b")
add_query("B", "e", <<["INTEGER", "BOOLEAN"], ["C", "INTEGER"], ["d", "c"], ["B", "b"]>>, "e")
logical_negation
bool_value (true)
add_call_chain(<<a,BOOLEAN,C,INTEGER,D,d,d>>)
add_command("b", "d", <<["A", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "INTEGER"], ["c", "INTEGER"]>>)
type_check
add_attribute("C", "BOOLEAN", "BOOLEAN")
conjunction
add_attribute("e", "B", "INTEGER")
numerical_negation
add_call_chain(<<c,c,D,b,INTEGER>>)
generate_java_code
generate_java_code
type_check
type_check
generate_java_code
add_class(d)
add_query("INTEGER", "b", <<["d", "a"], ["A", "INTEGER"], ["b", "INTEGER"], ["B", "BOOLEAN"], ["C", "INTEGER"], ["BOOLEAN", "c"], ["A", "INTEGER"]>>, "a")
add_class(c)
add_class(e)
add_query("b", "B", <<["D", "BOOLEAN"], ["d", "D"], ["e", "a"], ["b", "BOOLEAN"], ["BOOLEAN", "A"]>>, "INTEGER")
add_command("a", "c", <<["b", "INTEGER"], ["A", "b"], ["BOOLEAN", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["C", "INTEGER"], ["c", "INTEGER"], ["B", "BOOLEAN"]>>)
bool_value (false)
add_call_chain(<<d,d,a,B,b,A,b,C>>)
add_attribute("a", "BOOLEAN", "INTEGER")
generate_java_code
add_attribute("D", "c", "BOOLEAN")
add_query("BOOLEAN", "B", <<["e", "d"], ["b", "INTEGER"], ["b", "INTEGER"], ["a", "b"]>>, "c")
add_query("B", "B", <<["C", "INTEGER"], ["e", "BOOLEAN"]>>, "B")
subtraction
int_value (31)
numerical_negation
int_value (34)
add_call_chain(<<c>>)
logical_negation
int_value (17)
add_attribute("BOOLEAN", "a", "B")
add_class(a)
generate_java_code
logical_negation
bool_value (false)
add_call_chain(<<b,INTEGER,b,e>>)
add_command("A", "A", <<["b", "d"], ["B", "C"], ["a", "INTEGER"], ["D", "BOOLEAN"], ["e", "BOOLEAN"]>>)
int_value (15)
add_command("c", "A", <<["A", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "D"]>>)
int_value (48)
add_query("b", "INTEGER", <<["a", "BOOLEAN"], ["D", "b"]>>, "c")
add_call_chain(<<d,B,e,c,c,INTEGER>>)
addition
logical_negation
generate_java_code
add_attribute("b", "d", "D")
bool_value (true)
numerical_negation
add_command("A", "A", <<["a", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["C", "d"], ["e", "INTEGER"], ["d", "B"], ["b", "BOOLEAN"], ["a", "INTEGER"], ["C", "BOOLEAN"]>>)
add_attribute("a", "e", "INTEGER")
add_query("d", "a", <<["a", "BOOLEAN"], ["B", "A"]>>, "c")
multiplication
add_class(C)
disjunction
type_check
add_call_chain(<<c,C,d,BOOLEAN,A,D,A,A,b>>)
add_call_chain(<<b,D,a,A,A,C,A,a>>)
add_call_chain(<<d,C,A,C>>)
conjunction
add_command("C", "e", <<["b", "INTEGER"], ["B", "INTEGER"], ["a", "e"], ["INTEGER", "INTEGER"], ["D", "INTEGER"]>>)
disjunction
logical_negation
add_query("A", "c", <<["A", "BOOLEAN"], ["D", "INTEGER"], ["D", "INTEGER"], ["C", "A"], ["c", "C"], ["BOOLEAN", "BOOLEAN"], ["INTEGER", "A"]>>, "B")
bool_value (false)
generate_java_code
add_call_chain(<<e,d,C>>)
add_attribute("c", "C", "B")
add_attribute("A", "INTEGER", "D")
add_call_chain(<<C>>)
bool_value (false)
greater_than
type_check
logical_negation
add_call_chain(<<A,INTEGER,D,B,e,A,d>>)
conjunction
int_value (40)
bool_value (true)
add_call_chain(<<A,BOOLEAN,D,c>>)
bool_value (false)
add_call_chain(<<D>>)
add_call_chain(<<D,d,C,C,A,e,e,d>>)
add_command("A", "A", <<["D", "BOOLEAN"], ["e", "INTEGER"], ["B", "b"], ["B", "c"], ["BOOLEAN", "e"], ["e", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "INTEGER"]>>)
add_command("D", "d", <<["e", "BOOLEAN"], ["d", "INTEGER"], ["C", "INTEGER"]>>)
quotient
disjunction
logical_negation
add_command("D", "D", <<["A", "INTEGER"], ["D", "B"], ["BOOLEAN", "INTEGER"], ["BOOLEAN", "A"], ["e", "INTEGER"], ["c", "INTEGER"]>>)
add_call_chain(<<c,c,a,c,D,e>>)
type_check
add_attribute("B", "INTEGER", "e")
int_value (20)
generate_java_code
disjunction
add_command("c", "A", <<["A", "INTEGER"], ["b", "BOOLEAN"], ["B", "e"], ["D", "b"], ["c", "A"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>)
add_command("e", "d", <<["C", "INTEGER"]>>)
add_attribute("b", "B", "BOOLEAN")
int_value (41)
add_command("c", "C", <<["e", "INTEGER"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "INTEGER"]>>)
add_attribute("D", "B", "INTEGER")
numerical_negation
int_value (30)
type_check
add_command("d", "B", <<["d", "BOOLEAN"], ["e", "BOOLEAN"], ["BOOLEAN", "C"]>>)
bool_value (false)
logical_negation
bool_value (false)
int_value (14)
generate_java_code
subtraction
add_attribute("d", "d", "A")
int_value (17)
