type_check
conjunction
numerical_negation
bool_value (false)
add_query("A", "e", <<["B", "D"]>>, "D")
add_attribute("INTEGER", "B", "BOOLEAN")
type_check
add_attribute("B", "e", "INTEGER")
greater_than
conjunction
add_command("C", "C", <<["e", "INTEGER"], ["c", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["d", "BOOLEAN"], ["e", "C"]>>)
add_call_chain(<<A,C,C>>)
less_than
equals
add_command("D", "e", <<["c", "D"], ["b", "a"], ["b", "INTEGER"], ["a", "a"], ["D", "BOOLEAN"]>>)
subtraction
int_value (36)
int_value (41)
disjunction
modulo
logical_negation
type_check
int_value (4)
add_query("d", "b", <<["b", "INTEGER"], ["c", "BOOLEAN"], ["A", "A"], ["B", "BOOLEAN"], ["INTEGER", "INTEGER"]>>, "c")
bool_value (true)
add_call_chain(<<a,D,C,e,INTEGER>>)
add_attribute("e", "C", "D")
add_command("d", "b", <<["D", "BOOLEAN"], ["A", "A"], ["d", "e"], ["A", "b"]>>)
int_value (42)
add_call_chain(<<c,e,c,d,D,B,b,d,c>>)
add_class(D)
add_class(C)
add_attribute("B", "d", "a")
int_value (49)
add_call_chain(<<e,A,C,D,d,e>>)
add_call_chain(<<c,C,BOOLEAN,e,D,C,b>>)
add_command("a", "INTEGER", <<["e", "BOOLEAN"], ["C", "INTEGER"], ["D", "B"], ["c", "INTEGER"], ["D", "D"]>>)
add_call_chain(<<A,c,C>>)
add_attribute("b", "D", "INTEGER")
add_command("D", "b", <<["D", "BOOLEAN"], ["A", "c"], ["d", "BOOLEAN"], ["A", "INTEGER"], ["INTEGER", "INTEGER"], ["d", "BOOLEAN"], ["C", "B"]>>)
add_command("A", "d", <<["e", "BOOLEAN"], ["A", "INTEGER"]>>)
add_query("a", "INTEGER", <<["B", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "D"], ["A", "A"], ["d", "INTEGER"], ["A", "INTEGER"], ["B", "INTEGER"], ["C", "INTEGER"], ["B", "BOOLEAN"]>>, "e")
add_attribute("c", "a", "INTEGER")
add_attribute("e", "d", "BOOLEAN")
multiplication
type_check
type_check
type_check
generate_java_code
numerical_negation
numerical_negation
add_attribute("d", "INTEGER", "BOOLEAN")
add_query("INTEGER", "d", <<["a", "BOOLEAN"]>>, "a")
add_call_chain(<<c,a,C,e,D,INTEGER,BOOLEAN,A>>)
add_query("e", "A", <<["a", "D"], ["b", "e"], ["A", "INTEGER"], ["D", "INTEGER"]>>, "B")
bool_value (true)
add_attribute("e", "B", "INTEGER")
conjunction
add_call_chain(<<e,c,B,e>>)
add_query("C", "INTEGER", <<["C", "d"], ["B", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "INTEGER"]>>, "INTEGER")
disjunction
add_query("B", "B", <<["a", "BOOLEAN"]>>, "INTEGER")
conjunction
add_class(c)
add_query("c", "B", <<["D", "INTEGER"], ["c", "BOOLEAN"], ["D", "INTEGER"], ["a", "BOOLEAN"], ["A", "BOOLEAN"]>>, "d")
logical_negation
add_call_chain(<<e,c,a,c,e,BOOLEAN>>)
add_call_chain(<<b,B,b,a,A,b>>)
add_call_chain(<<INTEGER,C,d,D,c>>)
add_call_chain(<<b,c,e,e,B,a,c,a>>)
type_check
add_class(C)
add_attribute("d", "BOOLEAN", "b")
add_call_chain(<<b,c>>)
numerical_negation
type_check
add_query("B", "e", <<["D", "b"]>>, "c")
add_call_chain(<<d,INTEGER,C>>)
add_query("D", "INTEGER", <<["D", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["BOOLEAN", "INTEGER"], ["e", "INTEGER"], ["d", "INTEGER"], ["d", "INTEGER"], ["D", "A"], ["C", "BOOLEAN"]>>, "D")
add_command("b", "e", <<["a", "INTEGER"], ["e", "INTEGER"], ["B", "D"], ["C", "BOOLEAN"], ["b", "INTEGER"]>>)
modulo
bool_value (true)
add_class(B)
add_query("BOOLEAN", "c", <<["e", "INTEGER"], ["A", "BOOLEAN"]>>, "e")
add_call_chain(<<a,e,c,D>>)
greater_than
bool_value (false)
add_command("INTEGER", "c", <<["BOOLEAN", "BOOLEAN"], ["B", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["INTEGER", "INTEGER"], ["D", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "C"], ["a", "A"], ["C", "BOOLEAN"]>>)
logical_negation
add_query("D", "A", <<["b", "a"], ["a", "BOOLEAN"], ["a", "A"]>>, "INTEGER")
numerical_negation
add_call_chain(<<A,C,D,B,e,e>>)
conjunction
subtraction
add_command("d", "d", <<["D", "BOOLEAN"], ["e", "INTEGER"]>>)
generate_java_code
bool_value (true)
add_query("b", "B", <<["INTEGER", "c"], ["b", "BOOLEAN"], ["b", "e"], ["a", "BOOLEAN"], ["b", "e"]>>, "A")
add_call_chain(<<INTEGER,INTEGER,D,B,b,d,b>>)
add_attribute("e", "C", "b")
add_attribute("BOOLEAN", "a", "C")
add_command("C", "d", <<["BOOLEAN", "INTEGER"], ["A", "BOOLEAN"]>>)
add_call_chain(<<INTEGER>>)
numerical_negation
less_than
type_check
disjunction
add_attribute("b", "INTEGER", "B")
int_value (5)
add_call_chain(<<c,C,A,C,c,d,d>>)
add_call_chain(<<A>>)
quotient
numerical_negation
add_command("D", "B", <<["B", "INTEGER"], ["C", "INTEGER"], ["B", "B"], ["a", "BOOLEAN"], ["INTEGER", "INTEGER"], ["B", "C"], ["INTEGER", "BOOLEAN"], ["D", "INTEGER"], ["e", "BOOLEAN"]>>)
add_call_chain(<<A,b,D,A>>)
add_class(c)
add_call_chain(<<A,D,c,b>>)
add_call_chain(<<B,e,C,b,d,B,b,e,C>>)
add_call_chain(<<a>>)
add_command("a", "B", <<["d", "BOOLEAN"], ["A", "INTEGER"], ["a", "B"], ["c", "INTEGER"], ["d", "INTEGER"], ["D", "INTEGER"]>>)
numerical_negation
equals
add_call_chain(<<e,A>>)
bool_value (false)
add_attribute("C", "C", "INTEGER")
numerical_negation
add_command("A", "B", <<["c", "A"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["b", "BOOLEAN"], ["a", "b"]>>)
subtraction
add_command("D", "A", <<["INTEGER", "INTEGER"], ["A", "BOOLEAN"], ["c", "b"], ["A", "C"], ["c", "BOOLEAN"], ["d", "A"]>>)
logical_negation
numerical_negation
add_call_chain(<<e>>)
numerical_negation
add_attribute("e", "e", "c")
type_check
conjunction
add_call_chain(<<C,C>>)
bool_value (false)
add_attribute("b", "B", "BOOLEAN")
type_check
add_call_chain(<<A,D,a,c,a,c,B,b,e>>)
add_call_chain(<<b,e,B,d,D,c>>)
add_class(D)
add_command("BOOLEAN", "c", <<["D", "INTEGER"], ["C", "INTEGER"], ["c", "B"], ["C", "INTEGER"], ["e", "INTEGER"], ["e", "BOOLEAN"], ["c", "INTEGER"]>>)
add_query("b", "A", <<["C", "INTEGER"], ["b", "b"], ["d", "BOOLEAN"], ["c", "BOOLEAN"]>>, "C")
add_query("d", "e", <<["A", "a"], ["e", "INTEGER"], ["INTEGER", "BOOLEAN"], ["d", "INTEGER"], ["a", "INTEGER"], ["B", "B"], ["D", "INTEGER"], ["A", "BOOLEAN"]>>, "A")
add_command("a", "d", <<["INTEGER", "BOOLEAN"], ["INTEGER", "INTEGER"], ["b", "INTEGER"], ["a", "b"], ["INTEGER", "d"], ["D", "BOOLEAN"], ["B", "BOOLEAN"]>>)
numerical_negation
type_check
add_query("a", "d", <<["e", "BOOLEAN"], ["d", "INTEGER"], ["c", "A"], ["D", "BOOLEAN"], ["D", "B"]>>, "a")
bool_value (true)
type_check
add_attribute("d", "D", "INTEGER")
equals
numerical_negation
bool_value (true)
logical_negation
type_check
int_value (48)
bool_value (true)
logical_negation
numerical_negation
add_call_chain(<<BOOLEAN,b,INTEGER>>)
quotient
numerical_negation
add_class(a)
add_call_chain(<<e,a,b,D,d,e,e,C,B>>)
type_check
bool_value (false)
add_attribute("c", "B", "INTEGER")
add_class(BOOLEAN)
greater_than
greater_than
add_call_chain(<<c,e>>)
numerical_negation
add_call_chain(<<a>>)
add_query("c", "D", <<["D", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "BOOLEAN"], ["INTEGER", "INTEGER"], ["b", "e"], ["a", "BOOLEAN"], ["INTEGER", "INTEGER"], ["e", "INTEGER"]>>, "C")
add_attribute("B", "d", "BOOLEAN")
generate_java_code
generate_java_code
add_query("B", "B", <<["A", "D"]>>, "A")
add_command("a", "c", <<["d", "BOOLEAN"], ["e", "d"]>>)
add_attribute("b", "INTEGER", "INTEGER")
add_attribute("a", "B", "B")
add_query("C", "B", <<["c", "a"]>>, "B")
add_query("a", "D", <<["C", "c"], ["B", "INTEGER"], ["B", "BOOLEAN"], ["e", "BOOLEAN"], ["d", "INTEGER"], ["D", "BOOLEAN"], ["b", "INTEGER"], ["INTEGER", "BOOLEAN"], ["A", "BOOLEAN"]>>, "INTEGER")
add_query("BOOLEAN", "d", <<["B", "A"], ["b", "INTEGER"], ["B", "BOOLEAN"]>>, "A")
add_query("a", "b", <<["c", "a"]>>, "D")
bool_value (false)
disjunction
numerical_negation
add_query("a", "b", <<["d", "BOOLEAN"], ["a", "INTEGER"], ["a", "INTEGER"], ["BOOLEAN", "B"], ["A", "INTEGER"], ["c", "INTEGER"], ["e", "A"]>>, "a")
bool_value (false)
add_call_chain(<<C,C,A,D,c,a>>)
add_attribute("a", "C", "BOOLEAN")
add_query("b", "B", <<["INTEGER", "INTEGER"], ["d", "INTEGER"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["e", "INTEGER"], ["C", "BOOLEAN"]>>, "C")
add_command("e", "a", <<["a", "C"], ["INTEGER", "INTEGER"], ["C", "b"], ["a", "INTEGER"], ["e", "A"], ["A", "INTEGER"]>>)
add_call_chain(<<d,D,c,e,INTEGER,d,b>>)
add_attribute("b", "d", "INTEGER")
numerical_negation
numerical_negation
add_attribute("B", "a", "INTEGER")
greater_than
int_value (12)
add_call_chain(<<BOOLEAN,d,d,a,INTEGER,A,d,d>>)
add_command("a", "e", <<["a", "a"], ["b", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "A"]>>)
less_than
add_attribute("B", "c", "INTEGER")
add_call_chain(<<b>>)
generate_java_code
numerical_negation
int_value (8)
add_attribute("B", "d", "c")
int_value (39)
generate_java_code
numerical_negation
add_class(A)
add_query("C", "d", <<["a", "BOOLEAN"], ["c", "INTEGER"], ["B", "INTEGER"], ["C", "c"], ["a", "BOOLEAN"], ["A", "c"], ["BOOLEAN", "BOOLEAN"], ["c", "INTEGER"]>>, "d")
int_value (39)
generate_java_code
greater_than
add_attribute("BOOLEAN", "C", "b")
conjunction
add_class(d)
equals
add_command("b", "a", <<["B", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "INTEGER"], ["D", "D"], ["c", "INTEGER"], ["D", "D"]>>)
bool_value (false)
add_call_chain(<<c,e,d>>)
add_class(B)
add_call_chain(<<d,B,B>>)
add_call_chain(<<D,b,A,B,C,C>>)
multiplication
bool_value (true)
add_call_chain(<<BOOLEAN,INTEGER>>)
add_call_chain(<<a,BOOLEAN,c,e,a,B,D>>)
logical_negation
add_command("D", "C", <<["INTEGER", "c"], ["b", "INTEGER"], ["e", "BOOLEAN"], ["c", "c"], ["INTEGER", "BOOLEAN"]>>)
add_query("d", "A", <<["B", "INTEGER"], ["e", "c"]>>, "BOOLEAN")
int_value (49)
type_check
generate_java_code
generate_java_code
numerical_negation
add_command("B", "d", <<["B", "BOOLEAN"], ["INTEGER", "INTEGER"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["c", "INTEGER"], ["C", "B"]>>)
less_than
add_query("B", "D", <<["B", "c"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["INTEGER", "BOOLEAN"]>>, "B")
subtraction
