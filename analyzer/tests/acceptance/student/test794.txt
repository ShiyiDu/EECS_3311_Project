int_value (13)
add_query("B", "c", <<["b", "BOOLEAN"], ["A", "D"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "d"], ["a", "BOOLEAN"], ["C", "b"], ["INTEGER", "b"]>>, "D")
add_command("BOOLEAN", "C", <<["C", "c"], ["C", "A"], ["D", "INTEGER"], ["INTEGER", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "INTEGER"], ["e", "INTEGER"]>>)
int_value (22)
int_value (31)
subtraction
logical_negation
conjunction
logical_negation
int_value (15)
numerical_negation
add_command("D", "d", <<["A", "INTEGER"], ["B", "INTEGER"], ["D", "INTEGER"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["c", "BOOLEAN"]>>)
add_command("C", "INTEGER", <<["A", "BOOLEAN"], ["A", "d"], ["BOOLEAN", "BOOLEAN"], ["b", "D"], ["c", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "BOOLEAN"]>>)
add_call_chain(<<a,BOOLEAN,c>>)
generate_java_code
generate_java_code
int_value (1)
less_than
multiplication
add_command("C", "B", <<["C", "INTEGER"], ["D", "B"], ["B", "INTEGER"]>>)
addition
addition
logical_negation
bool_value (true)
multiplication
add_command("a", "e", <<["B", "BOOLEAN"]>>)
add_query("d", "C", <<["B", "INTEGER"], ["a", "BOOLEAN"], ["D", "D"], ["C", "c"], ["C", "BOOLEAN"], ["INTEGER", "INTEGER"]>>, "a")
add_attribute("e", "d", "c")
bool_value (false)
int_value (49)
int_value (14)
add_query("c", "b", <<["A", "INTEGER"], ["b", "BOOLEAN"], ["a", "BOOLEAN"], ["INTEGER", "A"], ["B", "BOOLEAN"], ["d", "BOOLEAN"]>>, "A")
add_attribute("D", "C", "a")
bool_value (false)
int_value (40)
add_query("BOOLEAN", "C", <<["e", "D"], ["A", "INTEGER"], ["d", "a"], ["C", "INTEGER"], ["e", "BOOLEAN"], ["c", "INTEGER"], ["e", "BOOLEAN"], ["D", "BOOLEAN"]>>, "e")
add_call_chain(<<B,A,C,BOOLEAN,B,D,A>>)
less_than
numerical_negation
generate_java_code
add_attribute("A", "e", "e")
add_attribute("BOOLEAN", "e", "BOOLEAN")
bool_value (true)
logical_negation
add_attribute("a", "A", "D")
bool_value (true)
greater_than
less_than
logical_negation
add_command("a", "a", <<["D", "C"], ["b", "INTEGER"], ["BOOLEAN", "INTEGER"], ["c", "e"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["B", "c"]>>)
disjunction
add_query("B", "b", <<["b", "BOOLEAN"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["C", "INTEGER"], ["A", "INTEGER"], ["a", "INTEGER"], ["b", "INTEGER"]>>, "d")
int_value (6)
int_value (33)
add_call_chain(<<D,BOOLEAN>>)
add_attribute("e", "e", "INTEGER")
add_command("A", "INTEGER", <<["C", "BOOLEAN"], ["B", "A"], ["B", "A"], ["D", "BOOLEAN"], ["c", "INTEGER"], ["C", "a"]>>)
add_command("e", "BOOLEAN", <<["BOOLEAN", "b"], ["C", "a"], ["b", "A"], ["c", "BOOLEAN"], ["d", "INTEGER"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["a", "e"]>>)
add_command("BOOLEAN", "A", <<["e", "B"], ["a", "C"], ["d", "INTEGER"], ["b", "A"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["c", "BOOLEAN"]>>)
add_attribute("a", "c", "BOOLEAN")
add_call_chain(<<D>>)
add_call_chain(<<a,C,c,d,e>>)
add_call_chain(<<d,BOOLEAN,e,D,a>>)
bool_value (false)
numerical_negation
add_call_chain(<<B,C,b>>)
add_command("B", "INTEGER", <<["d", "BOOLEAN"], ["a", "INTEGER"], ["d", "INTEGER"], ["e", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "b"], ["B", "a"], ["A", "INTEGER"]>>)
conjunction
add_call_chain(<<B>>)
add_class(c)
numerical_negation
conjunction
bool_value (true)
add_command("c", "C", <<["D", "BOOLEAN"], ["e", "A"], ["a", "B"], ["B", "BOOLEAN"]>>)
int_value (11)
add_command("D", "C", <<["INTEGER", "INTEGER"], ["D", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "INTEGER"], ["A", "A"], ["a", "BOOLEAN"], ["D", "BOOLEAN"]>>)
add_attribute("B", "a", "d")
add_call_chain(<<A,c,e,c,A,C,a,INTEGER,INTEGER>>)
add_call_chain(<<BOOLEAN,D>>)
generate_java_code
numerical_negation
generate_java_code
equals
add_query("e", "e", <<["D", "BOOLEAN"], ["c", "INTEGER"], ["b", "C"], ["c", "INTEGER"], ["c", "b"]>>, "e")
bool_value (true)
add_call_chain(<<B,d,c,c,C,b>>)
add_call_chain(<<BOOLEAN,b,c,B,B,d,INTEGER,INTEGER>>)
add_attribute("C", "d", "c")
int_value (14)
equals
add_command("B", "d", <<["C", "a"], ["D", "INTEGER"]>>)
logical_negation
bool_value (false)
modulo
add_call_chain(<<A,c>>)
logical_negation
add_call_chain(<<D,d,d,INTEGER,A,A,c>>)
numerical_negation
bool_value (true)
add_class(C)
bool_value (false)
int_value (3)
bool_value (true)
add_call_chain(<<b,BOOLEAN,a>>)
less_than
numerical_negation
type_check
disjunction
generate_java_code
greater_than
add_attribute("d", "C", "d")
add_command("c", "d", <<["b", "BOOLEAN"], ["b", "INTEGER"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "BOOLEAN"], ["c", "e"], ["b", "e"]>>)
add_command("a", "d", <<["a", "D"], ["a", "INTEGER"], ["A", "BOOLEAN"], ["D", "C"], ["d", "INTEGER"], ["A", "INTEGER"], ["B", "b"], ["d", "INTEGER"], ["a", "INTEGER"]>>)
add_call_chain(<<A,d,A,e,b>>)
add_call_chain(<<A>>)
add_command("e", "b", <<["c", "INTEGER"], ["c", "BOOLEAN"], ["C", "e"], ["A", "b"], ["c", "D"], ["A", "INTEGER"], ["a", "BOOLEAN"], ["d", "INTEGER"], ["C", "INTEGER"]>>)
add_attribute("B", "b", "BOOLEAN")
add_command("INTEGER", "b", <<["b", "BOOLEAN"]>>)
add_query("e", "D", <<["B", "BOOLEAN"]>>, "B")
add_class(A)
add_call_chain(<<A,b,e,A,B,b,BOOLEAN>>)
generate_java_code
equals
greater_than
add_class(b)
bool_value (false)
add_attribute("b", "e", "A")
bool_value (false)
add_query("b", "b", <<["c", "b"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["BOOLEAN", "INTEGER"], ["INTEGER", "INTEGER"], ["BOOLEAN", "INTEGER"], ["e", "c"], ["A", "BOOLEAN"], ["e", "INTEGER"]>>, "b")
add_query("D", "D", <<["C", "BOOLEAN"], ["e", "INTEGER"], ["A", "INTEGER"], ["INTEGER", "B"]>>, "c")
numerical_negation
add_class(d)
add_call_chain(<<e,d,A>>)
add_query("D", "d", <<["d", "BOOLEAN"], ["A", "BOOLEAN"], ["INTEGER", "INTEGER"], ["A", "INTEGER"], ["C", "INTEGER"], ["b", "BOOLEAN"]>>, "d")
add_call_chain(<<A,c,D>>)
add_call_chain(<<e,C,B,C,D,D,A,INTEGER>>)
add_class(B)
bool_value (false)
numerical_negation
add_call_chain(<<b,e,b>>)
add_query("D", "a", <<["BOOLEAN", "D"], ["BOOLEAN", "INTEGER"], ["B", "D"], ["A", "e"], ["C", "INTEGER"], ["B", "D"]>>, "A")
int_value (15)
type_check
bool_value (false)
add_attribute("INTEGER", "e", "INTEGER")
add_class(BOOLEAN)
add_query("INTEGER", "d", <<["d", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "INTEGER"], ["INTEGER", "INTEGER"], ["C", "INTEGER"], ["D", "d"]>>, "A")
add_query("b", "C", <<["c", "INTEGER"], ["b", "BOOLEAN"], ["D", "BOOLEAN"], ["d", "A"], ["c", "C"], ["C", "INTEGER"], ["a", "INTEGER"], ["A", "BOOLEAN"]>>, "A")
add_query("c", "BOOLEAN", <<["B", "BOOLEAN"], ["C", "D"], ["d", "BOOLEAN"], ["a", "INTEGER"], ["c", "INTEGER"], ["A", "INTEGER"], ["A", "INTEGER"]>>, "A")
numerical_negation
logical_negation
add_attribute("B", "D", "INTEGER")
generate_java_code
add_class(c)
logical_negation
equals
add_class(A)
add_command("a", "B", <<["B", "A"], ["D", "BOOLEAN"]>>)
add_attribute("b", "C", "BOOLEAN")
disjunction
less_than
add_query("C", "C", <<["A", "INTEGER"], ["C", "INTEGER"], ["D", "INTEGER"], ["C", "d"], ["A", "BOOLEAN"]>>, "e")
add_attribute("b", "b", "INTEGER")
add_call_chain(<<e,INTEGER,D>>)
add_call_chain(<<a,BOOLEAN,B,B,a,b,d>>)
conjunction
add_command("e", "b", <<["C", "D"], ["c", "D"], ["D", "a"]>>)
conjunction
add_call_chain(<<B,A,BOOLEAN,c,D>>)
add_call_chain(<<B,a,B,D,B,A,a,D,B>>)
logical_negation
numerical_negation
add_command("D", "a", <<["c", "B"], ["a", "BOOLEAN"], ["INTEGER", "INTEGER"], ["d", "INTEGER"], ["a", "BOOLEAN"]>>)
bool_value (true)
logical_negation
addition
logical_negation
add_command("BOOLEAN", "c", <<["d", "BOOLEAN"], ["C", "a"]>>)
disjunction
logical_negation
add_call_chain(<<B,C>>)
add_attribute("B", "c", "BOOLEAN")
add_class(A)
type_check
bool_value (true)
add_attribute("C", "b", "c")
type_check
type_check
type_check
numerical_negation
add_query("b", "INTEGER", <<["e", "INTEGER"], ["a", "BOOLEAN"]>>, "C")
add_query("A", "d", <<["b", "INTEGER"], ["C", "INTEGER"], ["INTEGER", "INTEGER"], ["e", "C"], ["B", "BOOLEAN"]>>, "d")
add_call_chain(<<a,D>>)
conjunction
add_query("D", "a", <<["b", "INTEGER"], ["C", "B"], ["INTEGER", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "INTEGER"], ["A", "BOOLEAN"]>>, "D")
int_value (20)
add_class(a)
add_command("C", "C", <<["d", "INTEGER"], ["e", "C"], ["INTEGER", "INTEGER"], ["a", "A"], ["B", "INTEGER"], ["D", "b"]>>)
add_call_chain(<<e,e,a,A,A,C>>)
add_query("B", "C", <<["c", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["C", "A"], ["d", "b"], ["c", "INTEGER"]>>, "e")
add_call_chain(<<C,B,e,C,B,D,C>>)
add_query("B", "a", <<["b", "C"], ["d", "b"], ["D", "INTEGER"], ["B", "BOOLEAN"], ["B", "INTEGER"], ["c", "BOOLEAN"]>>, "a")
add_call_chain(<<A,b,a>>)
int_value (12)
logical_negation
add_command("b", "INTEGER", <<["BOOLEAN", "INTEGER"], ["e", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "BOOLEAN"]>>)
numerical_negation
bool_value (false)
add_command("e", "A", <<["b", "BOOLEAN"], ["C", "INTEGER"], ["A", "b"], ["D", "INTEGER"], ["D", "d"], ["d", "INTEGER"]>>)
add_call_chain(<<A,B>>)
int_value (14)
add_call_chain(<<A,e,B,A,b,BOOLEAN,c>>)
int_value (36)
logical_negation
numerical_negation
add_command("d", "e", <<["d", "BOOLEAN"], ["a", "INTEGER"], ["b", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "BOOLEAN"]>>)
int_value (1)
