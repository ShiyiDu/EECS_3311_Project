add_query("B", "B", <<["BOOLEAN", "BOOLEAN"]>>, "c")
addition
add_command("b", "d", <<["D", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "c"], ["C", "C"]>>)
quotient
add_command("A", "C", <<["INTEGER", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["D", "c"]>>)
add_call_chain(<<D,BOOLEAN,B,d>>)
type_check
equals
add_call_chain(<<C,C,BOOLEAN,B,C,B,B,b,a>>)
add_class(C)
add_query("INTEGER", "d", <<["B", "INTEGER"], ["c", "BOOLEAN"], ["d", "BOOLEAN"]>>, "B")
conjunction
bool_value (true)
add_call_chain(<<C,A,INTEGER,A,a,c,b>>)
generate_java_code
add_call_chain(<<c,B>>)
equals
generate_java_code
add_call_chain(<<D,D,a,b>>)
add_command("a", "c", <<["d", "INTEGER"], ["d", "INTEGER"], ["e", "INTEGER"], ["INTEGER", "INTEGER"], ["d", "BOOLEAN"], ["a", "BOOLEAN"]>>)
add_attribute("D", "C", "INTEGER")
addition
add_class(B)
logical_negation
bool_value (true)
int_value (39)
add_query("INTEGER", "c", <<["C", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "A"], ["c", "BOOLEAN"], ["d", "B"]>>, "D")
add_query("A", "a", <<["a", "d"], ["a", "BOOLEAN"], ["B", "d"], ["D", "INTEGER"], ["B", "A"]>>, "a")
numerical_negation
add_command("B", "e", <<["B", "d"], ["B", "BOOLEAN"], ["B", "A"], ["b", "d"], ["a", "BOOLEAN"], ["A", "BOOLEAN"]>>)
logical_negation
add_call_chain(<<C>>)
add_query("C", "a", <<["D", "INTEGER"], ["a", "INTEGER"], ["B", "BOOLEAN"], ["c", "A"], ["a", "INTEGER"], ["e", "INTEGER"], ["c", "BOOLEAN"], ["b", "BOOLEAN"]>>, "B")
bool_value (false)
int_value (9)
type_check
add_query("d", "b", <<["a", "BOOLEAN"], ["b", "INTEGER"], ["B", "c"], ["INTEGER", "D"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["D", "e"]>>, "D")
add_query("e", "INTEGER", <<["C", "BOOLEAN"], ["d", "C"], ["a", "INTEGER"], ["b", "e"], ["e", "BOOLEAN"]>>, "c")
int_value (29)
add_query("A", "C", <<["BOOLEAN", "INTEGER"]>>, "D")
type_check
int_value (45)
logical_negation
add_call_chain(<<e,a>>)
bool_value (true)
add_attribute("a", "INTEGER", "BOOLEAN")
bool_value (true)
add_query("D", "b", <<["B", "C"], ["BOOLEAN", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["b", "INTEGER"], ["d", "A"]>>, "C")
bool_value (false)
add_attribute("c", "A", "A")
greater_than
addition
add_call_chain(<<B,B,c,INTEGER,BOOLEAN,c,e>>)
add_command("c", "B", <<["c", "INTEGER"]>>)
disjunction
disjunction
add_attribute("INTEGER", "b", "b")
less_than
numerical_negation
add_call_chain(<<b>>)
greater_than
add_call_chain(<<c,BOOLEAN,A,BOOLEAN>>)
add_call_chain(<<a,e,e,d,D,A>>)
add_query("INTEGER", "e", <<["b", "B"]>>, "C")
int_value (22)
add_command("e", "c", <<["a", "BOOLEAN"], ["e", "INTEGER"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["c", "INTEGER"], ["C", "INTEGER"], ["B", "BOOLEAN"]>>)
conjunction
numerical_negation
add_attribute("D", "D", "B")
numerical_negation
add_query("a", "INTEGER", <<["c", "BOOLEAN"], ["C", "INTEGER"], ["e", "INTEGER"], ["A", "BOOLEAN"], ["C", "B"], ["b", "INTEGER"], ["A", "INTEGER"], ["a", "BOOLEAN"]>>, "C")
add_query("A", "D", <<["BOOLEAN", "A"]>>, "A")
add_query("b", "A", <<["b", "INTEGER"], ["b", "BOOLEAN"], ["B", "D"], ["B", "INTEGER"], ["C", "BOOLEAN"]>>, "d")
add_query("D", "d", <<["C", "INTEGER"], ["INTEGER", "INTEGER"], ["b", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["b", "BOOLEAN"], ["c", "INTEGER"]>>, "A")
disjunction
type_check
logical_negation
generate_java_code
conjunction
generate_java_code
quotient
add_command("d", "a", <<["B", "INTEGER"], ["b", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "INTEGER"], ["d", "INTEGER"], ["a", "C"]>>)
add_query("INTEGER", "e", <<["d", "c"], ["INTEGER", "INTEGER"]>>, "c")
add_call_chain(<<A,a,D,e,c,B>>)
add_command("b", "e", <<["c", "d"], ["a", "INTEGER"], ["D", "d"], ["B", "d"], ["d", "INTEGER"], ["A", "BOOLEAN"], ["d", "INTEGER"]>>)
bool_value (true)
add_query("C", "c", <<["d", "BOOLEAN"], ["A", "INTEGER"], ["d", "INTEGER"], ["D", "D"], ["INTEGER", "b"]>>, "B")
add_call_chain(<<a>>)
generate_java_code
bool_value (false)
add_attribute("c", "C", "INTEGER")
add_call_chain(<<A,C,B,a,D>>)
disjunction
add_attribute("D", "D", "BOOLEAN")
logical_negation
logical_negation
bool_value (false)
generate_java_code
numerical_negation
int_value (12)
add_call_chain(<<INTEGER,INTEGER,d,b,D>>)
add_call_chain(<<b,c,INTEGER>>)
add_attribute("C", "d", "BOOLEAN")
type_check
add_call_chain(<<BOOLEAN,B>>)
type_check
generate_java_code
type_check
add_attribute("C", "B", "D")
addition
add_command("A", "c", <<["INTEGER", "a"], ["A", "INTEGER"], ["c", "INTEGER"], ["a", "a"]>>)
int_value (38)
bool_value (true)
numerical_negation
generate_java_code
add_command("C", "a", <<["BOOLEAN", "BOOLEAN"], ["d", "BOOLEAN"], ["b", "B"], ["c", "BOOLEAN"], ["C", "INTEGER"], ["B", "c"], ["b", "BOOLEAN"], ["B", "D"], ["C", "a"]>>)
numerical_negation
greater_than
equals
add_call_chain(<<a,A,A,D,a,A>>)
generate_java_code
type_check
add_attribute("B", "INTEGER", "INTEGER")
add_call_chain(<<A,e,D>>)
add_call_chain(<<e,A,b,a,D>>)
add_call_chain(<<BOOLEAN,INTEGER,d,B,C>>)
int_value (1)
add_attribute("e", "C", "d")
logical_negation
add_query("INTEGER", "e", <<["D", "B"], ["a", "b"], ["D", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "BOOLEAN"]>>, "c")
add_query("c", "INTEGER", <<["d", "BOOLEAN"], ["c", "C"], ["C", "BOOLEAN"]>>, "D")
addition
add_attribute("B", "C", "e")
numerical_negation
logical_negation
add_query("D", "D", <<["a", "INTEGER"], ["b", "BOOLEAN"]>>, "C")
add_class(C)
generate_java_code
bool_value (false)
type_check
add_call_chain(<<b>>)
add_attribute("b", "A", "b")
add_class(e)
add_attribute("A", "a", "BOOLEAN")
generate_java_code
type_check
add_query("c", "d", <<["D", "D"]>>, "A")
int_value (47)
add_command("b", "INTEGER", <<["BOOLEAN", "INTEGER"], ["BOOLEAN", "INTEGER"], ["a", "BOOLEAN"]>>)
add_call_chain(<<A,b,c>>)
disjunction
add_call_chain(<<INTEGER,BOOLEAN,e,C,D,C,D,B,A>>)
logical_negation
multiplication
add_query("a", "INTEGER", <<["D", "BOOLEAN"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["c", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["B", "BOOLEAN"], ["A", "A"], ["A", "BOOLEAN"]>>, "B")
add_call_chain(<<b,D,b,B,A,b>>)
type_check
logical_negation
logical_negation
add_call_chain(<<e,a,D,B,b,B,e,a,INTEGER>>)
generate_java_code
add_class(e)
type_check
type_check
add_call_chain(<<A,C,e>>)
add_query("a", "C", <<["a", "INTEGER"], ["e", "INTEGER"], ["A", "INTEGER"], ["A", "B"], ["e", "B"], ["b", "INTEGER"], ["C", "A"]>>, "a")
bool_value (false)
add_call_chain(<<b,b,d,e,b,a>>)
bool_value (true)
add_attribute("A", "b", "BOOLEAN")
bool_value (false)
bool_value (false)
logical_negation
numerical_negation
type_check
type_check
add_call_chain(<<c,e,B,C,INTEGER,b,A,D>>)
type_check
add_call_chain(<<B,C,A,BOOLEAN,B,BOOLEAN>>)
add_command("B", "a", <<["d", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "INTEGER"]>>)
add_attribute("a", "C", "BOOLEAN")
int_value (44)
add_call_chain(<<BOOLEAN,a,b>>)
type_check
numerical_negation
add_command("C", "b", <<["B", "BOOLEAN"], ["b", "INTEGER"], ["A", "INTEGER"], ["c", "A"], ["e", "INTEGER"]>>)
less_than
less_than
conjunction
equals
add_query("d", "b", <<["c", "b"], ["a", "BOOLEAN"], ["e", "INTEGER"], ["a", "INTEGER"]>>, "INTEGER")
add_call_chain(<<d,C,D,d,e,a>>)
add_class(A)
bool_value (false)
add_class(B)
int_value (29)
bool_value (true)
add_attribute("d", "D", "INTEGER")
add_command("B", "e", <<["INTEGER", "INTEGER"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["c", "INTEGER"], ["b", "INTEGER"]>>)
generate_java_code
add_query("A", "c", <<["d", "INTEGER"], ["a", "INTEGER"], ["BOOLEAN", "a"], ["d", "INTEGER"], ["C", "INTEGER"], ["C", "INTEGER"], ["b", "BOOLEAN"], ["D", "INTEGER"]>>, "D")
add_call_chain(<<c,c,INTEGER,d,c,D,b,B,B>>)
add_call_chain(<<c,D,e,a,c,C,e,INTEGER>>)
conjunction
add_command("c", "A", <<["e", "INTEGER"], ["d", "INTEGER"], ["a", "b"]>>)
bool_value (true)
bool_value (true)
add_attribute("d", "D", "B")
add_call_chain(<<c,D,a,C,c,e,e,e,a>>)
numerical_negation
logical_negation
int_value (8)
add_class(b)
add_command("a", "A", <<["a", "a"], ["e", "INTEGER"]>>)
conjunction
add_command("a", "C", <<["BOOLEAN", "BOOLEAN"], ["c", "BOOLEAN"]>>)
logical_negation
