add_query("a", "c", <<["c", "INTEGER"], ["c", "e"], ["D", "INTEGER"], ["e", "A"], ["BOOLEAN", "b"]>>, "a")
generate_java_code
int_value (11)
logical_negation
int_value (42)
bool_value (false)
greater_than
greater_than
logical_negation
int_value (31)
int_value (18)
add_call_chain(<<d,A,e>>)
add_command("e", "D", <<["e", "B"], ["e", "INTEGER"], ["e", "BOOLEAN"], ["BOOLEAN", "d"], ["a", "BOOLEAN"], ["e", "BOOLEAN"], ["a", "INTEGER"]>>)
add_attribute("D", "A", "BOOLEAN")
add_attribute("a", "C", "BOOLEAN")
generate_java_code
add_query("e", "C", <<["c", "C"], ["C", "INTEGER"]>>, "D")
add_command("D", "d", <<["c", "D"], ["a", "INTEGER"]>>)
conjunction
int_value (6)
add_attribute("e", "c", "BOOLEAN")
numerical_negation
add_query("a", "d", <<["C", "a"], ["e", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "INTEGER"], ["d", "INTEGER"], ["C", "BOOLEAN"]>>, "B")
logical_negation
add_call_chain(<<C>>)
numerical_negation
add_attribute("a", "INTEGER", "BOOLEAN")
generate_java_code
add_class(INTEGER)
numerical_negation
add_query("e", "c", <<["A", "INTEGER"]>>, "D")
add_query("c", "D", <<["A", "D"], ["A", "BOOLEAN"], ["B", "b"], ["D", "INTEGER"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["A", "b"], ["e", "D"]>>, "b")
add_call_chain(<<a>>)
type_check
bool_value (true)
type_check
add_call_chain(<<B,B,e,C>>)
add_query("INTEGER", "e", <<["A", "BOOLEAN"]>>, "D")
add_call_chain(<<BOOLEAN,a,D,b,a,A>>)
int_value (17)
add_class(b)
add_class(BOOLEAN)
add_query("BOOLEAN", "B", <<["e", "INTEGER"], ["C", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["C", "D"], ["B", "INTEGER"]>>, "D")
add_attribute("d", "e", "a")
add_attribute("A", "A", "BOOLEAN")
add_call_chain(<<a,e,C,B,BOOLEAN,b,d,d>>)
add_attribute("a", "e", "INTEGER")
add_call_chain(<<B,BOOLEAN>>)
int_value (7)
add_attribute("a", "c", "BOOLEAN")
conjunction
add_query("b", "A", <<["d", "BOOLEAN"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["c", "BOOLEAN"]>>, "INTEGER")
add_attribute("a", "e", "INTEGER")
generate_java_code
add_call_chain(<<e,a>>)
modulo
add_attribute("a", "D", "INTEGER")
add_attribute("a", "c", "INTEGER")
add_attribute("b", "c", "INTEGER")
less_than
add_attribute("d", "D", "b")
disjunction
bool_value (false)
type_check
add_call_chain(<<D,b,A,d,C,c,d>>)
add_command("B", "e", <<["D", "INTEGER"], ["d", "a"], ["B", "BOOLEAN"], ["D", "C"], ["C", "e"], ["C", "INTEGER"], ["e", "BOOLEAN"], ["a", "BOOLEAN"]>>)
add_class(d)
equals
type_check
equals
add_command("INTEGER", "d", <<["A", "BOOLEAN"], ["C", "INTEGER"], ["D", "c"]>>)
add_class(e)
bool_value (false)
add_command("D", "c", <<["e", "INTEGER"], ["b", "BOOLEAN"], ["a", "C"], ["b", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "D"]>>)
int_value (46)
add_call_chain(<<C,B,A,B,A,B>>)
add_class(B)
add_call_chain(<<c,B>>)
int_value (20)
subtraction
logical_negation
generate_java_code
add_call_chain(<<c>>)
equals
modulo
add_class(BOOLEAN)
subtraction
add_command("b", "b", <<["A", "BOOLEAN"], ["C", "INTEGER"], ["c", "BOOLEAN"], ["B", "C"], ["B", "INTEGER"], ["D", "INTEGER"]>>)
add_call_chain(<<b>>)
add_attribute("C", "c", "BOOLEAN")
add_command("c", "d", <<["c", "BOOLEAN"], ["e", "INTEGER"], ["c", "C"], ["BOOLEAN", "B"]>>)
add_query("a", "C", <<["c", "D"], ["A", "B"], ["e", "INTEGER"], ["a", "d"], ["D", "INTEGER"], ["B", "INTEGER"], ["INTEGER", "BOOLEAN"], ["e", "d"]>>, "A")
add_command("a", "C", <<["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "BOOLEAN"], ["b", "D"]>>)
int_value (43)
add_attribute("D", "D", "C")
int_value (40)
add_command("C", "B", <<["a", "INTEGER"], ["d", "INTEGER"], ["a", "INTEGER"], ["A", "d"], ["d", "INTEGER"], ["D", "INTEGER"], ["b", "A"]>>)
add_call_chain(<<b,d,B>>)
add_call_chain(<<D,a,B,b,C>>)
add_command("INTEGER", "B", <<["B", "e"], ["C", "C"], ["A", "A"], ["BOOLEAN", "BOOLEAN"], ["D", "INTEGER"], ["C", "INTEGER"], ["D", "e"]>>)
add_attribute("B", "BOOLEAN", "e")
add_query("e", "b", <<["B", "B"], ["c", "INTEGER"], ["e", "B"], ["C", "INTEGER"], ["a", "BOOLEAN"], ["C", "a"], ["D", "INTEGER"], ["c", "BOOLEAN"], ["B", "INTEGER"]>>, "b")
add_attribute("e", "C", "BOOLEAN")
logical_negation
add_call_chain(<<C,a,e,d,B>>)
numerical_negation
add_call_chain(<<C,B,b,INTEGER,D>>)
bool_value (false)
bool_value (true)
greater_than
add_call_chain(<<e,B,B>>)
int_value (33)
add_attribute("B", "b", "B")
add_call_chain(<<a,A,b>>)
add_command("a", "B", <<["B", "INTEGER"], ["A", "INTEGER"], ["b", "C"], ["D", "INTEGER"], ["d", "BOOLEAN"]>>)
add_call_chain(<<A>>)
conjunction
logical_negation
multiplication
add_command("b", "C", <<["c", "INTEGER"], ["d", "BOOLEAN"], ["c", "BOOLEAN"]>>)
bool_value (true)
int_value (41)
generate_java_code
type_check
numerical_negation
int_value (30)
bool_value (false)
type_check
add_query("a", "C", <<["e", "B"]>>, "a")
type_check
numerical_negation
type_check
modulo
type_check
add_attribute("A", "B", "INTEGER")
conjunction
add_query("a", "b", <<["B", "INTEGER"], ["BOOLEAN", "A"], ["d", "b"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["B", "B"]>>, "a")
bool_value (true)
add_call_chain(<<C,D,D,d,b,D,b>>)
add_call_chain(<<C,D>>)
add_call_chain(<<BOOLEAN,A,a,B,d>>)
add_command("b", "a", <<["D", "INTEGER"], ["B", "A"], ["c", "BOOLEAN"], ["b", "BOOLEAN"]>>)
add_query("e", "B", <<["a", "INTEGER"]>>, "A")
numerical_negation
add_class(a)
conjunction
disjunction
bool_value (false)
add_attribute("B", "D", "BOOLEAN")
add_command("b", "a", <<["b", "BOOLEAN"], ["A", "c"], ["B", "A"], ["B", "INTEGER"], ["a", "C"]>>)
bool_value (false)
int_value (7)
bool_value (false)
add_query("C", "D", <<["A", "A"], ["e", "B"], ["INTEGER", "INTEGER"]>>, "c")
add_call_chain(<<C,D,d,a,BOOLEAN,B,B,c,b>>)
generate_java_code
add_call_chain(<<C,B,A,A,INTEGER,a>>)
conjunction
add_query("c", "A", <<["B", "a"], ["D", "a"], ["BOOLEAN", "BOOLEAN"], ["INTEGER", "c"], ["d", "BOOLEAN"], ["C", "e"], ["d", "INTEGER"], ["D", "INTEGER"], ["a", "INTEGER"]>>, "e")
logical_negation
int_value (27)
greater_than
type_check
int_value (44)
add_command("C", "d", <<["d", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "c"], ["D", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["a", "INTEGER"]>>)
numerical_negation
bool_value (false)
add_attribute("BOOLEAN", "A", "BOOLEAN")
numerical_negation
add_command("B", "d", <<["a", "BOOLEAN"], ["d", "BOOLEAN"], ["e", "BOOLEAN"], ["INTEGER", "a"], ["d", "BOOLEAN"], ["D", "BOOLEAN"], ["INTEGER", "D"], ["c", "BOOLEAN"], ["c", "INTEGER"]>>)
numerical_negation
add_command("B", "A", <<["d", "INTEGER"], ["BOOLEAN", "INTEGER"], ["c", "INTEGER"], ["B", "INTEGER"], ["b", "BOOLEAN"], ["INTEGER", "INTEGER"], ["d", "BOOLEAN"], ["C", "BOOLEAN"]>>)
generate_java_code
add_command("B", "B", <<["c", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "INTEGER"], ["a", "INTEGER"], ["C", "INTEGER"], ["b", "C"], ["INTEGER", "BOOLEAN"]>>)
add_command("C", "a", <<["a", "e"], ["BOOLEAN", "INTEGER"], ["BOOLEAN", "d"], ["INTEGER", "INTEGER"], ["c", "INTEGER"], ["c", "BOOLEAN"], ["a", "B"], ["BOOLEAN", "INTEGER"], ["b", "BOOLEAN"]>>)
bool_value (true)
add_class(b)
add_call_chain(<<b,c>>)
add_call_chain(<<A,B>>)
bool_value (true)
bool_value (false)
generate_java_code
add_call_chain(<<B,B>>)
modulo
type_check
add_attribute("e", "C", "BOOLEAN")
disjunction
bool_value (false)
numerical_negation
logical_negation
add_call_chain(<<A,C,C,BOOLEAN,BOOLEAN,BOOLEAN,A,e,D>>)
add_call_chain(<<C,e,c,b,D,C,D,A>>)
subtraction
add_command("INTEGER", "B", <<["C", "BOOLEAN"], ["D", "e"], ["b", "INTEGER"], ["A", "INTEGER"], ["C", "C"], ["A", "INTEGER"], ["A", "D"], ["c", "BOOLEAN"], ["D", "INTEGER"]>>)
logical_negation
int_value (14)
add_call_chain(<<e,B,b,B,C,C>>)
add_call_chain(<<C,C,B,B,D,C,d>>)
add_command("a", "b", <<["B", "B"], ["D", "BOOLEAN"], ["INTEGER", "INTEGER"], ["c", "BOOLEAN"], ["D", "D"], ["d", "B"], ["e", "INTEGER"]>>)
type_check
add_query("C", "D", <<["c", "INTEGER"], ["a", "BOOLEAN"], ["B", "INTEGER"], ["a", "C"], ["B", "INTEGER"]>>, "C")
generate_java_code
add_call_chain(<<INTEGER>>)
add_attribute("C", "D", "BOOLEAN")
int_value (8)
equals
int_value (27)
numerical_negation
disjunction
add_attribute("C", "C", "C")
add_class(c)
add_attribute("d", "c", "BOOLEAN")
logical_negation
int_value (37)
generate_java_code
numerical_negation
type_check
int_value (7)
disjunction
modulo
add_attribute("b", "C", "INTEGER")
add_call_chain(<<b,e,c,d>>)
add_call_chain(<<B,c,b,b,c>>)
type_check
add_query("D", "C", <<["a", "d"], ["a", "BOOLEAN"], ["b", "C"], ["d", "BOOLEAN"], ["B", "b"], ["a", "B"], ["BOOLEAN", "INTEGER"], ["B", "C"]>>, "b")
int_value (27)
int_value (27)
type_check
add_attribute("e", "B", "INTEGER")
logical_negation
generate_java_code
add_call_chain(<<a,B,A,b,c,b>>)
add_attribute("c", "e", "C")
add_call_chain(<<c,D,a,a,d,D>>)
multiplication
int_value (23)
int_value (6)
logical_negation
greater_than
bool_value (false)
