add_command("D", "D", <<["b", "INTEGER"], ["a", "INTEGER"], ["a", "INTEGER"], ["d", "C"], ["B", "d"]>>)
add_attribute("d", "d", "BOOLEAN")
numerical_negation
generate_java_code
int_value (24)
add_class(d)
add_attribute("BOOLEAN", "INTEGER", "INTEGER")
add_call_chain(<<B,INTEGER,B,C,C,b,a>>)
add_call_chain(<<d,A,BOOLEAN>>)
equals
add_command("A", "d", <<["C", "b"]>>)
add_query("D", "a", <<["d", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "d"], ["A", "BOOLEAN"], ["A", "d"], ["d", "BOOLEAN"], ["C", "BOOLEAN"], ["d", "INTEGER"]>>, "a")
add_command("BOOLEAN", "e", <<["c", "BOOLEAN"], ["C", "BOOLEAN"]>>)
add_command("a", "B", <<["B", "a"], ["d", "C"]>>)
type_check
conjunction
logical_negation
bool_value (true)
numerical_negation
equals
add_call_chain(<<e>>)
add_attribute("a", "c", "INTEGER")
add_call_chain(<<B,C,e,d>>)
equals
add_command("C", "b", <<["e", "BOOLEAN"], ["a", "e"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["b", "BOOLEAN"], ["e", "INTEGER"], ["BOOLEAN", "INTEGER"], ["d", "BOOLEAN"]>>)
add_attribute("b", "A", "BOOLEAN")
int_value (4)
add_call_chain(<<a,c>>)
int_value (8)
int_value (17)
int_value (43)
int_value (44)
logical_negation
disjunction
add_command("a", "INTEGER", <<["b", "BOOLEAN"], ["D", "B"], ["b", "INTEGER"], ["b", "INTEGER"], ["C", "D"], ["e", "BOOLEAN"]>>)
add_command("A", "e", <<["a", "BOOLEAN"], ["INTEGER", "INTEGER"]>>)
add_command("e", "D", <<["C", "D"], ["B", "D"], ["C", "INTEGER"], ["b", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["b", "c"]>>)
add_command("D", "C", <<["d", "INTEGER"]>>)
logical_negation
logical_negation
int_value (28)
logical_negation
generate_java_code
add_query("C", "D", <<["D", "INTEGER"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["b", "INTEGER"]>>, "c")
type_check
add_class(C)
greater_than
add_call_chain(<<e,C,a,D,c,BOOLEAN,c,B>>)
less_than
bool_value (true)
multiplication
add_command("e", "A", <<["A", "d"], ["B", "d"], ["a", "INTEGER"], ["D", "a"], ["e", "INTEGER"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["INTEGER", "INTEGER"]>>)
add_command("C", "B", <<["BOOLEAN", "INTEGER"], ["D", "BOOLEAN"], ["D", "d"], ["A", "INTEGER"], ["a", "BOOLEAN"]>>)
int_value (49)
int_value (22)
bool_value (false)
add_command("e", "B", <<["A", "BOOLEAN"]>>)
equals
add_query("C", "e", <<["A", "INTEGER"], ["A", "INTEGER"], ["e", "INTEGER"], ["C", "B"], ["e", "BOOLEAN"], ["d", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "INTEGER"], ["a", "a"]>>, "e")
generate_java_code
type_check
int_value (26)
add_call_chain(<<B,BOOLEAN,e,d,INTEGER,D,BOOLEAN,B>>)
bool_value (true)
int_value (38)
add_query("A", "D", <<["A", "BOOLEAN"], ["C", "B"], ["a", "e"], ["d", "INTEGER"], ["INTEGER", "BOOLEAN"], ["e", "b"], ["b", "INTEGER"], ["B", "BOOLEAN"]>>, "A")
bool_value (true)
numerical_negation
bool_value (false)
less_than
add_call_chain(<<BOOLEAN>>)
add_call_chain(<<D>>)
add_command("A", "D", <<["A", "BOOLEAN"], ["d", "A"], ["d", "BOOLEAN"]>>)
add_attribute("D", "A", "INTEGER")
equals
numerical_negation
add_command("B", "d", <<["C", "INTEGER"], ["D", "INTEGER"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "d"], ["C", "BOOLEAN"], ["a", "INTEGER"], ["INTEGER", "INTEGER"]>>)
int_value (17)
disjunction
add_query("B", "A", <<["C", "C"], ["a", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["D", "B"], ["a", "D"], ["b", "B"], ["B", "c"], ["D", "BOOLEAN"], ["BOOLEAN", "a"]>>, "BOOLEAN")
add_call_chain(<<a,B,C,A>>)
int_value (39)
add_call_chain(<<B,d,b,C,D,D,C>>)
generate_java_code
add_attribute("D", "B", "INTEGER")
multiplication
conjunction
bool_value (false)
add_query("INTEGER", "e", <<["c", "BOOLEAN"], ["B", "B"], ["D", "INTEGER"], ["d", "INTEGER"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "d"], ["e", "BOOLEAN"]>>, "d")
conjunction
add_call_chain(<<e,C>>)
modulo
add_query("D", "B", <<["e", "A"], ["C", "BOOLEAN"], ["INTEGER", "e"], ["d", "BOOLEAN"], ["INTEGER", "a"], ["INTEGER", "BOOLEAN"], ["A", "INTEGER"]>>, "d")
int_value (29)
add_query("D", "c", <<["D", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["c", "INTEGER"], ["INTEGER", "INTEGER"], ["C", "INTEGER"], ["C", "BOOLEAN"]>>, "b")
add_command("C", "b", <<["C", "INTEGER"], ["c", "BOOLEAN"], ["D", "INTEGER"], ["e", "b"], ["D", "a"], ["B", "BOOLEAN"], ["a", "BOOLEAN"]>>)
add_call_chain(<<c,C,b,INTEGER,e,e,B,BOOLEAN>>)
add_query("B", "BOOLEAN", <<["A", "BOOLEAN"], ["A", "c"], ["e", "a"], ["C", "BOOLEAN"], ["e", "INTEGER"], ["A", "INTEGER"], ["A", "b"]>>, "C")
add_class(A)
add_query("b", "e", <<["c", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "C"], ["a", "BOOLEAN"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "d"]>>, "c")
add_call_chain(<<d,a,A>>)
add_query("B", "d", <<["A", "c"], ["A", "INTEGER"]>>, "e")
add_query("b", "C", <<["C", "INTEGER"], ["b", "INTEGER"], ["C", "B"]>>, "B")
add_query("e", "b", <<["b", "INTEGER"], ["e", "BOOLEAN"], ["e", "d"], ["c", "BOOLEAN"], ["d", "INTEGER"]>>, "C")
add_class(A)
add_query("c", "e", <<["C", "C"]>>, "INTEGER")
quotient
add_class(B)
bool_value (false)
numerical_negation
add_query("d", "a", <<["c", "D"], ["B", "BOOLEAN"], ["B", "INTEGER"], ["e", "A"], ["b", "BOOLEAN"], ["c", "INTEGER"]>>, "c")
generate_java_code
add_call_chain(<<b,C>>)
add_command("c", "B", <<["a", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "INTEGER"], ["C", "INTEGER"], ["e", "INTEGER"], ["C", "e"], ["C", "BOOLEAN"]>>)
bool_value (true)
add_call_chain(<<e,BOOLEAN,B,d>>)
greater_than
int_value (21)
add_query("INTEGER", "d", <<["b", "d"], ["C", "INTEGER"], ["D", "B"], ["d", "d"], ["e", "BOOLEAN"]>>, "a")
add_attribute("B", "a", "INTEGER")
add_call_chain(<<a,C,C,BOOLEAN>>)
generate_java_code
generate_java_code
add_query("C", "A", <<["b", "b"], ["a", "INTEGER"], ["C", "BOOLEAN"], ["C", "D"], ["INTEGER", "BOOLEAN"], ["d", "d"], ["B", "INTEGER"]>>, "C")
add_command("b", "b", <<["a", "e"], ["C", "B"], ["B", "BOOLEAN"], ["C", "d"], ["D", "B"], ["B", "INTEGER"], ["d", "INTEGER"]>>)
add_command("B", "A", <<["c", "A"], ["b", "BOOLEAN"], ["BOOLEAN", "C"], ["BOOLEAN", "BOOLEAN"], ["a", "INTEGER"]>>)
add_call_chain(<<BOOLEAN,C,B,a,D>>)
less_than
add_call_chain(<<B,C,A,B,B>>)
int_value (35)
numerical_negation
add_attribute("e", "INTEGER", "BOOLEAN")
add_call_chain(<<B,C,C,D,e,e>>)
add_class(C)
disjunction
add_query("B", "D", <<["A", "INTEGER"]>>, "A")
add_class(b)
add_call_chain(<<B,C,A,c,b,a,d,BOOLEAN>>)
type_check
less_than
add_query("B", "C", <<["a", "INTEGER"], ["A", "A"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["c", "INTEGER"], ["b", "a"]>>, "d")
generate_java_code
numerical_negation
greater_than
add_call_chain(<<a>>)
type_check
add_attribute("A", "C", "C")
add_call_chain(<<C,b,e>>)
add_attribute("C", "b", "D")
add_attribute("b", "a", "INTEGER")
logical_negation
logical_negation
generate_java_code
disjunction
add_command("D", "C", <<["A", "BOOLEAN"], ["b", "INTEGER"], ["c", "INTEGER"], ["e", "d"]>>)
bool_value (false)
int_value (47)
add_call_chain(<<BOOLEAN,BOOLEAN,D,a,c,d,D>>)
add_call_chain(<<b,b,D,c,e>>)
add_class(C)
add_attribute("c", "D", "BOOLEAN")
numerical_negation
add_command("D", "D", <<["b", "A"], ["A", "C"], ["b", "BOOLEAN"]>>)
int_value (19)
numerical_negation
add_query("e", "INTEGER", <<["D", "c"], ["BOOLEAN", "INTEGER"], ["A", "BOOLEAN"], ["D", "c"], ["D", "INTEGER"], ["a", "INTEGER"], ["C", "a"], ["d", "INTEGER"], ["D", "INTEGER"]>>, "b")
less_than
bool_value (true)
type_check
greater_than
add_attribute("e", "c", "BOOLEAN")
type_check
add_query("C", "INTEGER", <<["D", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "A"], ["INTEGER", "C"]>>, "B")
add_class(BOOLEAN)
add_class(b)
add_attribute("B", "A", "INTEGER")
add_attribute("INTEGER", "b", "INTEGER")
add_query("C", "B", <<["B", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "INTEGER"], ["D", "B"]>>, "C")
add_call_chain(<<C,d,D>>)
add_attribute("A", "a", "INTEGER")
int_value (45)
type_check
add_class(D)
type_check
numerical_negation
add_query("e", "e", <<["e", "B"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["D", "d"], ["d", "INTEGER"], ["d", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "INTEGER"]>>, "c")
generate_java_code
bool_value (false)
add_call_chain(<<D,c,B>>)
type_check
bool_value (false)
conjunction
add_call_chain(<<d,C>>)
logical_negation
add_class(A)
generate_java_code
disjunction
numerical_negation
add_attribute("D", "INTEGER", "BOOLEAN")
bool_value (true)
type_check
add_query("C", "b", <<["b", "INTEGER"], ["a", "BOOLEAN"], ["A", "INTEGER"], ["b", "c"], ["e", "BOOLEAN"], ["A", "C"], ["BOOLEAN", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["C", "INTEGER"]>>, "B")
add_call_chain(<<D,c,C,b>>)
generate_java_code
bool_value (true)
bool_value (false)
logical_negation
conjunction
multiplication
add_call_chain(<<d,A,INTEGER,b,d>>)
numerical_negation
add_query("c", "d", <<["a", "INTEGER"]>>, "A")
add_query("e", "INTEGER", <<["d", "BOOLEAN"], ["INTEGER", "c"], ["a", "D"], ["A", "INTEGER"], ["C", "INTEGER"], ["e", "BOOLEAN"], ["B", "BOOLEAN"]>>, "a")
add_query("INTEGER", "D", <<["C", "INTEGER"], ["a", "d"], ["d", "INTEGER"], ["A", "BOOLEAN"], ["B", "D"]>>, "D")
add_attribute("D", "INTEGER", "B")
bool_value (true)
numerical_negation
add_call_chain(<<a,D,B,d,BOOLEAN,INTEGER>>)
add_query("C", "e", <<["b", "b"], ["d", "INTEGER"], ["a", "INTEGER"], ["d", "INTEGER"], ["C", "INTEGER"], ["d", "INTEGER"], ["e", "A"], ["d", "a"], ["C", "INTEGER"]>>, "INTEGER")
add_call_chain(<<B,D,A>>)
modulo
numerical_negation
int_value (2)
int_value (3)
add_class(c)
logical_negation
conjunction
type_check
logical_negation
disjunction
logical_negation
int_value (14)
greater_than
add_query("D", "B", <<["e", "b"]>>, "c")
add_attribute("c", "INTEGER", "INTEGER")
greater_than
add_query("C", "d", <<["e", "BOOLEAN"]>>, "A")
add_call_chain(<<B>>)
add_call_chain(<<D,d,d,A,A>>)
add_call_chain(<<a,B,INTEGER,D>>)
add_attribute("a", "D", "BOOLEAN")
add_command("d", "a", <<["e", "C"], ["A", "BOOLEAN"]>>)
int_value (49)
bool_value (true)
add_query("INTEGER", "A", <<["C", "BOOLEAN"], ["C", "D"], ["c", "INTEGER"], ["a", "C"], ["INTEGER", "BOOLEAN"]>>, "B")
generate_java_code
add_attribute("A", "A", "C")
int_value (31)
add_class(c)
int_value (48)
type_check
generate_java_code
add_call_chain(<<c,C>>)
add_attribute("c", "A", "INTEGER")
