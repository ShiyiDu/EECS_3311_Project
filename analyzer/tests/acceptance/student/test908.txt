add_attribute("C", "e", "BOOLEAN")
logical_negation
add_command("b", "BOOLEAN", <<["b", "INTEGER"], ["b", "INTEGER"], ["C", "INTEGER"]>>)
numerical_negation
int_value (32)
bool_value (false)
modulo
bool_value (false)
logical_negation
add_call_chain(<<d,a,INTEGER,b,a,D,C,INTEGER>>)
bool_value (false)
numerical_negation
add_attribute("C", "BOOLEAN", "C")
numerical_negation
add_query("c", "a", <<["e", "INTEGER"], ["C", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["d", "BOOLEAN"], ["c", "BOOLEAN"], ["INTEGER", "b"]>>, "A")
type_check
add_call_chain(<<A,b,d,INTEGER,A,D,b,B,c>>)
bool_value (false)
logical_negation
int_value (32)
logical_negation
logical_negation
logical_negation
int_value (32)
bool_value (true)
add_query("D", "A", <<["b", "INTEGER"], ["C", "INTEGER"], ["A", "INTEGER"], ["b", "BOOLEAN"], ["c", "b"]>>, "B")
conjunction
numerical_negation
int_value (3)
less_than
conjunction
generate_java_code
add_query("A", "D", <<["B", "INTEGER"], ["c", "b"], ["C", "INTEGER"], ["A", "D"], ["D", "INTEGER"], ["b", "BOOLEAN"]>>, "e")
numerical_negation
logical_negation
logical_negation
subtraction
add_command("c", "C", <<["C", "INTEGER"]>>)
add_query("d", "a", <<["b", "INTEGER"], ["INTEGER", "b"], ["a", "d"], ["d", "INTEGER"], ["A", "INTEGER"], ["A", "A"], ["C", "INTEGER"]>>, "INTEGER")
bool_value (true)
bool_value (false)
add_class(a)
add_attribute("INTEGER", "D", "C")
add_attribute("B", "a", "BOOLEAN")
add_attribute("a", "a", "BOOLEAN")
add_class(d)
add_query("INTEGER", "C", <<["A", "INTEGER"], ["d", "BOOLEAN"], ["e", "B"], ["INTEGER", "D"], ["A", "INTEGER"], ["a", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["D", "c"]>>, "INTEGER")
bool_value (true)
numerical_negation
add_call_chain(<<b,e,D,b,D,D,d,e>>)
add_command("A", "d", <<["C", "INTEGER"], ["d", "INTEGER"], ["d", "INTEGER"], ["c", "A"], ["B", "INTEGER"]>>)
add_attribute("a", "A", "BOOLEAN")
add_call_chain(<<D,D,a,d>>)
numerical_negation
multiplication
bool_value (true)
generate_java_code
int_value (29)
logical_negation
add_query("d", "D", <<["b", "INTEGER"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["b", "BOOLEAN"]>>, "e")
add_call_chain(<<D,b,d,c,e,a,d,a,b>>)
disjunction
numerical_negation
add_call_chain(<<A,A,A,A>>)
add_query("D", "D", <<["D", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "A"], ["BOOLEAN", "BOOLEAN"], ["b", "INTEGER"], ["e", "BOOLEAN"], ["BOOLEAN", "c"], ["INTEGER", "BOOLEAN"]>>, "BOOLEAN")
add_command("B", "c", <<["d", "BOOLEAN"]>>)
add_call_chain(<<d,c,C>>)
add_command("B", "A", <<["A", "BOOLEAN"], ["e", "C"], ["d", "BOOLEAN"], ["INTEGER", "A"], ["c", "C"], ["C", "b"], ["b", "INTEGER"]>>)
add_call_chain(<<B,a,b,C>>)
logical_negation
int_value (46)
logical_negation
add_query("B", "d", <<["D", "INTEGER"], ["b", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["d", "INTEGER"], ["B", "BOOLEAN"]>>, "B")
add_attribute("BOOLEAN", "a", "b")
numerical_negation
add_call_chain(<<C,A,D>>)
bool_value (true)
add_query("c", "e", <<["INTEGER", "B"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["INTEGER", "B"], ["b", "BOOLEAN"]>>, "A")
add_attribute("A", "INTEGER", "e")
disjunction
disjunction
add_query("e", "C", <<["B", "A"], ["D", "BOOLEAN"], ["C", "BOOLEAN"]>>, "INTEGER")
type_check
add_attribute("b", "b", "BOOLEAN")
int_value (13)
int_value (38)
add_command("c", "A", <<["c", "INTEGER"], ["e", "BOOLEAN"]>>)
add_attribute("C", "d", "BOOLEAN")
int_value (43)
type_check
greater_than
add_command("D", "A", <<["BOOLEAN", "INTEGER"], ["A", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "e"], ["D", "e"], ["d", "BOOLEAN"], ["e", "BOOLEAN"]>>)
int_value (26)
add_class(INTEGER)
bool_value (false)
logical_negation
generate_java_code
int_value (16)
bool_value (false)
disjunction
add_call_chain(<<BOOLEAN,a,D,C,d>>)
multiplication
logical_negation
int_value (25)
add_call_chain(<<e,B>>)
add_command("b", "C", <<["B", "A"]>>)
logical_negation
add_call_chain(<<b,A,a,B,d>>)
generate_java_code
int_value (21)
bool_value (true)
add_call_chain(<<e,c,A,D,b,B,c>>)
disjunction
less_than
add_command("a", "B", <<["e", "INTEGER"], ["a", "b"]>>)
multiplication
bool_value (false)
add_call_chain(<<A,a,C,INTEGER,A,a>>)
bool_value (false)
bool_value (false)
generate_java_code
add_command("c", "A", <<["B", "BOOLEAN"]>>)
numerical_negation
add_call_chain(<<INTEGER,e>>)
disjunction
add_command("e", "e", <<["B", "BOOLEAN"], ["d", "c"], ["A", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "d"], ["D", "INTEGER"], ["A", "INTEGER"], ["b", "A"], ["d", "D"]>>)
bool_value (false)
logical_negation
bool_value (false)
greater_than
add_attribute("b", "c", "BOOLEAN")
add_call_chain(<<A,C,D>>)
generate_java_code
int_value (8)
disjunction
add_attribute("D", "c", "BOOLEAN")
add_call_chain(<<a,e,D,d>>)
numerical_negation
add_call_chain(<<d,b,C,a,B,C,a>>)
numerical_negation
greater_than
conjunction
add_attribute("INTEGER", "B", "a")
add_command("c", "B", <<["A", "INTEGER"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["D", "INTEGER"]>>)
add_call_chain(<<A,e,a>>)
add_call_chain(<<D,A,C,INTEGER>>)
add_command("INTEGER", "A", <<["A", "INTEGER"], ["b", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["C", "b"], ["c", "BOOLEAN"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["b", "BOOLEAN"], ["INTEGER", "INTEGER"]>>)
add_command("A", "e", <<["INTEGER", "BOOLEAN"], ["A", "INTEGER"], ["A", "BOOLEAN"], ["D", "BOOLEAN"], ["d", "A"]>>)
int_value (32)
logical_negation
int_value (28)
add_call_chain(<<D,a,c,D>>)
bool_value (true)
disjunction
generate_java_code
less_than
add_class(e)
int_value (16)
bool_value (false)
int_value (3)
add_class(A)
less_than
add_call_chain(<<b,D,A>>)
subtraction
add_command("B", "e", <<["B", "BOOLEAN"], ["b", "INTEGER"], ["e", "BOOLEAN"], ["B", "INTEGER"], ["d", "b"]>>)
add_query("BOOLEAN", "d", <<["b", "D"], ["B", "e"], ["A", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["A", "BOOLEAN"], ["A", "INTEGER"], ["c", "BOOLEAN"]>>, "BOOLEAN")
int_value (24)
add_command("C", "A", <<["A", "e"], ["b", "d"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["d", "b"], ["C", "C"], ["b", "BOOLEAN"], ["B", "INTEGER"]>>)
logical_negation
logical_negation
numerical_negation
add_command("A", "INTEGER", <<["e", "BOOLEAN"], ["C", "INTEGER"], ["A", "INTEGER"], ["INTEGER", "INTEGER"], ["B", "b"]>>)
add_command("d", "B", <<["c", "B"]>>)
bool_value (true)
add_class(a)
type_check
add_query("c", "D", <<["D", "c"], ["a", "INTEGER"], ["b", "BOOLEAN"], ["b", "INTEGER"], ["e", "BOOLEAN"], ["e", "INTEGER"], ["b", "BOOLEAN"], ["BOOLEAN", "a"], ["c", "BOOLEAN"]>>, "D")
type_check
add_call_chain(<<e,e>>)
add_query("b", "d", <<["B", "BOOLEAN"], ["A", "INTEGER"]>>, "A")
int_value (27)
add_query("e", "d", <<["b", "C"], ["d", "BOOLEAN"], ["c", "INTEGER"], ["C", "INTEGER"], ["d", "INTEGER"], ["D", "INTEGER"], ["d", "c"]>>, "C")
add_attribute("C", "B", "INTEGER")
greater_than
generate_java_code
bool_value (false)
int_value (3)
numerical_negation
disjunction
add_call_chain(<<BOOLEAN,e>>)
conjunction
add_attribute("c", "A", "BOOLEAN")
add_call_chain(<<D,b>>)
add_attribute("BOOLEAN", "D", "B")
int_value (48)
add_class(b)
bool_value (false)
logical_negation
logical_negation
generate_java_code
int_value (47)
equals
logical_negation
bool_value (true)
add_query("D", "C", <<["D", "INTEGER"], ["b", "BOOLEAN"], ["A", "INTEGER"], ["A", "a"], ["C", "BOOLEAN"], ["BOOLEAN", "B"], ["D", "BOOLEAN"], ["A", "BOOLEAN"]>>, "b")
bool_value (true)
int_value (15)
bool_value (true)
generate_java_code
add_attribute("B", "D", "c")
add_call_chain(<<A,b,A>>)
int_value (44)
type_check
generate_java_code
numerical_negation
add_call_chain(<<D,B,C,A,D,C,c>>)
numerical_negation
modulo
logical_negation
int_value (44)
type_check
bool_value (true)
logical_negation
int_value (16)
int_value (37)
add_query("B", "b", <<["B", "A"], ["d", "INTEGER"]>>, "c")
logical_negation
add_call_chain(<<e,a,d>>)
