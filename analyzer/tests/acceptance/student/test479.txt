add_attribute("a", "a", "BOOLEAN")
add_call_chain(<<c,a,A>>)
bool_value (true)
logical_negation
add_command("e", "INTEGER", <<["B", "C"], ["b", "a"], ["D", "BOOLEAN"], ["C", "BOOLEAN"]>>)
add_command("c", "c", <<["INTEGER", "BOOLEAN"], ["B", "INTEGER"], ["D", "C"], ["d", "BOOLEAN"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["A", "D"], ["d", "BOOLEAN"]>>)
add_attribute("d", "d", "d")
numerical_negation
add_class(a)
generate_java_code
add_query("d", "c", <<["b", "BOOLEAN"], ["b", "INTEGER"], ["B", "A"], ["a", "C"]>>, "BOOLEAN")
add_query("e", "B", <<["a", "BOOLEAN"]>>, "D")
equals
add_call_chain(<<c,C,A,BOOLEAN>>)
add_attribute("c", "b", "INTEGER")
addition
bool_value (true)
greater_than
add_call_chain(<<C,c,c,a>>)
add_command("A", "A", <<["A", "e"]>>)
add_query("b", "INTEGER", <<["C", "a"], ["d", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "e"], ["C", "BOOLEAN"], ["c", "INTEGER"], ["D", "C"], ["C", "A"], ["D", "c"]>>, "e")
add_call_chain(<<d,A,d,b,C,a,b,c>>)
logical_negation
add_query("A", "b", <<["INTEGER", "INTEGER"], ["e", "d"], ["B", "INTEGER"], ["A", "A"], ["c", "A"], ["d", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "INTEGER"], ["b", "A"]>>, "b")
add_attribute("B", "BOOLEAN", "c")
logical_negation
add_query("C", "e", <<["c", "d"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["D", "INTEGER"], ["B", "D"], ["B", "BOOLEAN"], ["A", "INTEGER"]>>, "C")
add_command("d", "e", <<["e", "b"], ["c", "BOOLEAN"], ["C", "INTEGER"], ["c", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
subtraction
int_value (25)
add_class(C)
conjunction
add_query("a", "e", <<["c", "B"], ["B", "INTEGER"], ["c", "D"], ["e", "a"], ["a", "INTEGER"], ["a", "INTEGER"], ["B", "INTEGER"], ["C", "BOOLEAN"]>>, "A")
add_attribute("D", "c", "D")
conjunction
bool_value (false)
disjunction
add_query("e", "BOOLEAN", <<["a", "INTEGER"], ["A", "BOOLEAN"], ["A", "d"], ["D", "BOOLEAN"], ["d", "D"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["A", "C"]>>, "b")
bool_value (false)
add_call_chain(<<e,A,b,C,C,B,B,b,C>>)
subtraction
add_command("a", "d", <<["d", "e"]>>)
add_call_chain(<<c,b>>)
less_than
bool_value (false)
addition
generate_java_code
modulo
add_command("e", "A", <<["c", "D"], ["B", "BOOLEAN"], ["INTEGER", "a"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["INTEGER", "B"], ["a", "BOOLEAN"]>>)
int_value (20)
add_command("e", "e", <<["e", "D"], ["b", "INTEGER"], ["B", "INTEGER"]>>)
add_class(C)
bool_value (true)
bool_value (false)
logical_negation
quotient
add_query("D", "A", <<["C", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>, "B")
add_query("b", "d", <<["c", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "B"], ["a", "BOOLEAN"], ["B", "A"], ["D", "BOOLEAN"]>>, "C")
bool_value (true)
type_check
generate_java_code
add_attribute("a", "c", "BOOLEAN")
add_call_chain(<<C,e,e,C,C,B,a>>)
generate_java_code
add_query("C", "B", <<["e", "B"], ["c", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "e"], ["B", "d"], ["B", "BOOLEAN"], ["B", "INTEGER"]>>, "A")
type_check
add_command("b", "B", <<["A", "BOOLEAN"], ["e", "INTEGER"], ["B", "INTEGER"]>>)
add_query("e", "C", <<["D", "BOOLEAN"], ["a", "B"], ["a", "BOOLEAN"]>>, "A")
generate_java_code
add_query("c", "INTEGER", <<["a", "INTEGER"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["c", "INTEGER"], ["BOOLEAN", "e"], ["e", "B"], ["d", "INTEGER"], ["d", "B"]>>, "D")
add_attribute("d", "C", "INTEGER")
add_query("e", "C", <<["C", "e"], ["C", "BOOLEAN"], ["B", "e"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "d"], ["B", "INTEGER"], ["b", "d"]>>, "D")
greater_than
add_query("C", "C", <<["e", "A"], ["BOOLEAN", "INTEGER"], ["D", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["C", "INTEGER"], ["b", "BOOLEAN"], ["B", "BOOLEAN"]>>, "B")
add_call_chain(<<d,A,B,b,C,d,d,b,e>>)
generate_java_code
add_attribute("a", "D", "BOOLEAN")
equals
greater_than
disjunction
add_attribute("e", "d", "BOOLEAN")
bool_value (true)
add_attribute("BOOLEAN", "C", "BOOLEAN")
int_value (29)
add_call_chain(<<e,INTEGER>>)
int_value (15)
disjunction
generate_java_code
add_class(D)
add_attribute("e", "a", "INTEGER")
add_call_chain(<<BOOLEAN,C,A,b,e>>)
int_value (23)
int_value (15)
type_check
add_call_chain(<<C,d,b,C,b,c,c>>)
add_command("INTEGER", "INTEGER", <<["A", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "INTEGER"], ["a", "BOOLEAN"], ["c", "INTEGER"], ["c", "BOOLEAN"], ["c", "B"]>>)
equals
add_call_chain(<<A,e,C,D>>)
add_query("A", "C", <<["a", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "INTEGER"]>>, "D")
subtraction
add_attribute("INTEGER", "c", "BOOLEAN")
add_attribute("B", "C", "INTEGER")
add_query("b", "D", <<["D", "INTEGER"]>>, "b")
add_attribute("d", "b", "INTEGER")
add_call_chain(<<D,c>>)
numerical_negation
add_call_chain(<<A,a,C,B,d,A,C>>)
numerical_negation
bool_value (false)
bool_value (true)
add_command("D", "c", <<["BOOLEAN", "INTEGER"], ["e", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["d", "INTEGER"], ["b", "INTEGER"], ["D", "BOOLEAN"]>>)
add_attribute("b", "b", "D")
add_call_chain(<<D,BOOLEAN,D,C,b,INTEGER>>)
add_query("INTEGER", "C", <<["a", "INTEGER"], ["c", "BOOLEAN"], ["A", "INTEGER"], ["a", "BOOLEAN"], ["D", "BOOLEAN"]>>, "d")
int_value (12)
add_class(d)
add_command("a", "a", <<["B", "A"], ["BOOLEAN", "D"], ["e", "BOOLEAN"], ["c", "INTEGER"], ["B", "INTEGER"], ["D", "d"], ["a", "b"], ["C", "BOOLEAN"]>>)
type_check
int_value (30)
add_call_chain(<<B>>)
add_class(INTEGER)
add_command("b", "C", <<["BOOLEAN", "BOOLEAN"], ["A", "D"], ["INTEGER", "INTEGER"], ["b", "INTEGER"]>>)
disjunction
numerical_negation
disjunction
add_call_chain(<<A,a,C,B>>)
generate_java_code
add_class(INTEGER)
add_call_chain(<<c>>)
add_call_chain(<<e,D>>)
addition
bool_value (true)
add_command("c", "B", <<["C", "INTEGER"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["b", "C"], ["A", "b"], ["B", "b"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["D", "INTEGER"]>>)
add_command("c", "a", <<["C", "INTEGER"], ["BOOLEAN", "INTEGER"], ["C", "a"], ["d", "A"], ["D", "INTEGER"], ["A", "BOOLEAN"]>>)
conjunction
add_attribute("c", "b", "INTEGER")
add_query("a", "d", <<["B", "d"], ["D", "INTEGER"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["C", "INTEGER"], ["d", "BOOLEAN"]>>, "C")
add_query("d", "A", <<["c", "INTEGER"], ["b", "INTEGER"], ["B", "INTEGER"], ["C", "INTEGER"], ["BOOLEAN", "e"], ["d", "b"], ["e", "BOOLEAN"]>>, "INTEGER")
int_value (37)
add_call_chain(<<C>>)
add_query("b", "e", <<["d", "B"], ["b", "d"], ["B", "C"], ["B", "C"]>>, "d")
add_call_chain(<<A,b,c,INTEGER,INTEGER,c,D,B,C>>)
add_call_chain(<<D,B,d,B>>)
add_call_chain(<<c,b,d,D,b,a,a,D>>)
add_query("A", "e", <<["INTEGER", "a"], ["C", "INTEGER"], ["A", "INTEGER"]>>, "D")
multiplication
bool_value (false)
numerical_negation
int_value (23)
numerical_negation
add_command("D", "INTEGER", <<["e", "BOOLEAN"], ["A", "BOOLEAN"]>>)
numerical_negation
int_value (33)
add_class(b)
add_call_chain(<<e,A,b,d,BOOLEAN,D,c>>)
add_call_chain(<<a,e,c>>)
add_query("D", "D", <<["C", "INTEGER"], ["BOOLEAN", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["d", "INTEGER"], ["a", "INTEGER"]>>, "BOOLEAN")
numerical_negation
conjunction
bool_value (true)
greater_than
int_value (41)
conjunction
int_value (30)
add_command("d", "D", <<["e", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "BOOLEAN"], ["BOOLEAN", "B"]>>)
add_call_chain(<<c,e,B,B,B,B,c>>)
add_class(B)
add_command("e", "b", <<["D", "B"], ["c", "A"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["A", "b"]>>)
add_call_chain(<<a,INTEGER,e,a,b,BOOLEAN,d,e>>)
add_class(a)
add_call_chain(<<C,C,e,C,A>>)
subtraction
generate_java_code
int_value (34)
add_query("e", "D", <<["B", "INTEGER"], ["C", "INTEGER"], ["a", "INTEGER"]>>, "b")
add_command("A", "a", <<["e", "INTEGER"], ["a", "INTEGER"], ["d", "BOOLEAN"], ["b", "BOOLEAN"], ["b", "A"], ["BOOLEAN", "INTEGER"], ["INTEGER", "INTEGER"], ["b", "INTEGER"]>>)
bool_value (false)
add_call_chain(<<e,a,d>>)
addition
equals
add_call_chain(<<a,d,B,D,a,b,INTEGER,C>>)
add_attribute("C", "D", "e")
int_value (16)
add_command("d", "D", <<["a", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "D"], ["A", "c"], ["a", "BOOLEAN"], ["a", "C"], ["c", "INTEGER"]>>)
numerical_negation
logical_negation
int_value (38)
int_value (16)
add_attribute("D", "d", "BOOLEAN")
conjunction
numerical_negation
add_command("D", "C", <<["C", "b"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["a", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["d", "D"]>>)
disjunction
logical_negation
generate_java_code
add_command("e", "b", <<["a", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "a"], ["D", "c"], ["e", "INTEGER"], ["B", "INTEGER"]>>)
add_call_chain(<<C,b,D,B,A>>)
int_value (12)
add_attribute("D", "BOOLEAN", "C")
add_query("A", "INTEGER", <<["C", "A"], ["c", "B"], ["A", "e"], ["B", "a"], ["A", "BOOLEAN"], ["d", "INTEGER"]>>, "D")
int_value (26)
generate_java_code
add_call_chain(<<A,C,e,D>>)
add_command("INTEGER", "c", <<["A", "BOOLEAN"]>>)
add_command("d", "BOOLEAN", <<["D", "INTEGER"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["INTEGER", "d"]>>)
add_command("c", "b", <<["C", "INTEGER"]>>)
add_call_chain(<<B,B,d,b,c,D,e,e,A>>)
add_call_chain(<<A,d,D>>)
add_query("d", "A", <<["A", "BOOLEAN"]>>, "D")
add_call_chain(<<INTEGER>>)
add_call_chain(<<D,C,e,b,b,B,a,a,C>>)
logical_negation
add_call_chain(<<D,d,D,a>>)
numerical_negation
quotient
numerical_negation
add_class(C)
type_check
add_call_chain(<<C,a>>)
add_call_chain(<<B,C,c>>)
int_value (19)
add_attribute("C", "c", "INTEGER")
add_class(A)
add_command("e", "a", <<["A", "INTEGER"], ["A", "A"], ["D", "INTEGER"]>>)
add_attribute("INTEGER", "e", "BOOLEAN")
add_command("d", "C", <<["c", "BOOLEAN"], ["a", "c"], ["B", "INTEGER"]>>)
type_check
add_call_chain(<<D,c,A,b,B>>)
