add_query("c", "C", <<["e", "BOOLEAN"], ["BOOLEAN", "D"], ["A", "INTEGER"], ["C", "INTEGER"], ["b", "e"], ["A", "INTEGER"]>>, "a")
add_query("B", "c", <<["c", "b"], ["A", "BOOLEAN"], ["b", "INTEGER"], ["D", "INTEGER"], ["c", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["D", "INTEGER"], ["d", "D"], ["A", "INTEGER"]>>, "A")
add_attribute("D", "D", "d")
generate_java_code
add_command("C", "a", <<["c", "BOOLEAN"], ["d", "C"], ["D", "BOOLEAN"]>>)
addition
int_value (38)
add_call_chain(<<D,C,b,e,INTEGER,INTEGER,e,b>>)
logical_negation
add_command("D", "d", <<["b", "b"], ["b", "INTEGER"], ["b", "d"], ["A", "BOOLEAN"], ["a", "INTEGER"]>>)
type_check
add_call_chain(<<B,B,a,d>>)
add_class(a)
add_attribute("c", "c", "e")
conjunction
numerical_negation
add_command("A", "D", <<["d", "INTEGER"], ["b", "INTEGER"], ["C", "C"], ["d", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "c"], ["b", "INTEGER"]>>)
add_attribute("B", "d", "INTEGER")
add_class(A)
add_call_chain(<<D,A,A>>)
add_call_chain(<<D,A,b,INTEGER,D,B>>)
add_attribute("d", "c", "INTEGER")
logical_negation
add_class(B)
add_call_chain(<<B,A,B,C,B,a>>)
numerical_negation
add_query("e", "a", <<["A", "BOOLEAN"]>>, "B")
numerical_negation
add_attribute("C", "d", "BOOLEAN")
numerical_negation
add_attribute("b", "D", "INTEGER")
add_query("C", "A", <<["a", "INTEGER"], ["BOOLEAN", "INTEGER"], ["D", "INTEGER"], ["C", "BOOLEAN"]>>, "c")
bool_value (false)
generate_java_code
add_call_chain(<<A,a,A,c,B,C,a,A,c>>)
equals
add_attribute("d", "B", "e")
add_command("d", "C", <<["c", "D"], ["e", "INTEGER"], ["D", "INTEGER"], ["b", "INTEGER"], ["B", "INTEGER"], ["D", "b"], ["a", "b"], ["D", "BOOLEAN"]>>)
bool_value (false)
int_value (32)
add_command("INTEGER", "a", <<["a", "c"]>>)
quotient
add_class(BOOLEAN)
numerical_negation
add_query("e", "INTEGER", <<["d", "B"], ["c", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "c"], ["B", "BOOLEAN"]>>, "d")
add_call_chain(<<a>>)
bool_value (true)
disjunction
add_query("e", "D", <<["d", "D"], ["D", "BOOLEAN"], ["A", "c"], ["b", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["c", "BOOLEAN"], ["a", "d"]>>, "d")
type_check
add_attribute("c", "INTEGER", "D")
add_call_chain(<<D,C,d,A,C,A>>)
add_command("C", "INTEGER", <<["C", "BOOLEAN"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["c", "B"], ["INTEGER", "BOOLEAN"]>>)
add_command("BOOLEAN", "b", <<["e", "C"], ["d", "INTEGER"]>>)
add_command("A", "D", <<["b", "C"], ["C", "INTEGER"], ["b", "INTEGER"], ["b", "INTEGER"], ["d", "INTEGER"], ["a", "BOOLEAN"], ["D", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>)
add_class(d)
bool_value (true)
add_attribute("B", "e", "BOOLEAN")
conjunction
add_class(c)
add_call_chain(<<B,D>>)
add_command("a", "C", <<["a", "e"]>>)
addition
add_call_chain(<<d,A,b>>)
generate_java_code
add_call_chain(<<A,C,B,c,A,A,b,D,b>>)
add_query("B", "A", <<["c", "C"], ["B", "INTEGER"], ["a", "BOOLEAN"], ["D", "a"]>>, "C")
type_check
numerical_negation
type_check
numerical_negation
add_query("c", "c", <<["C", "BOOLEAN"], ["D", "INTEGER"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>, "B")
add_command("c", "e", <<["B", "BOOLEAN"]>>)
add_class(B)
add_command("a", "d", <<["C", "c"], ["a", "INTEGER"], ["A", "INTEGER"], ["C", "D"]>>)
add_class(c)
add_call_chain(<<INTEGER,e,C,C,e,C,b,e>>)
int_value (49)
bool_value (false)
add_call_chain(<<e,a,A,b,D>>)
logical_negation
numerical_negation
add_call_chain(<<c,a>>)
add_class(A)
numerical_negation
add_call_chain(<<B,e,INTEGER,e,C,c,d,D,INTEGER>>)
type_check
add_call_chain(<<INTEGER,C,a,c>>)
add_call_chain(<<D,C,d,D,BOOLEAN>>)
bool_value (false)
generate_java_code
greater_than
add_attribute("C", "c", "c")
add_command("C", "A", <<["B", "INTEGER"]>>)
logical_negation
add_command("b", "e", <<["a", "BOOLEAN"]>>)
add_attribute("B", "BOOLEAN", "BOOLEAN")
add_attribute("C", "e", "BOOLEAN")
add_call_chain(<<BOOLEAN>>)
add_command("C", "c", <<["B", "d"], ["b", "INTEGER"], ["D", "e"], ["a", "INTEGER"], ["b", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "BOOLEAN"]>>)
generate_java_code
add_command("B", "C", <<["d", "A"], ["b", "BOOLEAN"], ["b", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["B", "C"], ["d", "INTEGER"], ["D", "A"]>>)
bool_value (false)
generate_java_code
int_value (49)
add_class(INTEGER)
add_class(B)
logical_negation
add_attribute("e", "C", "INTEGER")
less_than
add_call_chain(<<b,e,b,b,a,e,INTEGER,B>>)
add_attribute("C", "e", "BOOLEAN")
numerical_negation
add_call_chain(<<INTEGER,B>>)
logical_negation
int_value (29)
add_call_chain(<<D,e,c,A,B,D,D,a,A>>)
add_attribute("b", "C", "D")
bool_value (true)
add_query("A", "a", <<["C", "INTEGER"]>>, "a")
int_value (18)
add_query("a", "b", <<["A", "INTEGER"], ["B", "INTEGER"], ["BOOLEAN", "INTEGER"], ["b", "BOOLEAN"], ["D", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["b", "BOOLEAN"]>>, "B")
add_query("b", "e", <<["a", "a"], ["B", "BOOLEAN"], ["C", "INTEGER"], ["c", "INTEGER"], ["e", "INTEGER"], ["A", "INTEGER"], ["e", "e"], ["B", "INTEGER"], ["C", "a"]>>, "e")
add_call_chain(<<A,a,B,INTEGER,a>>)
generate_java_code
add_query("B", "b", <<["c", "BOOLEAN"], ["C", "INTEGER"], ["a", "B"], ["A", "INTEGER"], ["A", "INTEGER"], ["D", "INTEGER"], ["c", "INTEGER"], ["a", "BOOLEAN"], ["B", "D"]>>, "a")
add_attribute("d", "b", "INTEGER")
add_query("C", "A", <<["B", "D"], ["c", "INTEGER"], ["A", "BOOLEAN"], ["b", "INTEGER"], ["a", "INTEGER"], ["a", "INTEGER"], ["C", "c"], ["a", "BOOLEAN"]>>, "A")
add_attribute("D", "b", "INTEGER")
add_attribute("C", "e", "BOOLEAN")
bool_value (true)
modulo
add_class(INTEGER)
add_command("b", "C", <<["C", "BOOLEAN"], ["e", "D"], ["d", "a"], ["b", "BOOLEAN"], ["D", "INTEGER"], ["INTEGER", "INTEGER"]>>)
add_query("A", "d", <<["e", "c"], ["INTEGER", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["C", "b"]>>, "A")
logical_negation
logical_negation
generate_java_code
bool_value (false)
add_attribute("A", "C", "INTEGER")
add_call_chain(<<e,C,b,B,e>>)
conjunction
type_check
add_query("a", "BOOLEAN", <<["b", "INTEGER"], ["c", "BOOLEAN"], ["d", "INTEGER"], ["d", "INTEGER"]>>, "a")
disjunction
type_check
add_call_chain(<<C,A,e,B,c,d,A>>)
add_query("C", "a", <<["A", "BOOLEAN"], ["A", "BOOLEAN"]>>, "c")
int_value (3)
generate_java_code
add_attribute("c", "D", "BOOLEAN")
add_command("B", "C", <<["a", "BOOLEAN"]>>)
add_call_chain(<<INTEGER,A>>)
add_class(BOOLEAN)
bool_value (false)
add_command("C", "D", <<["C", "INTEGER"], ["INTEGER", "BOOLEAN"], ["INTEGER", "INTEGER"], ["C", "BOOLEAN"], ["A", "INTEGER"]>>)
type_check
add_call_chain(<<C,e,BOOLEAN,D,a>>)
logical_negation
logical_negation
add_command("C", "b", <<["BOOLEAN", "e"], ["D", "INTEGER"], ["c", "c"]>>)
less_than
add_call_chain(<<e,D,d,A,BOOLEAN>>)
add_query("A", "B", <<["b", "e"], ["INTEGER", "BOOLEAN"], ["e", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["BOOLEAN", "e"], ["b", "INTEGER"]>>, "d")
add_command("d", "B", <<["a", "BOOLEAN"]>>)
int_value (46)
add_call_chain(<<C,d>>)
add_query("B", "c", <<["BOOLEAN", "BOOLEAN"], ["B", "B"], ["BOOLEAN", "B"]>>, "B")
add_command("D", "e", <<["c", "INTEGER"], ["e", "d"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["D", "INTEGER"]>>)
type_check
add_attribute("c", "d", "INTEGER")
add_attribute("b", "B", "BOOLEAN")
add_call_chain(<<INTEGER,BOOLEAN,a,a,a,B,C,C,D>>)
add_call_chain(<<C,A,A,e,c>>)
add_query("B", "e", <<["a", "INTEGER"], ["c", "BOOLEAN"], ["A", "A"], ["c", "INTEGER"], ["BOOLEAN", "d"], ["C", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["e", "INTEGER"]>>, "A")
int_value (40)
add_call_chain(<<a,B,C,c,A,c,D,c,C>>)
generate_java_code
int_value (25)
greater_than
add_command("A", "b", <<["C", "C"], ["a", "a"], ["d", "A"], ["INTEGER", "c"], ["BOOLEAN", "BOOLEAN"], ["a", "BOOLEAN"]>>)
add_attribute("e", "A", "BOOLEAN")
add_class(e)
add_call_chain(<<b,A,b,e>>)
add_query("a", "C", <<["a", "INTEGER"], ["e", "BOOLEAN"], ["B", "b"], ["C", "BOOLEAN"], ["B", "INTEGER"], ["e", "a"], ["C", "c"], ["A", "c"]>>, "D")
add_query("B", "b", <<["D", "BOOLEAN"], ["B", "D"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["c", "BOOLEAN"], ["e", "INTEGER"], ["B", "INTEGER"], ["A", "INTEGER"], ["BOOLEAN", "b"]>>, "a")
add_attribute("B", "BOOLEAN", "INTEGER")
greater_than
add_query("B", "b", <<["INTEGER", "BOOLEAN"]>>, "D")
conjunction
add_query("D", "c", <<["B", "BOOLEAN"], ["e", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "INTEGER"], ["e", "INTEGER"], ["B", "c"], ["d", "d"], ["B", "BOOLEAN"]>>, "d")
add_query("A", "a", <<["b", "INTEGER"]>>, "BOOLEAN")
add_query("c", "C", <<["b", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["a", "BOOLEAN"], ["d", "INTEGER"], ["d", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "BOOLEAN"]>>, "C")
int_value (42)
add_query("c", "a", <<["A", "INTEGER"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["e", "BOOLEAN"], ["c", "c"], ["e", "BOOLEAN"], ["A", "BOOLEAN"], ["INTEGER", "D"]>>, "B")
add_call_chain(<<A,e,INTEGER,b,B,D,a,B>>)
less_than
equals
add_attribute("d", "D", "e")
conjunction
bool_value (true)
subtraction
generate_java_code
add_class(INTEGER)
conjunction
numerical_negation
logical_negation
generate_java_code
add_call_chain(<<A,d,b,e,INTEGER,C,a,INTEGER>>)
add_call_chain(<<b,D,e,A,d,d,a,e,d>>)
add_call_chain(<<A,A,A>>)
generate_java_code
bool_value (true)
add_call_chain(<<BOOLEAN,a,A,a,c,A,b,d,D>>)
generate_java_code
bool_value (false)
add_call_chain(<<A>>)
add_call_chain(<<c,d,B,b>>)
add_attribute("A", "C", "INTEGER")
disjunction
subtraction
multiplication
bool_value (false)
add_class(b)
add_attribute("D", "d", "INTEGER")
add_class(A)
generate_java_code
add_call_chain(<<B,INTEGER,e,BOOLEAN,e,A>>)
bool_value (false)
add_command("A", "e", <<["C", "INTEGER"], ["B", "BOOLEAN"]>>)
multiplication
logical_negation
add_query("C", "C", <<["c", "d"], ["A", "INTEGER"], ["D", "INTEGER"], ["B", "B"], ["A", "a"]>>, "A")
add_call_chain(<<c,A,C,C,D,d>>)
type_check
add_command("d", "B", <<["INTEGER", "INTEGER"]>>)
add_call_chain(<<D,C,c,e,A,D,INTEGER,BOOLEAN>>)
add_call_chain(<<B,BOOLEAN,D,A>>)
numerical_negation
add_query("e", "D", <<["C", "D"], ["D", "D"], ["C", "INTEGER"], ["b", "C"], ["D", "D"], ["B", "BOOLEAN"], ["a", "INTEGER"]>>, "C")
type_check
add_call_chain(<<C,D,C,B,A>>)
type_check
add_call_chain(<<e,a,C>>)
add_command("INTEGER", "A", <<["e", "INTEGER"], ["b", "BOOLEAN"], ["B", "C"], ["INTEGER", "INTEGER"], ["b", "c"], ["C", "INTEGER"], ["d", "BOOLEAN"], ["C", "BOOLEAN"], ["INTEGER", "C"]>>)
add_query("c", "c", <<["d", "b"], ["C", "BOOLEAN"]>>, "d")
numerical_negation
conjunction
add_attribute("A", "BOOLEAN", "BOOLEAN")
numerical_negation
generate_java_code
int_value (21)
addition
add_query("A", "D", <<["A", "INTEGER"], ["D", "A"], ["e", "BOOLEAN"], ["BOOLEAN", "B"], ["b", "INTEGER"], ["c", "INTEGER"], ["b", "INTEGER"], ["INTEGER", "BOOLEAN"]>>, "C")
add_call_chain(<<B,c,b,d,INTEGER,D>>)
type_check
int_value (2)
add_call_chain(<<C>>)
numerical_negation
