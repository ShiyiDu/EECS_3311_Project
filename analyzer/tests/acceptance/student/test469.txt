add_query("INTEGER", "b", <<["D", "INTEGER"], ["B", "d"]>>, "b")
logical_negation
add_query("c", "B", <<["b", "BOOLEAN"], ["BOOLEAN", "a"], ["D", "a"], ["BOOLEAN", "BOOLEAN"], ["a", "INTEGER"], ["e", "INTEGER"], ["b", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["C", "INTEGER"]>>, "a")
numerical_negation
numerical_negation
bool_value (false)
add_query("INTEGER", "c", <<["c", "INTEGER"], ["d", "e"], ["B", "INTEGER"]>>, "C")
add_query("A", "D", <<["D", "INTEGER"], ["INTEGER", "a"], ["a", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["B", "INTEGER"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["e", "BOOLEAN"]>>, "B")
generate_java_code
add_attribute("B", "a", "INTEGER")
type_check
add_call_chain(<<C>>)
add_class(D)
bool_value (false)
quotient
add_attribute("B", "A", "INTEGER")
add_command("b", "d", <<["A", "INTEGER"], ["B", "BOOLEAN"], ["e", "a"], ["A", "INTEGER"]>>)
add_call_chain(<<B>>)
modulo
generate_java_code
add_class(e)
numerical_negation
generate_java_code
add_call_chain(<<C,e,INTEGER,D,a,C,a>>)
add_call_chain(<<c,A,d,INTEGER>>)
logical_negation
numerical_negation
int_value (16)
bool_value (true)
numerical_negation
add_call_chain(<<D,D,a,BOOLEAN>>)
add_call_chain(<<c,D,C,b,d,d,D>>)
type_check
int_value (14)
add_command("B", "d", <<["D", "INTEGER"], ["b", "C"], ["c", "B"], ["b", "INTEGER"], ["D", "c"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "INTEGER"], ["B", "INTEGER"]>>)
add_command("b", "B", <<["B", "e"], ["a", "B"], ["B", "a"], ["A", "INTEGER"]>>)
add_call_chain(<<d,c,e,D,INTEGER,D>>)
add_class(D)
add_class(b)
add_call_chain(<<d,d,a,A,A,a>>)
add_attribute("C", "A", "INTEGER")
int_value (27)
add_command("e", "C", <<["e", "BOOLEAN"], ["d", "e"], ["A", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["D", "BOOLEAN"], ["b", "c"], ["D", "BOOLEAN"], ["A", "INTEGER"]>>)
bool_value (true)
add_command("INTEGER", "D", <<["d", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
add_class(d)
add_attribute("BOOLEAN", "BOOLEAN", "BOOLEAN")
numerical_negation
logical_negation
add_attribute("D", "a", "INTEGER")
add_query("c", "a", <<["d", "B"], ["a", "INTEGER"], ["A", "INTEGER"], ["INTEGER", "A"], ["b", "BOOLEAN"], ["C", "INTEGER"], ["b", "d"], ["d", "BOOLEAN"], ["A", "INTEGER"]>>, "e")
modulo
add_attribute("A", "D", "a")
generate_java_code
greater_than
greater_than
logical_negation
bool_value (true)
add_call_chain(<<d,B,BOOLEAN,d,D,C>>)
type_check
type_check
conjunction
int_value (12)
add_class(D)
add_call_chain(<<B,D>>)
add_attribute("D", "B", "C")
add_call_chain(<<b>>)
generate_java_code
add_command("A", "C", <<["D", "BOOLEAN"], ["D", "A"], ["C", "BOOLEAN"]>>)
bool_value (false)
add_query("e", "B", <<["C", "BOOLEAN"], ["B", "B"], ["A", "INTEGER"]>>, "B")
generate_java_code
add_call_chain(<<c,C,C,a>>)
equals
add_attribute("c", "e", "a")
add_class(C)
bool_value (false)
less_than
add_query("A", "D", <<["C", "BOOLEAN"], ["B", "b"], ["B", "d"], ["d", "INTEGER"], ["INTEGER", "D"], ["A", "BOOLEAN"], ["a", "INTEGER"]>>, "INTEGER")
add_call_chain(<<INTEGER,B,A>>)
bool_value (false)
add_call_chain(<<c,B,D,a,C>>)
disjunction
numerical_negation
add_class(c)
bool_value (false)
add_call_chain(<<c,BOOLEAN,c,C,C,C>>)
add_class(B)
equals
bool_value (false)
generate_java_code
logical_negation
add_command("D", "C", <<["A", "INTEGER"], ["c", "BOOLEAN"], ["a", "b"], ["B", "INTEGER"], ["c", "e"], ["c", "INTEGER"], ["d", "INTEGER"]>>)
add_call_chain(<<B,d,B,B,D,B>>)
numerical_negation
logical_negation
greater_than
int_value (24)
logical_negation
add_command("C", "D", <<["B", "BOOLEAN"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "INTEGER"], ["b", "BOOLEAN"]>>)
int_value (33)
add_query("D", "B", <<["A", "INTEGER"], ["B", "BOOLEAN"], ["A", "c"]>>, "BOOLEAN")
add_call_chain(<<INTEGER,e,D,D,b,D>>)
bool_value (true)
int_value (9)
add_attribute("e", "B", "INTEGER")
type_check
add_query("B", "A", <<["b", "INTEGER"], ["C", "INTEGER"], ["D", "D"], ["INTEGER", "b"], ["e", "INTEGER"], ["c", "INTEGER"]>>, "c")
add_class(d)
type_check
add_call_chain(<<BOOLEAN,d,c,B,b,a,a,D>>)
int_value (45)
int_value (31)
add_call_chain(<<a>>)
logical_negation
add_attribute("BOOLEAN", "A", "D")
generate_java_code
greater_than
int_value (34)
conjunction
addition
add_class(D)
add_class(B)
generate_java_code
add_attribute("C", "c", "BOOLEAN")
add_call_chain(<<d>>)
add_call_chain(<<a>>)
add_call_chain(<<c,INTEGER,B,a,c>>)
add_attribute("A", "A", "BOOLEAN")
disjunction
add_command("A", "d", <<["D", "BOOLEAN"], ["c", "c"], ["c", "BOOLEAN"], ["C", "B"], ["b", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "BOOLEAN"]>>)
greater_than
add_attribute("B", "b", "INTEGER")
add_call_chain(<<c,d,D,B,B,d,b>>)
add_command("b", "BOOLEAN", <<["c", "INTEGER"], ["A", "A"], ["C", "INTEGER"]>>)
equals
numerical_negation
add_class(D)
numerical_negation
int_value (1)
add_attribute("D", "d", "INTEGER")
less_than
add_class(d)
type_check
add_query("B", "e", <<["d", "d"], ["c", "INTEGER"], ["c", "a"], ["c", "BOOLEAN"]>>, "B")
numerical_negation
int_value (20)
add_class(B)
add_call_chain(<<INTEGER,a,c,a,b>>)
type_check
add_command("A", "b", <<["C", "d"], ["C", "D"], ["A", "C"], ["BOOLEAN", "BOOLEAN"]>>)
add_call_chain(<<d,B>>)
bool_value (true)
add_attribute("B", "C", "BOOLEAN")
type_check
add_call_chain(<<BOOLEAN,D,A,B,A>>)
bool_value (false)
add_call_chain(<<A>>)
generate_java_code
add_call_chain(<<C,B>>)
less_than
type_check
bool_value (true)
type_check
add_class(d)
int_value (38)
bool_value (true)
int_value (22)
add_command("a", "C", <<["c", "C"], ["A", "b"], ["C", "INTEGER"], ["A", "INTEGER"], ["B", "e"], ["c", "INTEGER"], ["D", "INTEGER"], ["d", "INTEGER"]>>)
numerical_negation
int_value (28)
generate_java_code
add_query("c", "INTEGER", <<["e", "INTEGER"], ["D", "BOOLEAN"], ["C", "A"], ["c", "INTEGER"], ["B", "INTEGER"], ["b", "B"], ["b", "BOOLEAN"], ["b", "INTEGER"]>>, "e")
add_command("e", "B", <<["b", "INTEGER"]>>)
int_value (45)
add_call_chain(<<d,c,A,c,B,B,d,INTEGER,C>>)
add_query("C", "B", <<["C", "BOOLEAN"], ["a", "d"], ["e", "c"], ["a", "BOOLEAN"], ["d", "BOOLEAN"], ["e", "BOOLEAN"], ["c", "INTEGER"], ["C", "INTEGER"], ["B", "INTEGER"]>>, "B")
int_value (31)
less_than
add_attribute("C", "A", "BOOLEAN")
add_attribute("b", "b", "INTEGER")
add_command("C", "b", <<["d", "INTEGER"], ["BOOLEAN", "INTEGER"], ["c", "BOOLEAN"], ["INTEGER", "B"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "INTEGER"]>>)
add_query("D", "A", <<["C", "INTEGER"], ["BOOLEAN", "b"], ["b", "BOOLEAN"]>>, "c")
add_attribute("b", "c", "INTEGER")
disjunction
add_query("A", "b", <<["B", "b"], ["B", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["a", "INTEGER"]>>, "BOOLEAN")
type_check
generate_java_code
equals
add_call_chain(<<d,C,b,c,b,A,b,a,C>>)
numerical_negation
numerical_negation
bool_value (true)
add_call_chain(<<A,e>>)
add_attribute("B", "C", "INTEGER")
conjunction
add_class(INTEGER)
multiplication
conjunction
equals
add_call_chain(<<a,a,D>>)
numerical_negation
add_query("A", "b", <<["C", "INTEGER"], ["C", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "b"], ["a", "a"], ["b", "INTEGER"]>>, "e")
add_query("b", "C", <<["D", "d"], ["B", "B"], ["b", "BOOLEAN"]>>, "INTEGER")
type_check
add_query("B", "c", <<["a", "d"], ["C", "d"], ["INTEGER", "BOOLEAN"]>>, "D")
add_query("b", "c", <<["d", "BOOLEAN"], ["B", "INTEGER"], ["c", "BOOLEAN"], ["d", "INTEGER"], ["e", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>, "INTEGER")
add_query("b", "b", <<["b", "BOOLEAN"], ["B", "d"]>>, "b")
generate_java_code
add_class(A)
bool_value (true)
int_value (45)
add_command("c", "C", <<["c", "INTEGER"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "e"], ["A", "c"]>>)
int_value (7)
logical_negation
add_attribute("A", "b", "BOOLEAN")
int_value (37)
addition
add_command("A", "C", <<["BOOLEAN", "BOOLEAN"], ["e", "B"], ["C", "B"], ["D", "D"]>>)
add_attribute("B", "C", "BOOLEAN")
add_attribute("e", "D", "BOOLEAN")
add_query("a", "e", <<["a", "c"], ["B", "BOOLEAN"], ["B", "INTEGER"], ["d", "BOOLEAN"]>>, "e")
equals
add_attribute("B", "A", "a")
add_call_chain(<<D,b>>)
conjunction
type_check
int_value (39)
add_call_chain(<<e,e,D,c,c,c,D>>)
type_check
addition
int_value (46)
disjunction
add_call_chain(<<d,BOOLEAN,INTEGER,B,b,a>>)
logical_negation
int_value (38)
add_command("c", "b", <<["d", "A"], ["A", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "INTEGER"]>>)
generate_java_code
add_call_chain(<<e,a,D,A,d,a,b,INTEGER,C>>)
multiplication
add_command("d", "C", <<["A", "BOOLEAN"], ["b", "b"], ["a", "BOOLEAN"], ["D", "C"], ["d", "C"], ["b", "BOOLEAN"], ["b", "e"], ["B", "d"], ["d", "a"]>>)
add_attribute("a", "c", "BOOLEAN")
add_call_chain(<<B,a,D,BOOLEAN,B,D,A,d>>)
add_command("B", "e", <<["d", "b"], ["d", "BOOLEAN"], ["INTEGER", "INTEGER"], ["INTEGER", "BOOLEAN"], ["a", "e"], ["b", "INTEGER"], ["B", "BOOLEAN"]>>)
logical_negation
disjunction
bool_value (true)
logical_negation
int_value (10)
