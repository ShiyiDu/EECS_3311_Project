conjunction
add_command("e", "c", <<["c", "BOOLEAN"]>>)
add_query("c", "BOOLEAN", <<["INTEGER", "BOOLEAN"], ["e", "A"], ["D", "A"], ["a", "e"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "a"], ["e", "a"], ["b", "BOOLEAN"]>>, "INTEGER")
add_command("c", "e", <<["INTEGER", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "A"], ["INTEGER", "BOOLEAN"], ["d", "INTEGER"]>>)
add_call_chain(<<c,c,a,A,c,D,C,B>>)
bool_value (true)
type_check
greater_than
add_command("a", "D", <<["A", "INTEGER"], ["b", "INTEGER"]>>)
add_command("B", "B", <<["c", "INTEGER"], ["D", "e"], ["a", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "a"], ["d", "INTEGER"], ["e", "e"], ["d", "BOOLEAN"], ["C", "INTEGER"]>>)
generate_java_code
logical_negation
add_query("b", "b", <<["A", "c"]>>, "b")
add_attribute("b", "B", "INTEGER")
add_command("d", "e", <<["a", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "B"], ["a", "BOOLEAN"], ["c", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["D", "e"], ["a", "INTEGER"]>>)
add_call_chain(<<C,b,e,A,INTEGER,C,INTEGER,B,C>>)
numerical_negation
int_value (13)
add_attribute("A", "D", "c")
add_query("B", "A", <<["b", "B"], ["c", "BOOLEAN"], ["c", "INTEGER"], ["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"], ["b", "INTEGER"]>>, "A")
equals
type_check
add_call_chain(<<b,b,A,A,C,BOOLEAN,d,B,d>>)
logical_negation
int_value (20)
add_attribute("c", "BOOLEAN", "INTEGER")
add_attribute("D", "INTEGER", "b")
add_command("a", "a", <<["B", "BOOLEAN"], ["C", "INTEGER"], ["INTEGER", "INTEGER"], ["D", "B"]>>)
add_call_chain(<<b,A,a,D,A,C,a>>)
int_value (24)
logical_negation
logical_negation
add_call_chain(<<b,a,B,BOOLEAN>>)
type_check
equals
add_call_chain(<<D,c,A>>)
bool_value (true)
add_command("B", "A", <<["C", "d"], ["d", "BOOLEAN"], ["c", "BOOLEAN"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "BOOLEAN"]>>)
add_query("D", "C", <<["A", "BOOLEAN"], ["C", "D"]>>, "c")
add_call_chain(<<b,D,A,b>>)
numerical_negation
add_attribute("a", "B", "BOOLEAN")
generate_java_code
generate_java_code
generate_java_code
numerical_negation
conjunction
add_command("a", "B", <<["b", "INTEGER"], ["e", "BOOLEAN"]>>)
type_check
add_call_chain(<<e,c,BOOLEAN>>)
generate_java_code
add_command("d", "a", <<["b", "INTEGER"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["INTEGER", "INTEGER"], ["BOOLEAN", "D"], ["a", "INTEGER"], ["b", "d"], ["INTEGER", "INTEGER"]>>)
add_attribute("a", "e", "BOOLEAN")
modulo
add_class(INTEGER)
add_call_chain(<<c,b,d,C,d,d,e,C,c>>)
add_call_chain(<<a,BOOLEAN,a,D,B,INTEGER,b>>)
logical_negation
add_command("B", "C", <<["b", "b"], ["d", "INTEGER"], ["B", "B"], ["C", "c"]>>)
add_query("INTEGER", "b", <<["A", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "a"], ["A", "C"], ["C", "INTEGER"], ["a", "BOOLEAN"], ["A", "INTEGER"], ["B", "BOOLEAN"]>>, "INTEGER")
add_call_chain(<<C,B,e,A,c,d,c,A>>)
add_command("C", "e", <<["e", "BOOLEAN"], ["e", "INTEGER"], ["A", "INTEGER"], ["e", "INTEGER"], ["c", "A"]>>)
disjunction
add_attribute("d", "B", "INTEGER")
type_check
add_attribute("C", "B", "e")
add_attribute("B", "d", "e")
bool_value (true)
add_call_chain(<<c,d,B,A,A,c,d>>)
int_value (39)
add_query("b", "a", <<["e", "INTEGER"], ["B", "c"], ["a", "A"], ["D", "C"], ["BOOLEAN", "BOOLEAN"], ["A", "c"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "BOOLEAN"]>>, "a")
add_call_chain(<<BOOLEAN,INTEGER,b,A,D,B,a,b>>)
generate_java_code
add_query("e", "c", <<["D", "BOOLEAN"], ["C", "INTEGER"], ["e", "INTEGER"], ["A", "INTEGER"], ["d", "BOOLEAN"], ["e", "b"]>>, "c")
add_query("BOOLEAN", "B", <<["BOOLEAN", "BOOLEAN"], ["B", "b"]>>, "BOOLEAN")
add_call_chain(<<d,A,D,INTEGER,c,d,A>>)
int_value (28)
conjunction
add_attribute("e", "B", "b")
type_check
add_call_chain(<<c,c,d,b,BOOLEAN,D,C,C>>)
add_attribute("C", "A", "C")
logical_negation
addition
bool_value (true)
add_attribute("D", "C", "INTEGER")
type_check
add_class(B)
add_query("c", "c", <<["C", "BOOLEAN"], ["b", "A"], ["b", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["b", "INTEGER"], ["d", "INTEGER"], ["A", "INTEGER"], ["C", "BOOLEAN"]>>, "B")
add_query("C", "b", <<["BOOLEAN", "BOOLEAN"], ["C", "INTEGER"], ["B", "C"]>>, "B")
int_value (38)
generate_java_code
add_class(D)
add_call_chain(<<D,D,a,INTEGER,BOOLEAN>>)
add_call_chain(<<b,b,b,D,c,b,e,d>>)
add_attribute("e", "d", "A")
logical_negation
add_call_chain(<<C>>)
int_value (21)
addition
int_value (12)
add_attribute("e", "B", "BOOLEAN")
int_value (25)
add_query("C", "A", <<["B", "INTEGER"], ["INTEGER", "INTEGER"], ["a", "BOOLEAN"], ["INTEGER", "INTEGER"], ["d", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["e", "BOOLEAN"]>>, "INTEGER")
int_value (46)
logical_negation
add_query("D", "INTEGER", <<["d", "BOOLEAN"], ["a", "INTEGER"], ["INTEGER", "INTEGER"]>>, "b")
numerical_negation
add_attribute("d", "A", "c")
numerical_negation
modulo
logical_negation
int_value (45)
less_than
add_query("e", "D", <<["B", "INTEGER"]>>, "c")
disjunction
add_call_chain(<<c,e,d,BOOLEAN,b>>)
add_query("A", "d", <<["a", "INTEGER"]>>, "D")
add_call_chain(<<e,A,B,A>>)
generate_java_code
add_class(INTEGER)
add_attribute("e", "d", "D")
bool_value (true)
add_query("B", "A", <<["c", "BOOLEAN"], ["b", "D"], ["BOOLEAN", "d"], ["C", "D"]>>, "C")
add_command("B", "d", <<["a", "BOOLEAN"], ["d", "INTEGER"], ["a", "INTEGER"], ["D", "BOOLEAN"]>>)
add_command("BOOLEAN", "C", <<["d", "INTEGER"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["C", "INTEGER"], ["b", "INTEGER"], ["a", "INTEGER"], ["c", "a"], ["b", "BOOLEAN"]>>)
quotient
generate_java_code
add_query("B", "a", <<["B", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "BOOLEAN"]>>, "C")
greater_than
generate_java_code
add_call_chain(<<C,c,D,d>>)
conjunction
add_command("d", "d", <<["A", "a"], ["a", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "INTEGER"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["D", "b"], ["A", "BOOLEAN"], ["A", "C"]>>)
bool_value (false)
add_attribute("e", "b", "INTEGER")
add_call_chain(<<e>>)
type_check
type_check
int_value (12)
subtraction
generate_java_code
less_than
add_command("c", "b", <<["e", "e"], ["c", "C"], ["b", "BOOLEAN"], ["a", "B"], ["B", "BOOLEAN"], ["A", "c"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["B", "c"]>>)
add_class(c)
generate_java_code
add_call_chain(<<A,C,e,e>>)
add_query("A", "e", <<["B", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "INTEGER"]>>, "INTEGER")
add_command("d", "b", <<["INTEGER", "BOOLEAN"], ["A", "BOOLEAN"]>>)
int_value (45)
add_query("e", "d", <<["e", "INTEGER"], ["A", "BOOLEAN"], ["c", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "C"], ["C", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["c", "BOOLEAN"], ["b", "D"]>>, "D")
add_call_chain(<<a,d,BOOLEAN,A>>)
add_command("c", "d", <<["BOOLEAN", "D"], ["d", "d"], ["A", "INTEGER"], ["b", "C"], ["A", "c"], ["INTEGER", "INTEGER"], ["e", "d"]>>)
conjunction
disjunction
add_class(c)
add_query("C", "D", <<["d", "INTEGER"], ["INTEGER", "BOOLEAN"], ["A", "INTEGER"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["D", "C"], ["B", "BOOLEAN"]>>, "INTEGER")
add_command("A", "B", <<["A", "BOOLEAN"], ["C", "b"], ["A", "BOOLEAN"], ["C", "C"], ["b", "BOOLEAN"], ["A", "C"], ["e", "BOOLEAN"], ["e", "BOOLEAN"]>>)
add_call_chain(<<e,INTEGER,D,D>>)
add_call_chain(<<d,e>>)
add_call_chain(<<D>>)
conjunction
add_query("e", "B", <<["BOOLEAN", "INTEGER"], ["C", "A"], ["a", "INTEGER"], ["d", "d"], ["BOOLEAN", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "INTEGER"]>>, "B")
add_query("a", "b", <<["BOOLEAN", "INTEGER"], ["D", "BOOLEAN"], ["b", "INTEGER"], ["B", "INTEGER"], ["e", "e"]>>, "b")
logical_negation
add_class(e)
disjunction
int_value (8)
add_command("B", "d", <<["b", "A"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["a", "A"]>>)
add_query("B", "A", <<["e", "INTEGER"], ["D", "INTEGER"], ["c", "BOOLEAN"], ["a", "INTEGER"], ["D", "INTEGER"], ["b", "e"], ["a", "BOOLEAN"]>>, "A")
add_query("c", "C", <<["D", "C"], ["C", "INTEGER"]>>, "C")
int_value (31)
add_command("b", "D", <<["A", "BOOLEAN"], ["A", "e"], ["A", "B"]>>)
add_attribute("c", "d", "BOOLEAN")
add_call_chain(<<e,B,A,BOOLEAN>>)
numerical_negation
greater_than
add_attribute("B", "D", "C")
add_query("INTEGER", "B", <<["BOOLEAN", "b"], ["INTEGER", "BOOLEAN"], ["D", "BOOLEAN"]>>, "C")
int_value (15)
less_than
modulo
numerical_negation
bool_value (false)
disjunction
add_query("B", "D", <<["a", "INTEGER"]>>, "B")
add_command("d", "c", <<["B", "BOOLEAN"]>>)
add_call_chain(<<C,d,c>>)
add_command("C", "A", <<["C", "INTEGER"]>>)
type_check
add_attribute("D", "a", "BOOLEAN")
type_check
bool_value (false)
add_command("INTEGER", "b", <<["d", "BOOLEAN"], ["A", "INTEGER"], ["a", "BOOLEAN"]>>)
add_attribute("d", "C", "INTEGER")
add_class(d)
add_call_chain(<<B,e,e,e,A>>)
add_call_chain(<<A,d,INTEGER,b,A,e,INTEGER>>)
bool_value (false)
add_call_chain(<<C,A,e,a,INTEGER,d,a>>)
add_command("D", "A", <<["D", "BOOLEAN"], ["A", "INTEGER"], ["A", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "d"], ["b", "INTEGER"], ["b", "INTEGER"]>>)
add_query("D", "a", <<["C", "a"], ["C", "BOOLEAN"]>>, "c")
bool_value (false)
multiplication
generate_java_code
add_call_chain(<<A,A,C,a,d,d,D>>)
numerical_negation
add_command("B", "d", <<["c", "C"], ["b", "INTEGER"]>>)
conjunction
numerical_negation
quotient
greater_than
add_call_chain(<<e,d,C,D,d,C,b,c,a>>)
add_call_chain(<<C,d,A,INTEGER,BOOLEAN>>)
add_call_chain(<<INTEGER,C,d,BOOLEAN,B,b>>)
quotient
add_attribute("d", "e", "BOOLEAN")
add_call_chain(<<C,B,A,D,e,D,B>>)
add_attribute("b", "b", "INTEGER")
add_query("A", "A", <<["e", "BOOLEAN"], ["D", "a"]>>, "d")
conjunction
type_check
numerical_negation
bool_value (false)
add_command("BOOLEAN", "INTEGER", <<["b", "INTEGER"]>>)
numerical_negation
numerical_negation
int_value (47)
int_value (49)
add_call_chain(<<a,B,A,d,a,C,e>>)
logical_negation
add_attribute("a", "INTEGER", "BOOLEAN")
add_call_chain(<<a,b,d,D,a,D,d,e>>)
add_call_chain(<<A,D,A,BOOLEAN>>)
add_query("B", "A", <<["b", "b"], ["INTEGER", "B"], ["d", "INTEGER"], ["c", "BOOLEAN"], ["e", "INTEGER"], ["A", "a"], ["a", "INTEGER"], ["D", "BOOLEAN"], ["d", "C"]>>, "D")
add_query("b", "d", <<["BOOLEAN", "e"], ["A", "C"], ["BOOLEAN", "d"], ["b", "BOOLEAN"], ["D", "INTEGER"]>>, "e")
add_class(c)
add_query("d", "B", <<["INTEGER", "BOOLEAN"], ["A", "e"], ["B", "BOOLEAN"], ["C", "INTEGER"]>>, "c")
add_query("c", "C", <<["A", "BOOLEAN"], ["a", "INTEGER"]>>, "B")
int_value (48)
add_call_chain(<<B,D>>)
