numerical_negation
disjunction
int_value (25)
logical_negation
disjunction
add_call_chain(<<d,e>>)
add_query("d", "D", <<["INTEGER", "BOOLEAN"], ["INTEGER", "B"]>>, "a")
bool_value (false)
int_value (46)
int_value (27)
add_call_chain(<<a,B,INTEGER>>)
add_query("D", "B", <<["d", "A"], ["A", "b"], ["A", "INTEGER"], ["d", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["C", "B"]>>, "D")
add_call_chain(<<B,C,d>>)
int_value (4)
numerical_negation
quotient
int_value (12)
add_query("A", "a", <<["A", "BOOLEAN"], ["e", "C"], ["b", "INTEGER"], ["B", "e"], ["d", "D"], ["B", "INTEGER"], ["BOOLEAN", "INTEGER"], ["INTEGER", "INTEGER"]>>, "e")
type_check
numerical_negation
add_call_chain(<<A,c,A,A,d>>)
numerical_negation
add_query("D", "a", <<["a", "b"], ["d", "e"], ["B", "BOOLEAN"], ["e", "BOOLEAN"], ["BOOLEAN", "C"], ["INTEGER", "a"]>>, "d")
add_command("A", "d", <<["b", "d"], ["b", "B"]>>)
type_check
bool_value (true)
add_class(B)
add_query("B", "D", <<["D", "INTEGER"], ["C", "INTEGER"], ["b", "BOOLEAN"], ["a", "d"], ["B", "D"], ["B", "e"]>>, "a")
equals
add_call_chain(<<a,A,e,D,D,c,a,e>>)
add_query("e", "B", <<["A", "BOOLEAN"]>>, "B")
type_check
type_check
generate_java_code
add_attribute("A", "A", "b")
add_command("D", "A", <<["A", "b"], ["D", "A"], ["D", "INTEGER"], ["C", "INTEGER"], ["A", "D"]>>)
add_class(b)
add_query("A", "d", <<["D", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "INTEGER"], ["a", "BOOLEAN"], ["BOOLEAN", "C"], ["B", "A"]>>, "c")
add_call_chain(<<e,D,e>>)
add_call_chain(<<BOOLEAN,A,c,INTEGER,c,B,c>>)
int_value (5)
add_command("A", "c", <<["a", "BOOLEAN"], ["B", "INTEGER"], ["D", "INTEGER"], ["e", "INTEGER"], ["D", "INTEGER"]>>)
add_query("A", "c", <<["C", "B"], ["A", "BOOLEAN"]>>, "A")
add_class(a)
numerical_negation
add_class(e)
disjunction
add_query("c", "b", <<["a", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["a", "INTEGER"], ["e", "BOOLEAN"], ["e", "BOOLEAN"]>>, "D")
int_value (37)
bool_value (false)
add_call_chain(<<e,B,C,d,A,A>>)
generate_java_code
add_class(d)
less_than
greater_than
logical_negation
add_attribute("d", "C", "b")
add_class(c)
logical_negation
bool_value (false)
type_check
int_value (16)
add_class(b)
int_value (11)
generate_java_code
logical_negation
add_call_chain(<<d,c,D>>)
add_attribute("d", "b", "INTEGER")
generate_java_code
add_call_chain(<<C,e,D,e>>)
numerical_negation
add_command("D", "C", <<["d", "B"], ["e", "a"], ["c", "C"], ["c", "INTEGER"], ["d", "INTEGER"], ["b", "BOOLEAN"], ["e", "BOOLEAN"], ["c", "INTEGER"]>>)
generate_java_code
bool_value (true)
numerical_negation
multiplication
logical_negation
bool_value (false)
int_value (40)
add_command("d", "e", <<["A", "B"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["b", "BOOLEAN"], ["A", "C"], ["A", "D"]>>)
conjunction
conjunction
add_command("b", "BOOLEAN", <<["e", "INTEGER"], ["e", "B"]>>)
add_class(B)
add_call_chain(<<B,C>>)
int_value (41)
add_attribute("D", "D", "INTEGER")
numerical_negation
int_value (46)
generate_java_code
bool_value (false)
quotient
add_call_chain(<<A,d,b,d,d,B,B>>)
add_class(BOOLEAN)
add_class(e)
greater_than
logical_negation
addition
int_value (43)
bool_value (false)
logical_negation
logical_negation
disjunction
add_attribute("BOOLEAN", "e", "A")
bool_value (false)
greater_than
add_call_chain(<<C>>)
add_attribute("C", "a", "BOOLEAN")
add_call_chain(<<d,D>>)
conjunction
bool_value (true)
add_query("d", "BOOLEAN", <<["b", "BOOLEAN"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["B", "A"], ["b", "BOOLEAN"], ["C", "INTEGER"], ["c", "D"]>>, "c")
logical_negation
subtraction
add_call_chain(<<d,A,INTEGER,d,b>>)
add_query("a", "A", <<["a", "BOOLEAN"], ["D", "INTEGER"], ["C", "BOOLEAN"]>>, "d")
int_value (14)
add_call_chain(<<B,A,c>>)
logical_negation
add_command("c", "D", <<["b", "b"]>>)
add_attribute("b", "d", "e")
int_value (15)
add_query("a", "B", <<["A", "BOOLEAN"], ["D", "INTEGER"], ["INTEGER", "A"], ["e", "C"]>>, "b")
bool_value (false)
bool_value (true)
equals
add_query("C", "d", <<["C", "INTEGER"], ["d", "A"], ["B", "INTEGER"], ["a", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "c"], ["c", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "BOOLEAN"]>>, "A")
generate_java_code
add_call_chain(<<a,e,D,INTEGER,A>>)
add_call_chain(<<c,d,b,D>>)
add_command("b", "C", <<["b", "INTEGER"], ["e", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["b", "BOOLEAN"]>>)
multiplication
logical_negation
add_attribute("D", "e", "INTEGER")
add_attribute("C", "e", "b")
numerical_negation
bool_value (false)
add_command("A", "A", <<["b", "INTEGER"], ["C", "INTEGER"], ["B", "B"]>>)
add_call_chain(<<D,c,A,C,e,b>>)
type_check
add_call_chain(<<D,D,A,e,B>>)
int_value (13)
int_value (39)
add_attribute("A", "a", "INTEGER")
add_query("C", "BOOLEAN", <<["a", "INTEGER"], ["C", "d"], ["C", "INTEGER"], ["D", "INTEGER"], ["b", "c"]>>, "BOOLEAN")
conjunction
add_attribute("B", "C", "BOOLEAN")
numerical_negation
numerical_negation
int_value (37)
logical_negation
add_call_chain(<<C,INTEGER,D,a,b,e>>)
add_command("D", "A", <<["b", "BOOLEAN"], ["e", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>)
int_value (44)
add_call_chain(<<d,a,d,A,d,b,B,c>>)
conjunction
add_query("d", "A", <<["C", "INTEGER"], ["a", "b"], ["B", "BOOLEAN"]>>, "e")
add_command("d", "e", <<["D", "INTEGER"]>>)
logical_negation
add_call_chain(<<C,e>>)
add_call_chain(<<a,a,b,INTEGER,INTEGER>>)
add_call_chain(<<c,C,A,B,C,b,e,D>>)
add_call_chain(<<C,b,e,e>>)
numerical_negation
add_call_chain(<<e,B,A,d>>)
add_command("D", "c", <<["e", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "BOOLEAN"]>>)
add_attribute("B", "D", "BOOLEAN")
add_query("D", "BOOLEAN", <<["b", "INTEGER"], ["B", "BOOLEAN"]>>, "C")
add_command("b", "a", <<["c", "A"], ["C", "C"], ["C", "b"], ["b", "B"]>>)
add_query("d", "B", <<["D", "B"], ["A", "BOOLEAN"], ["C", "e"], ["e", "INTEGER"], ["e", "C"], ["INTEGER", "INTEGER"], ["A", "C"], ["INTEGER", "BOOLEAN"]>>, "D")
add_class(B)
add_attribute("C", "A", "A")
logical_negation
type_check
add_class(a)
numerical_negation
add_query("D", "a", <<["C", "b"], ["d", "BOOLEAN"], ["b", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["e", "B"], ["e", "BOOLEAN"]>>, "e")
int_value (47)
add_call_chain(<<c,D,B,e,D,b,BOOLEAN,d,D>>)
add_command("C", "D", <<["C", "B"], ["BOOLEAN", "b"], ["b", "INTEGER"]>>)
generate_java_code
greater_than
numerical_negation
int_value (47)
add_class(a)
int_value (22)
bool_value (true)
generate_java_code
multiplication
add_class(C)
quotient
bool_value (true)
quotient
type_check
add_class(a)
add_call_chain(<<C,a,B,a,C>>)
add_command("C", "INTEGER", <<["c", "BOOLEAN"], ["c", "INTEGER"], ["a", "BOOLEAN"], ["c", "BOOLEAN"]>>)
int_value (13)
add_call_chain(<<C,A,BOOLEAN>>)
add_call_chain(<<A,INTEGER,b,b,B>>)
add_call_chain(<<BOOLEAN,B,d,d,A,B>>)
add_command("INTEGER", "A", <<["e", "INTEGER"], ["a", "a"], ["b", "A"], ["c", "c"], ["BOOLEAN", "INTEGER"], ["A", "BOOLEAN"]>>)
numerical_negation
add_command("D", "b", <<["C", "C"], ["C", "D"], ["d", "BOOLEAN"], ["c", "b"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["b", "BOOLEAN"]>>)
add_command("C", "D", <<["INTEGER", "A"], ["c", "BOOLEAN"], ["b", "INTEGER"], ["A", "A"], ["D", "A"], ["c", "A"], ["a", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["INTEGER", "e"]>>)
add_call_chain(<<A,INTEGER,a,a>>)
add_command("INTEGER", "B", <<["D", "e"]>>)
int_value (2)
int_value (9)
int_value (14)
add_attribute("INTEGER", "D", "d")
logical_negation
add_query("b", "d", <<["B", "B"], ["a", "B"], ["d", "INTEGER"]>>, "C")
disjunction
add_command("BOOLEAN", "b", <<["D", "a"]>>)
int_value (14)
numerical_negation
type_check
add_command("d", "C", <<["A", "BOOLEAN"], ["c", "INTEGER"], ["B", "BOOLEAN"], ["A", "BOOLEAN"]>>)
addition
logical_negation
add_call_chain(<<A>>)
logical_negation
logical_negation
add_attribute("c", "B", "d")
add_attribute("b", "D", "BOOLEAN")
add_query("a", "C", <<["D", "BOOLEAN"], ["B", "INTEGER"], ["e", "INTEGER"], ["C", "BOOLEAN"], ["B", "INTEGER"], ["b", "A"]>>, "C")
add_command("D", "d", <<["d", "d"], ["D", "INTEGER"], ["c", "BOOLEAN"], ["BOOLEAN", "b"], ["a", "BOOLEAN"]>>)
bool_value (false)
add_call_chain(<<d,e,b,A,d,a>>)
add_command("e", "d", <<["A", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "INTEGER"]>>)
add_command("a", "B", <<["c", "INTEGER"], ["d", "d"], ["d", "INTEGER"], ["a", "INTEGER"], ["e", "C"]>>)
add_attribute("d", "A", "BOOLEAN")
add_call_chain(<<d,C,e>>)
add_call_chain(<<d,b,A,e,D,e>>)
modulo
add_attribute("c", "INTEGER", "BOOLEAN")
add_attribute("b", "INTEGER", "INTEGER")
equals
numerical_negation
add_call_chain(<<c,C,b,C>>)
numerical_negation
add_attribute("d", "B", "BOOLEAN")
bool_value (false)
add_query("a", "c", <<["C", "BOOLEAN"], ["A", "INTEGER"], ["C", "INTEGER"], ["B", "INTEGER"]>>, "e")
add_query("c", "B", <<["e", "B"], ["a", "INTEGER"], ["BOOLEAN", "INTEGER"], ["B", "INTEGER"], ["d", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["B", "BOOLEAN"]>>, "D")
add_call_chain(<<INTEGER,d,a,d,c,C,A,b,b>>)
add_call_chain(<<D,d,d,b,D,A,b,D,INTEGER>>)
bool_value (true)
add_command("B", "A", <<["B", "INTEGER"], ["C", "BOOLEAN"], ["B", "B"], ["c", "BOOLEAN"], ["b", "D"]>>)
add_class(B)
equals
equals
add_attribute("d", "D", "D")
numerical_negation
