add_attribute("c", "a", "INTEGER")
add_call_chain(<<a,d,e>>)
add_query("B", "A", <<["INTEGER", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "C"]>>, "c")
greater_than
add_query("a", "b", <<["D", "BOOLEAN"], ["BOOLEAN", "D"], ["c", "BOOLEAN"], ["B", "BOOLEAN"], ["BOOLEAN", "B"], ["b", "D"], ["B", "INTEGER"], ["A", "BOOLEAN"]>>, "e")
conjunction
add_class(INTEGER)
add_query("INTEGER", "e", <<["A", "BOOLEAN"], ["C", "INTEGER"], ["D", "INTEGER"]>>, "A")
add_query("a", "BOOLEAN", <<["C", "INTEGER"], ["A", "INTEGER"], ["c", "BOOLEAN"]>>, "b")
add_call_chain(<<B,B,BOOLEAN,d,c,B,C,A,a>>)
add_call_chain(<<c>>)
add_query("e", "d", <<["c", "BOOLEAN"], ["b", "d"], ["C", "BOOLEAN"], ["d", "BOOLEAN"], ["b", "BOOLEAN"]>>, "C")
conjunction
add_class(B)
add_class(d)
add_call_chain(<<a,INTEGER,B,d>>)
logical_negation
bool_value (false)
add_call_chain(<<D,D,A,D>>)
subtraction
add_attribute("b", "e", "BOOLEAN")
type_check
add_attribute("e", "c", "INTEGER")
add_attribute("a", "INTEGER", "BOOLEAN")
bool_value (true)
add_attribute("e", "D", "BOOLEAN")
add_class(BOOLEAN)
add_attribute("B", "BOOLEAN", "INTEGER")
add_command("A", "C", <<["D", "INTEGER"], ["D", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "INTEGER"], ["B", "INTEGER"], ["B", "INTEGER"], ["A", "INTEGER"]>>)
int_value (38)
bool_value (false)
add_call_chain(<<D,d,e,e,e,c,e,A>>)
numerical_negation
logical_negation
add_class(c)
numerical_negation
add_call_chain(<<B,e,d,a,BOOLEAN,INTEGER,C,b,c>>)
equals
add_call_chain(<<b,e,d>>)
bool_value (false)
numerical_negation
add_attribute("e", "INTEGER", "BOOLEAN")
add_call_chain(<<B,A,BOOLEAN,D,a,C,A,d,A>>)
add_attribute("A", "d", "c")
add_class(d)
numerical_negation
generate_java_code
modulo
add_attribute("B", "c", "BOOLEAN")
add_call_chain(<<A,D,A,C,C,D>>)
bool_value (true)
add_query("c", "c", <<["a", "INTEGER"], ["C", "d"], ["D", "INTEGER"], ["A", "INTEGER"], ["a", "INTEGER"], ["INTEGER", "BOOLEAN"]>>, "INTEGER")
quotient
add_command("e", "A", <<["e", "e"], ["INTEGER", "INTEGER"]>>)
conjunction
logical_negation
generate_java_code
generate_java_code
add_attribute("A", "c", "INTEGER")
add_class(A)
int_value (37)
add_call_chain(<<D,a,INTEGER>>)
add_class(e)
add_class(C)
add_class(d)
add_call_chain(<<b>>)
add_attribute("c", "d", "INTEGER")
add_call_chain(<<C,b,BOOLEAN>>)
bool_value (true)
addition
numerical_negation
add_attribute("e", "INTEGER", "e")
int_value (31)
quotient
int_value (32)
int_value (22)
add_query("C", "A", <<["A", "INTEGER"], ["BOOLEAN", "INTEGER"], ["INTEGER", "BOOLEAN"], ["C", "INTEGER"]>>, "B")
bool_value (true)
generate_java_code
disjunction
conjunction
add_class(B)
add_call_chain(<<D,B>>)
bool_value (false)
logical_negation
add_command("D", "a", <<["a", "b"], ["B", "A"], ["A", "INTEGER"], ["c", "INTEGER"]>>)
add_command("C", "e", <<["B", "BOOLEAN"]>>)
bool_value (false)
add_attribute("A", "b", "A")
add_command("D", "B", <<["D", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "A"], ["c", "BOOLEAN"], ["e", "INTEGER"], ["C", "D"], ["a", "BOOLEAN"], ["e", "INTEGER"]>>)
multiplication
add_call_chain(<<c>>)
add_command("C", "c", <<["a", "BOOLEAN"], ["C", "INTEGER"], ["a", "INTEGER"], ["e", "b"], ["a", "INTEGER"], ["C", "INTEGER"], ["B", "a"], ["D", "INTEGER"], ["c", "BOOLEAN"]>>)
greater_than
add_query("e", "A", <<["A", "BOOLEAN"], ["a", "BOOLEAN"]>>, "e")
add_query("b", "d", <<["e", "INTEGER"], ["b", "INTEGER"], ["c", "D"], ["d", "C"], ["c", "INTEGER"]>>, "C")
add_attribute("b", "A", "BOOLEAN")
add_call_chain(<<a,d,A,a>>)
generate_java_code
type_check
logical_negation
add_query("C", "c", <<["C", "INTEGER"], ["a", "INTEGER"], ["D", "a"], ["A", "INTEGER"]>>, "D")
type_check
greater_than
generate_java_code
add_command("b", "d", <<["C", "INTEGER"], ["INTEGER", "BOOLEAN"], ["B", "c"], ["e", "INTEGER"], ["a", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "D"], ["b", "BOOLEAN"], ["d", "INTEGER"]>>)
add_command("C", "BOOLEAN", <<["B", "INTEGER"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["d", "INTEGER"], ["d", "INTEGER"], ["INTEGER", "INTEGER"], ["D", "INTEGER"], ["e", "INTEGER"], ["A", "C"]>>)
greater_than
add_call_chain(<<d,c,A,e,c,b,A>>)
add_call_chain(<<A,a,INTEGER,B,A,d,b,B>>)
logical_negation
add_call_chain(<<A,c>>)
add_call_chain(<<d,BOOLEAN,A,c,b,C,d,d>>)
add_command("A", "d", <<["INTEGER", "INTEGER"], ["D", "BOOLEAN"]>>)
add_query("A", "e", <<["d", "BOOLEAN"], ["B", "INTEGER"], ["d", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "BOOLEAN"]>>, "D")
logical_negation
disjunction
int_value (14)
generate_java_code
logical_negation
multiplication
int_value (7)
add_attribute("INTEGER", "c", "INTEGER")
int_value (2)
bool_value (true)
add_command("c", "B", <<["D", "a"], ["d", "A"], ["b", "d"]>>)
add_call_chain(<<d,c,e,d,C,e,b,A>>)
bool_value (false)
int_value (45)
add_query("B", "a", <<["D", "BOOLEAN"]>>, "C")
numerical_negation
disjunction
numerical_negation
bool_value (true)
numerical_negation
int_value (17)
bool_value (false)
add_call_chain(<<B>>)
bool_value (true)
add_call_chain(<<a,C,d,e,e,B>>)
add_attribute("a", "INTEGER", "INTEGER")
add_class(C)
multiplication
add_call_chain(<<d>>)
generate_java_code
bool_value (true)
generate_java_code
logical_negation
add_query("A", "c", <<["C", "INTEGER"], ["B", "A"], ["d", "b"], ["D", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["b", "e"], ["b", "INTEGER"], ["e", "BOOLEAN"], ["e", "INTEGER"]>>, "d")
add_attribute("c", "e", "BOOLEAN")
add_command("B", "B", <<["b", "C"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["D", "e"], ["C", "INTEGER"]>>)
add_call_chain(<<d,e,a>>)
add_call_chain(<<c,A,b,B,B,C,BOOLEAN,c,B>>)
add_attribute("BOOLEAN", "e", "INTEGER")
add_call_chain(<<C,b,a,C>>)
logical_negation
add_command("B", "D", <<["D", "INTEGER"], ["C", "INTEGER"], ["A", "c"]>>)
type_check
add_query("D", "A", <<["INTEGER", "INTEGER"], ["c", "a"], ["b", "a"], ["a", "INTEGER"], ["C", "BOOLEAN"]>>, "d")
add_call_chain(<<B,d,C,D,D,c,A,C>>)
add_command("D", "c", <<["INTEGER", "BOOLEAN"], ["A", "INTEGER"], ["A", "BOOLEAN"]>>)
add_call_chain(<<e,d,D,B,B,c,D,D,b>>)
add_command("a", "a", <<["c", "BOOLEAN"], ["INTEGER", "d"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["b", "BOOLEAN"]>>)
numerical_negation
add_query("c", "D", <<["B", "INTEGER"], ["D", "b"], ["e", "A"], ["a", "INTEGER"]>>, "D")
type_check
logical_negation
subtraction
add_call_chain(<<C,INTEGER,INTEGER,b>>)
type_check
generate_java_code
add_query("B", "C", <<["BOOLEAN", "INTEGER"], ["D", "e"], ["C", "BOOLEAN"], ["C", "B"], ["BOOLEAN", "c"]>>, "d")
add_attribute("C", "D", "C")
add_command("C", "C", <<["b", "b"], ["d", "BOOLEAN"]>>)
add_attribute("d", "B", "a")
add_class(D)
add_attribute("A", "a", "INTEGER")
add_call_chain(<<D,d,C,d>>)
add_command("B", "INTEGER", <<["b", "BOOLEAN"], ["d", "a"], ["D", "INTEGER"], ["c", "BOOLEAN"], ["e", "e"], ["e", "b"], ["c", "INTEGER"], ["A", "BOOLEAN"], ["A", "BOOLEAN"]>>)
add_query("B", "D", <<["b", "b"], ["D", "INTEGER"], ["A", "INTEGER"], ["C", "b"], ["b", "BOOLEAN"], ["a", "D"], ["BOOLEAN", "b"], ["C", "BOOLEAN"]>>, "A")
int_value (14)
add_attribute("BOOLEAN", "A", "B")
add_class(a)
type_check
int_value (7)
int_value (18)
conjunction
numerical_negation
add_query("d", "a", <<["C", "BOOLEAN"], ["A", "C"], ["C", "d"], ["A", "B"], ["c", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "INTEGER"]>>, "B")
add_query("B", "b", <<["BOOLEAN", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "e"]>>, "c")
add_query("A", "a", <<["e", "b"]>>, "C")
type_check
int_value (24)
int_value (12)
add_call_chain(<<c,b,A,D,B,INTEGER,B,b,a>>)
add_query("e", "a", <<["BOOLEAN", "BOOLEAN"]>>, "c")
add_query("A", "C", <<["B", "c"], ["C", "BOOLEAN"], ["C", "D"], ["C", "C"], ["B", "BOOLEAN"], ["a", "B"], ["d", "INTEGER"], ["BOOLEAN", "d"], ["d", "INTEGER"]>>, "A")
bool_value (false)
add_class(D)
type_check
bool_value (false)
logical_negation
logical_negation
less_than
type_check
add_attribute("a", "a", "INTEGER")
add_call_chain(<<C,c,A,d,A,d,A>>)
add_class(C)
add_call_chain(<<D,A,c,D,a,B>>)
add_query("D", "INTEGER", <<["c", "D"], ["A", "D"], ["d", "INTEGER"], ["d", "A"], ["A", "INTEGER"], ["b", "BOOLEAN"], ["b", "BOOLEAN"]>>, "B")
add_call_chain(<<D,INTEGER,INTEGER,A,INTEGER,e,d,e,e>>)
add_call_chain(<<C,a,B,e,B>>)
int_value (28)
bool_value (false)
generate_java_code
generate_java_code
add_attribute("d", "b", "BOOLEAN")
add_call_chain(<<c,D>>)
bool_value (false)
less_than
add_query("A", "d", <<["B", "INTEGER"], ["B", "A"], ["b", "INTEGER"], ["d", "BOOLEAN"], ["C", "a"], ["B", "BOOLEAN"]>>, "A")
add_call_chain(<<d,c,C>>)
conjunction
subtraction
add_attribute("C", "A", "BOOLEAN")
logical_negation
add_query("C", "A", <<["B", "INTEGER"], ["d", "B"], ["d", "d"], ["c", "INTEGER"], ["e", "BOOLEAN"], ["A", "BOOLEAN"]>>, "d")
modulo
add_query("INTEGER", "d", <<["INTEGER", "INTEGER"], ["e", "BOOLEAN"], ["INTEGER", "INTEGER"], ["a", "C"], ["BOOLEAN", "BOOLEAN"]>>, "A")
bool_value (true)
bool_value (true)
int_value (14)
add_command("b", "b", <<["BOOLEAN", "INTEGER"], ["b", "BOOLEAN"], ["d", "A"], ["INTEGER", "INTEGER"], ["A", "INTEGER"], ["a", "BOOLEAN"], ["INTEGER", "INTEGER"]>>)
logical_negation
add_command("D", "c", <<["A", "INTEGER"], ["e", "INTEGER"], ["b", "d"], ["a", "INTEGER"], ["e", "D"], ["d", "BOOLEAN"]>>)
generate_java_code
numerical_negation
generate_java_code
add_class(e)
bool_value (true)
generate_java_code
disjunction
bool_value (false)
add_call_chain(<<D,a>>)
logical_negation
add_call_chain(<<C,A,INTEGER,d,B,D,e>>)
add_command("c", "b", <<["b", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "INTEGER"], ["D", "INTEGER"], ["a", "b"], ["d", "BOOLEAN"], ["B", "C"]>>)
add_command("d", "d", <<["A", "BOOLEAN"], ["B", "INTEGER"], ["C", "C"], ["d", "BOOLEAN"], ["c", "d"]>>)
greater_than
