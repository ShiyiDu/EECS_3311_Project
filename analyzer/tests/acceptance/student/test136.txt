conjunction
add_command("b", "D", <<["d", "c"], ["BOOLEAN", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "D"], ["c", "INTEGER"]>>)
add_attribute("BOOLEAN", "d", "INTEGER")
add_query("BOOLEAN", "c", <<["C", "INTEGER"], ["A", "a"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["B", "INTEGER"], ["C", "A"]>>, "B")
numerical_negation
add_call_chain(<<C,c,A,d,b,B,A>>)
equals
add_query("B", "a", <<["a", "INTEGER"], ["B", "d"], ["c", "INTEGER"], ["B", "INTEGER"]>>, "D")
int_value (20)
add_call_chain(<<b,BOOLEAN,a,C>>)
addition
logical_negation
logical_negation
add_query("a", "c", <<["C", "INTEGER"], ["B", "BOOLEAN"]>>, "c")
add_call_chain(<<e,B>>)
conjunction
generate_java_code
equals
add_query("a", "C", <<["A", "INTEGER"], ["C", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>, "e")
logical_negation
add_query("A", "d", <<["C", "INTEGER"], ["c", "BOOLEAN"], ["D", "INTEGER"], ["A", "D"], ["A", "INTEGER"], ["C", "BOOLEAN"]>>, "d")
addition
bool_value (true)
greater_than
add_call_chain(<<b,a,INTEGER,c>>)
add_call_chain(<<A,A,c,c>>)
subtraction
add_call_chain(<<b,e,e,BOOLEAN,a,A>>)
add_call_chain(<<b>>)
add_attribute("a", "B", "INTEGER")
add_query("C", "C", <<["A", "A"], ["c", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "C"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "a"], ["d", "INTEGER"], ["B", "BOOLEAN"]>>, "c")
add_class(e)
add_attribute("INTEGER", "b", "B")
add_command("D", "A", <<["a", "C"]>>)
add_command("d", "B", <<["BOOLEAN", "INTEGER"], ["d", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "BOOLEAN"]>>)
int_value (7)
add_command("A", "a", <<["b", "INTEGER"], ["b", "BOOLEAN"], ["C", "A"], ["D", "BOOLEAN"], ["a", "INTEGER"]>>)
type_check
add_command("b", "A", <<["A", "C"], ["C", "BOOLEAN"]>>)
type_check
add_call_chain(<<e,a,c>>)
conjunction
logical_negation
int_value (9)
add_command("C", "a", <<["c", "b"], ["C", "BOOLEAN"], ["e", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "a"], ["C", "INTEGER"]>>)
add_command("C", "c", <<["D", "b"], ["D", "BOOLEAN"], ["A", "c"], ["c", "INTEGER"], ["D", "INTEGER"], ["B", "b"], ["c", "INTEGER"], ["A", "INTEGER"]>>)
type_check
add_call_chain(<<b,C,D,e,INTEGER,a,a,C>>)
int_value (14)
add_call_chain(<<INTEGER>>)
add_call_chain(<<e,e,D,e,a>>)
add_call_chain(<<A,INTEGER>>)
add_call_chain(<<c,B,B,D,INTEGER,d,e,INTEGER,C>>)
add_call_chain(<<a,e,C,BOOLEAN>>)
greater_than
add_command("B", "b", <<["A", "BOOLEAN"], ["C", "INTEGER"], ["d", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
subtraction
numerical_negation
add_query("d", "b", <<["D", "a"], ["D", "B"], ["a", "INTEGER"], ["BOOLEAN", "INTEGER"], ["b", "BOOLEAN"], ["A", "D"], ["INTEGER", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "BOOLEAN"]>>, "D")
generate_java_code
add_attribute("B", "e", "a")
add_class(BOOLEAN)
add_command("A", "D", <<["e", "e"], ["B", "C"], ["D", "INTEGER"]>>)
add_attribute("C", "c", "BOOLEAN")
add_query("c", "INTEGER", <<["c", "BOOLEAN"], ["d", "A"], ["D", "BOOLEAN"]>>, "d")
add_call_chain(<<b,D,BOOLEAN,d,A>>)
add_query("C", "d", <<["d", "INTEGER"]>>, "b")
add_call_chain(<<c,B,e,e,c,a,C,D,B>>)
numerical_negation
int_value (20)
add_call_chain(<<BOOLEAN,B,B,a>>)
logical_negation
add_call_chain(<<e,INTEGER>>)
type_check
int_value (33)
less_than
add_query("d", "d", <<["a", "INTEGER"], ["BOOLEAN", "C"]>>, "a")
add_call_chain(<<b,BOOLEAN,BOOLEAN,e,BOOLEAN,BOOLEAN,c,c,b>>)
add_attribute("A", "A", "INTEGER")
add_query("A", "e", <<["a", "BOOLEAN"]>>, "A")
numerical_negation
add_class(a)
add_command("B", "INTEGER", <<["c", "INTEGER"], ["a", "INTEGER"], ["b", "INTEGER"], ["B", "d"], ["A", "b"], ["D", "BOOLEAN"]>>)
add_call_chain(<<D,A,a,B,a,B,a,INTEGER>>)
numerical_negation
logical_negation
add_attribute("d", "B", "BOOLEAN")
numerical_negation
type_check
add_call_chain(<<D,A,B,B,A,INTEGER,c,b>>)
bool_value (true)
bool_value (false)
add_call_chain(<<BOOLEAN>>)
add_call_chain(<<C,D>>)
add_call_chain(<<a>>)
add_command("A", "A", <<["D", "BOOLEAN"], ["BOOLEAN", "e"], ["d", "INTEGER"], ["b", "BOOLEAN"], ["a", "INTEGER"], ["D", "e"], ["A", "c"], ["INTEGER", "BOOLEAN"], ["B", "BOOLEAN"]>>)
add_attribute("a", "B", "d")
greater_than
add_command("D", "b", <<["d", "INTEGER"], ["a", "B"], ["B", "BOOLEAN"], ["C", "BOOLEAN"]>>)
int_value (8)
multiplication
greater_than
add_attribute("B", "B", "b")
logical_negation
add_call_chain(<<A>>)
numerical_negation
disjunction
add_attribute("e", "d", "BOOLEAN")
generate_java_code
int_value (28)
add_command("c", "a", <<["d", "D"], ["c", "INTEGER"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>)
bool_value (false)
numerical_negation
add_attribute("C", "B", "BOOLEAN")
numerical_negation
add_query("c", "D", <<["e", "c"], ["c", "d"], ["D", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["BOOLEAN", "INTEGER"], ["D", "A"], ["c", "e"], ["d", "INTEGER"]>>, "D")
bool_value (false)
type_check
add_command("C", "INTEGER", <<["C", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["b", "a"], ["c", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "D"]>>)
generate_java_code
add_class(D)
int_value (7)
add_command("b", "c", <<["c", "BOOLEAN"]>>)
int_value (36)
add_call_chain(<<e,A,d,C>>)
add_command("B", "A", <<["INTEGER", "C"], ["e", "e"], ["A", "INTEGER"]>>)
add_call_chain(<<d,D,B,d,C>>)
add_attribute("INTEGER", "d", "INTEGER")
logical_negation
int_value (2)
int_value (5)
add_class(D)
numerical_negation
equals
add_call_chain(<<D,b,c,B,a,BOOLEAN,B,C>>)
add_call_chain(<<e,BOOLEAN,A,b,B>>)
numerical_negation
add_query("B", "a", <<["d", "BOOLEAN"], ["e", "INTEGER"], ["c", "D"], ["INTEGER", "INTEGER"]>>, "D")
add_query("A", "b", <<["B", "B"], ["B", "B"], ["c", "BOOLEAN"]>>, "D")
add_class(e)
greater_than
add_call_chain(<<e,C,D,a>>)
add_attribute("D", "B", "INTEGER")
numerical_negation
add_call_chain(<<c>>)
numerical_negation
generate_java_code
bool_value (true)
subtraction
int_value (35)
bool_value (false)
type_check
add_attribute("D", "a", "c")
int_value (20)
add_call_chain(<<d,B,C,C,d,D,B>>)
add_attribute("BOOLEAN", "e", "BOOLEAN")
bool_value (false)
bool_value (false)
add_query("D", "B", <<["A", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "b"], ["BOOLEAN", "INTEGER"], ["BOOLEAN", "INTEGER"], ["c", "INTEGER"], ["D", "BOOLEAN"], ["e", "B"], ["D", "INTEGER"]>>, "B")
int_value (10)
numerical_negation
add_call_chain(<<c,d,e,e,a,D,e>>)
bool_value (true)
add_command("A", "a", <<["B", "INTEGER"], ["D", "BOOLEAN"], ["c", "BOOLEAN"], ["c", "INTEGER"], ["b", "INTEGER"], ["c", "A"]>>)
add_command("e", "B", <<["D", "BOOLEAN"], ["D", "d"], ["b", "BOOLEAN"]>>)
quotient
equals
add_query("D", "BOOLEAN", <<["a", "BOOLEAN"], ["b", "INTEGER"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["D", "INTEGER"], ["c", "A"]>>, "a")
add_call_chain(<<c,B,a>>)
add_call_chain(<<a,INTEGER,B,B,b,b>>)
numerical_negation
quotient
add_call_chain(<<c,A,e>>)
add_query("D", "d", <<["b", "BOOLEAN"], ["A", "INTEGER"]>>, "A")
add_attribute("b", "d", "INTEGER")
add_class(e)
add_query("d", "a", <<["BOOLEAN", "INTEGER"]>>, "C")
bool_value (true)
int_value (31)
int_value (44)
logical_negation
subtraction
generate_java_code
add_query("C", "A", <<["B", "INTEGER"]>>, "A")
numerical_negation
logical_negation
add_query("A", "C", <<["c", "c"], ["INTEGER", "C"], ["INTEGER", "INTEGER"], ["d", "b"]>>, "d")
add_call_chain(<<a,D,A,A,C,a,B,a,e>>)
type_check
add_query("BOOLEAN", "D", <<["A", "b"]>>, "C")
numerical_negation
bool_value (false)
multiplication
logical_negation
generate_java_code
add_command("B", "D", <<["A", "BOOLEAN"], ["e", "A"], ["c", "BOOLEAN"], ["B", "B"], ["a", "A"], ["b", "BOOLEAN"], ["b", "INTEGER"]>>)
int_value (43)
add_call_chain(<<e,e,A,d,C>>)
bool_value (true)
add_query("e", "c", <<["A", "INTEGER"], ["e", "BOOLEAN"]>>, "e")
logical_negation
add_attribute("D", "A", "c")
int_value (9)
less_than
bool_value (true)
add_command("A", "a", <<["e", "INTEGER"], ["C", "BOOLEAN"], ["d", "INTEGER"], ["C", "e"], ["INTEGER", "d"]>>)
add_command("INTEGER", "b", <<["d", "d"], ["b", "INTEGER"], ["C", "b"], ["C", "BOOLEAN"], ["D", "B"], ["d", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "BOOLEAN"]>>)
add_call_chain(<<b,A,c>>)
greater_than
logical_negation
add_call_chain(<<D,A,d,b,BOOLEAN,BOOLEAN,b>>)
add_query("a", "b", <<["B", "e"], ["c", "INTEGER"], ["e", "d"], ["A", "INTEGER"]>>, "C")
add_call_chain(<<b,D,B>>)
add_class(C)
int_value (38)
int_value (34)
equals
add_class(c)
disjunction
logical_negation
add_command("B", "A", <<["a", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["INTEGER", "e"]>>)
modulo
logical_negation
add_attribute("D", "INTEGER", "B")
add_call_chain(<<A,A,e,B,D>>)
bool_value (true)
int_value (22)
bool_value (true)
add_call_chain(<<e,A>>)
bool_value (false)
int_value (16)
subtraction
add_query("d", "C", <<["C", "INTEGER"], ["C", "BOOLEAN"], ["e", "b"], ["a", "C"], ["D", "INTEGER"], ["A", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "B"], ["D", "INTEGER"]>>, "C")
conjunction
add_command("A", "D", <<["B", "INTEGER"], ["C", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["a", "D"]>>)
add_attribute("a", "C", "BOOLEAN")
add_query("A", "c", <<["b", "BOOLEAN"]>>, "B")
generate_java_code
add_command("INTEGER", "BOOLEAN", <<["C", "a"], ["D", "e"], ["b", "D"], ["d", "BOOLEAN"], ["a", "BOOLEAN"]>>)
int_value (11)
