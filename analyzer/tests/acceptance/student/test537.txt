add_attribute("C", "d", "INTEGER")
logical_negation
modulo
add_call_chain(<<b,A,D,C,D,d,c>>)
add_command("D", "b", <<["a", "BOOLEAN"], ["C", "INTEGER"], ["e", "INTEGER"]>>)
addition
add_attribute("D", "A", "BOOLEAN")
subtraction
add_attribute("c", "BOOLEAN", "BOOLEAN")
add_query("B", "C", <<["BOOLEAN", "INTEGER"], ["c", "BOOLEAN"], ["INTEGER", "b"], ["d", "D"], ["b", "a"], ["e", "B"], ["e", "BOOLEAN"]>>, "INTEGER")
add_command("a", "c", <<["A", "INTEGER"], ["c", "INTEGER"], ["BOOLEAN", "INTEGER"], ["INTEGER", "d"], ["e", "BOOLEAN"], ["B", "d"]>>)
numerical_negation
conjunction
multiplication
add_call_chain(<<c,A,C,d,e>>)
add_command("a", "A", <<["B", "INTEGER"], ["d", "INTEGER"], ["e", "c"], ["d", "INTEGER"], ["INTEGER", "BOOLEAN"], ["e", "d"], ["C", "INTEGER"], ["d", "BOOLEAN"], ["d", "INTEGER"]>>)
bool_value (false)
add_call_chain(<<e,a,BOOLEAN,B,A,a,A>>)
add_call_chain(<<d,A,e,a,A,B,b,C,c>>)
int_value (47)
add_query("A", "B", <<["d", "BOOLEAN"], ["b", "e"], ["C", "INTEGER"]>>, "C")
bool_value (false)
int_value (43)
numerical_negation
add_attribute("c", "BOOLEAN", "INTEGER")
add_call_chain(<<A,b,b,C,a,e,c>>)
add_call_chain(<<d,B,d,A>>)
conjunction
bool_value (false)
add_query("INTEGER", "b", <<["e", "INTEGER"], ["d", "BOOLEAN"], ["C", "e"], ["B", "INTEGER"], ["a", "BOOLEAN"]>>, "a")
add_command("D", "C", <<["C", "INTEGER"], ["INTEGER", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["a", "a"], ["D", "BOOLEAN"], ["d", "A"], ["BOOLEAN", "e"], ["d", "INTEGER"]>>)
type_check
add_attribute("INTEGER", "C", "C")
conjunction
int_value (4)
add_call_chain(<<d>>)
bool_value (false)
add_attribute("d", "b", "INTEGER")
numerical_negation
add_query("d", "e", <<["c", "INTEGER"]>>, "e")
numerical_negation
add_attribute("a", "B", "D")
int_value (24)
conjunction
add_command("C", "e", <<["D", "BOOLEAN"], ["c", "INTEGER"], ["B", "INTEGER"]>>)
conjunction
add_call_chain(<<b,a,B,BOOLEAN,A,C,C>>)
conjunction
logical_negation
add_call_chain(<<c,e,c,e>>)
add_query("D", "BOOLEAN", <<["c", "BOOLEAN"]>>, "c")
add_call_chain(<<B,e>>)
add_call_chain(<<C,d,BOOLEAN,B,B,C,d,A,B>>)
generate_java_code
bool_value (false)
add_query("b", "b", <<["c", "INTEGER"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "BOOLEAN"]>>, "B")
addition
int_value (43)
greater_than
int_value (29)
add_attribute("C", "a", "d")
bool_value (false)
add_attribute("c", "C", "INTEGER")
int_value (17)
add_call_chain(<<e,BOOLEAN,c>>)
add_class(A)
add_attribute("B", "C", "D")
numerical_negation
logical_negation
numerical_negation
logical_negation
add_attribute("e", "e", "INTEGER")
add_attribute("e", "e", "D")
int_value (40)
add_call_chain(<<c,B,e,d,A,D,a>>)
numerical_negation
add_call_chain(<<b>>)
type_check
generate_java_code
quotient
add_attribute("BOOLEAN", "b", "e")
add_attribute("d", "C", "BOOLEAN")
add_attribute("e", "c", "B")
conjunction
add_attribute("INTEGER", "D", "INTEGER")
add_call_chain(<<e,a,a,D,d,a,B>>)
type_check
add_class(b)
add_call_chain(<<c>>)
conjunction
add_attribute("e", "B", "c")
numerical_negation
add_call_chain(<<e,d,c,D,A,D>>)
add_call_chain(<<A,A,d,d>>)
type_check
type_check
greater_than
generate_java_code
equals
add_query("A", "B", <<["A", "INTEGER"]>>, "C")
add_attribute("d", "d", "BOOLEAN")
add_attribute("c", "b", "INTEGER")
add_attribute("b", "B", "D")
add_call_chain(<<B,B,D,a,A,C,e,d,A>>)
add_attribute("INTEGER", "e", "BOOLEAN")
logical_negation
logical_negation
add_query("B", "A", <<["d", "A"], ["b", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "d"]>>, "e")
int_value (47)
int_value (38)
add_class(a)
add_class(b)
add_command("a", "BOOLEAN", <<["D", "b"], ["C", "INTEGER"], ["C", "INTEGER"]>>)
numerical_negation
add_call_chain(<<A,A>>)
int_value (13)
disjunction
equals
bool_value (false)
int_value (3)
add_query("D", "A", <<["C", "BOOLEAN"], ["D", "INTEGER"], ["D", "B"], ["d", "INTEGER"], ["d", "A"]>>, "A")
bool_value (true)
conjunction
add_attribute("INTEGER", "C", "INTEGER")
type_check
logical_negation
numerical_negation
int_value (2)
conjunction
add_call_chain(<<b,d,e,d,A,c,A,B,B>>)
type_check
add_query("e", "c", <<["B", "INTEGER"], ["a", "BOOLEAN"]>>, "D")
add_call_chain(<<A,A,INTEGER,A,B,c,B>>)
add_query("e", "b", <<["A", "BOOLEAN"]>>, "C")
logical_negation
logical_negation
bool_value (true)
int_value (34)
add_call_chain(<<d,c>>)
add_command("BOOLEAN", "C", <<["A", "BOOLEAN"], ["INTEGER", "INTEGER"], ["c", "BOOLEAN"], ["A", "d"], ["e", "INTEGER"], ["INTEGER", "INTEGER"], ["c", "BOOLEAN"]>>)
add_command("D", "b", <<["BOOLEAN", "B"], ["a", "INTEGER"], ["a", "INTEGER"], ["e", "c"], ["B", "INTEGER"], ["b", "BOOLEAN"], ["BOOLEAN", "B"]>>)
add_command("a", "B", <<["B", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "INTEGER"], ["c", "INTEGER"]>>)
generate_java_code
int_value (1)
add_class(d)
add_call_chain(<<d,D,b,e,b,a,c,C>>)
logical_negation
add_class(c)
numerical_negation
bool_value (true)
add_query("INTEGER", "B", <<["D", "BOOLEAN"], ["D", "e"]>>, "A")
type_check
add_call_chain(<<d,d,A,d,D>>)
conjunction
add_command("b", "A", <<["d", "d"], ["C", "BOOLEAN"], ["B", "c"], ["b", "INTEGER"], ["d", "B"]>>)
add_attribute("B", "C", "INTEGER")
greater_than
add_call_chain(<<B,d,C,A,a,c,A>>)
add_attribute("d", "c", "INTEGER")
add_query("d", "C", <<["e", "INTEGER"], ["d", "BOOLEAN"], ["B", "D"], ["d", "INTEGER"], ["a", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["a", "BOOLEAN"], ["A", "INTEGER"]>>, "a")
add_call_chain(<<C,A,B,c,D>>)
add_attribute("D", "B", "BOOLEAN")
logical_negation
add_command("a", "D", <<["c", "D"], ["B", "BOOLEAN"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["d", "e"], ["d", "INTEGER"], ["c", "INTEGER"]>>)
add_attribute("A", "b", "A")
add_query("C", "c", <<["INTEGER", "INTEGER"], ["a", "INTEGER"], ["A", "INTEGER"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["b", "INTEGER"]>>, "c")
generate_java_code
generate_java_code
generate_java_code
generate_java_code
add_query("INTEGER", "B", <<["b", "INTEGER"], ["d", "INTEGER"], ["d", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["e", "INTEGER"], ["C", "INTEGER"], ["A", "b"]>>, "e")
add_call_chain(<<b>>)
add_call_chain(<<INTEGER,c,INTEGER,e>>)
type_check
add_command("A", "b", <<["b", "INTEGER"], ["a", "INTEGER"]>>)
bool_value (false)
add_command("B", "D", <<["C", "INTEGER"], ["a", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "B"], ["b", "BOOLEAN"], ["c", "INTEGER"], ["e", "BOOLEAN"]>>)
numerical_negation
logical_negation
bool_value (true)
less_than
add_call_chain(<<e,c,e>>)
int_value (17)
int_value (44)
int_value (46)
add_call_chain(<<B>>)
add_query("C", "d", <<["C", "c"], ["e", "D"], ["a", "BOOLEAN"], ["d", "A"], ["BOOLEAN", "INTEGER"], ["A", "INTEGER"], ["C", "C"], ["D", "b"], ["C", "BOOLEAN"]>>, "B")
type_check
less_than
bool_value (true)
disjunction
add_command("BOOLEAN", "BOOLEAN", <<["e", "b"], ["c", "B"], ["b", "A"], ["BOOLEAN", "INTEGER"], ["e", "c"], ["B", "BOOLEAN"], ["a", "INTEGER"], ["B", "C"], ["C", "B"]>>)
add_class(c)
numerical_negation
add_class(C)
add_query("b", "D", <<["A", "INTEGER"]>>, "C")
numerical_negation
numerical_negation
type_check
conjunction
numerical_negation
add_call_chain(<<B,b,c,d,A,a,B,c>>)
add_query("a", "INTEGER", <<["D", "INTEGER"], ["a", "BOOLEAN"], ["A", "BOOLEAN"]>>, "A")
subtraction
int_value (26)
logical_negation
bool_value (true)
bool_value (false)
add_query("D", "c", <<["d", "BOOLEAN"], ["c", "BOOLEAN"], ["INTEGER", "INTEGER"], ["a", "INTEGER"], ["A", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "c"], ["a", "INTEGER"]>>, "e")
add_command("c", "INTEGER", <<["INTEGER", "INTEGER"], ["c", "c"], ["B", "INTEGER"], ["c", "A"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["d", "INTEGER"], ["D", "BOOLEAN"], ["e", "BOOLEAN"]>>)
generate_java_code
bool_value (false)
add_class(C)
add_command("INTEGER", "c", <<["D", "BOOLEAN"], ["d", "INTEGER"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["e", "c"], ["d", "A"], ["a", "A"]>>)
add_class(D)
bool_value (true)
logical_negation
bool_value (false)
add_call_chain(<<b,d,C,e,INTEGER,d>>)
add_query("BOOLEAN", "D", <<["INTEGER", "b"]>>, "b")
type_check
numerical_negation
greater_than
multiplication
add_command("A", "e", <<["B", "INTEGER"], ["b", "c"]>>)
bool_value (false)
generate_java_code
add_call_chain(<<A>>)
add_attribute("A", "C", "INTEGER")
add_query("D", "a", <<["INTEGER", "D"]>>, "e")
add_command("D", "B", <<["B", "INTEGER"], ["b", "b"], ["D", "d"], ["e", "e"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["b", "b"]>>)
add_command("a", "e", <<["d", "C"], ["d", "BOOLEAN"], ["C", "e"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["A", "d"], ["c", "INTEGER"], ["d", "BOOLEAN"]>>)
add_call_chain(<<B,INTEGER,e,INTEGER,e,d>>)
