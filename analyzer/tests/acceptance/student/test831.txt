add_command("D", "INTEGER", <<["D", "BOOLEAN"], ["a", "INTEGER"], ["D", "A"], ["d", "BOOLEAN"], ["B", "INTEGER"], ["A", "INTEGER"]>>)
bool_value (false)
multiplication
bool_value (true)
greater_than
greater_than
add_call_chain(<<c,D,a,C,d,b,D,A>>)
add_attribute("b", "A", "INTEGER")
int_value (34)
bool_value (false)
type_check
numerical_negation
logical_negation
generate_java_code
add_call_chain(<<D,e,B>>)
conjunction
add_class(D)
logical_negation
int_value (14)
logical_negation
add_command("B", "a", <<["a", "INTEGER"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "INTEGER"], ["BOOLEAN", "INTEGER"], ["B", "INTEGER"]>>)
subtraction
add_command("C", "b", <<["c", "INTEGER"], ["b", "INTEGER"], ["D", "INTEGER"], ["b", "INTEGER"], ["C", "INTEGER"]>>)
add_command("INTEGER", "D", <<["B", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "e"]>>)
add_class(A)
add_call_chain(<<B>>)
int_value (29)
type_check
int_value (43)
add_attribute("e", "b", "BOOLEAN")
generate_java_code
add_command("D", "D", <<["BOOLEAN", "INTEGER"], ["B", "INTEGER"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "B"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["e", "INTEGER"]>>)
generate_java_code
int_value (9)
bool_value (false)
type_check
multiplication
add_query("A", "BOOLEAN", <<["b", "A"]>>, "D")
modulo
int_value (3)
add_call_chain(<<D>>)
add_call_chain(<<c,a,INTEGER,e,D,b,d,d,D>>)
add_attribute("D", "b", "INTEGER")
add_attribute("a", "d", "INTEGER")
add_class(c)
add_command("e", "e", <<["d", "b"], ["d", "BOOLEAN"], ["D", "D"], ["e", "A"], ["C", "INTEGER"], ["e", "d"]>>)
add_attribute("B", "B", "C")
disjunction
generate_java_code
generate_java_code
equals
equals
bool_value (false)
bool_value (true)
logical_negation
int_value (12)
logical_negation
add_command("a", "C", <<["D", "e"], ["BOOLEAN", "INTEGER"], ["c", "INTEGER"], ["B", "A"], ["e", "d"], ["A", "BOOLEAN"], ["BOOLEAN", "D"], ["BOOLEAN", "BOOLEAN"], ["b", "A"]>>)
bool_value (false)
int_value (1)
add_attribute("c", "c", "B")
add_call_chain(<<A,a>>)
bool_value (false)
type_check
add_command("C", "C", <<["a", "INTEGER"], ["D", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "b"], ["C", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["B", "INTEGER"]>>)
bool_value (true)
add_call_chain(<<D,b,a,BOOLEAN>>)
add_command("B", "a", <<["a", "BOOLEAN"], ["c", "INTEGER"], ["c", "BOOLEAN"], ["b", "b"], ["d", "a"], ["B", "C"]>>)
greater_than
int_value (24)
add_call_chain(<<e,D,B>>)
addition
disjunction
add_query("BOOLEAN", "a", <<["A", "BOOLEAN"]>>, "e")
numerical_negation
int_value (14)
int_value (25)
type_check
add_attribute("C", "c", "BOOLEAN")
logical_negation
bool_value (true)
add_call_chain(<<INTEGER,A,A,b,b,C,b,INTEGER,a>>)
add_query("c", "C", <<["e", "BOOLEAN"], ["e", "INTEGER"]>>, "B")
add_call_chain(<<e,a,c,D,c,c,D>>)
generate_java_code
add_command("a", "A", <<["a", "a"], ["C", "BOOLEAN"], ["d", "A"], ["b", "D"], ["d", "INTEGER"], ["INTEGER", "INTEGER"], ["B", "BOOLEAN"]>>)
modulo
add_call_chain(<<a,D,b,e,a>>)
logical_negation
numerical_negation
logical_negation
add_call_chain(<<A,a,D,b,c,e,A>>)
int_value (1)
bool_value (true)
type_check
type_check
add_command("C", "B", <<["BOOLEAN", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>)
bool_value (true)
logical_negation
disjunction
logical_negation
add_call_chain(<<INTEGER,C>>)
type_check
add_call_chain(<<a,a,D,B,d,D,b>>)
int_value (14)
int_value (17)
add_attribute("b", "e", "BOOLEAN")
numerical_negation
add_call_chain(<<D,a,A,c,a,a>>)
less_than
bool_value (true)
bool_value (true)
add_class(d)
conjunction
add_command("INTEGER", "B", <<["b", "BOOLEAN"], ["D", "b"], ["e", "INTEGER"], ["e", "INTEGER"]>>)
type_check
numerical_negation
add_attribute("B", "a", "c")
disjunction
int_value (20)
conjunction
add_attribute("BOOLEAN", "D", "INTEGER")
add_attribute("D", "c", "INTEGER")
add_call_chain(<<d,D,d,A,b>>)
add_query("e", "e", <<["a", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "A"], ["d", "INTEGER"], ["D", "C"], ["INTEGER", "C"]>>, "INTEGER")
add_class(D)
add_command("D", "a", <<["d", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "BOOLEAN"], ["b", "A"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["D", "e"]>>)
type_check
type_check
add_class(C)
bool_value (true)
logical_negation
bool_value (true)
equals
generate_java_code
add_attribute("e", "e", "BOOLEAN")
add_class(a)
add_query("INTEGER", "C", <<["a", "INTEGER"], ["c", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["d", "a"], ["D", "D"]>>, "b")
int_value (49)
int_value (8)
add_class(INTEGER)
logical_negation
less_than
numerical_negation
generate_java_code
add_call_chain(<<INTEGER,BOOLEAN>>)
generate_java_code
add_class(A)
logical_negation
add_call_chain(<<INTEGER>>)
add_class(A)
generate_java_code
add_query("b", "c", <<["C", "A"], ["A", "B"], ["a", "a"], ["e", "INTEGER"], ["C", "INTEGER"], ["INTEGER", "BOOLEAN"], ["D", "B"], ["b", "BOOLEAN"]>>, "a")
type_check
add_attribute("INTEGER", "D", "BOOLEAN")
bool_value (true)
bool_value (false)
bool_value (false)
add_class(a)
type_check
numerical_negation
add_command("c", "A", <<["c", "b"], ["b", "BOOLEAN"], ["b", "C"], ["C", "INTEGER"], ["c", "INTEGER"]>>)
logical_negation
int_value (17)
add_call_chain(<<A,INTEGER,C,INTEGER,A>>)
add_call_chain(<<A,BOOLEAN,A,B,C,C,D>>)
numerical_negation
type_check
numerical_negation
less_than
add_call_chain(<<B,C,C,BOOLEAN,D,d>>)
subtraction
add_query("e", "a", <<["B", "INTEGER"], ["b", "d"], ["d", "INTEGER"], ["C", "BOOLEAN"], ["A", "BOOLEAN"]>>, "C")
add_command("e", "D", <<["e", "BOOLEAN"]>>)
int_value (6)
add_query("B", "a", <<["c", "BOOLEAN"], ["c", "d"], ["e", "BOOLEAN"], ["D", "BOOLEAN"]>>, "a")
add_call_chain(<<e,C,b,b,D,A>>)
numerical_negation
logical_negation
add_command("A", "A", <<["a", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["B", "BOOLEAN"]>>)
add_call_chain(<<a,C,A,e,D,e,B>>)
bool_value (false)
logical_negation
add_call_chain(<<d,A,INTEGER>>)
add_class(d)
numerical_negation
type_check
add_call_chain(<<b>>)
int_value (29)
add_call_chain(<<e,b>>)
add_query("e", "INTEGER", <<["A", "c"]>>, "B")
add_call_chain(<<b,c,e,BOOLEAN,c>>)
add_command("B", "C", <<["B", "INTEGER"], ["c", "BOOLEAN"], ["c", "c"], ["e", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "a"], ["C", "BOOLEAN"], ["a", "B"], ["e", "INTEGER"]>>)
add_command("A", "b", <<["C", "b"], ["INTEGER", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "b"]>>)
bool_value (false)
add_class(d)
bool_value (false)
type_check
add_query("a", "INTEGER", <<["e", "C"], ["D", "d"], ["b", "c"], ["a", "C"]>>, "c")
numerical_negation
less_than
add_attribute("d", "b", "e")
type_check
modulo
add_command("INTEGER", "B", <<["D", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "B"], ["B", "INTEGER"]>>)
conjunction
add_command("C", "D", <<["e", "INTEGER"], ["INTEGER", "INTEGER"], ["B", "d"], ["A", "INTEGER"], ["D", "INTEGER"], ["INTEGER", "INTEGER"], ["B", "BOOLEAN"], ["d", "e"]>>)
add_query("d", "INTEGER", <<["e", "INTEGER"], ["INTEGER", "BOOLEAN"], ["D", "e"], ["d", "BOOLEAN"]>>, "b")
add_call_chain(<<A,D,b,d>>)
add_call_chain(<<A,BOOLEAN>>)
add_call_chain(<<INTEGER,D,C,a,c>>)
add_attribute("INTEGER", "e", "INTEGER")
add_command("B", "C", <<["d", "a"], ["C", "e"], ["c", "BOOLEAN"], ["b", "INTEGER"], ["a", "BOOLEAN"], ["INTEGER", "A"], ["A", "C"], ["c", "BOOLEAN"], ["b", "BOOLEAN"]>>)
conjunction
numerical_negation
bool_value (false)
greater_than
logical_negation
add_call_chain(<<a,C,D,b,D,a>>)
generate_java_code
type_check
add_query("INTEGER", "B", <<["BOOLEAN", "INTEGER"], ["d", "e"], ["c", "BOOLEAN"], ["D", "B"]>>, "c")
add_call_chain(<<INTEGER,C>>)
add_command("D", "c", <<["a", "INTEGER"]>>)
add_query("c", "b", <<["b", "INTEGER"], ["b", "C"], ["c", "D"], ["INTEGER", "INTEGER"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "BOOLEAN"]>>, "a")
add_call_chain(<<d,INTEGER,b,D,D,BOOLEAN,BOOLEAN>>)
addition
add_class(c)
conjunction
add_query("a", "b", <<["B", "B"], ["d", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["B", "B"]>>, "a")
type_check
add_call_chain(<<c,BOOLEAN,e,b>>)
multiplication
add_command("C", "D", <<["c", "D"]>>)
less_than
add_command("c", "a", <<["c", "INTEGER"], ["BOOLEAN", "B"], ["D", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "INTEGER"], ["B", "BOOLEAN"], ["c", "BOOLEAN"]>>)
add_call_chain(<<a,a,b,d,c,INTEGER,c,c>>)
type_check
add_attribute("D", "A", "INTEGER")
disjunction
numerical_negation
add_call_chain(<<c>>)
bool_value (true)
add_query("BOOLEAN", "b", <<["d", "a"], ["c", "INTEGER"], ["D", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "BOOLEAN"]>>, "c")
generate_java_code
add_call_chain(<<b,D,c,D,e>>)
add_attribute("INTEGER", "e", "BOOLEAN")
add_class(D)
int_value (17)
type_check
generate_java_code
bool_value (false)
add_call_chain(<<A,c,b,D,A,d>>)
add_call_chain(<<INTEGER,b,D,e,b,a,b,D>>)
add_attribute("A", "D", "e")
logical_negation
int_value (22)
add_class(B)
int_value (29)
numerical_negation
add_class(INTEGER)
add_call_chain(<<D,c,C,B>>)
logical_negation
bool_value (false)
add_attribute("b", "a", "BOOLEAN")
logical_negation
add_class(c)
logical_negation
add_call_chain(<<A,c,A,c,e>>)
