quotient
numerical_negation
equals
add_class(d)
add_call_chain(<<a,B,INTEGER,e,b>>)
int_value (5)
int_value (22)
conjunction
add_call_chain(<<B,d,BOOLEAN,d,INTEGER,C,C,B>>)
type_check
subtraction
add_call_chain(<<a,INTEGER,a,B,c>>)
bool_value (false)
add_query("c", "b", <<["d", "a"]>>, "INTEGER")
add_call_chain(<<c,b>>)
add_class(C)
type_check
add_command("B", "A", <<["A", "BOOLEAN"], ["a", "D"], ["B", "INTEGER"], ["B", "b"], ["d", "B"]>>)
bool_value (false)
add_call_chain(<<C,b,D,e>>)
logical_negation
add_class(d)
type_check
add_command("D", "B", <<["a", "INTEGER"], ["c", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "D"], ["b", "BOOLEAN"], ["BOOLEAN", "a"], ["d", "A"]>>)
disjunction
numerical_negation
add_attribute("c", "d", "BOOLEAN")
bool_value (false)
int_value (46)
add_attribute("INTEGER", "INTEGER", "BOOLEAN")
bool_value (false)
int_value (24)
disjunction
modulo
add_query("B", "c", <<["a", "B"], ["a", "BOOLEAN"], ["A", "b"], ["d", "a"], ["a", "BOOLEAN"], ["d", "INTEGER"], ["A", "d"], ["d", "BOOLEAN"], ["C", "BOOLEAN"]>>, "d")
quotient
add_call_chain(<<C,C,e,c,a,B,D>>)
add_call_chain(<<B>>)
generate_java_code
int_value (33)
generate_java_code
less_than
add_call_chain(<<a,A,D>>)
int_value (4)
add_call_chain(<<C,D,BOOLEAN>>)
add_call_chain(<<B,D,c,B,BOOLEAN>>)
add_attribute("c", "C", "BOOLEAN")
conjunction
add_call_chain(<<A,c,C>>)
bool_value (false)
add_command("d", "a", <<["INTEGER", "BOOLEAN"], ["d", "BOOLEAN"], ["b", "e"], ["B", "BOOLEAN"], ["a", "BOOLEAN"]>>)
bool_value (true)
equals
add_command("b", "B", <<["a", "D"]>>)
numerical_negation
numerical_negation
add_command("a", "b", <<["A", "BOOLEAN"], ["c", "BOOLEAN"], ["d", "a"], ["d", "e"], ["A", "b"], ["D", "INTEGER"], ["D", "INTEGER"]>>)
add_query("a", "C", <<["d", "INTEGER"], ["INTEGER", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["d", "INTEGER"], ["C", "BOOLEAN"]>>, "B")
numerical_negation
generate_java_code
add_call_chain(<<C,b,A,a,c,BOOLEAN,B>>)
bool_value (true)
addition
addition
add_attribute("B", "b", "BOOLEAN")
add_query("e", "D", <<["B", "INTEGER"], ["b", "BOOLEAN"], ["INTEGER", "C"], ["BOOLEAN", "BOOLEAN"], ["d", "A"], ["e", "INTEGER"], ["a", "B"]>>, "C")
conjunction
add_attribute("C", "e", "d")
conjunction
add_attribute("e", "b", "a")
int_value (25)
add_call_chain(<<A,a,a,D,b,INTEGER,a,d,BOOLEAN>>)
numerical_negation
numerical_negation
add_attribute("D", "C", "INTEGER")
type_check
type_check
add_attribute("INTEGER", "a", "BOOLEAN")
numerical_negation
add_call_chain(<<d,e,d,e>>)
add_call_chain(<<c,e,a,e,d,e,a>>)
int_value (3)
int_value (42)
add_query("b", "e", <<["d", "e"], ["c", "INTEGER"], ["c", "D"], ["b", "B"], ["D", "C"], ["d", "BOOLEAN"], ["d", "BOOLEAN"]>>, "BOOLEAN")
bool_value (true)
add_call_chain(<<A>>)
bool_value (true)
add_call_chain(<<e,B,b,A,a,D>>)
add_attribute("b", "A", "BOOLEAN")
quotient
add_call_chain(<<BOOLEAN,C>>)
int_value (31)
add_call_chain(<<B,A,B,c,D,b,c,e,C>>)
numerical_negation
add_query("A", "INTEGER", <<["d", "d"], ["A", "BOOLEAN"], ["b", "b"], ["d", "INTEGER"]>>, "a")
numerical_negation
numerical_negation
add_attribute("d", "C", "b")
quotient
generate_java_code
add_call_chain(<<b,B,d,a,c>>)
numerical_negation
logical_negation
add_query("c", "d", <<["BOOLEAN", "D"], ["a", "C"], ["d", "A"]>>, "D")
add_query("D", "d", <<["e", "INTEGER"], ["a", "BOOLEAN"], ["B", "INTEGER"], ["e", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["C", "BOOLEAN"]>>, "a")
add_call_chain(<<e,b>>)
add_attribute("B", "b", "c")
add_command("INTEGER", "C", <<["d", "b"], ["c", "c"], ["C", "INTEGER"], ["B", "INTEGER"], ["e", "INTEGER"], ["D", "C"], ["c", "c"]>>)
add_call_chain(<<INTEGER>>)
add_query("A", "C", <<["INTEGER", "INTEGER"], ["C", "INTEGER"], ["c", "C"], ["BOOLEAN", "e"], ["d", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "INTEGER"]>>, "a")
int_value (39)
conjunction
type_check
add_query("a", "D", <<["INTEGER", "BOOLEAN"], ["b", "BOOLEAN"], ["d", "INTEGER"], ["b", "BOOLEAN"], ["D", "A"]>>, "C")
add_query("A", "D", <<["a", "C"], ["e", "a"], ["a", "INTEGER"], ["b", "c"], ["D", "INTEGER"]>>, "C")
int_value (24)
bool_value (true)
equals
addition
add_command("d", "b", <<["b", "INTEGER"], ["c", "BOOLEAN"], ["d", "INTEGER"], ["a", "INTEGER"], ["D", "INTEGER"], ["e", "INTEGER"]>>)
add_command("b", "C", <<["e", "d"], ["C", "C"], ["A", "BOOLEAN"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["b", "INTEGER"], ["INTEGER", "INTEGER"]>>)
add_call_chain(<<C>>)
int_value (44)
add_call_chain(<<D,B,c,b>>)
add_class(BOOLEAN)
add_call_chain(<<b,e,e,B,a,c,A>>)
add_command("d", "e", <<["c", "B"], ["A", "BOOLEAN"], ["INTEGER", "INTEGER"], ["D", "D"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "INTEGER"]>>)
int_value (30)
bool_value (false)
multiplication
bool_value (true)
numerical_negation
logical_negation
add_attribute("C", "C", "INTEGER")
bool_value (false)
generate_java_code
bool_value (true)
logical_negation
add_query("a", "A", <<["BOOLEAN", "C"], ["b", "C"], ["a", "INTEGER"]>>, "C")
numerical_negation
add_call_chain(<<a,a,c,a,d,d,c>>)
add_query("D", "a", <<["C", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "C"], ["B", "BOOLEAN"]>>, "B")
add_attribute("BOOLEAN", "b", "BOOLEAN")
add_command("c", "A", <<["C", "BOOLEAN"], ["INTEGER", "INTEGER"], ["C", "INTEGER"], ["C", "D"]>>)
type_check
logical_negation
add_call_chain(<<B,BOOLEAN,INTEGER,e,B,BOOLEAN,C,B,e>>)
add_call_chain(<<D,B,D,d,C,c,C,c>>)
int_value (17)
int_value (46)
add_command("d", "a", <<["d", "BOOLEAN"], ["C", "BOOLEAN"]>>)
bool_value (true)
add_query("a", "a", <<["D", "INTEGER"], ["A", "d"], ["b", "INTEGER"]>>, "D")
logical_negation
logical_negation
quotient
bool_value (true)
add_call_chain(<<BOOLEAN,B,a>>)
add_attribute("b", "C", "INTEGER")
add_call_chain(<<b,b,INTEGER,e>>)
multiplication
int_value (35)
add_attribute("A", "a", "a")
multiplication
bool_value (true)
numerical_negation
numerical_negation
add_attribute("C", "A", "BOOLEAN")
add_command("D", "D", <<["INTEGER", "BOOLEAN"], ["B", "INTEGER"], ["B", "BOOLEAN"], ["e", "B"], ["e", "INTEGER"], ["A", "B"], ["d", "INTEGER"], ["e", "BOOLEAN"], ["A", "D"]>>)
add_attribute("D", "D", "BOOLEAN")
numerical_negation
bool_value (true)
bool_value (true)
add_attribute("d", "B", "INTEGER")
add_call_chain(<<C>>)
add_query("a", "D", <<["BOOLEAN", "a"], ["A", "BOOLEAN"], ["A", "A"], ["e", "A"], ["c", "BOOLEAN"], ["e", "INTEGER"], ["C", "INTEGER"]>>, "b")
int_value (10)
bool_value (true)
add_query("d", "D", <<["c", "INTEGER"], ["B", "INTEGER"], ["c", "B"], ["e", "C"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["C", "e"]>>, "C")
add_attribute("BOOLEAN", "d", "a")
less_than
add_attribute("d", "D", "INTEGER")
modulo
add_call_chain(<<a,A,b,D,C,B>>)
equals
bool_value (true)
quotient
numerical_negation
add_attribute("e", "D", "INTEGER")
int_value (19)
add_command("C", "b", <<["e", "INTEGER"]>>)
add_command("e", "B", <<["c", "c"], ["c", "INTEGER"]>>)
numerical_negation
bool_value (false)
modulo
add_query("e", "C", <<["b", "BOOLEAN"], ["e", "BOOLEAN"]>>, "D")
logical_negation
type_check
add_class(a)
int_value (31)
numerical_negation
add_call_chain(<<C,e,A>>)
add_class(A)
add_call_chain(<<e,a,C,B>>)
add_query("a", "c", <<["B", "INTEGER"], ["e", "INTEGER"], ["b", "BOOLEAN"], ["A", "c"], ["BOOLEAN", "a"]>>, "C")
add_command("A", "A", <<["D", "B"], ["d", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "INTEGER"]>>)
bool_value (true)
bool_value (true)
add_attribute("b", "A", "INTEGER")
add_query("D", "C", <<["B", "c"], ["D", "INTEGER"]>>, "A")
conjunction
logical_negation
add_class(a)
bool_value (true)
bool_value (false)
add_call_chain(<<d,d,D,B,a,A,B,e>>)
greater_than
add_call_chain(<<d,e,C,d,INTEGER,b>>)
logical_negation
generate_java_code
int_value (36)
add_query("a", "C", <<["BOOLEAN", "BOOLEAN"], ["INTEGER", "e"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "INTEGER"]>>, "b")
equals
int_value (4)
add_call_chain(<<C,B,C,D>>)
numerical_negation
add_call_chain(<<d,D,A,d,a,b,A,INTEGER,d>>)
add_command("c", "d", <<["e", "BOOLEAN"], ["C", "INTEGER"]>>)
int_value (49)
add_call_chain(<<BOOLEAN,b>>)
add_call_chain(<<c>>)
add_call_chain(<<a,c,B,B,d>>)
bool_value (true)
add_call_chain(<<b,D>>)
add_query("B", "A", <<["B", "B"], ["BOOLEAN", "a"], ["B", "INTEGER"], ["INTEGER", "BOOLEAN"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "BOOLEAN"]>>, "D")
less_than
numerical_negation
logical_negation
logical_negation
