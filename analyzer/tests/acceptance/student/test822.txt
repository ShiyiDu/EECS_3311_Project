type_check
add_attribute("A", "D", "d")
add_call_chain(<<e,e,b,C,c,B,BOOLEAN,D,D>>)
add_call_chain(<<e,D,a,C,a,b,e,b>>)
numerical_negation
add_query("A", "C", <<["INTEGER", "BOOLEAN"], ["e", "a"], ["A", "INTEGER"], ["C", "BOOLEAN"]>>, "B")
generate_java_code
add_call_chain(<<c,A,C,b,C,A,INTEGER>>)
generate_java_code
add_query("D", "e", <<["a", "a"], ["e", "INTEGER"]>>, "B")
add_call_chain(<<INTEGER>>)
logical_negation
int_value (42)
int_value (42)
add_query("b", "a", <<["e", "A"], ["b", "INTEGER"], ["a", "BOOLEAN"]>>, "A")
conjunction
logical_negation
add_query("INTEGER", "d", <<["INTEGER", "BOOLEAN"]>>, "d")
add_class(B)
logical_negation
bool_value (true)
int_value (28)
conjunction
add_query("b", "C", <<["B", "C"], ["D", "INTEGER"], ["A", "INTEGER"], ["D", "INTEGER"], ["e", "b"], ["INTEGER", "INTEGER"], ["B", "INTEGER"], ["A", "INTEGER"], ["BOOLEAN", "INTEGER"]>>, "c")
add_call_chain(<<b,D,c,B,c,c,INTEGER,C>>)
int_value (25)
generate_java_code
conjunction
add_class(c)
add_class(c)
add_query("a", "INTEGER", <<["C", "C"], ["BOOLEAN", "INTEGER"], ["e", "INTEGER"], ["INTEGER", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "BOOLEAN"]>>, "C")
multiplication
type_check
less_than
numerical_negation
type_check
add_attribute("D", "B", "BOOLEAN")
bool_value (false)
add_call_chain(<<A,b,e,e,A,BOOLEAN,BOOLEAN>>)
addition
add_command("a", "A", <<["b", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "INTEGER"], ["C", "BOOLEAN"], ["BOOLEAN", "d"], ["b", "e"], ["e", "A"]>>)
add_call_chain(<<B,B,B,e,C,C,c>>)
add_attribute("BOOLEAN", "b", "INTEGER")
type_check
add_command("c", "C", <<["BOOLEAN", "c"], ["A", "A"]>>)
add_attribute("INTEGER", "A", "INTEGER")
add_attribute("c", "b", "INTEGER")
add_command("c", "b", <<["c", "INTEGER"], ["A", "INTEGER"], ["c", "c"], ["D", "BOOLEAN"]>>)
bool_value (false)
bool_value (false)
add_call_chain(<<d,A,e,D,C,b,C,B,d>>)
add_call_chain(<<INTEGER,a>>)
add_attribute("D", "e", "BOOLEAN")
logical_negation
add_query("b", "d", <<["c", "INTEGER"], ["b", "INTEGER"], ["B", "BOOLEAN"], ["C", "INTEGER"], ["INTEGER", "BOOLEAN"], ["A", "INTEGER"], ["C", "INTEGER"], ["d", "BOOLEAN"], ["B", "BOOLEAN"]>>, "c")
add_attribute("e", "D", "INTEGER")
add_query("a", "A", <<["BOOLEAN", "INTEGER"], ["A", "INTEGER"], ["e", "INTEGER"]>>, "c")
logical_negation
int_value (12)
generate_java_code
add_command("b", "a", <<["D", "INTEGER"], ["D", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["C", "C"], ["b", "BOOLEAN"], ["b", "INTEGER"]>>)
bool_value (true)
bool_value (false)
less_than
add_attribute("c", "a", "BOOLEAN")
subtraction
greater_than
add_query("A", "d", <<["e", "A"], ["B", "INTEGER"], ["C", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["D", "INTEGER"], ["a", "a"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "e"]>>, "A")
add_class(d)
int_value (20)
numerical_negation
add_command("e", "D", <<["e", "INTEGER"], ["e", "INTEGER"], ["d", "INTEGER"], ["b", "BOOLEAN"]>>)
add_class(e)
add_query("b", "C", <<["C", "BOOLEAN"], ["b", "INTEGER"], ["a", "BOOLEAN"], ["A", "BOOLEAN"]>>, "B")
addition
add_command("c", "a", <<["D", "INTEGER"], ["B", "D"], ["B", "A"]>>)
bool_value (false)
add_call_chain(<<INTEGER>>)
add_query("INTEGER", "a", <<["INTEGER", "INTEGER"]>>, "b")
modulo
add_attribute("d", "a", "BOOLEAN")
logical_negation
logical_negation
int_value (33)
add_query("A", "INTEGER", <<["A", "BOOLEAN"], ["C", "A"], ["a", "INTEGER"], ["d", "INTEGER"], ["c", "A"], ["b", "B"], ["a", "BOOLEAN"], ["D", "BOOLEAN"]>>, "INTEGER")
add_command("INTEGER", "e", <<["A", "INTEGER"], ["a", "INTEGER"], ["A", "BOOLEAN"]>>)
bool_value (true)
add_call_chain(<<B,b,a,INTEGER,d>>)
add_call_chain(<<b,B,d,e,D,c,a,B>>)
conjunction
numerical_negation
greater_than
int_value (8)
generate_java_code
generate_java_code
logical_negation
add_call_chain(<<b,A,b,A,C,A,A,C,D>>)
add_attribute("B", "a", "BOOLEAN")
modulo
add_query("D", "BOOLEAN", <<["c", "C"], ["a", "INTEGER"], ["C", "INTEGER"], ["INTEGER", "a"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "A"], ["c", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>, "D")
numerical_negation
add_class(a)
add_attribute("a", "INTEGER", "c")
bool_value (false)
disjunction
bool_value (true)
modulo
add_attribute("C", "A", "BOOLEAN")
add_call_chain(<<C,B,B,d>>)
numerical_negation
numerical_negation
add_class(BOOLEAN)
add_attribute("a", "e", "a")
add_call_chain(<<a,B>>)
bool_value (false)
add_query("D", "D", <<["INTEGER", "c"], ["b", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "c"], ["A", "INTEGER"], ["D", "INTEGER"], ["d", "INTEGER"], ["d", "INTEGER"]>>, "A")
add_command("INTEGER", "a", <<["d", "INTEGER"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["D", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "B"], ["b", "INTEGER"], ["INTEGER", "BOOLEAN"], ["c", "INTEGER"]>>)
logical_negation
add_class(A)
bool_value (false)
numerical_negation
add_call_chain(<<BOOLEAN,a>>)
add_call_chain(<<b>>)
add_call_chain(<<e,BOOLEAN,B,D,e,BOOLEAN,B>>)
modulo
int_value (26)
subtraction
disjunction
add_call_chain(<<d,c,BOOLEAN,d,C,D>>)
add_class(a)
add_command("A", "BOOLEAN", <<["c", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["A", "INTEGER"], ["INTEGER", "BOOLEAN"], ["b", "D"]>>)
add_call_chain(<<d,D,e,a,C,e,c>>)
add_attribute("a", "C", "B")
add_query("BOOLEAN", "A", <<["a", "e"], ["B", "INTEGER"], ["C", "e"]>>, "C")
add_query("D", "c", <<["INTEGER", "BOOLEAN"], ["C", "B"], ["A", "INTEGER"], ["A", "BOOLEAN"], ["c", "C"], ["BOOLEAN", "A"]>>, "b")
type_check
add_call_chain(<<b,b,D,b>>)
bool_value (true)
multiplication
add_query("D", "e", <<["C", "BOOLEAN"], ["BOOLEAN", "e"], ["A", "INTEGER"], ["D", "e"], ["a", "INTEGER"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["B", "INTEGER"]>>, "a")
greater_than
logical_negation
bool_value (false)
add_attribute("D", "INTEGER", "e")
add_query("A", "d", <<["B", "b"], ["d", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["D", "INTEGER"], ["B", "INTEGER"], ["c", "c"]>>, "D")
numerical_negation
modulo
add_command("A", "c", <<["D", "BOOLEAN"], ["a", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["a", "INTEGER"], ["d", "BOOLEAN"]>>)
bool_value (false)
add_class(A)
logical_negation
numerical_negation
bool_value (true)
add_call_chain(<<B,b,e,b,e,A,C,B>>)
bool_value (true)
add_query("A", "D", <<["A", "B"], ["D", "BOOLEAN"], ["D", "D"]>>, "INTEGER")
int_value (49)
add_call_chain(<<INTEGER,INTEGER,a,A,d,BOOLEAN,d,C>>)
add_command("A", "INTEGER", <<["d", "INTEGER"], ["D", "e"], ["e", "BOOLEAN"], ["D", "BOOLEAN"]>>)
generate_java_code
add_call_chain(<<b>>)
logical_negation
add_call_chain(<<a>>)
add_call_chain(<<A,C,B,e,e,c,BOOLEAN,D>>)
int_value (5)
add_attribute("e", "C", "BOOLEAN")
modulo
greater_than
numerical_negation
equals
add_call_chain(<<e,a>>)
bool_value (true)
add_call_chain(<<b,B,B,a,e,B,BOOLEAN,a,e>>)
add_command("b", "c", <<["e", "INTEGER"], ["B", "INTEGER"]>>)
int_value (12)
add_attribute("BOOLEAN", "B", "INTEGER")
add_query("c", "a", <<["c", "c"], ["e", "e"]>>, "d")
add_call_chain(<<B,A,a,d,b,e>>)
add_command("D", "A", <<["c", "INTEGER"], ["d", "INTEGER"], ["INTEGER", "INTEGER"], ["a", "BOOLEAN"], ["e", "INTEGER"], ["a", "BOOLEAN"], ["a", "INTEGER"], ["B", "BOOLEAN"]>>)
add_command("a", "C", <<["d", "INTEGER"], ["INTEGER", "a"], ["D", "BOOLEAN"]>>)
quotient
bool_value (false)
numerical_negation
add_call_chain(<<BOOLEAN,C,a,D,e,B,BOOLEAN,d>>)
add_query("A", "a", <<["d", "INTEGER"], ["D", "BOOLEAN"], ["c", "B"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["b", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "BOOLEAN"]>>, "B")
int_value (41)
conjunction
int_value (1)
numerical_negation
numerical_negation
numerical_negation
add_call_chain(<<A,C,INTEGER,d,b,B,c,D,C>>)
disjunction
subtraction
add_query("d", "c", <<["D", "e"], ["b", "A"], ["b", "INTEGER"], ["A", "BOOLEAN"], ["D", "e"], ["b", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "b"], ["B", "b"]>>, "BOOLEAN")
greater_than
type_check
generate_java_code
add_class(b)
generate_java_code
add_call_chain(<<a>>)
bool_value (true)
add_call_chain(<<D>>)
int_value (26)
add_call_chain(<<e,B,e,D,B,a,D,C>>)
add_call_chain(<<e,A,a>>)
numerical_negation
generate_java_code
add_query("BOOLEAN", "d", <<["A", "INTEGER"], ["e", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["c", "INTEGER"], ["B", "INTEGER"], ["D", "INTEGER"]>>, "e")
numerical_negation
bool_value (true)
add_attribute("D", "e", "BOOLEAN")
disjunction
