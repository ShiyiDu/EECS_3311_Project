add_command("d", "A", <<["b", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["a", "d"], ["e", "A"], ["A", "BOOLEAN"], ["B", "A"]>>)
int_value (48)
numerical_negation
logical_negation
int_value (42)
quotient
add_query("C", "A", <<["e", "BOOLEAN"], ["INTEGER", "INTEGER"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["b", "a"], ["d", "BOOLEAN"], ["INTEGER", "INTEGER"], ["B", "INTEGER"]>>, "C")
add_class(e)
conjunction
int_value (38)
add_call_chain(<<BOOLEAN,A,B,BOOLEAN,e,INTEGER,B>>)
int_value (49)
add_call_chain(<<d,BOOLEAN,C,d,a,B>>)
add_query("b", "c", <<["e", "d"], ["D", "BOOLEAN"], ["b", "INTEGER"], ["D", "INTEGER"], ["a", "b"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["A", "INTEGER"], ["D", "INTEGER"]>>, "d")
add_attribute("C", "B", "BOOLEAN")
add_query("BOOLEAN", "INTEGER", <<["b", "BOOLEAN"], ["e", "BOOLEAN"], ["d", "INTEGER"]>>, "e")
add_call_chain(<<BOOLEAN,b,A,a,a,B,b>>)
add_attribute("a", "C", "BOOLEAN")
greater_than
bool_value (true)
bool_value (false)
numerical_negation
equals
less_than
add_query("B", "e", <<["c", "INTEGER"], ["C", "b"], ["e", "BOOLEAN"], ["b", "A"], ["c", "BOOLEAN"], ["B", "b"], ["c", "INTEGER"]>>, "B")
add_call_chain(<<a>>)
add_call_chain(<<a,C,INTEGER,C,C,B>>)
numerical_negation
add_command("D", "A", <<["a", "BOOLEAN"], ["b", "A"], ["C", "BOOLEAN"], ["c", "INTEGER"], ["D", "INTEGER"]>>)
generate_java_code
add_attribute("d", "A", "BOOLEAN")
type_check
add_query("BOOLEAN", "C", <<["B", "BOOLEAN"], ["e", "D"], ["c", "INTEGER"], ["BOOLEAN", "INTEGER"], ["e", "INTEGER"], ["d", "INTEGER"], ["e", "BOOLEAN"]>>, "c")
type_check
int_value (38)
bool_value (true)
add_call_chain(<<INTEGER,BOOLEAN,b,b>>)
add_call_chain(<<C,B,D,B,B,c,C,b,B>>)
add_call_chain(<<d,c,INTEGER,D,BOOLEAN,BOOLEAN,BOOLEAN,e>>)
bool_value (false)
disjunction
generate_java_code
disjunction
add_attribute("BOOLEAN", "BOOLEAN", "INTEGER")
int_value (13)
logical_negation
add_call_chain(<<D,c,e,d,e,D,a,A>>)
add_command("BOOLEAN", "d", <<["a", "BOOLEAN"], ["c", "C"], ["b", "BOOLEAN"], ["C", "A"], ["D", "C"], ["C", "INTEGER"], ["B", "e"]>>)
logical_negation
add_call_chain(<<D,BOOLEAN,B,B>>)
add_query("c", "a", <<["B", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "INTEGER"], ["B", "BOOLEAN"]>>, "d")
add_command("C", "A", <<["c", "INTEGER"], ["A", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "B"], ["e", "e"], ["C", "INTEGER"], ["d", "INTEGER"]>>)
int_value (1)
add_class(b)
generate_java_code
add_command("d", "d", <<["d", "INTEGER"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["BOOLEAN", "C"], ["D", "BOOLEAN"], ["D", "INTEGER"]>>)
add_query("d", "b", <<["e", "D"], ["e", "BOOLEAN"], ["e", "INTEGER"], ["d", "e"], ["A", "e"]>>, "C")
add_command("d", "A", <<["B", "C"], ["d", "B"], ["C", "B"], ["D", "INTEGER"], ["c", "D"], ["a", "BOOLEAN"], ["A", "INTEGER"]>>)
add_query("e", "D", <<["e", "BOOLEAN"], ["a", "a"], ["B", "INTEGER"]>>, "A")
add_call_chain(<<a,d,C,INTEGER,A,D,B,D>>)
bool_value (false)
less_than
logical_negation
add_query("C", "INTEGER", <<["c", "INTEGER"], ["b", "BOOLEAN"], ["c", "C"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "a"], ["D", "INTEGER"]>>, "A")
int_value (13)
bool_value (true)
generate_java_code
bool_value (true)
add_attribute("d", "B", "BOOLEAN")
bool_value (false)
less_than
quotient
equals
generate_java_code
add_command("a", "b", <<["A", "D"]>>)
type_check
numerical_negation
bool_value (true)
add_attribute("C", "d", "BOOLEAN")
type_check
add_class(A)
conjunction
bool_value (false)
int_value (8)
equals
equals
add_call_chain(<<D,b,b,A>>)
bool_value (false)
add_command("c", "D", <<["BOOLEAN", "C"], ["e", "b"], ["d", "INTEGER"], ["B", "INTEGER"], ["D", "INTEGER"], ["D", "C"], ["C", "BOOLEAN"], ["e", "D"], ["c", "INTEGER"]>>)
add_call_chain(<<b,c,A,c,c,c,D>>)
logical_negation
quotient
int_value (7)
logical_negation
addition
bool_value (false)
logical_negation
add_command("B", "A", <<["c", "B"], ["INTEGER", "BOOLEAN"], ["A", "a"], ["d", "C"], ["d", "e"], ["d", "INTEGER"], ["D", "INTEGER"], ["A", "INTEGER"], ["d", "D"]>>)
bool_value (false)
add_call_chain(<<D>>)
add_query("C", "c", <<["D", "INTEGER"], ["a", "BOOLEAN"], ["C", "A"], ["D", "INTEGER"], ["c", "BOOLEAN"], ["A", "A"], ["A", "INTEGER"]>>, "C")
add_call_chain(<<a,D,d>>)
int_value (48)
add_command("B", "a", <<["INTEGER", "BOOLEAN"], ["c", "INTEGER"]>>)
add_query("A", "C", <<["c", "INTEGER"], ["D", "INTEGER"], ["e", "A"], ["d", "BOOLEAN"], ["A", "BOOLEAN"]>>, "D")
add_query("c", "b", <<["a", "BOOLEAN"], ["C", "B"], ["C", "b"]>>, "A")
add_call_chain(<<C>>)
add_call_chain(<<B,e,a,c>>)
logical_negation
logical_negation
int_value (46)
add_call_chain(<<A,e,d,d,e,A,d>>)
add_call_chain(<<b,B,d,INTEGER>>)
equals
add_attribute("e", "INTEGER", "a")
add_command("BOOLEAN", "b", <<["d", "INTEGER"], ["a", "BOOLEAN"], ["C", "INTEGER"], ["BOOLEAN", "B"], ["e", "INTEGER"], ["C", "BOOLEAN"], ["b", "INTEGER"]>>)
add_call_chain(<<c,a,a>>)
greater_than
type_check
add_class(a)
less_than
bool_value (true)
add_call_chain(<<C,c,C,INTEGER,C,A>>)
logical_negation
add_query("d", "C", <<["e", "INTEGER"], ["BOOLEAN", "C"], ["c", "B"], ["a", "INTEGER"], ["c", "b"], ["c", "INTEGER"], ["A", "INTEGER"]>>, "b")
disjunction
add_call_chain(<<A,A,d,c,d,c,e,C,a>>)
generate_java_code
conjunction
logical_negation
add_call_chain(<<d,A,C,B>>)
numerical_negation
add_command("B", "B", <<["b", "INTEGER"], ["b", "C"], ["a", "INTEGER"], ["D", "INTEGER"], ["A", "BOOLEAN"]>>)
add_attribute("B", "D", "INTEGER")
generate_java_code
int_value (1)
add_query("C", "e", <<["A", "INTEGER"], ["e", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "e"], ["B", "INTEGER"], ["INTEGER", "INTEGER"], ["a", "INTEGER"]>>, "c")
add_query("B", "A", <<["C", "BOOLEAN"], ["C", "INTEGER"], ["c", "INTEGER"]>>, "A")
add_call_chain(<<a,D>>)
equals
add_query("B", "B", <<["D", "BOOLEAN"], ["B", "e"], ["b", "INTEGER"], ["C", "INTEGER"], ["D", "INTEGER"], ["C", "BOOLEAN"]>>, "INTEGER")
add_attribute("A", "B", "a")
add_class(D)
bool_value (true)
numerical_negation
addition
add_class(e)
add_command("b", "d", <<["BOOLEAN", "BOOLEAN"], ["D", "INTEGER"], ["A", "INTEGER"], ["D", "C"], ["d", "BOOLEAN"], ["e", "INTEGER"], ["A", "C"], ["a", "INTEGER"], ["C", "b"]>>)
logical_negation
add_class(INTEGER)
numerical_negation
add_query("A", "BOOLEAN", <<["B", "D"], ["B", "a"], ["c", "BOOLEAN"], ["c", "BOOLEAN"]>>, "a")
add_command("A", "A", <<["A", "INTEGER"], ["a", "INTEGER"], ["a", "b"], ["C", "BOOLEAN"], ["a", "INTEGER"], ["c", "A"]>>)
add_call_chain(<<D,a,D,b,D,b>>)
bool_value (true)
logical_negation
add_call_chain(<<d,D,b,D,e,D,INTEGER,D,b>>)
bool_value (true)
add_class(e)
add_call_chain(<<INTEGER,b,a,d,b>>)
add_attribute("D", "D", "BOOLEAN")
add_call_chain(<<A,C,A,c,BOOLEAN,B,D,c,A>>)
add_command("C", "C", <<["C", "C"], ["D", "C"], ["a", "INTEGER"], ["INTEGER", "D"], ["A", "a"], ["a", "A"], ["c", "D"]>>)
int_value (7)
add_query("B", "D", <<["INTEGER", "C"], ["c", "INTEGER"], ["INTEGER", "INTEGER"], ["B", "BOOLEAN"], ["d", "BOOLEAN"]>>, "b")
bool_value (true)
greater_than
logical_negation
add_query("b", "A", <<["INTEGER", "BOOLEAN"], ["INTEGER", "D"]>>, "c")
add_query("B", "B", <<["C", "INTEGER"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["a", "e"], ["a", "BOOLEAN"], ["a", "D"], ["B", "INTEGER"], ["b", "B"]>>, "A")
add_call_chain(<<C,C,B,B>>)
less_than
add_command("d", "B", <<["b", "INTEGER"], ["A", "INTEGER"], ["d", "BOOLEAN"], ["D", "A"]>>)
add_attribute("B", "d", "d")
logical_negation
add_command("a", "D", <<["e", "INTEGER"], ["a", "INTEGER"], ["a", "B"], ["b", "e"], ["e", "INTEGER"], ["b", "B"], ["e", "BOOLEAN"], ["A", "BOOLEAN"]>>)
add_attribute("C", "INTEGER", "INTEGER")
add_call_chain(<<D,c,c,A,a,B,D,a>>)
int_value (26)
type_check
bool_value (true)
int_value (21)
add_command("D", "D", <<["b", "INTEGER"], ["D", "b"], ["C", "BOOLEAN"], ["c", "INTEGER"]>>)
add_call_chain(<<b,c,D,c>>)
logical_negation
numerical_negation
logical_negation
add_attribute("B", "A", "INTEGER")
type_check
add_call_chain(<<B,D,C,INTEGER,C>>)
add_call_chain(<<C,B,e,a>>)
int_value (29)
int_value (27)
subtraction
less_than
add_query("D", "b", <<["C", "BOOLEAN"], ["a", "INTEGER"], ["D", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "INTEGER"], ["b", "INTEGER"]>>, "INTEGER")
int_value (4)
add_call_chain(<<c,A,e,INTEGER,a,D,A>>)
add_command("b", "C", <<["a", "BOOLEAN"], ["d", "BOOLEAN"]>>)
logical_negation
add_command("D", "d", <<["A", "BOOLEAN"], ["b", "INTEGER"], ["b", "INTEGER"], ["BOOLEAN", "INTEGER"]>>)
add_attribute("d", "c", "D")
quotient
logical_negation
add_query("b", "b", <<["b", "A"], ["d", "A"], ["e", "BOOLEAN"]>>, "c")
add_call_chain(<<d,D,e,b,A,INTEGER>>)
int_value (37)
numerical_negation
add_call_chain(<<d,B,B,A,e,C,C>>)
logical_negation
add_command("B", "B", <<["d", "BOOLEAN"]>>)
bool_value (true)
add_call_chain(<<INTEGER,BOOLEAN,e,C,INTEGER,a>>)
add_command("B", "d", <<["B", "C"]>>)
add_attribute("a", "a", "INTEGER")
add_command("a", "INTEGER", <<["B", "d"]>>)
logical_negation
add_call_chain(<<b,d,B,C>>)
add_call_chain(<<D,C,D,D,b>>)
multiplication
numerical_negation
add_query("C", "A", <<["a", "INTEGER"], ["A", "a"], ["c", "a"], ["B", "BOOLEAN"], ["B", "C"], ["d", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["INTEGER", "C"]>>, "b")
type_check
subtraction
add_call_chain(<<BOOLEAN>>)
add_call_chain(<<D,A,D,A>>)
int_value (44)
add_call_chain(<<C,e>>)
disjunction
add_command("D", "BOOLEAN", <<["d", "INTEGER"], ["c", "INTEGER"], ["b", "INTEGER"], ["BOOLEAN", "INTEGER"], ["e", "INTEGER"], ["e", "INTEGER"], ["d", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>)
generate_java_code
disjunction
add_command("C", "A", <<["b", "A"], ["C", "d"], ["C", "BOOLEAN"], ["C", "INTEGER"]>>)
add_attribute("D", "e", "d")
generate_java_code
multiplication
