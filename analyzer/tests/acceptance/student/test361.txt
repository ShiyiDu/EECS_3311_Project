add_call_chain(<<c,INTEGER>>)
numerical_negation
add_call_chain(<<A,D,C>>)
bool_value (true)
addition
numerical_negation
type_check
add_query("a", "A", <<["D", "e"], ["A", "INTEGER"], ["c", "INTEGER"], ["b", "c"]>>, "INTEGER")
numerical_negation
add_call_chain(<<A,A,C,a,B,BOOLEAN,e>>)
int_value (21)
int_value (27)
bool_value (true)
bool_value (false)
numerical_negation
add_call_chain(<<e>>)
modulo
add_command("c", "d", <<["d", "A"], ["INTEGER", "INTEGER"], ["c", "INTEGER"], ["D", "INTEGER"], ["D", "B"], ["c", "BOOLEAN"], ["e", "INTEGER"]>>)
modulo
type_check
numerical_negation
logical_negation
add_class(INTEGER)
int_value (14)
generate_java_code
add_attribute("B", "e", "c")
int_value (31)
numerical_negation
add_class(D)
add_call_chain(<<D,D,b>>)
less_than
modulo
logical_negation
numerical_negation
add_call_chain(<<d,d,D>>)
add_call_chain(<<b,B>>)
generate_java_code
add_command("D", "A", <<["A", "d"], ["d", "b"], ["d", "INTEGER"], ["A", "INTEGER"], ["d", "C"], ["D", "INTEGER"]>>)
add_call_chain(<<e,B,d,e,a,BOOLEAN,c,D>>)
bool_value (true)
bool_value (false)
bool_value (false)
bool_value (false)
generate_java_code
generate_java_code
add_command("A", "A", <<["c", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["e", "INTEGER"], ["b", "INTEGER"], ["b", "a"]>>)
greater_than
add_query("c", "a", <<["b", "BOOLEAN"], ["C", "b"], ["b", "BOOLEAN"], ["B", "A"], ["B", "b"], ["b", "d"], ["a", "INTEGER"]>>, "a")
add_command("b", "d", <<["B", "INTEGER"], ["c", "BOOLEAN"], ["c", "INTEGER"], ["C", "INTEGER"]>>)
int_value (35)
add_attribute("b", "e", "BOOLEAN")
add_call_chain(<<B,b>>)
add_call_chain(<<D,A,B,b,d,d,A,d>>)
add_command("B", "c", <<["d", "INTEGER"]>>)
add_query("e", "INTEGER", <<["c", "INTEGER"], ["D", "INTEGER"], ["e", "INTEGER"], ["c", "INTEGER"], ["D", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "INTEGER"], ["D", "d"], ["e", "C"]>>, "INTEGER")
numerical_negation
numerical_negation
add_class(A)
logical_negation
bool_value (true)
add_command("C", "A", <<["INTEGER", "INTEGER"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["A", "INTEGER"], ["b", "B"], ["BOOLEAN", "B"], ["e", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>)
add_query("C", "B", <<["c", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "BOOLEAN"]>>, "C")
int_value (13)
logical_negation
add_call_chain(<<A,c,e,A,D,b>>)
add_command("c", "d", <<["b", "B"], ["b", "INTEGER"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["e", "BOOLEAN"], ["d", "INTEGER"], ["INTEGER", "b"], ["A", "B"]>>)
add_command("b", "B", <<["c", "INTEGER"]>>)
type_check
logical_negation
int_value (39)
logical_negation
add_call_chain(<<b,D,e>>)
add_command("a", "a", <<["D", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "d"], ["c", "BOOLEAN"]>>)
bool_value (true)
add_attribute("a", "B", "INTEGER")
bool_value (true)
add_call_chain(<<b,BOOLEAN,c,A,e>>)
int_value (4)
add_command("B", "e", <<["a", "INTEGER"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["c", "BOOLEAN"], ["D", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>)
int_value (8)
logical_negation
add_command("B", "C", <<["C", "BOOLEAN"], ["D", "INTEGER"]>>)
conjunction
int_value (31)
bool_value (false)
equals
add_attribute("B", "a", "BOOLEAN")
add_query("d", "A", <<["e", "A"], ["D", "D"], ["A", "a"], ["D", "INTEGER"], ["INTEGER", "B"], ["A", "d"], ["C", "BOOLEAN"], ["A", "INTEGER"]>>, "b")
add_call_chain(<<a,BOOLEAN,e,B>>)
add_query("b", "c", <<["c", "INTEGER"], ["D", "D"], ["e", "C"], ["b", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "BOOLEAN"]>>, "A")
add_call_chain(<<A,e,d,e,D,C,B,A>>)
add_query("c", "e", <<["d", "C"], ["INTEGER", "BOOLEAN"], ["C", "b"], ["e", "INTEGER"], ["e", "B"], ["a", "B"], ["BOOLEAN", "BOOLEAN"], ["INTEGER", "INTEGER"], ["d", "e"]>>, "b")
type_check
bool_value (true)
add_call_chain(<<INTEGER>>)
add_class(e)
type_check
bool_value (true)
type_check
logical_negation
add_command("A", "C", <<["BOOLEAN", "B"], ["e", "BOOLEAN"], ["e", "B"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["B", "INTEGER"], ["B", "BOOLEAN"], ["C", "D"]>>)
less_than
numerical_negation
add_call_chain(<<a>>)
add_call_chain(<<B,b,e,b,a,D,c,a,B>>)
generate_java_code
int_value (44)
add_call_chain(<<B,a,c>>)
add_attribute("a", "C", "INTEGER")
add_class(d)
disjunction
conjunction
disjunction
generate_java_code
bool_value (false)
equals
conjunction
numerical_negation
type_check
numerical_negation
add_call_chain(<<D,c,c,B,BOOLEAN,b,a,C,B>>)
add_command("d", "c", <<["b", "INTEGER"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["d", "BOOLEAN"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["e", "a"], ["d", "a"]>>)
bool_value (true)
logical_negation
add_attribute("b", "D", "BOOLEAN")
greater_than
disjunction
add_call_chain(<<d,a,B,BOOLEAN>>)
add_command("INTEGER", "INTEGER", <<["D", "d"]>>)
logical_negation
add_call_chain(<<b,D,B,e,a,d>>)
add_class(b)
generate_java_code
add_command("B", "A", <<["BOOLEAN", "BOOLEAN"]>>)
conjunction
add_call_chain(<<a,b,A,D,b>>)
add_command("D", "B", <<["INTEGER", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "INTEGER"], ["e", "INTEGER"], ["C", "INTEGER"], ["A", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["b", "INTEGER"]>>)
add_query("D", "C", <<["a", "d"], ["a", "INTEGER"], ["B", "B"]>>, "C")
type_check
subtraction
add_class(BOOLEAN)
multiplication
add_call_chain(<<C,a,d,A,B>>)
add_attribute("A", "D", "D")
add_call_chain(<<a,A,a>>)
add_attribute("B", "a", "BOOLEAN")
add_command("C", "A", <<["e", "B"], ["d", "BOOLEAN"], ["B", "A"], ["c", "INTEGER"], ["a", "C"], ["a", "BOOLEAN"], ["C", "B"], ["b", "INTEGER"]>>)
conjunction
add_command("e", "D", <<["A", "BOOLEAN"], ["A", "INTEGER"], ["e", "INTEGER"], ["D", "C"], ["c", "INTEGER"], ["C", "C"], ["a", "INTEGER"]>>)
less_than
add_query("e", "C", <<["C", "BOOLEAN"]>>, "b")
int_value (21)
int_value (18)
greater_than
greater_than
add_query("B", "INTEGER", <<["b", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["D", "INTEGER"], ["A", "INTEGER"], ["d", "INTEGER"]>>, "C")
add_attribute("e", "d", "INTEGER")
add_call_chain(<<B,C,c>>)
add_query("D", "D", <<["A", "C"], ["a", "INTEGER"], ["A", "a"], ["a", "B"], ["INTEGER", "INTEGER"], ["A", "e"], ["e", "INTEGER"], ["C", "INTEGER"], ["D", "INTEGER"]>>, "B")
add_call_chain(<<C,e,c,BOOLEAN,e,B,e>>)
logical_negation
add_query("D", "C", <<["b", "C"], ["C", "A"], ["c", "INTEGER"], ["C", "A"], ["C", "BOOLEAN"], ["c", "INTEGER"], ["BOOLEAN", "B"], ["e", "BOOLEAN"]>>, "BOOLEAN")
add_query("d", "C", <<["C", "D"], ["INTEGER", "INTEGER"], ["e", "INTEGER"], ["b", "BOOLEAN"], ["c", "BOOLEAN"], ["e", "INTEGER"], ["d", "INTEGER"]>>, "b")
int_value (46)
add_call_chain(<<BOOLEAN,C>>)
int_value (49)
add_call_chain(<<D,D,D,BOOLEAN,c,d,e,A,A>>)
type_check
add_attribute("A", "BOOLEAN", "INTEGER")
add_class(A)
logical_negation
add_command("b", "d", <<["A", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "BOOLEAN"]>>)
add_query("C", "D", <<["c", "INTEGER"], ["a", "BOOLEAN"]>>, "d")
conjunction
generate_java_code
numerical_negation
add_attribute("d", "a", "INTEGER")
add_query("A", "a", <<["B", "C"], ["B", "BOOLEAN"], ["c", "a"], ["e", "BOOLEAN"], ["D", "INTEGER"], ["B", "BOOLEAN"], ["C", "INTEGER"], ["INTEGER", "INTEGER"]>>, "D")
add_call_chain(<<b,b,D,C,A,B,B,a>>)
add_command("B", "b", <<["a", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
numerical_negation
conjunction
greater_than
generate_java_code
type_check
int_value (38)
add_class(e)
add_attribute("A", "D", "INTEGER")
add_class(b)
add_call_chain(<<A,c,d,D,D>>)
int_value (37)
generate_java_code
add_call_chain(<<e,D,C,d,BOOLEAN,d,A,C>>)
bool_value (true)
add_call_chain(<<e,A,c,d,D,BOOLEAN,INTEGER>>)
add_attribute("C", "d", "BOOLEAN")
add_command("c", "D", <<["d", "A"], ["b", "A"], ["B", "a"], ["b", "INTEGER"], ["b", "INTEGER"], ["C", "INTEGER"], ["c", "a"], ["D", "BOOLEAN"], ["d", "BOOLEAN"]>>)
add_call_chain(<<a,A,d,B,b,b>>)
add_command("C", "D", <<["D", "BOOLEAN"], ["e", "INTEGER"], ["A", "INTEGER"], ["BOOLEAN", "c"], ["C", "c"], ["d", "e"], ["D", "INTEGER"], ["d", "INTEGER"]>>)
add_command("A", "a", <<["A", "a"], ["e", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "B"]>>)
add_query("INTEGER", "d", <<["A", "INTEGER"], ["B", "INTEGER"], ["d", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "e"], ["d", "BOOLEAN"]>>, "D")
type_check
add_class(A)
type_check
add_call_chain(<<C,a,B,a,A,a,a,b,D>>)
add_query("e", "B", <<["C", "BOOLEAN"]>>, "A")
bool_value (false)
add_command("B", "a", <<["A", "BOOLEAN"], ["BOOLEAN", "a"], ["D", "C"], ["d", "BOOLEAN"], ["C", "INTEGER"]>>)
conjunction
add_call_chain(<<D,b,b,C>>)
add_class(d)
logical_negation
