add_attribute("INTEGER", "B", "BOOLEAN")
add_query("c", "B", <<["e", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["b", "BOOLEAN"], ["A", "BOOLEAN"]>>, "INTEGER")
conjunction
generate_java_code
add_query("a", "D", <<["D", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "a"], ["d", "A"], ["INTEGER", "BOOLEAN"], ["D", "INTEGER"], ["D", "INTEGER"]>>, "c")
add_query("D", "B", <<["B", "A"]>>, "a")
bool_value (false)
int_value (26)
generate_java_code
numerical_negation
add_call_chain(<<BOOLEAN,c,a,C,a,b,a,A,A>>)
add_attribute("D", "D", "b")
add_command("a", "C", <<["BOOLEAN", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "INTEGER"], ["A", "b"], ["e", "INTEGER"]>>)
generate_java_code
logical_negation
int_value (5)
add_query("INTEGER", "A", <<["b", "BOOLEAN"], ["A", "INTEGER"], ["B", "INTEGER"], ["c", "INTEGER"], ["d", "B"]>>, "b")
bool_value (true)
add_query("b", "BOOLEAN", <<["D", "D"], ["d", "INTEGER"], ["e", "BOOLEAN"], ["d", "C"]>>, "e")
bool_value (false)
numerical_negation
multiplication
disjunction
add_query("C", "INTEGER", <<["c", "BOOLEAN"], ["BOOLEAN", "B"], ["e", "INTEGER"]>>, "D")
add_attribute("A", "A", "a")
add_call_chain(<<d,a,B,C,b,D,A,B>>)
logical_negation
add_attribute("B", "A", "BOOLEAN")
greater_than
add_query("B", "e", <<["D", "INTEGER"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["c", "D"]>>, "C")
modulo
add_call_chain(<<A,INTEGER,e,A,D>>)
multiplication
add_query("BOOLEAN", "a", <<["e", "BOOLEAN"], ["a", "INTEGER"], ["a", "BOOLEAN"], ["b", "INTEGER"], ["A", "BOOLEAN"]>>, "B")
int_value (49)
numerical_negation
bool_value (false)
add_query("A", "b", <<["A", "a"], ["b", "INTEGER"], ["D", "B"], ["B", "A"], ["c", "INTEGER"], ["c", "INTEGER"], ["INTEGER", "INTEGER"]>>, "B")
add_call_chain(<<C,A,B,C,a>>)
add_class(D)
add_command("INTEGER", "e", <<["a", "INTEGER"], ["B", "BOOLEAN"], ["d", "b"], ["C", "B"]>>)
int_value (27)
add_call_chain(<<C,B,a,d,BOOLEAN>>)
int_value (30)
numerical_negation
greater_than
add_command("e", "b", <<["e", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "c"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["B", "BOOLEAN"]>>)
add_call_chain(<<BOOLEAN,A,d,e,B,d,D>>)
logical_negation
numerical_negation
add_call_chain(<<a,B,C,d,BOOLEAN,a>>)
int_value (49)
int_value (27)
add_command("c", "e", <<["a", "INTEGER"], ["c", "d"], ["A", "BOOLEAN"], ["C", "d"], ["D", "B"], ["D", "BOOLEAN"], ["d", "INTEGER"]>>)
add_attribute("BOOLEAN", "b", "e")
conjunction
bool_value (true)
add_call_chain(<<c,b,d,C,C,d,a,b,c>>)
addition
add_command("D", "e", <<["C", "A"], ["d", "INTEGER"], ["d", "B"], ["e", "BOOLEAN"]>>)
int_value (30)
add_class(B)
numerical_negation
add_attribute("e", "B", "a")
multiplication
add_call_chain(<<B,D,BOOLEAN,b,a,C,e,C,D>>)
add_call_chain(<<D,A,b>>)
add_attribute("d", "A", "d")
bool_value (true)
bool_value (false)
add_attribute("A", "C", "INTEGER")
subtraction
add_attribute("B", "BOOLEAN", "INTEGER")
add_call_chain(<<a,a,B,b>>)
add_command("A", "D", <<["B", "D"]>>)
add_attribute("d", "e", "INTEGER")
int_value (26)
modulo
bool_value (false)
generate_java_code
add_call_chain(<<INTEGER,a,c,B,INTEGER,e,B>>)
numerical_negation
conjunction
add_command("c", "c", <<["c", "C"], ["A", "BOOLEAN"], ["d", "INTEGER"], ["B", "INTEGER"], ["B", "D"], ["b", "INTEGER"]>>)
generate_java_code
add_call_chain(<<d,a,C,A,B>>)
numerical_negation
add_attribute("B", "B", "A")
add_call_chain(<<A,C,D,INTEGER,d,A>>)
add_call_chain(<<d>>)
generate_java_code
generate_java_code
int_value (13)
type_check
type_check
add_call_chain(<<d,C,d,A,d,a,d,a>>)
bool_value (false)
int_value (41)
add_class(B)
numerical_negation
logical_negation
int_value (5)
numerical_negation
add_command("e", "A", <<["a", "A"], ["B", "INTEGER"], ["d", "INTEGER"], ["B", "INTEGER"], ["A", "b"]>>)
int_value (12)
add_attribute("e", "A", "BOOLEAN")
type_check
numerical_negation
add_call_chain(<<C>>)
add_call_chain(<<b>>)
equals
type_check
type_check
numerical_negation
bool_value (true)
add_call_chain(<<e,b,b,BOOLEAN,B,A,A,C,c>>)
multiplication
add_query("c", "C", <<["BOOLEAN", "BOOLEAN"]>>, "C")
generate_java_code
add_attribute("b", "D", "BOOLEAN")
bool_value (true)
bool_value (true)
add_call_chain(<<b,e,A,C,BOOLEAN,e,A,c>>)
logical_negation
bool_value (false)
generate_java_code
add_query("e", "c", <<["B", "BOOLEAN"], ["A", "INTEGER"], ["A", "INTEGER"], ["C", "INTEGER"], ["A", "INTEGER"], ["D", "BOOLEAN"]>>, "BOOLEAN")
add_attribute("A", "d", "INTEGER")
numerical_negation
add_attribute("D", "c", "INTEGER")
generate_java_code
logical_negation
generate_java_code
add_query("a", "a", <<["B", "BOOLEAN"], ["C", "INTEGER"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["c", "e"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["C", "e"], ["D", "e"]>>, "a")
int_value (15)
numerical_negation
generate_java_code
generate_java_code
greater_than
type_check
numerical_negation
logical_negation
conjunction
add_command("b", "B", <<["D", "BOOLEAN"], ["d", "BOOLEAN"], ["e", "INTEGER"], ["c", "INTEGER"]>>)
add_call_chain(<<c,e,D,INTEGER>>)
add_call_chain(<<A,c,B,d,d,d,B,C>>)
bool_value (false)
add_attribute("d", "c", "C")
generate_java_code
add_query("B", "c", <<["A", "BOOLEAN"], ["b", "A"], ["c", "INTEGER"], ["c", "INTEGER"], ["a", "BOOLEAN"], ["B", "e"], ["d", "BOOLEAN"]>>, "c")
bool_value (true)
int_value (32)
add_command("B", "c", <<["C", "c"], ["INTEGER", "BOOLEAN"], ["D", "b"], ["C", "INTEGER"], ["a", "A"]>>)
add_attribute("a", "b", "BOOLEAN")
add_call_chain(<<C,c,A,a,B,A,D,a,INTEGER>>)
less_than
add_query("B", "C", <<["c", "BOOLEAN"], ["b", "BOOLEAN"]>>, "d")
logical_negation
int_value (35)
disjunction
add_command("d", "c", <<["d", "INTEGER"], ["INTEGER", "BOOLEAN"], ["a", "INTEGER"], ["d", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "C"], ["b", "d"]>>)
logical_negation
int_value (44)
add_command("C", "a", <<["b", "A"], ["A", "c"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["BOOLEAN", "D"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["d", "INTEGER"]>>)
bool_value (true)
add_query("a", "C", <<["C", "C"], ["D", "c"], ["B", "BOOLEAN"], ["BOOLEAN", "A"], ["C", "INTEGER"], ["a", "INTEGER"]>>, "C")
add_call_chain(<<A,a,BOOLEAN,c,c,INTEGER>>)
add_call_chain(<<BOOLEAN,d,a,b,B,c,D,D,A>>)
add_call_chain(<<C,BOOLEAN,C,A,C>>)
numerical_negation
less_than
add_call_chain(<<a,b,INTEGER,d,B,B,a,BOOLEAN>>)
type_check
bool_value (false)
add_attribute("D", "c", "INTEGER")
bool_value (true)
disjunction
add_command("A", "B", <<["a", "INTEGER"], ["B", "INTEGER"], ["e", "BOOLEAN"], ["B", "INTEGER"], ["B", "B"], ["e", "INTEGER"], ["b", "INTEGER"], ["D", "d"]>>)
add_call_chain(<<B,A,C,d,a>>)
logical_negation
add_query("a", "BOOLEAN", <<["b", "BOOLEAN"], ["e", "a"], ["INTEGER", "C"], ["a", "BOOLEAN"], ["A", "d"], ["INTEGER", "INTEGER"], ["D", "C"]>>, "a")
add_class(A)
generate_java_code
add_query("c", "e", <<["d", "INTEGER"], ["D", "INTEGER"], ["D", "d"], ["a", "b"]>>, "C")
equals
type_check
greater_than
bool_value (true)
generate_java_code
bool_value (true)
type_check
bool_value (false)
bool_value (true)
add_attribute("a", "D", "d")
add_class(D)
less_than
add_command("A", "a", <<["d", "INTEGER"], ["A", "a"], ["B", "A"], ["C", "BOOLEAN"]>>)
quotient
add_call_chain(<<D,C,c,C,D,c>>)
int_value (1)
add_attribute("D", "INTEGER", "B")
greater_than
add_call_chain(<<e,e>>)
numerical_negation
numerical_negation
equals
equals
add_attribute("A", "d", "BOOLEAN")
add_call_chain(<<D,a,c,A,b,b,B>>)
type_check
add_query("e", "A", <<["d", "INTEGER"], ["BOOLEAN", "INTEGER"]>>, "C")
type_check
generate_java_code
type_check
int_value (33)
add_class(BOOLEAN)
add_query("D", "B", <<["B", "a"], ["b", "d"], ["C", "BOOLEAN"], ["d", "INTEGER"], ["D", "INTEGER"], ["d", "c"], ["D", "b"], ["BOOLEAN", "INTEGER"]>>, "c")
add_call_chain(<<b,B,d,A>>)
add_command("b", "a", <<["d", "INTEGER"], ["D", "INTEGER"]>>)
add_class(A)
int_value (42)
int_value (24)
add_class(A)
add_call_chain(<<e,BOOLEAN,INTEGER,D,C,D,INTEGER>>)
add_call_chain(<<BOOLEAN,c,e,B,INTEGER>>)
int_value (16)
add_attribute("A", "a", "e")
add_class(a)
numerical_negation
type_check
add_class(d)
logical_negation
type_check
add_attribute("B", "a", "INTEGER")
bool_value (true)
quotient
add_call_chain(<<C,b,d,BOOLEAN>>)
add_class(D)
type_check
add_command("e", "D", <<["INTEGER", "D"], ["INTEGER", "INTEGER"], ["B", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["C", "INTEGER"], ["a", "A"], ["A", "INTEGER"], ["c", "INTEGER"]>>)
add_command("d", "A", <<["b", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "c"], ["BOOLEAN", "BOOLEAN"], ["c", "BOOLEAN"], ["c", "BOOLEAN"]>>)
add_command("D", "c", <<["B", "INTEGER"], ["D", "B"]>>)
bool_value (true)
add_call_chain(<<e,C,b,B,e>>)
multiplication
add_query("B", "D", <<["C", "BOOLEAN"], ["e", "INTEGER"]>>, "c")
logical_negation
add_class(b)
add_query("a", "D", <<["A", "A"], ["d", "a"]>>, "d")
type_check
int_value (46)
add_query("b", "a", <<["BOOLEAN", "D"], ["d", "INTEGER"], ["C", "e"], ["e", "b"], ["A", "INTEGER"], ["d", "INTEGER"], ["INTEGER", "BOOLEAN"]>>, "D")
bool_value (false)
int_value (29)
add_command("D", "c", <<["A", "BOOLEAN"], ["A", "b"], ["c", "INTEGER"], ["b", "A"], ["d", "B"], ["D", "BOOLEAN"], ["INTEGER", "c"], ["C", "BOOLEAN"], ["d", "INTEGER"]>>)
add_call_chain(<<A,c,d,b,d>>)
conjunction
add_query("e", "C", <<["BOOLEAN", "INTEGER"], ["a", "B"], ["C", "b"]>>, "D")
add_command("e", "a", <<["B", "D"], ["C", "INTEGER"], ["B", "e"], ["d", "d"]>>)
quotient
