equals
logical_negation
conjunction
int_value (28)
add_class(C)
add_query("C", "A", <<["A", "A"], ["A", "INTEGER"], ["A", "e"], ["D", "c"], ["b", "B"], ["D", "BOOLEAN"], ["c", "BOOLEAN"]>>, "c")
add_attribute("D", "B", "C")
bool_value (true)
add_attribute("A", "c", "INTEGER")
add_query("a", "A", <<["d", "INTEGER"], ["d", "e"], ["e", "INTEGER"], ["BOOLEAN", "d"], ["a", "BOOLEAN"], ["B", "b"], ["INTEGER", "INTEGER"]>>, "e")
add_query("e", "b", <<["C", "BOOLEAN"], ["B", "INTEGER"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["c", "A"], ["e", "INTEGER"], ["D", "INTEGER"], ["e", "b"]>>, "A")
add_command("b", "B", <<["B", "BOOLEAN"], ["d", "e"], ["d", "INTEGER"], ["c", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
add_call_chain(<<D,BOOLEAN>>)
disjunction
conjunction
add_call_chain(<<A,a>>)
multiplication
add_query("d", "b", <<["d", "BOOLEAN"], ["A", "INTEGER"], ["d", "INTEGER"], ["BOOLEAN", "INTEGER"], ["D", "BOOLEAN"], ["BOOLEAN", "d"]>>, "A")
add_class(D)
int_value (25)
add_class(INTEGER)
bool_value (false)
addition
add_call_chain(<<C,C,d,B>>)
bool_value (false)
add_attribute("b", "B", "INTEGER")
add_attribute("BOOLEAN", "e", "BOOLEAN")
add_call_chain(<<a,INTEGER,C,BOOLEAN,c,C,A>>)
modulo
add_class(C)
add_query("B", "D", <<["A", "BOOLEAN"]>>, "C")
add_attribute("c", "c", "INTEGER")
numerical_negation
bool_value (true)
numerical_negation
add_query("b", "e", <<["c", "C"], ["A", "d"], ["C", "INTEGER"]>>, "A")
add_command("INTEGER", "c", <<["a", "BOOLEAN"], ["e", "BOOLEAN"]>>)
int_value (46)
add_call_chain(<<a,a,d,B>>)
add_query("c", "C", <<["a", "BOOLEAN"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["C", "e"]>>, "a")
add_class(e)
add_call_chain(<<C>>)
bool_value (false)
int_value (3)
bool_value (true)
logical_negation
add_attribute("D", "C", "INTEGER")
generate_java_code
greater_than
addition
greater_than
int_value (6)
numerical_negation
add_command("c", "b", <<["b", "A"], ["D", "BOOLEAN"], ["e", "B"], ["d", "INTEGER"], ["a", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "e"], ["c", "BOOLEAN"]>>)
type_check
add_attribute("B", "BOOLEAN", "BOOLEAN")
int_value (47)
add_attribute("d", "INTEGER", "INTEGER")
disjunction
bool_value (false)
int_value (44)
add_call_chain(<<D,e>>)
bool_value (true)
add_query("a", "A", <<["D", "BOOLEAN"], ["C", "C"], ["BOOLEAN", "c"], ["BOOLEAN", "BOOLEAN"], ["B", "INTEGER"], ["d", "INTEGER"], ["b", "a"]>>, "A")
equals
type_check
subtraction
add_command("B", "B", <<["D", "INTEGER"], ["c", "INTEGER"], ["e", "INTEGER"], ["e", "B"], ["b", "BOOLEAN"], ["D", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
numerical_negation
add_call_chain(<<A,d,B,d,b,A,INTEGER>>)
add_command("e", "B", <<["BOOLEAN", "a"], ["INTEGER", "d"], ["e", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["c", "INTEGER"], ["A", "INTEGER"], ["C", "BOOLEAN"]>>)
generate_java_code
int_value (18)
add_call_chain(<<D,B,C,b,C,D,D,B>>)
generate_java_code
add_query("B", "C", <<["e", "BOOLEAN"], ["b", "INTEGER"], ["D", "INTEGER"], ["A", "BOOLEAN"], ["C", "INTEGER"]>>, "A")
equals
add_command("b", "a", <<["INTEGER", "INTEGER"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "B"], ["e", "INTEGER"], ["D", "INTEGER"], ["a", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
add_class(B)
add_call_chain(<<b,b,d,d,INTEGER>>)
add_command("A", "A", <<["A", "BOOLEAN"], ["c", "BOOLEAN"], ["a", "INTEGER"], ["B", "BOOLEAN"], ["C", "A"], ["A", "b"], ["a", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>)
conjunction
type_check
int_value (43)
add_call_chain(<<B,d,d,b,B,d,e,a>>)
add_attribute("C", "a", "BOOLEAN")
type_check
add_class(b)
numerical_negation
add_command("e", "d", <<["a", "INTEGER"], ["C", "INTEGER"], ["B", "INTEGER"]>>)
add_class(BOOLEAN)
type_check
bool_value (false)
add_query("INTEGER", "B", <<["e", "BOOLEAN"], ["A", "B"], ["d", "BOOLEAN"], ["d", "B"], ["b", "BOOLEAN"], ["b", "INTEGER"], ["c", "INTEGER"], ["C", "BOOLEAN"]>>, "INTEGER")
add_query("A", "A", <<["b", "INTEGER"], ["d", "D"], ["INTEGER", "D"], ["c", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "D"], ["e", "c"], ["B", "BOOLEAN"]>>, "D")
add_call_chain(<<D,A>>)
type_check
logical_negation
add_call_chain(<<a,D,D,A>>)
greater_than
generate_java_code
int_value (48)
add_command("b", "D", <<["e", "c"], ["C", "INTEGER"], ["D", "BOOLEAN"]>>)
equals
add_command("b", "d", <<["B", "a"]>>)
numerical_negation
numerical_negation
add_call_chain(<<D,c,c>>)
generate_java_code
bool_value (true)
add_call_chain(<<C,c,d,D,b>>)
int_value (22)
add_command("B", "d", <<["c", "BOOLEAN"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["b", "BOOLEAN"]>>)
bool_value (false)
add_class(B)
conjunction
numerical_negation
add_call_chain(<<A,a,b,c,a,a,A,D,c>>)
numerical_negation
generate_java_code
add_command("e", "e", <<["BOOLEAN", "c"]>>)
add_command("b", "B", <<["BOOLEAN", "INTEGER"], ["b", "BOOLEAN"]>>)
add_class(D)
add_attribute("B", "B", "BOOLEAN")
bool_value (false)
add_call_chain(<<C,INTEGER,D,b>>)
int_value (5)
add_call_chain(<<c,D,A,D,c,A,e,B,C>>)
add_query("C", "BOOLEAN", <<["e", "INTEGER"], ["B", "BOOLEAN"], ["INTEGER", "INTEGER"], ["B", "BOOLEAN"], ["INTEGER", "d"], ["C", "INTEGER"], ["B", "a"], ["e", "INTEGER"]>>, "a")
add_attribute("a", "A", "INTEGER")
conjunction
logical_negation
add_command("A", "d", <<["C", "C"], ["d", "INTEGER"], ["d", "BOOLEAN"]>>)
add_attribute("A", "D", "BOOLEAN")
add_command("BOOLEAN", "D", <<["c", "INTEGER"], ["A", "INTEGER"], ["A", "BOOLEAN"], ["d", "A"], ["B", "BOOLEAN"], ["a", "BOOLEAN"]>>)
add_attribute("B", "b", "INTEGER")
add_class(C)
bool_value (true)
add_query("e", "C", <<["A", "INTEGER"], ["b", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "D"]>>, "C")
bool_value (false)
add_query("c", "C", <<["a", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "INTEGER"], ["A", "C"]>>, "B")
add_class(B)
type_check
add_query("e", "b", <<["c", "a"], ["c", "b"], ["C", "INTEGER"], ["a", "INTEGER"], ["D", "BOOLEAN"], ["c", "d"], ["A", "b"]>>, "A")
add_command("C", "C", <<["a", "e"], ["c", "BOOLEAN"], ["INTEGER", "INTEGER"], ["b", "INTEGER"], ["INTEGER", "D"], ["a", "INTEGER"], ["c", "INTEGER"], ["a", "BOOLEAN"], ["A", "a"]>>)
logical_negation
int_value (35)
add_command("BOOLEAN", "A", <<["C", "BOOLEAN"], ["A", "b"], ["D", "d"], ["C", "c"], ["b", "INTEGER"], ["c", "A"]>>)
add_call_chain(<<A,A,INTEGER,e,e,C,D,e,b>>)
greater_than
logical_negation
add_call_chain(<<D,D>>)
add_attribute("B", "INTEGER", "BOOLEAN")
add_command("C", "B", <<["d", "INTEGER"], ["B", "INTEGER"], ["D", "B"], ["a", "INTEGER"], ["A", "d"]>>)
type_check
less_than
add_query("e", "c", <<["c", "INTEGER"]>>, "C")
greater_than
add_call_chain(<<BOOLEAN,B,C,B,a,c,INTEGER,C,INTEGER>>)
add_class(A)
add_call_chain(<<a,c,A>>)
add_call_chain(<<e,C,b,A,b,D,a>>)
add_command("A", "b", <<["BOOLEAN", "a"], ["b", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "INTEGER"], ["A", "e"], ["d", "INTEGER"], ["A", "BOOLEAN"], ["a", "INTEGER"]>>)
add_call_chain(<<e,d,d,B,D>>)
add_call_chain(<<C,A>>)
int_value (15)
int_value (47)
modulo
logical_negation
less_than
generate_java_code
add_query("D", "c", <<["B", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "c"], ["A", "BOOLEAN"], ["B", "D"], ["D", "b"], ["b", "A"]>>, "A")
equals
generate_java_code
type_check
add_command("d", "d", <<["B", "INTEGER"], ["d", "c"], ["B", "INTEGER"], ["e", "INTEGER"], ["b", "d"], ["e", "BOOLEAN"], ["c", "INTEGER"]>>)
add_attribute("INTEGER", "c", "INTEGER")
add_attribute("d", "B", "BOOLEAN")
add_query("e", "INTEGER", <<["INTEGER", "INTEGER"], ["A", "c"], ["INTEGER", "BOOLEAN"]>>, "d")
int_value (21)
type_check
type_check
int_value (36)
add_command("B", "A", <<["a", "c"], ["D", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["C", "INTEGER"], ["c", "INTEGER"], ["c", "BOOLEAN"]>>)
numerical_negation
greater_than
subtraction
numerical_negation
generate_java_code
bool_value (true)
add_call_chain(<<a,e,a,e,A,e>>)
add_command("A", "BOOLEAN", <<["A", "A"], ["d", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "C"], ["a", "BOOLEAN"], ["b", "B"], ["d", "INTEGER"]>>)
add_attribute("A", "INTEGER", "B")
int_value (48)
int_value (21)
add_call_chain(<<b,b,C,D,e,A,C>>)
type_check
add_command("C", "A", <<["b", "BOOLEAN"], ["a", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["a", "INTEGER"], ["e", "BOOLEAN"]>>)
add_command("c", "D", <<["e", "INTEGER"], ["A", "c"], ["d", "INTEGER"], ["b", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "INTEGER"]>>)
add_call_chain(<<d,C,BOOLEAN,C,b,INTEGER,BOOLEAN,C,INTEGER>>)
add_command("D", "A", <<["e", "INTEGER"], ["e", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "BOOLEAN"]>>)
add_call_chain(<<c,D,B,B,b>>)
logical_negation
add_query("C", "c", <<["d", "INTEGER"], ["C", "INTEGER"]>>, "c")
add_command("c", "D", <<["a", "C"], ["INTEGER", "BOOLEAN"], ["INTEGER", "c"], ["a", "C"]>>)
add_call_chain(<<e,B,c,b>>)
multiplication
add_command("a", "a", <<["BOOLEAN", "INTEGER"], ["a", "BOOLEAN"], ["BOOLEAN", "e"]>>)
logical_negation
int_value (5)
int_value (30)
conjunction
add_call_chain(<<BOOLEAN,D,a,A,b,B,D,C>>)
add_call_chain(<<D,b,B,e>>)
numerical_negation
logical_negation
int_value (3)
add_attribute("D", "a", "BOOLEAN")
add_attribute("b", "INTEGER", "INTEGER")
logical_negation
add_call_chain(<<a,B,C,B,A>>)
add_attribute("b", "a", "D")
add_attribute("b", "b", "BOOLEAN")
generate_java_code
numerical_negation
numerical_negation
greater_than
add_attribute("C", "A", "BOOLEAN")
generate_java_code
bool_value (true)
bool_value (true)
add_attribute("A", "D", "C")
add_query("e", "D", <<["B", "BOOLEAN"], ["e", "INTEGER"], ["C", "B"], ["d", "INTEGER"], ["A", "INTEGER"], ["D", "c"], ["INTEGER", "BOOLEAN"], ["b", "BOOLEAN"]>>, "c")
add_class(B)
add_query("A", "c", <<["D", "INTEGER"], ["c", "BOOLEAN"], ["C", "INTEGER"]>>, "B")
add_command("e", "D", <<["C", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "C"], ["C", "INTEGER"], ["A", "INTEGER"], ["A", "INTEGER"]>>)
bool_value (false)
bool_value (false)
add_query("INTEGER", "c", <<["B", "d"], ["e", "BOOLEAN"], ["a", "INTEGER"], ["c", "d"], ["c", "D"]>>, "c")
add_command("D", "A", <<["A", "B"], ["d", "INTEGER"], ["e", "INTEGER"], ["B", "INTEGER"], ["e", "INTEGER"], ["C", "B"], ["C", "BOOLEAN"], ["d", "INTEGER"]>>)
bool_value (true)
int_value (14)
logical_negation
add_query("e", "e", <<["INTEGER", "INTEGER"]>>, "INTEGER")
generate_java_code
int_value (16)
logical_negation
bool_value (true)
logical_negation
add_call_chain(<<INTEGER,e,d,C,c,D>>)
type_check
bool_value (true)
generate_java_code
int_value (13)
add_call_chain(<<B,a,c,INTEGER,INTEGER>>)
equals
bool_value (false)
conjunction
numerical_negation
add_call_chain(<<a,e,d,d,d>>)
