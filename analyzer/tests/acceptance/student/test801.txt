add_command("B", "BOOLEAN", <<["B", "BOOLEAN"], ["INTEGER", "INTEGER"], ["b", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "d"], ["e", "INTEGER"], ["c", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "BOOLEAN"]>>)
add_command("C", "INTEGER", <<["C", "d"], ["c", "BOOLEAN"], ["INTEGER", "D"], ["D", "INTEGER"], ["e", "D"], ["A", "BOOLEAN"], ["A", "INTEGER"], ["a", "BOOLEAN"]>>)
numerical_negation
int_value (39)
add_call_chain(<<a,c>>)
add_attribute("C", "e", "BOOLEAN")
add_command("A", "B", <<["a", "B"], ["b", "d"], ["b", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "a"], ["e", "BOOLEAN"], ["b", "BOOLEAN"]>>)
bool_value (false)
add_call_chain(<<b,D,BOOLEAN,A>>)
int_value (12)
logical_negation
numerical_negation
conjunction
equals
disjunction
multiplication
add_query("b", "c", <<["d", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "B"], ["c", "INTEGER"], ["a", "INTEGER"], ["A", "b"], ["D", "BOOLEAN"], ["b", "BOOLEAN"]>>, "b")
add_command("D", "C", <<["INTEGER", "BOOLEAN"], ["d", "BOOLEAN"]>>)
logical_negation
add_class(INTEGER)
addition
add_command("D", "d", <<["c", "BOOLEAN"], ["C", "BOOLEAN"]>>)
bool_value (true)
add_attribute("a", "e", "b")
add_query("B", "c", <<["e", "a"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["B", "INTEGER"], ["a", "e"], ["D", "INTEGER"], ["e", "BOOLEAN"], ["C", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>, "e")
add_query("D", "a", <<["a", "BOOLEAN"], ["C", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["BOOLEAN", "b"]>>, "BOOLEAN")
add_call_chain(<<BOOLEAN>>)
add_query("D", "b", <<["B", "a"], ["d", "INTEGER"], ["C", "INTEGER"], ["A", "A"], ["e", "A"], ["C", "D"], ["e", "A"], ["a", "INTEGER"], ["A", "INTEGER"]>>, "e")
add_call_chain(<<B>>)
add_query("C", "a", <<["C", "BOOLEAN"], ["b", "INTEGER"], ["d", "B"], ["B", "INTEGER"], ["c", "C"]>>, "a")
add_command("b", "BOOLEAN", <<["A", "B"], ["INTEGER", "INTEGER"], ["a", "D"], ["d", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "INTEGER"], ["D", "e"], ["b", "BOOLEAN"]>>)
add_attribute("b", "C", "INTEGER")
bool_value (false)
bool_value (false)
add_query("a", "C", <<["a", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["A", "BOOLEAN"], ["C", "d"], ["BOOLEAN", "a"]>>, "INTEGER")
generate_java_code
add_query("e", "d", <<["B", "INTEGER"], ["e", "BOOLEAN"], ["INTEGER", "INTEGER"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["a", "INTEGER"], ["BOOLEAN", "b"], ["B", "BOOLEAN"], ["C", "C"]>>, "D")
add_call_chain(<<A,C,d,A,c>>)
add_call_chain(<<A,e,c>>)
generate_java_code
bool_value (true)
add_command("INTEGER", "B", <<["B", "D"]>>)
add_class(A)
greater_than
equals
add_query("B", "B", <<["b", "INTEGER"], ["A", "INTEGER"], ["d", "INTEGER"], ["d", "b"]>>, "B")
subtraction
add_command("e", "A", <<["e", "A"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "D"], ["e", "a"], ["C", "INTEGER"], ["B", "A"], ["D", "INTEGER"], ["d", "BOOLEAN"]>>)
numerical_negation
numerical_negation
type_check
int_value (49)
add_query("C", "B", <<["A", "INTEGER"]>>, "e")
add_call_chain(<<C,e>>)
add_query("b", "D", <<["b", "BOOLEAN"], ["B", "c"], ["c", "INTEGER"], ["C", "BOOLEAN"]>>, "e")
numerical_negation
int_value (45)
disjunction
add_attribute("A", "A", "A")
add_call_chain(<<d,INTEGER,C,B,d,C,B,c>>)
modulo
add_query("C", "A", <<["B", "BOOLEAN"], ["b", "a"], ["D", "B"], ["a", "INTEGER"], ["D", "C"], ["A", "BOOLEAN"], ["b", "INTEGER"], ["d", "INTEGER"], ["C", "BOOLEAN"]>>, "d")
add_query("B", "c", <<["e", "INTEGER"], ["B", "INTEGER"], ["b", "BOOLEAN"], ["D", "INTEGER"]>>, "c")
int_value (49)
add_query("b", "D", <<["INTEGER", "BOOLEAN"], ["B", "d"], ["a", "c"], ["c", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "D"], ["C", "A"], ["b", "d"], ["c", "INTEGER"]>>, "b")
bool_value (true)
add_call_chain(<<C,BOOLEAN,d,B,C,e>>)
conjunction
add_attribute("B", "c", "C")
add_command("D", "B", <<["C", "INTEGER"], ["A", "INTEGER"], ["a", "BOOLEAN"], ["A", "C"], ["e", "BOOLEAN"], ["D", "BOOLEAN"]>>)
type_check
add_call_chain(<<A,C>>)
add_call_chain(<<e,D,b,C,c,C>>)
add_attribute("b", "B", "A")
add_class(b)
add_attribute("C", "e", "BOOLEAN")
generate_java_code
add_call_chain(<<A,d>>)
add_attribute("d", "D", "BOOLEAN")
type_check
numerical_negation
add_attribute("INTEGER", "a", "C")
bool_value (false)
int_value (48)
add_command("e", "D", <<["e", "INTEGER"], ["b", "C"], ["D", "BOOLEAN"], ["a", "BOOLEAN"], ["b", "INTEGER"], ["b", "b"]>>)
numerical_negation
add_query("e", "BOOLEAN", <<["c", "BOOLEAN"], ["c", "INTEGER"]>>, "b")
add_query("B", "INTEGER", <<["a", "A"], ["a", "INTEGER"], ["c", "d"]>>, "d")
add_command("D", "a", <<["A", "BOOLEAN"], ["B", "INTEGER"], ["e", "INTEGER"], ["D", "BOOLEAN"], ["d", "C"], ["d", "INTEGER"]>>)
add_class(A)
subtraction
add_attribute("B", "d", "c")
int_value (29)
logical_negation
generate_java_code
generate_java_code
logical_negation
multiplication
logical_negation
numerical_negation
int_value (1)
add_query("a", "C", <<["B", "BOOLEAN"], ["a", "INTEGER"], ["a", "A"], ["A", "BOOLEAN"]>>, "BOOLEAN")
bool_value (false)
add_call_chain(<<d,D,e,BOOLEAN,a,b,B>>)
add_command("d", "b", <<["B", "BOOLEAN"], ["c", "B"], ["INTEGER", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["BOOLEAN", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["a", "b"], ["A", "BOOLEAN"]>>)
type_check
add_call_chain(<<BOOLEAN,A>>)
add_call_chain(<<B,e>>)
add_command("INTEGER", "B", <<["BOOLEAN", "C"]>>)
add_call_chain(<<B>>)
type_check
conjunction
add_call_chain(<<INTEGER>>)
numerical_negation
add_call_chain(<<C,b,b>>)
add_attribute("B", "BOOLEAN", "BOOLEAN")
bool_value (false)
add_attribute("BOOLEAN", "a", "C")
add_call_chain(<<d,a,C,e,B,e,D>>)
add_command("C", "BOOLEAN", <<["e", "e"], ["b", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["b", "INTEGER"], ["a", "INTEGER"]>>)
type_check
add_command("c", "d", <<["b", "INTEGER"], ["D", "INTEGER"], ["e", "BOOLEAN"], ["b", "INTEGER"], ["c", "INTEGER"], ["B", "INTEGER"], ["a", "INTEGER"]>>)
modulo
bool_value (false)
conjunction
add_attribute("A", "C", "INTEGER")
add_command("BOOLEAN", "e", <<["a", "INTEGER"], ["c", "INTEGER"]>>)
addition
numerical_negation
add_command("A", "a", <<["e", "A"], ["a", "BOOLEAN"], ["A", "INTEGER"], ["a", "BOOLEAN"], ["A", "BOOLEAN"]>>)
addition
add_attribute("a", "a", "BOOLEAN")
add_call_chain(<<e,a,b,c>>)
bool_value (true)
int_value (4)
equals
add_query("b", "d", <<["A", "INTEGER"], ["BOOLEAN", "INTEGER"], ["d", "A"], ["B", "C"], ["e", "A"], ["D", "c"], ["D", "INTEGER"], ["A", "C"]>>, "BOOLEAN")
add_call_chain(<<B,A,C,C,A,A>>)
conjunction
int_value (9)
add_call_chain(<<C,C,C,b,A,INTEGER,d,INTEGER,B>>)
add_call_chain(<<e,C,d,b,D,e,d>>)
add_attribute("A", "d", "INTEGER")
add_attribute("c", "b", "BOOLEAN")
add_class(A)
add_command("d", "BOOLEAN", <<["d", "INTEGER"], ["B", "e"], ["e", "B"], ["D", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["B", "C"], ["D", "BOOLEAN"]>>)
add_command("e", "B", <<["A", "BOOLEAN"], ["b", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["C", "BOOLEAN"]>>)
add_query("e", "b", <<["D", "BOOLEAN"], ["d", "INTEGER"], ["e", "BOOLEAN"], ["C", "C"]>>, "e")
add_query("A", "B", <<["D", "BOOLEAN"], ["c", "INTEGER"], ["a", "BOOLEAN"], ["D", "c"], ["INTEGER", "e"], ["d", "INTEGER"], ["e", "INTEGER"], ["D", "BOOLEAN"], ["C", "BOOLEAN"]>>, "a")
add_query("C", "d", <<["D", "BOOLEAN"], ["D", "e"], ["B", "a"], ["C", "INTEGER"], ["D", "INTEGER"], ["A", "a"], ["b", "d"], ["C", "INTEGER"], ["D", "INTEGER"]>>, "c")
add_attribute("B", "b", "BOOLEAN")
add_class(e)
add_attribute("B", "c", "D")
add_query("d", "C", <<["B", "INTEGER"], ["d", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "INTEGER"], ["BOOLEAN", "e"], ["d", "INTEGER"], ["A", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["A", "d"]>>, "a")
add_attribute("c", "C", "BOOLEAN")
disjunction
subtraction
int_value (33)
add_attribute("e", "A", "INTEGER")
generate_java_code
add_attribute("a", "e", "a")
add_call_chain(<<e,d,BOOLEAN,B,A,d,c,a>>)
multiplication
type_check
add_query("b", "INTEGER", <<["D", "BOOLEAN"], ["A", "INTEGER"], ["b", "INTEGER"]>>, "b")
add_class(D)
greater_than
add_call_chain(<<c>>)
type_check
add_call_chain(<<e,A>>)
add_attribute("A", "B", "d")
greater_than
add_call_chain(<<c,b,INTEGER,c,d>>)
numerical_negation
add_attribute("c", "D", "BOOLEAN")
multiplication
add_class(b)
add_call_chain(<<e,a,e>>)
type_check
logical_negation
bool_value (false)
conjunction
generate_java_code
generate_java_code
add_attribute("INTEGER", "e", "C")
generate_java_code
add_attribute("d", "INTEGER", "INTEGER")
add_call_chain(<<C,D,INTEGER,c,INTEGER,b,e,e>>)
add_call_chain(<<INTEGER,B,C,d,BOOLEAN>>)
generate_java_code
add_call_chain(<<c,A,d,C,e,d,BOOLEAN>>)
add_command("B", "a", <<["c", "a"], ["INTEGER", "D"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["e", "BOOLEAN"]>>)
bool_value (false)
generate_java_code
add_attribute("D", "D", "e")
add_query("INTEGER", "B", <<["e", "INTEGER"], ["B", "c"], ["b", "BOOLEAN"], ["C", "a"]>>, "c")
add_query("C", "a", <<["a", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["B", "INTEGER"], ["c", "INTEGER"], ["INTEGER", "INTEGER"]>>, "BOOLEAN")
add_call_chain(<<C,INTEGER,D,A,e,A>>)
generate_java_code
add_class(C)
bool_value (false)
multiplication
type_check
add_query("e", "C", <<["B", "INTEGER"], ["D", "A"], ["A", "d"]>>, "c")
equals
add_call_chain(<<d,C,a,B,D,c>>)
greater_than
type_check
add_class(b)
add_query("a", "C", <<["D", "d"]>>, "b")
add_class(C)
logical_negation
add_class(B)
add_query("INTEGER", "e", <<["c", "BOOLEAN"], ["d", "INTEGER"]>>, "b")
add_call_chain(<<c,b,c,b,C,D,b>>)
add_query("A", "a", <<["C", "BOOLEAN"], ["C", "a"]>>, "b")
generate_java_code
bool_value (true)
int_value (27)
add_class(C)
add_attribute("BOOLEAN", "B", "INTEGER")
subtraction
add_attribute("C", "A", "BOOLEAN")
numerical_negation
bool_value (false)
add_class(e)
add_call_chain(<<a>>)
add_call_chain(<<D,D,a>>)
add_command("e", "B", <<["b", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "INTEGER"], ["C", "INTEGER"], ["d", "a"], ["A", "BOOLEAN"], ["d", "B"], ["c", "A"], ["BOOLEAN", "D"]>>)
disjunction
add_command("INTEGER", "a", <<["a", "INTEGER"], ["A", "BOOLEAN"], ["c", "BOOLEAN"], ["e", "INTEGER"], ["b", "BOOLEAN"], ["c", "A"], ["B", "b"], ["D", "INTEGER"]>>)
generate_java_code
add_class(B)
add_query("BOOLEAN", "b", <<["B", "BOOLEAN"], ["B", "INTEGER"], ["C", "D"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["B", "INTEGER"], ["e", "BOOLEAN"]>>, "INTEGER")
add_call_chain(<<B,e,A,INTEGER,A,b,b,a,INTEGER>>)
add_call_chain(<<B,b,D>>)
add_class(INTEGER)
type_check
numerical_negation
add_call_chain(<<b,D,b,a,c>>)
add_query("e", "C", <<["INTEGER", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["c", "INTEGER"], ["D", "INTEGER"], ["A", "C"], ["a", "BOOLEAN"], ["D", "INTEGER"]>>, "INTEGER")
add_command("c", "e", <<["B", "a"], ["B", "INTEGER"], ["b", "C"], ["c", "INTEGER"], ["C", "BOOLEAN"]>>)
generate_java_code
add_command("c", "B", <<["A", "b"]>>)
add_command("B", "C", <<["e", "INTEGER"]>>)
add_call_chain(<<A,A,c,C>>)
logical_negation
type_check
addition
multiplication
int_value (40)
int_value (35)
generate_java_code
add_call_chain(<<C,A,a,B,A,C,B,a,b>>)
add_query("b", "d", <<["c", "INTEGER"], ["b", "INTEGER"], ["B", "BOOLEAN"], ["C", "c"], ["a", "INTEGER"], ["D", "INTEGER"], ["A", "A"]>>, "e")
logical_negation
logical_negation
int_value (45)
