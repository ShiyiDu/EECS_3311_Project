int_value (3)
add_class(D)
int_value (38)
add_command("BOOLEAN", "b", <<["b", "B"], ["e", "INTEGER"], ["a", "INTEGER"], ["B", "BOOLEAN"]>>)
add_call_chain(<<D>>)
add_command("D", "A", <<["d", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "INTEGER"]>>)
add_attribute("a", "A", "c")
type_check
bool_value (false)
add_call_chain(<<A,d,d,c,C,B>>)
add_command("a", "C", <<["B", "INTEGER"], ["A", "BOOLEAN"]>>)
numerical_negation
add_query("INTEGER", "a", <<["INTEGER", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "A"], ["c", "B"], ["B", "INTEGER"], ["INTEGER", "INTEGER"], ["C", "d"], ["b", "b"], ["c", "A"]>>, "a")
type_check
conjunction
conjunction
add_attribute("e", "A", "INTEGER")
add_class(a)
add_query("A", "a", <<["a", "INTEGER"], ["c", "INTEGER"], ["a", "c"], ["INTEGER", "INTEGER"], ["B", "INTEGER"]>>, "D")
add_class(b)
logical_negation
generate_java_code
numerical_negation
add_class(d)
type_check
add_attribute("e", "BOOLEAN", "BOOLEAN")
disjunction
add_call_chain(<<D,a>>)
equals
generate_java_code
multiplication
add_command("D", "C", <<["a", "BOOLEAN"], ["B", "INTEGER"], ["B", "c"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["d", "D"], ["B", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["c", "c"]>>)
logical_negation
add_query("A", "b", <<["D", "BOOLEAN"], ["b", "c"], ["c", "INTEGER"], ["A", "INTEGER"], ["INTEGER", "BOOLEAN"], ["b", "INTEGER"], ["B", "a"]>>, "b")
add_call_chain(<<B>>)
logical_negation
generate_java_code
add_command("e", "d", <<["b", "A"], ["C", "C"]>>)
add_attribute("A", "A", "B")
bool_value (true)
add_class(a)
generate_java_code
add_command("d", "C", <<["a", "INTEGER"]>>)
add_call_chain(<<c,INTEGER,C>>)
type_check
add_call_chain(<<B,INTEGER,c,B,B,C,a,e,INTEGER>>)
add_query("INTEGER", "B", <<["d", "INTEGER"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "c"], ["A", "C"]>>, "A")
modulo
add_class(b)
add_attribute("A", "c", "BOOLEAN")
add_class(c)
add_query("C", "d", <<["a", "C"]>>, "B")
add_attribute("BOOLEAN", "a", "INTEGER")
equals
logical_negation
add_class(a)
add_call_chain(<<e,d,INTEGER,a,C,d,a,c>>)
add_query("INTEGER", "a", <<["c", "INTEGER"], ["C", "e"], ["A", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "INTEGER"], ["C", "a"], ["A", "INTEGER"], ["e", "INTEGER"], ["e", "BOOLEAN"]>>, "A")
add_class(C)
multiplication
numerical_negation
add_attribute("e", "C", "INTEGER")
int_value (3)
add_attribute("BOOLEAN", "A", "BOOLEAN")
int_value (42)
add_call_chain(<<B,a,B,C,A>>)
add_attribute("C", "B", "b")
add_call_chain(<<C,a,BOOLEAN,a,C,D,C,BOOLEAN,D>>)
add_call_chain(<<A,D,C,C,b,B,c,b>>)
add_query("d", "B", <<["D", "BOOLEAN"], ["d", "c"], ["INTEGER", "b"], ["b", "b"], ["d", "INTEGER"]>>, "a")
add_command("e", "a", <<["C", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "e"], ["b", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "C"]>>)
int_value (25)
greater_than
add_class(c)
add_attribute("b", "B", "BOOLEAN")
add_command("a", "A", <<["c", "INTEGER"], ["A", "A"], ["A", "BOOLEAN"], ["e", "e"], ["A", "BOOLEAN"], ["C", "A"], ["BOOLEAN", "B"], ["D", "A"], ["e", "INTEGER"]>>)
quotient
bool_value (false)
add_call_chain(<<a,B,INTEGER,C,b,A,d,BOOLEAN,c>>)
add_attribute("b", "c", "BOOLEAN")
add_call_chain(<<INTEGER,INTEGER,INTEGER,e>>)
logical_negation
add_class(C)
int_value (7)
add_attribute("a", "B", "BOOLEAN")
int_value (1)
add_query("INTEGER", "INTEGER", <<["B", "BOOLEAN"]>>, "INTEGER")
add_command("c", "B", <<["A", "c"], ["C", "INTEGER"], ["d", "BOOLEAN"], ["A", "D"]>>)
add_query("C", "A", <<["D", "a"], ["D", "C"], ["c", "c"], ["C", "INTEGER"], ["C", "a"], ["b", "D"], ["C", "INTEGER"]>>, "C")
add_command("c", "a", <<["a", "INTEGER"], ["C", "e"], ["D", "BOOLEAN"], ["D", "INTEGER"]>>)
add_attribute("d", "A", "INTEGER")
add_call_chain(<<B>>)
add_call_chain(<<BOOLEAN,b>>)
equals
bool_value (true)
add_command("C", "B", <<["a", "A"], ["e", "A"], ["b", "BOOLEAN"], ["c", "C"], ["b", "INTEGER"], ["A", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["D", "BOOLEAN"]>>)
less_than
add_call_chain(<<D,c,c>>)
bool_value (false)
generate_java_code
add_query("a", "c", <<["C", "BOOLEAN"], ["C", "e"], ["b", "BOOLEAN"], ["D", "D"]>>, "A")
greater_than
add_call_chain(<<d,B,a,A>>)
add_command("c", "D", <<["b", "BOOLEAN"], ["d", "INTEGER"], ["B", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "c"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["e", "INTEGER"]>>)
bool_value (false)
add_attribute("B", "A", "B")
numerical_negation
add_class(d)
add_command("d", "C", <<["D", "BOOLEAN"], ["c", "INTEGER"], ["D", "d"], ["d", "INTEGER"], ["A", "D"], ["INTEGER", "BOOLEAN"]>>)
add_attribute("C", "A", "INTEGER")
add_command("e", "d", <<["A", "BOOLEAN"], ["D", "INTEGER"], ["B", "A"], ["INTEGER", "a"], ["B", "D"], ["a", "a"], ["e", "BOOLEAN"]>>)
logical_negation
add_call_chain(<<A,B,d,B,e,c,d,B>>)
logical_negation
add_command("A", "C", <<["B", "C"], ["C", "INTEGER"], ["D", "b"], ["C", "e"], ["INTEGER", "INTEGER"], ["C", "BOOLEAN"], ["d", "D"], ["b", "D"], ["b", "BOOLEAN"]>>)
bool_value (false)
numerical_negation
type_check
bool_value (true)
bool_value (true)
add_attribute("B", "C", "e")
add_attribute("D", "BOOLEAN", "BOOLEAN")
logical_negation
numerical_negation
add_query("D", "INTEGER", <<["c", "INTEGER"], ["D", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "BOOLEAN"]>>, "c")
int_value (3)
add_call_chain(<<B,c,e>>)
add_call_chain(<<B,D,a,BOOLEAN,B,BOOLEAN,D>>)
logical_negation
add_query("B", "D", <<["b", "A"], ["C", "b"], ["A", "INTEGER"], ["a", "BOOLEAN"], ["b", "A"], ["b", "B"], ["d", "c"], ["b", "INTEGER"], ["d", "INTEGER"]>>, "e")
bool_value (false)
bool_value (true)
add_command("A", "b", <<["BOOLEAN", "B"]>>)
int_value (4)
type_check
int_value (11)
bool_value (true)
logical_negation
numerical_negation
add_query("a", "b", <<["D", "INTEGER"], ["B", "C"], ["c", "A"], ["c", "BOOLEAN"]>>, "b")
disjunction
add_attribute("b", "d", "C")
add_attribute("b", "a", "BOOLEAN")
add_attribute("A", "e", "d")
conjunction
generate_java_code
numerical_negation
add_call_chain(<<a>>)
type_check
generate_java_code
generate_java_code
logical_negation
add_call_chain(<<d>>)
add_call_chain(<<B,BOOLEAN>>)
add_query("A", "e", <<["B", "BOOLEAN"], ["BOOLEAN", "A"], ["C", "INTEGER"], ["d", "B"], ["B", "B"], ["C", "BOOLEAN"]>>, "b")
logical_negation
add_call_chain(<<A,B>>)
bool_value (true)
add_class(a)
int_value (11)
numerical_negation
add_query("e", "B", <<["c", "B"], ["a", "BOOLEAN"], ["e", "INTEGER"], ["BOOLEAN", "INTEGER"], ["D", "INTEGER"], ["INTEGER", "b"], ["c", "INTEGER"], ["B", "a"], ["C", "b"]>>, "a")
add_call_chain(<<B,c,D,d,a,C,d,d>>)
logical_negation
add_command("d", "d", <<["b", "b"], ["b", "BOOLEAN"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["C", "D"]>>)
bool_value (true)
add_command("a", "A", <<["A", "BOOLEAN"], ["C", "BOOLEAN"], ["INTEGER", "A"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["D", "BOOLEAN"]>>)
add_query("D", "d", <<["D", "C"], ["d", "BOOLEAN"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["a", "b"], ["INTEGER", "INTEGER"], ["C", "BOOLEAN"]>>, "INTEGER")
int_value (39)
subtraction
add_attribute("A", "C", "BOOLEAN")
bool_value (true)
add_attribute("d", "c", "c")
logical_negation
int_value (37)
generate_java_code
numerical_negation
modulo
add_class(b)
int_value (5)
multiplication
add_command("BOOLEAN", "A", <<["B", "a"], ["C", "BOOLEAN"], ["e", "INTEGER"], ["C", "INTEGER"], ["c", "A"], ["e", "A"], ["c", "INTEGER"]>>)
int_value (36)
logical_negation
add_call_chain(<<B,a,e,B,INTEGER,c>>)
add_attribute("A", "B", "D")
add_command("A", "c", <<["d", "INTEGER"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "INTEGER"], ["e", "INTEGER"], ["A", "BOOLEAN"]>>)
add_command("e", "e", <<["C", "e"], ["b", "BOOLEAN"], ["a", "INTEGER"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["BOOLEAN", "b"]>>)
add_command("d", "B", <<["INTEGER", "BOOLEAN"], ["D", "e"]>>)
add_call_chain(<<e,A,e>>)
bool_value (false)
addition
type_check
add_class(b)
quotient
type_check
add_call_chain(<<D>>)
greater_than
add_query("D", "b", <<["BOOLEAN", "INTEGER"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["b", "INTEGER"], ["C", "BOOLEAN"]>>, "a")
add_attribute("A", "c", "A")
add_class(b)
generate_java_code
add_call_chain(<<c,A,A,a,c,d,a,B>>)
add_attribute("INTEGER", "BOOLEAN", "INTEGER")
bool_value (true)
add_query("e", "A", <<["B", "BOOLEAN"], ["c", "INTEGER"], ["b", "b"]>>, "INTEGER")
bool_value (true)
greater_than
add_call_chain(<<C,A,D,a>>)
add_call_chain(<<c,B,INTEGER>>)
type_check
add_command("c", "B", <<["D", "BOOLEAN"], ["c", "BOOLEAN"], ["e", "INTEGER"], ["INTEGER", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "d"]>>)
add_query("B", "b", <<["c", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["b", "BOOLEAN"], ["D", "BOOLEAN"]>>, "INTEGER")
numerical_negation
bool_value (false)
add_class(B)
bool_value (false)
less_than
int_value (22)
add_attribute("c", "c", "c")
bool_value (true)
logical_negation
add_query("e", "A", <<["B", "C"], ["c", "BOOLEAN"]>>, "a")
add_query("b", "C", <<["INTEGER", "INTEGER"], ["d", "D"], ["b", "B"], ["a", "a"], ["c", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "INTEGER"], ["BOOLEAN", "B"]>>, "a")
bool_value (true)
generate_java_code
add_command("C", "a", <<["INTEGER", "INTEGER"], ["A", "INTEGER"], ["c", "D"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["b", "BOOLEAN"]>>)
logical_negation
int_value (40)
add_query("B", "C", <<["e", "B"], ["a", "d"], ["a", "INTEGER"]>>, "A")
add_call_chain(<<a,INTEGER,D,c,C,B,BOOLEAN,INTEGER>>)
add_call_chain(<<c,e,C,d,A,D,C>>)
add_call_chain(<<b,A,D,B,C,e,d>>)
logical_negation
subtraction
less_than
add_class(a)
bool_value (true)
add_query("b", "INTEGER", <<["a", "BOOLEAN"], ["a", "D"], ["D", "B"], ["B", "BOOLEAN"], ["D", "b"], ["A", "INTEGER"], ["d", "INTEGER"]>>, "b")
bool_value (false)
add_call_chain(<<C,b,b,e,A,C,a,INTEGER,A>>)
add_attribute("a", "a", "c")
int_value (42)
addition
int_value (46)
add_call_chain(<<BOOLEAN,BOOLEAN,a,INTEGER,A,B,A>>)
add_attribute("A", "e", "BOOLEAN")
logical_negation
less_than
