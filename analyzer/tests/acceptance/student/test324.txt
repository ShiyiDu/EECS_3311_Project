type_check
numerical_negation
bool_value (false)
add_call_chain(<<a,D>>)
logical_negation
subtraction
add_call_chain(<<c,B,a,d,A>>)
int_value (44)
add_call_chain(<<d,C>>)
int_value (37)
add_attribute("B", "c", "INTEGER")
add_query("a", "A", <<["D", "BOOLEAN"], ["a", "INTEGER"]>>, "A")
add_call_chain(<<b,c,a,C,d>>)
add_class(D)
generate_java_code
generate_java_code
logical_negation
logical_negation
int_value (22)
numerical_negation
add_call_chain(<<BOOLEAN,c,INTEGER,B,BOOLEAN,d>>)
add_attribute("b", "a", "INTEGER")
add_command("e", "c", <<["C", "INTEGER"], ["c", "BOOLEAN"], ["C", "B"], ["c", "BOOLEAN"], ["d", "e"], ["B", "B"]>>)
add_call_chain(<<d,e,c,D,D>>)
add_call_chain(<<B,b,C,a,d,BOOLEAN,d,D,d>>)
greater_than
numerical_negation
type_check
logical_negation
add_call_chain(<<A,c,A>>)
logical_negation
add_call_chain(<<C,d,A,C,e,e>>)
bool_value (true)
add_call_chain(<<BOOLEAN>>)
conjunction
add_command("B", "A", <<["A", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["e", "BOOLEAN"]>>)
type_check
add_class(A)
conjunction
logical_negation
add_command("A", "d", <<["C", "BOOLEAN"], ["d", "C"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["b", "INTEGER"]>>)
add_query("C", "BOOLEAN", <<["c", "BOOLEAN"], ["e", "D"], ["B", "BOOLEAN"], ["INTEGER", "INTEGER"]>>, "c")
add_command("A", "d", <<["C", "BOOLEAN"], ["c", "INTEGER"], ["D", "INTEGER"], ["BOOLEAN", "a"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["B", "BOOLEAN"], ["c", "B"]>>)
add_attribute("d", "e", "INTEGER")
add_query("B", "a", <<["B", "BOOLEAN"], ["e", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "d"], ["e", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["B", "INTEGER"]>>, "a")
add_call_chain(<<a,d,e,c,B,D>>)
add_attribute("e", "C", "D")
add_command("B", "A", <<["a", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "e"], ["D", "BOOLEAN"], ["d", "D"], ["C", "e"], ["a", "B"], ["D", "BOOLEAN"], ["d", "D"]>>)
multiplication
generate_java_code
add_class(d)
int_value (47)
add_attribute("B", "a", "INTEGER")
add_call_chain(<<D,D,a,c,C,b,A,D>>)
add_attribute("D", "A", "BOOLEAN")
add_query("e", "d", <<["a", "BOOLEAN"], ["e", "A"], ["B", "BOOLEAN"], ["d", "INTEGER"]>>, "c")
bool_value (true)
logical_negation
add_query("BOOLEAN", "D", <<["BOOLEAN", "C"]>>, "A")
add_call_chain(<<c,A,C>>)
type_check
generate_java_code
add_call_chain(<<D,a,B,e,D,B>>)
less_than
numerical_negation
add_class(c)
add_call_chain(<<d,A,B,c,c,C>>)
numerical_negation
bool_value (false)
bool_value (false)
add_call_chain(<<C,INTEGER,INTEGER,D,d,e,b,a,A>>)
add_command("a", "c", <<["d", "c"], ["A", "a"], ["a", "BOOLEAN"], ["b", "INTEGER"], ["a", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "e"], ["D", "BOOLEAN"]>>)
add_attribute("d", "D", "INTEGER")
numerical_negation
less_than
add_query("BOOLEAN", "B", <<["B", "C"], ["INTEGER", "INTEGER"], ["A", "e"], ["b", "INTEGER"], ["d", "INTEGER"], ["C", "BOOLEAN"], ["c", "e"], ["A", "BOOLEAN"], ["D", "C"]>>, "D")
add_query("C", "e", <<["D", "INTEGER"], ["c", "INTEGER"], ["D", "INTEGER"]>>, "c")
add_attribute("A", "c", "e")
generate_java_code
add_command("C", "b", <<["D", "c"], ["d", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "INTEGER"]>>)
modulo
add_attribute("b", "INTEGER", "INTEGER")
type_check
add_attribute("e", "d", "B")
bool_value (false)
add_query("a", "c", <<["INTEGER", "INTEGER"]>>, "a")
add_command("A", "INTEGER", <<["D", "BOOLEAN"], ["a", "D"], ["BOOLEAN", "A"], ["D", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "INTEGER"], ["e", "INTEGER"], ["B", "e"]>>)
conjunction
add_call_chain(<<a>>)
type_check
add_call_chain(<<a,b,A>>)
generate_java_code
less_than
add_attribute("b", "A", "C")
add_command("A", "B", <<["b", "INTEGER"], ["C", "INTEGER"], ["d", "INTEGER"], ["e", "INTEGER"], ["D", "BOOLEAN"], ["a", "d"], ["A", "INTEGER"]>>)
add_call_chain(<<B,a,b,d,C>>)
numerical_negation
add_command("b", "c", <<["INTEGER", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "INTEGER"], ["c", "INTEGER"], ["INTEGER", "d"], ["e", "BOOLEAN"], ["B", "INTEGER"], ["B", "INTEGER"], ["e", "D"]>>)
add_query("A", "e", <<["e", "INTEGER"]>>, "b")
add_attribute("b", "d", "BOOLEAN")
numerical_negation
add_command("d", "d", <<["B", "BOOLEAN"], ["B", "INTEGER"], ["C", "BOOLEAN"], ["a", "INTEGER"], ["a", "BOOLEAN"]>>)
add_attribute("a", "c", "BOOLEAN")
add_attribute("A", "A", "INTEGER")
add_command("c", "D", <<["d", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["D", "BOOLEAN"]>>)
add_query("d", "c", <<["B", "BOOLEAN"], ["B", "INTEGER"], ["c", "d"], ["d", "BOOLEAN"], ["INTEGER", "a"], ["c", "BOOLEAN"], ["e", "A"]>>, "d")
logical_negation
add_call_chain(<<a>>)
disjunction
add_query("c", "c", <<["A", "BOOLEAN"], ["a", "e"], ["e", "A"], ["c", "BOOLEAN"], ["INTEGER", "a"], ["d", "INTEGER"], ["a", "e"], ["C", "BOOLEAN"], ["b", "BOOLEAN"]>>, "b")
add_call_chain(<<C,a,A,INTEGER>>)
type_check
type_check
bool_value (false)
add_command("C", "A", <<["C", "BOOLEAN"], ["c", "INTEGER"], ["c", "BOOLEAN"], ["d", "D"], ["a", "BOOLEAN"]>>)
add_call_chain(<<e,e,d,b,b,BOOLEAN,D,c,A>>)
add_call_chain(<<b,INTEGER,C,c,B,C>>)
equals
add_call_chain(<<C,INTEGER>>)
type_check
int_value (30)
logical_negation
add_class(B)
type_check
add_query("d", "INTEGER", <<["a", "A"], ["D", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["d", "INTEGER"], ["b", "INTEGER"], ["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"], ["BOOLEAN", "a"], ["B", "BOOLEAN"]>>, "B")
logical_negation
conjunction
conjunction
numerical_negation
bool_value (true)
generate_java_code
logical_negation
generate_java_code
equals
add_attribute("d", "BOOLEAN", "BOOLEAN")
int_value (8)
bool_value (false)
add_query("D", "e", <<["BOOLEAN", "BOOLEAN"], ["e", "BOOLEAN"], ["d", "a"], ["C", "INTEGER"], ["b", "BOOLEAN"]>>, "a")
add_query("B", "A", <<["D", "INTEGER"], ["B", "BOOLEAN"]>>, "D")
bool_value (true)
add_query("B", "d", <<["d", "BOOLEAN"], ["c", "INTEGER"], ["A", "BOOLEAN"], ["d", "D"], ["d", "c"], ["A", "INTEGER"], ["a", "INTEGER"]>>, "b")
type_check
add_call_chain(<<b>>)
disjunction
add_call_chain(<<c,B,e,b,A,c,c>>)
logical_negation
add_attribute("INTEGER", "b", "e")
add_call_chain(<<BOOLEAN,INTEGER,A,c,C,B,C,D>>)
add_command("A", "A", <<["A", "INTEGER"]>>)
bool_value (false)
bool_value (false)
add_query("C", "c", <<["D", "BOOLEAN"], ["A", "INTEGER"], ["d", "INTEGER"], ["C", "D"], ["e", "INTEGER"], ["A", "INTEGER"]>>, "d")
logical_negation
generate_java_code
numerical_negation
add_attribute("e", "d", "BOOLEAN")
add_command("c", "c", <<["A", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "INTEGER"], ["INTEGER", "A"], ["A", "BOOLEAN"], ["d", "INTEGER"], ["D", "INTEGER"], ["a", "D"], ["c", "INTEGER"]>>)
logical_negation
add_class(a)
add_query("c", "D", <<["e", "C"], ["c", "B"], ["e", "INTEGER"], ["d", "INTEGER"], ["D", "BOOLEAN"], ["A", "c"], ["B", "e"], ["b", "INTEGER"], ["A", "B"]>>, "D")
generate_java_code
add_call_chain(<<BOOLEAN,d,a,a,INTEGER,INTEGER,B,a>>)
add_query("A", "A", <<["c", "INTEGER"], ["A", "BOOLEAN"]>>, "d")
numerical_negation
multiplication
add_call_chain(<<C,C>>)
add_command("INTEGER", "b", <<["B", "INTEGER"], ["B", "BOOLEAN"], ["A", "e"], ["B", "BOOLEAN"]>>)
conjunction
int_value (18)
bool_value (true)
modulo
int_value (34)
logical_negation
conjunction
add_call_chain(<<d,D,D>>)
add_query("C", "e", <<["B", "INTEGER"]>>, "C")
add_call_chain(<<D,B,e,e,d>>)
add_class(a)
int_value (29)
add_call_chain(<<A,B,c,a,A,D,b,d>>)
add_command("b", "a", <<["C", "BOOLEAN"], ["e", "BOOLEAN"]>>)
type_check
multiplication
add_class(a)
add_command("BOOLEAN", "A", <<["D", "A"], ["D", "INTEGER"], ["D", "D"], ["d", "BOOLEAN"], ["D", "INTEGER"], ["c", "INTEGER"]>>)
type_check
logical_negation
numerical_negation
