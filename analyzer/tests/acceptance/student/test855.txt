add_call_chain(<<c>>)
equals
add_call_chain(<<D,C,D>>)
logical_negation
multiplication
bool_value (false)
int_value (39)
add_class(d)
bool_value (false)
add_call_chain(<<C,A,c,C,B,BOOLEAN,e,D>>)
logical_negation
logical_negation
add_command("a", "b", <<["D", "BOOLEAN"], ["B", "INTEGER"], ["e", "INTEGER"], ["d", "INTEGER"], ["B", "BOOLEAN"]>>)
add_command("d", "e", <<["C", "INTEGER"], ["a", "A"], ["a", "BOOLEAN"], ["A", "INTEGER"], ["e", "A"], ["d", "a"], ["b", "INTEGER"]>>)
add_attribute("D", "INTEGER", "INTEGER")
bool_value (true)
add_attribute("c", "d", "INTEGER")
int_value (11)
bool_value (false)
numerical_negation
add_attribute("A", "d", "D")
int_value (5)
logical_negation
type_check
add_class(INTEGER)
add_call_chain(<<c,B,c,B,c,c>>)
add_query("C", "c", <<["B", "c"]>>, "D")
add_call_chain(<<A,c,A,B>>)
add_call_chain(<<A,d>>)
add_command("a", "C", <<["b", "BOOLEAN"]>>)
conjunction
numerical_negation
numerical_negation
bool_value (false)
add_command("INTEGER", "C", <<["a", "INTEGER"]>>)
add_call_chain(<<C,a,B,e,B,A,D>>)
add_attribute("b", "b", "C")
add_call_chain(<<a,c,a,B>>)
type_check
less_than
disjunction
add_class(D)
add_call_chain(<<b,C,INTEGER,d,A,e,d,D>>)
numerical_negation
int_value (22)
add_query("D", "b", <<["d", "BOOLEAN"], ["A", "INTEGER"], ["c", "INTEGER"]>>, "c")
add_call_chain(<<C,a,B,a,e,a,e,D>>)
add_call_chain(<<D,b>>)
add_command("A", "B", <<["C", "INTEGER"], ["D", "c"], ["D", "BOOLEAN"], ["b", "b"], ["B", "INTEGER"]>>)
add_query("C", "b", <<["INTEGER", "INTEGER"], ["d", "A"], ["B", "D"], ["C", "BOOLEAN"], ["C", "b"], ["C", "INTEGER"], ["B", "c"]>>, "D")
subtraction
type_check
add_command("D", "INTEGER", <<["d", "C"], ["B", "INTEGER"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["d", "B"], ["B", "c"], ["a", "A"]>>)
conjunction
add_call_chain(<<B,a,A,A,a,B,INTEGER,a,D>>)
add_attribute("D", "e", "BOOLEAN")
bool_value (true)
logical_negation
conjunction
add_call_chain(<<A,C,d,D,BOOLEAN,a,B,c>>)
int_value (26)
conjunction
add_call_chain(<<e,C,A,a>>)
int_value (34)
add_class(a)
add_attribute("C", "BOOLEAN", "b")
logical_negation
add_query("INTEGER", "b", <<["e", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["a", "INTEGER"]>>, "D")
add_command("D", "BOOLEAN", <<["C", "b"], ["d", "BOOLEAN"]>>)
conjunction
logical_negation
numerical_negation
add_command("INTEGER", "B", <<["d", "BOOLEAN"], ["c", "INTEGER"], ["e", "BOOLEAN"], ["d", "INTEGER"]>>)
bool_value (false)
add_query("C", "C", <<["BOOLEAN", "A"]>>, "A")
add_command("c", "D", <<["c", "INTEGER"], ["d", "BOOLEAN"], ["e", "BOOLEAN"], ["d", "INTEGER"], ["A", "c"]>>)
bool_value (false)
int_value (4)
type_check
add_command("A", "C", <<["b", "BOOLEAN"], ["INTEGER", "A"], ["c", "BOOLEAN"], ["b", "INTEGER"]>>)
int_value (17)
add_call_chain(<<D,c,A,e>>)
quotient
add_attribute("BOOLEAN", "d", "BOOLEAN")
numerical_negation
add_query("A", "D", <<["D", "BOOLEAN"], ["a", "INTEGER"], ["c", "INTEGER"], ["c", "INTEGER"], ["d", "B"]>>, "c")
numerical_negation
disjunction
bool_value (true)
generate_java_code
logical_negation
add_command("e", "C", <<["d", "INTEGER"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["b", "INTEGER"]>>)
add_attribute("e", "B", "BOOLEAN")
add_command("d", "C", <<["d", "e"], ["A", "INTEGER"], ["d", "BOOLEAN"]>>)
add_query("D", "b", <<["D", "C"], ["a", "BOOLEAN"], ["d", "a"], ["C", "INTEGER"], ["B", "C"], ["D", "INTEGER"], ["a", "INTEGER"], ["C", "BOOLEAN"]>>, "d")
conjunction
add_attribute("B", "e", "INTEGER")
add_command("C", "INTEGER", <<["A", "INTEGER"], ["a", "A"], ["a", "e"], ["a", "d"], ["A", "B"], ["e", "B"], ["C", "INTEGER"], ["A", "d"]>>)
bool_value (true)
add_attribute("c", "B", "d")
add_command("b", "e", <<["e", "INTEGER"], ["INTEGER", "BOOLEAN"], ["C", "INTEGER"]>>)
add_query("c", "c", <<["e", "INTEGER"]>>, "A")
add_attribute("INTEGER", "C", "INTEGER")
int_value (41)
add_attribute("e", "A", "INTEGER")
type_check
type_check
add_query("BOOLEAN", "C", <<["b", "INTEGER"], ["c", "A"], ["a", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "INTEGER"]>>, "e")
generate_java_code
add_class(d)
add_attribute("b", "b", "INTEGER")
add_attribute("d", "d", "BOOLEAN")
add_command("A", "d", <<["a", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["A", "BOOLEAN"], ["D", "a"]>>)
add_call_chain(<<e>>)
add_attribute("INTEGER", "a", "A")
add_call_chain(<<a,D,b>>)
add_command("INTEGER", "BOOLEAN", <<["d", "INTEGER"]>>)
add_call_chain(<<c>>)
add_call_chain(<<INTEGER,e,D,C,c,A,c>>)
bool_value (false)
add_command("b", "BOOLEAN", <<["A", "BOOLEAN"], ["A", "c"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "BOOLEAN"]>>)
add_call_chain(<<B>>)
logical_negation
add_call_chain(<<d,B,b,b,D,A,a>>)
add_attribute("A", "c", "b")
less_than
add_attribute("D", "c", "D")
add_call_chain(<<A>>)
numerical_negation
add_call_chain(<<BOOLEAN,D,a,D>>)
conjunction
add_call_chain(<<A>>)
int_value (6)
add_call_chain(<<A,a,d,A>>)
addition
numerical_negation
add_attribute("C", "C", "BOOLEAN")
add_query("c", "C", <<["b", "A"], ["D", "BOOLEAN"], ["b", "c"], ["d", "B"], ["D", "BOOLEAN"], ["e", "BOOLEAN"]>>, "A")
conjunction
int_value (22)
logical_negation
quotient
bool_value (false)
numerical_negation
bool_value (true)
bool_value (true)
add_command("D", "B", <<["C", "INTEGER"], ["d", "INTEGER"], ["d", "BOOLEAN"], ["e", "d"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["d", "a"], ["INTEGER", "INTEGER"]>>)
disjunction
greater_than
add_class(c)
modulo
numerical_negation
add_call_chain(<<a,C>>)
add_call_chain(<<BOOLEAN,C,B,B,e,a>>)
generate_java_code
generate_java_code
int_value (31)
add_query("e", "D", <<["A", "BOOLEAN"], ["d", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["B", "INTEGER"], ["D", "D"], ["B", "a"], ["d", "INTEGER"]>>, "e")
add_class(b)
generate_java_code
add_query("D", "e", <<["A", "INTEGER"], ["C", "BOOLEAN"], ["b", "D"]>>, "d")
numerical_negation
add_call_chain(<<B,d,d,INTEGER>>)
add_call_chain(<<A,d,d,A,B>>)
add_call_chain(<<e,b>>)
add_query("c", "c", <<["a", "INTEGER"], ["c", "INTEGER"]>>, "D")
conjunction
add_call_chain(<<b,D,c,D,c,A,D,a,d>>)
add_command("D", "B", <<["D", "INTEGER"], ["b", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["d", "INTEGER"]>>)
add_attribute("B", "B", "INTEGER")
logical_negation
add_attribute("b", "A", "BOOLEAN")
add_command("e", "D", <<["C", "BOOLEAN"], ["e", "INTEGER"], ["e", "BOOLEAN"], ["e", "a"]>>)
int_value (19)
add_attribute("B", "D", "D")
subtraction
int_value (26)
type_check
add_command("b", "d", <<["a", "BOOLEAN"], ["b", "e"], ["D", "INTEGER"], ["b", "INTEGER"], ["e", "C"]>>)
add_call_chain(<<a,D,c,D>>)
int_value (42)
numerical_negation
add_attribute("A", "d", "d")
logical_negation
add_call_chain(<<a,A,D>>)
logical_negation
add_command("B", "b", <<["c", "a"], ["b", "C"], ["d", "B"]>>)
disjunction
add_class(c)
generate_java_code
logical_negation
quotient
add_call_chain(<<B,b,C,c,a,B,D,BOOLEAN>>)
bool_value (true)
add_attribute("B", "e", "INTEGER")
generate_java_code
disjunction
equals
bool_value (false)
conjunction
type_check
bool_value (true)
numerical_negation
add_attribute("A", "b", "C")
type_check
add_query("A", "d", <<["D", "INTEGER"], ["C", "C"], ["d", "b"], ["d", "D"], ["C", "INTEGER"], ["D", "a"], ["D", "INTEGER"], ["C", "BOOLEAN"]>>, "C")
add_command("e", "e", <<["b", "BOOLEAN"], ["D", "INTEGER"], ["d", "A"]>>)
add_attribute("e", "d", "d")
add_attribute("c", "C", "INTEGER")
add_call_chain(<<a,BOOLEAN>>)
add_attribute("INTEGER", "c", "INTEGER")
bool_value (true)
int_value (27)
add_query("c", "d", <<["b", "INTEGER"], ["D", "A"], ["B", "a"], ["D", "BOOLEAN"], ["A", "BOOLEAN"]>>, "a")
generate_java_code
logical_negation
add_call_chain(<<b>>)
