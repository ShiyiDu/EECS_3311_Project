add_call_chain(<<INTEGER,BOOLEAN,BOOLEAN,A,C,c,c,c,BOOLEAN>>)
add_class(BOOLEAN)
greater_than
add_query("a", "B", <<["D", "b"], ["c", "INTEGER"], ["A", "INTEGER"], ["d", "c"], ["b", "BOOLEAN"]>>, "A")
logical_negation
add_call_chain(<<d,B,INTEGER,d,INTEGER,a,C>>)
bool_value (true)
int_value (19)
add_command("A", "A", <<["b", "b"]>>)
add_command("B", "BOOLEAN", <<["A", "INTEGER"], ["b", "BOOLEAN"], ["c", "INTEGER"], ["A", "INTEGER"], ["a", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["b", "d"]>>)
bool_value (true)
disjunction
generate_java_code
add_query("B", "C", <<["A", "BOOLEAN"], ["D", "INTEGER"], ["e", "d"], ["D", "D"], ["d", "INTEGER"], ["a", "D"], ["B", "BOOLEAN"]>>, "c")
add_call_chain(<<a,d,B,b,A,a>>)
numerical_negation
int_value (41)
add_command("C", "C", <<["B", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
add_query("c", "B", <<["B", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "INTEGER"]>>, "a")
numerical_negation
generate_java_code
add_query("d", "C", <<["e", "INTEGER"], ["d", "INTEGER"], ["BOOLEAN", "INTEGER"], ["b", "BOOLEAN"], ["b", "BOOLEAN"]>>, "B")
add_command("e", "e", <<["D", "BOOLEAN"]>>)
add_command("D", "A", <<["INTEGER", "INTEGER"], ["B", "d"]>>)
type_check
add_command("INTEGER", "c", <<["C", "d"], ["D", "BOOLEAN"]>>)
add_attribute("A", "C", "BOOLEAN")
type_check
add_command("A", "C", <<["b", "C"], ["C", "INTEGER"]>>)
add_query("d", "D", <<["d", "D"], ["d", "INTEGER"]>>, "c")
logical_negation
type_check
add_attribute("C", "d", "C")
add_call_chain(<<e,A,b,d,C,C,C,B,C>>)
add_query("BOOLEAN", "a", <<["C", "A"], ["e", "BOOLEAN"]>>, "a")
add_command("D", "a", <<["c", "INTEGER"], ["A", "BOOLEAN"], ["a", "BOOLEAN"]>>)
bool_value (true)
add_attribute("A", "a", "INTEGER")
bool_value (true)
add_command("INTEGER", "A", <<["A", "C"], ["INTEGER", "INTEGER"]>>)
add_call_chain(<<INTEGER,a,C,a,e,B,B,A,BOOLEAN>>)
add_call_chain(<<e,e,A,d,B,A,A,B>>)
disjunction
add_call_chain(<<e,C,C,e,a,D,A>>)
logical_negation
add_attribute("BOOLEAN", "A", "BOOLEAN")
quotient
add_query("e", "e", <<["b", "INTEGER"], ["B", "INTEGER"]>>, "C")
int_value (40)
subtraction
add_attribute("D", "BOOLEAN", "c")
add_command("a", "B", <<["A", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["C", "BOOLEAN"]>>)
greater_than
add_call_chain(<<INTEGER>>)
generate_java_code
add_call_chain(<<a,C>>)
int_value (20)
numerical_negation
numerical_negation
conjunction
add_call_chain(<<INTEGER,c,d,b,c>>)
add_class(C)
add_call_chain(<<c,A,C,BOOLEAN,A,BOOLEAN,D,C>>)
add_class(e)
add_attribute("e", "e", "INTEGER")
logical_negation
add_command("C", "a", <<["d", "INTEGER"], ["C", "INTEGER"], ["a", "BOOLEAN"]>>)
generate_java_code
type_check
type_check
add_query("d", "e", <<["b", "INTEGER"], ["B", "INTEGER"], ["d", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["BOOLEAN", "d"], ["c", "c"]>>, "A")
add_query("C", "INTEGER", <<["D", "a"]>>, "a")
add_query("a", "B", <<["a", "e"], ["C", "INTEGER"], ["d", "BOOLEAN"]>>, "D")
add_attribute("D", "D", "BOOLEAN")
logical_negation
add_attribute("A", "b", "B")
add_call_chain(<<BOOLEAN>>)
int_value (41)
add_call_chain(<<c,b,C>>)
add_attribute("A", "d", "BOOLEAN")
generate_java_code
add_call_chain(<<c,BOOLEAN,A,INTEGER>>)
add_call_chain(<<C,B,D,INTEGER,B,A,D,B>>)
add_class(C)
numerical_negation
add_call_chain(<<B,c,C,A,BOOLEAN,A,BOOLEAN,b>>)
logical_negation
add_call_chain(<<c,c,B>>)
type_check
int_value (48)
logical_negation
add_class(C)
add_call_chain(<<D,C,C,C,d,b,C>>)
add_command("INTEGER", "d", <<["a", "a"], ["D", "INTEGER"], ["INTEGER", "BOOLEAN"], ["d", "INTEGER"], ["d", "BOOLEAN"], ["d", "INTEGER"], ["c", "A"], ["BOOLEAN", "INTEGER"]>>)
quotient
add_call_chain(<<D>>)
disjunction
disjunction
logical_negation
greater_than
add_query("C", "A", <<["A", "BOOLEAN"], ["b", "INTEGER"], ["BOOLEAN", "e"], ["a", "c"], ["INTEGER", "BOOLEAN"], ["B", "INTEGER"], ["B", "B"], ["A", "BOOLEAN"]>>, "C")
add_call_chain(<<C,B,INTEGER,B,c,e,C,c,c>>)
add_call_chain(<<INTEGER,a,C,C,A,B,c,BOOLEAN>>)
numerical_negation
add_command("C", "A", <<["c", "D"], ["e", "C"], ["BOOLEAN", "INTEGER"], ["B", "e"]>>)
add_call_chain(<<c>>)
add_command("c", "b", <<["B", "BOOLEAN"]>>)
add_class(B)
bool_value (true)
add_call_chain(<<a,D,d,A,c,C,B,b>>)
type_check
add_command("e", "e", <<["e", "B"], ["e", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "D"], ["C", "INTEGER"]>>)
add_query("d", "d", <<["c", "BOOLEAN"], ["d", "BOOLEAN"], ["d", "BOOLEAN"], ["e", "INTEGER"], ["C", "INTEGER"], ["D", "INTEGER"], ["a", "e"], ["b", "BOOLEAN"]>>, "D")
bool_value (false)
add_command("b", "C", <<["a", "INTEGER"], ["c", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["e", "D"]>>)
type_check
add_attribute("B", "A", "a")
type_check
add_query("INTEGER", "A", <<["D", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "INTEGER"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["e", "INTEGER"]>>, "INTEGER")
bool_value (true)
add_command("C", "c", <<["d", "C"], ["e", "BOOLEAN"], ["B", "C"], ["INTEGER", "BOOLEAN"]>>)
add_call_chain(<<e,a,C,d,d>>)
int_value (24)
modulo
numerical_negation
type_check
add_call_chain(<<a,B,BOOLEAN,B,D,D,a>>)
add_call_chain(<<a,B,B,BOOLEAN>>)
add_call_chain(<<a,C,a,INTEGER,c,B,e,d>>)
equals
modulo
logical_negation
add_query("C", "b", <<["e", "INTEGER"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["D", "c"], ["b", "INTEGER"], ["a", "INTEGER"], ["INTEGER", "e"], ["A", "INTEGER"]>>, "C")
bool_value (false)
add_query("b", "d", <<["c", "INTEGER"], ["C", "INTEGER"], ["BOOLEAN", "a"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["d", "d"]>>, "b")
type_check
add_command("e", "e", <<["D", "INTEGER"], ["A", "BOOLEAN"], ["A", "B"], ["B", "e"], ["B", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
add_attribute("A", "BOOLEAN", "INTEGER")
type_check
modulo
add_command("INTEGER", "INTEGER", <<["d", "INTEGER"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "INTEGER"]>>)
add_query("INTEGER", "e", <<["BOOLEAN", "INTEGER"], ["D", "INTEGER"], ["c", "INTEGER"], ["d", "INTEGER"]>>, "D")
quotient
less_than
add_call_chain(<<c>>)
add_call_chain(<<b,d,INTEGER,b,b,e,C,BOOLEAN,d>>)
add_attribute("A", "B", "INTEGER")
add_query("e", "b", <<["d", "BOOLEAN"], ["c", "D"], ["d", "e"]>>, "INTEGER")
int_value (43)
bool_value (true)
add_class(D)
int_value (45)
numerical_negation
add_call_chain(<<B,e>>)
add_command("INTEGER", "BOOLEAN", <<["C", "INTEGER"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["c", "INTEGER"], ["d", "INTEGER"], ["B", "INTEGER"], ["e", "INTEGER"]>>)
generate_java_code
add_query("b", "c", <<["e", "d"], ["c", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "c"]>>, "d")
add_command("A", "e", <<["e", "A"], ["e", "D"], ["B", "BOOLEAN"], ["D", "INTEGER"], ["C", "INTEGER"], ["d", "a"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["C", "INTEGER"]>>)
add_query("B", "a", <<["A", "INTEGER"], ["c", "INTEGER"], ["b", "BOOLEAN"], ["e", "INTEGER"], ["b", "A"], ["A", "BOOLEAN"]>>, "INTEGER")
add_query("d", "D", <<["C", "INTEGER"], ["A", "INTEGER"], ["INTEGER", "BOOLEAN"], ["d", "BOOLEAN"], ["d", "BOOLEAN"]>>, "b")
conjunction
add_command("INTEGER", "b", <<["e", "INTEGER"], ["c", "INTEGER"], ["C", "INTEGER"]>>)
int_value (10)
add_attribute("c", "B", "BOOLEAN")
add_class(C)
int_value (9)
int_value (16)
add_query("d", "C", <<["a", "b"], ["C", "BOOLEAN"], ["A", "INTEGER"]>>, "e")
type_check
add_call_chain(<<b,B,d,C,C,B,A,D>>)
numerical_negation
add_command("e", "D", <<["e", "INTEGER"], ["INTEGER", "INTEGER"], ["A", "d"], ["A", "BOOLEAN"], ["C", "e"], ["e", "INTEGER"], ["D", "d"]>>)
add_query("c", "c", <<["d", "BOOLEAN"]>>, "d")
add_attribute("B", "a", "INTEGER")
disjunction
generate_java_code
add_query("C", "e", <<["e", "A"]>>, "INTEGER")
add_attribute("B", "b", "D")
logical_negation
add_class(d)
add_call_chain(<<b,A,BOOLEAN,INTEGER,a,a,A,d,a>>)
add_query("a", "d", <<["c", "INTEGER"], ["D", "BOOLEAN"], ["BOOLEAN", "b"], ["C", "INTEGER"], ["b", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "B"], ["e", "BOOLEAN"], ["C", "BOOLEAN"]>>, "D")
less_than
numerical_negation
int_value (18)
int_value (47)
int_value (19)
add_command("D", "b", <<["C", "BOOLEAN"], ["d", "INTEGER"], ["INTEGER", "e"], ["c", "INTEGER"], ["c", "BOOLEAN"], ["c", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "INTEGER"]>>)
generate_java_code
less_than
add_attribute("A", "d", "BOOLEAN")
conjunction
type_check
equals
add_call_chain(<<D>>)
add_call_chain(<<C,INTEGER>>)
quotient
bool_value (true)
add_attribute("D", "INTEGER", "A")
add_command("C", "C", <<["b", "e"], ["d", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "C"]>>)
disjunction
add_call_chain(<<B,b,e,D,b,C,A,BOOLEAN,A>>)
add_call_chain(<<B>>)
int_value (41)
add_attribute("e", "d", "b")
add_class(c)
add_query("INTEGER", "A", <<["c", "BOOLEAN"], ["A", "BOOLEAN"]>>, "d")
add_call_chain(<<C,B,D,d,d,e,b>>)
bool_value (false)
generate_java_code
add_query("B", "e", <<["B", "INTEGER"], ["C", "A"], ["C", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["a", "INTEGER"], ["D", "a"]>>, "D")
add_command("INTEGER", "A", <<["BOOLEAN", "INTEGER"], ["C", "INTEGER"], ["B", "BOOLEAN"]>>)
add_attribute("A", "BOOLEAN", "BOOLEAN")
bool_value (false)
add_query("e", "d", <<["B", "BOOLEAN"], ["C", "INTEGER"], ["C", "d"], ["b", "INTEGER"]>>, "c")
add_attribute("b", "e", "INTEGER")
add_command("c", "A", <<["C", "BOOLEAN"], ["e", "INTEGER"], ["b", "C"], ["D", "C"], ["B", "c"], ["e", "A"]>>)
add_call_chain(<<d,D>>)
add_command("C", "A", <<["a", "c"], ["D", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["D", "INTEGER"]>>)
bool_value (false)
generate_java_code
addition
type_check
add_query("A", "d", <<["e", "BOOLEAN"], ["b", "BOOLEAN"], ["e", "INTEGER"]>>, "c")
bool_value (false)
add_command("d", "INTEGER", <<["d", "D"], ["e", "e"], ["e", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["D", "INTEGER"], ["c", "a"], ["b", "BOOLEAN"], ["c", "INTEGER"]>>)
add_attribute("B", "c", "INTEGER")
add_class(c)
add_attribute("A", "A", "BOOLEAN")
add_query("B", "C", <<["c", "INTEGER"], ["b", "C"], ["d", "BOOLEAN"]>>, "d")
type_check
conjunction
int_value (10)
type_check
add_command("BOOLEAN", "c", <<["BOOLEAN", "INTEGER"], ["C", "C"]>>)
generate_java_code
add_call_chain(<<B,A>>)
add_command("D", "a", <<["a", "INTEGER"], ["C", "a"], ["INTEGER", "INTEGER"], ["D", "INTEGER"], ["c", "INTEGER"]>>)
add_attribute("b", "b", "BOOLEAN")
bool_value (false)
add_command("C", "BOOLEAN", <<["A", "BOOLEAN"], ["d", "b"]>>)
numerical_negation
conjunction
numerical_negation
bool_value (true)
add_command("A", "A", <<["c", "INTEGER"], ["B", "c"]>>)
type_check
add_command("D", "a", <<["b", "BOOLEAN"]>>)
add_class(e)
add_class(a)
add_call_chain(<<a,d,D>>)
add_attribute("A", "D", "INTEGER")
add_attribute("B", "a", "A")
less_than
bool_value (false)
less_than
add_query("e", "A", <<["d", "BOOLEAN"], ["D", "c"]>>, "A")
numerical_negation
add_call_chain(<<D,C,c,INTEGER,B,B,d,D>>)
add_attribute("B", "d", "BOOLEAN")
add_query("c", "b", <<["a", "INTEGER"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["A", "D"], ["A", "e"], ["INTEGER", "INTEGER"], ["e", "BOOLEAN"]>>, "B")
int_value (13)
add_class(a)
bool_value (true)
numerical_negation
logical_negation
add_command("A", "e", <<["D", "A"]>>)
add_class(B)
type_check
add_query("B", "D", <<["d", "INTEGER"], ["c", "BOOLEAN"], ["c", "e"], ["B", "INTEGER"], ["B", "INTEGER"]>>, "A")
int_value (18)
