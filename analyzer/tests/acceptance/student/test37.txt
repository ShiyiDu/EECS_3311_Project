int_value (4)
generate_java_code
add_query("D", "e", <<["C", "INTEGER"], ["a", "INTEGER"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "D"], ["C", "BOOLEAN"], ["B", "BOOLEAN"]>>, "b")
numerical_negation
add_class(a)
generate_java_code
addition
add_call_chain(<<a,BOOLEAN,A>>)
add_call_chain(<<c,c,D,e,C,c,e,a>>)
type_check
numerical_negation
generate_java_code
int_value (10)
add_call_chain(<<C,e,a,D,INTEGER,e,A>>)
add_call_chain(<<a,a,a>>)
int_value (22)
logical_negation
less_than
add_call_chain(<<b,a>>)
int_value (14)
add_call_chain(<<d,B,a,C,e,a,INTEGER,D,A>>)
add_class(A)
disjunction
add_query("C", "b", <<["A", "a"], ["B", "INTEGER"], ["d", "INTEGER"], ["a", "INTEGER"], ["A", "a"], ["a", "A"], ["b", "BOOLEAN"]>>, "a")
type_check
modulo
subtraction
add_query("d", "C", <<["C", "INTEGER"], ["C", "INTEGER"], ["c", "BOOLEAN"], ["A", "INTEGER"], ["BOOLEAN", "B"], ["d", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["c", "D"]>>, "INTEGER")
numerical_negation
int_value (46)
add_attribute("a", "D", "BOOLEAN")
add_call_chain(<<e,a,C,C,b,c>>)
numerical_negation
add_query("b", "C", <<["c", "INTEGER"], ["c", "INTEGER"], ["d", "INTEGER"], ["c", "INTEGER"], ["c", "BOOLEAN"], ["d", "b"], ["A", "d"]>>, "INTEGER")
add_query("d", "c", <<["A", "BOOLEAN"]>>, "b")
numerical_negation
add_attribute("a", "a", "BOOLEAN")
logical_negation
bool_value (true)
numerical_negation
add_call_chain(<<a,e,A>>)
add_command("D", "a", <<["e", "A"], ["INTEGER", "INTEGER"], ["a", "a"]>>)
numerical_negation
add_call_chain(<<BOOLEAN,C,A,b,c>>)
bool_value (false)
disjunction
add_attribute("B", "c", "BOOLEAN")
add_call_chain(<<INTEGER,d>>)
int_value (10)
add_query("C", "c", <<["b", "B"]>>, "A")
equals
numerical_negation
type_check
add_attribute("C", "b", "c")
add_call_chain(<<D,D,C,C>>)
conjunction
bool_value (true)
add_call_chain(<<d,c,c>>)
numerical_negation
add_call_chain(<<INTEGER,C>>)
add_command("c", "D", <<["BOOLEAN", "INTEGER"], ["c", "BOOLEAN"], ["D", "C"], ["c", "b"], ["a", "BOOLEAN"]>>)
add_attribute("INTEGER", "B", "BOOLEAN")
numerical_negation
logical_negation
add_attribute("e", "c", "INTEGER")
add_attribute("INTEGER", "C", "INTEGER")
bool_value (true)
logical_negation
add_query("A", "B", <<["A", "BOOLEAN"], ["B", "BOOLEAN"]>>, "C")
add_attribute("D", "a", "INTEGER")
type_check
add_call_chain(<<c,D,a,D,c,a,BOOLEAN,b,d>>)
add_call_chain(<<C,b,a,C,e,d,C,A,a>>)
generate_java_code
numerical_negation
add_call_chain(<<D,b,e,c,A,B>>)
add_call_chain(<<e,C,e,C,a,a,INTEGER,A>>)
int_value (30)
addition
add_call_chain(<<A>>)
conjunction
type_check
bool_value (false)
add_command("d", "e", <<["D", "B"], ["b", "c"], ["e", "c"], ["c", "c"], ["BOOLEAN", "A"], ["e", "D"], ["a", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["c", "INTEGER"]>>)
add_query("BOOLEAN", "A", <<["A", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>, "A")
add_query("c", "B", <<["A", "BOOLEAN"], ["D", "b"], ["e", "BOOLEAN"], ["a", "INTEGER"], ["b", "a"]>>, "C")
addition
less_than
add_attribute("a", "B", "BOOLEAN")
add_command("A", "C", <<["d", "BOOLEAN"], ["b", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "INTEGER"], ["b", "b"], ["a", "A"], ["e", "e"]>>)
add_call_chain(<<D,b>>)
equals
logical_negation
generate_java_code
add_class(A)
logical_negation
add_call_chain(<<b,a,B,A,B,b,c,e>>)
add_call_chain(<<B,a,B,a,C,BOOLEAN,B,b,BOOLEAN>>)
int_value (2)
logical_negation
add_call_chain(<<b,B,A,INTEGER,INTEGER,d,C,INTEGER,B>>)
add_call_chain(<<C,D,b>>)
add_command("A", "D", <<["A", "INTEGER"], ["BOOLEAN", "d"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "INTEGER"], ["d", "BOOLEAN"]>>)
add_attribute("C", "D", "INTEGER")
generate_java_code
add_class(b)
add_call_chain(<<D,d,BOOLEAN,d>>)
add_call_chain(<<e,e,e,C>>)
add_query("C", "e", <<["A", "INTEGER"], ["d", "BOOLEAN"], ["B", "INTEGER"], ["c", "BOOLEAN"], ["INTEGER", "INTEGER"], ["d", "BOOLEAN"], ["c", "INTEGER"], ["INTEGER", "BOOLEAN"], ["D", "c"]>>, "C")
add_query("B", "a", <<["C", "D"], ["A", "INTEGER"], ["e", "INTEGER"], ["A", "D"]>>, "INTEGER")
conjunction
addition
type_check
add_command("e", "d", <<["A", "INTEGER"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>)
add_call_chain(<<D,B,e>>)
add_query("a", "c", <<["BOOLEAN", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "A"], ["d", "a"]>>, "D")
add_call_chain(<<C,c,A,D,B,C,D>>)
add_call_chain(<<B,D,A,d>>)
add_query("A", "a", <<["B", "INTEGER"]>>, "b")
greater_than
add_attribute("B", "e", "INTEGER")
add_call_chain(<<B,INTEGER,B,B,INTEGER,B>>)
add_attribute("a", "a", "INTEGER")
add_command("INTEGER", "B", <<["C", "INTEGER"]>>)
add_attribute("b", "c", "INTEGER")
add_attribute("c", "d", "INTEGER")
add_command("c", "c", <<["A", "INTEGER"], ["D", "INTEGER"], ["C", "INTEGER"]>>)
int_value (27)
disjunction
add_command("a", "C", <<["e", "c"], ["D", "INTEGER"], ["A", "b"], ["d", "D"], ["B", "a"], ["C", "D"], ["D", "BOOLEAN"], ["BOOLEAN", "D"], ["D", "e"]>>)
add_call_chain(<<C>>)
add_query("e", "a", <<["e", "d"], ["D", "D"], ["A", "A"], ["A", "a"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["b", "INTEGER"], ["e", "INTEGER"], ["C", "BOOLEAN"]>>, "e")
add_call_chain(<<B,e,B,C>>)
add_call_chain(<<a,D,BOOLEAN,D,a,c>>)
numerical_negation
greater_than
add_command("B", "b", <<["A", "C"], ["A", "C"], ["INTEGER", "BOOLEAN"], ["d", "BOOLEAN"], ["d", "C"], ["C", "d"], ["d", "e"]>>)
type_check
add_command("A", "d", <<["A", "INTEGER"]>>)
conjunction
add_query("c", "d", <<["b", "INTEGER"], ["d", "BOOLEAN"], ["A", "e"], ["b", "INTEGER"], ["a", "BOOLEAN"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["d", "INTEGER"]>>, "B")
add_call_chain(<<BOOLEAN,a>>)
type_check
add_command("BOOLEAN", "d", <<["a", "INTEGER"], ["a", "a"]>>)
add_attribute("b", "B", "BOOLEAN")
multiplication
subtraction
add_call_chain(<<B,b,b,b>>)
add_call_chain(<<c,B,a,B>>)
add_call_chain(<<B,c,a,d,A,A,c>>)
generate_java_code
add_class(A)
int_value (32)
add_attribute("d", "C", "INTEGER")
add_command("BOOLEAN", "BOOLEAN", <<["BOOLEAN", "INTEGER"], ["BOOLEAN", "INTEGER"], ["D", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["e", "INTEGER"], ["A", "INTEGER"], ["INTEGER", "BOOLEAN"], ["d", "INTEGER"]>>)
numerical_negation
int_value (2)
add_class(A)
add_attribute("C", "b", "INTEGER")
add_call_chain(<<B>>)
add_call_chain(<<A>>)
add_query("c", "a", <<["d", "BOOLEAN"], ["c", "INTEGER"]>>, "a")
int_value (24)
numerical_negation
bool_value (true)
conjunction
greater_than
conjunction
add_query("D", "A", <<["d", "e"], ["B", "B"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["B", "b"], ["c", "INTEGER"]>>, "A")
bool_value (true)
add_query("D", "b", <<["C", "BOOLEAN"], ["d", "C"], ["C", "INTEGER"], ["e", "BOOLEAN"], ["D", "a"], ["BOOLEAN", "INTEGER"], ["e", "A"], ["INTEGER", "BOOLEAN"], ["B", "c"]>>, "C")
int_value (15)
add_command("D", "b", <<["b", "e"], ["B", "INTEGER"], ["C", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["B", "BOOLEAN"], ["C", "INTEGER"], ["d", "BOOLEAN"]>>)
numerical_negation
logical_negation
add_query("d", "c", <<["C", "A"], ["D", "b"]>>, "BOOLEAN")
equals
type_check
numerical_negation
logical_negation
add_query("D", "B", <<["D", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "BOOLEAN"]>>, "D")
bool_value (false)
add_query("c", "c", <<["e", "BOOLEAN"], ["a", "e"], ["a", "INTEGER"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["d", "INTEGER"], ["D", "BOOLEAN"]>>, "d")
add_query("D", "c", <<["A", "BOOLEAN"]>>, "a")
add_call_chain(<<D,A,b,D,B,BOOLEAN,B,D>>)
add_attribute("a", "B", "BOOLEAN")
add_call_chain(<<e,d,d,C,c,B,D,c,A>>)
add_attribute("C", "INTEGER", "B")
add_command("c", "e", <<["B", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["d", "INTEGER"]>>)
add_call_chain(<<d,a,d,d,c,a,a,C,C>>)
add_call_chain(<<B,a,b,B,b>>)
add_call_chain(<<e>>)
type_check
generate_java_code
int_value (47)
disjunction
add_attribute("b", "a", "BOOLEAN")
disjunction
add_class(C)
logical_negation
bool_value (false)
add_call_chain(<<b,D,e,e,a,A,c,D,c>>)
add_class(INTEGER)
add_call_chain(<<c>>)
add_call_chain(<<c,e,a>>)
