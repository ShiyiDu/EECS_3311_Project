add_attribute("C", "B", "d")
generate_java_code
add_query("e", "D", <<["e", "INTEGER"], ["INTEGER", "b"], ["b", "c"], ["C", "b"], ["d", "INTEGER"]>>, "c")
add_query("C", "b", <<["d", "INTEGER"], ["D", "e"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["a", "e"]>>, "D")
equals
add_attribute("D", "A", "INTEGER")
add_command("C", "e", <<["a", "c"], ["e", "INTEGER"], ["e", "BOOLEAN"], ["C", "BOOLEAN"], ["d", "INTEGER"]>>)
quotient
numerical_negation
add_attribute("d", "C", "d")
add_command("e", "INTEGER", <<["BOOLEAN", "INTEGER"], ["d", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "INTEGER"], ["b", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["C", "INTEGER"], ["c", "BOOLEAN"]>>)
add_call_chain(<<C,b>>)
int_value (39)
type_check
add_command("A", "d", <<["A", "e"], ["B", "INTEGER"], ["a", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "B"], ["e", "BOOLEAN"], ["C", "BOOLEAN"], ["INTEGER", "c"]>>)
disjunction
add_call_chain(<<B,b,a,c,c,INTEGER>>)
numerical_negation
int_value (18)
type_check
add_command("A", "C", <<["a", "B"], ["c", "INTEGER"], ["D", "BOOLEAN"], ["c", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["d", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>)
generate_java_code
int_value (38)
int_value (5)
conjunction
add_attribute("d", "B", "BOOLEAN")
add_call_chain(<<B,b,b,c>>)
generate_java_code
type_check
bool_value (true)
type_check
add_attribute("b", "c", "INTEGER")
bool_value (true)
int_value (1)
bool_value (false)
quotient
add_command("A", "a", <<["D", "INTEGER"], ["d", "b"], ["e", "BOOLEAN"], ["b", "INTEGER"], ["D", "d"], ["d", "INTEGER"]>>)
add_command("A", "d", <<["C", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["c", "C"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "INTEGER"], ["INTEGER", "INTEGER"], ["b", "INTEGER"]>>)
add_attribute("e", "C", "INTEGER")
add_call_chain(<<d,c,c,e,A>>)
add_class(c)
greater_than
int_value (2)
add_call_chain(<<b,D,C,D,C>>)
add_command("c", "e", <<["e", "INTEGER"], ["B", "INTEGER"], ["b", "A"], ["BOOLEAN", "C"], ["a", "BOOLEAN"]>>)
numerical_negation
numerical_negation
bool_value (false)
add_query("BOOLEAN", "B", <<["INTEGER", "b"], ["B", "b"], ["e", "BOOLEAN"], ["d", "INTEGER"], ["b", "INTEGER"]>>, "c")
add_query("e", "C", <<["B", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "e"], ["b", "a"], ["c", "BOOLEAN"]>>, "INTEGER")
disjunction
bool_value (true)
add_call_chain(<<C,B,INTEGER>>)
add_query("INTEGER", "B", <<["d", "C"], ["C", "D"], ["c", "C"], ["A", "b"]>>, "A")
add_class(A)
bool_value (true)
logical_negation
conjunction
multiplication
bool_value (false)
numerical_negation
logical_negation
add_call_chain(<<b,d,e,INTEGER,C,d,D,A,A>>)
add_query("B", "A", <<["e", "INTEGER"]>>, "a")
add_call_chain(<<a,d,A,b,d,B,e>>)
add_query("b", "C", <<["d", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>, "c")
add_call_chain(<<B,e,d,B,BOOLEAN,a,C,B,A>>)
add_query("e", "C", <<["d", "BOOLEAN"]>>, "D")
add_call_chain(<<a,D,B,A,B,D>>)
add_command("b", "c", <<["B", "INTEGER"], ["d", "INTEGER"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["e", "A"]>>)
add_command("D", "e", <<["d", "BOOLEAN"], ["a", "c"], ["BOOLEAN", "e"], ["a", "INTEGER"], ["D", "C"], ["d", "C"], ["C", "INTEGER"]>>)
type_check
int_value (48)
add_attribute("e", "C", "BOOLEAN")
add_command("A", "b", <<["c", "BOOLEAN"], ["B", "b"]>>)
add_attribute("e", "A", "BOOLEAN")
add_command("INTEGER", "b", <<["d", "BOOLEAN"], ["d", "INTEGER"], ["D", "B"], ["e", "BOOLEAN"], ["B", "INTEGER"]>>)
type_check
type_check
add_query("BOOLEAN", "A", <<["b", "C"], ["a", "INTEGER"]>>, "a")
modulo
quotient
add_class(e)
add_call_chain(<<b,e,b,A,B>>)
generate_java_code
int_value (23)
logical_negation
add_class(A)
add_class(d)
add_call_chain(<<e,c,c,b>>)
add_class(b)
addition
add_attribute("b", "b", "INTEGER")
add_attribute("B", "d", "B")
bool_value (false)
subtraction
numerical_negation
add_class(C)
int_value (8)
equals
add_call_chain(<<B,c,A,D>>)
add_query("D", "D", <<["d", "a"], ["e", "BOOLEAN"]>>, "A")
add_call_chain(<<BOOLEAN,B,d,e,C,b,e,B,a>>)
int_value (26)
add_class(e)
add_command("b", "D", <<["c", "a"], ["b", "INTEGER"], ["c", "BOOLEAN"]>>)
add_call_chain(<<A,c,D,C,b>>)
add_query("A", "BOOLEAN", <<["BOOLEAN", "a"], ["B", "BOOLEAN"], ["D", "INTEGER"], ["e", "C"], ["c", "INTEGER"], ["B", "INTEGER"], ["e", "BOOLEAN"]>>, "a")
numerical_negation
generate_java_code
add_call_chain(<<BOOLEAN,A>>)
greater_than
add_attribute("D", "a", "c")
add_command("a", "e", <<["A", "INTEGER"], ["A", "INTEGER"], ["c", "INTEGER"]>>)
add_command("d", "B", <<["e", "BOOLEAN"]>>)
logical_negation
greater_than
add_command("C", "D", <<["B", "c"], ["A", "BOOLEAN"], ["b", "INTEGER"], ["INTEGER", "INTEGER"], ["d", "INTEGER"], ["D", "INTEGER"], ["C", "A"]>>)
modulo
bool_value (false)
add_call_chain(<<c>>)
int_value (48)
add_call_chain(<<c,A>>)
add_call_chain(<<b,B,B,e,B,B>>)
generate_java_code
add_query("C", "a", <<["B", "e"], ["INTEGER", "A"], ["A", "BOOLEAN"], ["D", "B"], ["d", "INTEGER"], ["c", "INTEGER"], ["A", "INTEGER"]>>, "e")
logical_negation
generate_java_code
add_attribute("a", "A", "BOOLEAN")
generate_java_code
less_than
generate_java_code
greater_than
type_check
numerical_negation
add_query("b", "B", <<["e", "d"], ["e", "INTEGER"], ["c", "INTEGER"], ["C", "BOOLEAN"]>>, "D")
logical_negation
numerical_negation
add_call_chain(<<b,C,B,e,d,INTEGER>>)
add_call_chain(<<e,b,D,e,b,B>>)
add_query("c", "C", <<["D", "INTEGER"], ["d", "INTEGER"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["d", "BOOLEAN"], ["D", "D"], ["A", "BOOLEAN"], ["c", "INTEGER"]>>, "D")
conjunction
add_call_chain(<<d,C,c,B,B,B,B>>)
logical_negation
add_attribute("e", "a", "INTEGER")
bool_value (false)
add_call_chain(<<INTEGER,d,e,B,d,c,d,A>>)
conjunction
addition
multiplication
bool_value (false)
add_attribute("d", "A", "INTEGER")
bool_value (true)
add_command("e", "c", <<["BOOLEAN", "BOOLEAN"], ["e", "INTEGER"], ["D", "b"], ["INTEGER", "D"]>>)
bool_value (true)
add_class(B)
generate_java_code
add_query("c", "A", <<["D", "B"], ["a", "BOOLEAN"], ["B", "INTEGER"], ["B", "INTEGER"], ["c", "INTEGER"], ["C", "INTEGER"], ["INTEGER", "INTEGER"], ["D", "c"], ["A", "A"]>>, "D")
add_call_chain(<<d,a,D,e,A>>)
less_than
disjunction
add_attribute("A", "D", "a")
bool_value (true)
add_call_chain(<<b,b,C,c,D,a>>)
numerical_negation
logical_negation
add_attribute("e", "C", "INTEGER")
add_class(BOOLEAN)
bool_value (true)
add_attribute("A", "B", "INTEGER")
add_attribute("d", "C", "INTEGER")
add_query("B", "INTEGER", <<["c", "b"], ["c", "b"], ["BOOLEAN", "c"], ["A", "a"], ["INTEGER", "BOOLEAN"], ["B", "C"], ["a", "BOOLEAN"], ["e", "INTEGER"], ["A", "INTEGER"]>>, "B")
numerical_negation
add_query("C", "b", <<["D", "INTEGER"], ["C", "C"], ["c", "e"], ["a", "INTEGER"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["A", "INTEGER"]>>, "d")
add_attribute("C", "BOOLEAN", "INTEGER")
add_call_chain(<<a,BOOLEAN,B,D,A,b,b>>)
bool_value (true)
add_call_chain(<<BOOLEAN,a,BOOLEAN,INTEGER,a>>)
bool_value (true)
generate_java_code
subtraction
add_class(C)
numerical_negation
add_query("b", "a", <<["e", "INTEGER"], ["e", "INTEGER"], ["a", "BOOLEAN"]>>, "b")
add_command("b", "INTEGER", <<["C", "c"], ["a", "D"], ["B", "BOOLEAN"], ["A", "c"]>>)
add_query("e", "BOOLEAN", <<["C", "b"], ["A", "BOOLEAN"]>>, "a")
add_command("B", "B", <<["B", "BOOLEAN"]>>)
generate_java_code
type_check
addition
less_than
add_command("C", "C", <<["b", "BOOLEAN"], ["B", "d"], ["e", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["b", "D"], ["d", "BOOLEAN"], ["b", "BOOLEAN"], ["b", "d"]>>)
add_query("d", "a", <<["a", "BOOLEAN"], ["c", "INTEGER"], ["B", "A"]>>, "c")
bool_value (false)
greater_than
add_call_chain(<<a,e,B,A,b>>)
add_attribute("A", "INTEGER", "D")
add_attribute("INTEGER", "a", "INTEGER")
greater_than
disjunction
add_attribute("c", "BOOLEAN", "INTEGER")
add_call_chain(<<d,A,B,e,c,A,A,D,e>>)
disjunction
add_command("C", "b", <<["b", "a"], ["INTEGER", "D"]>>)
add_query("c", "b", <<["c", "BOOLEAN"], ["A", "INTEGER"], ["b", "INTEGER"], ["e", "INTEGER"], ["d", "BOOLEAN"]>>, "e")
add_attribute("B", "b", "INTEGER")
add_query("D", "A", <<["B", "BOOLEAN"], ["a", "INTEGER"], ["BOOLEAN", "C"], ["b", "A"], ["a", "e"], ["a", "INTEGER"], ["B", "A"], ["D", "A"]>>, "B")
int_value (31)
int_value (12)
add_query("BOOLEAN", "a", <<["B", "INTEGER"], ["b", "c"], ["B", "BOOLEAN"], ["b", "D"], ["a", "c"], ["d", "INTEGER"], ["d", "A"], ["C", "a"]>>, "e")
add_attribute("B", "b", "b")
add_call_chain(<<d,d,B,BOOLEAN,D,d>>)
add_attribute("b", "INTEGER", "BOOLEAN")
add_attribute("e", "INTEGER", "C")
int_value (12)
logical_negation
type_check
int_value (5)
add_call_chain(<<d>>)
logical_negation
int_value (35)
add_call_chain(<<a,D,D,A,C,e,a,a>>)
add_attribute("A", "A", "D")
add_attribute("b", "e", "INTEGER")
quotient
add_attribute("c", "A", "INTEGER")
add_attribute("e", "BOOLEAN", "b")
logical_negation
type_check
logical_negation
equals
add_attribute("INTEGER", "BOOLEAN", "INTEGER")
bool_value (true)
add_class(e)
bool_value (false)
add_attribute("e", "D", "b")
add_call_chain(<<A,d>>)
numerical_negation
add_attribute("BOOLEAN", "A", "INTEGER")
add_attribute("e", "b", "INTEGER")
add_attribute("d", "c", "b")
bool_value (false)
add_call_chain(<<C,e,C,C,BOOLEAN>>)
add_command("a", "C", <<["D", "BOOLEAN"], ["C", "BOOLEAN"], ["INTEGER", "INTEGER"], ["a", "c"], ["D", "b"], ["C", "INTEGER"]>>)
add_call_chain(<<c,B>>)
equals
disjunction
greater_than
quotient
bool_value (true)
add_attribute("C", "a", "A")
add_call_chain(<<BOOLEAN>>)
add_attribute("d", "D", "INTEGER")
conjunction
bool_value (true)
numerical_negation
add_query("b", "D", <<["A", "a"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["A", "b"], ["D", "a"]>>, "B")
numerical_negation
add_attribute("B", "D", "BOOLEAN")
bool_value (false)
add_attribute("a", "b", "INTEGER")
int_value (45)
add_attribute("A", "a", "a")
add_query("C", "A", <<["D", "INTEGER"], ["c", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "d"], ["D", "BOOLEAN"], ["b", "C"], ["e", "INTEGER"], ["A", "BOOLEAN"], ["C", "INTEGER"]>>, "B")
add_attribute("c", "C", "b")
bool_value (true)
