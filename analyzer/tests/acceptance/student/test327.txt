bool_value (true)
type_check
add_command("D", "D", <<["D", "INTEGER"], ["c", "BOOLEAN"]>>)
numerical_negation
greater_than
add_call_chain(<<A,B,INTEGER,B,e,INTEGER,c,BOOLEAN,B>>)
add_call_chain(<<d,INTEGER,INTEGER,C,B,B>>)
disjunction
add_command("INTEGER", "D", <<["a", "INTEGER"], ["e", "b"], ["b", "INTEGER"], ["C", "INTEGER"], ["e", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "e"], ["D", "BOOLEAN"], ["c", "INTEGER"]>>)
logical_negation
add_command("D", "A", <<["d", "BOOLEAN"], ["A", "INTEGER"], ["d", "c"], ["B", "INTEGER"], ["C", "BOOLEAN"], ["d", "c"], ["d", "INTEGER"]>>)
int_value (41)
add_query("A", "BOOLEAN", <<["B", "INTEGER"], ["B", "a"], ["a", "INTEGER"], ["D", "INTEGER"], ["a", "b"]>>, "INTEGER")
type_check
subtraction
addition
int_value (23)
logical_negation
less_than
add_call_chain(<<B,B>>)
add_call_chain(<<C>>)
add_attribute("D", "A", "a")
disjunction
int_value (2)
generate_java_code
add_call_chain(<<c>>)
add_call_chain(<<D,B,e,C,e,C,C>>)
add_command("a", "a", <<["d", "BOOLEAN"], ["A", "BOOLEAN"]>>)
bool_value (true)
multiplication
less_than
numerical_negation
generate_java_code
logical_negation
numerical_negation
add_call_chain(<<D>>)
add_command("b", "BOOLEAN", <<["A", "C"], ["e", "BOOLEAN"], ["d", "INTEGER"], ["D", "BOOLEAN"]>>)
add_call_chain(<<B>>)
add_class(BOOLEAN)
add_call_chain(<<D,B,b,b,C>>)
int_value (33)
add_class(A)
add_command("e", "B", <<["C", "BOOLEAN"], ["a", "INTEGER"], ["d", "INTEGER"], ["D", "BOOLEAN"], ["C", "C"], ["a", "INTEGER"]>>)
generate_java_code
add_query("BOOLEAN", "b", <<["B", "INTEGER"]>>, "A")
add_call_chain(<<A,B,INTEGER,B>>)
type_check
add_class(INTEGER)
add_call_chain(<<b,c,B,D,BOOLEAN,A,A,D>>)
bool_value (true)
add_query("a", "D", <<["a", "BOOLEAN"], ["B", "INTEGER"], ["c", "BOOLEAN"], ["a", "b"], ["C", "C"], ["d", "BOOLEAN"], ["C", "A"], ["BOOLEAN", "BOOLEAN"], ["a", "B"]>>, "a")
add_class(D)
int_value (39)
add_class(C)
add_call_chain(<<B,e,e,B,b,D,D,D,c>>)
add_call_chain(<<B,INTEGER>>)
numerical_negation
bool_value (false)
conjunction
add_command("D", "D", <<["b", "INTEGER"], ["e", "INTEGER"], ["c", "c"]>>)
logical_negation
logical_negation
type_check
type_check
add_call_chain(<<e,e>>)
add_call_chain(<<a,D,BOOLEAN,b,D,D,BOOLEAN>>)
generate_java_code
bool_value (false)
generate_java_code
add_attribute("D", "D", "BOOLEAN")
logical_negation
add_call_chain(<<b,INTEGER,B,b,d,INTEGER,INTEGER,A>>)
add_query("D", "B", <<["INTEGER", "INTEGER"], ["e", "INTEGER"], ["INTEGER", "INTEGER"], ["B", "INTEGER"], ["d", "BOOLEAN"], ["D", "INTEGER"], ["A", "INTEGER"], ["a", "b"]>>, "C")
logical_negation
add_command("a", "B", <<["B", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "INTEGER"]>>)
equals
add_attribute("BOOLEAN", "d", "INTEGER")
logical_negation
add_call_chain(<<d,C,d,d,c,e,INTEGER>>)
add_call_chain(<<d,e,B,e,B,b,e,D,D>>)
add_call_chain(<<BOOLEAN,d,A,A,a,c,INTEGER,e,d>>)
add_call_chain(<<D,BOOLEAN,a,a,b,e>>)
int_value (17)
add_query("b", "d", <<["C", "A"]>>, "B")
add_attribute("a", "C", "INTEGER")
add_attribute("C", "BOOLEAN", "B")
add_call_chain(<<INTEGER,BOOLEAN,c,c,C,A,e>>)
add_query("e", "D", <<["b", "BOOLEAN"], ["C", "e"], ["A", "INTEGER"], ["D", "INTEGER"], ["C", "c"]>>, "A")
numerical_negation
add_attribute("D", "a", "e")
add_call_chain(<<BOOLEAN,b,C,B>>)
int_value (45)
add_command("e", "A", <<["d", "B"], ["d", "BOOLEAN"]>>)
add_command("B", "A", <<["e", "INTEGER"], ["A", "d"], ["b", "INTEGER"]>>)
add_query("A", "B", <<["c", "B"], ["C", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "INTEGER"]>>, "b")
add_attribute("b", "A", "BOOLEAN")
add_command("D", "B", <<["D", "BOOLEAN"], ["A", "BOOLEAN"], ["BOOLEAN", "D"], ["a", "BOOLEAN"], ["b", "BOOLEAN"], ["b", "e"], ["B", "BOOLEAN"]>>)
int_value (22)
add_call_chain(<<A,a,a>>)
bool_value (true)
add_command("a", "C", <<["b", "c"]>>)
generate_java_code
int_value (7)
logical_negation
add_query("D", "d", <<["e", "BOOLEAN"], ["B", "e"]>>, "c")
logical_negation
less_than
logical_negation
equals
add_call_chain(<<A,D,e,d,e,e,d>>)
add_call_chain(<<A,A,D,D,c,D,B,d,b>>)
add_attribute("A", "D", "INTEGER")
add_class(A)
add_call_chain(<<b,c,b,B,C,a,c,A>>)
int_value (23)
add_call_chain(<<D,INTEGER>>)
add_attribute("d", "C", "INTEGER")
add_query("d", "e", <<["B", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "INTEGER"]>>, "D")
logical_negation
logical_negation
int_value (9)
numerical_negation
conjunction
add_command("B", "C", <<["d", "INTEGER"], ["A", "INTEGER"], ["a", "BOOLEAN"], ["A", "d"]>>)
numerical_negation
add_class(INTEGER)
add_class(C)
add_command("B", "B", <<["e", "INTEGER"], ["A", "INTEGER"], ["BOOLEAN", "INTEGER"], ["c", "INTEGER"], ["C", "e"], ["a", "INTEGER"], ["A", "d"]>>)
add_class(c)
type_check
bool_value (true)
add_call_chain(<<e,b,D,A,c,e,d>>)
add_query("C", "d", <<["b", "A"], ["b", "BOOLEAN"]>>, "e")
add_call_chain(<<c,D,BOOLEAN,B,B>>)
type_check
bool_value (false)
logical_negation
generate_java_code
bool_value (true)
numerical_negation
add_call_chain(<<d,A,B,d,D,B,e,D>>)
numerical_negation
add_call_chain(<<d,A>>)
type_check
add_command("e", "B", <<["c", "INTEGER"], ["e", "INTEGER"], ["e", "INTEGER"], ["a", "C"], ["INTEGER", "BOOLEAN"], ["C", "D"], ["B", "c"], ["a", "BOOLEAN"]>>)
add_call_chain(<<a,d,C,d,INTEGER>>)
add_command("C", "b", <<["d", "b"], ["A", "BOOLEAN"], ["a", "BOOLEAN"]>>)
add_class(c)
int_value (11)
int_value (46)
logical_negation
addition
add_query("d", "B", <<["B", "INTEGER"], ["B", "a"], ["a", "d"], ["a", "INTEGER"], ["A", "C"], ["b", "b"], ["b", "INTEGER"]>>, "A")
add_call_chain(<<a,A,C,c,C,C,C,e>>)
add_call_chain(<<d>>)
logical_negation
logical_negation
logical_negation
add_command("b", "C", <<["A", "INTEGER"]>>)
subtraction
logical_negation
add_attribute("d", "B", "BOOLEAN")
bool_value (false)
add_call_chain(<<e,d,B,B,B,c,c,C>>)
numerical_negation
add_query("INTEGER", "b", <<["c", "BOOLEAN"], ["D", "INTEGER"]>>, "C")
add_query("e", "B", <<["BOOLEAN", "A"], ["B", "C"], ["b", "C"], ["A", "BOOLEAN"]>>, "a")
add_query("B", "d", <<["B", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "INTEGER"], ["d", "INTEGER"], ["C", "BOOLEAN"], ["C", "B"]>>, "A")
numerical_negation
generate_java_code
subtraction
add_attribute("D", "B", "INTEGER")
bool_value (false)
generate_java_code
add_call_chain(<<a,b,C>>)
add_query("a", "b", <<["a", "e"], ["c", "INTEGER"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["e", "INTEGER"], ["c", "c"], ["INTEGER", "INTEGER"], ["d", "D"]>>, "B")
add_attribute("C", "B", "D")
add_attribute("e", "e", "INTEGER")
add_attribute("c", "d", "INTEGER")
add_call_chain(<<C,d>>)
add_call_chain(<<B,A,e,d,B,e,a>>)
add_command("c", "BOOLEAN", <<["D", "INTEGER"], ["B", "BOOLEAN"], ["B", "B"]>>)
int_value (35)
type_check
bool_value (false)
add_call_chain(<<e,B,C,INTEGER,D,C,C,C>>)
add_class(C)
subtraction
disjunction
add_call_chain(<<d,D,b,d,C,d>>)
logical_negation
add_call_chain(<<B>>)
add_call_chain(<<A,C,b>>)
bool_value (true)
add_call_chain(<<D,b,D>>)
int_value (24)
subtraction
less_than
add_attribute("b", "A", "INTEGER")
logical_negation
