logical_negation
numerical_negation
numerical_negation
add_class(b)
add_call_chain(<<D,B,B,A,BOOLEAN,c,D>>)
logical_negation
add_attribute("e", "d", "BOOLEAN")
add_query("A", "A", <<["B", "D"], ["D", "B"], ["a", "INTEGER"], ["B", "BOOLEAN"], ["c", "C"], ["D", "INTEGER"], ["a", "BOOLEAN"], ["C", "b"], ["B", "BOOLEAN"]>>, "C")
int_value (23)
bool_value (false)
numerical_negation
add_query("d", "e", <<["a", "a"], ["INTEGER", "INTEGER"], ["b", "C"], ["D", "INTEGER"], ["e", "BOOLEAN"], ["C", "C"], ["a", "INTEGER"], ["a", "INTEGER"], ["C", "INTEGER"]>>, "d")
add_call_chain(<<INTEGER,b,BOOLEAN,A,D,a>>)
add_command("d", "e", <<["INTEGER", "BOOLEAN"], ["B", "INTEGER"], ["BOOLEAN", "INTEGER"], ["c", "B"]>>)
add_attribute("D", "A", "INTEGER")
generate_java_code
numerical_negation
bool_value (false)
int_value (12)
add_query("D", "B", <<["BOOLEAN", "INTEGER"], ["C", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "a"], ["INTEGER", "B"], ["c", "BOOLEAN"], ["a", "D"]>>, "a")
conjunction
bool_value (true)
less_than
add_command("B", "A", <<["a", "BOOLEAN"], ["a", "INTEGER"], ["D", "BOOLEAN"], ["e", "C"], ["d", "BOOLEAN"], ["c", "INTEGER"], ["C", "INTEGER"]>>)
add_query("B", "a", <<["c", "INTEGER"]>>, "B")
disjunction
type_check
add_call_chain(<<B,a,D,a,BOOLEAN,a,a,d>>)
add_query("B", "D", <<["C", "A"], ["D", "b"]>>, "D")
numerical_negation
add_command("A", "A", <<["B", "B"], ["D", "BOOLEAN"], ["b", "INTEGER"]>>)
add_command("b", "D", <<["d", "D"], ["a", "BOOLEAN"]>>)
int_value (24)
add_query("A", "d", <<["B", "INTEGER"], ["a", "D"], ["a", "INTEGER"], ["BOOLEAN", "e"], ["a", "INTEGER"], ["A", "d"], ["D", "c"], ["e", "INTEGER"]>>, "INTEGER")
logical_negation
generate_java_code
add_call_chain(<<D,INTEGER,C,A>>)
conjunction
logical_negation
add_call_chain(<<e,D,b,INTEGER,B,A,b,A>>)
bool_value (true)
equals
add_call_chain(<<c,D,a>>)
add_class(e)
logical_negation
conjunction
logical_negation
bool_value (true)
add_call_chain(<<C,B,C,BOOLEAN,a,D>>)
add_query("INTEGER", "c", <<["D", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["c", "INTEGER"], ["c", "e"], ["D", "d"]>>, "b")
add_attribute("a", "b", "BOOLEAN")
add_class(D)
add_call_chain(<<A,C>>)
add_query("d", "A", <<["a", "D"], ["d", "BOOLEAN"], ["B", "BOOLEAN"], ["INTEGER", "INTEGER"], ["D", "b"]>>, "BOOLEAN")
add_query("C", "e", <<["D", "b"], ["b", "c"], ["B", "c"]>>, "c")
type_check
type_check
add_call_chain(<<b,d,D,b,A>>)
int_value (30)
add_attribute("BOOLEAN", "d", "INTEGER")
logical_negation
add_attribute("e", "b", "BOOLEAN")
add_query("e", "C", <<["A", "B"], ["B", "b"], ["B", "BOOLEAN"], ["C", "C"], ["a", "INTEGER"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["INTEGER", "INTEGER"], ["a", "INTEGER"]>>, "d")
add_command("A", "e", <<["a", "BOOLEAN"], ["C", "INTEGER"]>>)
greater_than
int_value (36)
add_command("A", "D", <<["a", "B"], ["e", "INTEGER"], ["C", "BOOLEAN"], ["a", "INTEGER"]>>)
add_call_chain(<<B,b>>)
add_query("b", "D", <<["d", "B"], ["e", "c"]>>, "c")
add_call_chain(<<a,b,a,A,b,C,b>>)
less_than
int_value (3)
bool_value (true)
add_query("BOOLEAN", "A", <<["d", "BOOLEAN"], ["C", "A"], ["D", "D"], ["a", "BOOLEAN"], ["e", "BOOLEAN"], ["c", "BOOLEAN"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["INTEGER", "c"]>>, "B")
add_command("d", "A", <<["BOOLEAN", "INTEGER"], ["d", "BOOLEAN"], ["B", "c"], ["INTEGER", "INTEGER"], ["c", "INTEGER"], ["d", "INTEGER"], ["e", "INTEGER"], ["D", "INTEGER"]>>)
add_class(B)
numerical_negation
add_command("a", "D", <<["d", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "BOOLEAN"], ["INTEGER", "D"], ["a", "BOOLEAN"]>>)
add_attribute("B", "A", "BOOLEAN")
equals
add_class(c)
add_attribute("e", "a", "BOOLEAN")
add_call_chain(<<d,D,BOOLEAN,BOOLEAN,e,d,c,e>>)
numerical_negation
add_command("d", "A", <<["B", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "A"], ["BOOLEAN", "BOOLEAN"]>>)
numerical_negation
int_value (49)
numerical_negation
numerical_negation
add_call_chain(<<C,e,INTEGER,B,d,a,a,A,e>>)
generate_java_code
generate_java_code
add_attribute("b", "d", "D")
add_class(INTEGER)
add_class(C)
int_value (23)
bool_value (true)
add_query("c", "e", <<["C", "BOOLEAN"], ["C", "d"], ["B", "C"], ["INTEGER", "BOOLEAN"], ["B", "C"], ["e", "INTEGER"], ["a", "e"], ["B", "C"]>>, "c")
add_call_chain(<<d,b,C,b,C>>)
add_class(B)
add_query("BOOLEAN", "a", <<["c", "INTEGER"], ["C", "INTEGER"], ["B", "d"], ["C", "INTEGER"], ["e", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "a"], ["e", "INTEGER"]>>, "B")
generate_java_code
type_check
modulo
add_command("D", "e", <<["d", "INTEGER"], ["D", "D"]>>)
logical_negation
logical_negation
add_call_chain(<<A,C,C,b,a>>)
add_call_chain(<<D,D,A,D,C,D,A>>)
add_call_chain(<<B,D,C,B>>)
disjunction
equals
add_class(BOOLEAN)
add_query("B", "b", <<["INTEGER", "INTEGER"], ["B", "INTEGER"], ["B", "INTEGER"], ["a", "BOOLEAN"]>>, "B")
bool_value (true)
int_value (40)
add_query("c", "A", <<["C", "A"], ["INTEGER", "INTEGER"], ["A", "b"], ["b", "b"], ["A", "e"], ["d", "C"], ["d", "INTEGER"], ["b", "BOOLEAN"], ["c", "INTEGER"]>>, "c")
generate_java_code
add_call_chain(<<B,D>>)
add_query("INTEGER", "d", <<["a", "BOOLEAN"], ["b", "b"], ["b", "A"], ["D", "BOOLEAN"], ["a", "C"], ["a", "BOOLEAN"], ["B", "a"], ["a", "INTEGER"]>>, "e")
add_class(D)
int_value (46)
add_class(D)
add_command("D", "B", <<["A", "INTEGER"], ["BOOLEAN", "A"], ["A", "INTEGER"], ["INTEGER", "C"], ["a", "INTEGER"]>>)
add_query("A", "A", <<["a", "BOOLEAN"]>>, "A")
add_command("c", "D", <<["b", "BOOLEAN"], ["D", "INTEGER"], ["c", "INTEGER"], ["e", "INTEGER"], ["D", "INTEGER"], ["c", "INTEGER"], ["BOOLEAN", "INTEGER"], ["A", "BOOLEAN"], ["BOOLEAN", "D"]>>)
logical_negation
add_call_chain(<<A,d,b>>)
type_check
numerical_negation
add_attribute("b", "a", "INTEGER")
numerical_negation
add_call_chain(<<C,BOOLEAN,B,B,b,C,D,C>>)
add_call_chain(<<c>>)
add_call_chain(<<INTEGER,a,b,e,a,A,B,e,D>>)
greater_than
numerical_negation
add_attribute("B", "c", "BOOLEAN")
add_command("b", "A", <<["e", "a"]>>)
add_command("A", "BOOLEAN", <<["c", "BOOLEAN"], ["INTEGER", "d"], ["a", "BOOLEAN"], ["D", "e"], ["B", "INTEGER"], ["D", "INTEGER"], ["B", "BOOLEAN"]>>)
add_call_chain(<<b,A,b,B,C,d>>)
generate_java_code
add_command("INTEGER", "d", <<["c", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["d", "INTEGER"], ["c", "B"], ["b", "A"]>>)
add_command("a", "e", <<["C", "b"], ["D", "INTEGER"], ["B", "INTEGER"], ["D", "INTEGER"], ["c", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "c"], ["B", "D"], ["B", "INTEGER"]>>)
add_call_chain(<<d,D,a,B,b>>)
add_attribute("B", "D", "INTEGER")
add_query("B", "BOOLEAN", <<["b", "INTEGER"], ["b", "INTEGER"]>>, "INTEGER")
int_value (40)
add_attribute("e", "c", "a")
subtraction
bool_value (false)
bool_value (true)
numerical_negation
add_query("c", "BOOLEAN", <<["D", "INTEGER"], ["d", "d"], ["d", "BOOLEAN"], ["b", "BOOLEAN"], ["b", "C"], ["C", "INTEGER"], ["d", "INTEGER"], ["b", "D"], ["D", "BOOLEAN"]>>, "INTEGER")
add_call_chain(<<B>>)
logical_negation
numerical_negation
logical_negation
add_call_chain(<<a,BOOLEAN,A,C,B,INTEGER,D,C>>)
int_value (27)
int_value (39)
add_query("C", "C", <<["B", "INTEGER"], ["C", "d"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["C", "b"], ["c", "BOOLEAN"]>>, "d")
add_attribute("A", "C", "BOOLEAN")
add_attribute("b", "c", "d")
add_attribute("B", "c", "BOOLEAN")
int_value (27)
int_value (21)
add_class(c)
add_query("A", "A", <<["B", "b"], ["INTEGER", "BOOLEAN"], ["BOOLEAN", "C"], ["e", "BOOLEAN"]>>, "b")
type_check
add_attribute("A", "a", "BOOLEAN")
generate_java_code
add_call_chain(<<c,INTEGER,C,BOOLEAN,b,A,B>>)
add_call_chain(<<D,C>>)
add_command("b", "c", <<["e", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "INTEGER"]>>)
greater_than
add_attribute("c", "D", "INTEGER")
add_query("d", "A", <<["b", "e"], ["B", "b"], ["B", "c"], ["d", "INTEGER"]>>, "c")
logical_negation
numerical_negation
bool_value (false)
disjunction
add_command("B", "INTEGER", <<["b", "BOOLEAN"]>>)
int_value (2)
bool_value (false)
add_call_chain(<<D,a,e,A>>)
subtraction
modulo
add_call_chain(<<C,D,d,BOOLEAN,c,a,B>>)
generate_java_code
add_call_chain(<<D,e,INTEGER>>)
numerical_negation
add_attribute("C", "A", "INTEGER")
bool_value (true)
numerical_negation
add_command("A", "A", <<["c", "BOOLEAN"], ["a", "A"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "b"], ["B", "B"], ["d", "A"], ["B", "BOOLEAN"], ["d", "INTEGER"]>>)
bool_value (true)
bool_value (false)
int_value (5)
add_command("A", "D", <<["B", "B"], ["C", "BOOLEAN"]>>)
add_query("BOOLEAN", "c", <<["B", "INTEGER"], ["b", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["d", "BOOLEAN"], ["D", "INTEGER"], ["c", "BOOLEAN"]>>, "BOOLEAN")
type_check
add_call_chain(<<C,B,c,b,c>>)
bool_value (true)
add_attribute("c", "c", "INTEGER")
logical_negation
add_command("a", "d", <<["b", "D"]>>)
add_call_chain(<<A,INTEGER>>)
logical_negation
add_attribute("a", "b", "A")
add_query("INTEGER", "a", <<["e", "e"], ["b", "INTEGER"], ["d", "BOOLEAN"], ["A", "INTEGER"]>>, "e")
addition
conjunction
addition
add_class(c)
add_query("e", "C", <<["b", "BOOLEAN"], ["d", "INTEGER"]>>, "b")
bool_value (true)
add_attribute("B", "a", "D")
add_class(A)
add_command("c", "INTEGER", <<["A", "BOOLEAN"], ["C", "c"], ["e", "b"], ["c", "BOOLEAN"], ["B", "B"], ["a", "BOOLEAN"], ["c", "D"]>>)
add_call_chain(<<d,B>>)
add_call_chain(<<e,c,c,A,B,BOOLEAN,D,d>>)
less_than
add_query("e", "BOOLEAN", <<["e", "b"]>>, "a")
equals
logical_negation
type_check
int_value (38)
equals
bool_value (false)
int_value (28)
add_attribute("b", "b", "INTEGER")
add_attribute("C", "C", "INTEGER")
add_query("c", "d", <<["e", "BOOLEAN"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "C"]>>, "C")
bool_value (true)
modulo
numerical_negation
add_call_chain(<<B,a>>)
add_query("c", "B", <<["A", "BOOLEAN"], ["b", "INTEGER"], ["d", "C"], ["B", "INTEGER"]>>, "B")
add_command("C", "e", <<["B", "B"], ["c", "BOOLEAN"], ["INTEGER", "INTEGER"], ["b", "BOOLEAN"], ["C", "INTEGER"]>>)
numerical_negation
