int_value (40)
int_value (5)
add_call_chain(<<INTEGER>>)
logical_negation
subtraction
logical_negation
add_call_chain(<<a,B,INTEGER,INTEGER,B,D,b,a,A>>)
type_check
add_attribute("A", "A", "INTEGER")
add_class(a)
add_command("C", "a", <<["d", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["a", "BOOLEAN"]>>)
greater_than
add_command("b", "C", <<["d", "BOOLEAN"], ["B", "e"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "d"]>>)
add_query("BOOLEAN", "D", <<["C", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "d"], ["BOOLEAN", "INTEGER"], ["C", "INTEGER"]>>, "C")
add_call_chain(<<c,b,b,a>>)
add_attribute("C", "D", "INTEGER")
numerical_negation
generate_java_code
add_command("D", "A", <<["D", "INTEGER"], ["a", "INTEGER"], ["INTEGER", "e"], ["B", "e"], ["e", "INTEGER"], ["D", "BOOLEAN"]>>)
numerical_negation
add_call_chain(<<D,c,B,e>>)
add_class(a)
add_call_chain(<<C,A,c,d,B,e,b,B,D>>)
add_call_chain(<<b,d,b,A,e,d>>)
equals
add_call_chain(<<b,c,d,a,e,A,d,e,A>>)
bool_value (false)
add_call_chain(<<D,C,A,b,A,D,b,D,D>>)
add_call_chain(<<A,INTEGER>>)
modulo
add_attribute("BOOLEAN", "e", "d")
bool_value (true)
add_class(B)
add_command("e", "d", <<["c", "D"], ["D", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "INTEGER"], ["c", "BOOLEAN"]>>)
conjunction
numerical_negation
numerical_negation
add_command("A", "C", <<["A", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "BOOLEAN"]>>)
bool_value (true)
add_call_chain(<<b,C,B,c,b,a,A,c,B>>)
type_check
add_call_chain(<<d,BOOLEAN,b,D,B,b,e>>)
bool_value (false)
add_class(a)
add_command("a", "A", <<["e", "INTEGER"]>>)
add_query("A", "D", <<["A", "BOOLEAN"], ["d", "A"], ["d", "BOOLEAN"], ["e", "INTEGER"], ["C", "c"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["a", "INTEGER"], ["e", "INTEGER"]>>, "b")
add_command("a", "a", <<["e", "INTEGER"], ["C", "BOOLEAN"]>>)
numerical_negation
add_call_chain(<<C,b,a,BOOLEAN,B>>)
add_attribute("A", "INTEGER", "c")
generate_java_code
add_call_chain(<<B,D,INTEGER,B,d,d,d,D,INTEGER>>)
add_class(INTEGER)
int_value (12)
disjunction
add_query("B", "C", <<["C", "INTEGER"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["INTEGER", "INTEGER"], ["A", "a"], ["B", "INTEGER"], ["e", "BOOLEAN"]>>, "C")
add_call_chain(<<A,B,d,C,e,BOOLEAN>>)
type_check
logical_negation
bool_value (true)
add_command("d", "b", <<["e", "INTEGER"], ["c", "BOOLEAN"], ["d", "INTEGER"], ["B", "INTEGER"], ["C", "BOOLEAN"]>>)
generate_java_code
add_attribute("d", "INTEGER", "BOOLEAN")
type_check
type_check
add_query("d", "D", <<["INTEGER", "INTEGER"], ["B", "BOOLEAN"], ["D", "INTEGER"]>>, "D")
add_query("D", "D", <<["d", "D"], ["a", "BOOLEAN"], ["INTEGER", "A"], ["BOOLEAN", "INTEGER"], ["b", "INTEGER"], ["a", "INTEGER"]>>, "B")
add_query("d", "b", <<["INTEGER", "INTEGER"], ["e", "INTEGER"], ["C", "B"], ["b", "BOOLEAN"]>>, "B")
addition
numerical_negation
add_query("b", "D", <<["C", "INTEGER"], ["a", "BOOLEAN"], ["a", "c"], ["c", "INTEGER"], ["C", "BOOLEAN"], ["D", "C"]>>, "B")
equals
bool_value (false)
int_value (49)
bool_value (false)
int_value (26)
type_check
conjunction
add_command("D", "a", <<["a", "INTEGER"], ["a", "INTEGER"]>>)
generate_java_code
add_command("d", "e", <<["BOOLEAN", "BOOLEAN"], ["A", "A"], ["d", "INTEGER"]>>)
logical_negation
add_call_chain(<<INTEGER,B,D,c,e,D,c>>)
add_call_chain(<<D,c>>)
add_command("e", "b", <<["D", "BOOLEAN"], ["C", "BOOLEAN"]>>)
bool_value (false)
add_query("INTEGER", "C", <<["b", "BOOLEAN"], ["D", "a"], ["INTEGER", "b"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "b"], ["e", "INTEGER"], ["d", "INTEGER"], ["INTEGER", "INTEGER"]>>, "D")
numerical_negation
numerical_negation
add_query("b", "D", <<["D", "INTEGER"], ["e", "BOOLEAN"], ["c", "BOOLEAN"], ["e", "BOOLEAN"], ["INTEGER", "INTEGER"], ["C", "C"], ["A", "B"], ["c", "INTEGER"]>>, "a")
add_query("a", "B", <<["a", "INTEGER"], ["C", "INTEGER"]>>, "d")
logical_negation
disjunction
int_value (17)
add_call_chain(<<BOOLEAN,B,e,e,B,d,C>>)
add_command("c", "C", <<["a", "b"], ["A", "BOOLEAN"], ["b", "INTEGER"], ["INTEGER", "INTEGER"], ["e", "B"], ["e", "BOOLEAN"], ["b", "BOOLEAN"]>>)
add_call_chain(<<C,C,C,D,c,c>>)
int_value (33)
bool_value (false)
add_command("a", "C", <<["d", "INTEGER"], ["C", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["D", "BOOLEAN"], ["a", "C"]>>)
generate_java_code
numerical_negation
quotient
add_attribute("A", "D", "BOOLEAN")
numerical_negation
bool_value (false)
int_value (49)
type_check
int_value (28)
numerical_negation
logical_negation
add_call_chain(<<b,e,C>>)
subtraction
add_attribute("b", "C", "B")
bool_value (false)
int_value (16)
bool_value (true)
add_query("C", "e", <<["C", "c"], ["B", "INTEGER"], ["A", "INTEGER"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["d", "INTEGER"], ["d", "BOOLEAN"]>>, "D")
numerical_negation
add_query("C", "d", <<["e", "BOOLEAN"], ["C", "D"], ["C", "c"], ["c", "D"]>>, "A")
bool_value (true)
add_call_chain(<<d,D,e,a,B>>)
logical_negation
numerical_negation
add_call_chain(<<D,B>>)
numerical_negation
logical_negation
add_query("C", "INTEGER", <<["B", "a"], ["B", "INTEGER"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "BOOLEAN"]>>, "c")
add_class(C)
int_value (49)
add_attribute("A", "d", "BOOLEAN")
add_call_chain(<<a,A,BOOLEAN,e,D,B,a>>)
generate_java_code
add_command("D", "b", <<["INTEGER", "INTEGER"], ["e", "INTEGER"], ["d", "INTEGER"], ["C", "INTEGER"], ["b", "BOOLEAN"], ["d", "D"]>>)
add_command("A", "C", <<["D", "a"], ["C", "BOOLEAN"], ["BOOLEAN", "c"], ["B", "INTEGER"], ["D", "INTEGER"], ["B", "D"]>>)
add_call_chain(<<A,d,BOOLEAN>>)
bool_value (false)
logical_negation
add_command("A", "A", <<["e", "a"], ["b", "BOOLEAN"], ["c", "B"], ["INTEGER", "b"], ["a", "A"], ["e", "c"]>>)
add_attribute("d", "a", "c")
int_value (5)
numerical_negation
add_call_chain(<<C,C,b>>)
conjunction
add_call_chain(<<d,b>>)
add_attribute("d", "c", "c")
numerical_negation
type_check
add_call_chain(<<B,c,c,BOOLEAN,C,c,D>>)
addition
generate_java_code
bool_value (false)
add_attribute("A", "D", "BOOLEAN")
type_check
less_than
generate_java_code
generate_java_code
multiplication
add_attribute("B", "A", "INTEGER")
add_call_chain(<<e>>)
add_attribute("B", "a", "D")
greater_than
generate_java_code
addition
addition
add_command("C", "INTEGER", <<["d", "INTEGER"], ["D", "INTEGER"], ["b", "INTEGER"], ["D", "e"], ["c", "C"]>>)
add_call_chain(<<b,INTEGER,C,e,a,e,b>>)
add_command("A", "INTEGER", <<["A", "A"], ["d", "d"], ["b", "BOOLEAN"], ["c", "e"]>>)
add_call_chain(<<B,B,b,A,BOOLEAN,C>>)
add_command("C", "d", <<["A", "A"], ["D", "INTEGER"], ["c", "INTEGER"], ["B", "INTEGER"], ["c", "BOOLEAN"], ["d", "C"], ["d", "BOOLEAN"], ["b", "INTEGER"]>>)
type_check
bool_value (false)
add_call_chain(<<c,c,D>>)
add_class(A)
add_query("BOOLEAN", "D", <<["c", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "INTEGER"], ["B", "INTEGER"], ["B", "a"], ["e", "BOOLEAN"], ["c", "BOOLEAN"]>>, "b")
add_call_chain(<<B,INTEGER,e,D>>)
less_than
add_attribute("a", "A", "INTEGER")
equals
less_than
int_value (46)
int_value (28)
generate_java_code
subtraction
generate_java_code
add_attribute("C", "d", "INTEGER")
add_attribute("B", "C", "A")
int_value (3)
add_command("C", "a", <<["e", "INTEGER"], ["INTEGER", "e"], ["B", "BOOLEAN"]>>)
numerical_negation
numerical_negation
add_call_chain(<<D,B,c,BOOLEAN,b,e,D>>)
int_value (23)
int_value (8)
add_call_chain(<<c,D,b,INTEGER,BOOLEAN>>)
int_value (39)
