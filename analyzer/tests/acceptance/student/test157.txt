disjunction
add_call_chain(<<C,b,BOOLEAN>>)
add_command("b", "BOOLEAN", <<["e", "a"], ["b", "BOOLEAN"], ["a", "c"], ["B", "d"], ["INTEGER", "BOOLEAN"]>>)
add_call_chain(<<a,A,D>>)
less_than
greater_than
bool_value (true)
add_command("C", "B", <<["c", "BOOLEAN"]>>)
bool_value (true)
add_attribute("a", "d", "C")
logical_negation
logical_negation
add_class(BOOLEAN)
add_call_chain(<<b,e,A,e,A,A,d,c>>)
add_call_chain(<<e,e,D,B,A,e>>)
numerical_negation
add_call_chain(<<b,a,A>>)
int_value (47)
add_command("b", "c", <<["INTEGER", "BOOLEAN"], ["B", "C"], ["b", "BOOLEAN"], ["a", "INTEGER"], ["A", "INTEGER"], ["b", "INTEGER"], ["INTEGER", "INTEGER"], ["e", "BOOLEAN"], ["C", "INTEGER"]>>)
numerical_negation
int_value (8)
logical_negation
add_attribute("A", "e", "BOOLEAN")
numerical_negation
generate_java_code
int_value (48)
add_call_chain(<<c,C,C,BOOLEAN,b>>)
bool_value (true)
bool_value (false)
quotient
add_command("d", "A", <<["e", "C"], ["d", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["D", "INTEGER"], ["e", "BOOLEAN"], ["C", "e"]>>)
add_query("d", "c", <<["D", "a"], ["B", "BOOLEAN"], ["INTEGER", "INTEGER"], ["B", "INTEGER"], ["a", "BOOLEAN"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["BOOLEAN", "a"], ["D", "BOOLEAN"]>>, "D")
int_value (23)
conjunction
logical_negation
add_attribute("e", "a", "c")
add_query("INTEGER", "A", <<["c", "BOOLEAN"], ["b", "INTEGER"], ["e", "d"], ["b", "INTEGER"], ["c", "d"], ["B", "b"], ["A", "BOOLEAN"], ["c", "D"], ["a", "BOOLEAN"]>>, "D")
int_value (23)
add_call_chain(<<A,d,C,B,d,BOOLEAN,D,a,c>>)
numerical_negation
logical_negation
add_query("b", "a", <<["D", "BOOLEAN"], ["d", "INTEGER"]>>, "a")
add_command("C", "C", <<["BOOLEAN", "D"], ["A", "INTEGER"], ["BOOLEAN", "c"], ["b", "BOOLEAN"]>>)
add_command("a", "A", <<["C", "BOOLEAN"], ["INTEGER", "d"], ["e", "b"], ["e", "INTEGER"], ["b", "BOOLEAN"], ["D", "BOOLEAN"], ["INTEGER", "e"], ["BOOLEAN", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>)
add_call_chain(<<a,A,e,A,D>>)
int_value (47)
add_class(C)
type_check
bool_value (false)
add_call_chain(<<INTEGER,d,C,e,d,c,c,INTEGER,e>>)
add_query("e", "B", <<["c", "a"], ["B", "INTEGER"], ["B", "D"], ["D", "INTEGER"], ["c", "INTEGER"], ["d", "b"]>>, "c")
less_than
conjunction
type_check
less_than
add_call_chain(<<B,D,A,A,C,D,a,INTEGER,e>>)
add_attribute("C", "INTEGER", "INTEGER")
numerical_negation
disjunction
add_call_chain(<<d>>)
add_attribute("C", "a", "INTEGER")
addition
logical_negation
int_value (34)
add_attribute("D", "BOOLEAN", "INTEGER")
add_command("B", "C", <<["INTEGER", "BOOLEAN"], ["D", "c"], ["B", "INTEGER"], ["A", "INTEGER"], ["e", "BOOLEAN"], ["b", "BOOLEAN"], ["e", "INTEGER"], ["a", "BOOLEAN"]>>)
add_command("b", "a", <<["BOOLEAN", "BOOLEAN"], ["d", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["A", "BOOLEAN"]>>)
int_value (34)
add_query("D", "C", <<["INTEGER", "BOOLEAN"], ["B", "INTEGER"], ["B", "D"], ["e", "BOOLEAN"], ["b", "INTEGER"], ["d", "BOOLEAN"], ["A", "INTEGER"]>>, "a")
add_query("B", "a", <<["a", "INTEGER"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["d", "B"], ["BOOLEAN", "BOOLEAN"]>>, "c")
bool_value (true)
add_attribute("c", "b", "D")
generate_java_code
disjunction
generate_java_code
add_call_chain(<<d>>)
add_class(a)
add_call_chain(<<d,A,b,C,BOOLEAN,B,b,d,e>>)
add_attribute("c", "B", "BOOLEAN")
disjunction
add_attribute("C", "e", "BOOLEAN")
add_query("c", "B", <<["INTEGER", "A"], ["e", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "INTEGER"], ["d", "BOOLEAN"], ["INTEGER", "e"]>>, "BOOLEAN")
numerical_negation
bool_value (false)
add_call_chain(<<c,INTEGER>>)
int_value (15)
add_call_chain(<<B,INTEGER,A,D>>)
quotient
modulo
add_call_chain(<<B,D,D,A>>)
add_call_chain(<<C,C,d,C,B,B,D,b,BOOLEAN>>)
add_call_chain(<<e,a,A,INTEGER,b,A,b,INTEGER>>)
add_class(b)
add_command("BOOLEAN", "a", <<["a", "b"], ["c", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "INTEGER"]>>)
add_attribute("a", "D", "a")
numerical_negation
add_command("C", "e", <<["A", "BOOLEAN"], ["e", "INTEGER"], ["d", "BOOLEAN"]>>)
add_command("D", "C", <<["B", "INTEGER"], ["C", "INTEGER"]>>)
disjunction
add_call_chain(<<D>>)
add_command("e", "BOOLEAN", <<["a", "c"], ["C", "BOOLEAN"], ["D", "C"], ["a", "BOOLEAN"]>>)
add_call_chain(<<a,b,D,C,C>>)
bool_value (true)
add_query("INTEGER", "A", <<["c", "BOOLEAN"]>>, "A")
add_command("c", "B", <<["BOOLEAN", "INTEGER"], ["D", "INTEGER"], ["e", "d"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["d", "BOOLEAN"]>>)
int_value (38)
add_call_chain(<<A,A,B,b,BOOLEAN>>)
logical_negation
bool_value (true)
add_call_chain(<<A,e,A,a,a,C,a>>)
add_command("d", "D", <<["C", "INTEGER"], ["c", "BOOLEAN"], ["A", "INTEGER"], ["A", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["C", "INTEGER"], ["C", "a"], ["d", "INTEGER"], ["A", "B"]>>)
int_value (46)
add_attribute("B", "c", "INTEGER")
add_command("a", "B", <<["a", "d"]>>)
subtraction
int_value (45)
numerical_negation
disjunction
addition
add_call_chain(<<BOOLEAN,C,A,INTEGER,C,D,a,d>>)
add_command("d", "c", <<["B", "BOOLEAN"]>>)
generate_java_code
logical_negation
add_call_chain(<<C,B,b,B,a,a,d>>)
disjunction
bool_value (true)
add_query("D", "e", <<["d", "INTEGER"], ["INTEGER", "D"], ["C", "INTEGER"], ["A", "A"], ["C", "INTEGER"], ["D", "c"], ["C", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>, "c")
add_class(BOOLEAN)
bool_value (false)
add_attribute("C", "c", "INTEGER")
type_check
add_call_chain(<<a,D,A,B>>)
add_query("A", "B", <<["INTEGER", "BOOLEAN"], ["a", "INTEGER"], ["d", "BOOLEAN"], ["a", "d"], ["A", "BOOLEAN"], ["D", "INTEGER"], ["e", "INTEGER"], ["A", "INTEGER"], ["A", "BOOLEAN"]>>, "a")
disjunction
add_query("c", "C", <<["INTEGER", "INTEGER"], ["c", "BOOLEAN"], ["D", "INTEGER"], ["c", "INTEGER"], ["b", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "a"]>>, "e")
type_check
numerical_negation
add_call_chain(<<e,c,B,C,e,e,INTEGER,B,b>>)
add_class(A)
logical_negation
logical_negation
disjunction
int_value (34)
add_query("B", "C", <<["B", "INTEGER"], ["a", "a"], ["b", "INTEGER"], ["D", "INTEGER"], ["B", "BOOLEAN"], ["b", "BOOLEAN"], ["d", "BOOLEAN"]>>, "B")
disjunction
add_attribute("c", "C", "c")
type_check
add_attribute("BOOLEAN", "D", "INTEGER")
disjunction
add_attribute("a", "C", "INTEGER")
add_query("a", "c", <<["c", "BOOLEAN"], ["C", "INTEGER"], ["A", "INTEGER"], ["e", "INTEGER"], ["B", "INTEGER"], ["b", "INTEGER"], ["e", "C"], ["d", "INTEGER"], ["D", "INTEGER"]>>, "e")
logical_negation
logical_negation
add_call_chain(<<a,a,A,A,INTEGER,B,C>>)
bool_value (true)
type_check
bool_value (false)
numerical_negation
generate_java_code
add_command("d", "D", <<["BOOLEAN", "INTEGER"]>>)
int_value (45)
add_call_chain(<<A,b,b,BOOLEAN,e>>)
add_attribute("D", "D", "BOOLEAN")
add_call_chain(<<c,a,A,BOOLEAN,D,d,b>>)
int_value (9)
add_query("c", "B", <<["e", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "INTEGER"], ["D", "BOOLEAN"]>>, "C")
int_value (43)
generate_java_code
logical_negation
numerical_negation
int_value (48)
type_check
numerical_negation
int_value (22)
add_command("C", "B", <<["e", "b"], ["C", "INTEGER"]>>)
add_query("a", "A", <<["A", "BOOLEAN"], ["c", "INTEGER"], ["B", "BOOLEAN"], ["BOOLEAN", "e"], ["B", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "INTEGER"]>>, "A")
add_query("b", "B", <<["d", "INTEGER"], ["C", "c"], ["A", "A"], ["d", "BOOLEAN"], ["b", "a"]>>, "B")
add_class(a)
bool_value (false)
add_class(a)
add_call_chain(<<C,B>>)
generate_java_code
numerical_negation
add_call_chain(<<INTEGER,INTEGER,a,C,e>>)
less_than
numerical_negation
add_query("D", "C", <<["D", "D"], ["b", "INTEGER"]>>, "B")
add_query("D", "e", <<["d", "INTEGER"], ["b", "INTEGER"], ["C", "INTEGER"]>>, "b")
generate_java_code
generate_java_code
add_query("c", "A", <<["C", "BOOLEAN"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["a", "INTEGER"], ["B", "INTEGER"], ["d", "d"], ["INTEGER", "C"]>>, "c")
add_attribute("C", "BOOLEAN", "D")
add_call_chain(<<D>>)
add_attribute("c", "B", "e")
conjunction
numerical_negation
int_value (25)
add_command("d", "c", <<["BOOLEAN", "A"], ["e", "B"], ["a", "BOOLEAN"], ["C", "A"], ["d", "b"], ["b", "A"], ["d", "d"], ["D", "BOOLEAN"]>>)
int_value (14)
