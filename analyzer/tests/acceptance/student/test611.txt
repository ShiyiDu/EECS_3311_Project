int_value (11)
int_value (35)
bool_value (false)
add_query("c", "c", <<["a", "a"], ["d", "INTEGER"], ["C", "D"], ["B", "b"], ["INTEGER", "b"], ["A", "INTEGER"], ["e", "INTEGER"], ["b", "INTEGER"]>>, "D")
numerical_negation
logical_negation
add_class(C)
add_attribute("d", "D", "BOOLEAN")
generate_java_code
add_call_chain(<<d,e,C,INTEGER,INTEGER,c,C>>)
add_call_chain(<<d,a>>)
addition
add_command("D", "B", <<["e", "BOOLEAN"], ["C", "BOOLEAN"]>>)
add_call_chain(<<c,C,BOOLEAN,d,D>>)
add_query("d", "e", <<["B", "BOOLEAN"]>>, "B")
add_class(D)
add_command("d", "D", <<["B", "d"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["e", "INTEGER"], ["A", "BOOLEAN"], ["a", "BOOLEAN"]>>)
addition
less_than
bool_value (false)
int_value (47)
int_value (43)
greater_than
add_call_chain(<<B,c,d,C,D,d,c>>)
type_check
less_than
logical_negation
add_command("D", "a", <<["a", "B"], ["b", "BOOLEAN"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "BOOLEAN"]>>)
add_call_chain(<<A,e,e,d,B,b,c,D,D>>)
add_call_chain(<<e,D,B>>)
generate_java_code
add_command("e", "D", <<["D", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "A"], ["a", "D"], ["B", "INTEGER"]>>)
numerical_negation
add_attribute("b", "C", "a")
add_call_chain(<<b,D,e,c,A,A,INTEGER,c,C>>)
numerical_negation
add_call_chain(<<c,a,B,d,INTEGER>>)
add_class(D)
add_query("C", "D", <<["c", "d"], ["b", "BOOLEAN"], ["D", "INTEGER"], ["D", "C"], ["C", "BOOLEAN"]>>, "BOOLEAN")
less_than
add_call_chain(<<b,C,c,D,e,e,b,D,b>>)
generate_java_code
logical_negation
bool_value (true)
add_attribute("b", "e", "d")
bool_value (false)
generate_java_code
add_query("c", "c", <<["D", "BOOLEAN"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "D"], ["INTEGER", "D"]>>, "A")
greater_than
add_call_chain(<<BOOLEAN,D,D,D,B,B,D,B>>)
add_call_chain(<<e,A,C>>)
add_query("a", "b", <<["D", "INTEGER"], ["a", "b"], ["b", "B"], ["d", "A"], ["D", "INTEGER"], ["c", "INTEGER"], ["c", "INTEGER"], ["A", "BOOLEAN"]>>, "B")
bool_value (true)
bool_value (false)
bool_value (false)
logical_negation
add_query("INTEGER", "c", <<["D", "INTEGER"], ["d", "INTEGER"], ["C", "INTEGER"], ["BOOLEAN", "C"], ["e", "b"], ["c", "BOOLEAN"]>>, "C")
add_attribute("b", "D", "BOOLEAN")
add_attribute("b", "d", "BOOLEAN")
add_query("d", "a", <<["B", "c"], ["A", "B"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["d", "BOOLEAN"], ["c", "INTEGER"], ["d", "b"], ["B", "INTEGER"], ["b", "INTEGER"]>>, "A")
add_attribute("INTEGER", "c", "A")
less_than
numerical_negation
type_check
add_command("e", "c", <<["e", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "A"], ["a", "BOOLEAN"]>>)
equals
bool_value (true)
add_attribute("D", "B", "INTEGER")
logical_negation
greater_than
add_attribute("e", "INTEGER", "A")
add_call_chain(<<A,e,a,B,D,d,e,INTEGER>>)
type_check
add_attribute("c", "A", "INTEGER")
add_call_chain(<<c,INTEGER,B,e,d>>)
add_class(INTEGER)
conjunction
add_call_chain(<<B,c,C,C,c,A,C,d>>)
add_call_chain(<<d>>)
generate_java_code
type_check
add_command("INTEGER", "c", <<["BOOLEAN", "A"]>>)
add_command("b", "e", <<["c", "INTEGER"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["a", "BOOLEAN"]>>)
modulo
type_check
bool_value (true)
multiplication
type_check
add_attribute("D", "e", "INTEGER")
add_command("b", "b", <<["B", "b"], ["B", "INTEGER"], ["B", "BOOLEAN"], ["C", "INTEGER"], ["A", "INTEGER"], ["a", "D"], ["A", "a"], ["INTEGER", "INTEGER"]>>)
add_attribute("D", "b", "BOOLEAN")
numerical_negation
add_query("e", "BOOLEAN", <<["e", "BOOLEAN"]>>, "d")
equals
add_call_chain(<<INTEGER,A,C,d>>)
add_query("A", "A", <<["C", "d"], ["B", "e"], ["b", "C"], ["A", "BOOLEAN"], ["b", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "INTEGER"]>>, "a")
add_command("b", "INTEGER", <<["d", "BOOLEAN"], ["B", "B"], ["c", "BOOLEAN"]>>)
generate_java_code
add_command("e", "a", <<["e", "B"], ["D", "c"], ["a", "BOOLEAN"], ["B", "INTEGER"], ["D", "b"], ["INTEGER", "BOOLEAN"]>>)
add_call_chain(<<B,c>>)
generate_java_code
add_call_chain(<<B,C,A,A,C>>)
add_class(c)
type_check
add_command("D", "INTEGER", <<["c", "INTEGER"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["INTEGER", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "INTEGER"]>>)
add_call_chain(<<D,A,c,b>>)
add_call_chain(<<D,c>>)
bool_value (true)
add_command("B", "d", <<["a", "BOOLEAN"], ["b", "BOOLEAN"]>>)
add_attribute("BOOLEAN", "INTEGER", "INTEGER")
add_attribute("D", "D", "INTEGER")
add_command("A", "C", <<["B", "INTEGER"], ["c", "INTEGER"], ["a", "c"], ["A", "INTEGER"]>>)
add_attribute("BOOLEAN", "d", "BOOLEAN")
int_value (27)
add_call_chain(<<b,d,C,B,c,a,BOOLEAN,c,INTEGER>>)
int_value (21)
add_call_chain(<<d,d,e,D,b>>)
add_query("b", "D", <<["INTEGER", "INTEGER"]>>, "b")
disjunction
int_value (49)
add_call_chain(<<c,d,C,B,e,INTEGER>>)
add_call_chain(<<c,BOOLEAN,A,e,e>>)
conjunction
numerical_negation
generate_java_code
generate_java_code
bool_value (false)
type_check
conjunction
add_call_chain(<<BOOLEAN,B,D,b,a>>)
add_call_chain(<<e,D,a>>)
add_command("BOOLEAN", "C", <<["C", "BOOLEAN"], ["D", "B"], ["b", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["d", "A"], ["a", "BOOLEAN"]>>)
add_command("INTEGER", "b", <<["A", "BOOLEAN"], ["B", "C"], ["b", "B"], ["e", "BOOLEAN"]>>)
modulo
add_call_chain(<<c,e,C,a>>)
add_query("D", "D", <<["d", "c"], ["A", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "BOOLEAN"]>>, "D")
bool_value (false)
subtraction
numerical_negation
add_call_chain(<<d,d,C,d,e,B,B>>)
addition
int_value (13)
numerical_negation
add_class(a)
add_attribute("b", "B", "INTEGER")
logical_negation
int_value (40)
bool_value (false)
add_attribute("b", "d", "BOOLEAN")
add_query("A", "B", <<["d", "INTEGER"], ["BOOLEAN", "INTEGER"], ["C", "INTEGER"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "INTEGER"]>>, "D")
disjunction
int_value (1)
generate_java_code
generate_java_code
add_command("d", "B", <<["e", "INTEGER"], ["C", "d"], ["c", "A"], ["e", "INTEGER"], ["A", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["D", "d"], ["BOOLEAN", "INTEGER"]>>)
add_command("INTEGER", "A", <<["d", "BOOLEAN"], ["b", "INTEGER"], ["C", "INTEGER"], ["C", "INTEGER"], ["c", "B"], ["b", "d"], ["A", "INTEGER"]>>)
disjunction
add_call_chain(<<c,BOOLEAN,b>>)
add_class(a)
bool_value (true)
add_call_chain(<<B,d,D>>)
bool_value (true)
less_than
logical_negation
equals
add_query("e", "d", <<["b", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "INTEGER"]>>, "d")
less_than
greater_than
add_query("b", "a", <<["d", "INTEGER"]>>, "D")
add_call_chain(<<C>>)
generate_java_code
add_command("C", "D", <<["A", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["b", "B"], ["INTEGER", "BOOLEAN"], ["e", "A"], ["C", "INTEGER"]>>)
add_class(C)
add_call_chain(<<C,c,c,BOOLEAN,e>>)
add_query("A", "e", <<["D", "BOOLEAN"], ["C", "INTEGER"], ["B", "c"], ["D", "b"], ["C", "A"], ["B", "INTEGER"], ["b", "e"], ["C", "e"]>>, "a")
add_call_chain(<<A,D,a,B,e,BOOLEAN,d,BOOLEAN,b>>)
add_command("d", "A", <<["BOOLEAN", "INTEGER"], ["e", "a"], ["A", "BOOLEAN"], ["b", "INTEGER"], ["A", "B"], ["D", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>)
type_check
add_call_chain(<<b,C,a,d,e,e,a>>)
generate_java_code
quotient
add_attribute("C", "BOOLEAN", "A")
addition
add_command("b", "d", <<["INTEGER", "BOOLEAN"], ["C", "INTEGER"], ["b", "b"]>>)
add_call_chain(<<e,b,BOOLEAN,INTEGER,d,c,c,d,a>>)
logical_negation
add_call_chain(<<e,a,b,B,D,e,BOOLEAN,c>>)
int_value (8)
int_value (1)
add_call_chain(<<A,A,e,A,B,b,d,C>>)
int_value (8)
add_class(b)
add_query("a", "d", <<["e", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["INTEGER", "b"], ["d", "BOOLEAN"], ["A", "BOOLEAN"]>>, "a")
generate_java_code
conjunction
numerical_negation
type_check
bool_value (false)
add_command("D", "b", <<["b", "INTEGER"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "INTEGER"], ["e", "INTEGER"], ["C", "INTEGER"], ["BOOLEAN", "A"], ["INTEGER", "INTEGER"], ["A", "BOOLEAN"]>>)
add_command("b", "B", <<["A", "b"], ["e", "INTEGER"], ["D", "BOOLEAN"], ["e", "B"], ["e", "D"], ["A", "INTEGER"], ["c", "b"]>>)
conjunction
bool_value (true)
numerical_negation
add_command("BOOLEAN", "e", <<["A", "BOOLEAN"], ["D", "c"], ["a", "BOOLEAN"]>>)
logical_negation
generate_java_code
conjunction
add_query("B", "C", <<["c", "INTEGER"], ["BOOLEAN", "A"], ["C", "INTEGER"]>>, "D")
multiplication
add_call_chain(<<D>>)
add_command("b", "b", <<["D", "INTEGER"], ["e", "INTEGER"]>>)
numerical_negation
add_call_chain(<<C,e,B,B,C,e,b,A,BOOLEAN>>)
