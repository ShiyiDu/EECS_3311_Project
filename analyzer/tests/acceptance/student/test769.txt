add_call_chain(<<d,D>>)
add_query("C", "a", <<["C", "INTEGER"], ["b", "INTEGER"], ["D", "e"], ["a", "BOOLEAN"], ["A", "b"], ["D", "INTEGER"]>>, "c")
int_value (37)
logical_negation
add_query("a", "e", <<["D", "INTEGER"], ["c", "BOOLEAN"]>>, "B")
add_command("a", "D", <<["c", "C"], ["e", "b"], ["c", "d"], ["c", "BOOLEAN"], ["D", "D"], ["e", "INTEGER"], ["B", "INTEGER"]>>)
less_than
add_call_chain(<<d,b>>)
type_check
greater_than
bool_value (false)
disjunction
add_query("B", "a", <<["B", "d"], ["D", "INTEGER"], ["A", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "BOOLEAN"]>>, "A")
add_call_chain(<<D,a,c,e>>)
add_call_chain(<<C,b,d,C>>)
addition
add_attribute("C", "A", "BOOLEAN")
conjunction
disjunction
bool_value (false)
add_call_chain(<<e,A,A>>)
add_query("D", "c", <<["b", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "BOOLEAN"], ["INTEGER", "INTEGER"], ["C", "INTEGER"]>>, "b")
int_value (19)
add_attribute("D", "a", "BOOLEAN")
logical_negation
logical_negation
add_call_chain(<<b,c,e,d,B>>)
add_query("A", "a", <<["A", "INTEGER"], ["A", "B"]>>, "BOOLEAN")
int_value (5)
logical_negation
numerical_negation
add_call_chain(<<e,e,B,INTEGER,a>>)
add_attribute("b", "D", "INTEGER")
add_command("A", "BOOLEAN", <<["A", "BOOLEAN"], ["e", "INTEGER"], ["C", "e"], ["a", "BOOLEAN"], ["c", "BOOLEAN"]>>)
int_value (28)
add_query("c", "B", <<["D", "d"]>>, "A")
add_call_chain(<<e,B,c>>)
add_call_chain(<<a,B,INTEGER,D,c,D,c>>)
numerical_negation
modulo
int_value (46)
add_attribute("b", "c", "BOOLEAN")
add_attribute("INTEGER", "INTEGER", "BOOLEAN")
bool_value (false)
generate_java_code
add_query("d", "B", <<["c", "INTEGER"], ["A", "BOOLEAN"], ["C", "b"], ["C", "BOOLEAN"]>>, "c")
add_command("c", "a", <<["C", "INTEGER"], ["B", "BOOLEAN"], ["D", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["b", "INTEGER"], ["c", "B"], ["C", "BOOLEAN"]>>)
subtraction
bool_value (true)
add_query("c", "C", <<["a", "a"], ["A", "d"], ["e", "INTEGER"], ["B", "INTEGER"], ["D", "BOOLEAN"]>>, "c")
add_call_chain(<<A,d,d,INTEGER,B,D,c,A,A>>)
equals
add_call_chain(<<D,d,INTEGER,e>>)
add_call_chain(<<INTEGER>>)
modulo
int_value (31)
add_class(D)
addition
add_command("B", "B", <<["c", "INTEGER"], ["B", "B"]>>)
add_attribute("D", "b", "D")
type_check
add_attribute("D", "A", "BOOLEAN")
add_attribute("a", "d", "BOOLEAN")
add_call_chain(<<a,B,D,B,A,b,A,INTEGER,INTEGER>>)
type_check
add_call_chain(<<C,e,a,d,INTEGER,INTEGER,e,a,A>>)
greater_than
subtraction
int_value (24)
disjunction
add_call_chain(<<A,D>>)
generate_java_code
bool_value (true)
add_call_chain(<<b>>)
conjunction
logical_negation
add_call_chain(<<c,b,A>>)
generate_java_code
int_value (34)
multiplication
generate_java_code
add_call_chain(<<B,b,a,a,c,C,d,a>>)
add_call_chain(<<b,d,d,B>>)
add_attribute("a", "C", "BOOLEAN")
quotient
add_attribute("e", "b", "BOOLEAN")
add_call_chain(<<e,b,e,D>>)
add_query("D", "a", <<["d", "D"], ["C", "INTEGER"], ["d", "b"], ["d", "INTEGER"], ["e", "BOOLEAN"]>>, "d")
type_check
type_check
add_query("b", "d", <<["c", "INTEGER"], ["A", "INTEGER"], ["c", "c"], ["C", "INTEGER"]>>, "b")
add_command("BOOLEAN", "c", <<["c", "BOOLEAN"], ["D", "c"]>>)
add_query("d", "B", <<["D", "INTEGER"], ["A", "BOOLEAN"], ["d", "BOOLEAN"], ["e", "INTEGER"], ["D", "A"]>>, "D")
add_command("B", "b", <<["a", "BOOLEAN"], ["b", "INTEGER"], ["A", "D"], ["B", "INTEGER"], ["B", "C"]>>)
int_value (44)
add_call_chain(<<B,b,B>>)
logical_negation
add_attribute("D", "A", "D")
add_call_chain(<<INTEGER,BOOLEAN,b,c,A,BOOLEAN,b,B,D>>)
conjunction
int_value (39)
logical_negation
add_attribute("b", "INTEGER", "INTEGER")
add_query("D", "D", <<["b", "INTEGER"], ["D", "d"], ["A", "A"], ["a", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "INTEGER"], ["e", "BOOLEAN"], ["c", "BOOLEAN"]>>, "B")
add_call_chain(<<e,B,INTEGER,A,INTEGER,B,a,a>>)
generate_java_code
add_query("a", "B", <<["B", "INTEGER"], ["c", "INTEGER"], ["D", "D"]>>, "D")
int_value (31)
type_check
logical_negation
conjunction
int_value (41)
numerical_negation
add_attribute("INTEGER", "C", "INTEGER")
int_value (22)
numerical_negation
add_call_chain(<<d,d,B,D,C>>)
bool_value (true)
add_query("B", "C", <<["d", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["B", "B"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "a"]>>, "a")
bool_value (false)
numerical_negation
generate_java_code
modulo
type_check
conjunction
add_class(e)
add_query("INTEGER", "e", <<["INTEGER", "e"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "B"], ["a", "d"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["d", "C"]>>, "d")
int_value (10)
add_call_chain(<<C,b,A>>)
bool_value (true)
conjunction
numerical_negation
add_attribute("C", "C", "BOOLEAN")
bool_value (false)
add_query("C", "B", <<["B", "INTEGER"], ["D", "B"]>>, "D")
add_class(a)
modulo
int_value (8)
add_command("C", "C", <<["C", "BOOLEAN"], ["D", "INTEGER"], ["INTEGER", "d"], ["b", "INTEGER"], ["d", "e"], ["d", "INTEGER"], ["c", "INTEGER"], ["INTEGER", "BOOLEAN"], ["INTEGER", "INTEGER"]>>)
add_command("c", "b", <<["e", "INTEGER"], ["INTEGER", "b"], ["a", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "B"], ["C", "d"], ["e", "BOOLEAN"]>>)
add_class(C)
disjunction
subtraction
add_call_chain(<<D,e>>)
add_call_chain(<<B,e,C>>)
bool_value (true)
int_value (13)
numerical_negation
int_value (18)
add_attribute("A", "B", "INTEGER")
bool_value (false)
numerical_negation
int_value (15)
logical_negation
bool_value (true)
add_class(a)
add_attribute("D", "e", "BOOLEAN")
add_call_chain(<<BOOLEAN,b,D,INTEGER,C,d,C,D,A>>)
equals
generate_java_code
addition
add_class(D)
add_command("D", "B", <<["C", "BOOLEAN"], ["BOOLEAN", "B"]>>)
generate_java_code
add_call_chain(<<e>>)
int_value (12)
add_command("C", "A", <<["B", "INTEGER"]>>)
less_than
equals
generate_java_code
add_call_chain(<<D,INTEGER,d,a,A,BOOLEAN,d,e>>)
add_command("c", "INTEGER", <<["c", "BOOLEAN"], ["b", "C"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["A", "A"], ["C", "BOOLEAN"], ["d", "BOOLEAN"], ["c", "BOOLEAN"]>>)
bool_value (true)
add_query("C", "A", <<["a", "INTEGER"], ["A", "A"], ["d", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["A", "a"], ["A", "b"], ["C", "A"]>>, "D")
int_value (31)
bool_value (true)
add_query("BOOLEAN", "a", <<["a", "BOOLEAN"]>>, "C")
numerical_negation
numerical_negation
numerical_negation
int_value (26)
logical_negation
add_command("C", "c", <<["INTEGER", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "INTEGER"]>>)
generate_java_code
add_query("C", "D", <<["D", "BOOLEAN"], ["B", "B"], ["b", "INTEGER"], ["BOOLEAN", "a"], ["C", "BOOLEAN"], ["C", "d"]>>, "D")
bool_value (false)
numerical_negation
