logical_negation
add_command("a", "INTEGER", <<["BOOLEAN", "BOOLEAN"]>>)
disjunction
generate_java_code
add_query("b", "D", <<["e", "INTEGER"], ["A", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "INTEGER"], ["B", "INTEGER"], ["c", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["a", "d"]>>, "D")
add_command("c", "c", <<["b", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "a"], ["d", "d"], ["A", "b"], ["e", "BOOLEAN"]>>)
bool_value (false)
subtraction
add_query("C", "D", <<["d", "BOOLEAN"], ["B", "C"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["INTEGER", "INTEGER"], ["e", "INTEGER"], ["e", "BOOLEAN"], ["B", "A"], ["BOOLEAN", "d"]>>, "C")
add_attribute("c", "B", "BOOLEAN")
int_value (25)
add_call_chain(<<a,e,D,B,c,a,b,D,C>>)
add_call_chain(<<C,c,A,a,c,c>>)
add_class(b)
add_call_chain(<<C,BOOLEAN>>)
bool_value (false)
multiplication
numerical_negation
equals
int_value (4)
add_call_chain(<<d,C,C,e>>)
add_call_chain(<<d,INTEGER>>)
add_call_chain(<<B,A>>)
add_command("D", "BOOLEAN", <<["c", "BOOLEAN"], ["d", "INTEGER"], ["d", "A"], ["C", "INTEGER"], ["a", "INTEGER"], ["A", "INTEGER"], ["d", "INTEGER"], ["INTEGER", "INTEGER"], ["d", "BOOLEAN"]>>)
less_than
add_attribute("d", "b", "b")
add_attribute("A", "C", "INTEGER")
logical_negation
numerical_negation
logical_negation
conjunction
add_call_chain(<<A,B,C,c>>)
bool_value (true)
disjunction
numerical_negation
logical_negation
int_value (37)
logical_negation
generate_java_code
add_attribute("e", "D", "A")
add_call_chain(<<A,e,B,C,BOOLEAN,INTEGER>>)
bool_value (true)
add_call_chain(<<e,d>>)
bool_value (false)
add_command("B", "A", <<["A", "BOOLEAN"], ["D", "INTEGER"], ["a", "B"], ["e", "BOOLEAN"], ["B", "INTEGER"], ["a", "B"], ["b", "D"], ["d", "INTEGER"]>>)
logical_negation
add_query("C", "d", <<["D", "INTEGER"], ["c", "INTEGER"], ["INTEGER", "INTEGER"], ["d", "b"]>>, "INTEGER")
add_command("d", "A", <<["D", "D"], ["b", "BOOLEAN"], ["A", "INTEGER"], ["d", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "BOOLEAN"], ["c", "INTEGER"], ["B", "INTEGER"], ["BOOLEAN", "INTEGER"]>>)
add_call_chain(<<D,B,A,D,C>>)
numerical_negation
add_query("B", "B", <<["D", "d"], ["e", "INTEGER"], ["B", "INTEGER"], ["c", "BOOLEAN"], ["b", "D"]>>, "B")
logical_negation
add_command("A", "A", <<["b", "INTEGER"], ["a", "INTEGER"]>>)
add_call_chain(<<D,B,D>>)
add_call_chain(<<e,A,A,A>>)
logical_negation
add_call_chain(<<A,c,B,C,D>>)
add_command("B", "d", <<["A", "BOOLEAN"], ["B", "INTEGER"], ["d", "BOOLEAN"]>>)
add_call_chain(<<e,c,B,d,D,b>>)
type_check
logical_negation
generate_java_code
generate_java_code
add_call_chain(<<b,D,D,INTEGER,d>>)
add_attribute("b", "BOOLEAN", "BOOLEAN")
add_query("BOOLEAN", "A", <<["D", "BOOLEAN"], ["INTEGER", "INTEGER"], ["A", "C"], ["C", "BOOLEAN"], ["d", "INTEGER"], ["c", "e"], ["d", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>, "B")
int_value (28)
add_attribute("d", "d", "INTEGER")
generate_java_code
int_value (40)
bool_value (true)
add_command("B", "e", <<["a", "BOOLEAN"], ["C", "e"], ["d", "INTEGER"], ["B", "BOOLEAN"], ["d", "B"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["A", "INTEGER"]>>)
add_query("INTEGER", "BOOLEAN", <<["A", "BOOLEAN"], ["A", "c"], ["b", "B"], ["e", "INTEGER"], ["c", "BOOLEAN"], ["a", "B"], ["INTEGER", "BOOLEAN"], ["A", "d"]>>, "B")
add_command("INTEGER", "e", <<["A", "BOOLEAN"], ["d", "INTEGER"], ["c", "c"]>>)
numerical_negation
add_call_chain(<<c,A,d,D,b,c,a,C,INTEGER>>)
add_call_chain(<<d,e,b,B,a,c,e,D>>)
add_class(c)
add_command("c", "B", <<["c", "BOOLEAN"], ["D", "B"], ["d", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "B"], ["A", "INTEGER"]>>)
type_check
add_call_chain(<<B,D,C,c,BOOLEAN,A>>)
add_query("INTEGER", "d", <<["b", "INTEGER"], ["e", "INTEGER"], ["a", "e"], ["c", "B"], ["INTEGER", "INTEGER"]>>, "D")
add_class(A)
numerical_negation
addition
add_call_chain(<<C>>)
add_attribute("D", "C", "BOOLEAN")
add_attribute("C", "C", "INTEGER")
add_attribute("d", "b", "INTEGER")
add_query("D", "b", <<["C", "BOOLEAN"], ["B", "INTEGER"], ["A", "D"], ["D", "INTEGER"], ["BOOLEAN", "INTEGER"]>>, "d")
numerical_negation
add_query("e", "C", <<["B", "INTEGER"]>>, "D")
greater_than
int_value (14)
int_value (26)
add_attribute("a", "A", "BOOLEAN")
add_command("D", "d", <<["c", "BOOLEAN"], ["D", "d"], ["C", "A"], ["a", "BOOLEAN"]>>)
equals
add_call_chain(<<A,e,a,A,BOOLEAN>>)
int_value (11)
add_command("a", "B", <<["C", "B"], ["D", "BOOLEAN"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["b", "BOOLEAN"]>>)
add_query("d", "e", <<["a", "BOOLEAN"], ["b", "INTEGER"], ["c", "C"], ["A", "INTEGER"]>>, "B")
add_attribute("b", "e", "c")
add_attribute("A", "B", "D")
add_query("D", "A", <<["B", "BOOLEAN"], ["D", "A"], ["D", "INTEGER"], ["BOOLEAN", "INTEGER"], ["d", "BOOLEAN"], ["C", "INTEGER"]>>, "C")
type_check
add_class(d)
logical_negation
add_query("a", "A", <<["e", "INTEGER"], ["INTEGER", "BOOLEAN"], ["e", "B"], ["INTEGER", "c"], ["a", "BOOLEAN"], ["e", "BOOLEAN"]>>, "a")
numerical_negation
logical_negation
add_query("A", "D", <<["c", "INTEGER"], ["D", "BOOLEAN"], ["A", "B"], ["INTEGER", "c"], ["C", "INTEGER"], ["d", "BOOLEAN"], ["c", "INTEGER"]>>, "e")
add_command("c", "B", <<["d", "INTEGER"]>>)
add_call_chain(<<e,D>>)
add_call_chain(<<e,D,c>>)
generate_java_code
bool_value (true)
int_value (8)
int_value (5)
numerical_negation
add_class(e)
add_query("A", "BOOLEAN", <<["e", "INTEGER"], ["c", "INTEGER"]>>, "b")
bool_value (true)
multiplication
add_query("BOOLEAN", "B", <<["C", "BOOLEAN"], ["INTEGER", "INTEGER"], ["a", "BOOLEAN"], ["b", "A"], ["d", "INTEGER"]>>, "d")
add_call_chain(<<D,b,c>>)
generate_java_code
add_attribute("B", "BOOLEAN", "BOOLEAN")
add_call_chain(<<A,C,A>>)
add_query("D", "C", <<["A", "e"], ["c", "BOOLEAN"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["D", "e"], ["c", "d"], ["D", "INTEGER"]>>, "B")
add_call_chain(<<D,d,e,b,B,C,c>>)
add_query("D", "d", <<["a", "INTEGER"], ["A", "BOOLEAN"], ["e", "INTEGER"], ["D", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "B"], ["C", "INTEGER"]>>, "d")
add_command("b", "c", <<["D", "INTEGER"], ["B", "INTEGER"], ["B", "C"], ["C", "B"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["BOOLEAN", "C"], ["B", "INTEGER"], ["e", "A"]>>)
add_query("a", "b", <<["a", "INTEGER"], ["C", "INTEGER"]>>, "C")
bool_value (true)
add_class(B)
add_call_chain(<<A,e,INTEGER>>)
bool_value (true)
add_command("c", "A", <<["D", "c"], ["c", "D"], ["a", "C"]>>)
numerical_negation
equals
add_query("B", "b", <<["B", "INTEGER"], ["a", "INTEGER"], ["A", "BOOLEAN"]>>, "INTEGER")
add_query("C", "B", <<["a", "INTEGER"], ["c", "INTEGER"], ["A", "BOOLEAN"]>>, "b")
disjunction
add_call_chain(<<a,a,d,a>>)
type_check
add_attribute("B", "A", "d")
type_check
multiplication
numerical_negation
conjunction
addition
type_check
int_value (38)
add_query("c", "d", <<["A", "BOOLEAN"], ["B", "INTEGER"]>>, "A")
add_command("B", "D", <<["BOOLEAN", "BOOLEAN"], ["c", "BOOLEAN"]>>)
add_call_chain(<<D,c,b,A,e,B,e,a>>)
add_command("b", "INTEGER", <<["a", "INTEGER"], ["D", "C"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["b", "INTEGER"], ["B", "BOOLEAN"], ["e", "INTEGER"], ["a", "BOOLEAN"]>>)
add_attribute("A", "a", "BOOLEAN")
add_call_chain(<<B,C,A,e,A>>)
add_class(C)
add_command("a", "C", <<["B", "BOOLEAN"], ["d", "c"], ["b", "b"]>>)
add_call_chain(<<b,D>>)
int_value (29)
logical_negation
subtraction
numerical_negation
numerical_negation
add_call_chain(<<C,C,A,B,D,e>>)
add_command("a", "A", <<["INTEGER", "INTEGER"], ["B", "c"]>>)
add_call_chain(<<D>>)
bool_value (false)
add_command("e", "BOOLEAN", <<["A", "b"], ["A", "a"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "a"], ["a", "C"], ["D", "C"], ["D", "B"]>>)
add_command("A", "e", <<["BOOLEAN", "D"], ["b", "BOOLEAN"]>>)
add_call_chain(<<d,A>>)
add_query("C", "a", <<["e", "INTEGER"], ["C", "INTEGER"], ["e", "INTEGER"], ["C", "INTEGER"], ["BOOLEAN", "A"], ["c", "B"], ["b", "C"], ["A", "BOOLEAN"]>>, "A")
logical_negation
add_query("b", "C", <<["b", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "C"], ["C", "BOOLEAN"]>>, "BOOLEAN")
modulo
bool_value (false)
logical_negation
add_attribute("e", "A", "INTEGER")
add_query("d", "INTEGER", <<["B", "C"]>>, "A")
numerical_negation
add_query("A", "B", <<["D", "BOOLEAN"]>>, "B")
bool_value (true)
add_call_chain(<<a,A,e,A,BOOLEAN,e,BOOLEAN>>)
type_check
add_call_chain(<<d,A,D,D,BOOLEAN,d,INTEGER>>)
add_attribute("B", "e", "b")
bool_value (false)
add_class(A)
generate_java_code
add_attribute("a", "A", "INTEGER")
int_value (44)
add_attribute("C", "a", "BOOLEAN")
bool_value (false)
bool_value (true)
add_call_chain(<<A,B,a,c,INTEGER,d>>)
add_attribute("A", "B", "d")
add_call_chain(<<e,c,a,d,e,C,D,b>>)
add_call_chain(<<C,a,d,C>>)
add_call_chain(<<e,d>>)
add_call_chain(<<B,b,A>>)
add_query("B", "C", <<["B", "C"]>>, "A")
less_than
logical_negation
add_attribute("c", "A", "BOOLEAN")
logical_negation
type_check
int_value (46)
add_call_chain(<<e,A>>)
add_attribute("b", "d", "BOOLEAN")
logical_negation
add_command("b", "a", <<["D", "INTEGER"], ["b", "BOOLEAN"], ["C", "d"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "D"], ["D", "d"], ["a", "c"]>>)
addition
bool_value (true)
numerical_negation
conjunction
conjunction
add_command("C", "A", <<["C", "BOOLEAN"], ["d", "INTEGER"], ["a", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "INTEGER"], ["C", "BOOLEAN"], ["b", "C"]>>)
type_check
add_call_chain(<<a,C>>)
int_value (12)
bool_value (true)
numerical_negation
generate_java_code
add_call_chain(<<B,D,D,C,a>>)
add_call_chain(<<D,c,a,INTEGER>>)
bool_value (true)
generate_java_code
bool_value (false)
quotient
add_call_chain(<<b,B>>)
add_call_chain(<<B,e>>)
numerical_negation
add_class(A)
add_call_chain(<<e,e,B,b,C>>)
multiplication
type_check
add_attribute("D", "INTEGER", "BOOLEAN")
conjunction
