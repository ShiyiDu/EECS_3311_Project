numerical_negation
add_class(B)
add_call_chain(<<b,e,C,B,B,INTEGER,B>>)
add_call_chain(<<a,e,BOOLEAN,d,C,d,B,d>>)
conjunction
add_call_chain(<<e,D,D,B,INTEGER,C,d>>)
conjunction
add_call_chain(<<A,A,B,C>>)
multiplication
add_call_chain(<<a,C>>)
add_call_chain(<<C,B,d,BOOLEAN,C>>)
logical_negation
int_value (36)
int_value (7)
add_attribute("D", "d", "BOOLEAN")
add_command("d", "INTEGER", <<["BOOLEAN", "BOOLEAN"], ["C", "B"], ["a", "BOOLEAN"]>>)
add_class(INTEGER)
int_value (49)
add_query("C", "a", <<["a", "INTEGER"], ["A", "INTEGER"], ["d", "INTEGER"], ["D", "b"], ["b", "INTEGER"], ["e", "C"]>>, "B")
add_call_chain(<<b,d,BOOLEAN,A,A,B>>)
greater_than
numerical_negation
equals
subtraction
add_call_chain(<<INTEGER,D,B,INTEGER,a,a,b,c,C>>)
add_query("d", "d", <<["D", "D"]>>, "BOOLEAN")
add_command("D", "INTEGER", <<["b", "e"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["b", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "d"], ["a", "INTEGER"], ["a", "INTEGER"], ["c", "BOOLEAN"]>>)
bool_value (false)
add_attribute("a", "a", "A")
add_call_chain(<<C,B,INTEGER>>)
add_call_chain(<<e,a,a,a,C,C,e,A,A>>)
add_command("B", "c", <<["e", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["e", "c"], ["b", "b"]>>)
multiplication
add_command("a", "C", <<["A", "INTEGER"]>>)
add_class(d)
add_command("a", "D", <<["c", "c"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["e", "INTEGER"]>>)
bool_value (true)
add_call_chain(<<A,a,a,B,b,BOOLEAN,a,INTEGER,A>>)
add_command("b", "A", <<["d", "A"], ["d", "BOOLEAN"], ["D", "b"], ["BOOLEAN", "BOOLEAN"], ["B", "D"], ["e", "INTEGER"], ["INTEGER", "a"], ["a", "a"]>>)
greater_than
int_value (21)
numerical_negation
bool_value (false)
quotient
type_check
int_value (45)
add_call_chain(<<C,d,d,e,b,c,a,a>>)
logical_negation
disjunction
bool_value (true)
add_call_chain(<<B,C,BOOLEAN,e>>)
add_call_chain(<<B,d,B,e,B>>)
generate_java_code
type_check
subtraction
add_query("B", "A", <<["D", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "D"], ["b", "c"], ["a", "INTEGER"], ["e", "INTEGER"]>>, "C")
logical_negation
type_check
add_attribute("b", "a", "BOOLEAN")
equals
add_command("e", "e", <<["e", "INTEGER"], ["C", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["C", "BOOLEAN"]>>)
bool_value (false)
add_call_chain(<<a,a,e,e,b>>)
add_attribute("D", "e", "B")
add_command("e", "C", <<["a", "A"], ["A", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["D", "c"], ["A", "INTEGER"], ["a", "A"], ["b", "c"], ["a", "b"]>>)
equals
add_call_chain(<<A,C,INTEGER,d>>)
add_call_chain(<<b,A,d,a,B,d,D>>)
int_value (3)
add_class(INTEGER)
quotient
logical_negation
add_call_chain(<<BOOLEAN,e,B>>)
numerical_negation
add_call_chain(<<b,d>>)
add_command("C", "INTEGER", <<["A", "BOOLEAN"]>>)
add_query("A", "D", <<["d", "INTEGER"]>>, "D")
bool_value (false)
logical_negation
add_call_chain(<<BOOLEAN,C,C,C,a,B,B>>)
bool_value (false)
numerical_negation
numerical_negation
disjunction
type_check
add_attribute("a", "a", "A")
add_call_chain(<<B,c,d,b,C,A>>)
add_call_chain(<<A>>)
less_than
disjunction
subtraction
add_command("e", "BOOLEAN", <<["b", "INTEGER"], ["d", "C"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["a", "D"], ["C", "INTEGER"], ["A", "INTEGER"], ["c", "a"], ["c", "BOOLEAN"]>>)
add_query("D", "b", <<["B", "INTEGER"], ["D", "INTEGER"], ["a", "INTEGER"], ["b", "BOOLEAN"], ["c", "BOOLEAN"], ["c", "BOOLEAN"]>>, "c")
type_check
add_query("d", "b", <<["d", "INTEGER"], ["a", "C"], ["B", "b"], ["D", "C"], ["d", "c"]>>, "B")
numerical_negation
multiplication
add_call_chain(<<B,b,d,e,A,BOOLEAN,C>>)
add_command("c", "d", <<["e", "A"], ["B", "INTEGER"], ["D", "INTEGER"], ["c", "INTEGER"], ["B", "e"], ["d", "BOOLEAN"]>>)
type_check
add_command("b", "BOOLEAN", <<["A", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "INTEGER"]>>)
add_call_chain(<<A,c,C,B,D,C,A,A>>)
bool_value (false)
add_command("e", "B", <<["b", "D"], ["b", "BOOLEAN"]>>)
numerical_negation
numerical_negation
add_class(e)
add_attribute("INTEGER", "A", "INTEGER")
add_call_chain(<<e,b,d,e,e,e>>)
int_value (47)
bool_value (false)
add_attribute("C", "b", "INTEGER")
add_call_chain(<<d,BOOLEAN,b,b>>)
int_value (17)
add_command("B", "A", <<["e", "BOOLEAN"]>>)
add_attribute("INTEGER", "INTEGER", "INTEGER")
add_query("A", "D", <<["C", "BOOLEAN"], ["D", "b"], ["d", "INTEGER"], ["d", "INTEGER"], ["BOOLEAN", "INTEGER"]>>, "B")
type_check
bool_value (true)
numerical_negation
add_attribute("e", "C", "BOOLEAN")
add_attribute("a", "d", "b")
add_call_chain(<<c,e,A,b,B,INTEGER,C,c>>)
int_value (38)
multiplication
multiplication
add_class(BOOLEAN)
add_command("B", "B", <<["b", "INTEGER"]>>)
add_attribute("b", "a", "e")
add_call_chain(<<C,D,e,A,a>>)
add_attribute("d", "A", "BOOLEAN")
add_attribute("a", "a", "BOOLEAN")
numerical_negation
multiplication
add_class(A)
modulo
add_command("C", "C", <<["B", "BOOLEAN"], ["a", "BOOLEAN"]>>)
add_query("B", "A", <<["c", "d"], ["a", "BOOLEAN"], ["c", "B"], ["e", "d"], ["BOOLEAN", "INTEGER"], ["c", "INTEGER"], ["A", "BOOLEAN"], ["c", "BOOLEAN"], ["c", "e"]>>, "D")
int_value (7)
bool_value (false)
add_call_chain(<<INTEGER,c,A,c,d,a,d,C>>)
int_value (30)
add_class(A)
bool_value (true)
greater_than
add_attribute("D", "B", "BOOLEAN")
bool_value (false)
numerical_negation
add_query("b", "INTEGER", <<["D", "D"]>>, "a")
add_attribute("A", "b", "c")
disjunction
numerical_negation
add_query("d", "b", <<["c", "INTEGER"]>>, "b")
add_call_chain(<<D,a,B,D,A,d>>)
generate_java_code
generate_java_code
add_query("d", "D", <<["a", "BOOLEAN"], ["C", "INTEGER"], ["c", "D"], ["C", "INTEGER"], ["D", "INTEGER"], ["B", "BOOLEAN"]>>, "A")
add_command("B", "C", <<["C", "BOOLEAN"], ["C", "C"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["BOOLEAN", "INTEGER"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["D", "INTEGER"]>>)
add_query("b", "A", <<["e", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "INTEGER"], ["b", "INTEGER"], ["D", "BOOLEAN"], ["d", "BOOLEAN"], ["c", "INTEGER"], ["D", "d"], ["INTEGER", "A"]>>, "C")
bool_value (true)
add_call_chain(<<C>>)
add_command("A", "INTEGER", <<["c", "BOOLEAN"], ["C", "e"], ["c", "BOOLEAN"], ["D", "e"], ["b", "BOOLEAN"], ["d", "INTEGER"], ["A", "BOOLEAN"], ["D", "BOOLEAN"]>>)
logical_negation
disjunction
equals
add_query("D", "D", <<["INTEGER", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "INTEGER"]>>, "a")
logical_negation
add_command("d", "C", <<["e", "a"]>>)
conjunction
logical_negation
add_command("C", "c", <<["d", "INTEGER"], ["B", "BOOLEAN"], ["C", "BOOLEAN"]>>)
generate_java_code
add_attribute("BOOLEAN", "B", "BOOLEAN")
numerical_negation
add_attribute("d", "e", "BOOLEAN")
add_command("BOOLEAN", "d", <<["d", "INTEGER"], ["A", "C"]>>)
add_call_chain(<<e,INTEGER,a>>)
add_query("A", "e", <<["A", "BOOLEAN"], ["C", "INTEGER"], ["d", "b"], ["e", "BOOLEAN"], ["D", "A"], ["a", "D"]>>, "D")
add_call_chain(<<B,a,A,d,b,C>>)
add_attribute("d", "D", "c")
add_call_chain(<<INTEGER,D,c,C,B>>)
int_value (34)
add_query("BOOLEAN", "d", <<["a", "INTEGER"], ["d", "BOOLEAN"]>>, "e")
add_call_chain(<<e,b,B>>)
add_command("A", "D", <<["c", "INTEGER"], ["B", "BOOLEAN"], ["A", "d"], ["D", "BOOLEAN"], ["C", "D"]>>)
numerical_negation
add_attribute("B", "BOOLEAN", "D")
add_call_chain(<<b,d,B,c>>)
numerical_negation
add_command("a", "D", <<["c", "INTEGER"]>>)
add_query("a", "b", <<["e", "INTEGER"], ["d", "C"], ["INTEGER", "B"]>>, "a")
add_call_chain(<<a,D,A,A,d,C,e>>)
add_command("B", "A", <<["A", "c"], ["D", "INTEGER"], ["d", "INTEGER"], ["d", "c"], ["B", "INTEGER"], ["D", "INTEGER"], ["INTEGER", "BOOLEAN"], ["A", "a"], ["B", "B"]>>)
add_query("a", "D", <<["D", "INTEGER"], ["b", "INTEGER"]>>, "INTEGER")
add_class(C)
add_query("C", "BOOLEAN", <<["e", "D"], ["C", "c"], ["e", "INTEGER"], ["INTEGER", "BOOLEAN"], ["BOOLEAN", "D"], ["e", "INTEGER"], ["a", "BOOLEAN"], ["B", "INTEGER"]>>, "BOOLEAN")
generate_java_code
bool_value (false)
conjunction
