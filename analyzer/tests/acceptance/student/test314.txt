add_attribute("e", "D", "INTEGER")
add_attribute("d", "D", "INTEGER")
add_class(B)
multiplication
int_value (34)
generate_java_code
generate_java_code
int_value (37)
logical_negation
logical_negation
numerical_negation
numerical_negation
bool_value (false)
type_check
bool_value (false)
type_check
int_value (33)
int_value (43)
add_attribute("D", "d", "INTEGER")
add_command("A", "d", <<["B", "BOOLEAN"], ["A", "BOOLEAN"]>>)
logical_negation
numerical_negation
logical_negation
subtraction
int_value (7)
add_query("C", "B", <<["B", "BOOLEAN"]>>, "c")
type_check
add_class(C)
equals
add_command("e", "e", <<["D", "c"], ["d", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["a", "B"]>>)
add_attribute("D", "b", "e")
add_attribute("a", "B", "INTEGER")
int_value (7)
add_query("B", "D", <<["c", "e"], ["D", "BOOLEAN"]>>, "e")
type_check
bool_value (false)
add_command("D", "c", <<["A", "INTEGER"], ["c", "INTEGER"], ["d", "INTEGER"], ["a", "INTEGER"], ["A", "INTEGER"], ["A", "INTEGER"], ["A", "INTEGER"], ["c", "INTEGER"], ["a", "BOOLEAN"]>>)
add_call_chain(<<d,B,b,D>>)
add_command("C", "C", <<["d", "BOOLEAN"], ["d", "b"], ["C", "INTEGER"], ["e", "BOOLEAN"], ["e", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "D"]>>)
numerical_negation
type_check
add_query("a", "B", <<["a", "D"], ["C", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["b", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "e"]>>, "a")
add_query("INTEGER", "C", <<["C", "INTEGER"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["B", "INTEGER"], ["c", "BOOLEAN"], ["B", "D"], ["e", "C"], ["b", "BOOLEAN"], ["A", "B"]>>, "e")
add_attribute("B", "d", "C")
add_call_chain(<<a,a,b>>)
generate_java_code
type_check
subtraction
add_command("d", "INTEGER", <<["c", "BOOLEAN"], ["e", "e"], ["e", "BOOLEAN"], ["D", "BOOLEAN"], ["a", "d"], ["BOOLEAN", "INTEGER"]>>)
add_attribute("b", "b", "INTEGER")
type_check
add_attribute("c", "A", "D")
add_command("D", "BOOLEAN", <<["a", "a"], ["C", "a"], ["b", "INTEGER"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["c", "INTEGER"], ["C", "D"], ["c", "INTEGER"]>>)
add_call_chain(<<B,a,B,D,a,b>>)
add_attribute("A", "B", "BOOLEAN")
logical_negation
add_command("a", "d", <<["d", "INTEGER"], ["a", "c"], ["A", "INTEGER"], ["A", "b"], ["A", "C"]>>)
add_attribute("INTEGER", "B", "BOOLEAN")
add_call_chain(<<b,B,C,B,BOOLEAN,D,D,a>>)
bool_value (true)
int_value (45)
logical_negation
addition
add_command("BOOLEAN", "A", <<["B", "INTEGER"], ["b", "INTEGER"]>>)
bool_value (true)
generate_java_code
bool_value (true)
add_attribute("B", "e", "BOOLEAN")
logical_negation
add_call_chain(<<e>>)
greater_than
add_attribute("c", "c", "BOOLEAN")
add_query("d", "BOOLEAN", <<["D", "BOOLEAN"], ["a", "INTEGER"]>>, "b")
modulo
disjunction
bool_value (true)
int_value (6)
subtraction
add_call_chain(<<b,a,B,INTEGER,INTEGER,c,C,C>>)
less_than
bool_value (true)
add_call_chain(<<C,e,d,b,c,D,C,BOOLEAN,C>>)
add_call_chain(<<A,A,C,INTEGER,b,INTEGER>>)
numerical_negation
conjunction
generate_java_code
add_attribute("INTEGER", "BOOLEAN", "INTEGER")
add_call_chain(<<D,C>>)
add_call_chain(<<a,C>>)
add_attribute("e", "d", "INTEGER")
add_attribute("d", "INTEGER", "BOOLEAN")
quotient
numerical_negation
add_query("C", "B", <<["b", "INTEGER"], ["D", "INTEGER"]>>, "c")
add_command("b", "b", <<["INTEGER", "D"], ["A", "e"]>>)
numerical_negation
equals
disjunction
add_command("b", "INTEGER", <<["D", "INTEGER"], ["c", "INTEGER"], ["B", "INTEGER"], ["e", "BOOLEAN"], ["e", "INTEGER"], ["C", "A"], ["B", "INTEGER"], ["A", "B"]>>)
bool_value (true)
add_attribute("e", "b", "INTEGER")
modulo
add_attribute("C", "INTEGER", "e")
add_call_chain(<<A,d,e>>)
add_class(b)
add_command("d", "A", <<["b", "INTEGER"], ["BOOLEAN", "INTEGER"], ["d", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["d", "c"]>>)
add_call_chain(<<c,A,C,c,B,B>>)
add_call_chain(<<D,C,c,D,e,c,C>>)
add_command("b", "d", <<["C", "INTEGER"], ["e", "BOOLEAN"], ["d", "C"], ["d", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "INTEGER"], ["INTEGER", "INTEGER"], ["INTEGER", "INTEGER"], ["D", "D"]>>)
add_call_chain(<<A,D>>)
add_query("A", "a", <<["B", "INTEGER"], ["D", "e"]>>, "B")
add_query("B", "D", <<["D", "INTEGER"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["INTEGER", "a"], ["D", "C"], ["D", "BOOLEAN"]>>, "C")
add_command("D", "d", <<["B", "BOOLEAN"], ["B", "B"], ["c", "INTEGER"]>>)
less_than
bool_value (false)
conjunction
type_check
add_class(c)
add_command("c", "e", <<["B", "INTEGER"], ["D", "BOOLEAN"], ["b", "INTEGER"], ["C", "INTEGER"], ["INTEGER", "INTEGER"], ["a", "d"], ["A", "INTEGER"], ["a", "INTEGER"], ["D", "BOOLEAN"]>>)
add_attribute("D", "c", "B")
int_value (22)
logical_negation
logical_negation
logical_negation
add_command("e", "BOOLEAN", <<["C", "b"], ["c", "BOOLEAN"], ["e", "INTEGER"], ["b", "BOOLEAN"], ["a", "INTEGER"], ["BOOLEAN", "INTEGER"]>>)
add_query("D", "INTEGER", <<["a", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "a"]>>, "c")
int_value (10)
add_call_chain(<<D,A,d,C,D,A,e>>)
addition
generate_java_code
add_attribute("BOOLEAN", "C", "INTEGER")
add_call_chain(<<INTEGER,e,C,D,D,d,e,C>>)
int_value (22)
add_call_chain(<<e>>)
type_check
modulo
add_call_chain(<<C,C,B>>)
add_query("D", "BOOLEAN", <<["c", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "INTEGER"], ["B", "a"], ["b", "INTEGER"], ["BOOLEAN", "c"], ["C", "INTEGER"], ["c", "BOOLEAN"]>>, "e")
greater_than
addition
add_call_chain(<<D,A,c,INTEGER>>)
logical_negation
addition
add_attribute("A", "B", "INTEGER")
int_value (43)
numerical_negation
add_class(d)
bool_value (true)
bool_value (true)
add_call_chain(<<B,e,C,d>>)
add_command("A", "INTEGER", <<["d", "B"], ["a", "a"], ["BOOLEAN", "INTEGER"], ["INTEGER", "INTEGER"], ["b", "INTEGER"], ["d", "B"]>>)
numerical_negation
generate_java_code
add_call_chain(<<D,INTEGER,INTEGER,c,A,b,c>>)
bool_value (false)
add_query("a", "B", <<["b", "INTEGER"]>>, "A")
logical_negation
add_call_chain(<<e,A,INTEGER,BOOLEAN,C>>)
add_class(INTEGER)
int_value (8)
logical_negation
greater_than
numerical_negation
int_value (35)
add_command("d", "a", <<["d", "INTEGER"], ["d", "INTEGER"], ["INTEGER", "INTEGER"], ["C", "D"], ["INTEGER", "d"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["D", "b"]>>)
disjunction
add_command("A", "INTEGER", <<["A", "INTEGER"], ["INTEGER", "BOOLEAN"], ["D", "INTEGER"], ["A", "INTEGER"]>>)
generate_java_code
type_check
type_check
add_command("A", "BOOLEAN", <<["A", "INTEGER"], ["C", "INTEGER"], ["d", "BOOLEAN"], ["C", "B"], ["C", "INTEGER"], ["d", "INTEGER"], ["A", "INTEGER"]>>)
bool_value (false)
int_value (16)
type_check
add_command("e", "a", <<["c", "BOOLEAN"], ["D", "INTEGER"], ["A", "B"], ["INTEGER", "INTEGER"], ["d", "INTEGER"], ["A", "INTEGER"]>>)
add_command("e", "B", <<["b", "INTEGER"], ["D", "INTEGER"], ["C", "D"], ["D", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["D", "e"]>>)
bool_value (false)
add_class(INTEGER)
add_call_chain(<<a,b,A,BOOLEAN>>)
add_call_chain(<<c,INTEGER>>)
add_query("a", "d", <<["c", "b"], ["b", "INTEGER"], ["A", "INTEGER"], ["b", "INTEGER"], ["e", "INTEGER"], ["e", "INTEGER"], ["d", "BOOLEAN"], ["d", "D"], ["D", "b"]>>, "d")
logical_negation
logical_negation
add_call_chain(<<D,C,A,D,d,e,c>>)
generate_java_code
add_call_chain(<<B,B,e,INTEGER>>)
add_call_chain(<<c,D,B,D,d,BOOLEAN,b>>)
generate_java_code
add_call_chain(<<A,c,c,D,d,B,a,C,B>>)
add_command("D", "D", <<["B", "BOOLEAN"], ["C", "A"], ["d", "a"]>>)
greater_than
conjunction
type_check
numerical_negation
bool_value (true)
int_value (42)
int_value (8)
type_check
add_attribute("d", "INTEGER", "INTEGER")
bool_value (false)
numerical_negation
add_class(B)
type_check
add_attribute("c", "BOOLEAN", "INTEGER")
multiplication
bool_value (true)
add_attribute("c", "A", "INTEGER")
add_attribute("b", "A", "a")
int_value (10)
add_class(d)
add_attribute("e", "b", "INTEGER")
bool_value (false)
int_value (34)
add_call_chain(<<B,d,a,C,C>>)
add_call_chain(<<c>>)
add_attribute("B", "c", "BOOLEAN")
bool_value (false)
add_class(D)
numerical_negation
int_value (39)
add_call_chain(<<A,c,c>>)
add_query("D", "D", <<["C", "e"], ["B", "INTEGER"], ["a", "INTEGER"], ["C", "BOOLEAN"], ["d", "c"], ["b", "BOOLEAN"], ["d", "INTEGER"], ["e", "INTEGER"], ["B", "d"]>>, "c")
int_value (48)
bool_value (false)
add_attribute("A", "C", "BOOLEAN")
int_value (30)
numerical_negation
int_value (38)
logical_negation
equals
type_check
quotient
add_call_chain(<<C,A>>)
int_value (20)
add_attribute("e", "B", "INTEGER")
numerical_negation
logical_negation
type_check
generate_java_code
less_than
generate_java_code
add_query("B", "B", <<["b", "BOOLEAN"], ["d", "INTEGER"], ["e", "a"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["C", "INTEGER"]>>, "e")
bool_value (true)
add_call_chain(<<d,A,a,a,d,e,C>>)
numerical_negation
add_call_chain(<<INTEGER,D,B,C,INTEGER,D,a>>)
add_call_chain(<<e,B,c>>)
add_call_chain(<<D,e,b,A,A,A,c,a,c>>)
add_command("a", "a", <<["b", "c"], ["C", "BOOLEAN"]>>)
add_query("D", "b", <<["d", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "B"], ["B", "D"], ["B", "INTEGER"], ["a", "d"], ["BOOLEAN", "b"], ["C", "INTEGER"]>>, "BOOLEAN")
type_check
add_attribute("a", "b", "BOOLEAN")
add_call_chain(<<a,b>>)
