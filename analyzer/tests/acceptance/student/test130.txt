add_query("D", "BOOLEAN", <<["B", "B"], ["d", "BOOLEAN"], ["b", "INTEGER"], ["B", "BOOLEAN"]>>, "B")
bool_value (true)
addition
add_query("B", "c", <<["e", "INTEGER"], ["D", "INTEGER"], ["A", "INTEGER"], ["A", "b"], ["D", "BOOLEAN"]>>, "D")
add_query("e", "e", <<["a", "D"], ["a", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "INTEGER"], ["BOOLEAN", "C"], ["B", "BOOLEAN"]>>, "B")
add_query("c", "a", <<["A", "b"], ["INTEGER", "INTEGER"], ["C", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "BOOLEAN"], ["d", "INTEGER"], ["INTEGER", "INTEGER"], ["A", "C"], ["c", "d"]>>, "d")
add_command("a", "e", <<["A", "A"], ["b", "BOOLEAN"], ["D", "INTEGER"]>>)
type_check
add_class(a)
logical_negation
add_class(B)
add_query("BOOLEAN", "D", <<["C", "BOOLEAN"]>>, "C")
int_value (48)
add_command("C", "e", <<["A", "BOOLEAN"], ["d", "A"]>>)
add_call_chain(<<C,BOOLEAN>>)
add_query("BOOLEAN", "c", <<["e", "BOOLEAN"], ["D", "d"], ["a", "c"]>>, "B")
bool_value (true)
add_call_chain(<<d,D,B,b,d,B,A>>)
less_than
add_attribute("A", "c", "INTEGER")
less_than
int_value (31)
add_call_chain(<<d,e,C,B,e,D,C>>)
numerical_negation
add_call_chain(<<INTEGER,C,d,BOOLEAN>>)
add_command("b", "b", <<["e", "INTEGER"], ["e", "C"], ["D", "INTEGER"], ["INTEGER", "BOOLEAN"], ["A", "INTEGER"]>>)
add_command("B", "e", <<["D", "BOOLEAN"], ["b", "INTEGER"]>>)
add_call_chain(<<B,A,INTEGER,B,INTEGER,A,b,D,BOOLEAN>>)
add_call_chain(<<d,b,e,D,d>>)
add_call_chain(<<e,BOOLEAN,c,B,d>>)
add_attribute("C", "B", "B")
numerical_negation
conjunction
multiplication
numerical_negation
bool_value (false)
add_call_chain(<<e,BOOLEAN>>)
add_call_chain(<<d,A,c,BOOLEAN,INTEGER,D>>)
int_value (44)
type_check
add_call_chain(<<B>>)
quotient
add_call_chain(<<D>>)
numerical_negation
logical_negation
add_attribute("d", "A", "BOOLEAN")
add_attribute("BOOLEAN", "D", "BOOLEAN")
add_query("d", "A", <<["D", "BOOLEAN"], ["d", "BOOLEAN"], ["d", "d"], ["A", "BOOLEAN"], ["e", "b"]>>, "C")
add_call_chain(<<a,A,a,D>>)
type_check
add_class(d)
greater_than
add_command("A", "D", <<["A", "b"], ["D", "a"], ["c", "INTEGER"], ["c", "d"], ["A", "a"], ["e", "BOOLEAN"]>>)
int_value (39)
int_value (20)
int_value (2)
add_query("b", "D", <<["B", "BOOLEAN"], ["INTEGER", "INTEGER"], ["e", "BOOLEAN"], ["INTEGER", "INTEGER"], ["d", "e"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "e"], ["e", "BOOLEAN"]>>, "C")
add_attribute("d", "D", "INTEGER")
logical_negation
add_call_chain(<<d,D,c,c,BOOLEAN,a>>)
add_command("A", "d", <<["e", "BOOLEAN"], ["c", "INTEGER"], ["b", "INTEGER"], ["b", "BOOLEAN"], ["c", "C"], ["A", "c"]>>)
add_call_chain(<<d,D,A>>)
add_attribute("BOOLEAN", "C", "a")
equals
addition
add_command("b", "e", <<["e", "BOOLEAN"], ["b", "INTEGER"], ["c", "BOOLEAN"]>>)
add_call_chain(<<B>>)
int_value (38)
conjunction
add_class(a)
add_query("A", "C", <<["c", "B"], ["e", "B"]>>, "e")
add_class(e)
add_command("A", "D", <<["b", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "a"], ["BOOLEAN", "BOOLEAN"], ["c", "INTEGER"]>>)
generate_java_code
int_value (29)
add_class(a)
add_attribute("a", "d", "BOOLEAN")
equals
type_check
numerical_negation
equals
bool_value (false)
multiplication
add_attribute("C", "e", "d")
add_call_chain(<<A,B,c,b,b,D,e,d,D>>)
add_call_chain(<<A,C,B,e,a>>)
add_command("C", "d", <<["D", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "BOOLEAN"]>>)
type_check
add_call_chain(<<d,a,d,b,d,BOOLEAN,c,d,d>>)
add_call_chain(<<C>>)
add_call_chain(<<a,b,D,B,A,a,B>>)
numerical_negation
add_attribute("D", "a", "BOOLEAN")
logical_negation
int_value (4)
add_class(BOOLEAN)
add_call_chain(<<b,a,D,BOOLEAN,D>>)
add_command("C", "b", <<["A", "INTEGER"], ["C", "a"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["c", "BOOLEAN"], ["D", "BOOLEAN"]>>)
int_value (49)
int_value (27)
greater_than
logical_negation
int_value (10)
add_command("e", "e", <<["b", "b"], ["INTEGER", "INTEGER"], ["B", "INTEGER"], ["c", "BOOLEAN"], ["e", "d"], ["A", "INTEGER"], ["INTEGER", "BOOLEAN"], ["c", "BOOLEAN"]>>)
add_class(B)
add_query("C", "e", <<["D", "INTEGER"]>>, "C")
bool_value (true)
add_attribute("B", "BOOLEAN", "A")
generate_java_code
add_attribute("B", "A", "BOOLEAN")
add_query("b", "D", <<["B", "e"], ["C", "INTEGER"], ["D", "A"], ["D", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "BOOLEAN"]>>, "A")
add_call_chain(<<B,INTEGER,e,B,B>>)
bool_value (true)
add_call_chain(<<B,b,C,D,C,C,a>>)
add_command("b", "e", <<["B", "BOOLEAN"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["B", "a"], ["INTEGER", "INTEGER"], ["A", "INTEGER"]>>)
add_query("e", "INTEGER", <<["e", "BOOLEAN"], ["C", "e"], ["A", "INTEGER"], ["D", "B"], ["d", "INTEGER"]>>, "e")
conjunction
add_call_chain(<<A,C,b,INTEGER,c>>)
bool_value (true)
add_call_chain(<<B,d>>)
int_value (15)
add_call_chain(<<A,A,C,C,c,b,a,A>>)
add_query("e", "B", <<["C", "INTEGER"], ["e", "BOOLEAN"], ["D", "D"]>>, "a")
add_attribute("C", "a", "INTEGER")
add_attribute("A", "B", "INTEGER")
modulo
logical_negation
numerical_negation
add_query("e", "e", <<["INTEGER", "INTEGER"], ["D", "INTEGER"], ["e", "a"], ["A", "INTEGER"]>>, "C")
add_class(B)
disjunction
add_attribute("b", "D", "b")
bool_value (true)
equals
logical_negation
add_call_chain(<<d,d,D,e,D,b,c>>)
add_attribute("e", "A", "D")
add_call_chain(<<e,a>>)
quotient
bool_value (false)
add_command("c", "A", <<["C", "BOOLEAN"], ["b", "D"], ["d", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "c"], ["B", "BOOLEAN"]>>)
less_than
int_value (22)
numerical_negation
logical_negation
add_command("D", "INTEGER", <<["b", "INTEGER"], ["B", "INTEGER"], ["d", "C"], ["D", "INTEGER"], ["A", "INTEGER"]>>)
add_attribute("a", "INTEGER", "INTEGER")
add_attribute("INTEGER", "D", "INTEGER")
add_command("D", "A", <<["B", "b"], ["INTEGER", "A"], ["d", "c"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["B", "BOOLEAN"], ["D", "B"]>>)
add_attribute("BOOLEAN", "D", "A")
generate_java_code
add_query("A", "B", <<["e", "B"], ["D", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["INTEGER", "b"], ["D", "BOOLEAN"]>>, "d")
add_query("C", "a", <<["D", "BOOLEAN"], ["A", "e"], ["D", "D"], ["A", "INTEGER"], ["e", "a"]>>, "e")
less_than
generate_java_code
add_call_chain(<<D,e,D,b,C,D,d>>)
add_class(BOOLEAN)
int_value (21)
add_query("D", "d", <<["BOOLEAN", "INTEGER"], ["INTEGER", "INTEGER"], ["A", "INTEGER"], ["e", "BOOLEAN"], ["b", "BOOLEAN"]>>, "b")
add_call_chain(<<d,B>>)
logical_negation
modulo
numerical_negation
add_call_chain(<<c,d,e,B,C,a,a,A>>)
addition
type_check
bool_value (true)
int_value (43)
type_check
add_call_chain(<<c,D,BOOLEAN,b,a,D,B,d>>)
bool_value (true)
add_call_chain(<<C>>)
add_query("e", "D", <<["B", "INTEGER"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["D", "INTEGER"], ["c", "INTEGER"], ["B", "B"]>>, "B")
int_value (14)
add_command("e", "B", <<["C", "INTEGER"], ["B", "INTEGER"], ["e", "INTEGER"], ["INTEGER", "BOOLEAN"], ["A", "BOOLEAN"]>>)
add_call_chain(<<INTEGER,C,D>>)
numerical_negation
int_value (30)
add_call_chain(<<C,d,D,a,D,D,c,B,C>>)
add_call_chain(<<d,A,b,C,C,c,D,e,BOOLEAN>>)
add_call_chain(<<A,e,C>>)
type_check
bool_value (true)
add_class(A)
bool_value (true)
type_check
subtraction
conjunction
add_query("INTEGER", "B", <<["B", "C"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["b", "INTEGER"], ["a", "b"], ["D", "BOOLEAN"]>>, "BOOLEAN")
add_call_chain(<<C,b,BOOLEAN,d>>)
logical_negation
logical_negation
type_check
add_call_chain(<<A>>)
add_call_chain(<<b,A,b,BOOLEAN,C,A,B,e,c>>)
add_query("b", "A", <<["D", "d"], ["BOOLEAN", "e"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["D", "B"], ["C", "INTEGER"], ["c", "D"]>>, "B")
int_value (22)
numerical_negation
generate_java_code
add_attribute("a", "A", "INTEGER")
numerical_negation
add_command("a", "b", <<["B", "INTEGER"], ["B", "b"], ["c", "a"], ["BOOLEAN", "INTEGER"], ["A", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "d"], ["a", "b"], ["b", "INTEGER"]>>)
disjunction
bool_value (false)
add_query("b", "B", <<["D", "BOOLEAN"], ["A", "a"], ["A", "D"]>>, "b")
add_query("A", "d", <<["c", "INTEGER"]>>, "B")
modulo
logical_negation
add_query("e", "c", <<["c", "D"]>>, "c")
int_value (24)
bool_value (false)
add_class(c)
add_query("INTEGER", "D", <<["A", "INTEGER"], ["C", "BOOLEAN"], ["c", "b"]>>, "b")
disjunction
logical_negation
add_command("INTEGER", "C", <<["c", "BOOLEAN"]>>)
disjunction
less_than
add_call_chain(<<INTEGER,e,A,c>>)
bool_value (false)
numerical_negation
add_call_chain(<<C,b,a,C,C>>)
int_value (41)
bool_value (false)
int_value (44)
add_command("d", "c", <<["d", "INTEGER"], ["e", "d"], ["c", "BOOLEAN"], ["C", "D"], ["D", "D"]>>)
add_call_chain(<<INTEGER,b,e,A,C,C,A>>)
generate_java_code
add_call_chain(<<e,B>>)
generate_java_code
bool_value (true)
bool_value (true)
greater_than
add_attribute("B", "e", "B")
add_call_chain(<<b,C,d,A,B,A>>)
add_class(d)
int_value (10)
generate_java_code
add_call_chain(<<b,d,A,b,d,C>>)
quotient
add_command("INTEGER", "C", <<["B", "BOOLEAN"], ["B", "BOOLEAN"]>>)
numerical_negation
add_call_chain(<<A,B,D,B,D,a,d>>)
logical_negation
add_command("c", "b", <<["d", "BOOLEAN"], ["A", "c"], ["B", "C"], ["INTEGER", "b"], ["d", "BOOLEAN"], ["b", "A"], ["BOOLEAN", "BOOLEAN"], ["b", "A"], ["a", "BOOLEAN"]>>)
greater_than
add_call_chain(<<d,C,a,B,a,B,c,B>>)
add_call_chain(<<a,INTEGER,e,A,c,B,d,e,e>>)
add_command("a", "e", <<["B", "D"], ["INTEGER", "BOOLEAN"], ["c", "INTEGER"], ["D", "a"], ["C", "a"], ["e", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "D"]>>)
numerical_negation
add_attribute("B", "D", "INTEGER")
type_check
add_attribute("D", "C", "INTEGER")
int_value (40)
add_call_chain(<<A,a,C,A,A,d>>)
greater_than
logical_negation
add_call_chain(<<D,d,d,D,A,d>>)
int_value (30)
add_query("C", "b", <<["a", "D"], ["C", "BOOLEAN"], ["D", "INTEGER"]>>, "A")
int_value (15)
add_call_chain(<<C,e>>)
int_value (8)
add_command("d", "C", <<["C", "INTEGER"], ["d", "D"], ["c", "BOOLEAN"], ["e", "INTEGER"], ["e", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "BOOLEAN"]>>)
numerical_negation
add_class(b)
logical_negation
add_query("b", "e", <<["B", "BOOLEAN"], ["c", "BOOLEAN"]>>, "e")
bool_value (true)
