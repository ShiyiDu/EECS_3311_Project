logical_negation
int_value (10)
add_command("b", "B", <<["A", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "B"]>>)
generate_java_code
add_call_chain(<<a,c,B,INTEGER,C>>)
type_check
generate_java_code
add_call_chain(<<d,B,A,e,C,B,d,d,A>>)
add_call_chain(<<BOOLEAN,B,C,B,b,A>>)
int_value (16)
numerical_negation
subtraction
add_call_chain(<<a,INTEGER,INTEGER,e,C,C,B>>)
add_query("D", "A", <<["B", "BOOLEAN"]>>, "D")
add_attribute("c", "INTEGER", "INTEGER")
generate_java_code
logical_negation
disjunction
logical_negation
add_attribute("d", "d", "INTEGER")
add_query("BOOLEAN", "a", <<["D", "INTEGER"], ["INTEGER", "e"], ["D", "D"]>>, "a")
add_query("b", "c", <<["a", "BOOLEAN"], ["D", "INTEGER"]>>, "D")
add_attribute("c", "INTEGER", "INTEGER")
add_query("B", "INTEGER", <<["e", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["b", "C"], ["B", "BOOLEAN"], ["c", "e"], ["C", "A"], ["a", "b"], ["c", "a"], ["A", "D"]>>, "a")
generate_java_code
add_call_chain(<<e,D>>)
add_call_chain(<<e,a,b,C>>)
add_class(BOOLEAN)
int_value (18)
add_call_chain(<<b,b,C,B,a,e,INTEGER,INTEGER,c>>)
numerical_negation
add_command("a", "B", <<["a", "d"], ["b", "A"]>>)
bool_value (true)
logical_negation
numerical_negation
conjunction
int_value (32)
type_check
int_value (44)
bool_value (false)
type_check
int_value (10)
logical_negation
int_value (15)
numerical_negation
addition
add_call_chain(<<b,b,d,b,BOOLEAN,B,A,INTEGER>>)
add_attribute("D", "C", "INTEGER")
int_value (39)
logical_negation
add_query("INTEGER", "c", <<["D", "BOOLEAN"], ["INTEGER", "C"], ["B", "BOOLEAN"], ["D", "b"], ["a", "INTEGER"], ["d", "INTEGER"]>>, "BOOLEAN")
add_call_chain(<<e,INTEGER,C,a,e>>)
equals
add_query("d", "C", <<["D", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "C"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "a"], ["e", "B"], ["c", "INTEGER"], ["C", "INTEGER"]>>, "a")
numerical_negation
numerical_negation
add_class(a)
generate_java_code
bool_value (false)
numerical_negation
add_class(A)
int_value (33)
add_query("BOOLEAN", "A", <<["e", "BOOLEAN"], ["b", "b"]>>, "INTEGER")
add_command("BOOLEAN", "D", <<["e", "INTEGER"], ["C", "INTEGER"], ["B", "INTEGER"], ["c", "B"], ["b", "BOOLEAN"], ["INTEGER", "INTEGER"]>>)
int_value (26)
add_command("c", "D", <<["BOOLEAN", "A"], ["A", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "a"], ["c", "BOOLEAN"]>>)
logical_negation
numerical_negation
numerical_negation
logical_negation
less_than
conjunction
add_call_chain(<<b,C,B,B,BOOLEAN>>)
add_command("BOOLEAN", "D", <<["B", "b"], ["d", "INTEGER"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "D"], ["B", "INTEGER"], ["c", "D"], ["b", "INTEGER"]>>)
add_command("c", "c", <<["e", "INTEGER"], ["b", "BOOLEAN"], ["D", "INTEGER"]>>)
add_call_chain(<<C,a,a,D,a>>)
bool_value (false)
add_command("b", "B", <<["BOOLEAN", "INTEGER"], ["B", "BOOLEAN"], ["BOOLEAN", "A"], ["A", "INTEGER"], ["e", "BOOLEAN"], ["A", "c"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["A", "C"]>>)
add_call_chain(<<B,B,e,A,D>>)
int_value (12)
add_call_chain(<<a,A,e,A,b,B,D,b,b>>)
add_call_chain(<<C,b,D,a,e>>)
add_query("A", "d", <<["a", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "INTEGER"], ["d", "INTEGER"], ["C", "INTEGER"], ["d", "BOOLEAN"], ["d", "BOOLEAN"], ["e", "BOOLEAN"]>>, "C")
add_command("e", "C", <<["d", "INTEGER"], ["D", "BOOLEAN"]>>)
add_class(d)
type_check
type_check
add_call_chain(<<b,d,BOOLEAN,D,d,A>>)
int_value (16)
add_command("a", "e", <<["a", "INTEGER"], ["c", "INTEGER"], ["B", "INTEGER"], ["a", "A"], ["INTEGER", "b"], ["BOOLEAN", "B"]>>)
logical_negation
add_call_chain(<<A,e,D,c>>)
add_attribute("d", "B", "d")
add_query("C", "B", <<["C", "A"], ["b", "BOOLEAN"], ["b", "BOOLEAN"], ["b", "d"], ["a", "c"], ["D", "A"], ["B", "C"]>>, "A")
add_query("b", "a", <<["D", "INTEGER"]>>, "a")
less_than
add_class(b)
int_value (3)
int_value (45)
add_call_chain(<<D>>)
add_attribute("a", "e", "INTEGER")
add_command("c", "C", <<["INTEGER", "BOOLEAN"]>>)
greater_than
bool_value (false)
add_attribute("a", "b", "BOOLEAN")
type_check
int_value (22)
add_call_chain(<<INTEGER,INTEGER,d,B,c,C,A,A,b>>)
add_command("e", "b", <<["B", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "B"], ["c", "INTEGER"]>>)
add_command("e", "e", <<["c", "BOOLEAN"], ["c", "C"], ["INTEGER", "e"], ["c", "BOOLEAN"], ["C", "e"], ["c", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
add_query("d", "C", <<["C", "INTEGER"], ["C", "e"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "a"]>>, "D")
numerical_negation
add_command("b", "C", <<["B", "BOOLEAN"], ["A", "INTEGER"]>>)
int_value (28)
add_query("A", "A", <<["b", "BOOLEAN"], ["B", "c"], ["a", "BOOLEAN"]>>, "b")
add_query("a", "e", <<["INTEGER", "c"], ["INTEGER", "INTEGER"], ["e", "INTEGER"], ["A", "BOOLEAN"], ["A", "INTEGER"], ["d", "BOOLEAN"], ["b", "INTEGER"], ["D", "BOOLEAN"], ["D", "a"]>>, "d")
add_query("B", "b", <<["D", "BOOLEAN"], ["D", "INTEGER"], ["A", "BOOLEAN"], ["d", "d"], ["d", "BOOLEAN"]>>, "D")
add_call_chain(<<a,b,b,A,A,D,A,d>>)
add_attribute("c", "e", "A")
less_than
add_query("C", "D", <<["INTEGER", "INTEGER"], ["A", "c"], ["b", "D"], ["e", "INTEGER"], ["B", "BOOLEAN"], ["B", "e"], ["D", "INTEGER"]>>, "C")
int_value (20)
add_attribute("c", "a", "d")
add_call_chain(<<A,c>>)
logical_negation
add_call_chain(<<D,A,INTEGER,b,a,e,C>>)
add_command("D", "b", <<["C", "INTEGER"], ["A", "INTEGER"], ["C", "d"]>>)
conjunction
add_command("D", "D", <<["d", "BOOLEAN"]>>)
add_attribute("A", "B", "INTEGER")
add_query("D", "D", <<["a", "INTEGER"], ["B", "INTEGER"]>>, "a")
add_query("e", "e", <<["b", "INTEGER"], ["a", "B"], ["d", "INTEGER"]>>, "b")
logical_negation
bool_value (false)
subtraction
add_call_chain(<<b,e,C,B,C,b,c>>)
type_check
add_command("c", "C", <<["D", "a"], ["BOOLEAN", "BOOLEAN"], ["b", "INTEGER"]>>)
logical_negation
greater_than
add_call_chain(<<C,a,d,C,d,A,c>>)
logical_negation
logical_negation
type_check
add_attribute("INTEGER", "C", "INTEGER")
add_call_chain(<<c,C,A,B>>)
int_value (7)
generate_java_code
add_attribute("a", "a", "BOOLEAN")
add_call_chain(<<BOOLEAN,INTEGER>>)
equals
add_command("B", "e", <<["a", "INTEGER"], ["INTEGER", "INTEGER"]>>)
add_call_chain(<<e,C,C>>)
quotient
less_than
type_check
bool_value (true)
int_value (6)
add_call_chain(<<INTEGER,e,INTEGER,C,C>>)
numerical_negation
subtraction
add_query("b", "a", <<["D", "INTEGER"], ["c", "INTEGER"], ["d", "INTEGER"], ["C", "e"]>>, "B")
add_attribute("C", "INTEGER", "BOOLEAN")
add_query("D", "e", <<["C", "BOOLEAN"], ["C", "INTEGER"], ["a", "BOOLEAN"], ["C", "BOOLEAN"], ["d", "INTEGER"], ["BOOLEAN", "D"]>>, "B")
int_value (42)
add_query("A", "A", <<["D", "BOOLEAN"]>>, "B")
add_query("A", "d", <<["d", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "d"], ["A", "B"], ["a", "B"], ["a", "e"], ["A", "INTEGER"]>>, "a")
add_command("C", "B", <<["e", "INTEGER"], ["BOOLEAN", "a"], ["B", "BOOLEAN"], ["C", "INTEGER"], ["e", "c"], ["A", "BOOLEAN"], ["b", "INTEGER"]>>)
int_value (38)
multiplication
add_attribute("a", "B", "INTEGER")
add_query("a", "A", <<["b", "D"], ["a", "INTEGER"], ["D", "e"], ["c", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["e", "INTEGER"], ["b", "BOOLEAN"], ["d", "BOOLEAN"]>>, "b")
add_call_chain(<<B,c,e,b,c,C,A,c,b>>)
add_call_chain(<<d,C,a,c,D>>)
add_call_chain(<<b,A,c>>)
int_value (10)
add_attribute("INTEGER", "INTEGER", "C")
less_than
add_attribute("A", "b", "BOOLEAN")
numerical_negation
add_command("A", "b", <<["c", "INTEGER"], ["D", "D"], ["D", "BOOLEAN"], ["c", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "c"], ["a", "INTEGER"]>>)
add_class(e)
numerical_negation
numerical_negation
add_attribute("C", "d", "INTEGER")
add_call_chain(<<C,c,BOOLEAN,e>>)
bool_value (true)
add_command("A", "a", <<["A", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["e", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "A"], ["c", "D"]>>)
numerical_negation
generate_java_code
bool_value (false)
add_attribute("B", "b", "B")
add_attribute("d", "INTEGER", "INTEGER")
add_query("b", "C", <<["a", "BOOLEAN"], ["D", "a"], ["A", "BOOLEAN"]>>, "A")
bool_value (false)
add_attribute("INTEGER", "INTEGER", "BOOLEAN")
add_call_chain(<<BOOLEAN,d,b,A,d,d,a,A,A>>)
logical_negation
add_query("C", "A", <<["A", "INTEGER"]>>, "b")
add_call_chain(<<b>>)
add_query("c", "e", <<["C", "BOOLEAN"], ["a", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "INTEGER"], ["d", "INTEGER"]>>, "e")
bool_value (false)
add_query("b", "C", <<["D", "BOOLEAN"], ["c", "INTEGER"]>>, "e")
type_check
type_check
add_command("c", "C", <<["A", "BOOLEAN"], ["A", "INTEGER"], ["C", "c"], ["D", "BOOLEAN"], ["e", "D"], ["c", "INTEGER"], ["A", "INTEGER"]>>)
type_check
addition
generate_java_code
add_attribute("A", "a", "BOOLEAN")
addition
add_command("D", "INTEGER", <<["d", "C"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["d", "INTEGER"], ["a", "INTEGER"], ["d", "INTEGER"]>>)
add_attribute("C", "A", "INTEGER")
bool_value (true)
add_call_chain(<<B,D,D,BOOLEAN,C,B>>)
add_attribute("a", "C", "BOOLEAN")
add_call_chain(<<BOOLEAN,d,A,D,a,B,a,b,C>>)
logical_negation
add_call_chain(<<A,D,B,b,d,D>>)
conjunction
conjunction
bool_value (true)
add_command("C", "b", <<["B", "BOOLEAN"], ["B", "a"], ["d", "A"], ["a", "INTEGER"], ["d", "BOOLEAN"]>>)
equals
int_value (12)
