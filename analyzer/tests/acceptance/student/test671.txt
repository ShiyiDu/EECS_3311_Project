add_call_chain(<<d,d,BOOLEAN,A>>)
generate_java_code
int_value (19)
add_call_chain(<<a,INTEGER,a>>)
add_command("A", "e", <<["a", "BOOLEAN"], ["A", "INTEGER"]>>)
logical_negation
add_call_chain(<<D>>)
add_call_chain(<<C>>)
generate_java_code
conjunction
multiplication
logical_negation
bool_value (true)
add_command("C", "c", <<["e", "A"]>>)
add_query("C", "B", <<["B", "BOOLEAN"], ["b", "INTEGER"], ["e", "BOOLEAN"], ["e", "INTEGER"]>>, "a")
add_query("a", "b", <<["a", "INTEGER"], ["e", "INTEGER"], ["A", "A"], ["B", "INTEGER"], ["b", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "A"], ["D", "INTEGER"]>>, "A")
add_call_chain(<<D,a,B,a>>)
generate_java_code
generate_java_code
add_command("b", "B", <<["c", "BOOLEAN"], ["a", "A"]>>)
add_command("A", "B", <<["c", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "INTEGER"]>>)
add_attribute("c", "e", "BOOLEAN")
add_class(C)
add_call_chain(<<A,d,B,D,A,D>>)
add_command("e", "d", <<["d", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "INTEGER"]>>)
int_value (8)
bool_value (false)
conjunction
bool_value (true)
numerical_negation
numerical_negation
type_check
type_check
add_command("B", "B", <<["c", "D"]>>)
logical_negation
generate_java_code
numerical_negation
add_query("C", "B", <<["c", "INTEGER"], ["a", "C"], ["e", "C"], ["a", "c"]>>, "d")
add_command("BOOLEAN", "d", <<["B", "INTEGER"]>>)
generate_java_code
generate_java_code
int_value (13)
add_query("d", "D", <<["B", "BOOLEAN"], ["a", "C"], ["c", "INTEGER"], ["e", "d"], ["c", "BOOLEAN"], ["B", "A"], ["d", "BOOLEAN"]>>, "B")
bool_value (false)
addition
less_than
add_call_chain(<<BOOLEAN,c,C,a,a,B,c,D,d>>)
add_call_chain(<<b,e>>)
add_command("C", "e", <<["a", "BOOLEAN"], ["B", "b"], ["d", "a"], ["c", "INTEGER"], ["INTEGER", "INTEGER"], ["d", "INTEGER"], ["A", "A"], ["a", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
int_value (7)
add_attribute("B", "D", "BOOLEAN")
logical_negation
add_attribute("e", "b", "BOOLEAN")
disjunction
int_value (13)
add_command("b", "a", <<["A", "BOOLEAN"], ["a", "A"], ["d", "INTEGER"], ["A", "INTEGER"], ["a", "INTEGER"], ["BOOLEAN", "INTEGER"], ["b", "BOOLEAN"], ["a", "d"], ["b", "INTEGER"]>>)
conjunction
bool_value (true)
int_value (31)
add_class(BOOLEAN)
add_call_chain(<<a,INTEGER,a>>)
less_than
add_command("D", "a", <<["e", "a"], ["c", "INTEGER"], ["e", "INTEGER"], ["c", "b"], ["B", "BOOLEAN"], ["B", "INTEGER"], ["INTEGER", "C"]>>)
add_class(c)
add_attribute("B", "B", "B")
add_class(C)
add_attribute("c", "BOOLEAN", "D")
add_call_chain(<<C,A,A,a>>)
add_query("BOOLEAN", "INTEGER", <<["d", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "INTEGER"], ["a", "A"]>>, "b")
bool_value (true)
type_check
add_class(c)
type_check
add_attribute("d", "d", "c")
type_check
greater_than
bool_value (true)
equals
add_command("d", "e", <<["INTEGER", "a"], ["a", "INTEGER"], ["d", "INTEGER"], ["BOOLEAN", "INTEGER"], ["BOOLEAN", "INTEGER"], ["B", "INTEGER"], ["A", "B"], ["e", "C"], ["A", "INTEGER"]>>)
add_attribute("D", "e", "c")
bool_value (true)
addition
add_class(b)
bool_value (true)
type_check
type_check
add_attribute("C", "B", "INTEGER")
add_command("c", "e", <<["B", "INTEGER"], ["e", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "BOOLEAN"]>>)
add_attribute("B", "e", "INTEGER")
conjunction
int_value (2)
add_call_chain(<<INTEGER>>)
greater_than
int_value (26)
quotient
add_query("C", "d", <<["a", "BOOLEAN"], ["a", "D"], ["B", "c"], ["e", "INTEGER"], ["e", "INTEGER"], ["C", "BOOLEAN"]>>, "C")
add_call_chain(<<B,b,b,B>>)
equals
add_command("A", "c", <<["C", "INTEGER"], ["b", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "INTEGER"], ["INTEGER", "BOOLEAN"], ["b", "BOOLEAN"], ["b", "e"]>>)
add_attribute("d", "e", "A")
add_attribute("D", "b", "INTEGER")
greater_than
int_value (19)
int_value (20)
bool_value (true)
add_call_chain(<<D,b,e,BOOLEAN>>)
disjunction
add_command("a", "b", <<["B", "BOOLEAN"], ["b", "d"], ["a", "BOOLEAN"], ["e", "A"], ["d", "INTEGER"], ["C", "INTEGER"], ["A", "INTEGER"], ["A", "INTEGER"]>>)
logical_negation
numerical_negation
bool_value (true)
add_attribute("B", "A", "C")
generate_java_code
add_call_chain(<<C,B>>)
int_value (28)
quotient
generate_java_code
type_check
numerical_negation
add_query("D", "B", <<["C", "BOOLEAN"], ["D", "INTEGER"], ["B", "BOOLEAN"], ["d", "BOOLEAN"]>>, "INTEGER")
add_query("C", "A", <<["c", "B"], ["C", "BOOLEAN"], ["C", "A"], ["D", "BOOLEAN"], ["C", "d"], ["b", "A"], ["c", "BOOLEAN"], ["D", "BOOLEAN"]>>, "D")
add_class(d)
add_command("e", "A", <<["A", "INTEGER"], ["INTEGER", "BOOLEAN"], ["A", "a"]>>)
int_value (44)
add_query("b", "b", <<["e", "BOOLEAN"], ["A", "INTEGER"], ["C", "INTEGER"], ["a", "INTEGER"], ["D", "D"]>>, "A")
int_value (33)
bool_value (true)
addition
add_query("B", "A", <<["c", "BOOLEAN"], ["B", "INTEGER"], ["B", "INTEGER"], ["e", "A"], ["A", "a"], ["e", "BOOLEAN"], ["A", "INTEGER"]>>, "a")
add_command("B", "C", <<["e", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "c"], ["BOOLEAN", "BOOLEAN"]>>)
add_query("D", "d", <<["A", "INTEGER"], ["BOOLEAN", "INTEGER"], ["b", "BOOLEAN"], ["A", "A"], ["e", "D"], ["INTEGER", "INTEGER"], ["c", "INTEGER"], ["BOOLEAN", "b"], ["c", "INTEGER"]>>, "C")
add_attribute("a", "a", "INTEGER")
logical_negation
generate_java_code
int_value (25)
add_call_chain(<<D,C>>)
add_query("A", "C", <<["c", "A"], ["c", "INTEGER"], ["e", "A"], ["d", "INTEGER"]>>, "b")
int_value (26)
add_class(B)
generate_java_code
generate_java_code
bool_value (true)
add_call_chain(<<e,C,BOOLEAN,c,b,e>>)
add_class(D)
bool_value (true)
add_call_chain(<<a,D>>)
add_call_chain(<<a,A,b,d,e,C,b,b>>)
add_query("C", "INTEGER", <<["d", "b"], ["B", "BOOLEAN"], ["A", "B"], ["c", "INTEGER"], ["A", "INTEGER"], ["a", "BOOLEAN"], ["B", "BOOLEAN"]>>, "A")
equals
add_call_chain(<<B,c>>)
conjunction
logical_negation
disjunction
generate_java_code
numerical_negation
addition
add_query("a", "C", <<["c", "BOOLEAN"], ["B", "INTEGER"], ["C", "A"], ["B", "BOOLEAN"], ["a", "b"]>>, "c")
add_attribute("B", "c", "INTEGER")
add_class(c)
add_command("A", "c", <<["B", "INTEGER"]>>)
int_value (33)
add_attribute("D", "INTEGER", "INTEGER")
multiplication
generate_java_code
add_class(a)
int_value (14)
numerical_negation
bool_value (false)
modulo
add_call_chain(<<C,A,e,C,b,d,A,d>>)
add_attribute("a", "a", "BOOLEAN")
generate_java_code
generate_java_code
add_attribute("D", "c", "BOOLEAN")
int_value (26)
add_query("D", "D", <<["BOOLEAN", "INTEGER"], ["b", "A"]>>, "INTEGER")
type_check
bool_value (true)
type_check
addition
add_attribute("INTEGER", "c", "BOOLEAN")
logical_negation
numerical_negation
numerical_negation
equals
int_value (40)
add_query("d", "D", <<["D", "BOOLEAN"], ["INTEGER", "INTEGER"], ["e", "BOOLEAN"], ["C", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "d"]>>, "d")
add_command("b", "a", <<["INTEGER", "INTEGER"], ["D", "BOOLEAN"]>>)
add_attribute("b", "c", "INTEGER")
type_check
bool_value (true)
int_value (4)
generate_java_code
add_attribute("D", "A", "e")
add_call_chain(<<D,c,d,a,BOOLEAN,e,BOOLEAN>>)
bool_value (true)
bool_value (true)
add_call_chain(<<A,a,e,b,A,e,a,c>>)
logical_negation
int_value (24)
multiplication
add_attribute("a", "A", "BOOLEAN")
numerical_negation
add_class(b)
logical_negation
add_attribute("e", "A", "A")
int_value (5)
add_query("e", "c", <<["c", "INTEGER"], ["C", "BOOLEAN"], ["d", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "INTEGER"], ["a", "C"]>>, "BOOLEAN")
add_call_chain(<<BOOLEAN>>)
int_value (22)
logical_negation
generate_java_code
type_check
int_value (37)
bool_value (true)
bool_value (false)
int_value (38)
add_call_chain(<<a,BOOLEAN,b,B,b,INTEGER,a,c,D>>)
disjunction
numerical_negation
numerical_negation
bool_value (true)
add_call_chain(<<C,C>>)
add_call_chain(<<D,INTEGER,b,B,a,BOOLEAN,D,C>>)
add_command("e", "e", <<["B", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "INTEGER"], ["A", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "BOOLEAN"]>>)
add_query("e", "e", <<["B", "A"], ["INTEGER", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["e", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["b", "b"]>>, "C")
add_call_chain(<<d,c,c>>)
logical_negation
generate_java_code
multiplication
int_value (49)
add_call_chain(<<e,C>>)
add_query("b", "INTEGER", <<["b", "c"], ["BOOLEAN", "INTEGER"], ["a", "c"], ["c", "A"], ["c", "d"], ["e", "INTEGER"], ["a", "b"]>>, "B")
add_attribute("C", "c", "d")
subtraction
bool_value (false)
add_command("c", "a", <<["d", "b"], ["c", "a"], ["a", "BOOLEAN"], ["B", "BOOLEAN"], ["INTEGER", "A"], ["D", "INTEGER"], ["D", "INTEGER"]>>)
add_class(d)
add_command("c", "B", <<["C", "INTEGER"], ["e", "BOOLEAN"]>>)
numerical_negation
add_command("e", "D", <<["e", "BOOLEAN"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["B", "A"]>>)
addition
add_attribute("a", "A", "INTEGER")
add_command("INTEGER", "INTEGER", <<["D", "INTEGER"], ["b", "BOOLEAN"], ["D", "C"]>>)
add_attribute("b", "BOOLEAN", "INTEGER")
add_call_chain(<<C,a>>)
numerical_negation
add_attribute("c", "A", "BOOLEAN")
add_class(C)
add_query("a", "c", <<["D", "c"], ["b", "INTEGER"]>>, "c")
add_class(b)
int_value (7)
add_attribute("A", "D", "b")
add_command("BOOLEAN", "D", <<["D", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["A", "BOOLEAN"]>>)
bool_value (false)
add_query("BOOLEAN", "INTEGER", <<["a", "a"], ["a", "INTEGER"], ["a", "b"], ["A", "B"], ["A", "BOOLEAN"], ["d", "B"], ["d", "BOOLEAN"]>>, "d")
add_call_chain(<<B,d,C,c,B,B>>)
type_check
add_call_chain(<<b,e,D,e,d,A>>)
add_class(D)
add_call_chain(<<a,D,C,d>>)
int_value (2)
less_than
