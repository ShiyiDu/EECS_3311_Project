numerical_negation
add_query("b", "D", <<["b", "INTEGER"], ["B", "INTEGER"], ["b", "d"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "e"], ["d", "D"], ["d", "INTEGER"], ["C", "a"]>>, "a")
bool_value (true)
add_command("INTEGER", "a", <<["C", "C"], ["INTEGER", "BOOLEAN"], ["A", "a"], ["b", "BOOLEAN"], ["B", "BOOLEAN"]>>)
logical_negation
add_query("B", "a", <<["C", "d"], ["D", "a"]>>, "b")
modulo
add_call_chain(<<BOOLEAN,BOOLEAN,B,e,b,D>>)
add_attribute("A", "d", "c")
add_call_chain(<<b,B,D,B,c,C>>)
greater_than
conjunction
add_class(B)
int_value (49)
generate_java_code
add_class(b)
bool_value (true)
bool_value (true)
add_call_chain(<<a,INTEGER,INTEGER,e,INTEGER,A,e>>)
generate_java_code
add_query("B", "e", <<["d", "INTEGER"], ["INTEGER", "BOOLEAN"]>>, "d")
add_call_chain(<<C,BOOLEAN,c,C,B,C>>)
bool_value (false)
add_attribute("INTEGER", "A", "BOOLEAN")
add_attribute("B", "C", "BOOLEAN")
add_query("a", "B", <<["A", "b"], ["A", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["B", "INTEGER"], ["e", "BOOLEAN"], ["a", "INTEGER"]>>, "d")
numerical_negation
greater_than
add_attribute("c", "D", "INTEGER")
add_call_chain(<<INTEGER,C,B,A,BOOLEAN,BOOLEAN>>)
add_call_chain(<<INTEGER,c,D,e,C,c,b>>)
numerical_negation
add_call_chain(<<d,a,C,b>>)
disjunction
multiplication
add_command("C", "B", <<["e", "B"], ["e", "BOOLEAN"], ["D", "A"], ["D", "D"], ["c", "B"], ["INTEGER", "B"], ["C", "INTEGER"]>>)
add_class(d)
conjunction
equals
type_check
add_call_chain(<<d,b,b,B,a,e,C>>)
add_class(C)
int_value (9)
add_attribute("e", "INTEGER", "D")
add_attribute("a", "b", "B")
add_query("c", "C", <<["C", "INTEGER"]>>, "e")
type_check
conjunction
logical_negation
add_call_chain(<<a,D,BOOLEAN,C>>)
int_value (32)
add_call_chain(<<D>>)
add_call_chain(<<B>>)
greater_than
add_query("e", "b", <<["a", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "BOOLEAN"]>>, "b")
generate_java_code
generate_java_code
add_call_chain(<<B,b,A,A>>)
logical_negation
logical_negation
add_command("B", "e", <<["A", "C"], ["C", "A"], ["A", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["C", "c"], ["A", "D"]>>)
add_command("e", "b", <<["B", "B"], ["d", "C"], ["A", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
add_attribute("a", "INTEGER", "d")
add_command("a", "e", <<["INTEGER", "INTEGER"], ["A", "c"], ["B", "BOOLEAN"], ["D", "INTEGER"]>>)
bool_value (true)
int_value (23)
add_call_chain(<<A,INTEGER,b,d,e,D>>)
logical_negation
add_call_chain(<<D,B>>)
int_value (19)
logical_negation
add_call_chain(<<A,b,a,D,e,INTEGER,a>>)
bool_value (false)
multiplication
logical_negation
numerical_negation
add_query("C", "b", <<["C", "d"]>>, "b")
add_attribute("e", "d", "BOOLEAN")
add_call_chain(<<c,B,e,c,B,b>>)
add_attribute("e", "e", "INTEGER")
add_call_chain(<<A,c,c,b,c,e,d>>)
type_check
int_value (48)
add_call_chain(<<c>>)
add_call_chain(<<D,e,B,D>>)
add_query("INTEGER", "e", <<["B", "INTEGER"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["D", "d"], ["C", "INTEGER"]>>, "a")
bool_value (false)
disjunction
generate_java_code
logical_negation
add_command("c", "a", <<["d", "INTEGER"], ["a", "D"], ["e", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "INTEGER"]>>)
add_call_chain(<<A,b,e,C,d,c,D,c,d>>)
add_call_chain(<<b,e,C,C,a,C,INTEGER>>)
generate_java_code
add_query("B", "e", <<["b", "BOOLEAN"], ["D", "e"]>>, "d")
generate_java_code
modulo
add_call_chain(<<C,c,a,B,d,d,D,d>>)
int_value (26)
conjunction
generate_java_code
add_command("c", "b", <<["b", "INTEGER"], ["C", "BOOLEAN"], ["e", "BOOLEAN"], ["BOOLEAN", "A"], ["D", "BOOLEAN"], ["C", "c"]>>)
numerical_negation
bool_value (false)
int_value (20)
add_attribute("e", "BOOLEAN", "BOOLEAN")
conjunction
add_query("C", "a", <<["d", "BOOLEAN"], ["d", "d"], ["B", "BOOLEAN"], ["e", "C"], ["B", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["C", "INTEGER"]>>, "A")
logical_negation
add_call_chain(<<d,A,a,d,INTEGER,d>>)
type_check
add_call_chain(<<A,A,a,a,c>>)
modulo
bool_value (false)
add_call_chain(<<d,b,BOOLEAN,d,C,C,b,d,a>>)
greater_than
add_class(A)
add_call_chain(<<a,B,B,BOOLEAN,c,b>>)
logical_negation
bool_value (true)
numerical_negation
equals
add_command("d", "D", <<["D", "e"]>>)
add_query("c", "B", <<["B", "INTEGER"], ["c", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["c", "BOOLEAN"]>>, "d")
greater_than
bool_value (true)
numerical_negation
add_query("A", "e", <<["D", "INTEGER"], ["INTEGER", "BOOLEAN"], ["e", "A"], ["e", "C"], ["b", "INTEGER"], ["BOOLEAN", "INTEGER"]>>, "BOOLEAN")
add_command("e", "a", <<["a", "e"], ["e", "INTEGER"], ["d", "BOOLEAN"], ["D", "A"]>>)
logical_negation
add_command("c", "d", <<["A", "BOOLEAN"]>>)
add_attribute("d", "b", "BOOLEAN")
numerical_negation
type_check
add_call_chain(<<e,INTEGER,c,C,c,a,a,B,INTEGER>>)
add_call_chain(<<b,INTEGER,a,a>>)
add_call_chain(<<e,c>>)
add_class(B)
less_than
logical_negation
less_than
bool_value (false)
add_query("e", "BOOLEAN", <<["d", "BOOLEAN"]>>, "INTEGER")
add_call_chain(<<e,B,C,d,BOOLEAN,d,d,a,D>>)
int_value (17)
add_call_chain(<<d,BOOLEAN>>)
add_class(b)
add_command("D", "d", <<["e", "B"], ["B", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "d"], ["c", "BOOLEAN"]>>)
type_check
type_check
type_check
int_value (21)
numerical_negation
type_check
add_command("c", "d", <<["INTEGER", "BOOLEAN"], ["INTEGER", "B"], ["e", "INTEGER"], ["b", "INTEGER"], ["d", "INTEGER"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["C", "D"], ["D", "BOOLEAN"]>>)
add_call_chain(<<C,e,C,B,BOOLEAN>>)
add_attribute("INTEGER", "D", "BOOLEAN")
add_call_chain(<<A,e,D,b,b,e,e>>)
add_attribute("c", "C", "BOOLEAN")
add_command("A", "A", <<["A", "D"], ["C", "e"], ["C", "INTEGER"], ["A", "b"], ["INTEGER", "INTEGER"], ["INTEGER", "INTEGER"]>>)
int_value (6)
logical_negation
bool_value (true)
int_value (6)
add_call_chain(<<B,b,a,d,e,b>>)
bool_value (false)
add_call_chain(<<A,c,A,INTEGER,D,b,INTEGER,D,c>>)
type_check
bool_value (true)
add_command("e", "D", <<["C", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "A"], ["b", "BOOLEAN"], ["D", "C"], ["d", "INTEGER"], ["A", "e"]>>)
add_call_chain(<<d,A,A,b,c,b>>)
numerical_negation
add_call_chain(<<INTEGER,b,A,e,e>>)
add_query("d", "C", <<["B", "BOOLEAN"], ["A", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["INTEGER", "BOOLEAN"], ["c", "INTEGER"]>>, "D")
numerical_negation
numerical_negation
add_attribute("C", "C", "BOOLEAN")
numerical_negation
add_attribute("BOOLEAN", "c", "e")
add_command("e", "D", <<["INTEGER", "INTEGER"], ["c", "BOOLEAN"], ["INTEGER", "INTEGER"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>)
add_call_chain(<<INTEGER,A,B>>)
add_class(e)
add_query("C", "d", <<["a", "INTEGER"], ["a", "B"], ["C", "BOOLEAN"]>>, "B")
add_call_chain(<<e,c>>)
int_value (18)
add_class(C)
logical_negation
add_command("a", "A", <<["A", "INTEGER"], ["c", "INTEGER"], ["BOOLEAN", "INTEGER"], ["b", "INTEGER"], ["C", "INTEGER"], ["b", "BOOLEAN"]>>)
add_call_chain(<<D>>)
generate_java_code
logical_negation
add_call_chain(<<B,D,b,a,A,D,e,a>>)
add_class(e)
add_command("a", "A", <<["C", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "INTEGER"], ["D", "D"], ["D", "INTEGER"], ["e", "BOOLEAN"], ["b", "INTEGER"], ["B", "INTEGER"]>>)
equals
bool_value (true)
add_query("B", "e", <<["e", "BOOLEAN"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "INTEGER"], ["B", "INTEGER"], ["b", "BOOLEAN"], ["a", "B"]>>, "INTEGER")
add_query("a", "A", <<["c", "B"], ["b", "BOOLEAN"], ["a", "INTEGER"], ["c", "d"], ["e", "BOOLEAN"], ["a", "B"], ["C", "INTEGER"], ["A", "C"]>>, "A")
add_call_chain(<<A,a,B,C,d,a,D>>)
add_call_chain(<<e,e,b,C,D,BOOLEAN>>)
disjunction
modulo
addition
less_than
int_value (15)
add_call_chain(<<B,d,c,B>>)
add_class(b)
add_command("BOOLEAN", "d", <<["a", "INTEGER"], ["d", "a"], ["C", "B"], ["BOOLEAN", "INTEGER"], ["e", "BOOLEAN"], ["D", "BOOLEAN"], ["d", "INTEGER"]>>)
type_check
add_attribute("B", "B", "INTEGER")
numerical_negation
add_call_chain(<<C,B,c,c>>)
add_call_chain(<<C,a,b>>)
greater_than
add_class(C)
conjunction
