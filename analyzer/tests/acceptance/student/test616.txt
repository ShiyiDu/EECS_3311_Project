bool_value (false)
add_query("D", "B", <<["A", "INTEGER"], ["e", "d"], ["d", "BOOLEAN"], ["C", "d"], ["b", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "BOOLEAN"]>>, "B")
greater_than
int_value (12)
add_call_chain(<<a>>)
logical_negation
add_class(D)
conjunction
add_call_chain(<<B,C,D>>)
bool_value (false)
addition
numerical_negation
add_command("C", "B", <<["D", "D"], ["C", "BOOLEAN"], ["c", "INTEGER"], ["D", "D"], ["A", "c"], ["D", "BOOLEAN"], ["c", "BOOLEAN"]>>)
int_value (43)
add_command("D", "a", <<["C", "BOOLEAN"], ["A", "INTEGER"], ["c", "INTEGER"], ["d", "b"]>>)
add_query("C", "B", <<["a", "INTEGER"], ["c", "INTEGER"], ["e", "C"], ["INTEGER", "BOOLEAN"], ["c", "c"], ["INTEGER", "e"]>>, "c")
logical_negation
logical_negation
add_call_chain(<<c,C,e,d,a>>)
logical_negation
bool_value (false)
add_attribute("B", "INTEGER", "BOOLEAN")
int_value (13)
add_attribute("d", "c", "b")
add_query("A", "e", <<["A", "e"], ["BOOLEAN", "INTEGER"], ["C", "INTEGER"], ["d", "e"], ["C", "A"], ["c", "INTEGER"], ["e", "BOOLEAN"]>>, "c")
add_call_chain(<<A,A>>)
add_command("d", "C", <<["D", "A"]>>)
add_class(B)
bool_value (false)
logical_negation
equals
numerical_negation
add_class(d)
add_call_chain(<<BOOLEAN>>)
add_call_chain(<<C,INTEGER,a,d,a,e,e>>)
int_value (37)
generate_java_code
generate_java_code
add_query("e", "d", <<["d", "INTEGER"], ["A", "B"], ["B", "INTEGER"], ["C", "BOOLEAN"], ["b", "BOOLEAN"]>>, "INTEGER")
int_value (44)
add_attribute("D", "INTEGER", "INTEGER")
generate_java_code
add_command("D", "e", <<["INTEGER", "INTEGER"], ["d", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "INTEGER"], ["D", "a"]>>)
add_call_chain(<<e,A,d,INTEGER,A,A,b,c,e>>)
add_call_chain(<<D,b,a>>)
numerical_negation
quotient
logical_negation
add_call_chain(<<C,d,c>>)
add_class(b)
add_attribute("C", "B", "d")
int_value (9)
add_call_chain(<<B,e,C,b,e,c,e>>)
type_check
add_query("B", "a", <<["A", "A"], ["c", "INTEGER"], ["d", "INTEGER"], ["BOOLEAN", "d"], ["C", "BOOLEAN"], ["b", "c"]>>, "INTEGER")
add_query("A", "C", <<["d", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>, "A")
add_attribute("D", "INTEGER", "INTEGER")
add_call_chain(<<A>>)
numerical_negation
disjunction
add_class(D)
bool_value (true)
add_call_chain(<<B>>)
generate_java_code
add_command("INTEGER", "B", <<["c", "BOOLEAN"], ["a", "INTEGER"], ["B", "INTEGER"], ["a", "D"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["B", "BOOLEAN"]>>)
add_call_chain(<<A>>)
addition
add_attribute("a", "B", "a")
add_call_chain(<<b,D>>)
bool_value (true)
bool_value (false)
generate_java_code
subtraction
add_attribute("e", "INTEGER", "BOOLEAN")
addition
numerical_negation
add_call_chain(<<d,d,e,c,b>>)
type_check
conjunction
type_check
type_check
int_value (44)
add_call_chain(<<A,c,D,e>>)
add_class(B)
logical_negation
add_command("c", "BOOLEAN", <<["d", "e"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["e", "e"], ["D", "INTEGER"], ["D", "B"], ["B", "D"]>>)
add_command("A", "C", <<["d", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["a", "INTEGER"]>>)
add_call_chain(<<d,b,a>>)
logical_negation
add_query("C", "BOOLEAN", <<["b", "BOOLEAN"], ["a", "INTEGER"], ["a", "BOOLEAN"], ["D", "B"], ["D", "BOOLEAN"], ["BOOLEAN", "b"]>>, "a")
equals
add_call_chain(<<C,B,D,e,C,a>>)
add_command("B", "C", <<["b", "BOOLEAN"], ["B", "INTEGER"], ["c", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "INTEGER"], ["a", "INTEGER"]>>)
int_value (34)
logical_negation
bool_value (true)
generate_java_code
add_call_chain(<<C,C,A,b,e,INTEGER,B>>)
less_than
type_check
type_check
type_check
add_attribute("e", "d", "BOOLEAN")
conjunction
numerical_negation
bool_value (true)
bool_value (true)
add_attribute("A", "D", "INTEGER")
add_query("B", "A", <<["c", "INTEGER"], ["D", "c"], ["INTEGER", "INTEGER"]>>, "INTEGER")
type_check
int_value (13)
add_command("d", "B", <<["b", "INTEGER"], ["d", "b"], ["d", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["INTEGER", "INTEGER"]>>)
equals
generate_java_code
modulo
type_check
add_query("D", "B", <<["D", "c"], ["e", "INTEGER"], ["D", "BOOLEAN"], ["b", "D"], ["c", "INTEGER"], ["C", "BOOLEAN"], ["c", "INTEGER"], ["A", "INTEGER"], ["e", "A"]>>, "e")
add_call_chain(<<c,D,a,A>>)
equals
numerical_negation
logical_negation
add_command("C", "C", <<["C", "BOOLEAN"], ["c", "C"], ["C", "BOOLEAN"], ["c", "b"], ["D", "B"], ["A", "BOOLEAN"]>>)
add_attribute("A", "D", "INTEGER")
numerical_negation
conjunction
add_call_chain(<<d>>)
type_check
bool_value (true)
add_call_chain(<<D,A,B>>)
add_command("A", "B", <<["c", "D"], ["b", "INTEGER"], ["BOOLEAN", "INTEGER"], ["e", "BOOLEAN"]>>)
int_value (14)
add_query("A", "B", <<["c", "B"], ["B", "INTEGER"], ["e", "d"], ["C", "b"], ["C", "INTEGER"], ["A", "INTEGER"], ["e", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "D"]>>, "B")
add_call_chain(<<C,A,a,c,A,b,C,B>>)
add_call_chain(<<b,D>>)
add_call_chain(<<c>>)
add_call_chain(<<B,D,a,e,d,c,c>>)
add_call_chain(<<b,c,B,d,C,INTEGER,C,D>>)
equals
add_attribute("C", "a", "B")
bool_value (false)
int_value (19)
add_call_chain(<<D,D,D,b,a,C,b,A,c>>)
multiplication
equals
type_check
add_class(C)
add_command("a", "b", <<["BOOLEAN", "BOOLEAN"], ["b", "INTEGER"], ["e", "BOOLEAN"]>>)
numerical_negation
int_value (48)
add_query("c", "e", <<["b", "b"], ["c", "INTEGER"], ["a", "a"]>>, "C")
add_attribute("C", "b", "INTEGER")
numerical_negation
logical_negation
numerical_negation
numerical_negation
add_query("A", "D", <<["b", "INTEGER"], ["A", "BOOLEAN"], ["a", "INTEGER"]>>, "C")
type_check
int_value (34)
add_class(C)
type_check
add_command("C", "e", <<["BOOLEAN", "d"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["B", "INTEGER"], ["A", "INTEGER"], ["a", "INTEGER"]>>)
add_call_chain(<<a,a,d,d,D>>)
add_call_chain(<<D,B,d,a,BOOLEAN,b,D,A,D>>)
bool_value (false)
add_query("e", "c", <<["b", "e"], ["BOOLEAN", "BOOLEAN"]>>, "e")
add_class(d)
add_call_chain(<<C,c,a>>)
bool_value (false)
addition
type_check
add_class(INTEGER)
generate_java_code
int_value (26)
numerical_negation
add_call_chain(<<d,A,BOOLEAN,e,b,b,e,a>>)
add_query("C", "C", <<["D", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "INTEGER"], ["c", "INTEGER"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "BOOLEAN"]>>, "BOOLEAN")
logical_negation
int_value (31)
bool_value (false)
logical_negation
add_attribute("c", "b", "a")
logical_negation
generate_java_code
add_query("B", "A", <<["C", "INTEGER"], ["B", "BOOLEAN"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["a", "INTEGER"], ["d", "INTEGER"], ["d", "BOOLEAN"], ["D", "INTEGER"], ["BOOLEAN", "c"]>>, "b")
greater_than
add_command("b", "e", <<["C", "BOOLEAN"], ["a", "d"], ["C", "INTEGER"], ["INTEGER", "BOOLEAN"], ["a", "INTEGER"], ["d", "INTEGER"], ["A", "INTEGER"], ["A", "INTEGER"], ["a", "BOOLEAN"]>>)
add_call_chain(<<d,A,A,B,b>>)
int_value (43)
logical_negation
add_query("d", "e", <<["C", "B"], ["c", "INTEGER"], ["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "A"], ["C", "a"]>>, "D")
add_query("D", "D", <<["c", "b"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["A", "INTEGER"], ["INTEGER", "BOOLEAN"], ["c", "D"], ["D", "INTEGER"], ["A", "BOOLEAN"], ["b", "d"]>>, "BOOLEAN")
bool_value (true)
disjunction
bool_value (false)
greater_than
add_query("A", "c", <<["BOOLEAN", "BOOLEAN"], ["D", "B"], ["BOOLEAN", "b"], ["B", "INTEGER"], ["D", "B"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["c", "INTEGER"]>>, "b")
logical_negation
numerical_negation
add_query("c", "e", <<["b", "INTEGER"], ["B", "BOOLEAN"], ["e", "b"], ["d", "C"], ["A", "INTEGER"], ["c", "C"]>>, "B")
add_class(c)
add_call_chain(<<c,b,BOOLEAN,C,A,A,D,b,INTEGER>>)
add_attribute("c", "e", "BOOLEAN")
disjunction
add_query("d", "A", <<["INTEGER", "B"], ["b", "BOOLEAN"], ["e", "C"]>>, "d")
add_query("b", "A", <<["C", "INTEGER"]>>, "B")
bool_value (false)
add_command("b", "C", <<["BOOLEAN", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "B"], ["C", "INTEGER"], ["D", "INTEGER"], ["b", "BOOLEAN"]>>)
add_query("A", "D", <<["b", "c"], ["b", "C"], ["A", "INTEGER"], ["D", "b"], ["e", "BOOLEAN"], ["c", "INTEGER"], ["a", "BOOLEAN"], ["e", "INTEGER"]>>, "A")
bool_value (true)
generate_java_code
add_call_chain(<<C,d,BOOLEAN,A,D,a>>)
add_attribute("C", "d", "BOOLEAN")
add_query("B", "B", <<["C", "INTEGER"]>>, "d")
type_check
add_attribute("b", "INTEGER", "INTEGER")
int_value (32)
add_call_chain(<<A,a,B>>)
add_call_chain(<<C,C>>)
bool_value (false)
type_check
add_query("C", "c", <<["C", "b"], ["B", "BOOLEAN"], ["A", "D"], ["b", "INTEGER"], ["D", "INTEGER"], ["c", "BOOLEAN"]>>, "a")
logical_negation
add_attribute("D", "D", "INTEGER")
add_command("b", "d", <<["a", "BOOLEAN"]>>)
int_value (18)
