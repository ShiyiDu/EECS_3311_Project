equals
add_attribute("A", "B", "BOOLEAN")
add_command("A", "BOOLEAN", <<["d", "INTEGER"]>>)
int_value (36)
add_attribute("BOOLEAN", "B", "C")
int_value (30)
int_value (31)
bool_value (false)
add_attribute("B", "B", "BOOLEAN")
add_command("c", "INTEGER", <<["A", "INTEGER"], ["D", "C"], ["INTEGER", "d"], ["C", "INTEGER"], ["B", "BOOLEAN"]>>)
logical_negation
numerical_negation
add_attribute("B", "e", "BOOLEAN")
type_check
logical_negation
add_query("D", "C", <<["A", "BOOLEAN"], ["B", "b"], ["A", "BOOLEAN"], ["INTEGER", "INTEGER"], ["C", "D"], ["B", "A"]>>, "A")
logical_negation
add_query("e", "D", <<["d", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "INTEGER"], ["INTEGER", "INTEGER"]>>, "a")
disjunction
type_check
bool_value (true)
add_call_chain(<<B,C,c,INTEGER,C,BOOLEAN,B,d,D>>)
numerical_negation
add_command("D", "c", <<["d", "e"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["A", "INTEGER"], ["c", "INTEGER"], ["INTEGER", "INTEGER"], ["b", "BOOLEAN"], ["A", "BOOLEAN"]>>)
logical_negation
int_value (2)
add_query("A", "d", <<["b", "BOOLEAN"], ["B", "INTEGER"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["b", "INTEGER"], ["B", "D"]>>, "BOOLEAN")
int_value (44)
add_call_chain(<<d,e,D,INTEGER,d,B,C>>)
greater_than
logical_negation
add_attribute("e", "d", "INTEGER")
add_call_chain(<<e>>)
add_attribute("b", "A", "INTEGER")
type_check
add_call_chain(<<A,b,D,e,A,D,a,c,C>>)
add_class(D)
add_query("C", "e", <<["B", "BOOLEAN"], ["A", "A"], ["D", "D"], ["b", "d"]>>, "A")
conjunction
bool_value (true)
add_call_chain(<<d,D,b,C,e,b>>)
int_value (49)
equals
type_check
less_than
add_query("C", "e", <<["A", "e"], ["D", "BOOLEAN"], ["e", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["e", "INTEGER"], ["a", "B"]>>, "e")
bool_value (true)
numerical_negation
int_value (9)
add_attribute("D", "B", "INTEGER")
add_query("a", "e", <<["INTEGER", "BOOLEAN"], ["A", "INTEGER"], ["e", "INTEGER"]>>, "c")
addition
add_call_chain(<<e,A,e,b,B,b,a,c>>)
int_value (43)
bool_value (false)
bool_value (true)
add_class(C)
generate_java_code
bool_value (true)
logical_negation
add_call_chain(<<A,d,B,d,B,D,a,e>>)
add_call_chain(<<a,e,d>>)
numerical_negation
less_than
add_attribute("d", "b", "BOOLEAN")
bool_value (false)
quotient
subtraction
add_command("A", "a", <<["B", "b"]>>)
bool_value (false)
int_value (30)
bool_value (true)
add_command("INTEGER", "A", <<["B", "C"], ["a", "BOOLEAN"], ["a", "INTEGER"], ["A", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "INTEGER"], ["d", "BOOLEAN"], ["b", "BOOLEAN"]>>)
add_class(b)
add_command("d", "e", <<["a", "INTEGER"], ["A", "BOOLEAN"], ["e", "INTEGER"], ["e", "A"], ["c", "INTEGER"], ["a", "D"]>>)
add_call_chain(<<C,C>>)
add_call_chain(<<B,C,B,D,D>>)
add_class(D)
add_call_chain(<<B,d,b,BOOLEAN,D,c>>)
type_check
generate_java_code
add_query("C", "INTEGER", <<["A", "INTEGER"], ["a", "BOOLEAN"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["b", "D"], ["C", "INTEGER"], ["C", "BOOLEAN"]>>, "a")
logical_negation
add_query("d", "D", <<["b", "INTEGER"], ["a", "C"], ["b", "e"], ["A", "A"], ["D", "BOOLEAN"]>>, "b")
add_call_chain(<<b,c,b>>)
add_attribute("c", "b", "INTEGER")
add_attribute("INTEGER", "BOOLEAN", "INTEGER")
bool_value (false)
generate_java_code
add_command("B", "a", <<["B", "BOOLEAN"], ["D", "INTEGER"], ["B", "INTEGER"], ["b", "BOOLEAN"]>>)
add_call_chain(<<A,e,C,d,D,a,D>>)
numerical_negation
conjunction
add_query("BOOLEAN", "C", <<["A", "INTEGER"], ["b", "INTEGER"], ["BOOLEAN", "INTEGER"], ["D", "BOOLEAN"], ["d", "BOOLEAN"]>>, "d")
add_command("c", "C", <<["a", "BOOLEAN"]>>)
less_than
add_query("a", "d", <<["C", "BOOLEAN"]>>, "B")
logical_negation
int_value (12)
numerical_negation
add_query("c", "d", <<["D", "INTEGER"], ["INTEGER", "BOOLEAN"], ["c", "INTEGER"], ["e", "BOOLEAN"], ["e", "INTEGER"]>>, "B")
logical_negation
add_call_chain(<<d,A,INTEGER,b,BOOLEAN,b>>)
add_call_chain(<<c,d,e,INTEGER>>)
add_command("C", "d", <<["b", "d"], ["e", "INTEGER"], ["d", "D"]>>)
add_command("e", "BOOLEAN", <<["B", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["c", "C"], ["a", "A"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["INTEGER", "c"], ["e", "C"]>>)
conjunction
add_class(B)
add_command("C", "B", <<["e", "a"], ["B", "c"], ["C", "a"], ["e", "B"], ["b", "BOOLEAN"], ["d", "D"], ["b", "INTEGER"], ["C", "INTEGER"]>>)
add_class(C)
add_call_chain(<<a>>)
add_attribute("C", "A", "C")
equals
int_value (37)
add_query("a", "BOOLEAN", <<["A", "INTEGER"], ["D", "INTEGER"], ["b", "BOOLEAN"], ["A", "INTEGER"], ["e", "BOOLEAN"], ["D", "INTEGER"]>>, "a")
add_call_chain(<<B,C,e,D>>)
bool_value (false)
numerical_negation
add_query("A", "D", <<["d", "d"]>>, "C")
add_call_chain(<<A,C,C,B,c>>)
add_call_chain(<<B,b,BOOLEAN,B>>)
generate_java_code
int_value (3)
add_query("B", "e", <<["e", "INTEGER"], ["INTEGER", "BOOLEAN"], ["C", "INTEGER"], ["A", "INTEGER"]>>, "BOOLEAN")
add_attribute("e", "B", "BOOLEAN")
add_query("A", "B", <<["D", "BOOLEAN"], ["C", "D"], ["C", "BOOLEAN"]>>, "b")
add_command("b", "D", <<["d", "e"], ["e", "INTEGER"], ["e", "C"], ["D", "BOOLEAN"], ["B", "B"], ["D", "INTEGER"], ["A", "INTEGER"]>>)
logical_negation
multiplication
add_attribute("B", "a", "c")
add_call_chain(<<A,c,A,D,a,c,B,B,D>>)
add_class(D)
add_query("C", "D", <<["C", "INTEGER"], ["D", "INTEGER"], ["a", "INTEGER"]>>, "A")
add_command("D", "B", <<["b", "c"], ["A", "BOOLEAN"], ["BOOLEAN", "C"], ["C", "a"], ["B", "INTEGER"], ["B", "BOOLEAN"]>>)
add_attribute("d", "B", "B")
disjunction
int_value (46)
add_call_chain(<<b,e,BOOLEAN,e>>)
numerical_negation
add_command("INTEGER", "d", <<["A", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["d", "INTEGER"], ["C", "C"], ["C", "INTEGER"]>>)
add_call_chain(<<c,C,C,A,B,a,e,B,B>>)
numerical_negation
less_than
generate_java_code
add_command("a", "a", <<["b", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "INTEGER"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["C", "A"], ["B", "a"]>>)
type_check
add_query("B", "c", <<["c", "INTEGER"], ["A", "BOOLEAN"], ["d", "INTEGER"], ["a", "INTEGER"], ["C", "INTEGER"]>>, "B")
bool_value (false)
add_call_chain(<<c,c,b,A>>)
add_command("B", "INTEGER", <<["c", "INTEGER"]>>)
generate_java_code
numerical_negation
conjunction
greater_than
generate_java_code
add_call_chain(<<b,c,a,B,B,C,e,BOOLEAN>>)
add_attribute("BOOLEAN", "C", "BOOLEAN")
add_query("INTEGER", "a", <<["INTEGER", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["A", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "BOOLEAN"]>>, "b")
add_attribute("C", "C", "BOOLEAN")
int_value (32)
add_call_chain(<<b,D,C,INTEGER>>)
add_call_chain(<<D,c,a,C,C,C,b>>)
add_query("A", "a", <<["d", "b"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["INTEGER", "c"], ["d", "INTEGER"]>>, "b")
add_query("a", "B", <<["c", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"], ["b", "e"], ["D", "BOOLEAN"], ["b", "A"]>>, "B")
add_call_chain(<<D,D,B,a,C,D,C,INTEGER,d>>)
add_command("d", "C", <<["a", "BOOLEAN"], ["C", "INTEGER"], ["C", "A"]>>)
add_command("a", "D", <<["c", "BOOLEAN"], ["D", "B"], ["b", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "B"], ["C", "INTEGER"], ["INTEGER", "B"], ["c", "BOOLEAN"]>>)
logical_negation
add_command("b", "B", <<["e", "BOOLEAN"], ["B", "BOOLEAN"]>>)
add_query("e", "INTEGER", <<["C", "b"]>>, "a")
logical_negation
disjunction
generate_java_code
add_attribute("b", "b", "INTEGER")
equals
addition
add_attribute("C", "BOOLEAN", "INTEGER")
bool_value (false)
add_command("a", "C", <<["C", "BOOLEAN"], ["a", "BOOLEAN"]>>)
int_value (14)
add_query("C", "INTEGER", <<["D", "BOOLEAN"], ["c", "C"], ["A", "BOOLEAN"], ["B", "A"], ["b", "d"], ["c", "INTEGER"], ["b", "BOOLEAN"]>>, "C")
add_attribute("c", "b", "INTEGER")
int_value (31)
add_call_chain(<<C,e,a,B,A>>)
add_attribute("b", "D", "INTEGER")
add_query("d", "d", <<["BOOLEAN", "BOOLEAN"], ["INTEGER", "INTEGER"], ["e", "B"], ["BOOLEAN", "D"], ["b", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "C"], ["b", "BOOLEAN"]>>, "b")
generate_java_code
type_check
bool_value (true)
int_value (7)
add_call_chain(<<A,a,INTEGER,D,e,BOOLEAN>>)
add_attribute("B", "c", "INTEGER")
logical_negation
less_than
generate_java_code
add_class(d)
add_class(a)
bool_value (false)
add_command("C", "INTEGER", <<["BOOLEAN", "INTEGER"], ["B", "A"], ["e", "INTEGER"], ["e", "BOOLEAN"], ["c", "b"], ["D", "BOOLEAN"], ["INTEGER", "INTEGER"], ["b", "INTEGER"]>>)
add_attribute("D", "D", "BOOLEAN")
add_command("d", "C", <<["C", "D"], ["C", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["C", "C"], ["C", "INTEGER"], ["D", "INTEGER"]>>)
add_call_chain(<<a,B,b,b,A,A,d,c,C>>)
add_command("B", "BOOLEAN", <<["A", "BOOLEAN"], ["INTEGER", "d"], ["A", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "INTEGER"], ["d", "e"], ["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "BOOLEAN"]>>)
add_command("b", "e", <<["D", "c"], ["D", "d"], ["a", "INTEGER"]>>)
add_class(D)
disjunction
generate_java_code
add_attribute("e", "B", "INTEGER")
add_attribute("d", "A", "b")
conjunction
add_call_chain(<<BOOLEAN,b,INTEGER,D,BOOLEAN,B,c,C>>)
less_than
int_value (34)
add_call_chain(<<A,BOOLEAN,C,B,C,d>>)
bool_value (false)
generate_java_code
add_call_chain(<<A,C,BOOLEAN,a,D,d>>)
quotient
add_call_chain(<<a,d,B,b,c,e,b>>)
bool_value (true)
disjunction
add_command("INTEGER", "c", <<["A", "BOOLEAN"], ["e", "c"], ["C", "d"]>>)
logical_negation
equals
multiplication
