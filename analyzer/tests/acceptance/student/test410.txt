greater_than
add_query("C", "A", <<["C", "INTEGER"], ["b", "c"], ["a", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "a"], ["C", "BOOLEAN"], ["C", "e"], ["c", "A"]>>, "d")
int_value (23)
add_call_chain(<<a,e,d,C,b,a>>)
type_check
add_call_chain(<<B,BOOLEAN,e,d,INTEGER,b,e>>)
less_than
bool_value (false)
bool_value (true)
int_value (17)
add_attribute("B", "A", "INTEGER")
logical_negation
less_than
add_command("D", "d", <<["A", "INTEGER"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["e", "INTEGER"], ["b", "INTEGER"], ["D", "b"], ["C", "INTEGER"], ["A", "B"]>>)
numerical_negation
conjunction
disjunction
add_call_chain(<<b,c,A,c,a,b,a>>)
add_call_chain(<<b,B,D,INTEGER,e,a,C,A>>)
int_value (29)
numerical_negation
type_check
int_value (40)
numerical_negation
int_value (7)
add_command("c", "e", <<["D", "INTEGER"], ["A", "INTEGER"], ["b", "B"], ["e", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "B"], ["C", "A"], ["BOOLEAN", "BOOLEAN"], ["a", "BOOLEAN"]>>)
add_class(D)
add_call_chain(<<b,D,A,b,A,BOOLEAN,A>>)
add_command("e", "A", <<["B", "BOOLEAN"], ["d", "INTEGER"], ["B", "BOOLEAN"]>>)
add_attribute("b", "e", "D")
disjunction
int_value (12)
numerical_negation
bool_value (true)
add_attribute("D", "BOOLEAN", "INTEGER")
numerical_negation
add_query("c", "B", <<["d", "BOOLEAN"]>>, "B")
add_call_chain(<<A,D,B,b,A,A,d,e,B>>)
conjunction
add_attribute("C", "B", "INTEGER")
quotient
add_class(A)
add_command("D", "B", <<["a", "e"], ["b", "INTEGER"], ["D", "c"], ["e", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "d"]>>)
add_query("C", "b", <<["b", "INTEGER"], ["B", "BOOLEAN"]>>, "b")
add_attribute("A", "B", "B")
bool_value (false)
add_call_chain(<<D,A,b>>)
add_command("D", "D", <<["a", "INTEGER"], ["D", "B"], ["B", "INTEGER"]>>)
int_value (29)
int_value (9)
add_call_chain(<<D,B,C,C,D>>)
type_check
disjunction
add_query("e", "D", <<["b", "BOOLEAN"], ["B", "INTEGER"], ["C", "D"], ["D", "D"], ["d", "BOOLEAN"], ["e", "INTEGER"], ["B", "a"]>>, "e")
bool_value (false)
add_command("D", "b", <<["b", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "d"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "BOOLEAN"]>>)
logical_negation
add_call_chain(<<D,a>>)
logical_negation
add_call_chain(<<a,a,A,c,B,e,e,B>>)
add_query("INTEGER", "e", <<["INTEGER", "BOOLEAN"], ["B", "INTEGER"], ["B", "BOOLEAN"]>>, "a")
add_command("a", "C", <<["C", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "A"]>>)
logical_negation
add_command("B", "B", <<["b", "BOOLEAN"], ["A", "B"], ["D", "e"], ["D", "BOOLEAN"], ["d", "C"]>>)
add_call_chain(<<B,B,B,c,A,c,d>>)
multiplication
greater_than
add_attribute("D", "B", "BOOLEAN")
multiplication
bool_value (true)
add_class(c)
add_attribute("D", "b", "INTEGER")
add_command("e", "D", <<["C", "A"], ["B", "b"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["INTEGER", "INTEGER"], ["c", "a"], ["BOOLEAN", "INTEGER"]>>)
add_call_chain(<<d,b,B,D,c,B,B,c,e>>)
add_call_chain(<<B,C,A,B,D,e,A,INTEGER>>)
add_command("c", "c", <<["d", "e"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["C", "INTEGER"], ["a", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["C", "A"], ["B", "BOOLEAN"], ["D", "d"]>>)
generate_java_code
add_command("e", "d", <<["INTEGER", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["B", "INTEGER"], ["A", "INTEGER"], ["B", "D"], ["c", "INTEGER"]>>)
disjunction
add_command("A", "b", <<["b", "INTEGER"], ["c", "INTEGER"], ["b", "INTEGER"], ["c", "e"], ["B", "a"], ["D", "BOOLEAN"]>>)
add_call_chain(<<d>>)
logical_negation
numerical_negation
bool_value (false)
bool_value (false)
numerical_negation
add_attribute("A", "B", "b")
add_command("B", "d", <<["c", "INTEGER"], ["a", "BOOLEAN"]>>)
add_query("D", "a", <<["INTEGER", "BOOLEAN"]>>, "D")
generate_java_code
add_call_chain(<<D,d,c,b,c,b,e,INTEGER,BOOLEAN>>)
generate_java_code
add_call_chain(<<C>>)
add_call_chain(<<A,d>>)
add_command("BOOLEAN", "C", <<["B", "INTEGER"], ["BOOLEAN", "c"], ["c", "INTEGER"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["INTEGER", "INTEGER"], ["D", "INTEGER"], ["INTEGER", "INTEGER"], ["A", "INTEGER"]>>)
add_command("A", "C", <<["b", "INTEGER"], ["B", "INTEGER"], ["A", "INTEGER"], ["c", "INTEGER"], ["a", "INTEGER"], ["C", "BOOLEAN"], ["C", "A"], ["BOOLEAN", "INTEGER"], ["A", "C"]>>)
add_attribute("d", "A", "INTEGER")
add_call_chain(<<C,D,a,C,A,e,a,BOOLEAN>>)
generate_java_code
add_class(A)
int_value (6)
add_call_chain(<<C,B,e,INTEGER,c,D,C,e>>)
add_query("INTEGER", "c", <<["c", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "INTEGER"]>>, "d")
add_call_chain(<<a>>)
add_call_chain(<<e,a,c,INTEGER>>)
int_value (27)
generate_java_code
logical_negation
logical_negation
logical_negation
type_check
add_call_chain(<<INTEGER,b,B,c,D,d>>)
type_check
conjunction
numerical_negation
numerical_negation
add_command("A", "a", <<["c", "e"], ["d", "B"], ["A", "INTEGER"], ["a", "BOOLEAN"], ["C", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "INTEGER"], ["B", "BOOLEAN"]>>)
disjunction
numerical_negation
generate_java_code
type_check
add_attribute("a", "C", "A")
bool_value (true)
type_check
int_value (40)
add_command("c", "b", <<["C", "BOOLEAN"], ["d", "C"]>>)
add_call_chain(<<e,C>>)
add_command("INTEGER", "B", <<["c", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["C", "BOOLEAN"]>>)
type_check
add_attribute("e", "d", "INTEGER")
add_query("A", "a", <<["d", "BOOLEAN"], ["A", "A"]>>, "C")
type_check
int_value (19)
add_command("B", "C", <<["C", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "B"], ["D", "B"], ["b", "INTEGER"], ["e", "C"]>>)
add_query("a", "e", <<["a", "BOOLEAN"]>>, "c")
add_command("a", "a", <<["INTEGER", "c"], ["B", "INTEGER"]>>)
int_value (17)
add_call_chain(<<e,A,A,b,B>>)
int_value (21)
bool_value (true)
generate_java_code
add_query("D", "e", <<["c", "BOOLEAN"], ["B", "e"], ["D", "C"]>>, "D")
add_query("e", "INTEGER", <<["B", "INTEGER"], ["d", "INTEGER"], ["B", "INTEGER"]>>, "D")
generate_java_code
bool_value (true)
add_class(A)
add_query("b", "A", <<["A", "INTEGER"], ["c", "BOOLEAN"], ["B", "a"], ["b", "INTEGER"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["c", "BOOLEAN"], ["INTEGER", "INTEGER"]>>, "a")
add_attribute("A", "b", "A")
type_check
less_than
less_than
greater_than
numerical_negation
add_call_chain(<<D,D,a,D,B>>)
add_call_chain(<<c,c,e,b,d,d,d,A>>)
add_class(A)
type_check
add_command("d", "a", <<["B", "a"], ["C", "INTEGER"], ["b", "INTEGER"], ["B", "BOOLEAN"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["c", "BOOLEAN"], ["c", "a"]>>)
add_call_chain(<<A,c>>)
bool_value (false)
numerical_negation
int_value (41)
bool_value (false)
add_query("b", "A", <<["B", "INTEGER"], ["A", "INTEGER"], ["B", "INTEGER"], ["b", "B"]>>, "C")
int_value (18)
numerical_negation
type_check
add_call_chain(<<B,c>>)
generate_java_code
add_attribute("a", "d", "a")
logical_negation
logical_negation
add_command("A", "A", <<["B", "INTEGER"], ["C", "a"], ["D", "INTEGER"], ["c", "INTEGER"], ["b", "BOOLEAN"], ["D", "INTEGER"], ["C", "B"], ["A", "INTEGER"]>>)
add_query("a", "B", <<["d", "INTEGER"], ["D", "INTEGER"], ["b", "A"], ["D", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>, "c")
add_class(b)
add_class(BOOLEAN)
add_query("A", "e", <<["C", "BOOLEAN"], ["B", "B"], ["c", "INTEGER"], ["b", "INTEGER"], ["c", "INTEGER"], ["d", "c"], ["A", "INTEGER"]>>, "c")
numerical_negation
add_command("B", "D", <<["BOOLEAN", "A"], ["e", "INTEGER"], ["b", "b"], ["C", "INTEGER"], ["d", "INTEGER"]>>)
add_call_chain(<<D,C,d,C,B,e,A,b,b>>)
int_value (11)
int_value (3)
add_query("c", "BOOLEAN", <<["INTEGER", "BOOLEAN"], ["d", "D"], ["A", "e"], ["BOOLEAN", "C"]>>, "A")
add_command("c", "C", <<["e", "INTEGER"], ["A", "INTEGER"], ["A", "INTEGER"], ["a", "C"], ["C", "c"], ["b", "d"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "a"]>>)
conjunction
type_check
numerical_negation
bool_value (true)
disjunction
type_check
add_class(b)
logical_negation
equals
add_query("d", "A", <<["a", "BOOLEAN"], ["d", "BOOLEAN"], ["c", "INTEGER"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["C", "INTEGER"], ["B", "INTEGER"], ["c", "BOOLEAN"], ["c", "INTEGER"]>>, "d")
add_call_chain(<<B,e,d,a,A,e,B,c,d>>)
add_class(c)
int_value (18)
add_call_chain(<<C,B>>)
add_command("a", "e", <<["c", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "INTEGER"], ["B", "b"]>>)
add_attribute("INTEGER", "A", "c")
generate_java_code
conjunction
add_command("c", "d", <<["c", "C"], ["D", "a"], ["c", "A"], ["e", "INTEGER"], ["A", "a"], ["C", "BOOLEAN"]>>)
add_command("c", "B", <<["D", "B"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["B", "INTEGER"]>>)
quotient
int_value (26)
bool_value (true)
logical_negation
add_command("BOOLEAN", "B", <<["D", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "INTEGER"], ["d", "e"]>>)
int_value (3)
add_call_chain(<<A,c,b,D>>)
logical_negation
numerical_negation
add_command("b", "b", <<["a", "INTEGER"]>>)
add_call_chain(<<C,C,a,e,INTEGER,d,C,A>>)
logical_negation
int_value (26)
modulo
modulo
conjunction
bool_value (true)
conjunction
add_class(c)
int_value (45)
int_value (36)
add_query("C", "INTEGER", <<["C", "e"]>>, "e")
add_attribute("b", "INTEGER", "e")
bool_value (false)
add_attribute("BOOLEAN", "B", "C")
conjunction
add_command("A", "e", <<["C", "BOOLEAN"], ["D", "D"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["d", "INTEGER"]>>)
add_command("A", "A", <<["C", "D"]>>)
add_call_chain(<<c,c,C,d,d,A,D,a,e>>)
int_value (6)
less_than
