add_command("a", "INTEGER", <<["b", "BOOLEAN"], ["D", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["BOOLEAN", "B"], ["b", "BOOLEAN"], ["B", "C"]>>)
logical_negation
add_query("BOOLEAN", "e", <<["c", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["e", "BOOLEAN"]>>, "B")
quotient
add_call_chain(<<c>>)
bool_value (false)
add_call_chain(<<c,a,C,A,D,INTEGER,c,B>>)
add_call_chain(<<c,c,BOOLEAN,a,A>>)
quotient
equals
int_value (26)
disjunction
int_value (49)
generate_java_code
add_command("A", "A", <<["c", "INTEGER"], ["e", "BOOLEAN"], ["a", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["C", "A"], ["e", "INTEGER"], ["B", "BOOLEAN"]>>)
conjunction
add_command("A", "BOOLEAN", <<["d", "BOOLEAN"], ["e", "INTEGER"], ["D", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "INTEGER"], ["b", "BOOLEAN"], ["C", "c"], ["C", "BOOLEAN"]>>)
add_call_chain(<<BOOLEAN,e,e,A,e,B,e,a,a>>)
add_attribute("B", "B", "INTEGER")
add_call_chain(<<INTEGER,c,e,a,A>>)
generate_java_code
add_command("a", "INTEGER", <<["D", "BOOLEAN"], ["BOOLEAN", "e"], ["A", "BOOLEAN"], ["D", "INTEGER"], ["c", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["c", "INTEGER"]>>)
int_value (45)
logical_negation
multiplication
add_call_chain(<<B,d,B,INTEGER,D,D,INTEGER,e,B>>)
add_command("e", "a", <<["B", "INTEGER"], ["INTEGER", "INTEGER"], ["B", "c"], ["d", "BOOLEAN"], ["D", "B"], ["D", "BOOLEAN"]>>)
add_call_chain(<<c,e,A,INTEGER,C,e,A>>)
greater_than
logical_negation
add_command("d", "e", <<["C", "INTEGER"]>>)
disjunction
type_check
add_query("C", "C", <<["e", "INTEGER"], ["B", "INTEGER"], ["c", "BOOLEAN"], ["c", "INTEGER"], ["B", "BOOLEAN"], ["D", "BOOLEAN"]>>, "e")
type_check
add_attribute("a", "a", "BOOLEAN")
bool_value (true)
add_attribute("A", "b", "BOOLEAN")
bool_value (false)
add_call_chain(<<C,D,C,a,C>>)
type_check
add_class(a)
generate_java_code
equals
add_command("e", "A", <<["A", "INTEGER"], ["BOOLEAN", "D"], ["c", "INTEGER"], ["C", "BOOLEAN"]>>)
add_class(b)
disjunction
int_value (40)
add_query("B", "B", <<["B", "INTEGER"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "BOOLEAN"]>>, "e")
int_value (45)
subtraction
add_attribute("b", "A", "INTEGER")
subtraction
logical_negation
add_call_chain(<<e>>)
int_value (4)
greater_than
numerical_negation
logical_negation
add_attribute("B", "B", "c")
add_query("C", "d", <<["c", "D"], ["C", "D"], ["c", "BOOLEAN"], ["INTEGER", "C"], ["INTEGER", "BOOLEAN"]>>, "B")
add_attribute("BOOLEAN", "C", "a")
numerical_negation
add_class(A)
add_call_chain(<<D>>)
numerical_negation
bool_value (true)
generate_java_code
int_value (44)
add_command("b", "e", <<["e", "INTEGER"], ["b", "INTEGER"], ["d", "INTEGER"]>>)
generate_java_code
type_check
add_command("b", "A", <<["e", "BOOLEAN"]>>)
int_value (29)
bool_value (true)
add_command("B", "e", <<["d", "INTEGER"], ["C", "D"], ["A", "B"], ["B", "a"], ["a", "d"], ["a", "B"], ["A", "BOOLEAN"], ["b", "BOOLEAN"]>>)
add_call_chain(<<A>>)
add_call_chain(<<b,c,C,d,e,B>>)
add_query("a", "D", <<["D", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["D", "INTEGER"], ["A", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["D", "B"], ["c", "A"], ["INTEGER", "d"], ["BOOLEAN", "C"]>>, "c")
less_than
add_query("C", "b", <<["e", "C"], ["INTEGER", "D"]>>, "d")
add_attribute("a", "b", "D")
add_command("D", "b", <<["c", "C"], ["C", "INTEGER"], ["B", "INTEGER"], ["A", "INTEGER"], ["INTEGER", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "BOOLEAN"]>>)
generate_java_code
numerical_negation
add_attribute("c", "e", "INTEGER")
add_query("e", "D", <<["d", "BOOLEAN"], ["d", "a"], ["e", "A"], ["e", "BOOLEAN"], ["b", "INTEGER"], ["BOOLEAN", "A"]>>, "e")
add_command("BOOLEAN", "c", <<["B", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["a", "D"], ["A", "BOOLEAN"], ["b", "BOOLEAN"], ["d", "INTEGER"], ["D", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
add_command("d", "b", <<["e", "INTEGER"], ["c", "INTEGER"], ["C", "BOOLEAN"], ["a", "B"]>>)
add_attribute("C", "d", "INTEGER")
disjunction
type_check
add_call_chain(<<d,c,B,d,b,c,C,C,BOOLEAN>>)
type_check
type_check
conjunction
bool_value (true)
add_attribute("a", "B", "BOOLEAN")
bool_value (false)
add_command("BOOLEAN", "c", <<["d", "d"], ["BOOLEAN", "BOOLEAN"], ["A", "C"], ["A", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "INTEGER"]>>)
disjunction
add_command("D", "e", <<["e", "e"], ["D", "B"], ["b", "INTEGER"], ["A", "INTEGER"]>>)
greater_than
generate_java_code
type_check
numerical_negation
add_attribute("b", "A", "INTEGER")
add_query("a", "b", <<["e", "INTEGER"], ["D", "d"], ["a", "A"], ["BOOLEAN", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["e", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>, "A")
add_attribute("C", "c", "INTEGER")
logical_negation
add_call_chain(<<D>>)
add_class(INTEGER)
bool_value (true)
add_attribute("c", "b", "INTEGER")
int_value (47)
add_class(INTEGER)
generate_java_code
add_call_chain(<<b,D,c>>)
bool_value (true)
subtraction
equals
add_call_chain(<<b,e,b,B,b,A>>)
int_value (31)
add_call_chain(<<INTEGER>>)
int_value (13)
logical_negation
add_call_chain(<<e,A,c,e,a,d,BOOLEAN,A,d>>)
add_class(d)
add_class(c)
add_attribute("e", "e", "e")
multiplication
add_attribute("C", "A", "INTEGER")
less_than
add_command("BOOLEAN", "d", <<["e", "A"]>>)
add_attribute("A", "B", "BOOLEAN")
generate_java_code
type_check
add_command("b", "d", <<["b", "INTEGER"], ["a", "A"], ["INTEGER", "BOOLEAN"], ["D", "d"], ["A", "d"], ["C", "INTEGER"], ["B", "BOOLEAN"]>>)
logical_negation
conjunction
add_attribute("b", "c", "BOOLEAN")
add_command("e", "D", <<["a", "D"], ["d", "d"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "INTEGER"], ["b", "C"], ["a", "BOOLEAN"]>>)
quotient
add_class(C)
subtraction
numerical_negation
quotient
add_command("A", "B", <<["C", "A"], ["INTEGER", "BOOLEAN"], ["d", "BOOLEAN"], ["b", "INTEGER"], ["e", "INTEGER"]>>)
add_command("B", "e", <<["C", "D"], ["e", "A"]>>)
add_query("C", "e", <<["C", "INTEGER"], ["e", "INTEGER"], ["e", "BOOLEAN"], ["b", "INTEGER"], ["c", "c"]>>, "BOOLEAN")
add_call_chain(<<D,B,BOOLEAN>>)
add_command("B", "D", <<["B", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "d"], ["c", "INTEGER"], ["d", "INTEGER"], ["INTEGER", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["a", "INTEGER"], ["INTEGER", "INTEGER"]>>)
add_call_chain(<<e,d,a>>)
add_command("d", "e", <<["INTEGER", "INTEGER"], ["A", "INTEGER"], ["a", "BOOLEAN"]>>)
add_command("INTEGER", "A", <<["d", "INTEGER"], ["a", "INTEGER"]>>)
add_command("C", "a", <<["B", "INTEGER"], ["e", "BOOLEAN"]>>)
int_value (27)
add_call_chain(<<b,b,D,a,D,b>>)
type_check
add_class(C)
add_command("C", "d", <<["c", "BOOLEAN"], ["B", "C"], ["e", "BOOLEAN"], ["B", "INTEGER"], ["c", "a"]>>)
disjunction
add_call_chain(<<a,A,D,e,c,d,C>>)
int_value (9)
numerical_negation
type_check
numerical_negation
conjunction
generate_java_code
bool_value (false)
add_call_chain(<<B,c,d>>)
type_check
add_query("a", "a", <<["C", "BOOLEAN"]>>, "D")
add_call_chain(<<D>>)
less_than
greater_than
bool_value (true)
add_call_chain(<<B,C>>)
conjunction
numerical_negation
add_query("d", "a", <<["e", "D"], ["b", "A"], ["C", "BOOLEAN"]>>, "A")
add_command("C", "a", <<["c", "INTEGER"], ["d", "BOOLEAN"], ["a", "INTEGER"], ["D", "A"], ["C", "BOOLEAN"], ["e", "b"], ["e", "INTEGER"]>>)
logical_negation
bool_value (true)
add_command("A", "BOOLEAN", <<["a", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "INTEGER"], ["c", "INTEGER"]>>)
int_value (24)
add_call_chain(<<INTEGER,A,D>>)
bool_value (false)
numerical_negation
add_query("C", "A", <<["d", "BOOLEAN"], ["d", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["a", "INTEGER"], ["c", "INTEGER"], ["C", "D"], ["C", "BOOLEAN"]>>, "d")
logical_negation
type_check
add_command("INTEGER", "BOOLEAN", <<["INTEGER", "BOOLEAN"], ["D", "INTEGER"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "C"]>>)
add_command("B", "D", <<["b", "B"]>>)
generate_java_code
add_query("c", "A", <<["D", "BOOLEAN"], ["A", "a"], ["c", "BOOLEAN"]>>, "b")
add_call_chain(<<c,a,A,C,c,b,d,INTEGER>>)
add_call_chain(<<b,d,A>>)
add_command("B", "b", <<["D", "INTEGER"], ["C", "BOOLEAN"], ["d", "INTEGER"], ["D", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "d"]>>)
int_value (40)
add_query("d", "A", <<["B", "INTEGER"], ["b", "INTEGER"], ["b", "BOOLEAN"], ["A", "c"], ["c", "D"], ["D", "C"]>>, "INTEGER")
bool_value (false)
type_check
conjunction
equals
bool_value (true)
add_call_chain(<<b,A,d,d,C>>)
int_value (46)
add_command("d", "B", <<["B", "BOOLEAN"], ["d", "INTEGER"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["a", "BOOLEAN"]>>)
add_attribute("C", "e", "INTEGER")
add_command("d", "A", <<["a", "INTEGER"], ["D", "BOOLEAN"], ["C", "A"], ["d", "INTEGER"], ["C", "B"], ["e", "INTEGER"]>>)
add_command("A", "b", <<["B", "BOOLEAN"], ["d", "b"], ["B", "A"], ["c", "INTEGER"]>>)
logical_negation
int_value (4)
