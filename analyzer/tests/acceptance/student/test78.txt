int_value (10)
add_attribute("B", "b", "C")
equals
add_attribute("C", "INTEGER", "BOOLEAN")
add_call_chain(<<C,d,d,INTEGER,b,C,a,c>>)
add_query("B", "D", <<["a", "INTEGER"]>>, "A")
type_check
add_attribute("d", "B", "INTEGER")
add_query("C", "B", <<["d", "BOOLEAN"], ["A", "INTEGER"]>>, "a")
quotient
int_value (32)
add_class(D)
add_class(b)
add_command("d", "b", <<["e", "INTEGER"], ["b", "BOOLEAN"], ["b", "INTEGER"]>>)
logical_negation
int_value (22)
numerical_negation
add_query("a", "d", <<["B", "BOOLEAN"]>>, "C")
add_call_chain(<<B,d,d,INTEGER,INTEGER,B,c,D>>)
less_than
add_call_chain(<<d,C,e,C,e>>)
numerical_negation
logical_negation
int_value (13)
generate_java_code
disjunction
int_value (21)
add_command("e", "A", <<["a", "D"], ["BOOLEAN", "INTEGER"], ["a", "INTEGER"], ["INTEGER", "INTEGER"], ["a", "INTEGER"], ["a", "A"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["b", "BOOLEAN"]>>)
int_value (5)
modulo
logical_negation
add_call_chain(<<c,e,A,C,B,C,C,A>>)
add_command("B", "e", <<["a", "INTEGER"], ["A", "INTEGER"], ["BOOLEAN", "a"], ["c", "BOOLEAN"], ["c", "BOOLEAN"]>>)
generate_java_code
add_class(D)
add_attribute("d", "A", "A")
add_attribute("B", "d", "INTEGER")
logical_negation
disjunction
conjunction
add_query("a", "C", <<["C", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "D"]>>, "c")
logical_negation
type_check
generate_java_code
add_query("e", "INTEGER", <<["C", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "A"], ["b", "INTEGER"], ["D", "a"], ["D", "BOOLEAN"]>>, "d")
int_value (33)
add_query("b", "D", <<["b", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "B"]>>, "e")
numerical_negation
add_attribute("D", "B", "INTEGER")
add_attribute("D", "B", "BOOLEAN")
bool_value (true)
int_value (31)
int_value (8)
add_attribute("A", "B", "INTEGER")
add_call_chain(<<e,A,A,D,a,e,A,C,e>>)
bool_value (false)
multiplication
add_command("b", "e", <<["B", "D"], ["A", "BOOLEAN"], ["c", "e"], ["B", "a"], ["C", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "BOOLEAN"], ["BOOLEAN", "D"], ["BOOLEAN", "BOOLEAN"]>>)
add_call_chain(<<A,c>>)
add_call_chain(<<a>>)
add_call_chain(<<d,b,b>>)
bool_value (false)
modulo
add_command("C", "d", <<["C", "BOOLEAN"], ["C", "A"], ["B", "a"], ["A", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "INTEGER"], ["e", "INTEGER"], ["BOOLEAN", "INTEGER"], ["e", "BOOLEAN"]>>)
addition
add_query("A", "c", <<["C", "A"], ["c", "BOOLEAN"], ["d", "B"], ["d", "INTEGER"], ["b", "BOOLEAN"], ["c", "INTEGER"]>>, "C")
add_command("C", "D", <<["D", "INTEGER"], ["b", "c"], ["e", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "BOOLEAN"]>>)
type_check
add_call_chain(<<c,e,B,b,D,e>>)
type_check
add_class(A)
less_than
disjunction
add_attribute("C", "e", "BOOLEAN")
int_value (9)
logical_negation
add_query("a", "D", <<["C", "D"], ["a", "BOOLEAN"], ["A", "BOOLEAN"]>>, "a")
add_query("d", "C", <<["D", "INTEGER"], ["a", "A"]>>, "INTEGER")
logical_negation
add_attribute("A", "d", "BOOLEAN")
add_call_chain(<<C,e,a>>)
add_query("B", "INTEGER", <<["a", "BOOLEAN"], ["C", "d"]>>, "B")
logical_negation
bool_value (true)
add_call_chain(<<C,B>>)
logical_negation
generate_java_code
bool_value (true)
add_call_chain(<<e,A,B,A,A,D>>)
equals
type_check
type_check
type_check
logical_negation
add_call_chain(<<D,c,B>>)
add_command("B", "b", <<["b", "c"], ["C", "b"], ["d", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "INTEGER"], ["d", "C"]>>)
less_than
add_call_chain(<<BOOLEAN,c,A,B,b,b,D>>)
logical_negation
add_attribute("D", "C", "BOOLEAN")
generate_java_code
type_check
add_call_chain(<<C,INTEGER,BOOLEAN,INTEGER,C,BOOLEAN,e>>)
generate_java_code
quotient
add_command("D", "b", <<["c", "C"], ["c", "e"]>>)
add_call_chain(<<c,D,BOOLEAN,e,e,c,d,c,C>>)
int_value (48)
int_value (40)
bool_value (true)
int_value (35)
add_attribute("a", "B", "INTEGER")
add_call_chain(<<c,B,A,INTEGER,C,B>>)
add_call_chain(<<A>>)
generate_java_code
add_command("B", "A", <<["c", "INTEGER"]>>)
add_command("BOOLEAN", "A", <<["D", "INTEGER"], ["e", "d"], ["D", "INTEGER"], ["C", "INTEGER"], ["a", "BOOLEAN"]>>)
add_command("a", "D", <<["BOOLEAN", "c"], ["a", "INTEGER"]>>)
conjunction
add_attribute("d", "D", "INTEGER")
disjunction
add_query("b", "a", <<["C", "BOOLEAN"], ["e", "INTEGER"], ["d", "A"], ["BOOLEAN", "INTEGER"]>>, "c")
disjunction
logical_negation
modulo
add_class(D)
add_attribute("C", "b", "b")
add_call_chain(<<a,A,e,b,e,b>>)
numerical_negation
add_attribute("b", "d", "INTEGER")
add_command("c", "e", <<["D", "BOOLEAN"], ["c", "INTEGER"], ["D", "D"]>>)
less_than
int_value (9)
greater_than
add_attribute("A", "A", "INTEGER")
add_call_chain(<<INTEGER,C,C,C,INTEGER,BOOLEAN,a,A>>)
add_call_chain(<<B>>)
add_call_chain(<<a,b,C,b,c,B,BOOLEAN,c,e>>)
numerical_negation
int_value (44)
bool_value (false)
multiplication
add_attribute("c", "d", "BOOLEAN")
numerical_negation
disjunction
add_command("a", "b", <<["B", "BOOLEAN"], ["e", "INTEGER"], ["b", "d"], ["d", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "A"]>>)
add_call_chain(<<B,D,B,BOOLEAN,C,a,B,A,c>>)
add_query("c", "b", <<["D", "INTEGER"], ["B", "INTEGER"], ["INTEGER", "INTEGER"], ["B", "INTEGER"]>>, "INTEGER")
add_command("c", "D", <<["D", "BOOLEAN"], ["A", "INTEGER"], ["e", "d"], ["a", "INTEGER"], ["C", "b"], ["INTEGER", "INTEGER"]>>)
add_call_chain(<<c,e,B>>)
bool_value (true)
add_query("C", "B", <<["a", "a"], ["A", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "C"]>>, "A")
add_call_chain(<<D,D,B,c,D,e,b>>)
conjunction
int_value (14)
numerical_negation
add_query("a", "B", <<["b", "INTEGER"], ["C", "INTEGER"], ["B", "INTEGER"], ["c", "INTEGER"]>>, "a")
quotient
equals
conjunction
int_value (29)
add_attribute("a", "e", "B")
int_value (22)
equals
add_query("B", "e", <<["B", "BOOLEAN"], ["d", "e"], ["C", "C"], ["C", "e"], ["d", "A"], ["a", "C"]>>, "e")
add_attribute("a", "a", "A")
add_call_chain(<<d,BOOLEAN,B,A,C,A,C,e>>)
logical_negation
add_call_chain(<<a,e,C,e,a,a>>)
add_query("c", "BOOLEAN", <<["BOOLEAN", "BOOLEAN"], ["c", "INTEGER"], ["d", "INTEGER"], ["b", "BOOLEAN"], ["e", "d"], ["B", "c"], ["A", "BOOLEAN"]>>, "C")
add_attribute("C", "e", "BOOLEAN")
add_command("d", "C", <<["d", "BOOLEAN"], ["B", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>)
add_query("C", "b", <<["C", "c"], ["a", "D"], ["a", "INTEGER"], ["a", "A"], ["c", "A"]>>, "BOOLEAN")
add_call_chain(<<c,A,C,C,b,e,B>>)
add_command("c", "d", <<["a", "BOOLEAN"], ["d", "A"], ["B", "INTEGER"], ["e", "b"], ["a", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["C", "INTEGER"], ["BOOLEAN", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
quotient
bool_value (true)
numerical_negation
add_attribute("D", "b", "BOOLEAN")
add_call_chain(<<d,BOOLEAN,d>>)
logical_negation
greater_than
add_attribute("c", "e", "BOOLEAN")
add_command("b", "a", <<["B", "BOOLEAN"], ["C", "B"], ["d", "INTEGER"], ["d", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
add_attribute("a", "D", "BOOLEAN")
bool_value (true)
add_class(A)
add_attribute("C", "b", "INTEGER")
add_call_chain(<<INTEGER,C,d,D,b>>)
add_class(d)
disjunction
add_call_chain(<<b,b,c>>)
greater_than
subtraction
int_value (24)
add_class(c)
add_call_chain(<<C,d,INTEGER,B,a,C,a,b,B>>)
bool_value (true)
logical_negation
int_value (38)
logical_negation
add_attribute("a", "d", "INTEGER")
int_value (37)
logical_negation
int_value (42)
bool_value (true)
greater_than
numerical_negation
add_command("C", "d", <<["D", "INTEGER"], ["B", "BOOLEAN"]>>)
bool_value (false)
add_call_chain(<<A,A,C,B,INTEGER,C,e>>)
logical_negation
add_attribute("c", "a", "INTEGER")
add_call_chain(<<D,C,INTEGER,B>>)
add_command("A", "INTEGER", <<["c", "e"], ["A", "INTEGER"], ["d", "BOOLEAN"]>>)
add_class(D)
int_value (1)
add_attribute("D", "D", "BOOLEAN")
numerical_negation
add_command("a", "e", <<["B", "D"], ["b", "e"], ["c", "A"], ["d", "BOOLEAN"], ["e", "INTEGER"], ["BOOLEAN", "B"], ["D", "BOOLEAN"]>>)
generate_java_code
int_value (13)
add_attribute("B", "b", "a")
numerical_negation
add_command("A", "C", <<["d", "BOOLEAN"], ["A", "INTEGER"], ["c", "C"], ["B", "D"]>>)
generate_java_code
int_value (16)
