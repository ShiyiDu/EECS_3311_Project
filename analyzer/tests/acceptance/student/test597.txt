int_value (30)
add_call_chain(<<e,D>>)
logical_negation
generate_java_code
generate_java_code
conjunction
generate_java_code
generate_java_code
add_call_chain(<<b,B>>)
add_call_chain(<<D,D,BOOLEAN,c,c>>)
add_attribute("A", "BOOLEAN", "BOOLEAN")
numerical_negation
add_class(B)
add_class(c)
add_call_chain(<<C,BOOLEAN,c>>)
add_command("b", "d", <<["D", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "BOOLEAN"], ["d", "C"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>)
add_query("A", "C", <<["INTEGER", "a"], ["B", "INTEGER"]>>, "d")
add_query("INTEGER", "c", <<["b", "INTEGER"], ["C", "c"], ["INTEGER", "BOOLEAN"], ["d", "BOOLEAN"], ["d", "INTEGER"], ["C", "INTEGER"], ["A", "INTEGER"]>>, "BOOLEAN")
bool_value (false)
add_call_chain(<<A,A,d,e>>)
conjunction
add_query("B", "A", <<["D", "BOOLEAN"], ["B", "b"], ["A", "INTEGER"], ["INTEGER", "D"], ["D", "BOOLEAN"]>>, "a")
add_query("D", "INTEGER", <<["D", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "BOOLEAN"]>>, "C")
add_call_chain(<<C,B,c,B,D,B,C,A>>)
bool_value (false)
modulo
add_command("e", "e", <<["d", "INTEGER"], ["BOOLEAN", "INTEGER"], ["D", "INTEGER"], ["e", "BOOLEAN"], ["d", "INTEGER"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "BOOLEAN"]>>)
add_command("A", "e", <<["c", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "e"], ["INTEGER", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "INTEGER"]>>)
numerical_negation
add_call_chain(<<a,D,A,INTEGER,C,d,e,A>>)
numerical_negation
type_check
add_command("C", "C", <<["c", "d"], ["e", "c"], ["B", "C"], ["C", "INTEGER"], ["b", "a"], ["D", "BOOLEAN"]>>)
logical_negation
disjunction
add_command("D", "a", <<["a", "INTEGER"], ["C", "INTEGER"]>>)
addition
generate_java_code
add_call_chain(<<b,D,b,B,a>>)
int_value (8)
add_command("c", "B", <<["INTEGER", "INTEGER"], ["A", "BOOLEAN"], ["c", "BOOLEAN"], ["e", "INTEGER"]>>)
add_command("b", "D", <<["B", "C"], ["BOOLEAN", "b"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["c", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "INTEGER"]>>)
bool_value (true)
generate_java_code
add_query("B", "D", <<["B", "A"], ["C", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["B", "INTEGER"]>>, "d")
multiplication
bool_value (true)
add_class(A)
add_attribute("B", "A", "BOOLEAN")
disjunction
add_call_chain(<<C,A,d,INTEGER,C,d,e>>)
numerical_negation
add_class(INTEGER)
numerical_negation
greater_than
add_call_chain(<<c,e,d,b,B,C,b>>)
bool_value (false)
add_class(e)
add_class(b)
int_value (1)
add_command("D", "C", <<["B", "INTEGER"], ["a", "d"]>>)
add_attribute("b", "C", "a")
add_query("D", "e", <<["b", "INTEGER"], ["C", "INTEGER"], ["e", "BOOLEAN"], ["D", "C"], ["e", "e"], ["INTEGER", "INTEGER"], ["B", "BOOLEAN"], ["a", "C"], ["d", "c"]>>, "C")
int_value (27)
add_call_chain(<<B>>)
add_call_chain(<<B,INTEGER,B,D,D,B,B,B>>)
subtraction
logical_negation
modulo
add_class(A)
add_call_chain(<<d,b,b>>)
disjunction
add_class(BOOLEAN)
add_call_chain(<<d>>)
add_call_chain(<<a,D,C,D,c,C,A,BOOLEAN,B>>)
add_attribute("D", "d", "INTEGER")
add_query("a", "b", <<["c", "BOOLEAN"], ["D", "B"], ["A", "INTEGER"], ["A", "INTEGER"], ["d", "BOOLEAN"], ["B", "INTEGER"], ["d", "INTEGER"], ["B", "d"], ["d", "INTEGER"]>>, "A")
int_value (26)
int_value (9)
add_attribute("B", "a", "e")
bool_value (false)
add_query("B", "B", <<["e", "INTEGER"], ["C", "C"], ["b", "c"], ["c", "BOOLEAN"]>>, "c")
add_call_chain(<<B,c,A,c>>)
logical_negation
bool_value (false)
bool_value (true)
add_attribute("D", "D", "BOOLEAN")
add_attribute("D", "C", "BOOLEAN")
type_check
add_class(B)
numerical_negation
add_query("a", "D", <<["D", "BOOLEAN"], ["a", "B"], ["INTEGER", "INTEGER"], ["INTEGER", "d"], ["D", "INTEGER"], ["e", "c"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>, "INTEGER")
modulo
add_call_chain(<<D,C,b,B,A,e,B,C>>)
logical_negation
add_query("b", "a", <<["D", "BOOLEAN"], ["c", "B"]>>, "c")
generate_java_code
add_class(D)
bool_value (false)
conjunction
type_check
numerical_negation
conjunction
generate_java_code
bool_value (false)
add_command("B", "A", <<["D", "c"], ["C", "BOOLEAN"], ["B", "b"]>>)
add_attribute("D", "b", "A")
less_than
bool_value (true)
add_call_chain(<<a,A,D,D,B,C,b,C>>)
add_command("BOOLEAN", "b", <<["INTEGER", "a"]>>)
add_command("A", "BOOLEAN", <<["D", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["C", "INTEGER"]>>)
add_class(B)
add_query("a", "INTEGER", <<["A", "INTEGER"], ["e", "INTEGER"], ["a", "INTEGER"], ["b", "INTEGER"], ["A", "INTEGER"], ["e", "INTEGER"], ["a", "INTEGER"]>>, "B")
generate_java_code
add_attribute("B", "c", "INTEGER")
add_query("e", "A", <<["A", "BOOLEAN"], ["b", "c"], ["C", "INTEGER"], ["C", "d"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["B", "c"], ["b", "BOOLEAN"], ["b", "INTEGER"]>>, "D")
add_attribute("D", "B", "BOOLEAN")
add_call_chain(<<A,a,e>>)
generate_java_code
add_query("D", "B", <<["C", "BOOLEAN"], ["INTEGER", "INTEGER"], ["B", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["e", "INTEGER"], ["A", "e"], ["C", "BOOLEAN"]>>, "e")
int_value (9)
numerical_negation
type_check
numerical_negation
add_attribute("C", "A", "C")
int_value (24)
add_command("C", "c", <<["c", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["A", "BOOLEAN"]>>)
multiplication
int_value (8)
bool_value (true)
add_class(a)
quotient
add_query("C", "e", <<["C", "INTEGER"], ["C", "INTEGER"]>>, "b")
type_check
add_class(D)
add_class(BOOLEAN)
add_call_chain(<<D,d,e,D>>)
add_attribute("d", "c", "c")
bool_value (true)
add_call_chain(<<c,D,INTEGER,INTEGER,d,c,A>>)
add_class(B)
add_call_chain(<<A,A,C,b,b,D,D>>)
numerical_negation
int_value (41)
add_attribute("B", "e", "b")
add_query("e", "INTEGER", <<["c", "INTEGER"], ["d", "BOOLEAN"], ["e", "INTEGER"], ["a", "BOOLEAN"], ["B", "INTEGER"], ["B", "INTEGER"]>>, "b")
add_call_chain(<<B,A,D,c,D,A,C,B>>)
add_attribute("B", "A", "INTEGER")
int_value (28)
add_class(B)
generate_java_code
addition
greater_than
greater_than
add_query("A", "INTEGER", <<["D", "d"], ["e", "INTEGER"], ["C", "INTEGER"], ["e", "BOOLEAN"], ["b", "INTEGER"]>>, "D")
add_call_chain(<<b,d>>)
multiplication
add_attribute("C", "A", "BOOLEAN")
add_attribute("a", "A", "INTEGER")
add_command("C", "d", <<["b", "C"], ["A", "A"], ["c", "a"], ["C", "BOOLEAN"], ["A", "BOOLEAN"], ["INTEGER", "b"], ["d", "INTEGER"], ["a", "INTEGER"], ["e", "INTEGER"]>>)
bool_value (true)
add_attribute("B", "INTEGER", "b")
add_call_chain(<<INTEGER>>)
add_class(b)
generate_java_code
greater_than
add_attribute("A", "c", "c")
add_command("a", "b", <<["D", "INTEGER"], ["BOOLEAN", "D"], ["b", "A"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "INTEGER"], ["C", "b"], ["D", "INTEGER"]>>)
subtraction
add_attribute("B", "a", "BOOLEAN")
disjunction
add_attribute("c", "b", "BOOLEAN")
add_command("D", "a", <<["B", "BOOLEAN"], ["D", "C"], ["BOOLEAN", "c"], ["b", "B"], ["c", "e"], ["C", "INTEGER"], ["D", "b"]>>)
generate_java_code
modulo
add_command("C", "A", <<["e", "INTEGER"], ["B", "e"], ["e", "INTEGER"]>>)
add_command("e", "b", <<["A", "e"], ["B", "BOOLEAN"], ["a", "D"]>>)
int_value (11)
int_value (34)
add_call_chain(<<C,A,C,d,b,INTEGER,d>>)
equals
type_check
add_command("D", "b", <<["INTEGER", "B"], ["B", "INTEGER"], ["e", "B"], ["INTEGER", "INTEGER"], ["a", "BOOLEAN"]>>)
add_query("d", "D", <<["B", "A"], ["C", "INTEGER"], ["C", "INTEGER"], ["A", "A"], ["D", "INTEGER"], ["C", "C"], ["d", "BOOLEAN"], ["b", "BOOLEAN"]>>, "B")
add_attribute("b", "a", "A")
add_query("B", "A", <<["D", "BOOLEAN"], ["B", "B"], ["a", "INTEGER"]>>, "A")
type_check
generate_java_code
add_class(B)
generate_java_code
add_command("a", "d", <<["d", "INTEGER"]>>)
add_call_chain(<<A,D,D,BOOLEAN,e,C,c>>)
add_query("c", "a", <<["c", "BOOLEAN"], ["B", "b"], ["a", "BOOLEAN"], ["A", "D"], ["BOOLEAN", "D"], ["d", "b"], ["C", "BOOLEAN"], ["d", "INTEGER"], ["BOOLEAN", "d"]>>, "c")
add_call_chain(<<INTEGER,C>>)
type_check
add_command("a", "e", <<["a", "C"], ["e", "INTEGER"]>>)
add_call_chain(<<b>>)
int_value (40)
equals
greater_than
add_attribute("A", "B", "BOOLEAN")
add_call_chain(<<A,C,c,b,B>>)
equals
add_query("INTEGER", "a", <<["D", "BOOLEAN"]>>, "A")
bool_value (false)
add_call_chain(<<B,b,A,A,BOOLEAN>>)
add_call_chain(<<b,C,C,INTEGER>>)
equals
logical_negation
add_attribute("d", "A", "INTEGER")
addition
add_query("D", "b", <<["d", "C"], ["D", "BOOLEAN"], ["c", "BOOLEAN"], ["INTEGER", "A"], ["A", "INTEGER"], ["BOOLEAN", "INTEGER"]>>, "e")
add_call_chain(<<B,BOOLEAN,B,A,C,A,C,e>>)
add_call_chain(<<D>>)
conjunction
add_query("c", "d", <<["A", "d"], ["a", "INTEGER"], ["B", "BOOLEAN"], ["C", "D"], ["A", "b"], ["A", "BOOLEAN"], ["D", "BOOLEAN"]>>, "c")
int_value (19)
add_command("a", "C", <<["d", "BOOLEAN"], ["b", "c"], ["a", "INTEGER"], ["d", "INTEGER"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["D", "d"], ["B", "BOOLEAN"]>>)
add_command("a", "a", <<["a", "BOOLEAN"], ["B", "BOOLEAN"], ["INTEGER", "d"], ["A", "e"], ["BOOLEAN", "C"], ["BOOLEAN", "BOOLEAN"]>>)
add_command("c", "D", <<["a", "c"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "d"], ["a", "A"], ["b", "INTEGER"], ["d", "INTEGER"], ["A", "INTEGER"], ["b", "INTEGER"]>>)
add_call_chain(<<B,C,C,B>>)
bool_value (true)
add_command("BOOLEAN", "a", <<["a", "B"], ["B", "INTEGER"], ["A", "C"], ["b", "BOOLEAN"], ["D", "BOOLEAN"], ["d", "BOOLEAN"]>>)
logical_negation
disjunction
logical_negation
logical_negation
conjunction
numerical_negation
generate_java_code
add_attribute("D", "d", "d")
numerical_negation
add_query("A", "D", <<["INTEGER", "d"]>>, "d")
add_command("e", "C", <<["B", "BOOLEAN"], ["b", "d"], ["C", "C"], ["A", "INTEGER"], ["c", "INTEGER"], ["a", "BOOLEAN"], ["c", "INTEGER"], ["D", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>)
add_call_chain(<<C,INTEGER,b,b,B>>)
int_value (33)
int_value (26)
add_command("B", "D", <<["D", "INTEGER"], ["c", "A"], ["B", "d"], ["B", "BOOLEAN"], ["b", "INTEGER"]>>)
type_check
int_value (43)
add_call_chain(<<D,A>>)
type_check
