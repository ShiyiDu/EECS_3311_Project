numerical_negation
add_query("C", "c", <<["a", "d"], ["e", "b"], ["D", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["c", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "BOOLEAN"]>>, "c")
add_class(D)
type_check
equals
add_attribute("e", "a", "BOOLEAN")
add_class(C)
add_call_chain(<<C,a,c,c>>)
add_query("D", "b", <<["c", "B"], ["a", "INTEGER"], ["b", "BOOLEAN"], ["a", "INTEGER"]>>, "C")
logical_negation
add_call_chain(<<D,b,e,c,D,A,B>>)
add_class(A)
add_call_chain(<<b,A,c>>)
generate_java_code
add_class(A)
add_command("d", "B", <<["A", "BOOLEAN"], ["d", "INTEGER"]>>)
add_attribute("a", "b", "B")
add_call_chain(<<BOOLEAN,D,B>>)
equals
int_value (29)
disjunction
add_call_chain(<<D,D>>)
generate_java_code
add_attribute("e", "a", "INTEGER")
numerical_negation
add_class(c)
add_call_chain(<<c,C,D,A,b,C,D,c,e>>)
int_value (41)
generate_java_code
modulo
add_call_chain(<<a,c,e,c,a>>)
add_call_chain(<<a>>)
bool_value (true)
numerical_negation
add_query("b", "D", <<["B", "INTEGER"], ["B", "BOOLEAN"]>>, "A")
add_attribute("e", "a", "INTEGER")
add_command("a", "C", <<["d", "BOOLEAN"], ["BOOLEAN", "b"]>>)
bool_value (true)
bool_value (false)
type_check
type_check
bool_value (false)
add_query("B", "d", <<["A", "c"]>>, "INTEGER")
add_command("C", "e", <<["a", "INTEGER"], ["C", "INTEGER"]>>)
add_command("BOOLEAN", "B", <<["e", "d"], ["e", "D"], ["b", "BOOLEAN"], ["a", "INTEGER"], ["a", "a"], ["d", "INTEGER"]>>)
conjunction
logical_negation
add_query("BOOLEAN", "D", <<["A", "d"], ["b", "INTEGER"]>>, "C")
multiplication
logical_negation
logical_negation
int_value (16)
type_check
bool_value (true)
bool_value (true)
add_attribute("BOOLEAN", "a", "INTEGER")
int_value (40)
add_call_chain(<<A,c,e,e,B,D>>)
add_query("e", "d", <<["A", "BOOLEAN"], ["D", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["c", "BOOLEAN"], ["d", "b"], ["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"]>>, "e")
add_attribute("b", "B", "INTEGER")
add_call_chain(<<A,e,a,b,A,D,e,c,e>>)
add_call_chain(<<INTEGER,INTEGER>>)
generate_java_code
generate_java_code
add_attribute("b", "D", "a")
add_call_chain(<<B,INTEGER,B,B,A>>)
add_command("D", "a", <<["BOOLEAN", "e"], ["b", "a"], ["C", "BOOLEAN"], ["C", "A"], ["d", "INTEGER"]>>)
bool_value (true)
add_attribute("INTEGER", "INTEGER", "BOOLEAN")
add_command("d", "A", <<["a", "D"], ["e", "BOOLEAN"]>>)
multiplication
bool_value (true)
add_call_chain(<<c,c,a,D>>)
bool_value (false)
bool_value (true)
type_check
logical_negation
add_call_chain(<<d,A,INTEGER,B,B,A,C,INTEGER>>)
add_query("e", "b", <<["A", "INTEGER"], ["D", "BOOLEAN"], ["D", "A"], ["A", "D"], ["B", "INTEGER"], ["D", "INTEGER"], ["c", "INTEGER"]>>, "INTEGER")
numerical_negation
add_call_chain(<<INTEGER,A,B,c,A,A,D>>)
conjunction
bool_value (true)
numerical_negation
bool_value (false)
add_call_chain(<<A,b,C>>)
add_class(b)
add_command("B", "B", <<["d", "BOOLEAN"], ["e", "BOOLEAN"], ["a", "C"], ["A", "BOOLEAN"]>>)
less_than
greater_than
numerical_negation
add_query("BOOLEAN", "e", <<["A", "INTEGER"], ["b", "INTEGER"], ["e", "b"], ["A", "BOOLEAN"], ["d", "INTEGER"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["D", "B"]>>, "e")
int_value (27)
add_call_chain(<<d,e,e,B,C,D,b>>)
greater_than
add_call_chain(<<A,d,a,B,BOOLEAN,d>>)
int_value (33)
logical_negation
add_class(D)
add_query("A", "b", <<["B", "BOOLEAN"], ["a", "a"], ["C", "D"], ["c", "INTEGER"], ["A", "BOOLEAN"], ["D", "a"], ["b", "INTEGER"], ["C", "INTEGER"]>>, "D")
bool_value (true)
logical_negation
add_class(D)
add_call_chain(<<c,BOOLEAN,C>>)
type_check
bool_value (false)
numerical_negation
add_query("INTEGER", "e", <<["INTEGER", "INTEGER"], ["D", "BOOLEAN"], ["b", "C"], ["B", "BOOLEAN"], ["B", "BOOLEAN"]>>, "b")
conjunction
add_attribute("INTEGER", "A", "C")
int_value (23)
bool_value (false)
generate_java_code
add_command("B", "C", <<["e", "INTEGER"], ["a", "INTEGER"], ["e", "BOOLEAN"]>>)
add_query("c", "C", <<["BOOLEAN", "D"], ["A", "d"], ["B", "BOOLEAN"]>>, "D")
disjunction
add_query("b", "C", <<["c", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "d"], ["a", "INTEGER"], ["BOOLEAN", "e"], ["B", "INTEGER"], ["D", "A"]>>, "C")
multiplication
bool_value (false)
generate_java_code
add_call_chain(<<a,D,C,A,e,BOOLEAN,INTEGER,INTEGER,D>>)
bool_value (false)
add_call_chain(<<B,D,b,C,B,C,D>>)
add_attribute("c", "BOOLEAN", "C")
logical_negation
numerical_negation
numerical_negation
add_call_chain(<<e,a,D,c,c,e,C>>)
numerical_negation
add_class(a)
greater_than
int_value (22)
add_call_chain(<<BOOLEAN,A,b,e,B,A,d,b,c>>)
disjunction
type_check
add_attribute("A", "C", "A")
add_attribute("A", "D", "d")
add_command("c", "D", <<["D", "d"]>>)
add_attribute("BOOLEAN", "B", "C")
int_value (34)
add_query("D", "b", <<["INTEGER", "e"], ["B", "A"], ["INTEGER", "D"], ["a", "INTEGER"]>>, "D")
add_query("C", "D", <<["e", "a"], ["c", "A"], ["b", "INTEGER"], ["b", "INTEGER"], ["b", "BOOLEAN"], ["e", "BOOLEAN"]>>, "e")
equals
conjunction
int_value (39)
int_value (40)
generate_java_code
logical_negation
type_check
add_call_chain(<<INTEGER,B,D>>)
generate_java_code
less_than
add_query("A", "D", <<["a", "d"], ["BOOLEAN", "BOOLEAN"], ["a", "b"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "INTEGER"], ["A", "INTEGER"], ["c", "INTEGER"], ["b", "INTEGER"]>>, "c")
numerical_negation
add_query("C", "b", <<["INTEGER", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "INTEGER"], ["C", "e"]>>, "e")
equals
generate_java_code
int_value (17)
conjunction
disjunction
add_call_chain(<<D,d,A,d,d,A,INTEGER,e>>)
greater_than
bool_value (true)
add_query("D", "D", <<["B", "INTEGER"], ["INTEGER", "INTEGER"]>>, "A")
add_attribute("d", "D", "a")
add_command("c", "c", <<["a", "INTEGER"], ["C", "INTEGER"], ["e", "INTEGER"], ["d", "B"], ["INTEGER", "INTEGER"], ["C", "BOOLEAN"], ["c", "BOOLEAN"]>>)
type_check
add_class(e)
add_call_chain(<<D,BOOLEAN,C,B,a,D,c,C,a>>)
add_query("A", "c", <<["B", "A"], ["D", "INTEGER"], ["a", "BOOLEAN"], ["c", "INTEGER"], ["c", "A"], ["C", "A"], ["c", "e"]>>, "c")
add_attribute("C", "B", "INTEGER")
add_call_chain(<<C,a,B,B,c,d,B,b>>)
add_attribute("C", "d", "BOOLEAN")
add_call_chain(<<B,b,a,d,C,c>>)
add_call_chain(<<e,D,C,d,c>>)
bool_value (true)
add_command("D", "D", <<["c", "BOOLEAN"], ["A", "INTEGER"], ["b", "INTEGER"], ["C", "C"], ["INTEGER", "BOOLEAN"], ["c", "INTEGER"], ["e", "D"]>>)
bool_value (false)
add_class(c)
disjunction
add_class(C)
quotient
numerical_negation
generate_java_code
add_query("d", "INTEGER", <<["INTEGER", "d"]>>, "c")
conjunction
add_command("d", "a", <<["D", "INTEGER"], ["e", "INTEGER"]>>)
generate_java_code
add_attribute("e", "C", "BOOLEAN")
add_class(INTEGER)
int_value (4)
type_check
bool_value (false)
add_call_chain(<<A,b,C,e,INTEGER,A>>)
add_query("BOOLEAN", "e", <<["B", "INTEGER"], ["d", "BOOLEAN"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["c", "C"]>>, "C")
add_command("INTEGER", "B", <<["c", "c"], ["c", "BOOLEAN"], ["d", "e"], ["e", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "B"], ["C", "B"], ["D", "INTEGER"]>>)
conjunction
int_value (6)
less_than
add_query("e", "B", <<["b", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["B", "INTEGER"]>>, "B")
add_call_chain(<<c,C,c,A,BOOLEAN,c,c,d,b>>)
bool_value (true)
logical_negation
add_call_chain(<<D,C>>)
generate_java_code
bool_value (true)
generate_java_code
add_class(e)
disjunction
add_call_chain(<<a,D,a,a,A,c>>)
add_command("a", "a", <<["D", "BOOLEAN"], ["d", "d"], ["C", "C"], ["B", "B"], ["C", "BOOLEAN"], ["e", "d"], ["e", "BOOLEAN"], ["a", "INTEGER"]>>)
quotient
numerical_negation
add_attribute("A", "C", "b")
bool_value (false)
int_value (33)
add_call_chain(<<D,a,a,A>>)
add_call_chain(<<D,B,e,INTEGER,B>>)
multiplication
add_call_chain(<<D>>)
conjunction
less_than
disjunction
less_than
add_call_chain(<<c,B,d,b,C,c,c>>)
add_call_chain(<<A>>)
int_value (40)
type_check
bool_value (true)
generate_java_code
add_call_chain(<<C,BOOLEAN,a,D,C,INTEGER,A,a>>)
bool_value (false)
logical_negation
type_check
add_attribute("D", "e", "BOOLEAN")
bool_value (false)
