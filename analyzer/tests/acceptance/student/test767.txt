numerical_negation
add_call_chain(<<c>>)
logical_negation
numerical_negation
addition
generate_java_code
add_command("D", "A", <<["d", "BOOLEAN"]>>)
int_value (14)
bool_value (false)
type_check
add_command("c", "D", <<["B", "a"], ["a", "INTEGER"], ["B", "INTEGER"], ["A", "INTEGER"]>>)
add_call_chain(<<B,a,a,B,e,e,D,INTEGER,A>>)
add_command("c", "C", <<["a", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "BOOLEAN"]>>)
int_value (38)
int_value (45)
add_command("C", "c", <<["INTEGER", "INTEGER"], ["D", "INTEGER"], ["c", "BOOLEAN"], ["INTEGER", "INTEGER"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["D", "BOOLEAN"]>>)
add_class(D)
bool_value (false)
subtraction
int_value (8)
bool_value (true)
int_value (25)
add_attribute("BOOLEAN", "C", "BOOLEAN")
type_check
add_attribute("C", "INTEGER", "INTEGER")
add_attribute("BOOLEAN", "C", "INTEGER")
bool_value (false)
bool_value (true)
bool_value (false)
add_class(BOOLEAN)
type_check
add_query("c", "d", <<["A", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "D"], ["d", "INTEGER"], ["c", "INTEGER"], ["a", "BOOLEAN"]>>, "C")
add_attribute("b", "c", "c")
numerical_negation
numerical_negation
add_class(c)
generate_java_code
add_query("c", "A", <<["A", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["a", "INTEGER"], ["INTEGER", "BOOLEAN"]>>, "C")
generate_java_code
logical_negation
numerical_negation
add_query("A", "BOOLEAN", <<["e", "BOOLEAN"], ["A", "d"]>>, "D")
greater_than
add_call_chain(<<c,INTEGER>>)
logical_negation
multiplication
bool_value (false)
numerical_negation
add_call_chain(<<e,e,e,B,D>>)
generate_java_code
add_query("A", "BOOLEAN", <<["e", "INTEGER"], ["C", "INTEGER"], ["c", "D"]>>, "BOOLEAN")
int_value (34)
int_value (46)
add_attribute("e", "d", "BOOLEAN")
less_than
int_value (36)
int_value (23)
less_than
disjunction
logical_negation
type_check
add_command("c", "a", <<["D", "C"], ["C", "INTEGER"]>>)
add_attribute("b", "BOOLEAN", "INTEGER")
disjunction
modulo
add_command("B", "C", <<["A", "C"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["a", "INTEGER"], ["INTEGER", "BOOLEAN"], ["C", "e"], ["B", "BOOLEAN"], ["B", "INTEGER"]>>)
add_command("A", "A", <<["C", "BOOLEAN"]>>)
numerical_negation
add_query("D", "c", <<["A", "INTEGER"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "INTEGER"], ["C", "INTEGER"], ["A", "INTEGER"]>>, "INTEGER")
add_attribute("b", "D", "INTEGER")
quotient
add_query("A", "c", <<["D", "BOOLEAN"], ["e", "INTEGER"], ["d", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["c", "c"], ["A", "D"], ["a", "BOOLEAN"]>>, "D")
add_class(d)
add_query("b", "a", <<["INTEGER", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "a"]>>, "e")
add_call_chain(<<d,D,INTEGER,d>>)
add_command("c", "BOOLEAN", <<["B", "C"]>>)
add_call_chain(<<C,D,A,A,e,B,C>>)
add_command("c", "A", <<["C", "INTEGER"], ["b", "BOOLEAN"], ["C", "INTEGER"], ["e", "BOOLEAN"], ["e", "A"], ["D", "b"]>>)
int_value (25)
add_command("A", "D", <<["b", "INTEGER"], ["a", "e"], ["A", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "INTEGER"], ["INTEGER", "C"], ["D", "e"], ["c", "INTEGER"]>>)
add_call_chain(<<C,c,d,A>>)
add_call_chain(<<BOOLEAN,A,b,C,c>>)
bool_value (true)
add_command("c", "B", <<["B", "BOOLEAN"], ["e", "A"], ["e", "BOOLEAN"], ["INTEGER", "INTEGER"], ["d", "INTEGER"], ["e", "INTEGER"], ["BOOLEAN", "INTEGER"], ["A", "BOOLEAN"], ["C", "INTEGER"]>>)
type_check
int_value (39)
logical_negation
add_attribute("D", "C", "b")
add_class(a)
generate_java_code
modulo
add_attribute("e", "b", "INTEGER")
logical_negation
bool_value (false)
conjunction
generate_java_code
bool_value (true)
bool_value (false)
add_command("A", "D", <<["D", "D"], ["e", "INTEGER"], ["C", "D"]>>)
generate_java_code
logical_negation
add_query("INTEGER", "BOOLEAN", <<["d", "INTEGER"], ["A", "INTEGER"]>>, "d")
int_value (43)
add_attribute("C", "A", "INTEGER")
add_call_chain(<<c,D,b,A,A,D,BOOLEAN,c>>)
quotient
numerical_negation
add_query("e", "A", <<["A", "INTEGER"], ["e", "INTEGER"], ["A", "INTEGER"], ["b", "D"]>>, "INTEGER")
int_value (4)
int_value (42)
bool_value (true)
add_query("C", "B", <<["d", "INTEGER"], ["d", "INTEGER"]>>, "a")
logical_negation
add_attribute("D", "B", "BOOLEAN")
add_class(b)
int_value (20)
add_command("b", "b", <<["d", "A"], ["INTEGER", "INTEGER"], ["b", "INTEGER"], ["A", "d"], ["C", "INTEGER"], ["c", "d"], ["A", "INTEGER"]>>)
add_call_chain(<<B,D,B,C,A,a>>)
generate_java_code
logical_negation
numerical_negation
generate_java_code
generate_java_code
add_call_chain(<<c,BOOLEAN,b,d,e,a,a>>)
disjunction
generate_java_code
numerical_negation
add_call_chain(<<INTEGER,c,a,b,a,D,B>>)
add_attribute("B", "BOOLEAN", "BOOLEAN")
int_value (42)
bool_value (false)
add_attribute("D", "e", "d")
type_check
add_call_chain(<<BOOLEAN,D>>)
add_class(C)
add_query("a", "A", <<["INTEGER", "INTEGER"], ["c", "INTEGER"], ["b", "INTEGER"], ["B", "BOOLEAN"]>>, "C")
add_command("a", "C", <<["A", "INTEGER"], ["a", "INTEGER"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "INTEGER"], ["e", "INTEGER"], ["d", "BOOLEAN"]>>)
add_attribute("a", "e", "e")
add_command("e", "b", <<["D", "BOOLEAN"]>>)
int_value (16)
logical_negation
numerical_negation
bool_value (false)
add_query("e", "C", <<["B", "INTEGER"], ["D", "INTEGER"], ["A", "a"], ["A", "C"], ["C", "BOOLEAN"], ["d", "d"]>>, "e")
greater_than
add_command("A", "e", <<["B", "D"], ["e", "INTEGER"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["e", "INTEGER"], ["BOOLEAN", "INTEGER"], ["c", "BOOLEAN"], ["C", "INTEGER"], ["a", "BOOLEAN"]>>)
add_query("e", "b", <<["D", "INTEGER"], ["D", "BOOLEAN"], ["D", "e"], ["a", "INTEGER"]>>, "C")
int_value (34)
logical_negation
multiplication
logical_negation
logical_negation
logical_negation
add_call_chain(<<c,d,C,C,C,B,B,B,C>>)
int_value (26)
bool_value (false)
add_command("c", "D", <<["b", "D"], ["A", "INTEGER"], ["b", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "INTEGER"]>>)
int_value (39)
add_query("d", "B", <<["C", "BOOLEAN"]>>, "d")
add_call_chain(<<B,A>>)
bool_value (false)
conjunction
add_call_chain(<<B,a,c,e,C,d,B,A,D>>)
add_attribute("b", "b", "b")
numerical_negation
add_query("c", "BOOLEAN", <<["c", "INTEGER"], ["B", "B"], ["b", "INTEGER"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "BOOLEAN"]>>, "C")
int_value (14)
add_command("C", "A", <<["C", "B"], ["e", "INTEGER"], ["e", "BOOLEAN"], ["B", "INTEGER"], ["C", "INTEGER"]>>)
add_class(B)
less_than
add_attribute("B", "A", "INTEGER")
numerical_negation
add_attribute("D", "b", "BOOLEAN")
add_call_chain(<<e,A,c,B,c,c,B>>)
add_call_chain(<<B,b,e,d,a,C,A,e>>)
type_check
quotient
add_attribute("a", "d", "BOOLEAN")
equals
add_query("a", "b", <<["c", "BOOLEAN"], ["d", "BOOLEAN"], ["d", "INTEGER"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["A", "d"], ["C", "a"], ["d", "C"], ["A", "BOOLEAN"]>>, "D")
modulo
add_attribute("A", "C", "BOOLEAN")
add_class(e)
add_query("b", "a", <<["a", "BOOLEAN"], ["b", "BOOLEAN"], ["e", "BOOLEAN"]>>, "b")
int_value (22)
add_call_chain(<<B,C,a,BOOLEAN,b>>)
add_query("C", "c", <<["BOOLEAN", "BOOLEAN"], ["INTEGER", "INTEGER"], ["e", "BOOLEAN"], ["e", "a"], ["b", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "INTEGER"], ["e", "A"]>>, "A")
numerical_negation
disjunction
add_call_chain(<<C,B>>)
equals
add_query("a", "B", <<["b", "INTEGER"], ["C", "b"], ["d", "a"], ["INTEGER", "BOOLEAN"], ["b", "a"]>>, "e")
generate_java_code
add_attribute("b", "INTEGER", "INTEGER")
conjunction
add_call_chain(<<b,C,A,A,a,A>>)
