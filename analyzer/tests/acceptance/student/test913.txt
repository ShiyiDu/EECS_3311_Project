add_command("d", "d", <<["BOOLEAN", "BOOLEAN"], ["d", "BOOLEAN"]>>)
add_query("e", "a", <<["b", "INTEGER"], ["D", "INTEGER"], ["d", "C"], ["INTEGER", "INTEGER"], ["e", "INTEGER"], ["B", "a"], ["A", "INTEGER"], ["D", "INTEGER"]>>, "D")
bool_value (true)
add_class(D)
add_class(d)
add_call_chain(<<D,d,a,e>>)
type_check
int_value (20)
int_value (32)
numerical_negation
bool_value (true)
add_command("C", "d", <<["d", "e"], ["a", "BOOLEAN"], ["BOOLEAN", "C"], ["C", "b"], ["INTEGER", "INTEGER"]>>)
disjunction
subtraction
logical_negation
conjunction
add_call_chain(<<BOOLEAN,BOOLEAN,e,e,A,b,d,C,b>>)
add_call_chain(<<d,e,INTEGER,BOOLEAN,d>>)
logical_negation
bool_value (false)
bool_value (true)
add_call_chain(<<BOOLEAN,C,C,D>>)
bool_value (true)
generate_java_code
add_command("C", "c", <<["A", "INTEGER"], ["e", "INTEGER"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["c", "INTEGER"], ["a", "BOOLEAN"], ["d", "D"]>>)
add_call_chain(<<d>>)
type_check
add_command("B", "B", <<["C", "c"], ["A", "BOOLEAN"], ["b", "a"], ["d", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["d", "BOOLEAN"]>>)
add_query("D", "B", <<["C", "BOOLEAN"], ["B", "INTEGER"], ["INTEGER", "d"], ["c", "D"], ["B", "INTEGER"], ["c", "b"], ["C", "INTEGER"]>>, "c")
add_attribute("e", "C", "INTEGER")
add_attribute("e", "d", "d")
subtraction
int_value (34)
quotient
type_check
int_value (1)
add_query("A", "B", <<["BOOLEAN", "INTEGER"], ["c", "BOOLEAN"], ["D", "BOOLEAN"], ["d", "a"], ["a", "BOOLEAN"], ["e", "INTEGER"], ["e", "BOOLEAN"]>>, "c")
add_command("D", "e", <<["a", "INTEGER"], ["a", "INTEGER"], ["d", "BOOLEAN"], ["a", "B"]>>)
int_value (35)
add_class(a)
generate_java_code
type_check
add_query("A", "a", <<["D", "B"], ["C", "INTEGER"], ["e", "e"], ["b", "D"], ["d", "BOOLEAN"]>>, "b")
type_check
int_value (23)
add_command("b", "A", <<["A", "INTEGER"], ["a", "D"], ["A", "BOOLEAN"], ["C", "D"], ["INTEGER", "INTEGER"], ["e", "BOOLEAN"]>>)
less_than
add_call_chain(<<C,D,a,C,A,C>>)
add_call_chain(<<e>>)
conjunction
disjunction
add_command("INTEGER", "e", <<["B", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "e"], ["d", "a"], ["A", "BOOLEAN"], ["C", "e"]>>)
add_attribute("c", "d", "BOOLEAN")
conjunction
greater_than
add_attribute("e", "e", "BOOLEAN")
add_query("D", "A", <<["B", "INTEGER"], ["D", "d"], ["C", "INTEGER"], ["e", "e"], ["D", "BOOLEAN"], ["D", "d"], ["B", "e"], ["B", "C"], ["c", "C"]>>, "INTEGER")
add_command("D", "c", <<["C", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "A"], ["C", "a"], ["B", "INTEGER"], ["e", "BOOLEAN"], ["c", "d"], ["d", "INTEGER"], ["B", "BOOLEAN"]>>)
add_call_chain(<<c,b,D,D,a,c,a,B>>)
type_check
add_command("C", "C", <<["D", "BOOLEAN"], ["c", "INTEGER"], ["A", "INTEGER"], ["A", "BOOLEAN"], ["C", "A"], ["e", "B"], ["c", "INTEGER"]>>)
multiplication
add_call_chain(<<B,C,b,b,B,D>>)
int_value (6)
bool_value (true)
generate_java_code
numerical_negation
add_command("e", "c", <<["BOOLEAN", "BOOLEAN"], ["A", "INTEGER"], ["B", "A"], ["e", "INTEGER"], ["C", "B"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "INTEGER"]>>)
add_command("D", "e", <<["D", "BOOLEAN"], ["d", "INTEGER"], ["D", "BOOLEAN"], ["b", "BOOLEAN"], ["INTEGER", "INTEGER"], ["D", "A"], ["C", "INTEGER"]>>)
add_command("d", "BOOLEAN", <<["A", "BOOLEAN"], ["INTEGER", "INTEGER"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["INTEGER", "INTEGER"]>>)
add_query("B", "b", <<["D", "b"], ["b", "BOOLEAN"], ["b", "BOOLEAN"], ["e", "A"]>>, "D")
quotient
add_call_chain(<<B,A,C,C,D>>)
less_than
type_check
generate_java_code
type_check
multiplication
generate_java_code
add_command("d", "C", <<["C", "e"], ["B", "e"], ["e", "BOOLEAN"], ["a", "INTEGER"], ["A", "BOOLEAN"], ["B", "INTEGER"]>>)
type_check
numerical_negation
quotient
add_call_chain(<<INTEGER,INTEGER>>)
logical_negation
add_call_chain(<<A,c,B,c,D>>)
logical_negation
int_value (2)
addition
add_call_chain(<<a>>)
greater_than
bool_value (true)
subtraction
add_call_chain(<<A,B>>)
add_call_chain(<<a>>)
numerical_negation
add_call_chain(<<BOOLEAN,e,B,c,C,d,D,a,B>>)
add_call_chain(<<INTEGER,a>>)
add_command("e", "a", <<["e", "e"], ["A", "B"], ["C", "INTEGER"], ["d", "BOOLEAN"], ["e", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>)
int_value (21)
bool_value (true)
add_call_chain(<<c,C,A,c,A,a,c,C,A>>)
numerical_negation
bool_value (false)
addition
numerical_negation
add_attribute("B", "INTEGER", "D")
int_value (49)
add_command("B", "INTEGER", <<["a", "B"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["d", "A"], ["INTEGER", "INTEGER"], ["A", "e"], ["C", "BOOLEAN"]>>)
addition
add_query("a", "INTEGER", <<["d", "INTEGER"], ["B", "a"], ["d", "BOOLEAN"], ["c", "e"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["a", "BOOLEAN"]>>, "d")
add_class(D)
generate_java_code
logical_negation
conjunction
add_call_chain(<<a,BOOLEAN,D,C,C,B,c>>)
add_call_chain(<<b>>)
equals
add_attribute("D", "C", "a")
add_command("c", "a", <<["c", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "A"], ["B", "e"]>>)
bool_value (true)
conjunction
add_class(e)
disjunction
generate_java_code
disjunction
add_query("D", "b", <<["b", "INTEGER"], ["D", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["a", "A"], ["a", "INTEGER"], ["b", "BOOLEAN"]>>, "C")
add_class(e)
int_value (24)
conjunction
bool_value (true)
generate_java_code
add_query("c", "B", <<["B", "B"], ["D", "INTEGER"], ["A", "a"], ["c", "c"]>>, "B")
conjunction
bool_value (false)
add_command("A", "d", <<["D", "INTEGER"], ["D", "d"], ["c", "B"], ["D", "A"], ["C", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "INTEGER"], ["C", "BOOLEAN"], ["BOOLEAN", "C"]>>)
add_call_chain(<<d>>)
add_query("A", "A", <<["e", "INTEGER"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["d", "BOOLEAN"], ["d", "BOOLEAN"], ["c", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>, "a")
add_command("D", "B", <<["d", "BOOLEAN"], ["b", "INTEGER"], ["A", "BOOLEAN"], ["b", "INTEGER"], ["d", "c"]>>)
add_attribute("B", "a", "D")
add_attribute("b", "INTEGER", "BOOLEAN")
bool_value (false)
generate_java_code
add_call_chain(<<B,D,d,D,B,D,b,d>>)
add_class(c)
int_value (35)
add_attribute("d", "INTEGER", "C")
add_command("C", "D", <<["C", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "c"], ["A", "B"], ["d", "BOOLEAN"]>>)
numerical_negation
conjunction
add_call_chain(<<D,INTEGER,B,C,B>>)
multiplication
type_check
numerical_negation
int_value (36)
addition
int_value (23)
int_value (37)
add_call_chain(<<b,C,c,e,e,B,B,C,A>>)
generate_java_code
add_call_chain(<<BOOLEAN,A,D,a,B,BOOLEAN>>)
add_command("d", "b", <<["a", "BOOLEAN"], ["A", "INTEGER"], ["D", "B"]>>)
int_value (45)
numerical_negation
numerical_negation
numerical_negation
add_class(c)
multiplication
type_check
add_query("C", "B", <<["D", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "INTEGER"]>>, "D")
add_attribute("C", "A", "B")
add_attribute("B", "e", "A")
add_call_chain(<<D,e,A,e,B,e>>)
int_value (15)
add_call_chain(<<b,C,B,a,D,D,b>>)
add_command("C", "BOOLEAN", <<["A", "INTEGER"], ["C", "INTEGER"], ["a", "a"], ["D", "BOOLEAN"]>>)
add_query("A", "b", <<["a", "INTEGER"], ["c", "C"], ["BOOLEAN", "INTEGER"], ["D", "B"], ["b", "BOOLEAN"]>>, "C")
generate_java_code
add_call_chain(<<A,e,D,d,a>>)
add_call_chain(<<A,B,B,D,C,e>>)
add_command("D", "c", <<["d", "BOOLEAN"], ["b", "INTEGER"], ["B", "e"]>>)
conjunction
int_value (29)
bool_value (true)
add_attribute("A", "BOOLEAN", "BOOLEAN")
add_command("B", "c", <<["d", "INTEGER"], ["C", "INTEGER"], ["A", "INTEGER"], ["INTEGER", "BOOLEAN"], ["C", "BOOLEAN"]>>)
add_command("a", "e", <<["B", "a"], ["A", "INTEGER"]>>)
generate_java_code
generate_java_code
disjunction
add_call_chain(<<A,e,A,b,D>>)
conjunction
int_value (21)
modulo
type_check
add_query("b", "d", <<["d", "INTEGER"], ["B", "BOOLEAN"], ["c", "B"], ["d", "INTEGER"], ["B", "BOOLEAN"], ["B", "INTEGER"], ["C", "B"], ["D", "BOOLEAN"], ["d", "INTEGER"]>>, "BOOLEAN")
type_check
add_query("e", "B", <<["c", "D"], ["b", "a"]>>, "a")
type_check
logical_negation
add_command("BOOLEAN", "D", <<["B", "INTEGER"], ["c", "BOOLEAN"]>>)
add_query("b", "d", <<["B", "INTEGER"], ["INTEGER", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "INTEGER"]>>, "A")
add_command("B", "a", <<["a", "BOOLEAN"], ["d", "INTEGER"], ["INTEGER", "INTEGER"], ["D", "BOOLEAN"], ["C", "INTEGER"]>>)
add_command("C", "c", <<["INTEGER", "D"], ["d", "e"], ["B", "INTEGER"], ["d", "INTEGER"], ["D", "INTEGER"], ["A", "b"], ["b", "C"]>>)
add_query("D", "INTEGER", <<["c", "INTEGER"], ["A", "INTEGER"], ["e", "c"], ["a", "BOOLEAN"]>>, "d")
add_attribute("D", "b", "A")
add_query("d", "B", <<["D", "BOOLEAN"], ["A", "INTEGER"], ["BOOLEAN", "A"], ["A", "INTEGER"], ["A", "c"], ["D", "INTEGER"], ["e", "b"]>>, "e")
bool_value (true)
add_query("c", "e", <<["c", "INTEGER"], ["D", "BOOLEAN"], ["B", "B"], ["e", "D"], ["D", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "d"], ["C", "d"], ["BOOLEAN", "D"]>>, "d")
add_call_chain(<<A,D,a,e,D>>)
equals
multiplication
generate_java_code
type_check
less_than
add_attribute("c", "e", "C")
add_call_chain(<<d,b,INTEGER,C,e,d,D>>)
add_attribute("b", "D", "INTEGER")
bool_value (true)
add_call_chain(<<b,e,C,D>>)
