add_attribute("c", "a", "d")
bool_value (false)
numerical_negation
add_class(c)
equals
int_value (22)
add_call_chain(<<INTEGER,e,B,d,a,C,D,BOOLEAN,INTEGER>>)
bool_value (false)
add_command("A", "a", <<["D", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "b"], ["C", "INTEGER"]>>)
add_command("e", "B", <<["e", "BOOLEAN"], ["d", "INTEGER"], ["b", "A"]>>)
add_attribute("b", "C", "INTEGER")
type_check
add_call_chain(<<A,d,BOOLEAN,A,a,a,D,A>>)
int_value (13)
multiplication
numerical_negation
numerical_negation
logical_negation
add_command("b", "c", <<["d", "BOOLEAN"], ["a", "INTEGER"], ["e", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["A", "d"]>>)
logical_negation
generate_java_code
type_check
numerical_negation
subtraction
greater_than
add_call_chain(<<e>>)
bool_value (true)
add_query("d", "b", <<["a", "INTEGER"]>>, "D")
add_query("C", "C", <<["INTEGER", "BOOLEAN"]>>, "c")
add_call_chain(<<c,B,d,A,INTEGER,e,c,e>>)
int_value (18)
int_value (40)
add_attribute("INTEGER", "B", "B")
add_command("B", "C", <<["e", "INTEGER"], ["b", "A"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["d", "INTEGER"], ["A", "D"], ["D", "INTEGER"]>>)
add_query("a", "c", <<["C", "INTEGER"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["a", "A"]>>, "C")
int_value (45)
int_value (39)
bool_value (false)
add_command("D", "A", <<["D", "A"], ["B", "c"], ["b", "BOOLEAN"]>>)
add_command("B", "C", <<["b", "INTEGER"], ["d", "INTEGER"], ["e", "INTEGER"], ["D", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "c"]>>)
add_attribute("BOOLEAN", "b", "BOOLEAN")
add_command("A", "D", <<["C", "e"], ["a", "INTEGER"], ["a", "INTEGER"], ["B", "BOOLEAN"], ["b", "BOOLEAN"]>>)
bool_value (true)
logical_negation
add_call_chain(<<C,A>>)
greater_than
bool_value (true)
bool_value (false)
add_command("e", "D", <<["D", "INTEGER"], ["INTEGER", "BOOLEAN"], ["B", "INTEGER"], ["b", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "INTEGER"]>>)
add_attribute("a", "B", "INTEGER")
bool_value (true)
type_check
generate_java_code
add_attribute("c", "c", "BOOLEAN")
greater_than
generate_java_code
conjunction
add_command("a", "B", <<["c", "BOOLEAN"], ["B", "INTEGER"], ["e", "INTEGER"], ["a", "BOOLEAN"], ["a", "A"], ["b", "INTEGER"]>>)
type_check
add_call_chain(<<B,a,INTEGER,D,c>>)
add_query("c", "b", <<["C", "INTEGER"]>>, "B")
type_check
add_query("A", "b", <<["A", "d"], ["c", "INTEGER"]>>, "B")
add_query("c", "A", <<["a", "INTEGER"], ["b", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["D", "BOOLEAN"], ["B", "BOOLEAN"]>>, "b")
type_check
logical_negation
numerical_negation
bool_value (false)
add_call_chain(<<c,C,D,A,D>>)
bool_value (true)
logical_negation
bool_value (true)
add_call_chain(<<D,C>>)
add_attribute("A", "C", "BOOLEAN")
add_query("D", "B", <<["B", "INTEGER"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "INTEGER"]>>, "D")
logical_negation
bool_value (true)
add_call_chain(<<c,b,C,A,INTEGER,b,A,A>>)
numerical_negation
type_check
less_than
add_query("e", "a", <<["a", "BOOLEAN"], ["a", "INTEGER"], ["A", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["D", "INTEGER"], ["C", "INTEGER"], ["BOOLEAN", "INTEGER"], ["e", "INTEGER"], ["B", "d"]>>, "a")
add_attribute("B", "c", "BOOLEAN")
int_value (17)
add_call_chain(<<b,e>>)
add_command("D", "B", <<["d", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "INTEGER"]>>)
add_call_chain(<<b,B>>)
type_check
add_class(C)
add_command("A", "B", <<["e", "b"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["d", "d"], ["INTEGER", "b"], ["C", "BOOLEAN"], ["D", "A"]>>)
add_call_chain(<<A,d,b,D,D,D>>)
multiplication
add_query("D", "e", <<["b", "a"], ["c", "a"], ["B", "BOOLEAN"]>>, "D")
add_call_chain(<<B,c>>)
bool_value (false)
add_call_chain(<<B,c,e,e,c,b,d,d,c>>)
int_value (37)
conjunction
add_call_chain(<<c,c,B,D,B,D>>)
add_call_chain(<<c,C,d>>)
quotient
generate_java_code
int_value (49)
logical_negation
numerical_negation
add_command("d", "e", <<["e", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["c", "c"]>>)
logical_negation
add_call_chain(<<c,d,D,D,A,a,c>>)
generate_java_code
add_command("D", "b", <<["c", "INTEGER"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["c", "INTEGER"], ["c", "INTEGER"], ["A", "BOOLEAN"], ["INTEGER", "e"], ["e", "BOOLEAN"], ["b", "INTEGER"]>>)
add_call_chain(<<A,D,c,d,C>>)
add_class(c)
numerical_negation
add_call_chain(<<INTEGER,D,D,a,A,e>>)
generate_java_code
generate_java_code
type_check
add_command("a", "B", <<["c", "BOOLEAN"], ["C", "BOOLEAN"], ["d", "INTEGER"], ["A", "INTEGER"]>>)
modulo
add_query("C", "D", <<["d", "BOOLEAN"]>>, "A")
bool_value (true)
add_attribute("A", "D", "INTEGER")
less_than
int_value (13)
add_call_chain(<<a,a,b,B,A,a>>)
bool_value (false)
numerical_negation
bool_value (true)
add_attribute("a", "A", "A")
addition
greater_than
add_query("B", "e", <<["A", "INTEGER"]>>, "A")
generate_java_code
add_class(d)
numerical_negation
add_command("c", "D", <<["b", "BOOLEAN"], ["d", "BOOLEAN"], ["d", "INTEGER"], ["a", "INTEGER"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["e", "BOOLEAN"]>>)
add_command("a", "C", <<["C", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "BOOLEAN"], ["c", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "INTEGER"]>>)
bool_value (true)
add_attribute("e", "INTEGER", "BOOLEAN")
subtraction
generate_java_code
numerical_negation
bool_value (true)
generate_java_code
add_call_chain(<<BOOLEAN,c,B>>)
add_command("D", "INTEGER", <<["B", "e"], ["a", "INTEGER"], ["B", "D"], ["C", "BOOLEAN"]>>)
add_attribute("A", "d", "a")
add_attribute("B", "C", "BOOLEAN")
add_attribute("b", "A", "e")
add_class(D)
subtraction
add_attribute("a", "D", "BOOLEAN")
add_query("B", "A", <<["d", "INTEGER"]>>, "e")
add_class(INTEGER)
bool_value (false)
addition
add_command("C", "e", <<["A", "INTEGER"], ["BOOLEAN", "D"], ["B", "INTEGER"], ["a", "BOOLEAN"], ["D", "INTEGER"]>>)
multiplication
add_attribute("b", "a", "BOOLEAN")
bool_value (true)
disjunction
add_command("A", "b", <<["D", "BOOLEAN"], ["e", "INTEGER"]>>)
numerical_negation
logical_negation
add_call_chain(<<A,INTEGER,INTEGER,D,d,INTEGER>>)
add_command("C", "c", <<["D", "BOOLEAN"], ["INTEGER", "INTEGER"], ["e", "INTEGER"], ["D", "B"]>>)
type_check
type_check
int_value (21)
add_command("B", "D", <<["INTEGER", "a"], ["BOOLEAN", "a"], ["INTEGER", "C"], ["D", "B"], ["A", "B"], ["D", "C"], ["b", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
add_call_chain(<<a,A>>)
add_attribute("e", "B", "BOOLEAN")
add_command("B", "b", <<["e", "BOOLEAN"], ["c", "a"], ["A", "A"], ["C", "INTEGER"], ["A", "D"]>>)
int_value (6)
add_command("D", "A", <<["a", "INTEGER"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "INTEGER"], ["c", "C"], ["d", "BOOLEAN"], ["e", "INTEGER"]>>)
bool_value (false)
disjunction
numerical_negation
int_value (36)
