add_query("a", "c", <<["D", "INTEGER"], ["D", "INTEGER"], ["c", "BOOLEAN"], ["C", "d"], ["B", "BOOLEAN"], ["D", "BOOLEAN"]>>, "C")
logical_negation
disjunction
greater_than
addition
add_call_chain(<<e,A,e,A,C,B,a,d,a>>)
add_query("e", "a", <<["D", "BOOLEAN"], ["d", "INTEGER"], ["C", "BOOLEAN"], ["A", "BOOLEAN"]>>, "e")
add_class(D)
add_command("b", "d", <<["c", "BOOLEAN"], ["A", "c"], ["BOOLEAN", "b"], ["BOOLEAN", "BOOLEAN"], ["A", "a"], ["a", "BOOLEAN"], ["D", "d"], ["c", "BOOLEAN"]>>)
type_check
int_value (30)
add_query("b", "B", <<["D", "INTEGER"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "D"], ["b", "INTEGER"], ["c", "B"]>>, "c")
add_call_chain(<<e,e,a,c,B,c,A>>)
add_command("A", "BOOLEAN", <<["d", "BOOLEAN"], ["B", "INTEGER"], ["c", "INTEGER"], ["B", "BOOLEAN"], ["a", "e"]>>)
type_check
add_call_chain(<<d,B,A,B>>)
less_than
add_attribute("B", "e", "INTEGER")
int_value (1)
add_class(e)
numerical_negation
int_value (33)
logical_negation
add_attribute("a", "B", "BOOLEAN")
numerical_negation
logical_negation
addition
add_call_chain(<<C,d,D,C,B>>)
int_value (49)
add_attribute("D", "d", "BOOLEAN")
add_attribute("e", "b", "c")
add_call_chain(<<D,b,e,INTEGER>>)
add_call_chain(<<A,e,D>>)
int_value (2)
generate_java_code
add_call_chain(<<d,b,D>>)
less_than
add_command("D", "D", <<["c", "INTEGER"], ["b", "BOOLEAN"], ["c", "b"], ["d", "INTEGER"], ["c", "INTEGER"], ["B", "INTEGER"], ["e", "c"], ["A", "BOOLEAN"], ["d", "INTEGER"]>>)
add_attribute("b", "b", "INTEGER")
numerical_negation
add_query("d", "c", <<["c", "INTEGER"], ["C", "INTEGER"], ["b", "BOOLEAN"], ["c", "b"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["a", "BOOLEAN"]>>, "c")
add_command("B", "d", <<["A", "BOOLEAN"], ["A", "D"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "c"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["e", "BOOLEAN"]>>)
generate_java_code
add_query("A", "D", <<["B", "D"], ["INTEGER", "BOOLEAN"], ["A", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["c", "B"], ["C", "INTEGER"]>>, "c")
add_query("A", "e", <<["D", "BOOLEAN"], ["B", "A"], ["D", "INTEGER"], ["c", "c"], ["C", "INTEGER"], ["B", "c"], ["D", "A"]>>, "D")
add_class(d)
add_query("D", "B", <<["b", "BOOLEAN"], ["B", "INTEGER"], ["a", "INTEGER"], ["a", "INTEGER"], ["C", "BOOLEAN"], ["a", "a"], ["BOOLEAN", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>, "C")
add_attribute("D", "INTEGER", "c")
add_query("B", "b", <<["A", "C"], ["INTEGER", "BOOLEAN"], ["b", "INTEGER"], ["A", "BOOLEAN"], ["A", "d"]>>, "b")
numerical_negation
add_call_chain(<<D,B,d,C,C,b,D,b,b>>)
add_call_chain(<<D,C,A,b,A>>)
numerical_negation
bool_value (true)
add_query("BOOLEAN", "e", <<["A", "b"], ["INTEGER", "C"], ["D", "INTEGER"], ["D", "A"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "INTEGER"], ["e", "b"]>>, "e")
addition
add_attribute("a", "A", "BOOLEAN")
logical_negation
numerical_negation
add_attribute("B", "B", "INTEGER")
add_call_chain(<<c,e,B,D,A>>)
add_query("b", "b", <<["INTEGER", "C"], ["e", "C"]>>, "a")
generate_java_code
add_command("c", "c", <<["a", "INTEGER"]>>)
int_value (43)
add_call_chain(<<A>>)
add_query("BOOLEAN", "e", <<["BOOLEAN", "INTEGER"], ["A", "INTEGER"]>>, "b")
add_call_chain(<<d,B>>)
add_query("d", "d", <<["C", "INTEGER"], ["D", "INTEGER"], ["D", "INTEGER"], ["INTEGER", "INTEGER"], ["INTEGER", "b"], ["B", "INTEGER"], ["D", "INTEGER"]>>, "BOOLEAN")
add_call_chain(<<e,A,e,INTEGER>>)
bool_value (true)
int_value (19)
add_attribute("B", "d", "INTEGER")
logical_negation
generate_java_code
add_query("C", "B", <<["B", "BOOLEAN"], ["A", "INTEGER"]>>, "INTEGER")
generate_java_code
less_than
modulo
numerical_negation
add_call_chain(<<B,B,B>>)
add_attribute("e", "b", "INTEGER")
add_call_chain(<<B,c>>)
add_command("A", "e", <<["a", "C"], ["D", "e"], ["c", "BOOLEAN"], ["D", "INTEGER"], ["B", "b"], ["a", "INTEGER"]>>)
conjunction
int_value (8)
logical_negation
add_command("A", "C", <<["d", "BOOLEAN"], ["a", "INTEGER"]>>)
add_attribute("B", "e", "a")
add_call_chain(<<e,e,b,e>>)
modulo
add_command("A", "BOOLEAN", <<["D", "BOOLEAN"], ["C", "INTEGER"], ["A", "INTEGER"]>>)
add_query("INTEGER", "b", <<["e", "INTEGER"], ["INTEGER", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["e", "INTEGER"], ["e", "C"], ["e", "A"]>>, "b")
bool_value (false)
add_call_chain(<<d,B,D,a,d,A,d,D>>)
add_attribute("b", "B", "INTEGER")
add_attribute("A", "INTEGER", "INTEGER")
add_attribute("A", "c", "INTEGER")
int_value (2)
logical_negation
add_command("BOOLEAN", "D", <<["B", "D"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["a", "B"]>>)
type_check
add_call_chain(<<c,D,a>>)
int_value (24)
add_command("A", "d", <<["C", "INTEGER"], ["B", "INTEGER"], ["D", "INTEGER"], ["INTEGER", "C"]>>)
numerical_negation
logical_negation
add_query("a", "c", <<["b", "BOOLEAN"], ["c", "e"]>>, "B")
less_than
add_call_chain(<<c,A,C,d,e,D>>)
bool_value (true)
add_call_chain(<<C,A,B,BOOLEAN,A,B>>)
add_class(C)
add_command("d", "a", <<["c", "BOOLEAN"], ["c", "INTEGER"], ["c", "e"], ["B", "INTEGER"], ["d", "INTEGER"], ["d", "BOOLEAN"]>>)
add_attribute("D", "c", "BOOLEAN")
numerical_negation
equals
add_attribute("c", "b", "INTEGER")
bool_value (false)
numerical_negation
modulo
bool_value (false)
quotient
int_value (4)
less_than
generate_java_code
add_call_chain(<<c,a,A>>)
add_call_chain(<<e>>)
add_query("A", "c", <<["a", "INTEGER"], ["B", "INTEGER"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "INTEGER"], ["C", "INTEGER"], ["C", "D"], ["C", "INTEGER"]>>, "c")
bool_value (true)
add_call_chain(<<c,D,b,A,e,B>>)
add_command("D", "C", <<["e", "c"], ["d", "d"], ["a", "a"], ["a", "BOOLEAN"], ["INTEGER", "INTEGER"], ["C", "BOOLEAN"], ["e", "INTEGER"], ["BOOLEAN", "b"]>>)
add_call_chain(<<D,D,a,a,B,B,e>>)
add_command("d", "e", <<["C", "INTEGER"], ["BOOLEAN", "INTEGER"], ["e", "BOOLEAN"], ["b", "INTEGER"], ["c", "INTEGER"], ["d", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "INTEGER"], ["B", "BOOLEAN"]>>)
addition
addition
add_command("B", "b", <<["C", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "BOOLEAN"], ["d", "BOOLEAN"]>>)
add_command("C", "A", <<["C", "BOOLEAN"], ["C", "e"], ["D", "INTEGER"], ["e", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "BOOLEAN"]>>)
add_attribute("INTEGER", "c", "INTEGER")
numerical_negation
add_attribute("d", "BOOLEAN", "INTEGER")
add_class(e)
add_attribute("A", "D", "BOOLEAN")
numerical_negation
add_call_chain(<<B,a,b,D,a>>)
add_attribute("e", "e", "BOOLEAN")
add_command("e", "e", <<["d", "BOOLEAN"], ["c", "d"]>>)
add_command("D", "A", <<["D", "a"], ["D", "BOOLEAN"], ["D", "BOOLEAN"], ["INTEGER", "INTEGER"]>>)
add_call_chain(<<e,INTEGER>>)
conjunction
add_query("d", "e", <<["INTEGER", "BOOLEAN"], ["b", "INTEGER"], ["a", "INTEGER"], ["B", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["B", "D"], ["d", "BOOLEAN"]>>, "A")
add_command("a", "C", <<["D", "INTEGER"]>>)
subtraction
int_value (23)
int_value (2)
logical_negation
equals
type_check
logical_negation
less_than
int_value (44)
int_value (44)
numerical_negation
add_call_chain(<<e,A,C,C,c,d>>)
add_call_chain(<<B,B,c,d,a,e,A,e>>)
add_query("e", "e", <<["BOOLEAN", "INTEGER"], ["B", "BOOLEAN"], ["C", "INTEGER"], ["D", "INTEGER"], ["BOOLEAN", "INTEGER"], ["b", "a"]>>, "B")
logical_negation
bool_value (true)
equals
add_attribute("BOOLEAN", "C", "INTEGER")
add_call_chain(<<A,e,b,b,e,d,e,a>>)
quotient
greater_than
add_command("B", "a", <<["a", "D"], ["e", "INTEGER"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["d", "a"], ["D", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "BOOLEAN"]>>)
int_value (13)
add_command("B", "INTEGER", <<["A", "INTEGER"], ["b", "B"], ["e", "INTEGER"], ["d", "INTEGER"]>>)
type_check
logical_negation
add_command("d", "B", <<["b", "INTEGER"], ["e", "INTEGER"], ["d", "INTEGER"], ["d", "INTEGER"], ["B", "C"], ["c", "BOOLEAN"], ["C", "BOOLEAN"]>>)
numerical_negation
add_call_chain(<<b,D,D,d,C,C,B>>)
greater_than
add_query("C", "d", <<["B", "INTEGER"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["e", "B"], ["A", "e"], ["b", "BOOLEAN"], ["e", "INTEGER"]>>, "d")
numerical_negation
numerical_negation
add_attribute("C", "d", "BOOLEAN")
bool_value (true)
type_check
bool_value (false)
add_call_chain(<<b,C,d,D,BOOLEAN,BOOLEAN,A,c>>)
add_command("C", "d", <<["b", "INTEGER"]>>)
add_attribute("BOOLEAN", "d", "INTEGER")
add_call_chain(<<b,c,D,b,c,INTEGER,C,b,BOOLEAN>>)
type_check
int_value (35)
greater_than
numerical_negation
add_attribute("b", "d", "INTEGER")
numerical_negation
generate_java_code
equals
equals
add_call_chain(<<A,INTEGER,D>>)
add_call_chain(<<b,D,c,C,A,B,B>>)
type_check
bool_value (true)
add_query("B", "C", <<["B", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["d", "a"], ["b", "C"], ["a", "INTEGER"], ["C", "BOOLEAN"]>>, "e")
bool_value (false)
add_call_chain(<<B,C,C,INTEGER>>)
add_attribute("INTEGER", "A", "INTEGER")
add_class(d)
numerical_negation
int_value (17)
int_value (21)
logical_negation
add_query("INTEGER", "BOOLEAN", <<["e", "B"], ["C", "INTEGER"]>>, "a")
add_call_chain(<<C,a,a,e,C,D>>)
bool_value (false)
bool_value (false)
add_query("c", "a", <<["INTEGER", "INTEGER"], ["a", "BOOLEAN"]>>, "b")
add_command("BOOLEAN", "d", <<["b", "BOOLEAN"], ["a", "INTEGER"], ["C", "B"]>>)
add_command("B", "c", <<["a", "c"], ["A", "INTEGER"], ["b", "C"], ["e", "D"], ["c", "INTEGER"], ["C", "INTEGER"], ["c", "b"]>>)
int_value (46)
add_command("d", "B", <<["a", "BOOLEAN"], ["INTEGER", "e"], ["B", "a"], ["c", "C"], ["e", "B"]>>)
conjunction
generate_java_code
add_command("A", "C", <<["D", "INTEGER"], ["d", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["c", "d"]>>)
numerical_negation
bool_value (false)
int_value (38)
numerical_negation
add_query("D", "BOOLEAN", <<["D", "BOOLEAN"], ["B", "e"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "INTEGER"], ["c", "C"]>>, "d")
add_call_chain(<<c,b,D,B>>)
add_query("BOOLEAN", "b", <<["c", "d"], ["BOOLEAN", "BOOLEAN"]>>, "D")
bool_value (true)
logical_negation
add_command("INTEGER", "c", <<["A", "BOOLEAN"], ["A", "c"]>>)
type_check
bool_value (false)
disjunction
add_command("d", "B", <<["a", "INTEGER"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "A"], ["INTEGER", "B"], ["d", "BOOLEAN"], ["INTEGER", "A"]>>)
add_call_chain(<<A>>)
add_call_chain(<<e,INTEGER,e,D>>)
numerical_negation
add_attribute("INTEGER", "a", "D")
add_query("D", "B", <<["A", "INTEGER"], ["D", "B"], ["c", "B"], ["D", "INTEGER"], ["c", "BOOLEAN"]>>, "a")
add_attribute("C", "a", "INTEGER")
conjunction
