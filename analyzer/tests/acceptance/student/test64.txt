logical_negation
add_call_chain(<<d,D,C,b,B,b,D,b,D>>)
add_command("B", "c", <<["B", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "d"], ["D", "INTEGER"], ["b", "D"]>>)
disjunction
type_check
add_call_chain(<<C,a,C,A,a,c,b,D>>)
bool_value (true)
int_value (4)
generate_java_code
add_attribute("a", "d", "INTEGER")
logical_negation
logical_negation
bool_value (true)
type_check
add_command("D", "a", <<["d", "BOOLEAN"], ["A", "D"], ["A", "B"], ["a", "INTEGER"], ["BOOLEAN", "INTEGER"], ["e", "BOOLEAN"]>>)
numerical_negation
add_class(e)
numerical_negation
type_check
bool_value (true)
add_command("INTEGER", "c", <<["BOOLEAN", "e"], ["b", "A"]>>)
add_call_chain(<<A>>)
less_than
disjunction
add_attribute("BOOLEAN", "c", "INTEGER")
multiplication
add_attribute("C", "c", "INTEGER")
add_query("e", "b", <<["d", "BOOLEAN"], ["D", "c"], ["INTEGER", "d"], ["D", "d"], ["b", "INTEGER"], ["C", "b"], ["c", "c"], ["B", "a"], ["a", "INTEGER"]>>, "b")
add_query("c", "b", <<["INTEGER", "BOOLEAN"], ["A", "INTEGER"]>>, "C")
add_command("c", "d", <<["D", "INTEGER"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["INTEGER", "e"]>>)
bool_value (false)
add_command("D", "D", <<["C", "c"], ["D", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "c"], ["B", "BOOLEAN"], ["e", "INTEGER"], ["b", "INTEGER"], ["c", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
add_call_chain(<<e,C,B,BOOLEAN,e,INTEGER,A,c>>)
add_call_chain(<<a,a>>)
add_call_chain(<<e,e>>)
conjunction
add_call_chain(<<a,D,INTEGER,a,D,BOOLEAN,A>>)
add_class(c)
bool_value (true)
add_call_chain(<<e,c,b,b,A>>)
add_command("d", "B", <<["d", "BOOLEAN"], ["INTEGER", "INTEGER"], ["a", "D"], ["BOOLEAN", "BOOLEAN"]>>)
add_attribute("C", "e", "INTEGER")
greater_than
int_value (44)
disjunction
greater_than
add_call_chain(<<D>>)
bool_value (false)
add_attribute("d", "d", "b")
add_call_chain(<<D,b,A,BOOLEAN>>)
add_class(e)
add_call_chain(<<INTEGER,c,a,A,e,D,e,b,D>>)
add_query("d", "e", <<["B", "INTEGER"], ["A", "D"]>>, "D")
add_class(B)
multiplication
bool_value (false)
int_value (45)
numerical_negation
add_attribute("C", "A", "INTEGER")
subtraction
conjunction
generate_java_code
add_call_chain(<<A,c,D>>)
add_command("b", "e", <<["b", "INTEGER"], ["D", "INTEGER"]>>)
bool_value (false)
add_call_chain(<<c,D,C,INTEGER,c,A,BOOLEAN,C,D>>)
conjunction
addition
add_query("INTEGER", "B", <<["A", "INTEGER"], ["B", "c"], ["b", "A"], ["c", "BOOLEAN"], ["d", "INTEGER"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["BOOLEAN", "INTEGER"], ["C", "INTEGER"]>>, "INTEGER")
add_query("a", "a", <<["INTEGER", "A"], ["B", "INTEGER"], ["B", "INTEGER"], ["B", "INTEGER"], ["b", "D"], ["INTEGER", "D"], ["INTEGER", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "BOOLEAN"]>>, "INTEGER")
add_call_chain(<<A,A,c,A,C,c,c,a,INTEGER>>)
modulo
add_command("a", "C", <<["D", "B"], ["A", "INTEGER"]>>)
logical_negation
add_command("C", "B", <<["C", "a"], ["D", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["d", "INTEGER"], ["A", "BOOLEAN"], ["e", "INTEGER"], ["a", "BOOLEAN"]>>)
int_value (28)
int_value (44)
logical_negation
less_than
bool_value (false)
equals
add_query("INTEGER", "c", <<["C", "A"], ["A", "INTEGER"], ["INTEGER", "BOOLEAN"]>>, "B")
add_query("D", "C", <<["e", "INTEGER"]>>, "b")
add_call_chain(<<b,INTEGER>>)
add_query("e", "D", <<["INTEGER", "BOOLEAN"], ["C", "D"], ["e", "INTEGER"], ["B", "d"], ["c", "INTEGER"], ["b", "C"]>>, "b")
multiplication
disjunction
bool_value (false)
generate_java_code
type_check
add_call_chain(<<D,BOOLEAN,B,b,e>>)
bool_value (false)
numerical_negation
add_command("D", "e", <<["D", "INTEGER"], ["C", "INTEGER"], ["C", "INTEGER"], ["e", "INTEGER"], ["C", "INTEGER"]>>)
subtraction
add_attribute("C", "D", "BOOLEAN")
add_attribute("d", "D", "INTEGER")
greater_than
bool_value (false)
add_call_chain(<<C>>)
bool_value (true)
add_call_chain(<<b,C,c,e,A,B,c,c>>)
numerical_negation
greater_than
add_command("D", "A", <<["a", "INTEGER"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["c", "BOOLEAN"], ["INTEGER", "INTEGER"], ["e", "D"], ["B", "c"]>>)
add_query("C", "A", <<["b", "INTEGER"], ["c", "INTEGER"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["C", "BOOLEAN"], ["C", "INTEGER"]>>, "a")
multiplication
int_value (36)
logical_negation
bool_value (false)
add_query("C", "B", <<["C", "B"], ["BOOLEAN", "BOOLEAN"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["b", "INTEGER"]>>, "b")
bool_value (false)
numerical_negation
add_query("a", "D", <<["a", "BOOLEAN"], ["D", "INTEGER"], ["e", "INTEGER"], ["BOOLEAN", "INTEGER"], ["D", "BOOLEAN"], ["B", "B"], ["D", "D"], ["A", "D"], ["d", "BOOLEAN"]>>, "b")
add_command("A", "D", <<["d", "INTEGER"], ["c", "INTEGER"], ["B", "BOOLEAN"]>>)
add_attribute("D", "a", "INTEGER")
add_attribute("a", "INTEGER", "c")
numerical_negation
add_call_chain(<<BOOLEAN,a,C,b,B,A>>)
type_check
disjunction
bool_value (true)
add_command("a", "A", <<["d", "BOOLEAN"]>>)
numerical_negation
add_class(c)
add_call_chain(<<A,A,c,A,BOOLEAN,C>>)
multiplication
int_value (11)
add_command("C", "C", <<["e", "A"], ["BOOLEAN", "INTEGER"], ["e", "d"], ["e", "BOOLEAN"], ["A", "d"], ["a", "a"], ["B", "BOOLEAN"], ["d", "d"], ["b", "INTEGER"]>>)
add_query("C", "c", <<["D", "INTEGER"], ["D", "BOOLEAN"], ["b", "INTEGER"], ["d", "INTEGER"], ["C", "INTEGER"], ["A", "e"], ["a", "INTEGER"], ["c", "INTEGER"]>>, "a")
add_attribute("INTEGER", "a", "BOOLEAN")
add_call_chain(<<C,INTEGER,A,c,D>>)
int_value (17)
int_value (43)
int_value (6)
add_call_chain(<<A>>)
add_command("INTEGER", "A", <<["a", "BOOLEAN"]>>)
add_attribute("C", "C", "e")
add_query("c", "a", <<["d", "BOOLEAN"], ["b", "INTEGER"], ["d", "C"], ["a", "BOOLEAN"], ["A", "INTEGER"], ["e", "BOOLEAN"]>>, "d")
add_call_chain(<<B,D,B>>)
add_attribute("A", "c", "e")
quotient
numerical_negation
subtraction
add_call_chain(<<c>>)
multiplication
logical_negation
type_check
less_than
add_command("B", "D", <<["C", "INTEGER"], ["e", "INTEGER"]>>)
bool_value (true)
logical_negation
numerical_negation
add_attribute("D", "a", "B")
add_call_chain(<<d,d>>)
add_call_chain(<<A,A>>)
bool_value (true)
type_check
add_call_chain(<<a,e,a,C,INTEGER,e>>)
add_call_chain(<<A,a,d,A>>)
add_command("a", "b", <<["B", "BOOLEAN"], ["BOOLEAN", "A"], ["a", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["e", "BOOLEAN"], ["a", "INTEGER"], ["b", "BOOLEAN"]>>)
add_call_chain(<<C,A,C,d>>)
bool_value (false)
int_value (9)
logical_negation
greater_than
int_value (39)
numerical_negation
add_query("D", "e", <<["c", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "D"], ["c", "INTEGER"], ["C", "BOOLEAN"], ["a", "INTEGER"], ["c", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>, "d")
add_query("C", "C", <<["e", "INTEGER"], ["C", "a"], ["c", "BOOLEAN"], ["D", "INTEGER"], ["D", "b"]>>, "C")
int_value (27)
type_check
disjunction
add_call_chain(<<e,e,C,a,A,C,c>>)
type_check
numerical_negation
add_call_chain(<<B,c,D,a,A,D,B,a>>)
generate_java_code
generate_java_code
type_check
add_command("A", "e", <<["A", "b"], ["D", "INTEGER"]>>)
add_class(C)
logical_negation
multiplication
bool_value (true)
add_call_chain(<<A>>)
