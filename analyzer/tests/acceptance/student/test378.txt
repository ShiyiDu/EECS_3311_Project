add_call_chain(<<d,C,A,B,e,B,b,b,d>>)
add_command("b", "C", <<["B", "BOOLEAN"], ["a", "a"], ["A", "e"], ["a", "INTEGER"], ["B", "BOOLEAN"]>>)
add_query("b", "D", <<["c", "BOOLEAN"], ["b", "INTEGER"], ["A", "b"], ["BOOLEAN", "INTEGER"]>>, "a")
add_attribute("c", "B", "A")
add_call_chain(<<A,b,d,D>>)
add_attribute("A", "A", "e")
add_command("a", "c", <<["C", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["e", "C"]>>)
type_check
quotient
add_attribute("B", "c", "BOOLEAN")
numerical_negation
add_class(D)
add_query("C", "a", <<["e", "INTEGER"], ["a", "INTEGER"], ["b", "BOOLEAN"], ["a", "INTEGER"], ["INTEGER", "BOOLEAN"], ["C", "INTEGER"]>>, "a")
add_query("A", "BOOLEAN", <<["a", "BOOLEAN"], ["D", "D"], ["D", "INTEGER"], ["A", "BOOLEAN"], ["a", "b"], ["INTEGER", "INTEGER"], ["e", "INTEGER"]>>, "c")
modulo
add_query("e", "B", <<["A", "INTEGER"], ["A", "INTEGER"], ["e", "b"]>>, "C")
add_attribute("C", "b", "INTEGER")
add_query("d", "B", <<["e", "C"], ["INTEGER", "d"], ["INTEGER", "INTEGER"], ["b", "BOOLEAN"], ["b", "A"], ["D", "e"], ["b", "INTEGER"]>>, "BOOLEAN")
conjunction
int_value (11)
int_value (43)
add_command("e", "e", <<["e", "d"], ["e", "BOOLEAN"], ["d", "d"], ["BOOLEAN", "INTEGER"], ["a", "INTEGER"], ["e", "d"], ["C", "a"], ["d", "d"], ["c", "INTEGER"]>>)
add_call_chain(<<C,A>>)
add_attribute("INTEGER", "C", "C")
bool_value (true)
add_query("INTEGER", "d", <<["e", "BOOLEAN"], ["b", "BOOLEAN"]>>, "B")
int_value (49)
add_attribute("A", "d", "INTEGER")
add_call_chain(<<BOOLEAN,b,C,c,A,B>>)
equals
subtraction
logical_negation
add_call_chain(<<B,B>>)
bool_value (true)
int_value (38)
add_query("B", "D", <<["c", "A"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["B", "d"], ["e", "BOOLEAN"], ["B", "INTEGER"]>>, "c")
int_value (7)
add_class(e)
conjunction
logical_negation
add_call_chain(<<A,c,A,e,BOOLEAN,a>>)
add_query("BOOLEAN", "D", <<["b", "D"], ["C", "INTEGER"], ["D", "b"], ["e", "BOOLEAN"], ["c", "INTEGER"], ["b", "INTEGER"], ["D", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "BOOLEAN"]>>, "a")
add_call_chain(<<e,C,e,C,e,c,e,A>>)
disjunction
add_class(B)
bool_value (true)
add_call_chain(<<e,a,INTEGER>>)
type_check
bool_value (true)
subtraction
type_check
add_call_chain(<<a,a,C,C,c,a,c,c,B>>)
add_query("INTEGER", "c", <<["B", "BOOLEAN"], ["e", "b"]>>, "C")
int_value (21)
add_attribute("B", "A", "INTEGER")
generate_java_code
generate_java_code
modulo
numerical_negation
int_value (2)
add_call_chain(<<c,d,A,e,INTEGER,C,INTEGER>>)
add_command("d", "e", <<["A", "INTEGER"], ["B", "INTEGER"], ["INTEGER", "INTEGER"], ["d", "INTEGER"], ["a", "INTEGER"], ["A", "BOOLEAN"], ["INTEGER", "INTEGER"], ["A", "BOOLEAN"], ["D", "BOOLEAN"]>>)
quotient
addition
add_query("A", "INTEGER", <<["INTEGER", "C"], ["B", "B"], ["e", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "b"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "INTEGER"]>>, "d")
modulo
logical_negation
add_attribute("e", "B", "BOOLEAN")
add_attribute("c", "A", "D")
add_call_chain(<<e,INTEGER,BOOLEAN,b,A>>)
logical_negation
generate_java_code
multiplication
conjunction
add_call_chain(<<b,C,A,D,e,BOOLEAN,A,D>>)
add_call_chain(<<c,d,BOOLEAN,D>>)
add_call_chain(<<C,a,C,c,BOOLEAN>>)
add_call_chain(<<a,D,B,b,INTEGER,A,C>>)
add_class(d)
add_command("C", "d", <<["INTEGER", "INTEGER"], ["D", "INTEGER"], ["C", "INTEGER"], ["a", "INTEGER"], ["D", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "INTEGER"]>>)
type_check
add_call_chain(<<A,b,D,A,A,D,e>>)
add_call_chain(<<INTEGER,B,B,a,C,e,c,b>>)
add_class(B)
int_value (35)
logical_negation
add_call_chain(<<e,C,A,b,c,e,d,d,INTEGER>>)
numerical_negation
conjunction
generate_java_code
add_query("INTEGER", "A", <<["a", "BOOLEAN"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["A", "a"], ["B", "B"], ["D", "INTEGER"], ["b", "B"]>>, "INTEGER")
int_value (37)
add_call_chain(<<c,d>>)
equals
multiplication
add_attribute("c", "C", "INTEGER")
add_call_chain(<<D,A,C>>)
add_query("A", "c", <<["C", "A"]>>, "d")
int_value (2)
add_attribute("d", "a", "b")
add_call_chain(<<B,A,B,b,D,D,B,c,a>>)
numerical_negation
add_command("C", "a", <<["D", "B"], ["c", "INTEGER"], ["A", "INTEGER"], ["INTEGER", "INTEGER"], ["b", "BOOLEAN"], ["a", "c"], ["B", "D"], ["c", "C"], ["b", "INTEGER"]>>)
logical_negation
equals
modulo
logical_negation
add_call_chain(<<B,c>>)
type_check
add_class(e)
add_call_chain(<<C,e,INTEGER,C,B,B,D,C>>)
generate_java_code
generate_java_code
add_attribute("e", "C", "INTEGER")
int_value (45)
add_attribute("A", "a", "INTEGER")
bool_value (true)
type_check
generate_java_code
bool_value (true)
add_call_chain(<<B,BOOLEAN,b>>)
add_command("A", "A", <<["e", "B"], ["c", "INTEGER"], ["D", "c"], ["A", "INTEGER"]>>)
add_attribute("INTEGER", "C", "BOOLEAN")
type_check
add_class(a)
add_call_chain(<<a,C,c,BOOLEAN,b,D,C,D,C>>)
bool_value (true)
addition
subtraction
logical_negation
add_attribute("c", "B", "INTEGER")
add_attribute("A", "INTEGER", "a")
type_check
modulo
int_value (7)
bool_value (true)
add_command("e", "c", <<["C", "BOOLEAN"]>>)
add_call_chain(<<B,D,e,B,c,C>>)
add_command("C", "D", <<["B", "d"], ["c", "INTEGER"], ["A", "BOOLEAN"], ["b", "BOOLEAN"], ["b", "e"], ["d", "INTEGER"], ["D", "INTEGER"], ["BOOLEAN", "INTEGER"]>>)
int_value (20)
add_call_chain(<<e,D,B,a,A,a,D>>)
add_command("INTEGER", "a", <<["e", "INTEGER"], ["a", "c"], ["a", "A"], ["D", "INTEGER"], ["A", "INTEGER"], ["D", "INTEGER"], ["B", "d"], ["C", "BOOLEAN"], ["A", "BOOLEAN"]>>)
type_check
logical_negation
equals
greater_than
add_query("B", "a", <<["B", "INTEGER"], ["d", "BOOLEAN"], ["d", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["B", "BOOLEAN"]>>, "B")
greater_than
logical_negation
logical_negation
bool_value (true)
multiplication
equals
add_command("e", "e", <<["c", "BOOLEAN"]>>)
logical_negation
add_attribute("a", "D", "BOOLEAN")
add_class(A)
logical_negation
int_value (40)
add_command("A", "B", <<["D", "BOOLEAN"]>>)
add_call_chain(<<D,c,B,b,INTEGER,C,d,B>>)
add_call_chain(<<c,a,B>>)
add_class(INTEGER)
add_attribute("a", "e", "d")
bool_value (false)
add_command("C", "c", <<["d", "D"], ["C", "INTEGER"], ["INTEGER", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "INTEGER"]>>)
add_query("a", "c", <<["b", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["c", "INTEGER"]>>, "B")
add_call_chain(<<e,A,b,e,B,D,d,B,d>>)
add_command("C", "d", <<["B", "BOOLEAN"], ["B", "INTEGER"], ["b", "BOOLEAN"], ["A", "b"], ["B", "BOOLEAN"], ["B", "INTEGER"], ["e", "BOOLEAN"], ["e", "e"], ["b", "c"]>>)
logical_negation
greater_than
int_value (46)
subtraction
bool_value (false)
type_check
add_query("d", "b", <<["D", "B"], ["b", "BOOLEAN"], ["c", "BOOLEAN"]>>, "C")
type_check
equals
int_value (11)
logical_negation
int_value (29)
add_call_chain(<<A,B,INTEGER,C,b,d,a>>)
generate_java_code
int_value (27)
add_command("c", "INTEGER", <<["C", "b"], ["INTEGER", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["d", "INTEGER"], ["a", "INTEGER"], ["D", "e"], ["c", "BOOLEAN"], ["a", "BOOLEAN"]>>)
add_attribute("D", "INTEGER", "BOOLEAN")
numerical_negation
add_command("d", "INTEGER", <<["A", "d"], ["B", "a"], ["e", "b"], ["A", "BOOLEAN"], ["c", "d"]>>)
disjunction
bool_value (false)
add_command("c", "e", <<["d", "B"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["A", "INTEGER"], ["c", "INTEGER"], ["B", "INTEGER"], ["c", "INTEGER"], ["A", "D"]>>)
add_attribute("B", "d", "INTEGER")
add_attribute("d", "d", "INTEGER")
add_class(C)
int_value (10)
addition
logical_negation
add_command("d", "C", <<["C", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "a"], ["e", "BOOLEAN"], ["d", "D"], ["e", "BOOLEAN"]>>)
add_attribute("c", "B", "BOOLEAN")
add_class(D)
add_query("D", "C", <<["b", "INTEGER"], ["C", "e"], ["a", "B"], ["d", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "INTEGER"], ["b", "d"], ["a", "INTEGER"], ["a", "BOOLEAN"]>>, "e")
generate_java_code
add_call_chain(<<a,b,d,a>>)
numerical_negation
add_command("A", "D", <<["D", "INTEGER"], ["a", "INTEGER"], ["d", "BOOLEAN"]>>)
add_class(A)
add_call_chain(<<A>>)
add_query("C", "d", <<["d", "d"], ["B", "BOOLEAN"], ["B", "INTEGER"], ["INTEGER", "C"], ["A", "D"], ["A", "BOOLEAN"], ["e", "b"], ["a", "d"]>>, "C")
logical_negation
bool_value (true)
add_call_chain(<<d>>)
numerical_negation
logical_negation
add_command("B", "A", <<["C", "BOOLEAN"], ["b", "A"]>>)
bool_value (true)
add_query("e", "A", <<["INTEGER", "INTEGER"], ["A", "d"], ["D", "INTEGER"], ["D", "INTEGER"], ["b", "B"]>>, "B")
modulo
add_call_chain(<<c,c,a,b,BOOLEAN,e,c,b,A>>)
numerical_negation
greater_than
add_call_chain(<<a,D,b,B,INTEGER>>)
numerical_negation
add_call_chain(<<b,B,d,b,a>>)
int_value (40)
less_than
add_call_chain(<<d,D,A,a,A,a,B,e,A>>)
numerical_negation
add_call_chain(<<D,d>>)
add_class(d)
add_query("B", "D", <<["c", "BOOLEAN"]>>, "INTEGER")
greater_than
addition
int_value (28)
add_call_chain(<<c,C>>)
add_class(c)
numerical_negation
add_attribute("BOOLEAN", "e", "C")
less_than
add_command("C", "d", <<["c", "B"], ["A", "d"], ["d", "INTEGER"], ["b", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "BOOLEAN"], ["a", "BOOLEAN"]>>)
generate_java_code
bool_value (false)
add_query("c", "c", <<["B", "INTEGER"], ["a", "BOOLEAN"], ["e", "b"], ["d", "BOOLEAN"], ["A", "INTEGER"], ["BOOLEAN", "INTEGER"]>>, "A")
add_query("a", "e", <<["B", "BOOLEAN"]>>, "INTEGER")
type_check
generate_java_code
add_query("a", "D", <<["C", "c"], ["B", "INTEGER"], ["B", "INTEGER"], ["e", "INTEGER"], ["c", "INTEGER"], ["C", "b"]>>, "d")
bool_value (false)
add_attribute("B", "A", "INTEGER")
int_value (28)
