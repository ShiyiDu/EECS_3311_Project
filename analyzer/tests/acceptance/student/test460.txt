bool_value (true)
add_attribute("BOOLEAN", "e", "B")
type_check
int_value (6)
add_attribute("c", "C", "d")
numerical_negation
numerical_negation
numerical_negation
add_call_chain(<<B,e,e,C>>)
bool_value (false)
numerical_negation
int_value (44)
generate_java_code
type_check
int_value (44)
less_than
generate_java_code
add_attribute("c", "a", "B")
add_attribute("C", "c", "INTEGER")
logical_negation
add_call_chain(<<B,B,d,B,INTEGER,d,d>>)
add_command("c", "c", <<["c", "INTEGER"], ["D", "BOOLEAN"], ["D", "INTEGER"]>>)
add_query("C", "C", <<["D", "a"], ["B", "INTEGER"], ["C", "A"], ["c", "c"], ["A", "BOOLEAN"], ["d", "d"], ["b", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>, "d")
equals
numerical_negation
add_call_chain(<<b>>)
add_attribute("b", "e", "BOOLEAN")
generate_java_code
add_command("d", "B", <<["D", "c"], ["D", "INTEGER"], ["BOOLEAN", "INTEGER"]>>)
bool_value (false)
modulo
add_attribute("a", "b", "INTEGER")
numerical_negation
generate_java_code
disjunction
add_class(c)
add_call_chain(<<c,INTEGER>>)
add_attribute("C", "d", "INTEGER")
add_class(d)
add_call_chain(<<A,B,a,c,e,B,b,d,b>>)
add_attribute("c", "INTEGER", "INTEGER")
numerical_negation
add_query("c", "C", <<["d", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "BOOLEAN"], ["b", "a"], ["D", "BOOLEAN"], ["B", "INTEGER"]>>, "b")
add_attribute("a", "e", "B")
subtraction
logical_negation
int_value (15)
logical_negation
add_call_chain(<<b,d>>)
logical_negation
int_value (12)
add_call_chain(<<A,c,A>>)
numerical_negation
add_call_chain(<<D,d,C,B,b,b,c>>)
add_query("a", "BOOLEAN", <<["e", "a"], ["c", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["B", "A"], ["D", "INTEGER"], ["b", "C"], ["a", "BOOLEAN"]>>, "C")
add_command("C", "A", <<["C", "BOOLEAN"], ["INTEGER", "INTEGER"], ["c", "B"], ["b", "C"], ["d", "INTEGER"], ["C", "b"], ["b", "A"], ["e", "B"]>>)
int_value (34)
type_check
add_attribute("a", "C", "B")
greater_than
disjunction
add_query("c", "INTEGER", <<["b", "INTEGER"], ["d", "d"], ["A", "INTEGER"], ["b", "BOOLEAN"], ["b", "INTEGER"], ["B", "INTEGER"], ["A", "a"], ["B", "INTEGER"]>>, "D")
add_query("D", "BOOLEAN", <<["A", "BOOLEAN"]>>, "D")
add_call_chain(<<D,d,INTEGER>>)
add_query("d", "B", <<["e", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "BOOLEAN"], ["d", "INTEGER"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>, "b")
subtraction
bool_value (false)
add_call_chain(<<B,d,e>>)
generate_java_code
bool_value (false)
generate_java_code
add_call_chain(<<e,D,B>>)
numerical_negation
logical_negation
add_call_chain(<<C,d,C,C,INTEGER>>)
bool_value (true)
logical_negation
numerical_negation
logical_negation
generate_java_code
add_call_chain(<<C,D>>)
add_command("C", "d", <<["B", "INTEGER"], ["C", "BOOLEAN"], ["e", "b"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["B", "B"], ["c", "BOOLEAN"]>>)
add_command("A", "A", <<["b", "a"]>>)
add_query("B", "A", <<["B", "b"], ["D", "D"], ["b", "INTEGER"], ["d", "INTEGER"], ["c", "INTEGER"]>>, "b")
bool_value (false)
add_call_chain(<<d>>)
add_attribute("e", "A", "INTEGER")
bool_value (true)
type_check
subtraction
add_call_chain(<<INTEGER,A,B,e>>)
equals
numerical_negation
add_command("B", "a", <<["a", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["a", "INTEGER"], ["d", "INTEGER"], ["INTEGER", "INTEGER"]>>)
add_query("c", "e", <<["A", "c"], ["D", "BOOLEAN"], ["C", "BOOLEAN"]>>, "B")
add_query("A", "a", <<["a", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "BOOLEAN"], ["a", "INTEGER"]>>, "b")
numerical_negation
add_class(b)
type_check
bool_value (true)
add_query("D", "b", <<["d", "e"], ["b", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "INTEGER"], ["INTEGER", "c"], ["C", "BOOLEAN"], ["A", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["A", "BOOLEAN"]>>, "e")
greater_than
bool_value (false)
bool_value (false)
type_check
add_query("C", "D", <<["A", "BOOLEAN"], ["A", "C"], ["c", "BOOLEAN"]>>, "c")
add_query("D", "D", <<["B", "B"], ["e", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "INTEGER"], ["A", "B"], ["b", "BOOLEAN"], ["d", "INTEGER"]>>, "a")
bool_value (false)
bool_value (true)
equals
add_call_chain(<<INTEGER,C,b,b>>)
add_call_chain(<<B,INTEGER,d,a,D,C,c,a,e>>)
type_check
logical_negation
type_check
int_value (29)
multiplication
add_query("D", "b", <<["B", "BOOLEAN"], ["a", "INTEGER"], ["BOOLEAN", "c"], ["D", "BOOLEAN"], ["D", "e"], ["C", "c"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["a", "INTEGER"]>>, "INTEGER")
numerical_negation
conjunction
greater_than
bool_value (false)
add_query("d", "e", <<["A", "INTEGER"], ["B", "c"], ["c", "BOOLEAN"], ["b", "c"], ["INTEGER", "c"], ["INTEGER", "A"]>>, "e")
add_query("d", "b", <<["a", "INTEGER"]>>, "D")
add_attribute("c", "a", "B")
bool_value (true)
bool_value (false)
add_call_chain(<<C,C>>)
int_value (24)
generate_java_code
int_value (43)
conjunction
add_attribute("A", "B", "INTEGER")
generate_java_code
add_attribute("C", "e", "B")
less_than
bool_value (false)
add_command("C", "e", <<["C", "INTEGER"], ["D", "BOOLEAN"], ["a", "D"], ["A", "INTEGER"], ["c", "d"], ["D", "BOOLEAN"]>>)
add_query("D", "BOOLEAN", <<["b", "INTEGER"], ["a", "INTEGER"], ["c", "c"]>>, "C")
generate_java_code
less_than
add_query("INTEGER", "b", <<["b", "BOOLEAN"]>>, "A")
add_command("C", "D", <<["d", "INTEGER"], ["a", "BOOLEAN"], ["D", "INTEGER"]>>)
bool_value (false)
add_command("a", "BOOLEAN", <<["e", "C"], ["D", "D"], ["INTEGER", "c"], ["A", "INTEGER"], ["C", "INTEGER"]>>)
add_class(b)
numerical_negation
add_class(INTEGER)
bool_value (true)
add_command("B", "B", <<["BOOLEAN", "BOOLEAN"]>>)
type_check
add_attribute("a", "e", "A")
add_attribute("e", "C", "BOOLEAN")
type_check
type_check
add_query("B", "c", <<["B", "BOOLEAN"], ["D", "BOOLEAN"], ["INTEGER", "INTEGER"], ["C", "BOOLEAN"]>>, "D")
logical_negation
add_command("e", "D", <<["INTEGER", "d"], ["C", "d"], ["a", "BOOLEAN"]>>)
add_attribute("C", "c", "INTEGER")
bool_value (false)
add_call_chain(<<a,B,INTEGER,B,b,d>>)
logical_negation
bool_value (false)
conjunction
generate_java_code
add_query("c", "d", <<["c", "b"], ["c", "D"]>>, "A")
add_call_chain(<<D,D,d,C,A,C,a,e,B>>)
numerical_negation
add_call_chain(<<A,BOOLEAN,e,D,B>>)
add_call_chain(<<A>>)
add_class(e)
conjunction
add_call_chain(<<B,INTEGER,C,c,b,C>>)
add_attribute("A", "A", "INTEGER")
add_attribute("B", "b", "d")
disjunction
generate_java_code
add_call_chain(<<D,c,C,D,INTEGER,A,D,e>>)
logical_negation
logical_negation
less_than
greater_than
int_value (4)
add_command("D", "a", <<["b", "INTEGER"], ["B", "d"], ["A", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "INTEGER"]>>)
add_query("A", "B", <<["A", "BOOLEAN"]>>, "C")
bool_value (true)
add_attribute("a", "D", "BOOLEAN")
add_attribute("D", "A", "BOOLEAN")
add_call_chain(<<b,e,d,D,d,A,e>>)
generate_java_code
generate_java_code
add_call_chain(<<D,D,D,B,B,D,C>>)
add_class(C)
add_attribute("D", "d", "BOOLEAN")
add_query("D", "B", <<["d", "BOOLEAN"], ["c", "D"], ["e", "INTEGER"], ["e", "d"], ["b", "BOOLEAN"], ["e", "A"], ["a", "INTEGER"], ["e", "BOOLEAN"], ["A", "INTEGER"]>>, "C")
type_check
type_check
add_call_chain(<<A,B,D,e,B,d,INTEGER>>)
generate_java_code
add_call_chain(<<C,e,C,B,A,C,b,INTEGER,e>>)
bool_value (false)
add_call_chain(<<C,c,C,BOOLEAN,INTEGER,A,a,C>>)
conjunction
int_value (40)
add_query("b", "d", <<["A", "b"]>>, "a")
subtraction
disjunction
multiplication
add_call_chain(<<C,a,c,d,A>>)
add_attribute("d", "a", "INTEGER")
logical_negation
add_attribute("a", "a", "e")
add_attribute("D", "a", "a")
int_value (7)
add_call_chain(<<d,c,e,b>>)
bool_value (true)
bool_value (true)
add_call_chain(<<d,D,D,d,c,B,D,INTEGER,a>>)
add_query("c", "e", <<["INTEGER", "INTEGER"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["C", "A"], ["d", "b"], ["e", "INTEGER"], ["a", "INTEGER"], ["A", "BOOLEAN"], ["B", "BOOLEAN"]>>, "d")
quotient
generate_java_code
greater_than
equals
int_value (38)
add_class(d)
add_class(D)
add_query("A", "b", <<["D", "BOOLEAN"], ["C", "b"], ["A", "INTEGER"], ["BOOLEAN", "e"], ["B", "INTEGER"], ["b", "INTEGER"], ["C", "INTEGER"], ["A", "A"], ["a", "INTEGER"]>>, "C")
add_call_chain(<<d,A>>)
add_call_chain(<<B,d,b,C,c,e>>)
greater_than
