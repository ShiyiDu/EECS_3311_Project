logical_negation
numerical_negation
add_command("a", "b", <<["D", "BOOLEAN"]>>)
add_command("c", "A", <<["b", "INTEGER"], ["A", "BOOLEAN"], ["b", "BOOLEAN"]>>)
generate_java_code
add_attribute("C", "B", "A")
add_call_chain(<<C,BOOLEAN,INTEGER,d,C,e>>)
generate_java_code
add_command("C", "d", <<["a", "e"], ["a", "BOOLEAN"], ["INTEGER", "a"], ["B", "INTEGER"], ["b", "INTEGER"], ["D", "INTEGER"], ["C", "INTEGER"], ["b", "INTEGER"], ["B", "BOOLEAN"]>>)
add_command("INTEGER", "A", <<["a", "INTEGER"], ["BOOLEAN", "INTEGER"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["B", "INTEGER"], ["B", "BOOLEAN"]>>)
add_command("e", "A", <<["a", "c"], ["e", "BOOLEAN"], ["D", "INTEGER"]>>)
add_command("d", "D", <<["A", "INTEGER"], ["A", "D"], ["d", "a"], ["D", "BOOLEAN"], ["b", "INTEGER"], ["A", "INTEGER"], ["A", "B"], ["c", "INTEGER"], ["C", "BOOLEAN"]>>)
int_value (20)
add_call_chain(<<b,c,c,c>>)
equals
add_command("A", "C", <<["d", "d"], ["a", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "BOOLEAN"]>>)
int_value (7)
add_call_chain(<<a,D,d,D,B,d,A,d,D>>)
numerical_negation
less_than
type_check
add_call_chain(<<D,C,A,d>>)
add_attribute("B", "C", "BOOLEAN")
add_call_chain(<<D,e,c,INTEGER,b,BOOLEAN,D>>)
add_class(A)
add_command("B", "B", <<["C", "b"], ["e", "BOOLEAN"], ["a", "BOOLEAN"]>>)
add_call_chain(<<A,b,BOOLEAN,e,A,C>>)
add_call_chain(<<e,c,INTEGER,A>>)
add_command("D", "C", <<["D", "D"]>>)
greater_than
bool_value (false)
disjunction
add_query("D", "BOOLEAN", <<["d", "INTEGER"], ["B", "e"], ["a", "BOOLEAN"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["b", "D"]>>, "B")
int_value (48)
numerical_negation
numerical_negation
type_check
add_command("c", "b", <<["d", "BOOLEAN"], ["BOOLEAN", "D"], ["d", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "a"], ["d", "B"], ["D", "INTEGER"], ["A", "INTEGER"]>>)
logical_negation
add_call_chain(<<A,BOOLEAN,d,A,D,d,c,C,c>>)
add_query("B", "c", <<["A", "INTEGER"]>>, "d")
type_check
multiplication
add_class(C)
add_attribute("d", "A", "BOOLEAN")
add_call_chain(<<a,d,a>>)
conjunction
int_value (16)
add_call_chain(<<D,a,d>>)
type_check
add_call_chain(<<c,D,INTEGER,BOOLEAN,e,A,a,D>>)
generate_java_code
add_query("c", "INTEGER", <<["D", "INTEGER"], ["A", "BOOLEAN"]>>, "a")
add_call_chain(<<B,a,D,a,INTEGER>>)
bool_value (false)
add_command("A", "b", <<["d", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["B", "B"], ["e", "INTEGER"], ["b", "b"]>>)
add_call_chain(<<C,e>>)
add_call_chain(<<C,e,BOOLEAN,D>>)
generate_java_code
greater_than
add_query("C", "B", <<["c", "A"], ["B", "BOOLEAN"], ["a", "INTEGER"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["B", "A"], ["a", "BOOLEAN"]>>, "C")
add_command("a", "D", <<["INTEGER", "INTEGER"], ["D", "INTEGER"], ["e", "INTEGER"], ["B", "INTEGER"], ["D", "INTEGER"], ["C", "e"]>>)
add_query("D", "B", <<["b", "INTEGER"], ["c", "B"], ["A", "INTEGER"], ["INTEGER", "A"], ["A", "INTEGER"]>>, "A")
int_value (20)
logical_negation
add_attribute("c", "d", "INTEGER")
add_call_chain(<<B,B,c,B,e,A>>)
type_check
logical_negation
add_class(A)
numerical_negation
add_call_chain(<<A>>)
add_attribute("b", "C", "BOOLEAN")
add_command("e", "c", <<["B", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "D"], ["INTEGER", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "e"]>>)
add_command("a", "B", <<["INTEGER", "b"], ["c", "d"], ["BOOLEAN", "INTEGER"], ["D", "BOOLEAN"], ["B", "C"], ["BOOLEAN", "INTEGER"], ["D", "INTEGER"], ["B", "INTEGER"], ["e", "INTEGER"]>>)
add_attribute("C", "D", "B")
add_class(C)
add_call_chain(<<B,A,b,a,e,d>>)
add_command("A", "A", <<["B", "c"], ["a", "b"], ["B", "INTEGER"], ["B", "BOOLEAN"]>>)
bool_value (true)
add_attribute("d", "A", "INTEGER")
add_attribute("c", "A", "BOOLEAN")
add_class(C)
add_query("c", "e", <<["B", "INTEGER"], ["D", "INTEGER"], ["INTEGER", "INTEGER"], ["d", "BOOLEAN"], ["e", "BOOLEAN"], ["c", "D"], ["b", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["e", "BOOLEAN"]>>, "d")
greater_than
greater_than
add_command("BOOLEAN", "c", <<["b", "BOOLEAN"], ["C", "INTEGER"], ["D", "INTEGER"], ["D", "e"], ["A", "INTEGER"], ["B", "INTEGER"], ["e", "INTEGER"], ["a", "BOOLEAN"]>>)
type_check
bool_value (true)
add_call_chain(<<D,B,D,b,d,D,a>>)
add_call_chain(<<D,d,B,C,A>>)
numerical_negation
add_class(C)
bool_value (true)
add_call_chain(<<B,INTEGER,d,a,e,a,B>>)
bool_value (true)
type_check
numerical_negation
numerical_negation
add_class(B)
add_call_chain(<<D,b,a,A,BOOLEAN,e,a>>)
int_value (18)
add_command("a", "b", <<["B", "INTEGER"], ["e", "a"], ["INTEGER", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["c", "INTEGER"], ["e", "D"], ["c", "B"], ["D", "INTEGER"]>>)
logical_negation
int_value (44)
add_command("b", "d", <<["BOOLEAN", "a"], ["B", "INTEGER"], ["d", "A"]>>)
add_attribute("a", "e", "a")
numerical_negation
int_value (35)
logical_negation
add_call_chain(<<a,B>>)
logical_negation
add_call_chain(<<B,e,a,D,A,a,D>>)
bool_value (true)
generate_java_code
logical_negation
subtraction
add_call_chain(<<BOOLEAN,d,c,D,B,D,B>>)
add_call_chain(<<b,D,D,e,A>>)
equals
add_command("e", "a", <<["B", "BOOLEAN"], ["D", "B"], ["a", "BOOLEAN"], ["INTEGER", "INTEGER"], ["INTEGER", "INTEGER"], ["d", "BOOLEAN"], ["B", "INTEGER"]>>)
conjunction
int_value (20)
add_attribute("BOOLEAN", "A", "BOOLEAN")
conjunction
add_call_chain(<<e,C,A,c,c>>)
type_check
add_attribute("B", "B", "INTEGER")
add_attribute("INTEGER", "D", "e")
type_check
logical_negation
type_check
add_call_chain(<<C,d,d,A>>)
int_value (44)
numerical_negation
numerical_negation
int_value (48)
add_command("b", "B", <<["A", "INTEGER"], ["a", "a"], ["D", "INTEGER"], ["e", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "INTEGER"]>>)
add_class(INTEGER)
bool_value (true)
disjunction
add_attribute("d", "e", "INTEGER")
add_command("B", "BOOLEAN", <<["a", "INTEGER"], ["d", "c"], ["B", "BOOLEAN"], ["C", "INTEGER"], ["INTEGER", "d"], ["b", "BOOLEAN"], ["b", "BOOLEAN"]>>)
add_query("a", "B", <<["a", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["a", "c"], ["e", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "INTEGER"], ["a", "BOOLEAN"], ["C", "BOOLEAN"], ["d", "BOOLEAN"]>>, "BOOLEAN")
add_call_chain(<<e,e,a>>)
add_attribute("C", "e", "e")
add_query("A", "c", <<["d", "INTEGER"], ["C", "INTEGER"], ["e", "INTEGER"], ["d", "BOOLEAN"], ["d", "C"]>>, "B")
add_call_chain(<<C,c,e>>)
bool_value (true)
logical_negation
int_value (39)
int_value (3)
add_command("c", "d", <<["C", "INTEGER"], ["D", "A"], ["e", "INTEGER"], ["d", "BOOLEAN"]>>)
quotient
add_query("b", "D", <<["D", "INTEGER"], ["D", "INTEGER"]>>, "A")
add_command("A", "c", <<["C", "INTEGER"], ["e", "INTEGER"], ["e", "C"]>>)
generate_java_code
bool_value (true)
quotient
numerical_negation
generate_java_code
subtraction
add_query("B", "d", <<["a", "BOOLEAN"]>>, "INTEGER")
bool_value (true)
add_query("BOOLEAN", "INTEGER", <<["INTEGER", "A"], ["A", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>, "a")
numerical_negation
logical_negation
add_attribute("e", "b", "INTEGER")
add_command("D", "A", <<["d", "INTEGER"], ["b", "C"], ["c", "BOOLEAN"], ["B", "D"]>>)
numerical_negation
add_call_chain(<<a,b>>)
add_query("C", "D", <<["BOOLEAN", "INTEGER"], ["B", "BOOLEAN"]>>, "B")
add_attribute("C", "A", "INTEGER")
int_value (30)
add_query("D", "B", <<["b", "INTEGER"], ["C", "D"], ["A", "BOOLEAN"], ["INTEGER", "INTEGER"]>>, "A")
add_attribute("a", "B", "INTEGER")
add_call_chain(<<d,D,D,c,c,D>>)
add_attribute("d", "e", "INTEGER")
add_attribute("BOOLEAN", "e", "INTEGER")
add_class(e)
add_call_chain(<<c,C>>)
conjunction
int_value (44)
add_attribute("INTEGER", "a", "B")
logical_negation
add_call_chain(<<d,B,c,d,C,D,e,b>>)
add_class(c)
add_call_chain(<<B,D,a,C>>)
equals
add_command("e", "D", <<["b", "a"], ["B", "INTEGER"], ["e", "INTEGER"], ["c", "c"], ["a", "e"], ["C", "INTEGER"], ["b", "BOOLEAN"], ["B", "BOOLEAN"]>>)
add_call_chain(<<INTEGER,INTEGER>>)
logical_negation
add_call_chain(<<d,b,c,d,a,BOOLEAN,a,a>>)
type_check
int_value (13)
logical_negation
add_call_chain(<<INTEGER,BOOLEAN>>)
add_call_chain(<<B,c,INTEGER,a,BOOLEAN,A,D,B>>)
int_value (6)
addition
type_check
add_call_chain(<<d,B,b,e,B,B,C,b>>)
add_command("a", "C", <<["C", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["INTEGER", "BOOLEAN"], ["b", "INTEGER"], ["B", "INTEGER"], ["BOOLEAN", "d"], ["c", "BOOLEAN"]>>)
add_query("c", "C", <<["c", "INTEGER"], ["B", "INTEGER"]>>, "a")
bool_value (true)
type_check
add_command("INTEGER", "BOOLEAN", <<["D", "INTEGER"], ["b", "INTEGER"], ["b", "BOOLEAN"], ["D", "INTEGER"], ["C", "BOOLEAN"]>>)
addition
logical_negation
add_call_chain(<<A,A,B,e,B,B,b>>)
equals
disjunction
bool_value (true)
add_call_chain(<<INTEGER,B,INTEGER,a,BOOLEAN,A,d>>)
add_query("d", "D", <<["A", "e"], ["b", "BOOLEAN"], ["c", "D"], ["C", "INTEGER"], ["b", "INTEGER"], ["a", "BOOLEAN"], ["b", "D"]>>, "BOOLEAN")
bool_value (true)
add_call_chain(<<D,c,INTEGER,c,D>>)
add_attribute("B", "D", "BOOLEAN")
add_call_chain(<<c,a,C,D,e,B,D>>)
int_value (49)
add_command("d", "C", <<["C", "C"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["A", "B"]>>)
int_value (14)
add_query("b", "d", <<["c", "INTEGER"], ["B", "BOOLEAN"]>>, "B")
equals
int_value (22)
type_check
quotient
logical_negation
