add_query("c", "b", <<["e", "e"], ["C", "INTEGER"], ["INTEGER", "b"], ["c", "e"]>>, "b")
add_command("e", "D", <<["e", "b"]>>)
add_attribute("B", "INTEGER", "INTEGER")
multiplication
add_call_chain(<<b,A,A,A,B,A>>)
add_call_chain(<<b,c,C,b,B>>)
add_call_chain(<<B,A>>)
addition
add_attribute("d", "BOOLEAN", "c")
type_check
add_call_chain(<<BOOLEAN,b,C,A,B,d,b,BOOLEAN,C>>)
multiplication
bool_value (false)
numerical_negation
add_query("B", "BOOLEAN", <<["B", "INTEGER"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["INTEGER", "INTEGER"], ["A", "BOOLEAN"], ["b", "INTEGER"], ["c", "INTEGER"]>>, "B")
add_call_chain(<<A>>)
modulo
add_call_chain(<<b,B,b,D,B,C,B,a,A>>)
int_value (49)
int_value (30)
add_query("a", "c", <<["b", "INTEGER"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["B", "D"]>>, "b")
add_command("D", "b", <<["b", "a"], ["D", "e"], ["c", "BOOLEAN"], ["B", "B"], ["A", "d"]>>)
type_check
add_call_chain(<<a,INTEGER>>)
add_command("A", "A", <<["C", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "d"]>>)
add_attribute("d", "INTEGER", "B")
int_value (13)
logical_negation
modulo
type_check
disjunction
int_value (36)
quotient
add_attribute("B", "D", "INTEGER")
type_check
add_command("A", "C", <<["INTEGER", "BOOLEAN"], ["d", "INTEGER"], ["c", "INTEGER"], ["B", "INTEGER"], ["D", "INTEGER"], ["e", "e"], ["b", "INTEGER"], ["B", "BOOLEAN"]>>)
add_command("A", "B", <<["A", "INTEGER"]>>)
greater_than
add_attribute("c", "D", "INTEGER")
add_class(d)
add_attribute("A", "D", "d")
add_query("A", "BOOLEAN", <<["C", "INTEGER"]>>, "C")
bool_value (true)
add_call_chain(<<C>>)
add_query("c", "a", <<["a", "BOOLEAN"], ["D", "c"], ["BOOLEAN", "B"]>>, "B")
add_command("c", "d", <<["a", "C"], ["c", "INTEGER"]>>)
bool_value (false)
add_call_chain(<<c,c>>)
add_call_chain(<<A,INTEGER,D,D,B>>)
add_command("c", "b", <<["d", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "INTEGER"], ["A", "B"]>>)
add_attribute("B", "a", "B")
add_query("C", "B", <<["C", "D"], ["INTEGER", "B"], ["a", "BOOLEAN"], ["c", "C"], ["D", "INTEGER"]>>, "c")
add_command("A", "c", <<["D", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "C"], ["b", "INTEGER"], ["C", "A"], ["B", "BOOLEAN"], ["A", "BOOLEAN"]>>)
int_value (44)
add_attribute("e", "c", "BOOLEAN")
add_command("c", "B", <<["BOOLEAN", "BOOLEAN"], ["A", "b"]>>)
logical_negation
int_value (17)
logical_negation
numerical_negation
add_call_chain(<<A,BOOLEAN>>)
bool_value (false)
bool_value (false)
int_value (41)
logical_negation
add_class(a)
add_call_chain(<<B,C>>)
addition
logical_negation
type_check
add_query("D", "C", <<["b", "INTEGER"], ["B", "INTEGER"], ["c", "BOOLEAN"], ["D", "INTEGER"], ["b", "INTEGER"], ["D", "INTEGER"], ["d", "D"], ["d", "c"]>>, "a")
bool_value (true)
disjunction
type_check
less_than
greater_than
add_call_chain(<<BOOLEAN,c,BOOLEAN,BOOLEAN,a,D,D>>)
add_call_chain(<<d,d,B,b,D,b>>)
add_command("e", "B", <<["b", "BOOLEAN"], ["a", "BOOLEAN"]>>)
logical_negation
bool_value (false)
add_command("BOOLEAN", "A", <<["INTEGER", "INTEGER"], ["INTEGER", "INTEGER"], ["C", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "INTEGER"], ["e", "BOOLEAN"], ["B", "A"]>>)
add_call_chain(<<BOOLEAN,c,B,C>>)
add_class(D)
add_call_chain(<<B,c>>)
logical_negation
add_call_chain(<<c,a,D,e,C>>)
add_query("a", "d", <<["b", "BOOLEAN"], ["D", "BOOLEAN"]>>, "INTEGER")
disjunction
add_call_chain(<<a,D,d,d,e,D,D,D>>)
bool_value (false)
add_attribute("d", "c", "a")
addition
disjunction
add_call_chain(<<D,D,C,A>>)
numerical_negation
add_command("a", "A", <<["C", "d"], ["d", "BOOLEAN"], ["d", "INTEGER"], ["INTEGER", "INTEGER"], ["D", "e"]>>)
bool_value (true)
add_call_chain(<<D,d,C,d,C,c>>)
add_attribute("C", "B", "INTEGER")
numerical_negation
add_class(e)
conjunction
add_call_chain(<<A>>)
add_command("d", "D", <<["BOOLEAN", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["e", "BOOLEAN"], ["e", "INTEGER"]>>)
int_value (49)
generate_java_code
add_call_chain(<<BOOLEAN,D>>)
int_value (11)
add_call_chain(<<d,B,D,BOOLEAN,A,a,C,e,a>>)
add_call_chain(<<e,c,C,A,e,d,D,a>>)
add_attribute("D", "d", "a")
add_attribute("b", "C", "INTEGER")
less_than
numerical_negation
int_value (27)
add_command("BOOLEAN", "INTEGER", <<["D", "BOOLEAN"], ["d", "INTEGER"], ["A", "INTEGER"], ["A", "INTEGER"], ["e", "a"]>>)
quotient
modulo
greater_than
add_class(a)
logical_negation
equals
add_call_chain(<<C,A,d,BOOLEAN,a>>)
disjunction
quotient
add_attribute("e", "d", "BOOLEAN")
bool_value (true)
add_class(B)
greater_than
add_attribute("C", "C", "a")
generate_java_code
generate_java_code
add_call_chain(<<B,C,a,B,C,a>>)
add_query("C", "C", <<["a", "INTEGER"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["B", "BOOLEAN"]>>, "D")
add_query("c", "e", <<["C", "D"], ["B", "BOOLEAN"], ["A", "B"], ["b", "INTEGER"]>>, "A")
bool_value (true)
generate_java_code
bool_value (false)
add_command("B", "b", <<["A", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["C", "INTEGER"], ["C", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>)
add_call_chain(<<a,e,B>>)
add_class(d)
add_query("b", "A", <<["c", "B"], ["A", "a"], ["d", "INTEGER"], ["d", "INTEGER"], ["B", "BOOLEAN"], ["D", "INTEGER"]>>, "A")
int_value (26)
add_call_chain(<<D>>)
add_command("C", "C", <<["B", "BOOLEAN"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "INTEGER"], ["b", "INTEGER"]>>)
add_call_chain(<<C,a,INTEGER,BOOLEAN,A,A,C,BOOLEAN,D>>)
add_query("C", "e", <<["b", "b"], ["e", "INTEGER"], ["e", "INTEGER"]>>, "d")
add_call_chain(<<e,e>>)
add_attribute("b", "d", "BOOLEAN")
numerical_negation
bool_value (true)
int_value (27)
add_call_chain(<<A,b,d,a>>)
add_query("INTEGER", "b", <<["C", "INTEGER"], ["A", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "d"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["D", "BOOLEAN"]>>, "B")
logical_negation
add_query("D", "C", <<["B", "INTEGER"], ["B", "BOOLEAN"], ["e", "INTEGER"], ["A", "BOOLEAN"], ["C", "A"], ["c", "A"]>>, "d")
logical_negation
logical_negation
less_than
add_call_chain(<<d,B>>)
add_call_chain(<<c,e,B,b,BOOLEAN,b,INTEGER,b>>)
add_query("c", "B", <<["b", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "BOOLEAN"]>>, "D")
int_value (20)
add_class(b)
logical_negation
add_query("a", "e", <<["b", "BOOLEAN"]>>, "B")
add_command("D", "e", <<["B", "INTEGER"], ["B", "INTEGER"]>>)
add_call_chain(<<C,A>>)
logical_negation
bool_value (true)
conjunction
add_class(c)
int_value (29)
add_command("b", "B", <<["A", "a"]>>)
logical_negation
int_value (20)
add_call_chain(<<C,a,C,b,B,b>>)
greater_than
addition
add_attribute("B", "D", "e")
logical_negation
add_command("c", "BOOLEAN", <<["B", "BOOLEAN"], ["A", "e"]>>)
multiplication
add_call_chain(<<A,a>>)
add_query("B", "c", <<["c", "b"], ["c", "INTEGER"], ["B", "INTEGER"], ["B", "BOOLEAN"], ["a", "BOOLEAN"]>>, "d")
greater_than
add_attribute("b", "c", "D")
add_call_chain(<<D,B,d,c,A,C,C,D,A>>)
generate_java_code
bool_value (false)
bool_value (true)
int_value (17)
logical_negation
generate_java_code
add_call_chain(<<a,e>>)
add_attribute("D", "B", "d")
logical_negation
type_check
add_command("BOOLEAN", "BOOLEAN", <<["C", "A"], ["A", "A"], ["B", "c"], ["c", "d"]>>)
add_class(A)
add_call_chain(<<A,C,C,C,A,D>>)
add_attribute("BOOLEAN", "B", "a")
int_value (29)
generate_java_code
conjunction
add_query("d", "c", <<["b", "BOOLEAN"], ["D", "INTEGER"], ["a", "BOOLEAN"]>>, "C")
type_check
type_check
add_query("B", "B", <<["c", "INTEGER"], ["a", "C"], ["D", "INTEGER"]>>, "e")
add_call_chain(<<e,C,d,b,C>>)
multiplication
add_command("c", "b", <<["C", "INTEGER"], ["a", "BOOLEAN"], ["A", "A"], ["C", "INTEGER"], ["A", "INTEGER"]>>)
add_call_chain(<<d,c,d,B,b,c,e,C>>)
multiplication
add_attribute("a", "C", "BOOLEAN")
type_check
add_call_chain(<<D,b,INTEGER,D,a>>)
add_call_chain(<<D,B,C,d,c,D>>)
type_check
generate_java_code
int_value (41)
less_than
add_attribute("b", "d", "INTEGER")
logical_negation
add_query("BOOLEAN", "b", <<["D", "BOOLEAN"], ["e", "INTEGER"], ["INTEGER", "INTEGER"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["c", "INTEGER"]>>, "d")
add_call_chain(<<A,BOOLEAN,c,a,b,c>>)
add_query("e", "b", <<["a", "INTEGER"], ["a", "BOOLEAN"]>>, "c")
add_query("a", "e", <<["d", "B"], ["D", "B"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["d", "b"]>>, "d")
add_class(BOOLEAN)
add_attribute("A", "BOOLEAN", "INTEGER")
type_check
add_call_chain(<<D>>)
bool_value (false)
add_attribute("D", "B", "BOOLEAN")
bool_value (true)
add_command("a", "b", <<["e", "B"], ["d", "C"], ["b", "e"], ["a", "B"], ["D", "c"], ["B", "A"], ["d", "INTEGER"], ["A", "INTEGER"], ["A", "d"]>>)
add_command("D", "INTEGER", <<["e", "INTEGER"], ["a", "BOOLEAN"]>>)
add_command("c", "A", <<["b", "BOOLEAN"], ["A", "INTEGER"], ["D", "INTEGER"], ["a", "C"], ["d", "A"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["c", "B"]>>)
less_than
numerical_negation
int_value (42)
add_attribute("B", "D", "INTEGER")
add_call_chain(<<B,B,A,INTEGER,C,a,c>>)
equals
add_command("A", "b", <<["c", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["d", "BOOLEAN"], ["INTEGER", "e"], ["B", "INTEGER"]>>)
generate_java_code
int_value (15)
type_check
add_call_chain(<<d,C,C,d,c,d>>)
add_command("INTEGER", "a", <<["INTEGER", "A"], ["c", "INTEGER"], ["b", "INTEGER"], ["B", "BOOLEAN"], ["e", "INTEGER"], ["a", "d"], ["INTEGER", "INTEGER"], ["a", "BOOLEAN"]>>)
generate_java_code
bool_value (true)
generate_java_code
logical_negation
bool_value (true)
add_call_chain(<<BOOLEAN,C>>)
generate_java_code
logical_negation
add_attribute("A", "A", "INTEGER")
add_query("b", "B", <<["BOOLEAN", "C"], ["C", "BOOLEAN"], ["A", "BOOLEAN"], ["INTEGER", "INTEGER"]>>, "D")
less_than
int_value (21)
add_call_chain(<<b,e,INTEGER,b>>)
add_command("D", "c", <<["C", "INTEGER"], ["A", "INTEGER"], ["B", "INTEGER"], ["A", "INTEGER"], ["B", "C"]>>)
add_attribute("D", "C", "B")
add_attribute("b", "BOOLEAN", "BOOLEAN")
add_command("c", "INTEGER", <<["e", "BOOLEAN"]>>)
disjunction
add_attribute("a", "d", "INTEGER")
add_command("A", "A", <<["c", "INTEGER"], ["BOOLEAN", "c"], ["C", "BOOLEAN"], ["e", "d"]>>)
add_call_chain(<<B,a>>)
add_command("C", "c", <<["A", "BOOLEAN"], ["a", "D"], ["D", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["a", "c"], ["BOOLEAN", "D"], ["d", "D"], ["c", "a"]>>)
numerical_negation
add_call_chain(<<A,c,C,INTEGER,B,A>>)
bool_value (true)
add_attribute("a", "D", "BOOLEAN")
add_class(b)
disjunction
addition
conjunction
add_attribute("d", "C", "INTEGER")
add_call_chain(<<b,e,d,D,c>>)
add_class(c)
add_attribute("a", "C", "BOOLEAN")
add_command("b", "e", <<["D", "b"], ["B", "INTEGER"], ["b", "INTEGER"], ["A", "BOOLEAN"], ["D", "D"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["D", "BOOLEAN"]>>)
bool_value (false)
