generate_java_code
add_query("c", "B", <<["BOOLEAN", "BOOLEAN"], ["e", "INTEGER"], ["B", "C"], ["b", "INTEGER"], ["D", "BOOLEAN"], ["e", "A"], ["a", "BOOLEAN"], ["B", "INTEGER"]>>, "C")
numerical_negation
type_check
logical_negation
add_call_chain(<<BOOLEAN,e,d>>)
conjunction
add_call_chain(<<d,c,B,A,B,d,D>>)
bool_value (true)
type_check
add_query("a", "d", <<["B", "INTEGER"], ["e", "D"], ["B", "INTEGER"], ["d", "BOOLEAN"], ["INTEGER", "C"]>>, "B")
bool_value (true)
int_value (27)
numerical_negation
disjunction
add_command("a", "d", <<["BOOLEAN", "INTEGER"], ["d", "INTEGER"], ["INTEGER", "INTEGER"], ["e", "D"], ["D", "BOOLEAN"]>>)
greater_than
add_attribute("C", "C", "d")
add_query("b", "A", <<["b", "BOOLEAN"], ["D", "INTEGER"], ["C", "d"], ["C", "D"]>>, "c")
logical_negation
add_attribute("INTEGER", "b", "INTEGER")
numerical_negation
add_query("B", "c", <<["BOOLEAN", "BOOLEAN"], ["b", "INTEGER"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "INTEGER"], ["a", "a"]>>, "C")
add_call_chain(<<C,D,a>>)
add_attribute("C", "c", "c")
add_query("D", "d", <<["D", "BOOLEAN"], ["e", "a"], ["C", "d"], ["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "INTEGER"], ["INTEGER", "INTEGER"], ["a", "INTEGER"], ["e", "INTEGER"]>>, "e")
generate_java_code
add_query("B", "e", <<["B", "INTEGER"], ["C", "BOOLEAN"], ["C", "d"]>>, "BOOLEAN")
add_query("a", "BOOLEAN", <<["d", "D"], ["C", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["a", "e"], ["e", "A"], ["BOOLEAN", "e"]>>, "C")
int_value (37)
add_call_chain(<<a,b,C,BOOLEAN>>)
add_query("c", "a", <<["c", "BOOLEAN"], ["c", "INTEGER"], ["a", "b"], ["d", "BOOLEAN"], ["e", "INTEGER"], ["C", "INTEGER"], ["C", "a"], ["b", "INTEGER"], ["c", "INTEGER"]>>, "C")
add_command("A", "e", <<["D", "INTEGER"], ["a", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
add_attribute("INTEGER", "B", "INTEGER")
bool_value (true)
add_call_chain(<<A,c>>)
add_attribute("d", "B", "BOOLEAN")
logical_negation
addition
add_call_chain(<<d,A,d>>)
add_command("C", "A", <<["D", "c"], ["b", "BOOLEAN"], ["e", "BOOLEAN"]>>)
add_attribute("C", "b", "BOOLEAN")
add_command("D", "BOOLEAN", <<["b", "B"], ["c", "BOOLEAN"], ["A", "BOOLEAN"]>>)
type_check
add_query("C", "D", <<["b", "BOOLEAN"], ["d", "b"]>>, "D")
generate_java_code
add_query("A", "A", <<["C", "INTEGER"], ["D", "INTEGER"], ["a", "INTEGER"], ["BOOLEAN", "INTEGER"], ["c", "C"]>>, "a")
modulo
add_class(a)
add_call_chain(<<A,D,d,a,BOOLEAN,B,C,d>>)
add_class(d)
bool_value (true)
add_class(e)
add_command("D", "C", <<["a", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["D", "B"], ["b", "INTEGER"], ["c", "INTEGER"], ["d", "INTEGER"], ["B", "a"]>>)
add_attribute("BOOLEAN", "A", "c")
bool_value (false)
modulo
quotient
add_call_chain(<<c,D,A,a,C,d,e,D>>)
logical_negation
bool_value (false)
numerical_negation
quotient
add_command("BOOLEAN", "B", <<["C", "BOOLEAN"], ["B", "D"], ["b", "BOOLEAN"], ["b", "INTEGER"], ["d", "INTEGER"], ["A", "BOOLEAN"]>>)
generate_java_code
add_attribute("a", "b", "INTEGER")
add_call_chain(<<b,C,INTEGER,a,A,a,C>>)
add_command("B", "B", <<["A", "INTEGER"], ["a", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "INTEGER"], ["a", "D"], ["A", "INTEGER"], ["INTEGER", "BOOLEAN"], ["A", "INTEGER"]>>)
add_call_chain(<<INTEGER,e>>)
add_query("INTEGER", "b", <<["D", "A"], ["A", "BOOLEAN"], ["INTEGER", "c"], ["D", "e"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["B", "INTEGER"], ["c", "BOOLEAN"]>>, "d")
add_command("e", "d", <<["B", "B"], ["D", "D"], ["A", "d"], ["d", "B"], ["D", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "INTEGER"], ["b", "INTEGER"], ["A", "C"]>>)
int_value (44)
generate_java_code
add_query("D", "INTEGER", <<["d", "INTEGER"], ["c", "d"], ["b", "BOOLEAN"]>>, "a")
bool_value (false)
int_value (44)
add_query("c", "C", <<["INTEGER", "INTEGER"], ["D", "INTEGER"], ["b", "BOOLEAN"], ["B", "c"], ["b", "INTEGER"]>>, "c")
int_value (15)
add_attribute("D", "d", "BOOLEAN")
generate_java_code
bool_value (true)
logical_negation
type_check
logical_negation
add_query("C", "C", <<["c", "A"], ["c", "INTEGER"], ["e", "INTEGER"], ["d", "BOOLEAN"], ["b", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "INTEGER"]>>, "a")
add_call_chain(<<a,B,c,D,b,C>>)
add_command("e", "b", <<["c", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "INTEGER"]>>)
conjunction
type_check
logical_negation
add_call_chain(<<B,C,B,a,D,c,A>>)
bool_value (false)
generate_java_code
add_query("C", "c", <<["e", "BOOLEAN"]>>, "INTEGER")
less_than
add_attribute("A", "INTEGER", "INTEGER")
add_attribute("D", "A", "BOOLEAN")
logical_negation
add_command("e", "d", <<["c", "BOOLEAN"], ["b", "INTEGER"], ["d", "C"], ["b", "b"], ["a", "b"], ["D", "INTEGER"], ["D", "INTEGER"]>>)
add_call_chain(<<B,B,e,INTEGER,C,INTEGER,c,c>>)
add_attribute("a", "D", "INTEGER")
conjunction
add_command("a", "C", <<["d", "BOOLEAN"], ["e", "INTEGER"], ["INTEGER", "BOOLEAN"], ["d", "C"], ["A", "BOOLEAN"], ["d", "INTEGER"]>>)
numerical_negation
numerical_negation
bool_value (true)
add_call_chain(<<B,B,c>>)
numerical_negation
generate_java_code
add_query("A", "d", <<["A", "INTEGER"], ["C", "BOOLEAN"], ["c", "INTEGER"]>>, "BOOLEAN")
add_call_chain(<<e,d>>)
add_attribute("b", "A", "BOOLEAN")
add_attribute("e", "B", "INTEGER")
numerical_negation
disjunction
add_call_chain(<<e,a,b,c,c,e,D,d>>)
add_attribute("BOOLEAN", "D", "B")
add_call_chain(<<e,e,C,a,b>>)
add_call_chain(<<C,A>>)
disjunction
type_check
add_attribute("a", "INTEGER", "BOOLEAN")
add_query("C", "c", <<["C", "INTEGER"], ["D", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>, "c")
generate_java_code
logical_negation
add_class(D)
less_than
bool_value (true)
type_check
add_query("C", "INTEGER", <<["e", "INTEGER"], ["d", "INTEGER"]>>, "INTEGER")
add_call_chain(<<D,A,B,e,B,C,B,d>>)
add_attribute("INTEGER", "C", "BOOLEAN")
add_command("C", "A", <<["e", "BOOLEAN"], ["B", "A"], ["INTEGER", "INTEGER"], ["A", "BOOLEAN"]>>)
greater_than
numerical_negation
addition
add_class(a)
generate_java_code
add_attribute("c", "a", "INTEGER")
add_query("BOOLEAN", "A", <<["b", "INTEGER"], ["e", "C"], ["e", "INTEGER"], ["B", "BOOLEAN"], ["c", "INTEGER"], ["e", "BOOLEAN"]>>, "c")
add_call_chain(<<a>>)
add_query("c", "a", <<["B", "INTEGER"], ["a", "c"], ["A", "BOOLEAN"], ["B", "B"], ["D", "INTEGER"], ["c", "BOOLEAN"], ["C", "B"], ["b", "BOOLEAN"]>>, "B")
add_call_chain(<<e,b,b,B,D,D,c>>)
type_check
add_query("C", "BOOLEAN", <<["C", "BOOLEAN"], ["d", "B"], ["b", "b"], ["a", "BOOLEAN"], ["D", "INTEGER"], ["A", "e"], ["e", "BOOLEAN"], ["C", "INTEGER"]>>, "C")
add_call_chain(<<e>>)
type_check
int_value (19)
add_call_chain(<<b,e,D,c,A,B,d>>)
numerical_negation
int_value (28)
add_attribute("D", "d", "BOOLEAN")
add_call_chain(<<D,C>>)
logical_negation
logical_negation
numerical_negation
numerical_negation
generate_java_code
add_query("INTEGER", "INTEGER", <<["c", "BOOLEAN"], ["B", "D"], ["B", "d"], ["c", "INTEGER"], ["A", "a"], ["A", "INTEGER"], ["c", "A"], ["e", "D"], ["B", "BOOLEAN"]>>, "d")
logical_negation
add_command("B", "c", <<["BOOLEAN", "D"], ["d", "BOOLEAN"], ["B", "B"]>>)
numerical_negation
bool_value (true)
int_value (25)
add_attribute("c", "a", "INTEGER")
multiplication
add_command("a", "A", <<["BOOLEAN", "INTEGER"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["d", "D"], ["B", "BOOLEAN"], ["c", "c"]>>)
type_check
add_command("D", "c", <<["A", "BOOLEAN"], ["c", "INTEGER"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["C", "A"]>>)
add_attribute("c", "C", "BOOLEAN")
add_class(c)
add_attribute("BOOLEAN", "b", "BOOLEAN")
int_value (43)
bool_value (false)
bool_value (false)
add_class(C)
generate_java_code
add_query("a", "e", <<["C", "INTEGER"]>>, "c")
add_call_chain(<<D,C,C,D>>)
add_call_chain(<<BOOLEAN,d,c>>)
type_check
add_attribute("D", "C", "BOOLEAN")
bool_value (false)
add_call_chain(<<A,C,D,D,a,A,D>>)
generate_java_code
generate_java_code
int_value (39)
multiplication
add_class(e)
add_command("d", "A", <<["B", "BOOLEAN"], ["c", "BOOLEAN"], ["d", "BOOLEAN"], ["d", "A"], ["a", "D"]>>)
add_attribute("C", "a", "C")
logical_negation
add_call_chain(<<C,D,b>>)
logical_negation
add_attribute("C", "D", "BOOLEAN")
add_attribute("e", "C", "BOOLEAN")
type_check
int_value (31)
add_call_chain(<<C,d,B,C,B,INTEGER,e,e,BOOLEAN>>)
int_value (36)
logical_negation
bool_value (false)
add_class(INTEGER)
add_call_chain(<<A,INTEGER,B,A,D,D,INTEGER,C>>)
conjunction
int_value (35)
modulo
bool_value (false)
add_command("C", "A", <<["d", "BOOLEAN"], ["B", "d"], ["D", "e"], ["B", "INTEGER"], ["d", "INTEGER"]>>)
conjunction
add_call_chain(<<e,D,D,B,D,c>>)
add_query("a", "e", <<["c", "INTEGER"], ["d", "INTEGER"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["a", "INTEGER"], ["b", "INTEGER"], ["C", "d"], ["a", "BOOLEAN"]>>, "A")
add_call_chain(<<e,D>>)
numerical_negation
type_check
type_check
bool_value (true)
add_command("d", "INTEGER", <<["D", "BOOLEAN"], ["C", "INTEGER"]>>)
bool_value (false)
add_class(A)
add_command("BOOLEAN", "e", <<["d", "b"], ["BOOLEAN", "INTEGER"], ["c", "BOOLEAN"], ["c", "b"], ["BOOLEAN", "A"], ["b", "INTEGER"]>>)
quotient
type_check
add_attribute("A", "b", "BOOLEAN")
add_command("B", "c", <<["A", "INTEGER"], ["e", "A"], ["b", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "INTEGER"], ["D", "INTEGER"], ["b", "INTEGER"], ["e", "d"], ["A", "BOOLEAN"]>>)
add_call_chain(<<b>>)
int_value (41)
logical_negation
add_query("A", "d", <<["d", "BOOLEAN"], ["c", "BOOLEAN"]>>, "D")
generate_java_code
int_value (48)
add_call_chain(<<B,b,A,c,D,d,a,a>>)
add_call_chain(<<e,c,b,b,a,A>>)
add_command("BOOLEAN", "B", <<["INTEGER", "BOOLEAN"], ["d", "INTEGER"], ["A", "INTEGER"], ["D", "INTEGER"], ["e", "INTEGER"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["a", "d"]>>)
add_call_chain(<<a,A,c,A,B,a,D>>)
add_attribute("e", "B", "d")
bool_value (true)
bool_value (true)
numerical_negation
numerical_negation
conjunction
add_command("C", "b", <<["C", "INTEGER"]>>)
add_class(A)
logical_negation
numerical_negation
add_class(C)
type_check
multiplication
logical_negation
addition
add_call_chain(<<c,a,b,b,a,B>>)
add_call_chain(<<D,b,B,BOOLEAN,B,INTEGER,d,A,d>>)
add_call_chain(<<c,e,b,a,A,BOOLEAN,e>>)
add_class(C)
add_query("D", "d", <<["C", "a"], ["c", "INTEGER"], ["B", "INTEGER"], ["INTEGER", "INTEGER"], ["B", "INTEGER"], ["C", "C"], ["INTEGER", "A"], ["c", "BOOLEAN"]>>, "C")
add_query("a", "D", <<["A", "INTEGER"], ["c", "d"], ["D", "c"], ["A", "A"], ["b", "BOOLEAN"]>>, "A")
add_query("A", "a", <<["c", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["INTEGER", "c"], ["B", "BOOLEAN"], ["b", "BOOLEAN"]>>, "C")
bool_value (false)
int_value (1)
