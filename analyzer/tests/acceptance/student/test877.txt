bool_value (false)
add_command("D", "B", <<["B", "b"], ["c", "INTEGER"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["INTEGER", "BOOLEAN"], ["INTEGER", "A"], ["c", "BOOLEAN"], ["d", "INTEGER"]>>)
generate_java_code
logical_negation
add_attribute("C", "B", "BOOLEAN")
type_check
equals
add_call_chain(<<D,INTEGER,D,A,A,a,b,B,BOOLEAN>>)
add_class(a)
disjunction
add_attribute("b", "C", "INTEGER")
int_value (1)
int_value (39)
numerical_negation
type_check
add_attribute("BOOLEAN", "A", "BOOLEAN")
disjunction
bool_value (false)
type_check
add_call_chain(<<BOOLEAN,D,d,d>>)
int_value (8)
numerical_negation
add_call_chain(<<d,B,d,A,a>>)
generate_java_code
numerical_negation
disjunction
add_call_chain(<<a,A,b>>)
bool_value (true)
add_command("d", "d", <<["D", "b"], ["a", "e"], ["d", "BOOLEAN"], ["d", "BOOLEAN"], ["b", "BOOLEAN"], ["e", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["c", "A"]>>)
type_check
logical_negation
add_class(a)
numerical_negation
add_call_chain(<<C,BOOLEAN>>)
numerical_negation
add_query("a", "d", <<["B", "BOOLEAN"], ["C", "INTEGER"], ["d", "INTEGER"], ["c", "d"], ["e", "C"], ["b", "A"]>>, "c")
int_value (41)
numerical_negation
add_class(e)
bool_value (false)
logical_negation
add_command("a", "B", <<["b", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["C", "BOOLEAN"], ["b", "A"], ["d", "INTEGER"], ["C", "a"], ["INTEGER", "INTEGER"], ["B", "C"], ["e", "INTEGER"]>>)
numerical_negation
add_call_chain(<<B,C>>)
add_class(A)
bool_value (true)
add_call_chain(<<c,a,A>>)
bool_value (true)
add_command("A", "A", <<["A", "BOOLEAN"], ["b", "INTEGER"], ["B", "e"]>>)
numerical_negation
add_command("B", "D", <<["INTEGER", "INTEGER"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["d", "c"], ["A", "BOOLEAN"], ["D", "BOOLEAN"], ["d", "INTEGER"]>>)
conjunction
conjunction
int_value (44)
add_query("B", "e", <<["BOOLEAN", "INTEGER"], ["D", "e"], ["A", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["a", "BOOLEAN"], ["a", "INTEGER"]>>, "a")
logical_negation
bool_value (false)
add_attribute("b", "D", "INTEGER")
generate_java_code
add_command("INTEGER", "B", <<["D", "INTEGER"]>>)
add_class(e)
add_class(a)
add_class(C)
add_call_chain(<<d,a,D,D,a,b,e,C>>)
add_query("D", "C", <<["c", "a"], ["B", "e"], ["b", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "BOOLEAN"]>>, "b")
multiplication
less_than
add_call_chain(<<c,C>>)
add_call_chain(<<B,b,A,e,B,c>>)
less_than
add_command("D", "c", <<["D", "INTEGER"], ["C", "INTEGER"], ["C", "D"], ["B", "C"], ["D", "a"], ["D", "c"]>>)
add_call_chain(<<B,D>>)
add_call_chain(<<B,A,d,b,C,A,d,A,d>>)
add_attribute("D", "C", "BOOLEAN")
add_query("B", "e", <<["C", "INTEGER"], ["D", "INTEGER"], ["e", "INTEGER"], ["B", "INTEGER"], ["A", "INTEGER"], ["b", "INTEGER"]>>, "c")
add_class(A)
add_query("d", "C", <<["D", "INTEGER"], ["b", "INTEGER"], ["A", "INTEGER"], ["D", "D"], ["B", "BOOLEAN"], ["e", "C"]>>, "BOOLEAN")
add_attribute("d", "B", "B")
add_class(d)
generate_java_code
add_command("INTEGER", "c", <<["e", "INTEGER"], ["b", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "INTEGER"]>>)
bool_value (false)
add_class(b)
disjunction
add_attribute("d", "BOOLEAN", "BOOLEAN")
equals
int_value (2)
add_class(a)
type_check
add_query("A", "d", <<["e", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "e"], ["C", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>, "D")
add_call_chain(<<B,C,d>>)
bool_value (true)
generate_java_code
add_command("D", "e", <<["b", "C"], ["INTEGER", "INTEGER"], ["A", "INTEGER"], ["D", "INTEGER"], ["d", "INTEGER"], ["e", "B"], ["C", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["b", "b"]>>)
add_query("e", "a", <<["b", "INTEGER"], ["d", "c"], ["b", "INTEGER"], ["C", "C"], ["C", "BOOLEAN"], ["a", "B"]>>, "c")
add_class(B)
type_check
add_call_chain(<<e,e,a,D,b,d>>)
less_than
modulo
conjunction
add_attribute("B", "D", "A")
add_call_chain(<<INTEGER,A,e,b,C,B,c>>)
bool_value (false)
type_check
add_attribute("B", "INTEGER", "c")
add_query("b", "C", <<["C", "INTEGER"], ["B", "c"]>>, "d")
int_value (40)
disjunction
add_command("b", "D", <<["D", "d"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "a"], ["c", "c"]>>)
add_command("D", "c", <<["a", "BOOLEAN"]>>)
add_query("B", "D", <<["d", "BOOLEAN"], ["B", "D"], ["B", "C"], ["b", "INTEGER"], ["B", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "d"], ["c", "BOOLEAN"]>>, "a")
add_call_chain(<<b,b,B,A,c,d,INTEGER>>)
numerical_negation
add_command("D", "e", <<["b", "BOOLEAN"], ["D", "INTEGER"], ["BOOLEAN", "INTEGER"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["d", "a"], ["INTEGER", "BOOLEAN"]>>)
conjunction
disjunction
logical_negation
add_attribute("INTEGER", "d", "a")
generate_java_code
add_class(d)
add_attribute("a", "A", "BOOLEAN")
bool_value (false)
int_value (25)
add_attribute("C", "D", "BOOLEAN")
add_command("BOOLEAN", "e", <<["C", "BOOLEAN"]>>)
add_command("a", "d", <<["BOOLEAN", "INTEGER"], ["b", "BOOLEAN"], ["a", "BOOLEAN"]>>)
add_call_chain(<<D,C,A,e>>)
add_class(D)
bool_value (false)
type_check
add_call_chain(<<D,e,e,d,a>>)
numerical_negation
less_than
type_check
equals
int_value (26)
conjunction
add_call_chain(<<INTEGER>>)
numerical_negation
add_command("INTEGER", "D", <<["b", "INTEGER"], ["B", "BOOLEAN"]>>)
add_class(b)
quotient
logical_negation
add_call_chain(<<C,INTEGER,B,d>>)
add_command("C", "c", <<["A", "INTEGER"], ["b", "BOOLEAN"], ["c", "INTEGER"]>>)
add_attribute("b", "C", "BOOLEAN")
add_call_chain(<<e,A,c>>)
type_check
type_check
add_call_chain(<<c,INTEGER,c,C,e,BOOLEAN,D,D>>)
logical_negation
int_value (17)
add_call_chain(<<a,C,B,B,e,D,D>>)
add_call_chain(<<D,C,BOOLEAN,A,C>>)
disjunction
logical_negation
add_call_chain(<<b,INTEGER,e,D,e,BOOLEAN,e>>)
bool_value (true)
logical_negation
add_command("B", "c", <<["a", "BOOLEAN"], ["B", "INTEGER"]>>)
add_call_chain(<<e,A,C>>)
conjunction
type_check
disjunction
bool_value (true)
add_query("b", "e", <<["C", "BOOLEAN"], ["e", "INTEGER"], ["d", "BOOLEAN"], ["BOOLEAN", "C"], ["C", "INTEGER"], ["D", "b"], ["A", "BOOLEAN"], ["B", "BOOLEAN"]>>, "c")
add_class(b)
greater_than
greater_than
quotient
add_call_chain(<<b,INTEGER,C,D>>)
add_call_chain(<<BOOLEAN,e,d,d,D,a,c,b>>)
int_value (3)
int_value (11)
add_call_chain(<<d,A>>)
add_query("b", "b", <<["B", "INTEGER"], ["e", "INTEGER"], ["C", "BOOLEAN"], ["c", "B"], ["B", "BOOLEAN"], ["a", "INTEGER"], ["d", "BOOLEAN"]>>, "INTEGER")
add_query("C", "A", <<["INTEGER", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["D", "BOOLEAN"], ["INTEGER", "INTEGER"], ["c", "BOOLEAN"]>>, "B")
add_attribute("A", "b", "D")
conjunction
numerical_negation
numerical_negation
numerical_negation
add_attribute("a", "d", "BOOLEAN")
conjunction
add_attribute("d", "D", "D")
bool_value (true)
add_query("D", "d", <<["C", "BOOLEAN"], ["C", "INTEGER"]>>, "C")
int_value (5)
int_value (3)
