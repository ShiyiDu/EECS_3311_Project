add_attribute("C", "c", "BOOLEAN")
type_check
logical_negation
add_query("C", "b", <<["c", "INTEGER"], ["BOOLEAN", "e"], ["B", "e"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "INTEGER"], ["b", "INTEGER"], ["A", "C"], ["b", "INTEGER"]>>, "A")
add_query("A", "c", <<["e", "BOOLEAN"], ["B", "C"], ["C", "INTEGER"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["d", "INTEGER"], ["e", "BOOLEAN"], ["b", "INTEGER"]>>, "D")
logical_negation
add_command("e", "b", <<["e", "C"], ["b", "BOOLEAN"], ["A", "INTEGER"], ["A", "BOOLEAN"], ["c", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "a"]>>)
add_class(b)
numerical_negation
conjunction
add_call_chain(<<D,a,a,C,C,e,c,a>>)
bool_value (true)
int_value (24)
add_attribute("A", "b", "B")
add_query("C", "BOOLEAN", <<["INTEGER", "B"]>>, "C")
int_value (40)
int_value (48)
add_class(B)
add_call_chain(<<b,C,c>>)
logical_negation
generate_java_code
bool_value (false)
add_call_chain(<<b,B,d,e,B>>)
add_class(A)
add_attribute("BOOLEAN", "e", "INTEGER")
multiplication
multiplication
add_class(e)
add_call_chain(<<BOOLEAN,INTEGER,b,C>>)
bool_value (true)
add_command("C", "c", <<["B", "BOOLEAN"], ["c", "INTEGER"], ["C", "BOOLEAN"]>>)
equals
add_query("A", "D", <<["D", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "B"], ["D", "BOOLEAN"], ["INTEGER", "C"]>>, "A")
modulo
add_call_chain(<<C,e,D,D,B>>)
type_check
add_attribute("e", "e", "INTEGER")
multiplication
add_query("c", "b", <<["D", "INTEGER"], ["A", "c"], ["B", "INTEGER"], ["c", "BOOLEAN"]>>, "b")
bool_value (true)
add_call_chain(<<C,C>>)
logical_negation
add_attribute("a", "B", "BOOLEAN")
add_class(a)
add_call_chain(<<A,INTEGER,c,b,B,a,d,a>>)
add_command("c", "e", <<["a", "INTEGER"], ["c", "BOOLEAN"], ["A", "C"], ["d", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "BOOLEAN"]>>)
int_value (12)
bool_value (false)
bool_value (false)
add_query("a", "B", <<["C", "BOOLEAN"]>>, "d")
add_query("c", "b", <<["INTEGER", "INTEGER"], ["d", "D"]>>, "INTEGER")
disjunction
logical_negation
add_class(B)
equals
add_command("d", "A", <<["B", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "C"], ["INTEGER", "BOOLEAN"]>>)
generate_java_code
quotient
add_command("BOOLEAN", "A", <<["b", "BOOLEAN"], ["C", "C"]>>)
add_call_chain(<<D,e,D,b,INTEGER,C>>)
numerical_negation
logical_negation
type_check
add_command("C", "b", <<["B", "INTEGER"], ["c", "b"], ["C", "B"], ["a", "BOOLEAN"], ["INTEGER", "INTEGER"], ["a", "BOOLEAN"], ["b", "a"], ["c", "INTEGER"]>>)
bool_value (false)
conjunction
int_value (14)
generate_java_code
int_value (35)
add_query("c", "b", <<["INTEGER", "BOOLEAN"], ["d", "d"]>>, "C")
int_value (38)
add_attribute("C", "d", "D")
add_attribute("D", "a", "BOOLEAN")
add_call_chain(<<a,BOOLEAN>>)
int_value (47)
add_attribute("a", "b", "d")
add_command("d", "B", <<["c", "d"], ["a", "A"], ["INTEGER", "INTEGER"], ["B", "INTEGER"]>>)
add_command("B", "e", <<["B", "BOOLEAN"], ["d", "INTEGER"]>>)
add_command("C", "b", <<["e", "B"], ["e", "INTEGER"], ["D", "C"], ["B", "BOOLEAN"], ["c", "INTEGER"], ["D", "D"]>>)
type_check
less_than
generate_java_code
add_attribute("e", "D", "BOOLEAN")
logical_negation
add_attribute("c", "a", "BOOLEAN")
generate_java_code
add_query("e", "D", <<["B", "BOOLEAN"]>>, "B")
addition
disjunction
add_command("b", "e", <<["BOOLEAN", "BOOLEAN"], ["D", "b"], ["b", "d"], ["d", "BOOLEAN"], ["d", "INTEGER"], ["INTEGER", "d"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["INTEGER", "INTEGER"]>>)
add_attribute("c", "BOOLEAN", "BOOLEAN")
disjunction
int_value (46)
bool_value (true)
add_class(C)
add_attribute("C", "INTEGER", "A")
type_check
add_query("b", "D", <<["A", "b"], ["d", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>, "d")
type_check
int_value (46)
logical_negation
add_call_chain(<<D,b,b,B,d,b,BOOLEAN,A,e>>)
generate_java_code
add_command("e", "A", <<["D", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "D"], ["C", "BOOLEAN"], ["a", "C"], ["a", "INTEGER"], ["C", "b"], ["B", "INTEGER"]>>)
int_value (46)
int_value (17)
add_attribute("C", "b", "INTEGER")
addition
less_than
add_call_chain(<<C,A,b,C,e,D,A,a,e>>)
add_command("BOOLEAN", "c", <<["C", "D"], ["D", "BOOLEAN"], ["c", "BOOLEAN"]>>)
numerical_negation
add_class(a)
conjunction
type_check
add_call_chain(<<A,d,d,A,c>>)
add_query("c", "A", <<["D", "INTEGER"], ["A", "B"], ["BOOLEAN", "BOOLEAN"], ["c", "INTEGER"], ["D", "INTEGER"], ["B", "INTEGER"], ["A", "d"], ["BOOLEAN", "BOOLEAN"]>>, "D")
add_query("C", "d", <<["d", "INTEGER"], ["C", "INTEGER"], ["C", "C"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["D", "INTEGER"]>>, "INTEGER")
add_call_chain(<<d,D,C,C,c>>)
generate_java_code
bool_value (true)
add_query("D", "d", <<["b", "BOOLEAN"], ["D", "INTEGER"], ["a", "BOOLEAN"], ["A", "D"], ["D", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["INTEGER", "INTEGER"], ["A", "d"]>>, "c")
add_call_chain(<<a,c,INTEGER,A,A>>)
add_call_chain(<<b,d,INTEGER,b>>)
numerical_negation
add_call_chain(<<C,B,d,c,b,d,A>>)
int_value (14)
add_call_chain(<<C,d,d,a>>)
bool_value (false)
add_command("D", "BOOLEAN", <<["A", "BOOLEAN"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["e", "A"], ["d", "INTEGER"], ["C", "A"], ["INTEGER", "INTEGER"], ["B", "C"], ["C", "BOOLEAN"]>>)
add_call_chain(<<C,c,b,B,d,B,A,c,d>>)
type_check
add_command("D", "b", <<["A", "INTEGER"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["d", "a"], ["BOOLEAN", "B"]>>)
add_command("BOOLEAN", "a", <<["D", "D"], ["e", "BOOLEAN"], ["d", "d"], ["B", "BOOLEAN"], ["d", "BOOLEAN"]>>)
add_command("B", "d", <<["B", "BOOLEAN"], ["A", "e"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["b", "a"], ["D", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["D", "B"], ["B", "INTEGER"]>>)
numerical_negation
numerical_negation
modulo
add_attribute("a", "a", "BOOLEAN")
add_command("c", "b", <<["d", "c"], ["B", "B"], ["a", "BOOLEAN"], ["D", "b"], ["b", "C"], ["c", "D"], ["b", "INTEGER"], ["D", "INTEGER"]>>)
disjunction
bool_value (false)
add_command("C", "d", <<["A", "BOOLEAN"], ["B", "INTEGER"], ["A", "A"], ["e", "C"], ["A", "INTEGER"]>>)
multiplication
add_attribute("b", "C", "INTEGER")
bool_value (false)
disjunction
add_command("c", "D", <<["INTEGER", "A"], ["c", "BOOLEAN"], ["C", "b"], ["A", "INTEGER"], ["INTEGER", "INTEGER"], ["B", "BOOLEAN"], ["e", "BOOLEAN"]>>)
modulo
int_value (8)
add_class(C)
bool_value (false)
add_query("C", "C", <<["e", "BOOLEAN"], ["b", "BOOLEAN"]>>, "a")
subtraction
add_query("e", "C", <<["a", "BOOLEAN"], ["D", "A"], ["b", "A"], ["d", "D"], ["D", "C"]>>, "C")
add_call_chain(<<e>>)
add_attribute("BOOLEAN", "c", "C")
type_check
addition
type_check
add_command("c", "A", <<["e", "INTEGER"]>>)
numerical_negation
equals
add_class(A)
bool_value (false)
int_value (8)
add_command("e", "e", <<["A", "A"], ["D", "INTEGER"], ["C", "INTEGER"], ["BOOLEAN", "INTEGER"], ["A", "A"], ["A", "A"], ["D", "a"], ["C", "BOOLEAN"]>>)
add_class(A)
bool_value (true)
add_attribute("INTEGER", "a", "D")
add_attribute("A", "A", "B")
add_call_chain(<<A,BOOLEAN,a,B,a,c,D,a,a>>)
numerical_negation
less_than
generate_java_code
less_than
add_command("B", "b", <<["e", "BOOLEAN"], ["c", "INTEGER"], ["b", "d"], ["e", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["d", "INTEGER"]>>)
add_query("C", "B", <<["INTEGER", "INTEGER"], ["A", "e"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "A"]>>, "D")
bool_value (true)
add_attribute("BOOLEAN", "A", "BOOLEAN")
add_call_chain(<<d,c,C,D,a,C,B,D>>)
multiplication
bool_value (false)
bool_value (false)
int_value (11)
generate_java_code
int_value (48)
add_call_chain(<<e,a,A,INTEGER,INTEGER,C,B,a>>)
bool_value (true)
generate_java_code
add_command("b", "d", <<["C", "BOOLEAN"]>>)
logical_negation
generate_java_code
numerical_negation
add_attribute("D", "D", "INTEGER")
logical_negation
int_value (26)
add_call_chain(<<D,e,C,e,d,A,A,b>>)
add_call_chain(<<A,e,d,a>>)
bool_value (true)
add_query("C", "B", <<["A", "BOOLEAN"]>>, "A")
numerical_negation
add_query("B", "B", <<["B", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "BOOLEAN"], ["BOOLEAN", "C"], ["a", "c"]>>, "D")
logical_negation
add_query("A", "c", <<["D", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "BOOLEAN"]>>, "b")
add_query("d", "D", <<["c", "C"], ["d", "BOOLEAN"], ["INTEGER", "e"], ["d", "b"]>>, "c")
add_call_chain(<<B,D,a,d>>)
add_query("c", "B", <<["a", "INTEGER"], ["e", "B"], ["A", "BOOLEAN"], ["A", "INTEGER"]>>, "d")
add_attribute("a", "BOOLEAN", "BOOLEAN")
bool_value (true)
add_command("e", "B", <<["a", "BOOLEAN"], ["B", "INTEGER"], ["e", "e"], ["e", "INTEGER"], ["A", "INTEGER"], ["INTEGER", "BOOLEAN"], ["A", "BOOLEAN"], ["BOOLEAN", "C"]>>)
bool_value (true)
less_than
add_query("INTEGER", "e", <<["d", "INTEGER"], ["d", "e"], ["d", "A"], ["C", "INTEGER"], ["b", "BOOLEAN"], ["D", "BOOLEAN"]>>, "c")
numerical_negation
disjunction
bool_value (true)
multiplication
int_value (28)
add_class(D)
logical_negation
add_call_chain(<<INTEGER,d>>)
add_command("A", "D", <<["b", "BOOLEAN"], ["a", "INTEGER"], ["D", "BOOLEAN"], ["D", "D"], ["D", "INTEGER"], ["BOOLEAN", "INTEGER"]>>)
add_command("D", "B", <<["b", "c"], ["d", "d"], ["A", "INTEGER"]>>)
add_call_chain(<<e,A>>)
disjunction
logical_negation
numerical_negation
int_value (3)
bool_value (false)
add_call_chain(<<d>>)
add_attribute("e", "B", "BOOLEAN")
add_attribute("B", "B", "INTEGER")
numerical_negation
