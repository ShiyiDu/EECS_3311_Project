add_call_chain(<<C,e,D,B>>)
logical_negation
int_value (38)
int_value (44)
add_attribute("c", "C", "C")
numerical_negation
logical_negation
add_command("b", "D", <<["b", "D"], ["D", "A"]>>)
add_call_chain(<<B,c,e,e,C,e,d,b,A>>)
add_call_chain(<<C,C>>)
add_command("A", "B", <<["D", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "INTEGER"], ["D", "d"], ["c", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["b", "INTEGER"]>>)
add_query("e", "BOOLEAN", <<["b", "INTEGER"], ["C", "a"], ["BOOLEAN", "INTEGER"]>>, "C")
bool_value (false)
add_attribute("B", "BOOLEAN", "INTEGER")
add_call_chain(<<c,c,D,C>>)
bool_value (false)
add_call_chain(<<b,d,d,B,e,BOOLEAN,b,b,b>>)
bool_value (true)
generate_java_code
numerical_negation
logical_negation
numerical_negation
int_value (47)
numerical_negation
add_attribute("A", "B", "BOOLEAN")
add_query("C", "BOOLEAN", <<["a", "b"], ["c", "D"], ["a", "INTEGER"], ["B", "b"]>>, "e")
disjunction
add_query("C", "B", <<["d", "BOOLEAN"], ["A", "INTEGER"], ["c", "B"], ["d", "BOOLEAN"], ["b", "INTEGER"]>>, "INTEGER")
add_command("e", "c", <<["C", "B"], ["B", "C"], ["e", "INTEGER"]>>)
add_command("BOOLEAN", "C", <<["c", "D"], ["c", "INTEGER"], ["c", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "INTEGER"]>>)
type_check
conjunction
add_class(B)
greater_than
add_call_chain(<<INTEGER,d,d,D>>)
add_call_chain(<<BOOLEAN,C,a,A>>)
add_attribute("D", "B", "INTEGER")
bool_value (false)
add_call_chain(<<a,D,D,B,a,a,A,C,C>>)
bool_value (true)
int_value (45)
type_check
logical_negation
logical_negation
add_attribute("B", "B", "A")
add_call_chain(<<e,d>>)
add_attribute("B", "B", "b")
add_attribute("e", "c", "INTEGER")
bool_value (true)
disjunction
int_value (30)
logical_negation
add_class(B)
add_call_chain(<<B,a,c,INTEGER,c,c>>)
bool_value (false)
add_command("C", "D", <<["INTEGER", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "BOOLEAN"], ["INTEGER", "INTEGER"], ["e", "BOOLEAN"]>>)
numerical_negation
bool_value (false)
greater_than
bool_value (false)
add_class(e)
add_command("A", "BOOLEAN", <<["e", "A"], ["INTEGER", "INTEGER"], ["a", "BOOLEAN"], ["A", "INTEGER"], ["b", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "INTEGER"]>>)
numerical_negation
add_query("b", "C", <<["D", "d"], ["a", "BOOLEAN"], ["d", "INTEGER"]>>, "B")
add_command("C", "C", <<["C", "c"], ["e", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["A", "INTEGER"], ["d", "BOOLEAN"]>>)
add_query("e", "BOOLEAN", <<["b", "INTEGER"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "B"], ["e", "BOOLEAN"], ["B", "INTEGER"], ["INTEGER", "INTEGER"], ["e", "INTEGER"]>>, "e")
add_command("BOOLEAN", "A", <<["e", "INTEGER"], ["D", "INTEGER"], ["D", "A"]>>)
generate_java_code
logical_negation
generate_java_code
less_than
add_query("INTEGER", "B", <<["D", "b"], ["e", "BOOLEAN"], ["b", "BOOLEAN"], ["e", "BOOLEAN"]>>, "e")
generate_java_code
bool_value (false)
add_command("a", "c", <<["c", "INTEGER"], ["D", "BOOLEAN"], ["e", "INTEGER"], ["C", "BOOLEAN"], ["A", "c"]>>)
add_call_chain(<<C,c,b,B,D>>)
add_query("b", "b", <<["d", "INTEGER"], ["a", "B"], ["D", "INTEGER"], ["B", "INTEGER"], ["B", "BOOLEAN"]>>, "B")
add_command("B", "B", <<["e", "e"]>>)
add_call_chain(<<e,C,C,BOOLEAN,C,D,INTEGER>>)
add_call_chain(<<c,BOOLEAN,b,D>>)
add_query("A", "INTEGER", <<["BOOLEAN", "a"], ["D", "INTEGER"], ["e", "INTEGER"], ["BOOLEAN", "INTEGER"]>>, "A")
greater_than
add_call_chain(<<BOOLEAN,b,e,A,d,D,A>>)
type_check
conjunction
add_call_chain(<<B>>)
greater_than
type_check
type_check
add_call_chain(<<c,B,D,D,e,C>>)
less_than
int_value (24)
quotient
add_command("D", "INTEGER", <<["d", "C"]>>)
type_check
add_attribute("INTEGER", "D", "BOOLEAN")
add_attribute("BOOLEAN", "C", "D")
add_class(b)
add_class(C)
add_class(a)
addition
add_call_chain(<<d,b,e,c,INTEGER,A,c,B>>)
add_call_chain(<<C>>)
add_query("INTEGER", "A", <<["B", "B"]>>, "B")
generate_java_code
generate_java_code
add_command("INTEGER", "b", <<["c", "BOOLEAN"], ["A", "c"], ["e", "A"], ["C", "D"]>>)
type_check
bool_value (true)
add_call_chain(<<c,c,b,d,D>>)
add_class(c)
int_value (17)
add_command("e", "C", <<["d", "d"], ["a", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "INTEGER"], ["c", "B"], ["INTEGER", "BOOLEAN"], ["D", "INTEGER"]>>)
add_command("a", "b", <<["B", "e"], ["e", "D"], ["A", "INTEGER"], ["b", "c"], ["c", "D"], ["INTEGER", "d"], ["B", "BOOLEAN"]>>)
add_call_chain(<<d,D,B,INTEGER,e,B>>)
add_attribute("a", "A", "BOOLEAN")
type_check
add_query("d", "a", <<["C", "BOOLEAN"], ["INTEGER", "d"], ["D", "INTEGER"], ["A", "BOOLEAN"], ["INTEGER", "A"], ["e", "INTEGER"], ["BOOLEAN", "INTEGER"], ["d", "INTEGER"], ["a", "BOOLEAN"]>>, "e")
int_value (16)
numerical_negation
type_check
quotient
bool_value (false)
type_check
add_call_chain(<<BOOLEAN,C,e,D,D,a>>)
subtraction
int_value (9)
add_class(c)
logical_negation
modulo
int_value (15)
add_query("e", "A", <<["C", "C"], ["D", "INTEGER"]>>, "D")
conjunction
add_query("c", "D", <<["A", "INTEGER"], ["INTEGER", "e"], ["b", "BOOLEAN"], ["b", "INTEGER"]>>, "BOOLEAN")
conjunction
add_attribute("C", "a", "BOOLEAN")
int_value (38)
add_call_chain(<<d,c,D,c,C,D,a,c>>)
generate_java_code
add_call_chain(<<INTEGER,B,e>>)
int_value (13)
add_call_chain(<<A,B,c>>)
add_command("D", "B", <<["BOOLEAN", "e"], ["C", "INTEGER"], ["c", "c"], ["D", "INTEGER"], ["C", "INTEGER"], ["a", "BOOLEAN"], ["B", "A"], ["e", "BOOLEAN"], ["b", "INTEGER"]>>)
add_command("e", "e", <<["a", "BOOLEAN"], ["d", "INTEGER"], ["C", "BOOLEAN"], ["B", "e"], ["b", "INTEGER"], ["d", "INTEGER"], ["A", "C"], ["b", "BOOLEAN"], ["d", "BOOLEAN"]>>)
add_call_chain(<<INTEGER,d,b,INTEGER,C,C,C>>)
add_command("C", "a", <<["c", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["C", "INTEGER"], ["d", "INTEGER"]>>)
add_query("B", "D", <<["c", "INTEGER"], ["A", "BOOLEAN"], ["B", "A"], ["e", "INTEGER"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["e", "c"], ["C", "BOOLEAN"]>>, "e")
numerical_negation
subtraction
add_class(INTEGER)
numerical_negation
bool_value (false)
int_value (25)
add_query("d", "c", <<["e", "INTEGER"], ["c", "BOOLEAN"]>>, "INTEGER")
add_command("d", "c", <<["B", "A"], ["D", "BOOLEAN"], ["INTEGER", "INTEGER"], ["e", "BOOLEAN"], ["D", "BOOLEAN"]>>)
bool_value (true)
disjunction
add_class(b)
subtraction
numerical_negation
bool_value (true)
numerical_negation
add_query("d", "D", <<["b", "D"], ["A", "INTEGER"], ["C", "b"], ["e", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["D", "D"]>>, "d")
add_call_chain(<<A>>)
add_query("C", "e", <<["e", "BOOLEAN"], ["a", "INTEGER"], ["D", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "INTEGER"], ["A", "INTEGER"], ["e", "c"]>>, "BOOLEAN")
bool_value (false)
add_call_chain(<<C>>)
int_value (9)
add_call_chain(<<b>>)
bool_value (false)
numerical_negation
disjunction
add_call_chain(<<b,C,C,b,D>>)
add_call_chain(<<a,D,c>>)
add_call_chain(<<INTEGER,d,D,C,D,D>>)
numerical_negation
add_query("BOOLEAN", "INTEGER", <<["D", "d"], ["D", "BOOLEAN"], ["d", "e"], ["b", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "C"]>>, "C")
add_command("c", "c", <<["B", "BOOLEAN"], ["e", "D"], ["A", "C"], ["c", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["BOOLEAN", "b"]>>)
add_query("INTEGER", "d", <<["A", "BOOLEAN"], ["c", "D"], ["d", "D"], ["A", "B"], ["e", "INTEGER"], ["e", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "BOOLEAN"]>>, "C")
add_query("e", "b", <<["B", "INTEGER"], ["C", "INTEGER"], ["d", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>, "D")
add_query("c", "a", <<["INTEGER", "INTEGER"], ["b", "BOOLEAN"], ["BOOLEAN", "b"], ["D", "A"], ["B", "BOOLEAN"]>>, "C")
addition
addition
multiplication
int_value (31)
numerical_negation
add_call_chain(<<e,D>>)
bool_value (true)
add_attribute("b", "C", "B")
logical_negation
disjunction
disjunction
add_class(B)
add_call_chain(<<D,a,B,D,e>>)
add_query("e", "a", <<["BOOLEAN", "BOOLEAN"], ["b", "BOOLEAN"], ["d", "BOOLEAN"], ["d", "INTEGER"], ["C", "BOOLEAN"]>>, "A")
add_call_chain(<<B,D,b,D,D,a,D,C,a>>)
add_attribute("d", "e", "b")
add_call_chain(<<D>>)
numerical_negation
add_attribute("B", "C", "c")
addition
quotient
greater_than
bool_value (false)
disjunction
add_class(INTEGER)
add_query("C", "e", <<["B", "INTEGER"], ["D", "BOOLEAN"], ["d", "BOOLEAN"]>>, "d")
add_command("e", "c", <<["c", "INTEGER"], ["C", "INTEGER"], ["C", "C"], ["c", "INTEGER"]>>)
bool_value (true)
add_call_chain(<<c,c,B,a>>)
add_call_chain(<<B,D,B,a,a,B,e,b,D>>)
add_command("a", "A", <<["e", "INTEGER"], ["B", "INTEGER"], ["B", "INTEGER"], ["b", "BOOLEAN"], ["b", "INTEGER"], ["B", "INTEGER"]>>)
add_command("B", "c", <<["a", "BOOLEAN"], ["c", "d"], ["a", "BOOLEAN"], ["D", "b"], ["a", "d"], ["C", "B"], ["B", "INTEGER"], ["e", "BOOLEAN"], ["A", "BOOLEAN"]>>)
bool_value (false)
add_call_chain(<<C,C,e,b,d,c,a>>)
add_command("e", "b", <<["e", "BOOLEAN"], ["BOOLEAN", "D"], ["BOOLEAN", "e"], ["D", "INTEGER"], ["c", "BOOLEAN"], ["b", "BOOLEAN"], ["d", "INTEGER"]>>)
add_command("c", "c", <<["c", "D"], ["D", "BOOLEAN"], ["b", "c"]>>)
add_command("a", "c", <<["B", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["C", "BOOLEAN"]>>)
int_value (20)
add_command("c", "A", <<["C", "c"], ["b", "b"], ["b", "BOOLEAN"], ["b", "INTEGER"], ["b", "BOOLEAN"], ["D", "BOOLEAN"]>>)
generate_java_code
bool_value (true)
logical_negation
add_call_chain(<<D,INTEGER,B,a,C>>)
