add_call_chain(<<c>>)
add_attribute("A", "D", "BOOLEAN")
generate_java_code
logical_negation
add_query("BOOLEAN", "c", <<["d", "BOOLEAN"], ["e", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["a", "INTEGER"], ["e", "a"], ["B", "INTEGER"]>>, "e")
logical_negation
add_command("e", "a", <<["BOOLEAN", "BOOLEAN"], ["C", "INTEGER"], ["e", "BOOLEAN"], ["b", "INTEGER"], ["C", "INTEGER"]>>)
add_command("b", "b", <<["a", "BOOLEAN"], ["INTEGER", "a"], ["D", "BOOLEAN"]>>)
int_value (24)
conjunction
add_call_chain(<<d,c,D,d,A>>)
numerical_negation
add_query("B", "d", <<["D", "BOOLEAN"], ["a", "BOOLEAN"]>>, "c")
add_attribute("A", "B", "BOOLEAN")
int_value (31)
logical_negation
add_command("D", "C", <<["BOOLEAN", "e"], ["d", "BOOLEAN"], ["e", "INTEGER"]>>)
add_command("C", "D", <<["D", "c"], ["b", "INTEGER"], ["c", "C"]>>)
add_query("B", "c", <<["A", "B"], ["d", "B"]>>, "a")
equals
int_value (12)
add_class(c)
int_value (45)
logical_negation
generate_java_code
generate_java_code
numerical_negation
add_command("D", "A", <<["a", "BOOLEAN"], ["b", "BOOLEAN"], ["e", "INTEGER"], ["a", "BOOLEAN"], ["a", "D"], ["b", "INTEGER"], ["e", "d"], ["B", "B"]>>)
disjunction
bool_value (true)
logical_negation
bool_value (true)
int_value (12)
greater_than
bool_value (true)
numerical_negation
int_value (19)
add_call_chain(<<INTEGER,A,A,e,C,e,e,B>>)
add_query("C", "B", <<["A", "INTEGER"], ["c", "b"], ["B", "INTEGER"], ["d", "BOOLEAN"], ["b", "INTEGER"], ["A", "A"], ["D", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>, "e")
bool_value (true)
add_query("INTEGER", "A", <<["c", "b"], ["c", "d"]>>, "a")
add_call_chain(<<d,B,b,d,d,d,c>>)
add_attribute("B", "e", "d")
type_check
add_command("a", "C", <<["b", "BOOLEAN"], ["c", "INTEGER"], ["B", "e"], ["d", "BOOLEAN"]>>)
add_call_chain(<<A,a,B,A,BOOLEAN,A>>)
logical_negation
numerical_negation
generate_java_code
add_command("e", "B", <<["A", "B"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["d", "BOOLEAN"]>>)
bool_value (false)
disjunction
numerical_negation
bool_value (false)
logical_negation
add_attribute("A", "b", "d")
add_attribute("a", "B", "INTEGER")
conjunction
int_value (40)
int_value (39)
add_call_chain(<<B,e,D,a,C,B,D>>)
numerical_negation
bool_value (true)
numerical_negation
add_call_chain(<<C,C,e,a,INTEGER,a,d,D>>)
add_query("A", "INTEGER", <<["e", "A"]>>, "B")
add_command("b", "A", <<["d", "INTEGER"], ["e", "C"], ["a", "BOOLEAN"], ["INTEGER", "INTEGER"], ["b", "d"], ["BOOLEAN", "B"], ["b", "BOOLEAN"], ["D", "BOOLEAN"]>>)
logical_negation
add_command("d", "B", <<["D", "BOOLEAN"], ["INTEGER", "INTEGER"]>>)
disjunction
add_call_chain(<<a,BOOLEAN,d,INTEGER,b>>)
add_call_chain(<<D,C>>)
add_attribute("e", "C", "c")
subtraction
addition
add_call_chain(<<b,e,B,d,B,a,e>>)
add_command("c", "A", <<["b", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "b"], ["d", "INTEGER"], ["C", "BOOLEAN"]>>)
conjunction
numerical_negation
int_value (35)
type_check
add_call_chain(<<D,B,B,A,A,e,b,C,C>>)
add_command("A", "D", <<["a", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>)
add_call_chain(<<c,a,e,b,D,D>>)
generate_java_code
add_call_chain(<<A,B,C,c,d,INTEGER,A,a>>)
add_call_chain(<<c,b,A,B,a>>)
add_class(C)
greater_than
bool_value (false)
add_attribute("c", "B", "A")
modulo
add_class(d)
add_class(D)
int_value (40)
bool_value (true)
add_command("e", "A", <<["A", "A"], ["C", "BOOLEAN"], ["d", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "BOOLEAN"]>>)
add_call_chain(<<d,B,D,A,C,d,d,A>>)
numerical_negation
greater_than
add_command("A", "INTEGER", <<["d", "D"], ["b", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "INTEGER"]>>)
int_value (29)
numerical_negation
add_query("BOOLEAN", "C", <<["b", "INTEGER"], ["c", "BOOLEAN"], ["C", "INTEGER"], ["d", "D"], ["B", "INTEGER"]>>, "d")
greater_than
logical_negation
add_call_chain(<<BOOLEAN,c,d,BOOLEAN,b,b,A>>)
add_attribute("C", "C", "d")
add_call_chain(<<C,b,A,C,A,d,a>>)
add_class(D)
add_call_chain(<<e,C,a,B,d,d,e,a,C>>)
bool_value (false)
int_value (34)
conjunction
int_value (9)
quotient
conjunction
int_value (2)
int_value (42)
logical_negation
bool_value (false)
type_check
bool_value (false)
modulo
add_class(e)
add_call_chain(<<D,BOOLEAN,D,D,b>>)
add_command("B", "C", <<["b", "b"], ["A", "BOOLEAN"], ["a", "A"], ["A", "e"], ["b", "BOOLEAN"], ["D", "INTEGER"], ["D", "INTEGER"], ["B", "INTEGER"]>>)
int_value (24)
add_call_chain(<<e,BOOLEAN,INTEGER,C,d,A,D>>)
disjunction
logical_negation
generate_java_code
add_query("c", "INTEGER", <<["d", "a"], ["d", "d"], ["C", "D"], ["e", "INTEGER"]>>, "C")
conjunction
modulo
numerical_negation
type_check
add_query("a", "c", <<["A", "a"], ["A", "INTEGER"], ["B", "A"], ["d", "BOOLEAN"], ["C", "c"], ["d", "c"]>>, "BOOLEAN")
add_query("B", "C", <<["a", "BOOLEAN"], ["b", "e"], ["D", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "INTEGER"]>>, "B")
add_command("a", "b", <<["INTEGER", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "BOOLEAN"]>>)
add_call_chain(<<d,B,C,B,e>>)
add_call_chain(<<INTEGER,a,d,BOOLEAN,C,c,e>>)
add_command("C", "D", <<["A", "INTEGER"], ["D", "C"], ["D", "d"]>>)
bool_value (true)
add_class(C)
add_call_chain(<<D,c,e,D,e,e,c,C>>)
int_value (29)
add_call_chain(<<e,d>>)
add_query("a", "B", <<["B", "B"], ["a", "INTEGER"]>>, "INTEGER")
add_attribute("B", "INTEGER", "BOOLEAN")
add_call_chain(<<a,C,b,C,a,C,b>>)
add_call_chain(<<BOOLEAN,C,INTEGER,D,A,C,d>>)
numerical_negation
equals
add_class(B)
add_query("C", "e", <<["b", "INTEGER"], ["d", "BOOLEAN"], ["a", "INTEGER"], ["a", "BOOLEAN"], ["b", "A"], ["D", "INTEGER"], ["C", "A"], ["d", "INTEGER"], ["A", "B"]>>, "a")
int_value (11)
equals
addition
add_command("a", "b", <<["BOOLEAN", "BOOLEAN"], ["D", "INTEGER"], ["B", "BOOLEAN"], ["B", "INTEGER"], ["BOOLEAN", "a"], ["b", "C"], ["e", "INTEGER"], ["C", "b"]>>)
add_call_chain(<<e,BOOLEAN,C,B,a,A>>)
add_call_chain(<<b,e>>)
bool_value (true)
bool_value (false)
add_call_chain(<<d,C,B,a,A,D>>)
add_command("C", "e", <<["c", "e"], ["A", "a"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["c", "c"], ["c", "d"], ["d", "B"]>>)
add_query("d", "d", <<["C", "e"]>>, "C")
bool_value (true)
add_call_chain(<<d,A,B,e,C>>)
add_query("b", "e", <<["B", "e"], ["A", "BOOLEAN"], ["D", "b"], ["C", "INTEGER"], ["b", "INTEGER"], ["B", "INTEGER"], ["A", "BOOLEAN"]>>, "b")
add_command("b", "C", <<["A", "BOOLEAN"], ["B", "INTEGER"], ["e", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "INTEGER"], ["BOOLEAN", "INTEGER"], ["C", "INTEGER"]>>)
bool_value (false)
conjunction
numerical_negation
generate_java_code
subtraction
int_value (48)
int_value (27)
add_command("e", "INTEGER", <<["A", "C"]>>)
numerical_negation
add_command("B", "C", <<["INTEGER", "BOOLEAN"], ["b", "b"], ["e", "c"], ["INTEGER", "BOOLEAN"], ["d", "INTEGER"]>>)
add_call_chain(<<B,C,e,D,B,C,B,b,C>>)
generate_java_code
numerical_negation
generate_java_code
add_attribute("D", "a", "BOOLEAN")
int_value (30)
generate_java_code
add_call_chain(<<e,D,BOOLEAN,BOOLEAN>>)
add_attribute("b", "B", "INTEGER")
equals
int_value (20)
add_call_chain(<<BOOLEAN,INTEGER,e,d,C,C,d>>)
bool_value (false)
greater_than
add_class(a)
add_class(a)
add_class(D)
add_command("a", "D", <<["C", "BOOLEAN"]>>)
logical_negation
logical_negation
add_call_chain(<<A,C,C,B>>)
add_command("b", "c", <<["A", "BOOLEAN"]>>)
int_value (25)
less_than
add_attribute("BOOLEAN", "B", "BOOLEAN")
addition
add_call_chain(<<c,A,c,d>>)
add_attribute("INTEGER", "e", "b")
type_check
add_command("A", "B", <<["c", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "INTEGER"]>>)
add_command("d", "e", <<["b", "a"]>>)
numerical_negation
add_attribute("B", "d", "INTEGER")
greater_than
add_command("d", "D", <<["c", "INTEGER"], ["D", "A"], ["c", "INTEGER"], ["BOOLEAN", "INTEGER"], ["B", "INTEGER"], ["d", "d"], ["B", "e"], ["e", "a"], ["D", "d"]>>)
add_query("a", "B", <<["INTEGER", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "C"], ["b", "e"], ["e", "BOOLEAN"]>>, "B")
numerical_negation
add_command("C", "b", <<["D", "a"], ["D", "INTEGER"]>>)
addition
add_class(C)
int_value (17)
bool_value (false)
bool_value (false)
bool_value (false)
add_call_chain(<<b,c,INTEGER,C,D,c,b,C,d>>)
add_query("d", "b", <<["e", "INTEGER"], ["B", "INTEGER"], ["D", "a"], ["C", "INTEGER"], ["a", "INTEGER"], ["B", "C"], ["b", "a"], ["c", "e"]>>, "a")
numerical_negation
generate_java_code
type_check
int_value (36)
