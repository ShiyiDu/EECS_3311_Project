add_call_chain(<<c,C,C,B,e,INTEGER,B>>)
equals
add_call_chain(<<e,C,A>>)
add_query("B", "e", <<["INTEGER", "C"], ["D", "BOOLEAN"], ["C", "B"], ["B", "a"], ["e", "BOOLEAN"], ["a", "INTEGER"], ["D", "INTEGER"], ["BOOLEAN", "D"], ["d", "BOOLEAN"]>>, "e")
add_attribute("e", "D", "B")
equals
int_value (22)
type_check
add_query("d", "a", <<["D", "INTEGER"], ["A", "c"]>>, "D")
add_class(A)
add_attribute("c", "a", "INTEGER")
bool_value (false)
add_query("a", "e", <<["c", "BOOLEAN"], ["b", "e"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["d", "INTEGER"], ["D", "A"]>>, "d")
add_call_chain(<<a,e,C,a,e,D,e>>)
subtraction
add_command("e", "d", <<["b", "BOOLEAN"], ["C", "A"], ["d", "BOOLEAN"], ["a", "a"], ["c", "BOOLEAN"], ["b", "d"], ["e", "D"], ["D", "BOOLEAN"]>>)
add_command("b", "A", <<["e", "INTEGER"], ["D", "INTEGER"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["a", "INTEGER"]>>)
add_class(D)
disjunction
add_query("C", "a", <<["e", "B"], ["D", "A"], ["C", "INTEGER"], ["a", "INTEGER"], ["c", "a"]>>, "d")
add_call_chain(<<B,B,D>>)
add_call_chain(<<INTEGER,INTEGER>>)
add_command("D", "C", <<["a", "INTEGER"], ["B", "INTEGER"], ["A", "INTEGER"], ["B", "INTEGER"], ["b", "BOOLEAN"], ["b", "B"], ["a", "c"], ["e", "INTEGER"]>>)
numerical_negation
add_attribute("e", "A", "BOOLEAN")
add_command("B", "b", <<["A", "BOOLEAN"], ["e", "a"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["e", "INTEGER"], ["C", "INTEGER"]>>)
bool_value (false)
logical_negation
numerical_negation
generate_java_code
int_value (16)
add_attribute("e", "d", "BOOLEAN")
add_query("INTEGER", "BOOLEAN", <<["A", "BOOLEAN"], ["a", "INTEGER"], ["e", "INTEGER"]>>, "a")
quotient
add_call_chain(<<D,D,BOOLEAN,c,d,d,D>>)
add_command("d", "d", <<["INTEGER", "C"], ["c", "a"], ["c", "INTEGER"], ["c", "BOOLEAN"], ["b", "A"], ["A", "INTEGER"], ["C", "C"]>>)
add_call_chain(<<C,C>>)
bool_value (false)
int_value (29)
add_command("C", "C", <<["BOOLEAN", "BOOLEAN"], ["D", "A"], ["BOOLEAN", "BOOLEAN"], ["B", "a"], ["D", "a"], ["D", "A"], ["a", "A"], ["D", "INTEGER"], ["d", "INTEGER"]>>)
add_attribute("A", "C", "BOOLEAN")
numerical_negation
add_command("D", "A", <<["a", "BOOLEAN"], ["a", "D"], ["a", "BOOLEAN"], ["e", "BOOLEAN"], ["a", "b"]>>)
greater_than
add_query("BOOLEAN", "C", <<["e", "INTEGER"], ["B", "c"], ["B", "INTEGER"], ["D", "INTEGER"], ["e", "BOOLEAN"], ["e", "BOOLEAN"]>>, "b")
add_class(C)
add_call_chain(<<C,C,b,INTEGER,D,A>>)
numerical_negation
disjunction
add_attribute("A", "INTEGER", "BOOLEAN")
logical_negation
int_value (14)
bool_value (false)
type_check
numerical_negation
conjunction
add_call_chain(<<b,D,a,B,A,a,A,C,C>>)
add_call_chain(<<e,a,b,C,b,d,A,b>>)
add_attribute("e", "a", "BOOLEAN")
generate_java_code
add_class(C)
add_call_chain(<<A,c,c,d,a>>)
add_query("D", "B", <<["b", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "INTEGER"]>>, "a")
generate_java_code
add_call_chain(<<A,a,c,A,D,D,D>>)
greater_than
add_attribute("C", "D", "b")
numerical_negation
int_value (33)
add_command("d", "A", <<["BOOLEAN", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "b"]>>)
equals
add_command("C", "b", <<["C", "INTEGER"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["BOOLEAN", "INTEGER"]>>)
int_value (33)
add_command("B", "C", <<["a", "BOOLEAN"], ["B", "INTEGER"], ["d", "INTEGER"], ["d", "INTEGER"], ["B", "BOOLEAN"], ["D", "INTEGER"]>>)
type_check
add_call_chain(<<e,BOOLEAN,B,C,b,c,c,b>>)
type_check
numerical_negation
int_value (44)
addition
add_query("e", "A", <<["C", "INTEGER"], ["C", "INTEGER"], ["d", "a"], ["D", "INTEGER"], ["a", "BOOLEAN"], ["A", "BOOLEAN"]>>, "b")
add_class(C)
type_check
add_attribute("d", "b", "INTEGER")
add_query("d", "A", <<["B", "D"], ["B", "D"], ["d", "C"], ["B", "INTEGER"], ["c", "D"], ["B", "BOOLEAN"]>>, "A")
conjunction
add_call_chain(<<d,a,A,A,a>>)
add_query("A", "INTEGER", <<["d", "B"], ["b", "BOOLEAN"], ["d", "b"], ["BOOLEAN", "INTEGER"], ["C", "BOOLEAN"], ["D", "c"], ["c", "BOOLEAN"], ["e", "INTEGER"], ["C", "BOOLEAN"]>>, "B")
type_check
add_query("d", "B", <<["B", "INTEGER"], ["d", "a"], ["C", "BOOLEAN"]>>, "BOOLEAN")
disjunction
equals
add_command("INTEGER", "e", <<["C", "A"], ["a", "B"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "BOOLEAN"]>>)
bool_value (true)
add_call_chain(<<a,INTEGER,c,c,c,d,B,D,A>>)
add_attribute("INTEGER", "C", "BOOLEAN")
add_attribute("B", "C", "BOOLEAN")
add_class(d)
add_class(B)
add_command("a", "d", <<["A", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "BOOLEAN"], ["INTEGER", "B"], ["e", "A"], ["D", "INTEGER"]>>)
add_command("B", "B", <<["D", "BOOLEAN"], ["B", "INTEGER"]>>)
add_call_chain(<<BOOLEAN,A,e,BOOLEAN>>)
add_command("a", "d", <<["a", "INTEGER"], ["C", "INTEGER"], ["INTEGER", "INTEGER"], ["c", "BOOLEAN"]>>)
add_query("A", "C", <<["C", "INTEGER"], ["D", "INTEGER"], ["B", "INTEGER"]>>, "a")
add_query("A", "D", <<["A", "BOOLEAN"], ["B", "a"], ["INTEGER", "INTEGER"]>>, "INTEGER")
add_call_chain(<<INTEGER,B,INTEGER,A,e,C,b,A>>)
add_call_chain(<<D,C,B,b,b,e>>)
add_call_chain(<<A,a,e,d,C>>)
add_query("A", "c", <<["B", "INTEGER"], ["a", "b"], ["BOOLEAN", "B"]>>, "c")
add_attribute("BOOLEAN", "D", "BOOLEAN")
add_command("A", "C", <<["B", "INTEGER"], ["e", "INTEGER"], ["a", "BOOLEAN"], ["e", "e"], ["b", "BOOLEAN"]>>)
add_query("e", "BOOLEAN", <<["D", "a"], ["c", "B"], ["D", "BOOLEAN"], ["D", "A"], ["A", "D"], ["e", "INTEGER"]>>, "b")
add_attribute("D", "B", "b")
add_call_chain(<<e>>)
add_call_chain(<<a>>)
add_command("d", "a", <<["c", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "A"], ["C", "BOOLEAN"], ["c", "B"]>>)
conjunction
add_attribute("C", "INTEGER", "INTEGER")
type_check
add_call_chain(<<C,C,D,BOOLEAN>>)
add_call_chain(<<a,e,C>>)
equals
greater_than
logical_negation
add_query("B", "A", <<["d", "A"], ["B", "A"]>>, "b")
add_command("C", "c", <<["BOOLEAN", "D"]>>)
logical_negation
add_class(B)
bool_value (false)
add_call_chain(<<B,e,b,INTEGER,e,C,INTEGER>>)
generate_java_code
multiplication
add_call_chain(<<D,b,d>>)
numerical_negation
modulo
multiplication
int_value (20)
bool_value (false)
numerical_negation
add_attribute("b", "d", "BOOLEAN")
bool_value (false)
add_class(A)
bool_value (false)
generate_java_code
add_attribute("c", "B", "d")
int_value (46)
add_query("d", "INTEGER", <<["e", "INTEGER"], ["C", "C"], ["d", "INTEGER"], ["B", "INTEGER"], ["A", "INTEGER"], ["A", "BOOLEAN"]>>, "e")
type_check
add_call_chain(<<d,A,B,INTEGER,A,A,b>>)
add_call_chain(<<A,B,C,b,a,d,B,INTEGER,c>>)
add_call_chain(<<D,A,d>>)
int_value (9)
type_check
add_query("d", "D", <<["a", "A"], ["B", "B"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["B", "INTEGER"], ["B", "INTEGER"], ["A", "d"], ["BOOLEAN", "d"], ["a", "BOOLEAN"]>>, "D")
int_value (8)
add_attribute("a", "b", "c")
add_query("A", "a", <<["c", "BOOLEAN"], ["e", "INTEGER"]>>, "C")
add_command("d", "C", <<["e", "INTEGER"], ["D", "INTEGER"]>>)
add_query("D", "D", <<["a", "BOOLEAN"]>>, "B")
add_class(d)
int_value (32)
numerical_negation
conjunction
add_call_chain(<<c>>)
generate_java_code
disjunction
generate_java_code
logical_negation
type_check
numerical_negation
add_attribute("B", "d", "INTEGER")
equals
add_call_chain(<<d,b,b,c,A,C,a,A,C>>)
add_class(B)
add_query("C", "A", <<["c", "BOOLEAN"], ["b", "INTEGER"], ["A", "e"], ["A", "C"], ["A", "BOOLEAN"], ["c", "A"]>>, "A")
add_query("INTEGER", "b", <<["INTEGER", "c"], ["C", "INTEGER"], ["a", "b"], ["d", "BOOLEAN"], ["d", "BOOLEAN"]>>, "B")
bool_value (false)
logical_negation
bool_value (true)
add_call_chain(<<a,c,A,B,INTEGER,c>>)
int_value (19)
add_call_chain(<<D,d>>)
add_call_chain(<<e,b,b,C>>)
add_call_chain(<<e,B,b,b,e,B>>)
add_call_chain(<<d,C>>)
modulo
addition
int_value (24)
logical_negation
add_query("C", "e", <<["INTEGER", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "BOOLEAN"]>>, "B")
add_attribute("D", "C", "INTEGER")
type_check
logical_negation
add_call_chain(<<A,b,BOOLEAN,INTEGER,BOOLEAN,D,e,d,a>>)
logical_negation
add_query("d", "C", <<["e", "BOOLEAN"]>>, "c")
add_attribute("A", "b", "INTEGER")
numerical_negation
add_query("A", "b", <<["A", "INTEGER"], ["B", "INTEGER"], ["C", "c"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "INTEGER"]>>, "C")
int_value (35)
add_command("BOOLEAN", "A", <<["c", "INTEGER"], ["e", "INTEGER"], ["C", "INTEGER"], ["BOOLEAN", "INTEGER"], ["B", "B"], ["a", "INTEGER"], ["b", "INTEGER"], ["B", "C"]>>)
add_class(e)
bool_value (true)
int_value (49)
add_call_chain(<<c,c,D>>)
bool_value (true)
generate_java_code
equals
addition
add_attribute("c", "A", "BOOLEAN")
greater_than
add_call_chain(<<B,B,C,e,INTEGER,D>>)
add_call_chain(<<D,d,INTEGER,C,C,e>>)
add_query("d", "c", <<["c", "a"], ["b", "BOOLEAN"], ["C", "BOOLEAN"], ["d", "BOOLEAN"], ["b", "INTEGER"], ["b", "e"], ["a", "BOOLEAN"], ["D", "A"], ["D", "e"]>>, "a")
generate_java_code
add_attribute("D", "A", "D")
add_attribute("a", "a", "INTEGER")
conjunction
logical_negation
bool_value (false)
logical_negation
add_call_chain(<<c,e,c,B,a,a,a,b,c>>)
add_attribute("a", "INTEGER", "D")
generate_java_code
add_call_chain(<<D,D,e,BOOLEAN,B>>)
less_than
add_call_chain(<<d,D,e,C,D,c>>)
type_check
add_call_chain(<<A,D,c>>)
add_call_chain(<<B,e>>)
add_query("A", "c", <<["B", "INTEGER"], ["e", "INTEGER"], ["C", "b"], ["B", "BOOLEAN"]>>, "c")
modulo
add_query("d", "d", <<["B", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["B", "BOOLEAN"]>>, "a")
add_command("d", "A", <<["B", "A"], ["c", "d"], ["e", "BOOLEAN"], ["a", "INTEGER"], ["c", "B"]>>)
bool_value (false)
type_check
modulo
