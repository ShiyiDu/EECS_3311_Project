greater_than
add_call_chain(<<C,d,d,B,d,A>>)
bool_value (true)
numerical_negation
add_command("d", "B", <<["e", "INTEGER"]>>)
int_value (28)
add_command("C", "A", <<["e", "b"], ["c", "BOOLEAN"], ["e", "INTEGER"], ["d", "BOOLEAN"], ["d", "b"]>>)
add_class(D)
add_query("A", "a", <<["B", "INTEGER"], ["e", "INTEGER"], ["B", "INTEGER"], ["INTEGER", "BOOLEAN"], ["C", "BOOLEAN"]>>, "e")
bool_value (false)
int_value (30)
logical_negation
add_command("D", "D", <<["C", "INTEGER"], ["b", "INTEGER"], ["B", "BOOLEAN"], ["A", "A"], ["b", "BOOLEAN"], ["b", "INTEGER"], ["c", "INTEGER"], ["a", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>)
greater_than
add_command("B", "D", <<["B", "C"], ["A", "d"], ["b", "INTEGER"], ["b", "D"], ["C", "BOOLEAN"]>>)
add_query("B", "A", <<["e", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["c", "d"], ["c", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "C"]>>, "b")
numerical_negation
add_call_chain(<<D,B,c,d,D,a,B,d>>)
conjunction
add_call_chain(<<d,c,e,b>>)
add_attribute("BOOLEAN", "a", "B")
bool_value (true)
add_attribute("B", "d", "INTEGER")
add_call_chain(<<B,B,b,BOOLEAN,a>>)
add_call_chain(<<D,B,BOOLEAN>>)
int_value (9)
add_command("D", "d", <<["B", "INTEGER"], ["a", "INTEGER"], ["e", "A"], ["C", "d"]>>)
add_attribute("INTEGER", "D", "BOOLEAN")
generate_java_code
add_attribute("INTEGER", "D", "C")
int_value (18)
add_attribute("A", "D", "B")
add_attribute("C", "d", "BOOLEAN")
generate_java_code
add_query("D", "D", <<["b", "INTEGER"]>>, "B")
add_call_chain(<<c,e,INTEGER,d,A,D,D,A>>)
logical_negation
logical_negation
add_command("a", "D", <<["B", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["c", "BOOLEAN"], ["e", "INTEGER"], ["A", "INTEGER"]>>)
type_check
add_attribute("b", "D", "C")
int_value (35)
logical_negation
bool_value (true)
add_query("B", "D", <<["B", "e"], ["b", "B"], ["a", "C"], ["C", "D"]>>, "b")
multiplication
less_than
bool_value (true)
int_value (28)
greater_than
multiplication
add_class(b)
add_call_chain(<<a,e,C,B,b,c,a,a,e>>)
int_value (33)
numerical_negation
greater_than
add_class(B)
add_call_chain(<<A,e,C,c,D,b,D>>)
greater_than
add_command("e", "A", <<["d", "BOOLEAN"]>>)
add_query("D", "c", <<["A", "BOOLEAN"], ["B", "B"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["B", "INTEGER"], ["INTEGER", "b"], ["A", "BOOLEAN"], ["d", "BOOLEAN"], ["c", "BOOLEAN"]>>, "B")
add_query("e", "e", <<["C", "INTEGER"], ["a", "BOOLEAN"], ["INTEGER", "INTEGER"], ["BOOLEAN", "INTEGER"], ["e", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "D"]>>, "B")
numerical_negation
add_attribute("C", "e", "D")
add_call_chain(<<INTEGER,e>>)
add_call_chain(<<D,B,e,D,c,C,c,d,a>>)
add_call_chain(<<e>>)
equals
add_call_chain(<<C,e>>)
add_command("a", "B", <<["A", "B"], ["d", "e"], ["e", "BOOLEAN"], ["C", "B"], ["B", "INTEGER"], ["INTEGER", "c"], ["a", "INTEGER"], ["BOOLEAN", "INTEGER"]>>)
add_call_chain(<<D>>)
add_command("A", "INTEGER", <<["C", "C"]>>)
logical_negation
less_than
add_command("a", "D", <<["c", "INTEGER"], ["B", "INTEGER"], ["c", "INTEGER"], ["c", "INTEGER"], ["b", "D"]>>)
add_command("BOOLEAN", "C", <<["b", "BOOLEAN"], ["A", "A"], ["b", "A"], ["D", "BOOLEAN"], ["C", "D"], ["A", "B"], ["e", "BOOLEAN"]>>)
add_command("B", "b", <<["A", "e"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "D"]>>)
add_call_chain(<<d,b,c,A,C,A,D,BOOLEAN,C>>)
add_call_chain(<<INTEGER,D,c,C,d>>)
add_command("b", "b", <<["b", "c"], ["e", "INTEGER"], ["C", "INTEGER"], ["A", "A"], ["c", "a"], ["D", "D"], ["e", "BOOLEAN"], ["A", "A"], ["B", "BOOLEAN"]>>)
generate_java_code
add_class(A)
less_than
add_attribute("B", "d", "d")
add_command("e", "d", <<["b", "INTEGER"], ["D", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["d", "BOOLEAN"]>>)
int_value (36)
add_call_chain(<<c,D,c,C,d,a,D,d,e>>)
disjunction
bool_value (false)
logical_negation
conjunction
add_attribute("D", "d", "BOOLEAN")
int_value (28)
add_command("d", "A", <<["d", "INTEGER"]>>)
add_attribute("e", "D", "BOOLEAN")
add_attribute("b", "INTEGER", "BOOLEAN")
disjunction
add_command("A", "a", <<["a", "INTEGER"], ["INTEGER", "D"], ["c", "INTEGER"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["B", "C"], ["C", "INTEGER"], ["a", "D"], ["A", "INTEGER"]>>)
add_attribute("D", "b", "INTEGER")
add_command("D", "d", <<["c", "BOOLEAN"], ["e", "a"], ["e", "BOOLEAN"], ["b", "b"], ["D", "d"], ["e", "a"], ["INTEGER", "c"], ["b", "INTEGER"], ["D", "INTEGER"]>>)
logical_negation
add_command("D", "A", <<["B", "INTEGER"], ["a", "BOOLEAN"], ["c", "INTEGER"], ["A", "INTEGER"], ["b", "e"], ["b", "BOOLEAN"], ["a", "INTEGER"], ["a", "d"], ["B", "BOOLEAN"]>>)
add_class(BOOLEAN)
modulo
add_class(C)
bool_value (false)
logical_negation
add_query("C", "e", <<["e", "INTEGER"], ["INTEGER", "INTEGER"], ["e", "INTEGER"], ["INTEGER", "BOOLEAN"], ["C", "INTEGER"], ["c", "INTEGER"]>>, "c")
add_command("C", "a", <<["BOOLEAN", "BOOLEAN"], ["C", "C"], ["b", "BOOLEAN"]>>)
add_call_chain(<<e>>)
multiplication
add_command("a", "c", <<["B", "c"]>>)
add_call_chain(<<C,A,D>>)
add_call_chain(<<a,e,e,a,BOOLEAN,B>>)
add_query("b", "BOOLEAN", <<["BOOLEAN", "BOOLEAN"], ["e", "INTEGER"], ["b", "INTEGER"], ["B", "INTEGER"], ["D", "A"], ["BOOLEAN", "c"], ["C", "BOOLEAN"], ["B", "BOOLEAN"]>>, "e")
numerical_negation
add_command("B", "D", <<["A", "INTEGER"], ["B", "BOOLEAN"], ["b", "INTEGER"]>>)
add_class(b)
add_class(A)
add_call_chain(<<e,BOOLEAN,e,C,B,C,d,d,A>>)
modulo
add_command("B", "C", <<["d", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "INTEGER"], ["c", "B"], ["BOOLEAN", "A"]>>)
add_command("a", "C", <<["C", "e"], ["e", "INTEGER"], ["D", "INTEGER"], ["B", "INTEGER"], ["D", "c"]>>)
logical_negation
bool_value (false)
int_value (43)
greater_than
add_command("A", "b", <<["b", "C"], ["C", "BOOLEAN"], ["C", "A"], ["B", "BOOLEAN"]>>)
addition
add_call_chain(<<D,A,b,BOOLEAN>>)
add_call_chain(<<A,INTEGER,d,d>>)
numerical_negation
int_value (41)
add_command("d", "d", <<["e", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "INTEGER"], ["C", "INTEGER"], ["a", "e"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>)
add_call_chain(<<b,B,c,a,A>>)
logical_negation
add_attribute("A", "B", "INTEGER")
conjunction
quotient
add_call_chain(<<BOOLEAN,d,d,A,c,a,a,d,D>>)
int_value (5)
add_query("C", "e", <<["A", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["d", "BOOLEAN"]>>, "C")
add_call_chain(<<b,BOOLEAN,A>>)
add_call_chain(<<C>>)
generate_java_code
int_value (42)
add_query("c", "C", <<["INTEGER", "C"], ["a", "INTEGER"], ["e", "INTEGER"], ["e", "A"], ["C", "BOOLEAN"]>>, "d")
less_than
logical_negation
add_query("INTEGER", "c", <<["c", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>, "e")
greater_than
logical_negation
int_value (10)
less_than
add_call_chain(<<C,BOOLEAN>>)
add_command("A", "e", <<["INTEGER", "INTEGER"]>>)
equals
add_command("BOOLEAN", "B", <<["C", "BOOLEAN"], ["B", "INTEGER"], ["c", "INTEGER"]>>)
add_attribute("INTEGER", "a", "INTEGER")
bool_value (true)
generate_java_code
type_check
add_class(B)
add_attribute("A", "D", "INTEGER")
type_check
add_call_chain(<<INTEGER,C,c,B,a,A,b>>)
add_attribute("c", "D", "B")
int_value (13)
add_call_chain(<<B,B>>)
int_value (5)
numerical_negation
type_check
bool_value (true)
add_call_chain(<<B,b,B,BOOLEAN,B,a>>)
add_command("B", "b", <<["d", "c"], ["a", "BOOLEAN"], ["B", "BOOLEAN"], ["INTEGER", "INTEGER"], ["d", "B"]>>)
logical_negation
add_call_chain(<<e,INTEGER,C,b,D,C,BOOLEAN,b>>)
conjunction
add_query("C", "c", <<["INTEGER", "INTEGER"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "INTEGER"], ["A", "a"], ["B", "d"]>>, "A")
disjunction
type_check
add_call_chain(<<b,C,C,INTEGER,D>>)
int_value (1)
add_call_chain(<<C,b,INTEGER,e,c,A,e,c>>)
add_query("C", "a", <<["B", "A"], ["C", "B"], ["d", "BOOLEAN"], ["INTEGER", "INTEGER"], ["INTEGER", "BOOLEAN"], ["D", "INTEGER"]>>, "C")
add_command("b", "b", <<["A", "BOOLEAN"], ["A", "INTEGER"]>>)
add_command("B", "D", <<["d", "d"], ["c", "a"], ["d", "BOOLEAN"], ["B", "INTEGER"], ["b", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["e", "BOOLEAN"]>>)
bool_value (true)
add_query("B", "INTEGER", <<["A", "BOOLEAN"], ["e", "INTEGER"], ["INTEGER", "INTEGER"], ["D", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "c"], ["A", "c"], ["c", "D"]>>, "D")
add_class(D)
type_check
numerical_negation
greater_than
generate_java_code
int_value (28)
add_query("BOOLEAN", "B", <<["a", "INTEGER"], ["B", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["a", "INTEGER"]>>, "b")
int_value (49)
add_call_chain(<<BOOLEAN>>)
multiplication
conjunction
modulo
add_query("A", "c", <<["c", "INTEGER"], ["a", "INTEGER"], ["INTEGER", "INTEGER"], ["C", "INTEGER"], ["b", "BOOLEAN"]>>, "e")
add_command("b", "b", <<["BOOLEAN", "INTEGER"], ["d", "BOOLEAN"], ["d", "INTEGER"]>>)
type_check
add_query("C", "A", <<["e", "BOOLEAN"], ["b", "INTEGER"], ["B", "INTEGER"], ["b", "B"], ["B", "BOOLEAN"], ["C", "B"]>>, "d")
conjunction
add_query("b", "c", <<["e", "BOOLEAN"], ["B", "a"], ["e", "BOOLEAN"], ["d", "A"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "e"]>>, "e")
bool_value (true)
add_call_chain(<<INTEGER,c,A,C,C>>)
add_query("a", "e", <<["A", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "a"], ["D", "a"], ["INTEGER", "C"]>>, "a")
add_attribute("INTEGER", "A", "INTEGER")
add_command("INTEGER", "A", <<["c", "A"], ["c", "BOOLEAN"], ["d", "c"], ["C", "a"]>>)
generate_java_code
numerical_negation
bool_value (true)
