type_check
numerical_negation
logical_negation
int_value (31)
add_command("C", "b", <<["c", "BOOLEAN"], ["C", "C"], ["INTEGER", "a"], ["BOOLEAN", "BOOLEAN"], ["e", "a"]>>)
add_query("d", "c", <<["d", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["e", "INTEGER"]>>, "e")
disjunction
conjunction
disjunction
add_query("d", "d", <<["e", "a"], ["c", "BOOLEAN"], ["c", "INTEGER"], ["A", "D"], ["C", "INTEGER"]>>, "e")
add_call_chain(<<a,BOOLEAN,c,b,B,INTEGER,INTEGER,D,D>>)
add_attribute("a", "b", "A")
add_call_chain(<<b,BOOLEAN,D,C,d,B,A,e,d>>)
conjunction
logical_negation
bool_value (true)
add_command("A", "D", <<["BOOLEAN", "C"], ["D", "INTEGER"], ["C", "d"], ["D", "B"], ["d", "INTEGER"]>>)
add_query("B", "INTEGER", <<["e", "b"]>>, "INTEGER")
type_check
logical_negation
generate_java_code
add_query("b", "b", <<["d", "BOOLEAN"], ["D", "INTEGER"], ["D", "C"], ["D", "BOOLEAN"], ["D", "C"], ["C", "e"], ["e", "BOOLEAN"], ["C", "INTEGER"]>>, "A")
add_call_chain(<<A,B,D,D,c,C,e>>)
equals
numerical_negation
numerical_negation
add_attribute("e", "e", "BOOLEAN")
bool_value (true)
add_call_chain(<<c,c,e,BOOLEAN,A,B,BOOLEAN,INTEGER>>)
logical_negation
add_class(b)
subtraction
add_call_chain(<<BOOLEAN,C,a,d>>)
add_call_chain(<<B,B,D>>)
logical_negation
logical_negation
type_check
less_than
add_command("C", "INTEGER", <<["c", "BOOLEAN"], ["a", "A"], ["C", "d"], ["e", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "e"], ["e", "BOOLEAN"]>>)
generate_java_code
generate_java_code
greater_than
numerical_negation
bool_value (false)
add_call_chain(<<D,c,B,INTEGER,B,INTEGER>>)
add_command("B", "B", <<["b", "BOOLEAN"], ["d", "BOOLEAN"], ["BOOLEAN", "b"], ["C", "BOOLEAN"], ["c", "a"], ["e", "INTEGER"], ["C", "INTEGER"], ["A", "INTEGER"]>>)
add_call_chain(<<e,C,B,B,d,A,a,d,d>>)
add_call_chain(<<d,C,d,A,C,a,a>>)
int_value (26)
greater_than
add_call_chain(<<C,d,C,c,a,A,B,B>>)
conjunction
add_call_chain(<<A,b>>)
add_call_chain(<<A,b,B,a>>)
add_attribute("A", "C", "BOOLEAN")
greater_than
numerical_negation
add_attribute("D", "b", "INTEGER")
generate_java_code
bool_value (true)
add_query("d", "e", <<["a", "BOOLEAN"], ["B", "C"], ["b", "a"]>>, "a")
add_command("d", "INTEGER", <<["A", "INTEGER"], ["d", "BOOLEAN"], ["D", "INTEGER"], ["c", "INTEGER"]>>)
logical_negation
bool_value (false)
add_query("c", "D", <<["e", "BOOLEAN"], ["A", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["B", "INTEGER"], ["D", "BOOLEAN"]>>, "C")
add_command("C", "C", <<["e", "BOOLEAN"], ["D", "INTEGER"], ["D", "INTEGER"]>>)
add_command("e", "C", <<["e", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "BOOLEAN"]>>)
add_query("D", "INTEGER", <<["C", "e"], ["INTEGER", "BOOLEAN"], ["e", "d"]>>, "C")
numerical_negation
add_command("INTEGER", "a", <<["B", "INTEGER"], ["C", "BOOLEAN"], ["B", "A"], ["D", "BOOLEAN"], ["d", "d"], ["c", "d"], ["D", "BOOLEAN"], ["c", "INTEGER"], ["C", "INTEGER"]>>)
bool_value (false)
numerical_negation
add_call_chain(<<d,a,INTEGER,d,b>>)
greater_than
bool_value (true)
int_value (3)
add_query("c", "BOOLEAN", <<["a", "INTEGER"]>>, "b")
add_call_chain(<<b,b,d,d,d,INTEGER,A,INTEGER>>)
add_query("b", "d", <<["INTEGER", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["d", "BOOLEAN"], ["B", "B"], ["C", "INTEGER"], ["d", "BOOLEAN"]>>, "C")
add_attribute("D", "INTEGER", "INTEGER")
add_call_chain(<<D,A,a,A,B,b>>)
add_command("INTEGER", "D", <<["d", "a"], ["a", "INTEGER"]>>)
add_call_chain(<<D>>)
conjunction
add_query("a", "C", <<["e", "e"], ["e", "A"], ["b", "C"], ["b", "d"], ["A", "INTEGER"], ["B", "INTEGER"], ["e", "BOOLEAN"]>>, "e")
add_call_chain(<<e,d,e,b>>)
generate_java_code
add_attribute("A", "INTEGER", "a")
add_command("a", "A", <<["c", "INTEGER"]>>)
type_check
add_command("INTEGER", "c", <<["d", "INTEGER"], ["b", "INTEGER"], ["D", "A"], ["D", "BOOLEAN"], ["INTEGER", "D"], ["BOOLEAN", "C"]>>)
add_call_chain(<<c,A,d,a,C,d,d,C>>)
numerical_negation
add_attribute("d", "A", "INTEGER")
add_query("A", "D", <<["e", "BOOLEAN"], ["C", "INTEGER"], ["BOOLEAN", "INTEGER"], ["b", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["BOOLEAN", "A"], ["a", "INTEGER"]>>, "b")
logical_negation
type_check
modulo
add_call_chain(<<a,D,B,A,c,C,B,e,B>>)
logical_negation
conjunction
add_query("a", "D", <<["a", "BOOLEAN"], ["B", "C"], ["A", "INTEGER"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "INTEGER"]>>, "INTEGER")
add_class(A)
int_value (5)
generate_java_code
add_command("c", "a", <<["D", "INTEGER"], ["a", "INTEGER"], ["A", "BOOLEAN"], ["c", "BOOLEAN"]>>)
add_class(c)
bool_value (true)
type_check
add_command("e", "D", <<["a", "b"], ["BOOLEAN", "INTEGER"], ["D", "BOOLEAN"], ["a", "BOOLEAN"]>>)
int_value (30)
bool_value (true)
add_call_chain(<<B,D>>)
add_command("BOOLEAN", "c", <<["D", "BOOLEAN"], ["e", "D"], ["c", "e"], ["D", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "INTEGER"], ["D", "BOOLEAN"], ["a", "INTEGER"]>>)
add_attribute("C", "A", "INTEGER")
less_than
logical_negation
add_command("e", "A", <<["A", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "d"], ["INTEGER", "INTEGER"], ["d", "INTEGER"], ["d", "B"], ["C", "INTEGER"]>>)
bool_value (true)
bool_value (false)
add_call_chain(<<d,BOOLEAN,e,B>>)
add_attribute("B", "A", "d")
add_query("d", "C", <<["D", "A"], ["A", "INTEGER"], ["A", "INTEGER"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["e", "INTEGER"], ["D", "BOOLEAN"]>>, "A")
bool_value (true)
add_class(D)
add_call_chain(<<B,C,B>>)
add_class(a)
subtraction
numerical_negation
logical_negation
add_class(B)
int_value (14)
add_query("D", "BOOLEAN", <<["A", "d"], ["a", "C"], ["A", "INTEGER"], ["a", "INTEGER"], ["e", "e"], ["A", "BOOLEAN"]>>, "d")
generate_java_code
type_check
numerical_negation
add_call_chain(<<B,A,a>>)
greater_than
type_check
add_class(B)
int_value (45)
type_check
add_call_chain(<<D,C,e,c,D,A,b,b,a>>)
add_call_chain(<<d,D,e,d,e,D,C,a>>)
add_query("BOOLEAN", "D", <<["D", "INTEGER"], ["INTEGER", "INTEGER"], ["B", "BOOLEAN"], ["a", "BOOLEAN"]>>, "INTEGER")
add_call_chain(<<b,C,B,C,e>>)
conjunction
bool_value (false)
type_check
add_attribute("D", "INTEGER", "INTEGER")
logical_negation
add_attribute("d", "A", "INTEGER")
add_query("A", "c", <<["B", "INTEGER"]>>, "a")
add_query("BOOLEAN", "d", <<["BOOLEAN", "B"], ["c", "INTEGER"]>>, "b")
type_check
add_command("INTEGER", "C", <<["C", "INTEGER"]>>)
int_value (14)
logical_negation
greater_than
add_attribute("BOOLEAN", "A", "INTEGER")
add_command("A", "a", <<["a", "INTEGER"], ["D", "BOOLEAN"], ["C", "INTEGER"]>>)
add_query("D", "D", <<["B", "A"], ["BOOLEAN", "BOOLEAN"], ["C", "INTEGER"], ["c", "INTEGER"]>>, "a")
less_than
equals
add_class(a)
add_class(a)
logical_negation
generate_java_code
generate_java_code
add_query("e", "D", <<["a", "BOOLEAN"], ["D", "BOOLEAN"], ["a", "C"], ["INTEGER", "BOOLEAN"]>>, "d")
add_command("b", "C", <<["D", "INTEGER"], ["b", "INTEGER"]>>)
add_command("A", "D", <<["c", "B"]>>)
add_call_chain(<<a,b>>)
generate_java_code
type_check
add_command("B", "c", <<["d", "INTEGER"]>>)
int_value (45)
add_attribute("A", "B", "BOOLEAN")
add_class(d)
type_check
add_command("a", "B", <<["BOOLEAN", "BOOLEAN"], ["d", "INTEGER"], ["c", "d"], ["b", "INTEGER"]>>)
bool_value (false)
add_class(c)
bool_value (true)
add_query("C", "D", <<["e", "INTEGER"], ["A", "C"], ["e", "D"], ["c", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["d", "BOOLEAN"]>>, "a")
generate_java_code
add_call_chain(<<B,D,BOOLEAN,a,c,D,a,B>>)
add_call_chain(<<e,b,c>>)
add_attribute("A", "a", "BOOLEAN")
add_command("A", "BOOLEAN", <<["B", "INTEGER"]>>)
add_call_chain(<<b,D,D,A>>)
add_call_chain(<<D,b,D,C>>)
add_class(b)
add_query("c", "B", <<["c", "b"], ["A", "D"], ["B", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["a", "INTEGER"], ["e", "BOOLEAN"], ["c", "BOOLEAN"], ["INTEGER", "D"], ["D", "BOOLEAN"]>>, "e")
logical_negation
quotient
bool_value (false)
less_than
add_command("a", "A", <<["a", "INTEGER"], ["c", "INTEGER"], ["C", "INTEGER"], ["b", "BOOLEAN"], ["c", "C"], ["D", "BOOLEAN"], ["d", "a"], ["a", "BOOLEAN"], ["b", "a"]>>)
numerical_negation
int_value (15)
conjunction
int_value (3)
logical_negation
add_command("D", "INTEGER", <<["c", "INTEGER"], ["b", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "BOOLEAN"]>>)
int_value (5)
int_value (39)
add_call_chain(<<D,d,B,BOOLEAN,BOOLEAN,c,d,a>>)
bool_value (true)
type_check
add_query("d", "e", <<["a", "INTEGER"], ["c", "INTEGER"], ["A", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "D"], ["a", "a"], ["BOOLEAN", "BOOLEAN"], ["D", "BOOLEAN"]>>, "c")
int_value (30)
add_query("BOOLEAN", "D", <<["D", "INTEGER"], ["C", "BOOLEAN"]>>, "D")
bool_value (false)
int_value (4)
add_class(B)
add_call_chain(<<d,c,b,a,c,B,B>>)
add_class(B)
add_command("b", "B", <<["a", "BOOLEAN"], ["a", "INTEGER"]>>)
logical_negation
add_class(D)
add_call_chain(<<a,B>>)
add_command("B", "b", <<["B", "INTEGER"], ["B", "INTEGER"], ["D", "INTEGER"]>>)
add_query("C", "d", <<["c", "INTEGER"], ["a", "BOOLEAN"], ["D", "INTEGER"], ["D", "INTEGER"], ["B", "BOOLEAN"]>>, "d")
add_query("D", "e", <<["b", "B"], ["B", "INTEGER"], ["D", "INTEGER"]>>, "e")
addition
add_attribute("a", "B", "INTEGER")
add_call_chain(<<b,B,e,e>>)
add_query("INTEGER", "d", <<["C", "e"], ["INTEGER", "INTEGER"], ["D", "INTEGER"], ["c", "d"], ["b", "BOOLEAN"], ["INTEGER", "C"], ["D", "D"]>>, "B")
add_class(B)
numerical_negation
add_attribute("C", "c", "INTEGER")
add_call_chain(<<b,d,c,C,d,D,A>>)
add_attribute("A", "e", "d")
logical_negation
int_value (8)
add_query("c", "B", <<["d", "INTEGER"], ["B", "BOOLEAN"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["A", "A"], ["B", "INTEGER"], ["C", "INTEGER"], ["a", "BOOLEAN"], ["d", "B"]>>, "C")
add_attribute("A", "C", "BOOLEAN")
disjunction
generate_java_code
int_value (10)
modulo
bool_value (false)
quotient
int_value (15)
add_attribute("b", "b", "a")
add_query("d", "e", <<["B", "BOOLEAN"], ["b", "c"], ["B", "a"], ["BOOLEAN", "a"]>>, "e")
modulo
add_attribute("e", "D", "INTEGER")
add_attribute("d", "b", "BOOLEAN")
add_call_chain(<<d,e,C,D>>)
int_value (9)
logical_negation
