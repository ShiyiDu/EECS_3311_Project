add_command("e", "a", <<["B", "BOOLEAN"]>>)
add_call_chain(<<c,D,e>>)
type_check
numerical_negation
modulo
add_call_chain(<<BOOLEAN,b,INTEGER,D,A,c,b>>)
add_query("e", "e", <<["BOOLEAN", "b"], ["b", "B"], ["A", "INTEGER"], ["BOOLEAN", "INTEGER"], ["A", "C"], ["b", "BOOLEAN"], ["A", "A"], ["A", "INTEGER"]>>, "c")
add_call_chain(<<C,C,e,a,C,A,b,d,A>>)
int_value (20)
numerical_negation
int_value (16)
logical_negation
numerical_negation
int_value (37)
disjunction
int_value (31)
disjunction
generate_java_code
add_class(C)
int_value (26)
type_check
bool_value (false)
add_class(A)
add_query("d", "B", <<["INTEGER", "BOOLEAN"], ["b", "e"], ["e", "C"], ["D", "BOOLEAN"], ["c", "B"], ["B", "BOOLEAN"]>>, "B")
add_call_chain(<<D,e,A,b,B,c>>)
logical_negation
generate_java_code
add_call_chain(<<INTEGER,A>>)
logical_negation
int_value (25)
disjunction
add_call_chain(<<C,d,c,INTEGER,D,D>>)
add_call_chain(<<c,B>>)
logical_negation
add_query("D", "BOOLEAN", <<["A", "B"], ["e", "BOOLEAN"], ["B", "INTEGER"], ["d", "INTEGER"], ["c", "a"], ["b", "BOOLEAN"], ["D", "INTEGER"]>>, "A")
logical_negation
add_query("b", "C", <<["a", "INTEGER"], ["a", "BOOLEAN"], ["a", "B"], ["b", "d"], ["C", "INTEGER"]>>, "d")
add_command("INTEGER", "b", <<["A", "INTEGER"], ["e", "BOOLEAN"], ["b", "INTEGER"]>>)
add_attribute("D", "a", "e")
add_call_chain(<<B,C>>)
bool_value (true)
add_call_chain(<<d,C,A,A,B,A,C,A>>)
logical_negation
add_attribute("c", "a", "INTEGER")
add_call_chain(<<BOOLEAN,D,D,b,A,B,b,d,a>>)
less_than
numerical_negation
int_value (6)
conjunction
add_attribute("d", "B", "d")
type_check
int_value (39)
generate_java_code
generate_java_code
add_call_chain(<<a,c>>)
add_query("C", "D", <<["D", "INTEGER"], ["A", "B"], ["C", "INTEGER"], ["d", "D"], ["d", "BOOLEAN"], ["A", "D"], ["c", "A"], ["c", "BOOLEAN"]>>, "e")
subtraction
add_call_chain(<<d,C,D,b,a>>)
add_call_chain(<<C,b,e,a,B,C>>)
add_call_chain(<<INTEGER,BOOLEAN,d,B,D,C>>)
logical_negation
bool_value (false)
add_attribute("INTEGER", "C", "BOOLEAN")
modulo
add_command("e", "e", <<["INTEGER", "INTEGER"], ["d", "A"], ["D", "BOOLEAN"], ["a", "a"], ["BOOLEAN", "D"], ["b", "INTEGER"], ["B", "D"], ["a", "INTEGER"], ["C", "BOOLEAN"]>>)
int_value (25)
add_call_chain(<<d,a,INTEGER,e,A>>)
add_query("B", "A", <<["b", "BOOLEAN"], ["d", "INTEGER"], ["INTEGER", "BOOLEAN"], ["C", "e"], ["D", "d"], ["b", "B"]>>, "e")
add_class(e)
conjunction
bool_value (false)
add_command("A", "D", <<["d", "INTEGER"]>>)
int_value (47)
bool_value (false)
int_value (7)
bool_value (true)
add_command("C", "c", <<["B", "BOOLEAN"]>>)
add_command("B", "D", <<["D", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "e"], ["B", "INTEGER"], ["B", "BOOLEAN"], ["A", "b"], ["a", "INTEGER"]>>)
add_command("B", "C", <<["b", "INTEGER"], ["D", "INTEGER"], ["B", "a"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "d"], ["B", "INTEGER"]>>)
disjunction
add_query("A", "C", <<["A", "INTEGER"], ["e", "INTEGER"]>>, "b")
add_query("c", "e", <<["INTEGER", "INTEGER"], ["c", "BOOLEAN"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["C", "BOOLEAN"]>>, "A")
add_query("c", "A", <<["B", "d"], ["A", "C"], ["D", "BOOLEAN"], ["D", "d"], ["C", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "INTEGER"]>>, "e")
add_command("d", "INTEGER", <<["C", "A"], ["d", "INTEGER"], ["C", "BOOLEAN"], ["c", "B"], ["C", "d"], ["b", "BOOLEAN"], ["B", "B"]>>)
modulo
conjunction
type_check
bool_value (true)
add_attribute("B", "BOOLEAN", "BOOLEAN")
add_attribute("C", "d", "D")
generate_java_code
disjunction
numerical_negation
logical_negation
bool_value (false)
add_command("A", "b", <<["b", "BOOLEAN"], ["A", "A"], ["d", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["c", "d"], ["B", "INTEGER"]>>)
bool_value (false)
add_query("B", "A", <<["d", "A"], ["A", "c"], ["a", "INTEGER"], ["B", "INTEGER"], ["e", "BOOLEAN"], ["c", "INTEGER"]>>, "C")
add_class(c)
add_attribute("D", "a", "a")
add_class(e)
add_call_chain(<<d,c,B,D,d,B,B>>)
add_attribute("A", "e", "INTEGER")
type_check
add_attribute("D", "D", "a")
greater_than
conjunction
add_call_chain(<<a,C,B,B,B,C>>)
add_call_chain(<<A,B,C,c,a,D>>)
add_query("B", "a", <<["b", "INTEGER"], ["c", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "a"], ["c", "BOOLEAN"]>>, "c")
add_call_chain(<<e,C,b,e,b,A>>)
add_call_chain(<<B,d,A,a,B,c,a>>)
add_attribute("a", "d", "B")
add_query("d", "d", <<["C", "a"], ["d", "BOOLEAN"], ["B", "INTEGER"], ["a", "INTEGER"], ["BOOLEAN", "INTEGER"], ["A", "D"]>>, "c")
add_command("C", "INTEGER", <<["e", "INTEGER"], ["C", "INTEGER"], ["C", "INTEGER"], ["D", "e"], ["BOOLEAN", "INTEGER"], ["INTEGER", "BOOLEAN"], ["c", "BOOLEAN"], ["c", "D"]>>)
add_class(d)
add_command("C", "b", <<["b", "INTEGER"], ["A", "INTEGER"], ["b", "INTEGER"], ["e", "INTEGER"], ["d", "c"], ["A", "BOOLEAN"], ["a", "A"], ["c", "BOOLEAN"], ["D", "INTEGER"]>>)
subtraction
numerical_negation
numerical_negation
numerical_negation
add_command("A", "INTEGER", <<["b", "D"], ["B", "BOOLEAN"], ["BOOLEAN", "c"], ["B", "BOOLEAN"], ["b", "A"], ["d", "BOOLEAN"]>>)
numerical_negation
numerical_negation
add_query("a", "C", <<["d", "INTEGER"], ["B", "INTEGER"], ["D", "INTEGER"], ["e", "BOOLEAN"], ["b", "BOOLEAN"], ["e", "c"], ["b", "INTEGER"], ["D", "INTEGER"], ["a", "D"]>>, "BOOLEAN")
add_query("C", "C", <<["c", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "d"], ["a", "A"]>>, "c")
add_attribute("INTEGER", "c", "BOOLEAN")
add_class(C)
add_call_chain(<<A,a,B,d,a,B>>)
add_call_chain(<<A,D>>)
int_value (18)
add_attribute("c", "D", "BOOLEAN")
add_call_chain(<<A,C,d,c,D>>)
int_value (11)
generate_java_code
add_attribute("a", "B", "A")
int_value (39)
conjunction
conjunction
logical_negation
add_call_chain(<<e,A,d,B,D,BOOLEAN,C,C>>)
add_call_chain(<<C,B,d,d,A,b,C>>)
add_call_chain(<<b,A,A>>)
int_value (28)
int_value (42)
addition
add_command("b", "b", <<["a", "a"]>>)
add_class(D)
addition
add_query("e", "D", <<["B", "INTEGER"], ["B", "INTEGER"]>>, "C")
logical_negation
add_query("b", "INTEGER", <<["c", "B"], ["A", "BOOLEAN"], ["a", "D"], ["C", "INTEGER"], ["C", "e"], ["e", "C"], ["A", "B"]>>, "D")
add_attribute("C", "d", "BOOLEAN")
bool_value (true)
add_query("b", "BOOLEAN", <<["b", "A"], ["e", "C"], ["C", "B"], ["C", "BOOLEAN"], ["d", "INTEGER"], ["a", "INTEGER"], ["C", "D"], ["b", "INTEGER"]>>, "b")
add_command("B", "B", <<["d", "D"], ["B", "BOOLEAN"], ["d", "A"]>>)
addition
multiplication
add_class(b)
add_call_chain(<<C>>)
greater_than
add_class(b)
generate_java_code
bool_value (false)
add_call_chain(<<d,a,d,A,B,c>>)
add_call_chain(<<e,A,b,e,D>>)
bool_value (true)
add_attribute("e", "D", "A")
add_attribute("a", "a", "INTEGER")
add_command("D", "c", <<["c", "BOOLEAN"], ["e", "INTEGER"], ["C", "INTEGER"], ["a", "INTEGER"], ["D", "a"], ["c", "BOOLEAN"], ["d", "INTEGER"]>>)
add_query("B", "b", <<["D", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "B"], ["BOOLEAN", "A"]>>, "BOOLEAN")
add_command("D", "e", <<["a", "D"], ["D", "INTEGER"], ["b", "BOOLEAN"], ["c", "BOOLEAN"], ["c", "BOOLEAN"], ["INTEGER", "INTEGER"], ["e", "INTEGER"]>>)
numerical_negation
add_command("d", "c", <<["c", "INTEGER"], ["a", "INTEGER"]>>)
add_query("D", "b", <<["e", "INTEGER"], ["A", "INTEGER"], ["b", "BOOLEAN"], ["C", "b"], ["d", "BOOLEAN"], ["c", "BOOLEAN"]>>, "D")
add_attribute("INTEGER", "e", "INTEGER")
add_attribute("A", "b", "A")
add_query("B", "B", <<["e", "BOOLEAN"], ["B", "INTEGER"], ["B", "INTEGER"], ["b", "BOOLEAN"], ["A", "INTEGER"], ["INTEGER", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "D"], ["C", "INTEGER"]>>, "c")
logical_negation
int_value (35)
add_query("b", "b", <<["c", "b"], ["b", "c"], ["A", "INTEGER"]>>, "C")
add_command("a", "B", <<["d", "BOOLEAN"], ["A", "BOOLEAN"]>>)
add_query("C", "D", <<["b", "INTEGER"], ["INTEGER", "C"], ["d", "a"], ["d", "BOOLEAN"], ["C", "BOOLEAN"], ["d", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["D", "BOOLEAN"]>>, "e")
bool_value (true)
add_query("b", "b", <<["C", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "a"], ["a", "INTEGER"], ["A", "INTEGER"], ["INTEGER", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "c"]>>, "b")
int_value (25)
subtraction
int_value (40)
add_query("A", "d", <<["a", "INTEGER"], ["D", "INTEGER"], ["e", "d"], ["a", "INTEGER"], ["D", "INTEGER"], ["C", "BOOLEAN"]>>, "A")
add_call_chain(<<A>>)
int_value (37)
add_attribute("INTEGER", "C", "INTEGER")
less_than
equals
add_query("A", "BOOLEAN", <<["b", "INTEGER"], ["C", "INTEGER"], ["A", "B"], ["A", "BOOLEAN"], ["a", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["B", "INTEGER"]>>, "a")
disjunction
add_call_chain(<<b,e,c,c,D,d,D,A,a>>)
bool_value (true)
add_query("INTEGER", "b", <<["D", "INTEGER"], ["D", "BOOLEAN"], ["b", "b"], ["BOOLEAN", "BOOLEAN"]>>, "C")
add_attribute("B", "e", "INTEGER")
bool_value (true)
add_command("b", "d", <<["INTEGER", "C"]>>)
add_query("A", "INTEGER", <<["D", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["D", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["C", "D"], ["C", "BOOLEAN"], ["e", "BOOLEAN"], ["INTEGER", "c"], ["d", "INTEGER"]>>, "e")
add_call_chain(<<B,B,A,A,BOOLEAN>>)
bool_value (false)
bool_value (false)
disjunction
equals
conjunction
add_call_chain(<<d,B,B,d,a,e,d,D>>)
add_query("a", "b", <<["BOOLEAN", "BOOLEAN"], ["D", "B"], ["a", "INTEGER"]>>, "A")
add_call_chain(<<d,a,INTEGER,c>>)
numerical_negation
type_check
type_check
addition
add_call_chain(<<d,c>>)
