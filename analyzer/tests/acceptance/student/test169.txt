add_query("B", "d", <<["B", "INTEGER"], ["b", "INTEGER"], ["a", "a"], ["D", "INTEGER"], ["b", "BOOLEAN"]>>, "c")
multiplication
add_command("B", "a", <<["B", "BOOLEAN"], ["b", "INTEGER"], ["A", "INTEGER"], ["B", "INTEGER"], ["INTEGER", "BOOLEAN"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["d", "INTEGER"]>>)
add_call_chain(<<e,d,b,b,e,BOOLEAN>>)
add_call_chain(<<C,b>>)
generate_java_code
logical_negation
add_attribute("e", "C", "INTEGER")
add_class(b)
less_than
add_attribute("C", "e", "BOOLEAN")
add_command("d", "D", <<["e", "C"], ["C", "INTEGER"], ["b", "BOOLEAN"], ["c", "c"], ["b", "INTEGER"], ["b", "d"], ["c", "BOOLEAN"]>>)
add_attribute("b", "d", "INTEGER")
logical_negation
type_check
add_query("A", "D", <<["D", "d"], ["A", "INTEGER"]>>, "BOOLEAN")
bool_value (true)
add_call_chain(<<a,A,d,B,C,d,d,d,d>>)
int_value (26)
add_query("e", "b", <<["c", "D"]>>, "D")
greater_than
add_call_chain(<<BOOLEAN,c,A>>)
int_value (4)
logical_negation
add_call_chain(<<a,D,C,a,BOOLEAN,b,e,A>>)
add_attribute("c", "a", "INTEGER")
add_command("a", "A", <<["C", "b"]>>)
add_call_chain(<<b>>)
type_check
add_attribute("A", "d", "INTEGER")
add_class(B)
add_call_chain(<<c,A,B,D,D>>)
add_query("D", "C", <<["B", "INTEGER"], ["e", "c"]>>, "b")
equals
numerical_negation
bool_value (false)
add_call_chain(<<B,C,c,a,b,C>>)
int_value (5)
numerical_negation
quotient
add_query("d", "d", <<["a", "BOOLEAN"], ["d", "a"], ["a", "e"], ["a", "INTEGER"]>>, "a")
int_value (29)
add_attribute("c", "a", "INTEGER")
add_command("BOOLEAN", "INTEGER", <<["INTEGER", "A"], ["C", "B"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "BOOLEAN"]>>)
greater_than
add_call_chain(<<c,C,D,A,B,INTEGER,d,e,b>>)
type_check
add_query("C", "B", <<["B", "INTEGER"], ["C", "C"], ["d", "BOOLEAN"], ["C", "e"], ["e", "INTEGER"], ["B", "e"]>>, "INTEGER")
bool_value (true)
add_call_chain(<<A,B,d,d,e,BOOLEAN,e,A>>)
add_call_chain(<<A>>)
quotient
bool_value (false)
bool_value (true)
subtraction
add_query("C", "B", <<["C", "a"], ["a", "BOOLEAN"], ["b", "b"], ["C", "c"], ["B", "e"], ["c", "C"], ["D", "INTEGER"], ["A", "A"], ["a", "C"]>>, "D")
add_query("C", "B", <<["A", "c"], ["B", "INTEGER"], ["a", "C"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "BOOLEAN"]>>, "D")
generate_java_code
add_class(C)
modulo
add_class(c)
conjunction
add_command("a", "c", <<["d", "BOOLEAN"], ["d", "INTEGER"], ["a", "BOOLEAN"], ["d", "INTEGER"], ["b", "INTEGER"], ["b", "BOOLEAN"], ["A", "INTEGER"]>>)
disjunction
int_value (44)
type_check
add_call_chain(<<b,D,c,A,INTEGER,e,c,c>>)
numerical_negation
generate_java_code
add_command("A", "C", <<["b", "INTEGER"], ["d", "BOOLEAN"], ["C", "c"], ["B", "BOOLEAN"], ["B", "INTEGER"], ["A", "INTEGER"], ["A", "a"]>>)
add_command("b", "C", <<["b", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["a", "BOOLEAN"]>>)
less_than
disjunction
add_query("A", "D", <<["c", "INTEGER"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["c", "BOOLEAN"], ["d", "INTEGER"]>>, "c")
add_call_chain(<<c,d,C,D,D,d,B,INTEGER>>)
add_command("b", "C", <<["D", "INTEGER"], ["BOOLEAN", "A"], ["b", "INTEGER"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "a"]>>)
add_query("e", "b", <<["c", "INTEGER"], ["e", "d"], ["BOOLEAN", "BOOLEAN"], ["B", "INTEGER"], ["d", "A"], ["e", "INTEGER"], ["BOOLEAN", "INTEGER"], ["a", "INTEGER"], ["B", "BOOLEAN"]>>, "c")
int_value (7)
bool_value (true)
add_query("d", "C", <<["d", "BOOLEAN"], ["c", "A"], ["c", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "INTEGER"]>>, "A")
int_value (7)
bool_value (true)
add_query("BOOLEAN", "a", <<["e", "INTEGER"]>>, "a")
add_query("a", "e", <<["b", "a"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["c", "BOOLEAN"]>>, "B")
numerical_negation
bool_value (true)
equals
add_command("c", "c", <<["BOOLEAN", "INTEGER"], ["e", "INTEGER"], ["C", "d"]>>)
bool_value (false)
bool_value (false)
add_command("C", "B", <<["B", "INTEGER"], ["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"]>>)
add_call_chain(<<C,A,c,A,D>>)
add_command("d", "B", <<["A", "INTEGER"], ["A", "A"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "INTEGER"]>>)
logical_negation
add_query("D", "INTEGER", <<["B", "BOOLEAN"], ["a", "INTEGER"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "INTEGER"], ["c", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "BOOLEAN"]>>, "D")
int_value (40)
add_query("C", "b", <<["B", "c"], ["B", "BOOLEAN"], ["D", "d"], ["b", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "D"], ["B", "C"]>>, "B")
add_call_chain(<<B,e>>)
type_check
add_command("e", "D", <<["d", "c"], ["a", "INTEGER"]>>)
generate_java_code
addition
logical_negation
logical_negation
add_attribute("d", "C", "BOOLEAN")
multiplication
add_command("A", "b", <<["d", "e"], ["b", "e"], ["B", "C"]>>)
logical_negation
bool_value (true)
add_query("D", "B", <<["d", "A"], ["A", "INTEGER"], ["d", "INTEGER"], ["d", "BOOLEAN"]>>, "D")
modulo
add_call_chain(<<e>>)
add_call_chain(<<D,C,D,d,INTEGER,C>>)
add_query("D", "e", <<["D", "INTEGER"], ["a", "INTEGER"], ["B", "INTEGER"], ["INTEGER", "INTEGER"], ["D", "INTEGER"], ["c", "C"], ["B", "BOOLEAN"]>>, "c")
int_value (49)
logical_negation
equals
add_call_chain(<<A>>)
add_class(B)
add_call_chain(<<B,e,A,D,c,A>>)
add_class(A)
add_attribute("D", "c", "BOOLEAN")
logical_negation
generate_java_code
subtraction
disjunction
add_query("C", "A", <<["B", "c"], ["A", "e"], ["c", "BOOLEAN"], ["c", "INTEGER"], ["INTEGER", "BOOLEAN"], ["A", "INTEGER"], ["c", "a"], ["c", "BOOLEAN"]>>, "D")
int_value (4)
int_value (7)
add_call_chain(<<e,INTEGER,A,b>>)
logical_negation
add_call_chain(<<D,C,b,d,D,BOOLEAN,d,B>>)
numerical_negation
logical_negation
bool_value (true)
logical_negation
conjunction
add_call_chain(<<b,e,C,c,A,d>>)
add_call_chain(<<D,D,A>>)
add_command("D", "e", <<["C", "C"], ["D", "INTEGER"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "INTEGER"], ["c", "INTEGER"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
add_query("e", "b", <<["C", "INTEGER"], ["b", "INTEGER"], ["D", "B"], ["INTEGER", "b"], ["B", "a"], ["d", "INTEGER"], ["b", "D"], ["d", "BOOLEAN"], ["BOOLEAN", "c"]>>, "b")
add_query("BOOLEAN", "C", <<["C", "e"]>>, "INTEGER")
type_check
numerical_negation
add_command("d", "d", <<["c", "BOOLEAN"], ["b", "C"], ["BOOLEAN", "INTEGER"], ["B", "INTEGER"], ["e", "INTEGER"]>>)
logical_negation
add_call_chain(<<D,a,INTEGER,INTEGER>>)
add_call_chain(<<C,C,A>>)
bool_value (false)
generate_java_code
numerical_negation
add_attribute("C", "BOOLEAN", "A")
int_value (25)
addition
type_check
add_call_chain(<<b,a>>)
add_call_chain(<<INTEGER,D,e,b,B,A>>)
generate_java_code
add_attribute("C", "d", "B")
logical_negation
equals
add_command("a", "a", <<["B", "A"], ["INTEGER", "BOOLEAN"], ["C", "c"], ["C", "D"]>>)
type_check
add_class(b)
add_class(C)
add_command("c", "INTEGER", <<["D", "BOOLEAN"], ["b", "INTEGER"], ["d", "d"]>>)
bool_value (false)
add_attribute("B", "b", "BOOLEAN")
add_call_chain(<<b>>)
bool_value (false)
int_value (23)
type_check
modulo
int_value (26)
bool_value (false)
disjunction
bool_value (false)
add_call_chain(<<A,c,e,INTEGER,A>>)
add_query("D", "d", <<["b", "BOOLEAN"], ["B", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "c"], ["D", "INTEGER"]>>, "INTEGER")
add_call_chain(<<D,B,b,d,e,D,A>>)
quotient
add_command("C", "e", <<["A", "D"]>>)
add_command("e", "B", <<["C", "INTEGER"], ["d", "BOOLEAN"], ["a", "e"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["e", "BOOLEAN"]>>)
numerical_negation
add_query("BOOLEAN", "A", <<["b", "INTEGER"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["D", "C"], ["e", "INTEGER"], ["C", "INTEGER"], ["e", "BOOLEAN"]>>, "D")
add_attribute("e", "c", "INTEGER")
generate_java_code
bool_value (true)
numerical_negation
logical_negation
int_value (32)
bool_value (false)
logical_negation
add_query("D", "b", <<["e", "e"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["B", "INTEGER"], ["a", "BOOLEAN"]>>, "INTEGER")
type_check
add_query("C", "a", <<["e", "BOOLEAN"], ["e", "BOOLEAN"], ["c", "B"], ["c", "BOOLEAN"], ["C", "INTEGER"], ["b", "BOOLEAN"]>>, "e")
add_call_chain(<<C,INTEGER>>)
add_attribute("C", "b", "BOOLEAN")
int_value (16)
