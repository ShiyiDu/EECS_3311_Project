numerical_negation
conjunction
add_attribute("INTEGER", "A", "BOOLEAN")
generate_java_code
multiplication
bool_value (false)
add_call_chain(<<e,BOOLEAN,d,C,b,A,e,b>>)
add_call_chain(<<B,D,INTEGER>>)
add_class(INTEGER)
numerical_negation
logical_negation
conjunction
bool_value (false)
bool_value (false)
add_command("c", "e", <<["B", "e"], ["d", "INTEGER"], ["e", "A"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["b", "b"], ["e", "A"], ["a", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
logical_negation
add_query("d", "b", <<["e", "A"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["c", "BOOLEAN"]>>, "d")
bool_value (false)
add_class(A)
bool_value (true)
bool_value (true)
add_call_chain(<<A,A,D,D,D,c,A,INTEGER>>)
multiplication
bool_value (true)
add_class(A)
int_value (44)
add_call_chain(<<D,a,A,b,D,c,C,b,BOOLEAN>>)
add_call_chain(<<d,B,c,b,B>>)
int_value (27)
disjunction
numerical_negation
add_call_chain(<<c>>)
add_query("e", "A", <<["A", "e"]>>, "B")
equals
add_call_chain(<<c,B,C>>)
add_command("D", "B", <<["C", "INTEGER"], ["C", "INTEGER"]>>)
add_attribute("b", "B", "BOOLEAN")
add_query("d", "D", <<["d", "B"]>>, "BOOLEAN")
add_call_chain(<<e>>)
numerical_negation
numerical_negation
bool_value (true)
add_command("D", "INTEGER", <<["a", "B"], ["A", "BOOLEAN"], ["B", "e"], ["d", "BOOLEAN"]>>)
add_command("b", "B", <<["C", "INTEGER"], ["e", "BOOLEAN"], ["A", "INTEGER"]>>)
add_attribute("BOOLEAN", "b", "BOOLEAN")
logical_negation
add_attribute("d", "d", "BOOLEAN")
add_attribute("B", "e", "b")
add_command("d", "b", <<["A", "c"], ["BOOLEAN", "BOOLEAN"], ["C", "INTEGER"], ["b", "INTEGER"], ["BOOLEAN", "d"], ["c", "INTEGER"], ["B", "d"], ["c", "INTEGER"], ["A", "INTEGER"]>>)
add_attribute("A", "D", "INTEGER")
greater_than
generate_java_code
numerical_negation
bool_value (false)
add_query("c", "c", <<["D", "INTEGER"], ["D", "INTEGER"], ["e", "B"], ["b", "BOOLEAN"], ["D", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>, "D")
int_value (14)
greater_than
add_call_chain(<<BOOLEAN,D,d,B,b>>)
disjunction
addition
int_value (16)
add_attribute("a", "INTEGER", "BOOLEAN")
numerical_negation
bool_value (true)
logical_negation
add_query("d", "e", <<["e", "INTEGER"], ["C", "D"]>>, "d")
logical_negation
greater_than
add_class(INTEGER)
int_value (17)
logical_negation
add_attribute("D", "c", "A")
add_attribute("B", "e", "INTEGER")
add_query("a", "b", <<["D", "D"], ["d", "A"], ["a", "INTEGER"], ["A", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "INTEGER"], ["B", "e"], ["D", "a"]>>, "d")
int_value (14)
bool_value (true)
add_call_chain(<<INTEGER,INTEGER,b>>)
add_command("B", "e", <<["A", "B"], ["c", "INTEGER"], ["a", "INTEGER"], ["b", "BOOLEAN"]>>)
bool_value (false)
add_query("INTEGER", "d", <<["D", "B"], ["B", "BOOLEAN"], ["A", "b"], ["d", "BOOLEAN"], ["INTEGER", "INTEGER"], ["a", "D"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "c"]>>, "C")
add_class(A)
add_call_chain(<<b,A,INTEGER,C,C>>)
add_attribute("D", "b", "d")
add_class(a)
add_command("e", "A", <<["c", "INTEGER"], ["C", "BOOLEAN"], ["A", "e"], ["A", "BOOLEAN"], ["b", "INTEGER"]>>)
add_class(A)
add_call_chain(<<B,C,C,C,e>>)
int_value (7)
add_attribute("D", "A", "INTEGER")
add_call_chain(<<B,b>>)
add_call_chain(<<c,d,e,A,B,a,a,e>>)
less_than
logical_negation
logical_negation
int_value (10)
generate_java_code
numerical_negation
add_call_chain(<<INTEGER,D>>)
add_call_chain(<<A,D,INTEGER,b,A,a,e,d,D>>)
bool_value (false)
int_value (4)
add_query("a", "b", <<["D", "INTEGER"], ["c", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["A", "INTEGER"], ["B", "INTEGER"]>>, "C")
logical_negation
int_value (47)
add_class(C)
bool_value (true)
less_than
logical_negation
equals
add_call_chain(<<BOOLEAN>>)
numerical_negation
subtraction
disjunction
int_value (19)
logical_negation
int_value (39)
add_attribute("b", "a", "BOOLEAN")
logical_negation
add_command("d", "BOOLEAN", <<["D", "INTEGER"], ["a", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "BOOLEAN"], ["BOOLEAN", "a"], ["a", "D"]>>)
numerical_negation
equals
add_query("A", "B", <<["D", "BOOLEAN"], ["B", "e"]>>, "b")
int_value (25)
add_call_chain(<<b,c,INTEGER,e,c>>)
add_call_chain(<<e,c,d,D,b>>)
add_call_chain(<<D,D,d,D,b,A,A>>)
add_query("e", "C", <<["b", "INTEGER"], ["D", "d"]>>, "INTEGER")
add_attribute("e", "D", "e")
add_query("D", "e", <<["d", "a"], ["c", "d"], ["B", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "C"]>>, "D")
int_value (21)
add_call_chain(<<C,INTEGER,INTEGER,C>>)
add_class(c)
add_attribute("a", "d", "BOOLEAN")
logical_negation
int_value (17)
add_call_chain(<<e,c,e,C,e,B,A,B>>)
add_query("INTEGER", "B", <<["C", "INTEGER"], ["C", "INTEGER"], ["INTEGER", "BOOLEAN"], ["e", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "INTEGER"], ["D", "INTEGER"]>>, "e")
disjunction
add_query("b", "C", <<["BOOLEAN", "BOOLEAN"], ["D", "INTEGER"]>>, "C")
int_value (35)
numerical_negation
add_query("INTEGER", "d", <<["c", "a"], ["BOOLEAN", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "D"], ["b", "A"], ["C", "D"]>>, "a")
bool_value (false)
add_query("b", "d", <<["e", "a"], ["BOOLEAN", "A"], ["D", "a"]>>, "D")
bool_value (true)
add_query("B", "B", <<["a", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "INTEGER"], ["e", "INTEGER"], ["B", "INTEGER"], ["b", "BOOLEAN"]>>, "BOOLEAN")
modulo
generate_java_code
logical_negation
int_value (24)
generate_java_code
add_call_chain(<<C,e,B,D>>)
add_command("c", "D", <<["D", "BOOLEAN"], ["A", "INTEGER"], ["B", "INTEGER"], ["D", "INTEGER"], ["e", "BOOLEAN"], ["B", "INTEGER"], ["c", "e"], ["c", "BOOLEAN"]>>)
add_query("a", "BOOLEAN", <<["B", "C"]>>, "C")
greater_than
add_command("BOOLEAN", "b", <<["d", "INTEGER"], ["BOOLEAN", "INTEGER"], ["D", "INTEGER"], ["A", "BOOLEAN"]>>)
int_value (9)
logical_negation
type_check
add_call_chain(<<D>>)
add_attribute("C", "d", "BOOLEAN")
type_check
add_attribute("b", "c", "d")
add_query("a", "BOOLEAN", <<["a", "BOOLEAN"], ["B", "b"], ["A", "INTEGER"], ["BOOLEAN", "INTEGER"], ["d", "INTEGER"], ["d", "INTEGER"]>>, "C")
add_call_chain(<<A,d,A,c,d,BOOLEAN>>)
add_command("b", "d", <<["A", "e"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "e"], ["C", "INTEGER"], ["a", "BOOLEAN"]>>)
disjunction
add_command("A", "b", <<["INTEGER", "BOOLEAN"], ["b", "INTEGER"], ["D", "INTEGER"], ["e", "c"], ["B", "c"]>>)
conjunction
add_attribute("D", "D", "INTEGER")
bool_value (false)
greater_than
logical_negation
type_check
add_command("a", "a", <<["A", "BOOLEAN"]>>)
bool_value (true)
add_query("B", "a", <<["d", "BOOLEAN"]>>, "INTEGER")
add_query("BOOLEAN", "a", <<["B", "INTEGER"], ["B", "BOOLEAN"]>>, "c")
add_query("c", "C", <<["B", "b"], ["B", "INTEGER"]>>, "b")
type_check
generate_java_code
bool_value (true)
add_call_chain(<<A,B,b,d,D,C,b>>)
disjunction
logical_negation
add_class(D)
int_value (5)
int_value (48)
generate_java_code
int_value (30)
add_call_chain(<<C,d>>)
add_query("A", "d", <<["d", "D"], ["b", "INTEGER"], ["c", "C"], ["D", "A"]>>, "D")
add_call_chain(<<a,A,e,a>>)
logical_negation
bool_value (true)
add_class(B)
type_check
add_command("b", "b", <<["D", "b"], ["a", "INTEGER"], ["d", "BOOLEAN"], ["D", "INTEGER"], ["INTEGER", "c"]>>)
modulo
addition
logical_negation
add_command("B", "c", <<["A", "BOOLEAN"], ["D", "INTEGER"], ["b", "c"], ["D", "BOOLEAN"], ["d", "a"], ["C", "BOOLEAN"], ["INTEGER", "INTEGER"], ["C", "e"]>>)
add_query("B", "INTEGER", <<["a", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "B"], ["c", "INTEGER"], ["B", "a"], ["e", "INTEGER"]>>, "B")
add_call_chain(<<C,C,INTEGER,c,B,INTEGER>>)
add_class(e)
type_check
add_call_chain(<<B,c,B,INTEGER,e,D>>)
addition
add_query("A", "BOOLEAN", <<["a", "BOOLEAN"], ["d", "d"], ["D", "INTEGER"]>>, "c")
add_query("d", "a", <<["c", "D"], ["B", "INTEGER"]>>, "A")
add_call_chain(<<e,BOOLEAN,INTEGER,e,e,a,b,BOOLEAN>>)
conjunction
add_command("e", "c", <<["c", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["d", "INTEGER"]>>)
add_query("INTEGER", "e", <<["C", "c"], ["D", "d"], ["e", "C"], ["d", "INTEGER"], ["D", "C"], ["BOOLEAN", "A"], ["a", "e"]>>, "d")
add_attribute("d", "B", "D")
less_than
add_command("c", "c", <<["d", "B"], ["B", "b"], ["a", "INTEGER"], ["c", "C"], ["D", "A"], ["B", "INTEGER"], ["a", "INTEGER"]>>)
int_value (28)
