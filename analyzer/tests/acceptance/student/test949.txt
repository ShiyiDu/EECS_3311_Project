logical_negation
add_call_chain(<<BOOLEAN,D,C,BOOLEAN,INTEGER,B,INTEGER,d>>)
bool_value (true)
bool_value (true)
add_command("D", "INTEGER", <<["BOOLEAN", "INTEGER"], ["A", "D"], ["D", "a"], ["D", "d"], ["a", "BOOLEAN"]>>)
add_command("C", "B", <<["b", "INTEGER"], ["e", "INTEGER"], ["C", "c"], ["C", "BOOLEAN"]>>)
add_call_chain(<<e,BOOLEAN,c,c,c,B>>)
int_value (43)
add_query("b", "A", <<["B", "INTEGER"], ["B", "C"], ["a", "BOOLEAN"], ["a", "INTEGER"], ["a", "INTEGER"], ["B", "INTEGER"], ["b", "BOOLEAN"], ["c", "b"], ["C", "INTEGER"]>>, "B")
add_attribute("e", "INTEGER", "INTEGER")
add_command("C", "B", <<["C", "INTEGER"], ["B", "INTEGER"], ["a", "INTEGER"], ["A", "B"], ["C", "BOOLEAN"], ["a", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
numerical_negation
generate_java_code
addition
add_query("e", "A", <<["e", "INTEGER"], ["A", "BOOLEAN"], ["e", "BOOLEAN"]>>, "c")
quotient
subtraction
disjunction
add_query("BOOLEAN", "d", <<["C", "INTEGER"]>>, "C")
greater_than
add_attribute("C", "D", "INTEGER")
add_call_chain(<<INTEGER,A,a,INTEGER,C,A,C,INTEGER>>)
conjunction
add_attribute("BOOLEAN", "d", "C")
int_value (43)
add_attribute("C", "c", "INTEGER")
numerical_negation
disjunction
equals
int_value (31)
int_value (14)
add_attribute("INTEGER", "D", "INTEGER")
add_call_chain(<<c,A,D,A>>)
add_attribute("a", "d", "BOOLEAN")
add_query("e", "B", <<["INTEGER", "BOOLEAN"], ["B", "BOOLEAN"]>>, "C")
add_call_chain(<<b,c,A,b>>)
bool_value (true)
bool_value (false)
numerical_negation
numerical_negation
add_call_chain(<<A,e,A,e,b>>)
int_value (40)
int_value (38)
add_call_chain(<<B,C,B,D,C>>)
bool_value (false)
bool_value (false)
bool_value (true)
add_class(A)
add_class(C)
add_command("B", "A", <<["C", "BOOLEAN"], ["d", "e"], ["B", "BOOLEAN"], ["B", "C"], ["C", "e"]>>)
logical_negation
add_query("a", "C", <<["e", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "INTEGER"], ["b", "BOOLEAN"], ["e", "a"], ["C", "B"], ["c", "BOOLEAN"]>>, "c")
numerical_negation
add_query("A", "D", <<["C", "A"], ["B", "BOOLEAN"], ["C", "INTEGER"], ["BOOLEAN", "d"]>>, "C")
add_attribute("d", "a", "BOOLEAN")
add_command("d", "C", <<["A", "BOOLEAN"], ["e", "INTEGER"], ["A", "BOOLEAN"]>>)
type_check
conjunction
add_command("e", "b", <<["A", "D"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["C", "INTEGER"], ["b", "INTEGER"], ["D", "b"]>>)
logical_negation
add_call_chain(<<e,e,b,B,e,d,A,D,C>>)
numerical_negation
logical_negation
bool_value (false)
logical_negation
int_value (2)
equals
int_value (2)
add_query("BOOLEAN", "a", <<["c", "BOOLEAN"], ["D", "BOOLEAN"]>>, "B")
generate_java_code
add_command("B", "A", <<["a", "B"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["c", "INTEGER"], ["e", "C"], ["C", "BOOLEAN"], ["d", "INTEGER"]>>)
int_value (40)
add_query("d", "D", <<["a", "c"], ["INTEGER", "INTEGER"], ["e", "A"], ["d", "A"], ["d", "b"]>>, "B")
add_call_chain(<<e,b,b,d,b,A,b>>)
subtraction
add_class(b)
add_call_chain(<<C,D,a,e,d,e,e,A,D>>)
add_call_chain(<<b,INTEGER,INTEGER,B,b,D,INTEGER,C,C>>)
logical_negation
multiplication
add_attribute("D", "B", "BOOLEAN")
add_call_chain(<<b,C,B,INTEGER>>)
add_class(BOOLEAN)
add_call_chain(<<B>>)
generate_java_code
add_query("C", "d", <<["c", "INTEGER"], ["e", "BOOLEAN"], ["c", "INTEGER"], ["B", "BOOLEAN"], ["BOOLEAN", "b"], ["a", "b"], ["e", "BOOLEAN"], ["C", "b"], ["c", "INTEGER"]>>, "B")
add_attribute("a", "A", "BOOLEAN")
logical_negation
conjunction
add_attribute("e", "D", "INTEGER")
numerical_negation
generate_java_code
logical_negation
int_value (49)
add_call_chain(<<b,c,INTEGER,A,a,A>>)
add_attribute("b", "D", "d")
add_attribute("C", "D", "INTEGER")
add_query("B", "c", <<["D", "INTEGER"], ["INTEGER", "INTEGER"], ["INTEGER", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["B", "INTEGER"], ["b", "BOOLEAN"], ["BOOLEAN", "e"], ["a", "BOOLEAN"]>>, "e")
add_call_chain(<<d,d,C,c,b,D,a>>)
type_check
add_attribute("D", "a", "INTEGER")
type_check
add_query("e", "b", <<["e", "INTEGER"], ["c", "C"], ["d", "e"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["d", "a"], ["C", "INTEGER"]>>, "B")
int_value (8)
add_call_chain(<<b,BOOLEAN,C,A,A,e,B,a,b>>)
quotient
add_query("a", "INTEGER", <<["C", "INTEGER"], ["b", "BOOLEAN"], ["C", "b"], ["C", "c"], ["B", "c"]>>, "b")
add_attribute("A", "c", "INTEGER")
add_call_chain(<<C,C,c,c,BOOLEAN,A,B,D,a>>)
int_value (3)
add_call_chain(<<B,b,B,c,d,d>>)
add_command("C", "d", <<["C", "a"]>>)
bool_value (false)
add_class(e)
add_call_chain(<<A>>)
add_class(B)
numerical_negation
add_query("d", "a", <<["c", "INTEGER"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "INTEGER"], ["b", "INTEGER"], ["D", "A"], ["c", "BOOLEAN"], ["e", "BOOLEAN"]>>, "BOOLEAN")
generate_java_code
int_value (17)
add_command("D", "B", <<["e", "INTEGER"], ["D", "INTEGER"], ["C", "INTEGER"], ["e", "INTEGER"], ["c", "b"]>>)
generate_java_code
add_command("A", "b", <<["b", "INTEGER"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["B", "A"]>>)
type_check
add_class(a)
add_call_chain(<<B,BOOLEAN>>)
greater_than
add_query("b", "b", <<["INTEGER", "d"], ["C", "BOOLEAN"], ["e", "INTEGER"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["B", "INTEGER"], ["D", "INTEGER"], ["B", "B"]>>, "d")
add_call_chain(<<c,e,A,B,b>>)
add_query("D", "b", <<["D", "INTEGER"], ["D", "INTEGER"], ["d", "b"], ["c", "INTEGER"]>>, "D")
add_call_chain(<<B,a,C>>)
add_call_chain(<<e,b,d,B,B,d,b,D,c>>)
add_command("A", "d", <<["e", "BOOLEAN"]>>)
add_query("c", "C", <<["b", "BOOLEAN"], ["A", "INTEGER"], ["a", "INTEGER"], ["a", "BOOLEAN"], ["C", "INTEGER"], ["e", "INTEGER"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["BOOLEAN", "INTEGER"]>>, "b")
multiplication
add_attribute("d", "C", "C")
greater_than
logical_negation
numerical_negation
add_call_chain(<<C,c,B,C,D,A>>)
type_check
add_call_chain(<<C,C,B,D,C,c,C>>)
int_value (19)
disjunction
bool_value (true)
add_query("A", "d", <<["c", "C"], ["c", "INTEGER"], ["b", "INTEGER"], ["B", "INTEGER"], ["B", "BOOLEAN"], ["c", "B"], ["INTEGER", "INTEGER"]>>, "C")
equals
bool_value (true)
add_call_chain(<<c,D,D,c,B,C,C,D,D>>)
modulo
add_class(B)
logical_negation
bool_value (true)
subtraction
numerical_negation
add_query("a", "a", <<["c", "c"], ["c", "INTEGER"], ["e", "BOOLEAN"], ["D", "INTEGER"], ["C", "INTEGER"], ["BOOLEAN", "INTEGER"]>>, "D")
bool_value (false)
quotient
add_call_chain(<<BOOLEAN,A,d,C>>)
int_value (13)
int_value (17)
logical_negation
logical_negation
logical_negation
add_attribute("e", "b", "INTEGER")
add_query("A", "D", <<["b", "c"], ["a", "A"], ["c", "BOOLEAN"], ["c", "c"], ["D", "INTEGER"], ["A", "BOOLEAN"], ["D", "INTEGER"]>>, "C")
type_check
add_query("D", "C", <<["e", "BOOLEAN"], ["A", "INTEGER"], ["D", "BOOLEAN"]>>, "C")
add_query("C", "C", <<["A", "BOOLEAN"], ["d", "B"], ["A", "d"], ["d", "BOOLEAN"]>>, "A")
bool_value (true)
add_attribute("c", "A", "b")
add_query("b", "d", <<["D", "INTEGER"], ["a", "INTEGER"], ["b", "BOOLEAN"], ["A", "C"]>>, "e")
bool_value (true)
int_value (37)
int_value (34)
equals
add_command("INTEGER", "B", <<["INTEGER", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "A"], ["A", "INTEGER"], ["b", "INTEGER"], ["D", "INTEGER"], ["a", "BOOLEAN"], ["A", "BOOLEAN"]>>)
add_query("e", "C", <<["e", "BOOLEAN"], ["e", "a"], ["B", "D"], ["D", "BOOLEAN"], ["e", "INTEGER"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["a", "BOOLEAN"]>>, "c")
logical_negation
logical_negation
add_call_chain(<<C,A,d,c,e,A>>)
add_call_chain(<<B,BOOLEAN>>)
int_value (40)
add_attribute("c", "BOOLEAN", "d")
add_command("A", "c", <<["C", "b"], ["d", "INTEGER"], ["e", "BOOLEAN"], ["B", "INTEGER"], ["a", "b"]>>)
add_query("B", "A", <<["B", "INTEGER"], ["b", "INTEGER"], ["e", "INTEGER"], ["d", "INTEGER"], ["c", "B"], ["C", "INTEGER"]>>, "b")
add_attribute("D", "c", "BOOLEAN")
add_call_chain(<<D>>)
generate_java_code
logical_negation
type_check
int_value (14)
add_query("e", "a", <<["D", "D"], ["B", "INTEGER"], ["b", "B"], ["d", "INTEGER"], ["c", "A"]>>, "C")
modulo
subtraction
int_value (38)
add_command("A", "C", <<["C", "BOOLEAN"], ["A", "INTEGER"], ["c", "A"], ["BOOLEAN", "INTEGER"], ["A", "d"], ["b", "INTEGER"], ["INTEGER", "D"]>>)
numerical_negation
add_command("INTEGER", "C", <<["e", "INTEGER"], ["d", "b"]>>)
add_attribute("a", "a", "e")
generate_java_code
multiplication
add_attribute("INTEGER", "INTEGER", "BOOLEAN")
add_call_chain(<<B,d,D>>)
add_call_chain(<<C,C,A,INTEGER>>)
int_value (13)
generate_java_code
bool_value (false)
numerical_negation
numerical_negation
