bool_value (true)
add_call_chain(<<b,B,C,c,c,e,b,e,D>>)
add_class(c)
type_check
disjunction
equals
add_call_chain(<<B,c>>)
less_than
add_call_chain(<<B,c,a>>)
add_attribute("D", "B", "INTEGER")
conjunction
add_call_chain(<<B,c,e,BOOLEAN>>)
add_command("C", "e", <<["c", "BOOLEAN"], ["B", "INTEGER"], ["e", "BOOLEAN"], ["b", "BOOLEAN"], ["d", "c"], ["BOOLEAN", "D"], ["INTEGER", "d"]>>)
add_attribute("d", "d", "INTEGER")
multiplication
logical_negation
add_command("e", "C", <<["D", "C"], ["c", "A"], ["C", "INTEGER"], ["C", "INTEGER"], ["D", "C"], ["A", "INTEGER"], ["b", "INTEGER"]>>)
add_call_chain(<<B,a,d,a>>)
bool_value (true)
disjunction
logical_negation
add_attribute("c", "b", "BOOLEAN")
add_attribute("D", "D", "INTEGER")
add_call_chain(<<INTEGER,C,A,D,INTEGER,c,C>>)
int_value (34)
bool_value (false)
less_than
add_command("a", "e", <<["c", "C"], ["a", "BOOLEAN"], ["D", "INTEGER"], ["D", "BOOLEAN"]>>)
add_query("A", "B", <<["B", "INTEGER"], ["D", "BOOLEAN"], ["BOOLEAN", "b"]>>, "b")
add_query("BOOLEAN", "D", <<["C", "INTEGER"], ["c", "INTEGER"]>>, "B")
add_call_chain(<<a,e,b,b,e,b,e,INTEGER>>)
add_command("C", "b", <<["a", "e"], ["A", "BOOLEAN"], ["c", "BOOLEAN"]>>)
add_query("D", "D", <<["a", "INTEGER"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "INTEGER"], ["A", "D"], ["D", "b"], ["d", "BOOLEAN"], ["C", "INTEGER"]>>, "c")
int_value (22)
modulo
int_value (46)
type_check
bool_value (false)
add_class(e)
type_check
add_query("c", "e", <<["B", "A"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["b", "INTEGER"], ["b", "INTEGER"]>>, "C")
int_value (45)
int_value (28)
int_value (27)
add_command("b", "c", <<["a", "B"], ["d", "INTEGER"], ["A", "INTEGER"], ["a", "INTEGER"], ["D", "D"], ["a", "BOOLEAN"], ["d", "a"], ["a", "C"], ["b", "a"]>>)
add_attribute("B", "d", "INTEGER")
numerical_negation
generate_java_code
quotient
add_query("A", "B", <<["b", "A"], ["b", "BOOLEAN"], ["a", "INTEGER"]>>, "b")
add_call_chain(<<d,INTEGER,C,A,D,D,d,A,C>>)
subtraction
logical_negation
add_call_chain(<<e,b,d,A,A,C,c,C,C>>)
add_call_chain(<<C,e,c,e,D,A,b,c>>)
equals
conjunction
add_query("c", "a", <<["C", "BOOLEAN"]>>, "c")
numerical_negation
generate_java_code
add_class(C)
disjunction
add_attribute("B", "e", "BOOLEAN")
int_value (23)
bool_value (true)
add_call_chain(<<c,e,e>>)
numerical_negation
add_call_chain(<<b,D,A,d,D,c>>)
add_query("D", "INTEGER", <<["B", "C"]>>, "d")
logical_negation
generate_java_code
conjunction
add_attribute("a", "D", "INTEGER")
add_call_chain(<<e>>)
add_call_chain(<<A,D,e,b,C,d,b,d,a>>)
add_call_chain(<<d,A,INTEGER,b,A>>)
type_check
subtraction
add_query("a", "B", <<["d", "INTEGER"], ["A", "INTEGER"], ["b", "INTEGER"], ["b", "D"], ["e", "INTEGER"], ["a", "BOOLEAN"], ["C", "C"]>>, "e")
generate_java_code
add_call_chain(<<e,b,B,b,b,C,e,BOOLEAN>>)
generate_java_code
int_value (16)
conjunction
numerical_negation
less_than
add_call_chain(<<BOOLEAN,a,d,a,A,D,c>>)
disjunction
conjunction
bool_value (true)
add_command("C", "C", <<["D", "a"], ["D", "BOOLEAN"], ["C", "e"]>>)
add_query("e", "e", <<["BOOLEAN", "D"], ["B", "e"], ["INTEGER", "BOOLEAN"], ["b", "INTEGER"]>>, "e")
greater_than
add_call_chain(<<d>>)
add_command("B", "B", <<["D", "b"], ["INTEGER", "A"]>>)
bool_value (true)
add_command("C", "C", <<["INTEGER", "INTEGER"], ["A", "INTEGER"], ["D", "INTEGER"], ["B", "B"], ["D", "B"], ["C", "e"], ["b", "INTEGER"], ["A", "INTEGER"], ["a", "INTEGER"]>>)
equals
type_check
bool_value (true)
add_command("B", "B", <<["C", "INTEGER"], ["d", "INTEGER"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "INTEGER"]>>)
add_attribute("D", "D", "BOOLEAN")
generate_java_code
equals
add_call_chain(<<A,a>>)
int_value (43)
add_attribute("B", "c", "BOOLEAN")
conjunction
type_check
numerical_negation
logical_negation
add_call_chain(<<B,a,A,C,B,C,d,b,D>>)
bool_value (true)
add_call_chain(<<a,A,b,C,A>>)
numerical_negation
add_class(INTEGER)
add_class(C)
int_value (49)
add_attribute("b", "c", "BOOLEAN")
bool_value (false)
generate_java_code
add_attribute("B", "e", "INTEGER")
bool_value (true)
add_class(c)
add_call_chain(<<BOOLEAN,B,D,d,A,BOOLEAN,e,c,A>>)
numerical_negation
int_value (46)
logical_negation
bool_value (true)
equals
int_value (1)
addition
add_call_chain(<<b,b,D>>)
add_query("D", "B", <<["b", "a"], ["A", "INTEGER"], ["d", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "C"], ["C", "INTEGER"], ["BOOLEAN", "INTEGER"]>>, "INTEGER")
bool_value (false)
int_value (24)
numerical_negation
add_call_chain(<<a,b,C,c,d,d,INTEGER,c,D>>)
add_call_chain(<<c,e>>)
generate_java_code
logical_negation
add_call_chain(<<b,A>>)
logical_negation
add_attribute("D", "a", "INTEGER")
subtraction
add_query("A", "b", <<["A", "BOOLEAN"], ["b", "D"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["INTEGER", "b"], ["c", "INTEGER"]>>, "BOOLEAN")
add_call_chain(<<B,BOOLEAN,BOOLEAN,a,INTEGER,b>>)
less_than
int_value (33)
add_command("e", "BOOLEAN", <<["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["INTEGER", "D"], ["a", "INTEGER"]>>)
add_command("e", "d", <<["e", "BOOLEAN"], ["A", "BOOLEAN"]>>)
greater_than
equals
logical_negation
add_command("D", "a", <<["C", "A"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "INTEGER"], ["e", "INTEGER"], ["A", "C"], ["D", "INTEGER"]>>)
add_command("C", "BOOLEAN", <<["B", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["d", "BOOLEAN"], ["c", "BOOLEAN"]>>)
numerical_negation
numerical_negation
add_query("a", "C", <<["d", "INTEGER"], ["d", "INTEGER"], ["B", "a"], ["d", "BOOLEAN"], ["c", "INTEGER"], ["A", "D"]>>, "D")
add_call_chain(<<D,d,d,d,b>>)
bool_value (true)
numerical_negation
add_call_chain(<<d,b,A,b,e,c,B,b,c>>)
greater_than
add_query("c", "B", <<["b", "INTEGER"], ["e", "a"], ["d", "BOOLEAN"], ["B", "INTEGER"], ["B", "BOOLEAN"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["B", "INTEGER"]>>, "C")
add_command("a", "e", <<["INTEGER", "b"], ["c", "INTEGER"], ["B", "A"], ["a", "INTEGER"]>>)
bool_value (false)
add_command("c", "b", <<["e", "BOOLEAN"], ["d", "BOOLEAN"], ["INTEGER", "INTEGER"], ["B", "INTEGER"], ["A", "a"], ["d", "BOOLEAN"], ["a", "BOOLEAN"]>>)
add_class(c)
disjunction
int_value (42)
subtraction
add_call_chain(<<D,d,A,INTEGER,INTEGER>>)
add_attribute("c", "B", "c")
add_query("B", "b", <<["a", "D"], ["d", "BOOLEAN"], ["c", "D"], ["B", "e"], ["INTEGER", "INTEGER"], ["D", "INTEGER"], ["A", "a"], ["c", "BOOLEAN"]>>, "d")
add_command("b", "c", <<["b", "BOOLEAN"], ["e", "BOOLEAN"], ["a", "INTEGER"]>>)
generate_java_code
type_check
add_attribute("D", "A", "INTEGER")
add_attribute("B", "BOOLEAN", "BOOLEAN")
int_value (39)
add_call_chain(<<D,c,b,C>>)
type_check
type_check
numerical_negation
generate_java_code
add_call_chain(<<a,A>>)
add_class(a)
conjunction
add_call_chain(<<b,c,D>>)
less_than
int_value (3)
