add_command("e", "e", <<["C", "INTEGER"]>>)
int_value (34)
generate_java_code
bool_value (false)
int_value (36)
conjunction
add_command("c", "B", <<["A", "a"], ["a", "B"], ["d", "d"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["d", "INTEGER"], ["b", "b"]>>)
equals
type_check
logical_negation
add_attribute("c", "e", "e")
bool_value (false)
bool_value (true)
numerical_negation
add_attribute("B", "D", "BOOLEAN")
numerical_negation
int_value (21)
add_class(b)
generate_java_code
add_command("e", "C", <<["B", "D"], ["a", "A"], ["A", "C"], ["d", "D"], ["D", "D"]>>)
add_query("D", "B", <<["D", "BOOLEAN"], ["B", "c"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["b", "INTEGER"], ["A", "A"]>>, "a")
add_query("e", "C", <<["e", "b"], ["D", "a"], ["C", "BOOLEAN"], ["c", "a"], ["c", "BOOLEAN"], ["a", "INTEGER"]>>, "D")
add_call_chain(<<A,B,d,C,b,a,d,d,B>>)
int_value (27)
generate_java_code
add_class(a)
generate_java_code
add_attribute("BOOLEAN", "c", "BOOLEAN")
generate_java_code
add_call_chain(<<e,B>>)
logical_negation
add_attribute("BOOLEAN", "c", "INTEGER")
add_call_chain(<<A>>)
disjunction
bool_value (true)
logical_negation
add_class(B)
int_value (33)
add_attribute("e", "INTEGER", "e")
logical_negation
int_value (32)
bool_value (false)
add_command("BOOLEAN", "a", <<["c", "BOOLEAN"], ["a", "INTEGER"], ["A", "BOOLEAN"]>>)
add_query("B", "D", <<["C", "a"], ["C", "e"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["BOOLEAN", "INTEGER"], ["a", "INTEGER"]>>, "BOOLEAN")
add_call_chain(<<INTEGER,c,c,BOOLEAN,C,a,b,b>>)
add_query("e", "a", <<["A", "d"]>>, "B")
add_command("a", "b", <<["c", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "INTEGER"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "B"], ["a", "INTEGER"]>>)
add_attribute("A", "A", "INTEGER")
numerical_negation
numerical_negation
add_query("C", "a", <<["C", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["C", "INTEGER"]>>, "BOOLEAN")
add_query("a", "b", <<["d", "BOOLEAN"], ["b", "INTEGER"]>>, "b")
add_class(a)
add_attribute("e", "d", "BOOLEAN")
numerical_negation
int_value (16)
add_attribute("e", "D", "c")
bool_value (false)
numerical_negation
generate_java_code
add_query("C", "c", <<["A", "INTEGER"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["d", "INTEGER"], ["B", "D"], ["b", "C"]>>, "A")
generate_java_code
logical_negation
bool_value (false)
add_attribute("D", "C", "INTEGER")
greater_than
int_value (17)
generate_java_code
add_query("A", "d", <<["e", "INTEGER"]>>, "B")
addition
bool_value (false)
add_call_chain(<<INTEGER,INTEGER,a,b,B,C,INTEGER,e>>)
add_query("c", "c", <<["a", "INTEGER"], ["C", "D"], ["INTEGER", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "BOOLEAN"]>>, "c")
generate_java_code
bool_value (false)
addition
generate_java_code
add_call_chain(<<B>>)
add_command("B", "B", <<["INTEGER", "B"], ["e", "INTEGER"], ["e", "BOOLEAN"]>>)
int_value (17)
equals
logical_negation
logical_negation
add_command("B", "A", <<["A", "a"], ["BOOLEAN", "INTEGER"], ["c", "INTEGER"], ["b", "a"]>>)
numerical_negation
less_than
int_value (46)
add_call_chain(<<e,d,d,BOOLEAN>>)
int_value (27)
bool_value (true)
generate_java_code
add_class(B)
add_class(BOOLEAN)
add_query("b", "d", <<["b", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["e", "INTEGER"], ["A", "c"], ["a", "e"]>>, "a")
logical_negation
add_attribute("D", "B", "B")
add_query("d", "A", <<["B", "INTEGER"], ["B", "b"], ["a", "INTEGER"], ["B", "BOOLEAN"]>>, "B")
type_check
subtraction
equals
bool_value (true)
add_query("B", "c", <<["C", "INTEGER"], ["D", "BOOLEAN"]>>, "D")
generate_java_code
type_check
disjunction
int_value (39)
add_query("a", "D", <<["C", "e"]>>, "C")
add_attribute("B", "c", "BOOLEAN")
logical_negation
disjunction
add_call_chain(<<C,b,B,c,C,d,e>>)
bool_value (true)
generate_java_code
add_call_chain(<<b,B,d,A,a,c>>)
greater_than
type_check
int_value (32)
add_class(b)
int_value (31)
add_query("D", "INTEGER", <<["a", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["INTEGER", "c"], ["C", "BOOLEAN"], ["INTEGER", "INTEGER"], ["b", "INTEGER"]>>, "A")
int_value (39)
bool_value (true)
numerical_negation
add_call_chain(<<b,e,B,A,e,B,a,a>>)
add_query("b", "a", <<["e", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"]>>, "b")
modulo
greater_than
add_call_chain(<<INTEGER>>)
add_call_chain(<<e,C,C,d,e>>)
add_command("e", "BOOLEAN", <<["a", "B"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["e", "INTEGER"], ["e", "B"], ["a", "BOOLEAN"], ["b", "a"]>>)
bool_value (true)
add_query("B", "B", <<["c", "INTEGER"], ["d", "BOOLEAN"], ["A", "INTEGER"], ["e", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["a", "BOOLEAN"]>>, "INTEGER")
logical_negation
add_call_chain(<<C,B,e,d,a,B,D,B>>)
type_check
add_call_chain(<<A,B,a>>)
add_attribute("e", "A", "e")
add_command("A", "a", <<["e", "d"], ["B", "INTEGER"], ["D", "BOOLEAN"]>>)
numerical_negation
add_command("b", "BOOLEAN", <<["c", "INTEGER"], ["d", "b"], ["B", "c"]>>)
add_attribute("c", "A", "INTEGER")
bool_value (true)
logical_negation
int_value (35)
modulo
subtraction
int_value (44)
add_class(BOOLEAN)
add_attribute("INTEGER", "d", "BOOLEAN")
greater_than
int_value (19)
add_command("INTEGER", "c", <<["C", "INTEGER"], ["c", "BOOLEAN"], ["D", "INTEGER"], ["BOOLEAN", "INTEGER"], ["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"], ["INTEGER", "INTEGER"], ["INTEGER", "C"]>>)
generate_java_code
add_command("D", "b", <<["a", "BOOLEAN"], ["a", "INTEGER"], ["D", "INTEGER"], ["D", "INTEGER"], ["INTEGER", "INTEGER"], ["A", "BOOLEAN"], ["A", "c"]>>)
add_class(e)
add_query("B", "BOOLEAN", <<["d", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "b"], ["c", "INTEGER"], ["c", "INTEGER"], ["b", "INTEGER"], ["D", "BOOLEAN"], ["c", "INTEGER"]>>, "c")
type_check
logical_negation
int_value (29)
int_value (32)
less_than
bool_value (false)
add_attribute("b", "BOOLEAN", "INTEGER")
add_call_chain(<<a,b,D,d,d,b,d>>)
int_value (30)
add_query("c", "A", <<["b", "INTEGER"], ["b", "a"], ["B", "BOOLEAN"], ["a", "INTEGER"], ["e", "BOOLEAN"], ["e", "INTEGER"], ["c", "INTEGER"], ["a", "INTEGER"], ["e", "BOOLEAN"]>>, "c")
int_value (9)
logical_negation
bool_value (true)
add_call_chain(<<A,d,A,BOOLEAN,e,b,D,e,C>>)
type_check
add_class(D)
add_call_chain(<<b,BOOLEAN,A,d>>)
add_call_chain(<<D>>)
disjunction
add_class(b)
add_command("D", "B", <<["BOOLEAN", "c"], ["b", "D"], ["d", "BOOLEAN"], ["c", "A"], ["a", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["C", "c"]>>)
add_command("B", "c", <<["C", "BOOLEAN"], ["INTEGER", "c"], ["C", "BOOLEAN"], ["e", "e"], ["b", "BOOLEAN"], ["c", "INTEGER"]>>)
type_check
logical_negation
type_check
add_class(A)
add_command("d", "C", <<["D", "BOOLEAN"], ["A", "INTEGER"], ["a", "BOOLEAN"], ["a", "b"], ["INTEGER", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["C", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["BOOLEAN", "INTEGER"]>>)
type_check
add_attribute("B", "D", "INTEGER")
type_check
add_attribute("d", "d", "A")
numerical_negation
add_query("c", "b", <<["C", "BOOLEAN"], ["a", "INTEGER"], ["d", "a"]>>, "A")
add_class(B)
logical_negation
addition
logical_negation
logical_negation
add_attribute("INTEGER", "b", "INTEGER")
int_value (37)
add_call_chain(<<A,b,e>>)
type_check
bool_value (true)
add_call_chain(<<c,d,e,a,BOOLEAN,B,D>>)
add_attribute("e", "a", "C")
type_check
add_query("A", "B", <<["INTEGER", "BOOLEAN"], ["B", "A"]>>, "b")
equals
logical_negation
add_query("C", "d", <<["d", "c"], ["A", "B"], ["A", "INTEGER"], ["A", "INTEGER"], ["d", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "INTEGER"], ["C", "d"]>>, "c")
add_call_chain(<<A,d,D>>)
add_call_chain(<<e,b,b,B,c,c,D,INTEGER,A>>)
add_attribute("B", "d", "BOOLEAN")
add_class(B)
int_value (24)
add_call_chain(<<d,C,B,d,B,B,A>>)
add_class(C)
add_command("B", "C", <<["D", "C"], ["a", "B"]>>)
numerical_negation
add_attribute("c", "e", "e")
add_attribute("D", "a", "INTEGER")
numerical_negation
numerical_negation
add_command("e", "A", <<["b", "INTEGER"]>>)
logical_negation
int_value (9)
equals
add_attribute("e", "B", "INTEGER")
generate_java_code
add_call_chain(<<BOOLEAN,e,B,e,INTEGER,BOOLEAN,b>>)
add_attribute("e", "e", "C")
add_attribute("a", "e", "B")
add_call_chain(<<D,b,d,B,INTEGER>>)
add_class(d)
bool_value (false)
int_value (40)
add_query("C", "c", <<["e", "INTEGER"], ["a", "BOOLEAN"], ["e", "e"], ["BOOLEAN", "INTEGER"], ["BOOLEAN", "INTEGER"]>>, "B")
add_attribute("c", "d", "BOOLEAN")
disjunction
numerical_negation
add_call_chain(<<b,c>>)
add_call_chain(<<a,C,d,B,B>>)
