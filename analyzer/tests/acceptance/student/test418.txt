add_query("d", "D", <<["B", "INTEGER"], ["D", "INTEGER"], ["d", "INTEGER"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["b", "BOOLEAN"], ["c", "BOOLEAN"], ["d", "INTEGER"]>>, "C")
numerical_negation
add_call_chain(<<c,e,b,e>>)
add_command("D", "C", <<["C", "BOOLEAN"], ["A", "B"], ["B", "BOOLEAN"]>>)
add_call_chain(<<b,e,A,A>>)
add_call_chain(<<BOOLEAN,a,A,B,A,D,a>>)
add_call_chain(<<B,A>>)
disjunction
add_attribute("C", "C", "BOOLEAN")
logical_negation
add_query("a", "B", <<["d", "c"], ["B", "INTEGER"], ["C", "INTEGER"], ["d", "INTEGER"], ["B", "BOOLEAN"]>>, "A")
int_value (22)
bool_value (true)
add_call_chain(<<d,INTEGER,INTEGER,b,D,d,d,INTEGER,d>>)
numerical_negation
numerical_negation
quotient
add_attribute("e", "b", "BOOLEAN")
add_command("B", "d", <<["d", "C"], ["C", "INTEGER"], ["BOOLEAN", "e"]>>)
add_command("A", "A", <<["a", "INTEGER"], ["c", "BOOLEAN"], ["C", "INTEGER"]>>)
add_attribute("d", "A", "BOOLEAN")
add_class(D)
type_check
add_class(B)
logical_negation
add_class(e)
numerical_negation
logical_negation
add_call_chain(<<A,D,A,d>>)
add_query("A", "c", <<["C", "BOOLEAN"], ["D", "C"], ["e", "BOOLEAN"], ["c", "C"]>>, "a")
disjunction
int_value (15)
add_command("INTEGER", "e", <<["e", "b"], ["c", "BOOLEAN"], ["a", "INTEGER"], ["d", "BOOLEAN"], ["A", "INTEGER"], ["c", "INTEGER"], ["c", "INTEGER"], ["A", "BOOLEAN"], ["d", "INTEGER"]>>)
add_call_chain(<<C,INTEGER,A,c>>)
bool_value (true)
add_call_chain(<<c,d,c,B,C,b,B>>)
conjunction
add_attribute("D", "a", "A")
logical_negation
disjunction
int_value (29)
add_command("C", "A", <<["c", "INTEGER"], ["D", "INTEGER"], ["e", "INTEGER"], ["A", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "D"], ["C", "a"]>>)
add_call_chain(<<B,A,C,a,D,D>>)
bool_value (true)
add_query("C", "d", <<["C", "INTEGER"], ["d", "INTEGER"], ["e", "C"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["D", "C"], ["B", "BOOLEAN"], ["C", "INTEGER"]>>, "b")
add_query("a", "b", <<["d", "BOOLEAN"], ["B", "A"]>>, "B")
add_attribute("C", "a", "BOOLEAN")
add_attribute("B", "A", "BOOLEAN")
conjunction
int_value (45)
add_call_chain(<<INTEGER,C,a,D,B,D,C>>)
add_command("a", "d", <<["c", "BOOLEAN"], ["d", "BOOLEAN"], ["INTEGER", "A"], ["D", "b"], ["C", "INTEGER"], ["b", "INTEGER"], ["b", "e"], ["c", "BOOLEAN"], ["INTEGER", "d"]>>)
disjunction
add_call_chain(<<d>>)
add_call_chain(<<INTEGER,BOOLEAN,BOOLEAN,C,B,d,c,A>>)
logical_negation
add_command("b", "INTEGER", <<["d", "BOOLEAN"], ["a", "INTEGER"], ["C", "INTEGER"], ["C", "INTEGER"], ["B", "a"], ["b", "B"], ["b", "BOOLEAN"]>>)
add_command("D", "B", <<["C", "d"]>>)
add_query("a", "B", <<["d", "a"], ["e", "BOOLEAN"]>>, "B")
numerical_negation
int_value (23)
add_call_chain(<<b,b,A>>)
bool_value (true)
add_query("e", "INTEGER", <<["INTEGER", "b"], ["c", "BOOLEAN"], ["INTEGER", "INTEGER"], ["b", "BOOLEAN"], ["C", "B"], ["B", "BOOLEAN"], ["d", "C"], ["C", "INTEGER"]>>, "C")
conjunction
add_query("D", "B", <<["B", "INTEGER"], ["b", "BOOLEAN"]>>, "B")
add_attribute("A", "e", "INTEGER")
int_value (20)
bool_value (true)
generate_java_code
logical_negation
type_check
conjunction
add_query("BOOLEAN", "d", <<["a", "INTEGER"]>>, "c")
add_class(b)
bool_value (false)
bool_value (true)
int_value (39)
add_command("a", "B", <<["BOOLEAN", "B"], ["d", "BOOLEAN"]>>)
addition
numerical_negation
logical_negation
int_value (42)
add_call_chain(<<B,D,d>>)
add_query("B", "D", <<["A", "BOOLEAN"], ["d", "a"], ["A", "INTEGER"], ["BOOLEAN", "A"], ["a", "INTEGER"], ["d", "INTEGER"], ["A", "BOOLEAN"], ["A", "e"], ["A", "B"]>>, "c")
int_value (9)
add_call_chain(<<INTEGER,C,D,C,e,e,c>>)
add_attribute("d", "a", "BOOLEAN")
generate_java_code
add_attribute("D", "a", "BOOLEAN")
add_attribute("D", "D", "A")
add_attribute("INTEGER", "A", "BOOLEAN")
bool_value (true)
less_than
add_class(c)
add_query("a", "B", <<["d", "INTEGER"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["C", "INTEGER"]>>, "C")
addition
bool_value (false)
add_class(C)
subtraction
int_value (2)
add_attribute("d", "B", "BOOLEAN")
disjunction
numerical_negation
add_query("D", "B", <<["c", "BOOLEAN"], ["D", "d"], ["e", "INTEGER"], ["d", "BOOLEAN"], ["D", "c"], ["c", "BOOLEAN"], ["C", "INTEGER"], ["B", "INTEGER"]>>, "A")
bool_value (true)
logical_negation
type_check
greater_than
conjunction
type_check
add_attribute("a", "e", "BOOLEAN")
add_call_chain(<<D,A,D,b,b,c,D>>)
type_check
add_call_chain(<<d,b,C,D,C,D,A,a,B>>)
generate_java_code
int_value (16)
int_value (31)
bool_value (false)
add_class(BOOLEAN)
add_attribute("C", "D", "INTEGER")
int_value (38)
type_check
add_command("d", "c", <<["D", "C"]>>)
add_query("D", "A", <<["D", "BOOLEAN"], ["INTEGER", "INTEGER"]>>, "C")
add_command("c", "D", <<["d", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["d", "A"], ["B", "BOOLEAN"], ["c", "D"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["B", "INTEGER"], ["e", "A"]>>)
add_class(b)
add_class(A)
add_command("C", "e", <<["e", "D"], ["A", "BOOLEAN"], ["C", "D"], ["e", "D"], ["B", "INTEGER"], ["c", "d"]>>)
logical_negation
add_attribute("c", "C", "INTEGER")
equals
numerical_negation
equals
greater_than
conjunction
add_call_chain(<<d>>)
add_command("c", "b", <<["B", "INTEGER"], ["B", "B"], ["b", "INTEGER"], ["D", "D"], ["c", "INTEGER"], ["c", "INTEGER"], ["b", "A"]>>)
add_class(B)
generate_java_code
add_call_chain(<<C,c,BOOLEAN,b,B,c,B,B>>)
add_class(d)
add_command("D", "a", <<["A", "a"], ["a", "BOOLEAN"], ["d", "c"]>>)
add_class(e)
add_class(BOOLEAN)
add_call_chain(<<BOOLEAN,A,c,D,A>>)
add_call_chain(<<INTEGER,A,e>>)
add_query("D", "D", <<["C", "INTEGER"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "d"], ["C", "BOOLEAN"], ["A", "INTEGER"]>>, "INTEGER")
add_attribute("INTEGER", "D", "INTEGER")
add_call_chain(<<C,B,B,c,d,BOOLEAN,c,C,d>>)
type_check
bool_value (false)
int_value (20)
bool_value (false)
bool_value (true)
add_call_chain(<<BOOLEAN>>)
quotient
numerical_negation
add_attribute("a", "b", "b")
bool_value (false)
bool_value (false)
add_class(d)
numerical_negation
add_attribute("B", "b", "C")
logical_negation
add_query("D", "c", <<["B", "b"], ["D", "BOOLEAN"], ["BOOLEAN", "c"], ["B", "D"], ["A", "a"]>>, "B")
add_command("b", "b", <<["D", "b"], ["b", "INTEGER"], ["D", "INTEGER"], ["a", "b"], ["b", "BOOLEAN"], ["b", "INTEGER"], ["a", "BOOLEAN"], ["b", "BOOLEAN"]>>)
add_call_chain(<<D,D,A,D,d,c,a>>)
add_command("a", "D", <<["C", "INTEGER"]>>)
add_call_chain(<<d,d,B,D,D,e>>)
add_query("BOOLEAN", "D", <<["d", "C"], ["a", "INTEGER"], ["e", "INTEGER"], ["e", "INTEGER"], ["d", "INTEGER"], ["d", "BOOLEAN"], ["b", "INTEGER"], ["b", "INTEGER"], ["c", "BOOLEAN"]>>, "A")
add_command("d", "C", <<["b", "D"], ["a", "BOOLEAN"], ["a", "c"]>>)
equals
int_value (7)
logical_negation
bool_value (true)
add_query("a", "c", <<["a", "b"]>>, "a")
logical_negation
add_call_chain(<<c,BOOLEAN,A,b,e,a,D,D,a>>)
add_call_chain(<<D>>)
add_command("c", "b", <<["A", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "INTEGER"], ["e", "INTEGER"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["e", "BOOLEAN"]>>)
add_command("BOOLEAN", "BOOLEAN", <<["e", "INTEGER"], ["D", "INTEGER"]>>)
add_command("e", "B", <<["INTEGER", "INTEGER"]>>)
add_call_chain(<<C,b>>)
logical_negation
generate_java_code
conjunction
logical_negation
numerical_negation
add_command("d", "A", <<["B", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["c", "INTEGER"], ["e", "BOOLEAN"], ["D", "e"]>>)
bool_value (false)
generate_java_code
conjunction
add_query("a", "c", <<["D", "BOOLEAN"], ["B", "INTEGER"], ["A", "e"], ["b", "INTEGER"], ["C", "d"], ["d", "INTEGER"], ["b", "C"], ["e", "BOOLEAN"]>>, "C")
add_attribute("b", "C", "BOOLEAN")
less_than
add_class(a)
add_call_chain(<<d,C,B>>)
less_than
int_value (35)
add_call_chain(<<B,C,C,d,b,C,d,BOOLEAN,A>>)
add_command("b", "C", <<["D", "INTEGER"]>>)
add_attribute("e", "c", "BOOLEAN")
conjunction
