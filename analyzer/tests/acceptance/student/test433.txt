add_call_chain(<<b,A,B,d,e,C,C,d>>)
modulo
numerical_negation
conjunction
add_call_chain(<<c,d>>)
bool_value (false)
add_call_chain(<<a,c,BOOLEAN,c,b>>)
bool_value (false)
bool_value (false)
less_than
add_class(b)
add_command("e", "e", <<["D", "BOOLEAN"], ["INTEGER", "A"], ["C", "D"], ["BOOLEAN", "D"], ["b", "BOOLEAN"], ["D", "C"]>>)
add_call_chain(<<c,B,d,b,e,A>>)
add_call_chain(<<A,D>>)
numerical_negation
add_class(A)
add_call_chain(<<A>>)
add_attribute("A", "B", "BOOLEAN")
add_call_chain(<<A,e,B,D,B,c>>)
logical_negation
bool_value (true)
numerical_negation
numerical_negation
add_class(C)
add_class(b)
int_value (5)
add_query("d", "A", <<["BOOLEAN", "INTEGER"], ["d", "d"], ["a", "a"], ["A", "BOOLEAN"]>>, "a")
add_call_chain(<<C,c,b,B,C,D,INTEGER,A>>)
add_command("c", "B", <<["B", "INTEGER"], ["a", "BOOLEAN"], ["c", "INTEGER"], ["D", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>)
add_attribute("a", "D", "INTEGER")
add_attribute("B", "c", "INTEGER")
int_value (13)
bool_value (true)
logical_negation
bool_value (false)
equals
add_call_chain(<<b>>)
type_check
numerical_negation
add_command("b", "c", <<["D", "c"], ["c", "INTEGER"], ["B", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "C"], ["A", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "c"], ["C", "C"]>>)
conjunction
add_attribute("BOOLEAN", "D", "INTEGER")
add_call_chain(<<e,B,B,b,C,b,BOOLEAN,a>>)
add_attribute("a", "B", "INTEGER")
add_attribute("B", "B", "INTEGER")
add_attribute("C", "B", "D")
logical_negation
int_value (27)
add_attribute("e", "B", "INTEGER")
add_query("b", "c", <<["A", "INTEGER"], ["c", "INTEGER"], ["B", "INTEGER"], ["d", "C"], ["BOOLEAN", "BOOLEAN"], ["e", "a"]>>, "c")
add_command("B", "C", <<["BOOLEAN", "c"], ["b", "BOOLEAN"], ["e", "BOOLEAN"]>>)
add_call_chain(<<c,b,c,B,INTEGER,C>>)
bool_value (false)
add_class(C)
less_than
add_query("INTEGER", "C", <<["INTEGER", "INTEGER"]>>, "d")
numerical_negation
add_call_chain(<<d,b,BOOLEAN,a,b,INTEGER,c>>)
add_class(C)
add_command("e", "C", <<["D", "c"], ["B", "INTEGER"], ["C", "INTEGER"], ["A", "D"], ["A", "C"]>>)
add_class(D)
bool_value (true)
equals
add_query("INTEGER", "a", <<["INTEGER", "INTEGER"], ["B", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["C", "INTEGER"], ["B", "B"], ["d", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "INTEGER"], ["INTEGER", "C"]>>, "BOOLEAN")
add_call_chain(<<a>>)
add_attribute("A", "b", "INTEGER")
add_call_chain(<<B,d,D,B,INTEGER,A,d,B,C>>)
disjunction
bool_value (true)
generate_java_code
add_command("b", "b", <<["a", "c"], ["C", "INTEGER"], ["D", "INTEGER"], ["e", "INTEGER"], ["D", "BOOLEAN"], ["C", "INTEGER"]>>)
less_than
int_value (24)
add_attribute("D", "B", "BOOLEAN")
add_command("C", "d", <<["b", "INTEGER"], ["B", "c"], ["C", "BOOLEAN"]>>)
bool_value (true)
numerical_negation
add_attribute("B", "A", "BOOLEAN")
quotient
add_attribute("A", "B", "BOOLEAN")
bool_value (true)
add_call_chain(<<D,d>>)
logical_negation
add_attribute("B", "d", "B")
add_call_chain(<<A,c>>)
logical_negation
add_query("D", "c", <<["C", "INTEGER"], ["A", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "B"]>>, "A")
modulo
add_attribute("D", "INTEGER", "a")
add_query("e", "B", <<["BOOLEAN", "D"], ["d", "BOOLEAN"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["c", "BOOLEAN"]>>, "b")
add_command("c", "b", <<["D", "BOOLEAN"], ["A", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["C", "INTEGER"], ["a", "INTEGER"], ["e", "INTEGER"], ["b", "a"]>>)
add_class(a)
int_value (42)
add_call_chain(<<A,b,A,D,a,D,BOOLEAN,a>>)
add_attribute("a", "D", "B")
int_value (18)
bool_value (true)
add_attribute("b", "e", "BOOLEAN")
add_command("A", "B", <<["INTEGER", "INTEGER"], ["A", "INTEGER"], ["A", "BOOLEAN"], ["c", "d"], ["b", "BOOLEAN"], ["A", "INTEGER"], ["a", "INTEGER"]>>)
add_query("B", "A", <<["BOOLEAN", "BOOLEAN"], ["a", "INTEGER"]>>, "A")
add_command("C", "A", <<["C", "B"], ["INTEGER", "BOOLEAN"], ["d", "A"], ["D", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "INTEGER"], ["C", "BOOLEAN"]>>)
add_attribute("D", "D", "INTEGER")
conjunction
add_call_chain(<<B,e,b,b,C,A,A>>)
add_query("c", "b", <<["c", "INTEGER"], ["e", "a"]>>, "B")
add_call_chain(<<e,BOOLEAN,A,a,c,B,D>>)
add_call_chain(<<e,d,a,A,b>>)
type_check
add_attribute("c", "a", "C")
subtraction
logical_negation
greater_than
add_attribute("B", "b", "C")
numerical_negation
add_attribute("C", "B", "BOOLEAN")
numerical_negation
logical_negation
add_attribute("e", "c", "INTEGER")
type_check
generate_java_code
add_call_chain(<<b,d,A,A,A>>)
int_value (19)
add_command("A", "D", <<["d", "INTEGER"], ["D", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["BOOLEAN", "A"], ["D", "BOOLEAN"]>>)
bool_value (false)
add_query("D", "A", <<["BOOLEAN", "BOOLEAN"], ["D", "INTEGER"], ["e", "BOOLEAN"], ["INTEGER", "INTEGER"]>>, "A")
add_class(c)
add_call_chain(<<C,INTEGER,c,A,D,BOOLEAN,BOOLEAN,A,c>>)
add_call_chain(<<A,D,C>>)
add_attribute("c", "a", "BOOLEAN")
add_call_chain(<<D,B,C>>)
add_class(B)
type_check
add_query("C", "BOOLEAN", <<["b", "BOOLEAN"], ["D", "INTEGER"], ["INTEGER", "BOOLEAN"], ["b", "INTEGER"], ["B", "B"], ["B", "INTEGER"]>>, "c")
quotient
numerical_negation
type_check
bool_value (false)
add_command("D", "A", <<["b", "B"], ["c", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>)
bool_value (false)
int_value (6)
disjunction
bool_value (true)
numerical_negation
add_call_chain(<<c,c,e,d,C,d>>)
add_call_chain(<<a,C,b,c,A>>)
add_command("e", "D", <<["a", "a"]>>)
add_call_chain(<<A>>)
type_check
logical_negation
type_check
logical_negation
add_query("C", "b", <<["a", "BOOLEAN"], ["INTEGER", "INTEGER"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["D", "B"], ["C", "INTEGER"], ["D", "INTEGER"], ["C", "INTEGER"], ["B", "INTEGER"]>>, "e")
add_attribute("D", "e", "BOOLEAN")
add_call_chain(<<B,a,b,A,a,INTEGER,A>>)
conjunction
disjunction
bool_value (false)
int_value (21)
add_query("c", "D", <<["d", "BOOLEAN"], ["C", "d"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "BOOLEAN"]>>, "D")
add_call_chain(<<a,b>>)
conjunction
add_call_chain(<<B,A,C,A,B,d,C,BOOLEAN,B>>)
add_call_chain(<<B,e,e>>)
int_value (31)
add_call_chain(<<INTEGER>>)
greater_than
quotient
int_value (22)
numerical_negation
add_call_chain(<<e>>)
int_value (22)
bool_value (false)
add_command("D", "C", <<["B", "a"], ["c", "INTEGER"], ["d", "INTEGER"], ["B", "BOOLEAN"], ["A", "C"], ["c", "BOOLEAN"]>>)
add_attribute("C", "A", "C")
numerical_negation
disjunction
logical_negation
add_command("A", "INTEGER", <<["d", "INTEGER"], ["a", "INTEGER"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["b", "A"], ["a", "BOOLEAN"]>>)
add_attribute("b", "b", "C")
add_query("d", "b", <<["C", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["c", "INTEGER"], ["e", "INTEGER"], ["a", "a"]>>, "b")
add_call_chain(<<D,A,d,e,A,c>>)
add_call_chain(<<c,C,e,a,A,D,C,A,C>>)
multiplication
type_check
add_call_chain(<<C>>)
add_attribute("B", "C", "BOOLEAN")
add_call_chain(<<A,C,A,C,d,D,c>>)
add_attribute("D", "D", "INTEGER")
type_check
numerical_negation
logical_negation
numerical_negation
add_call_chain(<<D,B>>)
add_command("b", "b", <<["e", "INTEGER"], ["B", "INTEGER"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
add_call_chain(<<B,C,e>>)
disjunction
logical_negation
add_call_chain(<<e>>)
add_query("c", "b", <<["d", "A"], ["D", "b"], ["B", "INTEGER"]>>, "B")
numerical_negation
generate_java_code
bool_value (true)
add_query("a", "b", <<["b", "INTEGER"]>>, "c")
int_value (10)
add_attribute("D", "C", "d")
type_check
add_query("C", "B", <<["c", "c"]>>, "D")
add_attribute("D", "C", "INTEGER")
generate_java_code
add_query("a", "b", <<["INTEGER", "BOOLEAN"], ["D", "C"], ["a", "BOOLEAN"], ["D", "C"]>>, "b")
add_command("B", "d", <<["C", "BOOLEAN"], ["INTEGER", "INTEGER"], ["e", "INTEGER"], ["d", "BOOLEAN"], ["a", "b"], ["b", "INTEGER"], ["d", "BOOLEAN"], ["b", "BOOLEAN"]>>)
bool_value (true)
add_query("B", "d", <<["d", "A"], ["D", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["a", "INTEGER"], ["d", "BOOLEAN"]>>, "BOOLEAN")
generate_java_code
add_command("a", "B", <<["b", "INTEGER"], ["d", "BOOLEAN"]>>)
add_command("D", "A", <<["a", "INTEGER"], ["B", "BOOLEAN"], ["a", "INTEGER"], ["C", "INTEGER"]>>)
add_command("a", "b", <<["a", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "INTEGER"], ["b", "BOOLEAN"], ["e", "BOOLEAN"]>>)
bool_value (false)
generate_java_code
quotient
int_value (24)
int_value (22)
numerical_negation
add_attribute("e", "a", "INTEGER")
multiplication
disjunction
add_query("B", "b", <<["B", "INTEGER"], ["c", "B"], ["A", "BOOLEAN"], ["B", "b"], ["c", "A"], ["e", "BOOLEAN"]>>, "B")
type_check
add_query("B", "A", <<["b", "c"], ["C", "B"], ["A", "BOOLEAN"], ["C", "BOOLEAN"]>>, "D")
add_call_chain(<<d,a,B,D,D,B,D,d>>)
type_check
generate_java_code
add_query("C", "B", <<["C", "BOOLEAN"], ["C", "e"], ["a", "D"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "BOOLEAN"]>>, "C")
add_command("A", "b", <<["INTEGER", "INTEGER"], ["c", "C"], ["C", "a"], ["a", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["a", "B"], ["B", "D"], ["D", "b"]>>)
generate_java_code
add_call_chain(<<c,INTEGER,b,D>>)
int_value (17)
bool_value (false)
add_attribute("d", "INTEGER", "A")
numerical_negation
generate_java_code
add_call_chain(<<C,C,A,B,C,A,c>>)
add_attribute("e", "C", "INTEGER")
add_command("c", "b", <<["e", "INTEGER"], ["B", "BOOLEAN"], ["B", "d"], ["C", "INTEGER"], ["c", "BOOLEAN"], ["c", "BOOLEAN"]>>)
int_value (5)
logical_negation
add_attribute("D", "b", "BOOLEAN")
add_query("d", "C", <<["BOOLEAN", "INTEGER"], ["B", "B"]>>, "INTEGER")
add_command("a", "C", <<["B", "d"], ["D", "INTEGER"], ["c", "D"]>>)
int_value (22)
