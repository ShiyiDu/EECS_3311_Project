int_value (20)
add_call_chain(<<B,B,D,b,B>>)
numerical_negation
add_attribute("D", "C", "BOOLEAN")
add_attribute("A", "BOOLEAN", "INTEGER")
int_value (3)
add_call_chain(<<A,A,B,B,b,d>>)
equals
generate_java_code
add_query("b", "A", <<["C", "INTEGER"], ["D", "INTEGER"]>>, "b")
add_attribute("e", "b", "b")
int_value (22)
equals
add_attribute("a", "B", "BOOLEAN")
add_query("d", "a", <<["D", "BOOLEAN"], ["D", "e"], ["d", "INTEGER"]>>, "e")
add_command("d", "c", <<["BOOLEAN", "BOOLEAN"], ["D", "b"], ["c", "BOOLEAN"], ["b", "INTEGER"], ["c", "INTEGER"], ["A", "B"], ["C", "INTEGER"], ["INTEGER", "D"]>>)
generate_java_code
numerical_negation
add_call_chain(<<B,e,c>>)
numerical_negation
equals
int_value (26)
disjunction
add_command("C", "C", <<["c", "INTEGER"]>>)
numerical_negation
add_command("d", "c", <<["B", "e"], ["a", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "INTEGER"], ["B", "INTEGER"], ["a", "BOOLEAN"], ["BOOLEAN", "d"], ["d", "INTEGER"]>>)
numerical_negation
add_class(C)
bool_value (true)
bool_value (false)
add_call_chain(<<b,c,d,D,INTEGER,C,BOOLEAN,A>>)
generate_java_code
add_call_chain(<<c,A,C,C,BOOLEAN,B>>)
add_command("D", "b", <<["C", "B"], ["INTEGER", "BOOLEAN"], ["d", "B"], ["A", "INTEGER"], ["C", "e"], ["D", "INTEGER"], ["C", "B"], ["BOOLEAN", "BOOLEAN"], ["B", "INTEGER"]>>)
add_class(b)
add_attribute("e", "A", "A")
numerical_negation
modulo
add_class(c)
add_call_chain(<<A,b,D>>)
int_value (47)
add_class(c)
generate_java_code
type_check
add_command("BOOLEAN", "b", <<["C", "INTEGER"]>>)
add_attribute("A", "D", "e")
add_query("a", "d", <<["e", "BOOLEAN"]>>, "b")
greater_than
generate_java_code
disjunction
int_value (30)
type_check
type_check
int_value (22)
add_command("A", "d", <<["B", "INTEGER"], ["d", "A"], ["C", "a"], ["c", "INTEGER"], ["d", "c"], ["c", "INTEGER"]>>)
add_call_chain(<<e,A,B,a,a,C>>)
less_than
generate_java_code
quotient
bool_value (false)
multiplication
int_value (48)
add_query("e", "C", <<["c", "INTEGER"]>>, "b")
type_check
add_call_chain(<<c,D,D,B,c,d>>)
bool_value (true)
numerical_negation
add_attribute("b", "A", "BOOLEAN")
add_query("C", "a", <<["C", "BOOLEAN"], ["D", "INTEGER"], ["D", "INTEGER"]>>, "D")
int_value (4)
add_call_chain(<<C,c,A,A,b,D,A>>)
conjunction
addition
conjunction
add_command("INTEGER", "b", <<["c", "B"], ["d", "BOOLEAN"], ["e", "INTEGER"], ["D", "c"], ["b", "INTEGER"], ["B", "BOOLEAN"], ["b", "INTEGER"]>>)
numerical_negation
bool_value (true)
add_query("A", "d", <<["d", "BOOLEAN"], ["BOOLEAN", "B"]>>, "b")
add_call_chain(<<C,c,B,A,d,D,D,B,b>>)
add_attribute("B", "INTEGER", "e")
add_call_chain(<<D>>)
add_call_chain(<<d,b,C>>)
add_call_chain(<<a,D,b,e,A>>)
add_query("D", "e", <<["c", "INTEGER"], ["C", "INTEGER"], ["INTEGER", "BOOLEAN"], ["A", "b"]>>, "BOOLEAN")
add_command("b", "d", <<["d", "INTEGER"], ["B", "A"], ["D", "INTEGER"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["BOOLEAN", "A"], ["d", "D"], ["a", "a"]>>)
add_command("c", "e", <<["C", "c"], ["C", "c"], ["B", "INTEGER"]>>)
generate_java_code
type_check
logical_negation
type_check
generate_java_code
bool_value (true)
int_value (36)
conjunction
subtraction
generate_java_code
add_class(a)
int_value (16)
add_class(a)
add_attribute("A", "D", "c")
add_query("a", "A", <<["a", "BOOLEAN"], ["B", "INTEGER"], ["C", "D"], ["INTEGER", "INTEGER"], ["e", "INTEGER"], ["A", "INTEGER"], ["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"]>>, "D")
int_value (39)
add_command("e", "C", <<["a", "c"], ["b", "INTEGER"], ["D", "INTEGER"], ["d", "C"], ["c", "INTEGER"], ["b", "BOOLEAN"], ["D", "BOOLEAN"]>>)
add_query("d", "a", <<["B", "INTEGER"], ["b", "e"]>>, "B")
add_command("c", "a", <<["B", "A"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["e", "BOOLEAN"], ["c", "INTEGER"], ["D", "d"]>>)
bool_value (false)
add_call_chain(<<C,c,e,C,c>>)
add_query("e", "d", <<["A", "BOOLEAN"], ["b", "A"]>>, "A")
add_attribute("INTEGER", "d", "d")
multiplication
add_command("a", "e", <<["d", "BOOLEAN"], ["D", "B"], ["c", "INTEGER"], ["a", "BOOLEAN"], ["e", "INTEGER"]>>)
add_call_chain(<<C>>)
modulo
add_query("B", "c", <<["D", "INTEGER"], ["c", "INTEGER"], ["e", "INTEGER"], ["C", "A"], ["b", "INTEGER"], ["C", "A"]>>, "D")
addition
type_check
add_query("D", "D", <<["d", "INTEGER"], ["a", "BOOLEAN"], ["b", "BOOLEAN"], ["b", "d"], ["A", "INTEGER"]>>, "b")
generate_java_code
add_call_chain(<<B,INTEGER,D,a,d>>)
logical_negation
type_check
add_call_chain(<<a,INTEGER,b,b,B>>)
add_class(d)
disjunction
add_attribute("D", "d", "BOOLEAN")
add_class(INTEGER)
equals
add_call_chain(<<INTEGER,c,INTEGER,D,B,b>>)
add_class(C)
add_query("e", "A", <<["A", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "B"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "INTEGER"], ["b", "INTEGER"], ["D", "INTEGER"]>>, "e")
add_call_chain(<<A,a>>)
add_query("A", "b", <<["e", "BOOLEAN"], ["B", "INTEGER"], ["e", "INTEGER"], ["a", "e"], ["c", "B"], ["d", "INTEGER"], ["D", "BOOLEAN"]>>, "B")
add_call_chain(<<c,A,A,d,C>>)
add_call_chain(<<BOOLEAN,C,d,C,b,B,D>>)
add_attribute("D", "a", "B")
generate_java_code
logical_negation
add_query("d", "B", <<["BOOLEAN", "BOOLEAN"], ["a", "d"], ["d", "b"], ["INTEGER", "BOOLEAN"], ["b", "INTEGER"], ["e", "A"], ["d", "b"], ["a", "c"]>>, "c")
add_call_chain(<<c,e,b,C,D>>)
add_call_chain(<<INTEGER,C,e,e,A,B,b,d>>)
add_call_chain(<<e,c,A,c,A,b,INTEGER,e>>)
add_query("b", "A", <<["A", "BOOLEAN"]>>, "B")
add_call_chain(<<c,B,B,d,b,a>>)
bool_value (false)
logical_negation
add_command("b", "INTEGER", <<["e", "BOOLEAN"], ["D", "A"], ["INTEGER", "BOOLEAN"], ["D", "INTEGER"]>>)
conjunction
numerical_negation
add_command("B", "a", <<["D", "A"], ["d", "b"], ["d", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "INTEGER"], ["C", "B"], ["D", "c"], ["d", "d"], ["D", "c"]>>)
disjunction
int_value (20)
add_command("a", "e", <<["D", "INTEGER"], ["b", "BOOLEAN"], ["a", "INTEGER"], ["d", "BOOLEAN"], ["b", "A"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["A", "INTEGER"], ["b", "C"]>>)
add_command("A", "c", <<["D", "A"], ["B", "INTEGER"], ["A", "INTEGER"], ["BOOLEAN", "INTEGER"], ["a", "BOOLEAN"], ["a", "INTEGER"], ["a", "e"]>>)
int_value (44)
add_call_chain(<<c,A,INTEGER,BOOLEAN,d,D,B>>)
numerical_negation
add_call_chain(<<INTEGER,d,B,A,b,INTEGER,d,D,A>>)
type_check
int_value (26)
add_call_chain(<<e,c,A,C,b>>)
add_class(B)
numerical_negation
bool_value (false)
add_call_chain(<<B>>)
logical_negation
type_check
add_query("A", "B", <<["C", "INTEGER"], ["A", "INTEGER"], ["b", "INTEGER"], ["B", "INTEGER"], ["d", "b"]>>, "A")
add_query("A", "A", <<["d", "INTEGER"], ["D", "BOOLEAN"], ["INTEGER", "INTEGER"], ["b", "INTEGER"], ["b", "INTEGER"], ["c", "INTEGER"]>>, "e")
numerical_negation
add_command("c", "c", <<["a", "BOOLEAN"]>>)
add_query("e", "INTEGER", <<["A", "INTEGER"], ["e", "b"], ["c", "INTEGER"], ["e", "INTEGER"]>>, "b")
add_query("d", "d", <<["d", "A"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "b"], ["A", "BOOLEAN"]>>, "INTEGER")
disjunction
add_query("c", "BOOLEAN", <<["e", "BOOLEAN"], ["a", "INTEGER"], ["d", "e"], ["BOOLEAN", "INTEGER"], ["BOOLEAN", "INTEGER"], ["A", "INTEGER"], ["D", "INTEGER"], ["d", "INTEGER"]>>, "c")
add_attribute("A", "A", "BOOLEAN")
int_value (45)
add_query("B", "e", <<["D", "BOOLEAN"], ["e", "INTEGER"], ["b", "D"], ["C", "BOOLEAN"], ["INTEGER", "INTEGER"]>>, "e")
bool_value (false)
int_value (29)
type_check
add_attribute("b", "B", "INTEGER")
greater_than
add_attribute("BOOLEAN", "d", "e")
logical_negation
type_check
int_value (28)
