add_query("D", "D", <<["C", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "C"], ["b", "B"], ["B", "C"]>>, "e")
logical_negation
generate_java_code
generate_java_code
add_attribute("b", "c", "c")
add_command("e", "d", <<["C", "INTEGER"], ["a", "D"], ["BOOLEAN", "INTEGER"], ["b", "INTEGER"], ["B", "INTEGER"], ["e", "INTEGER"], ["a", "e"], ["D", "INTEGER"], ["c", "BOOLEAN"]>>)
add_attribute("C", "e", "INTEGER")
logical_negation
add_call_chain(<<BOOLEAN,B,a,c,D,c>>)
add_call_chain(<<A>>)
quotient
add_call_chain(<<c,B,e,b,a,C,A,A>>)
int_value (31)
add_query("D", "D", <<["d", "INTEGER"], ["B", "INTEGER"]>>, "a")
int_value (36)
less_than
less_than
generate_java_code
add_attribute("e", "INTEGER", "A")
add_attribute("INTEGER", "C", "BOOLEAN")
logical_negation
add_command("b", "D", <<["A", "BOOLEAN"]>>)
add_class(c)
type_check
int_value (33)
generate_java_code
add_command("e", "B", <<["A", "d"], ["INTEGER", "BOOLEAN"], ["b", "BOOLEAN"]>>)
logical_negation
numerical_negation
int_value (2)
add_command("d", "BOOLEAN", <<["INTEGER", "INTEGER"], ["b", "INTEGER"], ["a", "INTEGER"]>>)
add_call_chain(<<C>>)
add_attribute("D", "c", "BOOLEAN")
less_than
type_check
add_call_chain(<<B,c,a>>)
add_query("c", "D", <<["B", "BOOLEAN"], ["a", "INTEGER"], ["D", "INTEGER"], ["A", "d"], ["A", "e"], ["A", "INTEGER"], ["d", "BOOLEAN"], ["A", "BOOLEAN"]>>, "e")
add_call_chain(<<A,D>>)
add_class(C)
add_command("D", "e", <<["b", "B"], ["c", "A"], ["A", "INTEGER"], ["e", "BOOLEAN"]>>)
add_query("INTEGER", "d", <<["b", "INTEGER"]>>, "D")
logical_negation
logical_negation
add_query("B", "C", <<["B", "INTEGER"], ["B", "INTEGER"], ["a", "BOOLEAN"], ["B", "C"], ["b", "b"]>>, "e")
greater_than
bool_value (true)
add_call_chain(<<c,D,INTEGER,c,INTEGER,b,INTEGER>>)
bool_value (true)
add_call_chain(<<B>>)
add_query("d", "BOOLEAN", <<["A", "INTEGER"], ["A", "BOOLEAN"], ["C", "B"], ["D", "INTEGER"]>>, "d")
add_call_chain(<<BOOLEAN,a>>)
logical_negation
add_attribute("BOOLEAN", "b", "BOOLEAN")
add_query("a", "d", <<["b", "e"], ["d", "BOOLEAN"], ["B", "C"], ["c", "BOOLEAN"], ["BOOLEAN", "A"], ["A", "INTEGER"], ["a", "b"], ["a", "INTEGER"]>>, "b")
int_value (30)
subtraction
add_call_chain(<<a,B,e,D,c,INTEGER,d,D>>)
add_call_chain(<<C,B,C,d>>)
generate_java_code
add_call_chain(<<C,A,C,a,e>>)
bool_value (true)
logical_negation
add_attribute("C", "B", "B")
logical_negation
add_command("a", "C", <<["C", "b"], ["D", "INTEGER"], ["a", "BOOLEAN"], ["b", "BOOLEAN"]>>)
add_attribute("d", "D", "INTEGER")
greater_than
add_attribute("e", "d", "INTEGER")
add_attribute("e", "A", "B")
int_value (21)
add_class(C)
add_call_chain(<<b,C,BOOLEAN,C,d,c>>)
numerical_negation
numerical_negation
add_query("D", "BOOLEAN", <<["d", "INTEGER"], ["b", "BOOLEAN"]>>, "C")
add_query("c", "A", <<["b", "d"], ["b", "BOOLEAN"], ["c", "INTEGER"], ["D", "c"], ["B", "b"], ["B", "INTEGER"], ["c", "BOOLEAN"]>>, "c")
bool_value (true)
add_attribute("a", "c", "BOOLEAN")
generate_java_code
addition
add_attribute("C", "B", "INTEGER")
add_command("C", "a", <<["D", "D"], ["D", "C"], ["BOOLEAN", "C"]>>)
greater_than
generate_java_code
add_query("d", "c", <<["A", "INTEGER"], ["d", "BOOLEAN"], ["b", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "INTEGER"]>>, "C")
numerical_negation
less_than
add_call_chain(<<d,d,e,A,a>>)
add_class(B)
numerical_negation
int_value (19)
bool_value (true)
bool_value (true)
add_call_chain(<<D>>)
add_command("c", "d", <<["C", "D"], ["d", "INTEGER"], ["a", "b"], ["A", "BOOLEAN"], ["c", "BOOLEAN"]>>)
add_attribute("A", "B", "INTEGER")
add_query("b", "D", <<["B", "e"], ["D", "d"], ["INTEGER", "B"]>>, "C")
add_call_chain(<<d,e,b,A,a,A,e>>)
add_query("C", "C", <<["D", "D"], ["A", "C"], ["d", "a"], ["BOOLEAN", "BOOLEAN"], ["d", "D"], ["B", "INTEGER"], ["d", "BOOLEAN"], ["D", "BOOLEAN"]>>, "c")
numerical_negation
add_class(a)
modulo
disjunction
add_class(d)
add_attribute("c", "b", "INTEGER")
add_call_chain(<<c,A,d,D,c,e,BOOLEAN,BOOLEAN,c>>)
add_class(d)
add_call_chain(<<c,c,b,e,e,a,e,C>>)
add_call_chain(<<D,B,C,A,c,D,A,BOOLEAN,C>>)
multiplication
generate_java_code
numerical_negation
logical_negation
add_call_chain(<<e,C,INTEGER,e,e,a>>)
numerical_negation
type_check
numerical_negation
add_query("D", "a", <<["a", "C"], ["b", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "d"], ["D", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["d", "INTEGER"], ["D", "INTEGER"], ["INTEGER", "INTEGER"]>>, "D")
add_call_chain(<<d,C,a,D,C,C,B,D,INTEGER>>)
add_call_chain(<<A,e,BOOLEAN,C,d,B,INTEGER,A,d>>)
add_command("D", "A", <<["a", "BOOLEAN"], ["d", "d"], ["c", "b"], ["d", "e"], ["c", "INTEGER"]>>)
add_call_chain(<<d,B,A,A,B,a>>)
add_command("b", "A", <<["D", "D"], ["A", "INTEGER"], ["C", "INTEGER"], ["a", "INTEGER"], ["b", "INTEGER"]>>)
add_attribute("B", "A", "BOOLEAN")
add_attribute("c", "d", "INTEGER")
add_attribute("c", "D", "e")
add_attribute("a", "A", "d")
add_query("c", "c", <<["C", "INTEGER"], ["A", "B"], ["c", "d"], ["B", "INTEGER"], ["C", "BOOLEAN"], ["B", "a"], ["D", "INTEGER"], ["d", "INTEGER"], ["B", "b"]>>, "B")
add_command("e", "b", <<["d", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "d"], ["C", "BOOLEAN"], ["b", "C"], ["a", "INTEGER"], ["BOOLEAN", "B"]>>)
add_attribute("c", "b", "BOOLEAN")
add_call_chain(<<b,BOOLEAN,B>>)
type_check
add_attribute("c", "D", "b")
bool_value (true)
add_call_chain(<<C,D>>)
add_query("A", "D", <<["e", "BOOLEAN"], ["D", "INTEGER"], ["D", "INTEGER"], ["a", "INTEGER"]>>, "B")
add_call_chain(<<e,A,C,e,a,C,d>>)
bool_value (false)
numerical_negation
bool_value (true)
add_call_chain(<<e>>)
conjunction
conjunction
add_attribute("a", "B", "BOOLEAN")
add_query("D", "D", <<["d", "BOOLEAN"], ["D", "INTEGER"], ["b", "BOOLEAN"]>>, "INTEGER")
bool_value (false)
generate_java_code
add_call_chain(<<A>>)
generate_java_code
int_value (14)
add_query("C", "d", <<["B", "BOOLEAN"], ["A", "INTEGER"], ["d", "BOOLEAN"]>>, "C")
add_query("INTEGER", "c", <<["d", "D"], ["a", "BOOLEAN"], ["c", "BOOLEAN"], ["BOOLEAN", "A"]>>, "d")
numerical_negation
modulo
add_attribute("e", "C", "BOOLEAN")
numerical_negation
subtraction
int_value (29)
subtraction
add_command("D", "B", <<["A", "BOOLEAN"], ["A", "c"], ["e", "INTEGER"], ["C", "INTEGER"]>>)
add_call_chain(<<e,A,d,b,e,c>>)
modulo
add_attribute("a", "e", "INTEGER")
generate_java_code
numerical_negation
add_call_chain(<<B,C,A>>)
add_query("D", "B", <<["d", "c"], ["c", "BOOLEAN"], ["B", "INTEGER"], ["C", "b"], ["D", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "c"], ["C", "BOOLEAN"]>>, "b")
add_class(INTEGER)
int_value (33)
add_attribute("D", "D", "BOOLEAN")
add_query("BOOLEAN", "e", <<["c", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "B"], ["A", "INTEGER"], ["B", "INTEGER"], ["C", "BOOLEAN"], ["D", "BOOLEAN"]>>, "b")
add_query("A", "c", <<["D", "BOOLEAN"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "a"], ["A", "BOOLEAN"]>>, "d")
add_attribute("BOOLEAN", "D", "INTEGER")
add_call_chain(<<B,e,d,C,B,B,B>>)
add_call_chain(<<B,B,b,BOOLEAN>>)
add_command("e", "b", <<["A", "c"], ["A", "C"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["C", "INTEGER"], ["b", "c"]>>)
type_check
add_call_chain(<<a,a>>)
add_query("a", "d", <<["d", "BOOLEAN"], ["a", "b"], ["D", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "b"], ["A", "INTEGER"], ["b", "INTEGER"]>>, "D")
modulo
quotient
less_than
logical_negation
add_command("D", "c", <<["d", "D"], ["a", "BOOLEAN"], ["A", "INTEGER"], ["e", "INTEGER"], ["D", "BOOLEAN"], ["A", "b"], ["BOOLEAN", "BOOLEAN"], ["D", "BOOLEAN"]>>)
generate_java_code
bool_value (false)
add_call_chain(<<e,b,e,A,d,B,b,c>>)
addition
add_query("B", "D", <<["e", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "C"], ["e", "INTEGER"], ["c", "INTEGER"], ["a", "INTEGER"]>>, "d")
int_value (12)
int_value (29)
add_attribute("C", "c", "INTEGER")
add_class(a)
add_command("B", "d", <<["C", "INTEGER"], ["a", "INTEGER"], ["c", "C"], ["b", "BOOLEAN"], ["c", "BOOLEAN"]>>)
add_class(C)
int_value (42)
add_call_chain(<<a,A,c,INTEGER,B,BOOLEAN,e,B,c>>)
add_class(e)
numerical_negation
add_query("B", "b", <<["c", "INTEGER"], ["INTEGER", "INTEGER"]>>, "B")
add_call_chain(<<b,A>>)
add_attribute("d", "D", "INTEGER")
less_than
logical_negation
subtraction
equals
add_attribute("a", "d", "BOOLEAN")
add_call_chain(<<d,BOOLEAN,BOOLEAN,C,c,INTEGER,B,C>>)
logical_negation
logical_negation
int_value (39)
add_query("b", "B", <<["B", "BOOLEAN"], ["C", "e"], ["A", "b"], ["c", "BOOLEAN"], ["b", "e"], ["C", "BOOLEAN"]>>, "C")
add_command("BOOLEAN", "a", <<["e", "INTEGER"], ["A", "BOOLEAN"], ["A", "INTEGER"], ["INTEGER", "B"], ["A", "INTEGER"], ["B", "c"]>>)
add_query("c", "D", <<["A", "INTEGER"], ["B", "INTEGER"], ["A", "D"], ["INTEGER", "D"], ["A", "BOOLEAN"], ["e", "INTEGER"], ["c", "B"], ["b", "BOOLEAN"], ["e", "INTEGER"]>>, "c")
add_command("a", "A", <<["INTEGER", "B"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["A", "BOOLEAN"], ["BOOLEAN", "b"]>>)
add_call_chain(<<INTEGER,e,A,B,a>>)
add_call_chain(<<b,C,D,B>>)
int_value (43)
add_query("B", "D", <<["d", "INTEGER"], ["c", "BOOLEAN"], ["c", "INTEGER"], ["BOOLEAN", "C"], ["B", "BOOLEAN"], ["C", "C"], ["D", "BOOLEAN"], ["e", "B"]>>, "C")
add_command("A", "d", <<["A", "INTEGER"], ["BOOLEAN", "b"], ["B", "C"]>>)
int_value (42)
int_value (10)
add_attribute("D", "a", "INTEGER")
add_call_chain(<<D,b,A,INTEGER,B,a,C,D,e>>)
type_check
add_attribute("INTEGER", "D", "BOOLEAN")
bool_value (true)
add_attribute("b", "a", "C")
add_call_chain(<<a,D,A,C,D,a,C,e>>)
less_than
add_command("a", "b", <<["D", "INTEGER"], ["e", "BOOLEAN"]>>)
type_check
bool_value (true)
multiplication
add_call_chain(<<D,D,B,a,A>>)
add_call_chain(<<A,B,C,C,a,A,D,c,c>>)
add_query("C", "B", <<["b", "INTEGER"], ["B", "BOOLEAN"], ["b", "b"], ["b", "INTEGER"]>>, "e")
generate_java_code
int_value (28)
add_class(B)
conjunction
add_query("e", "C", <<["c", "BOOLEAN"], ["B", "INTEGER"], ["C", "BOOLEAN"], ["a", "b"], ["c", "INTEGER"], ["D", "BOOLEAN"], ["a", "BOOLEAN"]>>, "B")
add_class(c)
logical_negation
logical_negation
add_attribute("B", "e", "BOOLEAN")
add_attribute("C", "B", "b")
logical_negation
add_call_chain(<<C,C,BOOLEAN,B,c>>)
add_attribute("b", "d", "INTEGER")
numerical_negation
add_command("d", "b", <<["a", "BOOLEAN"]>>)
bool_value (true)
add_attribute("B", "BOOLEAN", "INTEGER")
add_call_chain(<<INTEGER,D,d,BOOLEAN,a,D,B,b>>)
logical_negation
