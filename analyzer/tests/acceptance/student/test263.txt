type_check
add_attribute("e", "c", "BOOLEAN")
add_query("c", "A", <<["c", "INTEGER"], ["A", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "INTEGER"]>>, "C")
type_check
add_call_chain(<<INTEGER,b,C,INTEGER>>)
numerical_negation
equals
add_call_chain(<<A,d,INTEGER,INTEGER,e,C>>)
add_command("A", "BOOLEAN", <<["A", "BOOLEAN"], ["INTEGER", "d"]>>)
numerical_negation
add_call_chain(<<D,d,a>>)
numerical_negation
logical_negation
add_query("C", "C", <<["C", "BOOLEAN"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "BOOLEAN"]>>, "BOOLEAN")
add_command("C", "D", <<["d", "BOOLEAN"], ["d", "d"]>>)
add_attribute("C", "e", "INTEGER")
add_attribute("B", "c", "BOOLEAN")
add_query("d", "C", <<["e", "BOOLEAN"], ["D", "a"]>>, "a")
add_query("A", "c", <<["C", "INTEGER"], ["B", "BOOLEAN"], ["B", "C"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "A"], ["b", "BOOLEAN"]>>, "A")
add_attribute("c", "B", "D")
int_value (9)
add_attribute("D", "A", "A")
add_query("a", "B", <<["d", "B"], ["A", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "d"], ["e", "BOOLEAN"]>>, "A")
add_attribute("b", "d", "BOOLEAN")
add_call_chain(<<c,A,C>>)
int_value (27)
add_call_chain(<<c,A,d,D,A,d,C,C,a>>)
add_command("D", "D", <<["A", "B"], ["D", "A"], ["C", "BOOLEAN"], ["b", "a"], ["C", "D"], ["D", "C"], ["A", "d"]>>)
add_call_chain(<<INTEGER,c,A,b,A,d>>)
add_call_chain(<<b>>)
logical_negation
int_value (11)
add_command("e", "A", <<["INTEGER", "BOOLEAN"], ["b", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["D", "B"], ["e", "a"], ["D", "BOOLEAN"]>>)
bool_value (false)
conjunction
numerical_negation
int_value (24)
less_than
int_value (38)
add_call_chain(<<D,BOOLEAN,d,c,e,e>>)
numerical_negation
numerical_negation
bool_value (true)
generate_java_code
add_command("C", "D", <<["D", "d"], ["INTEGER", "C"], ["e", "C"], ["b", "BOOLEAN"], ["c", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "INTEGER"], ["a", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>)
subtraction
bool_value (false)
add_query("e", "INTEGER", <<["C", "D"], ["B", "BOOLEAN"], ["B", "INTEGER"]>>, "e")
modulo
type_check
equals
add_command("d", "B", <<["c", "BOOLEAN"], ["d", "INTEGER"]>>)
add_command("A", "BOOLEAN", <<["e", "A"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["c", "e"]>>)
add_call_chain(<<d,a,c,C>>)
add_call_chain(<<D,B>>)
type_check
add_attribute("D", "B", "INTEGER")
type_check
add_call_chain(<<b,a>>)
add_attribute("d", "INTEGER", "e")
conjunction
add_call_chain(<<B,c,A,D,d>>)
bool_value (false)
add_call_chain(<<A,e,c,d>>)
add_call_chain(<<C,c>>)
add_query("c", "B", <<["e", "BOOLEAN"], ["e", "BOOLEAN"], ["c", "e"]>>, "A")
add_command("D", "BOOLEAN", <<["b", "BOOLEAN"], ["a", "INTEGER"]>>)
numerical_negation
add_attribute("D", "b", "INTEGER")
numerical_negation
bool_value (false)
subtraction
generate_java_code
add_call_chain(<<D,e,a,b>>)
greater_than
add_class(INTEGER)
generate_java_code
add_command("b", "B", <<["B", "INTEGER"], ["C", "C"], ["B", "INTEGER"], ["B", "INTEGER"], ["e", "INTEGER"], ["a", "BOOLEAN"]>>)
numerical_negation
bool_value (false)
add_command("d", "A", <<["C", "A"], ["D", "BOOLEAN"]>>)
add_call_chain(<<a,D,b,e,c,INTEGER,B,d>>)
logical_negation
add_call_chain(<<C,b,A,B,e,C,d>>)
int_value (28)
add_call_chain(<<e,A,a,A,B,d,b,D>>)
add_call_chain(<<d,B,a,e,INTEGER,e>>)
add_command("d", "a", <<["A", "INTEGER"], ["a", "INTEGER"], ["e", "A"], ["INTEGER", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "INTEGER"], ["e", "A"]>>)
disjunction
logical_negation
add_class(d)
generate_java_code
bool_value (true)
modulo
add_attribute("C", "a", "BOOLEAN")
add_command("A", "a", <<["B", "INTEGER"], ["A", "B"], ["B", "e"], ["a", "INTEGER"], ["a", "BOOLEAN"], ["a", "INTEGER"], ["d", "BOOLEAN"], ["B", "a"]>>)
add_class(d)
numerical_negation
add_command("a", "D", <<["A", "INTEGER"], ["BOOLEAN", "INTEGER"], ["INTEGER", "BOOLEAN"], ["C", "b"]>>)
int_value (40)
int_value (47)
numerical_negation
quotient
add_class(C)
bool_value (false)
add_call_chain(<<e,e,a,B,c,A>>)
less_than
numerical_negation
logical_negation
add_call_chain(<<A,BOOLEAN,c,B,b,c,B,D,d>>)
logical_negation
add_query("BOOLEAN", "d", <<["A", "D"], ["c", "BOOLEAN"], ["a", "INTEGER"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["B", "INTEGER"]>>, "A")
add_call_chain(<<D,b,A,b,c,D>>)
int_value (21)
add_attribute("D", "B", "INTEGER")
add_call_chain(<<C,e,c>>)
less_than
numerical_negation
bool_value (true)
greater_than
equals
add_query("B", "C", <<["INTEGER", "BOOLEAN"], ["d", "INTEGER"], ["d", "BOOLEAN"], ["B", "INTEGER"], ["D", "INTEGER"], ["INTEGER", "e"], ["INTEGER", "D"], ["C", "INTEGER"]>>, "b")
conjunction
bool_value (false)
bool_value (true)
disjunction
add_attribute("D", "A", "INTEGER")
int_value (28)
type_check
add_command("c", "b", <<["INTEGER", "INTEGER"], ["d", "a"], ["B", "b"], ["c", "BOOLEAN"]>>)
generate_java_code
add_call_chain(<<C>>)
int_value (21)
numerical_negation
logical_negation
add_call_chain(<<C,A,a,B,A,C>>)
conjunction
logical_negation
add_call_chain(<<c,C,b>>)
add_attribute("B", "d", "BOOLEAN")
add_attribute("d", "INTEGER", "INTEGER")
int_value (16)
add_attribute("b", "C", "BOOLEAN")
add_query("C", "C", <<["INTEGER", "BOOLEAN"]>>, "c")
add_attribute("C", "D", "INTEGER")
add_attribute("A", "a", "c")
add_class(e)
int_value (19)
numerical_negation
add_attribute("e", "b", "INTEGER")
bool_value (false)
numerical_negation
add_query("b", "B", <<["B", "BOOLEAN"]>>, "C")
disjunction
add_class(c)
less_than
numerical_negation
add_call_chain(<<B,a,D,A,d,B,a,c>>)
conjunction
add_command("B", "b", <<["INTEGER", "INTEGER"], ["C", "INTEGER"], ["a", "d"], ["B", "b"], ["A", "INTEGER"], ["c", "b"], ["a", "d"]>>)
int_value (33)
int_value (40)
conjunction
add_attribute("C", "d", "INTEGER")
bool_value (false)
int_value (31)
modulo
int_value (35)
numerical_negation
disjunction
add_call_chain(<<C,A,B,A>>)
add_call_chain(<<C,a,d,BOOLEAN,C,a,C,e,D>>)
add_call_chain(<<B,d,D,d,a,A>>)
logical_negation
add_query("D", "D", <<["D", "e"], ["C", "INTEGER"], ["INTEGER", "BOOLEAN"], ["BOOLEAN", "d"], ["INTEGER", "c"], ["B", "BOOLEAN"]>>, "INTEGER")
add_call_chain(<<a,c,C,b>>)
add_call_chain(<<A,d,c,A>>)
add_call_chain(<<d>>)
equals
add_call_chain(<<d,C>>)
modulo
add_class(C)
generate_java_code
logical_negation
bool_value (false)
numerical_negation
bool_value (true)
add_query("b", "B", <<["A", "BOOLEAN"], ["e", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["C", "d"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "INTEGER"], ["a", "BOOLEAN"]>>, "B")
add_call_chain(<<e,a,d,D>>)
add_class(C)
add_class(d)
generate_java_code
bool_value (false)
add_attribute("e", "e", "BOOLEAN")
generate_java_code
add_command("D", "b", <<["e", "BOOLEAN"]>>)
add_command("B", "d", <<["C", "INTEGER"], ["B", "a"], ["c", "INTEGER"]>>)
add_call_chain(<<D,d,d>>)
logical_negation
greater_than
add_query("c", "c", <<["b", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["D", "a"], ["C", "INTEGER"], ["b", "BOOLEAN"], ["D", "B"], ["b", "INTEGER"], ["BOOLEAN", "b"], ["INTEGER", "b"]>>, "e")
bool_value (false)
add_call_chain(<<C,INTEGER,e,b,e,e,a,INTEGER>>)
add_command("d", "D", <<["INTEGER", "BOOLEAN"], ["c", "INTEGER"]>>)
add_call_chain(<<B,c,A,C>>)
numerical_negation
type_check
numerical_negation
add_call_chain(<<A,b,e,A,a,e,A,BOOLEAN,d>>)
int_value (42)
greater_than
add_query("b", "C", <<["e", "INTEGER"], ["B", "b"], ["a", "INTEGER"], ["INTEGER", "BOOLEAN"], ["c", "B"], ["c", "INTEGER"], ["B", "BOOLEAN"], ["A", "INTEGER"]>>, "B")
add_class(D)
multiplication
add_query("e", "d", <<["e", "d"], ["C", "INTEGER"], ["C", "b"], ["d", "INTEGER"], ["c", "BOOLEAN"], ["c", "INTEGER"], ["d", "BOOLEAN"], ["d", "BOOLEAN"]>>, "A")
add_call_chain(<<C,C,D>>)
add_command("b", "A", <<["B", "e"], ["B", "BOOLEAN"], ["c", "INTEGER"], ["d", "C"], ["A", "INTEGER"], ["d", "INTEGER"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["A", "BOOLEAN"]>>)
add_class(D)
add_call_chain(<<d,B,d>>)
add_class(B)
int_value (3)
numerical_negation
add_query("c", "B", <<["BOOLEAN", "INTEGER"], ["b", "a"], ["b", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "a"], ["a", "BOOLEAN"], ["b", "BOOLEAN"]>>, "b")
add_attribute("D", "C", "BOOLEAN")
logical_negation
add_query("D", "D", <<["D", "INTEGER"], ["c", "INTEGER"], ["B", "a"], ["b", "D"], ["a", "BOOLEAN"], ["C", "C"]>>, "b")
add_attribute("d", "c", "BOOLEAN")
add_command("A", "a", <<["A", "INTEGER"], ["a", "e"], ["C", "BOOLEAN"], ["B", "e"], ["C", "BOOLEAN"]>>)
add_attribute("c", "INTEGER", "INTEGER")
add_call_chain(<<b,B,INTEGER,A,C,b,BOOLEAN,D>>)
add_command("D", "C", <<["D", "b"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["B", "INTEGER"], ["b", "INTEGER"], ["A", "INTEGER"]>>)
add_call_chain(<<A,BOOLEAN,a,a,e,BOOLEAN,C,c,d>>)
