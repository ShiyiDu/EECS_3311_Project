add_attribute("D", "INTEGER", "INTEGER")
bool_value (true)
conjunction
disjunction
bool_value (true)
modulo
bool_value (true)
subtraction
add_command("A", "A", <<["B", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "a"], ["c", "BOOLEAN"], ["B", "A"], ["A", "BOOLEAN"], ["c", "BOOLEAN"]>>)
numerical_negation
add_attribute("B", "INTEGER", "c")
add_command("b", "e", <<["A", "C"], ["d", "c"], ["C", "c"], ["B", "INTEGER"], ["C", "BOOLEAN"], ["A", "d"]>>)
addition
logical_negation
type_check
bool_value (true)
generate_java_code
add_call_chain(<<BOOLEAN,b,d,b,D,D,C>>)
add_attribute("A", "e", "INTEGER")
add_call_chain(<<A>>)
add_command("A", "C", <<["B", "INTEGER"], ["D", "D"], ["A", "INTEGER"]>>)
generate_java_code
int_value (12)
type_check
logical_negation
add_attribute("b", "D", "INTEGER")
int_value (17)
add_class(b)
generate_java_code
add_query("A", "c", <<["INTEGER", "INTEGER"], ["C", "INTEGER"], ["A", "INTEGER"], ["INTEGER", "BOOLEAN"], ["C", "INTEGER"]>>, "D")
multiplication
add_command("e", "A", <<["c", "c"], ["C", "a"]>>)
add_call_chain(<<D,a,D,b,C>>)
logical_negation
numerical_negation
disjunction
add_command("A", "B", <<["d", "D"], ["A", "A"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["a", "BOOLEAN"]>>)
type_check
add_attribute("e", "D", "BOOLEAN")
add_call_chain(<<e,C,INTEGER>>)
equals
add_attribute("D", "BOOLEAN", "INTEGER")
add_attribute("C", "c", "BOOLEAN")
add_call_chain(<<C,B,B,C>>)
greater_than
add_call_chain(<<B,D,A,b,c>>)
add_call_chain(<<INTEGER,B>>)
logical_negation
conjunction
add_call_chain(<<C,C>>)
less_than
add_call_chain(<<C,d,BOOLEAN,A,INTEGER,B,c>>)
quotient
add_query("c", "b", <<["BOOLEAN", "D"], ["B", "INTEGER"]>>, "C")
bool_value (false)
add_attribute("BOOLEAN", "D", "INTEGER")
type_check
quotient
add_command("c", "e", <<["A", "BOOLEAN"], ["d", "D"]>>)
add_command("c", "a", <<["BOOLEAN", "c"], ["c", "INTEGER"], ["B", "INTEGER"], ["A", "INTEGER"], ["c", "INTEGER"], ["c", "D"]>>)
logical_negation
add_call_chain(<<c,a>>)
less_than
int_value (25)
add_call_chain(<<d,C,c,A>>)
int_value (42)
numerical_negation
logical_negation
logical_negation
int_value (47)
add_call_chain(<<INTEGER,A,C,A,A,e,a>>)
int_value (22)
type_check
add_call_chain(<<b,a,d,D,d,A,BOOLEAN>>)
multiplication
bool_value (false)
add_command("b", "a", <<["d", "e"], ["D", "INTEGER"], ["a", "C"], ["c", "BOOLEAN"], ["a", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["D", "INTEGER"]>>)
addition
add_command("A", "B", <<["a", "BOOLEAN"], ["e", "d"], ["e", "INTEGER"], ["A", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "BOOLEAN"], ["INTEGER", "e"], ["A", "c"], ["c", "BOOLEAN"]>>)
subtraction
add_attribute("C", "c", "BOOLEAN")
add_command("a", "A", <<["d", "d"], ["d", "INTEGER"], ["D", "INTEGER"], ["c", "INTEGER"], ["C", "d"]>>)
int_value (44)
add_call_chain(<<A,b,b,C,A,D,d,BOOLEAN,b>>)
type_check
bool_value (true)
add_class(B)
int_value (13)
add_command("A", "A", <<["INTEGER", "INTEGER"], ["C", "INTEGER"], ["B", "e"], ["e", "BOOLEAN"]>>)
subtraction
add_attribute("a", "B", "INTEGER")
add_class(D)
modulo
add_attribute("b", "b", "INTEGER")
add_call_chain(<<a,BOOLEAN,B,c,a,b>>)
add_attribute("e", "d", "INTEGER")
int_value (27)
bool_value (true)
numerical_negation
add_command("INTEGER", "e", <<["C", "INTEGER"]>>)
logical_negation
generate_java_code
add_attribute("a", "c", "INTEGER")
add_command("D", "d", <<["c", "BOOLEAN"], ["c", "BOOLEAN"], ["d", "INTEGER"], ["c", "BOOLEAN"], ["c", "a"], ["b", "C"], ["C", "b"], ["e", "INTEGER"]>>)
add_command("C", "c", <<["B", "BOOLEAN"]>>)
add_call_chain(<<D,A,d,C,A,c,D,e,BOOLEAN>>)
disjunction
add_call_chain(<<d,B,b,a,b,c,A,INTEGER>>)
add_command("a", "A", <<["e", "BOOLEAN"], ["c", "INTEGER"], ["c", "INTEGER"], ["C", "INTEGER"], ["B", "INTEGER"]>>)
add_call_chain(<<d,b>>)
logical_negation
add_command("D", "a", <<["c", "INTEGER"], ["c", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "C"], ["B", "BOOLEAN"]>>)
add_call_chain(<<d>>)
int_value (40)
add_command("B", "D", <<["B", "INTEGER"], ["a", "A"], ["BOOLEAN", "BOOLEAN"], ["D", "C"], ["C", "BOOLEAN"]>>)
add_command("e", "b", <<["BOOLEAN", "B"], ["C", "INTEGER"], ["c", "BOOLEAN"], ["d", "INTEGER"], ["D", "BOOLEAN"], ["B", "d"]>>)
type_check
add_attribute("C", "B", "INTEGER")
logical_negation
add_attribute("C", "a", "C")
add_query("b", "C", <<["D", "INTEGER"]>>, "a")
generate_java_code
type_check
conjunction
add_call_chain(<<INTEGER,B,D,b,b,D,C>>)
type_check
less_than
generate_java_code
generate_java_code
add_query("c", "a", <<["c", "INTEGER"]>>, "c")
add_call_chain(<<A>>)
add_class(A)
bool_value (false)
add_class(b)
add_class(c)
disjunction
add_query("C", "A", <<["d", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "BOOLEAN"], ["b", "INTEGER"], ["A", "D"], ["B", "INTEGER"], ["D", "A"]>>, "A")
bool_value (false)
add_query("A", "c", <<["c", "BOOLEAN"], ["D", "e"], ["C", "INTEGER"], ["e", "INTEGER"], ["e", "INTEGER"], ["B", "a"], ["B", "BOOLEAN"], ["C", "d"], ["a", "INTEGER"]>>, "BOOLEAN")
add_query("b", "d", <<["A", "INTEGER"], ["c", "INTEGER"], ["b", "B"], ["BOOLEAN", "INTEGER"], ["c", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>, "e")
add_attribute("INTEGER", "c", "BOOLEAN")
numerical_negation
add_query("e", "C", <<["B", "e"], ["BOOLEAN", "BOOLEAN"]>>, "d")
add_call_chain(<<A,INTEGER,b,D,D,d,B,A>>)
bool_value (false)
add_class(C)
logical_negation
add_call_chain(<<A,c,d,C,B,a,B,BOOLEAN,INTEGER>>)
int_value (22)
add_attribute("D", "D", "BOOLEAN")
logical_negation
add_call_chain(<<a,a,BOOLEAN>>)
add_query("D", "INTEGER", <<["b", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "b"], ["a", "D"], ["D", "BOOLEAN"], ["A", "D"], ["D", "INTEGER"]>>, "A")
add_call_chain(<<C,b,b,BOOLEAN,c,B,d,A,e>>)
logical_negation
add_call_chain(<<D,e,b,d>>)
logical_negation
multiplication
add_call_chain(<<b,C,B>>)
add_call_chain(<<D,D,d,C,D>>)
add_call_chain(<<a>>)
add_class(C)
int_value (29)
numerical_negation
add_class(D)
numerical_negation
bool_value (true)
add_call_chain(<<A,C,A,a,a,C>>)
int_value (20)
add_command("d", "D", <<["b", "B"], ["B", "INTEGER"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "A"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["BOOLEAN", "d"]>>)
logical_negation
add_query("C", "B", <<["d", "BOOLEAN"], ["C", "BOOLEAN"]>>, "INTEGER")
add_command("a", "D", <<["a", "e"], ["INTEGER", "BOOLEAN"], ["D", "c"], ["D", "B"], ["B", "BOOLEAN"]>>)
int_value (4)
add_query("B", "e", <<["A", "BOOLEAN"], ["d", "INTEGER"], ["c", "BOOLEAN"]>>, "b")
add_class(d)
add_class(B)
bool_value (false)
add_call_chain(<<c,INTEGER,C,D,a>>)
add_attribute("b", "c", "C")
type_check
add_query("B", "B", <<["B", "BOOLEAN"], ["D", "INTEGER"], ["c", "d"], ["a", "INTEGER"], ["e", "c"], ["D", "B"], ["b", "BOOLEAN"], ["C", "c"], ["c", "BOOLEAN"]>>, "D")
add_query("c", "a", <<["B", "INTEGER"], ["B", "C"], ["C", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "BOOLEAN"]>>, "a")
disjunction
add_class(B)
generate_java_code
generate_java_code
logical_negation
logical_negation
addition
bool_value (false)
add_call_chain(<<c>>)
add_command("d", "b", <<["b", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "b"], ["D", "BOOLEAN"]>>)
bool_value (false)
add_call_chain(<<A>>)
add_attribute("c", "a", "INTEGER")
add_command("a", "B", <<["D", "BOOLEAN"], ["BOOLEAN", "e"]>>)
int_value (19)
add_query("A", "A", <<["D", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "INTEGER"], ["C", "INTEGER"]>>, "c")
add_command("a", "d", <<["b", "c"]>>)
add_query("INTEGER", "C", <<["b", "INTEGER"], ["d", "b"], ["A", "e"], ["B", "a"], ["INTEGER", "INTEGER"], ["a", "INTEGER"]>>, "D")
bool_value (false)
add_attribute("D", "b", "BOOLEAN")
add_command("A", "e", <<["C", "INTEGER"], ["b", "a"], ["a", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "INTEGER"], ["D", "INTEGER"], ["D", "BOOLEAN"]>>)
int_value (35)
int_value (38)
add_attribute("e", "e", "b")
numerical_negation
add_command("c", "D", <<["B", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "e"], ["e", "c"], ["D", "INTEGER"]>>)
add_call_chain(<<b,a,A,B,A,D,B,e,a>>)
type_check
bool_value (false)
disjunction
generate_java_code
quotient
add_query("a", "D", <<["b", "d"], ["D", "d"]>>, "c")
disjunction
