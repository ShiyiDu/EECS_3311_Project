numerical_negation
add_attribute("e", "BOOLEAN", "B")
generate_java_code
generate_java_code
numerical_negation
add_command("INTEGER", "d", <<["C", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "a"]>>)
add_command("A", "A", <<["d", "A"]>>)
type_check
add_call_chain(<<c,a,A,e,C,c,A,a>>)
numerical_negation
add_command("e", "b", <<["b", "d"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["C", "INTEGER"], ["B", "INTEGER"], ["BOOLEAN", "INTEGER"], ["e", "INTEGER"], ["c", "INTEGER"]>>)
bool_value (true)
numerical_negation
add_attribute("a", "INTEGER", "INTEGER")
add_attribute("d", "a", "INTEGER")
add_command("C", "c", <<["C", "INTEGER"], ["A", "A"], ["BOOLEAN", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["B", "INTEGER"], ["C", "INTEGER"], ["e", "BOOLEAN"]>>)
add_command("B", "B", <<["BOOLEAN", "BOOLEAN"], ["d", "b"], ["D", "INTEGER"], ["e", "A"], ["d", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["INTEGER", "INTEGER"]>>)
numerical_negation
bool_value (true)
bool_value (false)
add_command("c", "B", <<["A", "C"], ["INTEGER", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["D", "c"], ["C", "e"], ["BOOLEAN", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["b", "BOOLEAN"]>>)
multiplication
type_check
generate_java_code
add_call_chain(<<B,d,B,B,b,c,d>>)
equals
add_call_chain(<<d,INTEGER,B,a>>)
bool_value (true)
add_command("INTEGER", "INTEGER", <<["d", "INTEGER"], ["C", "BOOLEAN"]>>)
generate_java_code
int_value (45)
conjunction
subtraction
add_command("d", "INTEGER", <<["B", "BOOLEAN"], ["B", "B"], ["D", "C"], ["b", "c"], ["e", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "BOOLEAN"]>>)
add_query("D", "b", <<["a", "b"], ["b", "INTEGER"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["B", "C"]>>, "D")
int_value (11)
add_query("B", "d", <<["e", "BOOLEAN"]>>, "a")
add_command("C", "c", <<["C", "BOOLEAN"], ["d", "a"]>>)
add_command("c", "BOOLEAN", <<["B", "b"], ["C", "INTEGER"], ["INTEGER", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "A"]>>)
add_attribute("a", "c", "INTEGER")
int_value (1)
add_call_chain(<<a,A,c,C,e,C,A,c,D>>)
bool_value (true)
add_call_chain(<<a,A,A>>)
add_call_chain(<<D,d,e,INTEGER,B,C,A,INTEGER>>)
add_query("a", "A", <<["BOOLEAN", "D"], ["D", "d"], ["A", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "c"], ["a", "C"], ["d", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "INTEGER"]>>, "BOOLEAN")
int_value (6)
numerical_negation
numerical_negation
multiplication
conjunction
logical_negation
disjunction
add_call_chain(<<c,INTEGER,e,c,INTEGER,D,C,A>>)
add_class(BOOLEAN)
add_attribute("C", "e", "BOOLEAN")
add_query("d", "B", <<["a", "INTEGER"], ["a", "C"], ["b", "INTEGER"], ["c", "A"], ["B", "INTEGER"], ["c", "C"], ["e", "BOOLEAN"]>>, "D")
add_call_chain(<<a,C,b,C,a,C,A>>)
add_attribute("BOOLEAN", "C", "BOOLEAN")
int_value (49)
add_command("D", "D", <<["B", "INTEGER"], ["B", "B"], ["A", "A"], ["C", "BOOLEAN"], ["D", "b"], ["a", "BOOLEAN"]>>)
conjunction
add_class(C)
bool_value (true)
numerical_negation
add_query("d", "B", <<["a", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "INTEGER"]>>, "A")
generate_java_code
add_call_chain(<<C,A,BOOLEAN>>)
add_attribute("A", "a", "e")
generate_java_code
type_check
numerical_negation
add_command("b", "C", <<["a", "INTEGER"], ["C", "d"], ["B", "INTEGER"], ["b", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "B"], ["C", "BOOLEAN"], ["D", "C"], ["D", "INTEGER"]>>)
numerical_negation
multiplication
add_call_chain(<<INTEGER,INTEGER,e,e,c,a,a,INTEGER>>)
equals
logical_negation
add_command("C", "A", <<["D", "BOOLEAN"], ["B", "INTEGER"]>>)
bool_value (true)
generate_java_code
numerical_negation
conjunction
add_attribute("b", "d", "C")
add_call_chain(<<C,A,a,B,e>>)
add_command("B", "B", <<["BOOLEAN", "INTEGER"], ["B", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["e", "B"], ["INTEGER", "d"], ["a", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "INTEGER"], ["D", "INTEGER"]>>)
bool_value (true)
add_query("D", "b", <<["c", "a"], ["C", "B"], ["C", "D"]>>, "BOOLEAN")
bool_value (true)
add_attribute("b", "a", "INTEGER")
add_command("INTEGER", "D", <<["D", "A"]>>)
bool_value (false)
numerical_negation
add_query("C", "C", <<["C", "BOOLEAN"]>>, "D")
add_command("BOOLEAN", "c", <<["B", "BOOLEAN"], ["D", "e"], ["B", "INTEGER"], ["C", "INTEGER"], ["C", "D"]>>)
add_call_chain(<<B,BOOLEAN,d,e,BOOLEAN,e,A>>)
type_check
add_command("c", "B", <<["A", "BOOLEAN"], ["e", "A"], ["c", "BOOLEAN"]>>)
add_call_chain(<<e,A,d>>)
add_attribute("d", "B", "BOOLEAN")
numerical_negation
bool_value (true)
numerical_negation
type_check
logical_negation
add_query("a", "c", <<["c", "INTEGER"]>>, "B")
add_call_chain(<<B,C,a,a,B,D,B,d,C>>)
generate_java_code
conjunction
numerical_negation
bool_value (true)
add_call_chain(<<C,BOOLEAN,A,a,INTEGER,d,C>>)
add_command("b", "C", <<["e", "e"], ["C", "BOOLEAN"], ["B", "INTEGER"], ["e", "INTEGER"], ["D", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "A"], ["c", "INTEGER"]>>)
generate_java_code
add_call_chain(<<A,e,c,e,b,BOOLEAN,d,c,d>>)
add_call_chain(<<A,C,e,a,A>>)
add_attribute("D", "BOOLEAN", "BOOLEAN")
add_call_chain(<<INTEGER>>)
add_attribute("D", "a", "e")
type_check
add_call_chain(<<A,e,A,e,D,INTEGER,B>>)
bool_value (true)
numerical_negation
quotient
add_attribute("e", "INTEGER", "BOOLEAN")
add_command("d", "B", <<["A", "INTEGER"], ["D", "INTEGER"], ["B", "BOOLEAN"]>>)
add_command("A", "d", <<["b", "BOOLEAN"], ["B", "a"], ["D", "BOOLEAN"]>>)
numerical_negation
type_check
add_call_chain(<<b,A,b,BOOLEAN,D,b,C,D>>)
add_call_chain(<<C,A,c>>)
int_value (23)
numerical_negation
type_check
add_attribute("BOOLEAN", "A", "BOOLEAN")
add_call_chain(<<a,a,b,BOOLEAN,B>>)
add_call_chain(<<A,D,e,A,D,e>>)
add_query("e", "e", <<["A", "BOOLEAN"], ["A", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["a", "INTEGER"], ["A", "INTEGER"], ["d", "INTEGER"], ["D", "INTEGER"], ["C", "INTEGER"]>>, "b")
bool_value (false)
add_call_chain(<<b,INTEGER,C,e>>)
add_query("B", "C", <<["a", "INTEGER"], ["A", "BOOLEAN"], ["INTEGER", "INTEGER"], ["c", "INTEGER"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["D", "INTEGER"]>>, "BOOLEAN")
disjunction
add_attribute("B", "c", "BOOLEAN")
numerical_negation
add_class(A)
equals
numerical_negation
add_query("c", "C", <<["BOOLEAN", "INTEGER"], ["d", "BOOLEAN"]>>, "INTEGER")
add_attribute("b", "d", "INTEGER")
bool_value (false)
int_value (5)
bool_value (false)
logical_negation
add_query("INTEGER", "INTEGER", <<["A", "a"], ["A", "D"]>>, "a")
numerical_negation
add_query("c", "C", <<["INTEGER", "INTEGER"], ["b", "BOOLEAN"]>>, "D")
logical_negation
disjunction
generate_java_code
disjunction
add_query("C", "C", <<["d", "INTEGER"], ["B", "INTEGER"], ["e", "D"], ["D", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "BOOLEAN"]>>, "A")
bool_value (true)
numerical_negation
add_call_chain(<<e,C,a,D>>)
numerical_negation
type_check
add_class(c)
add_call_chain(<<c,b>>)
logical_negation
conjunction
generate_java_code
add_attribute("A", "b", "INTEGER")
generate_java_code
subtraction
generate_java_code
add_query("D", "a", <<["BOOLEAN", "BOOLEAN"], ["d", "INTEGER"], ["b", "BOOLEAN"], ["INTEGER", "INTEGER"], ["B", "INTEGER"]>>, "A")
add_call_chain(<<C,a,a>>)
add_query("INTEGER", "d", <<["C", "BOOLEAN"], ["b", "INTEGER"], ["B", "A"], ["D", "INTEGER"], ["d", "INTEGER"], ["b", "BOOLEAN"], ["C", "INTEGER"], ["a", "e"], ["A", "BOOLEAN"]>>, "C")
bool_value (false)
bool_value (false)
type_check
add_command("BOOLEAN", "a", <<["BOOLEAN", "INTEGER"], ["B", "BOOLEAN"], ["C", "INTEGER"], ["D", "BOOLEAN"]>>)
add_query("b", "D", <<["INTEGER", "BOOLEAN"]>>, "D")
type_check
add_attribute("a", "c", "B")
int_value (48)
less_than
int_value (49)
add_call_chain(<<a,C>>)
add_command("B", "a", <<["d", "INTEGER"], ["b", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["C", "INTEGER"], ["D", "a"], ["D", "BOOLEAN"]>>)
add_query("B", "a", <<["D", "INTEGER"], ["A", "C"], ["D", "e"], ["c", "BOOLEAN"], ["B", "INTEGER"], ["B", "INTEGER"], ["a", "c"], ["b", "INTEGER"]>>, "c")
generate_java_code
generate_java_code
logical_negation
add_call_chain(<<d,d,A,d,INTEGER>>)
add_query("b", "d", <<["D", "INTEGER"]>>, "A")
add_class(BOOLEAN)
add_class(C)
numerical_negation
int_value (11)
add_command("e", "c", <<["D", "a"], ["d", "BOOLEAN"], ["B", "BOOLEAN"]>>)
add_class(B)
bool_value (true)
conjunction
addition
bool_value (true)
add_call_chain(<<c,C,b,D>>)
add_attribute("D", "INTEGER", "INTEGER")
add_attribute("c", "d", "INTEGER")
add_command("C", "B", <<["A", "INTEGER"], ["c", "B"], ["c", "BOOLEAN"], ["d", "A"], ["b", "INTEGER"], ["D", "BOOLEAN"], ["INTEGER", "INTEGER"], ["C", "A"]>>)
add_call_chain(<<a,c,A,a,A,D>>)
type_check
bool_value (false)
logical_negation
add_query("A", "B", <<["a", "INTEGER"], ["B", "INTEGER"], ["a", "BOOLEAN"], ["D", "INTEGER"], ["a", "INTEGER"]>>, "C")
numerical_negation
quotient
type_check
add_call_chain(<<c,c,a,B,C,B>>)
add_query("d", "A", <<["d", "INTEGER"], ["a", "BOOLEAN"], ["c", "a"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["a", "INTEGER"], ["e", "BOOLEAN"], ["D", "C"], ["C", "INTEGER"]>>, "e")
add_class(B)
type_check
generate_java_code
int_value (43)
addition
add_query("A", "e", <<["b", "c"], ["A", "INTEGER"], ["b", "INTEGER"], ["e", "BOOLEAN"], ["B", "INTEGER"], ["D", "D"], ["INTEGER", "BOOLEAN"]>>, "A")
generate_java_code
add_query("INTEGER", "e", <<["e", "INTEGER"], ["c", "D"], ["e", "INTEGER"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "C"], ["c", "C"], ["c", "INTEGER"]>>, "BOOLEAN")
bool_value (true)
greater_than
add_call_chain(<<e>>)
equals
logical_negation
less_than
bool_value (false)
add_command("A", "C", <<["c", "INTEGER"]>>)
add_call_chain(<<a,d,B,e,INTEGER>>)
add_attribute("INTEGER", "A", "INTEGER")
int_value (25)
generate_java_code
add_call_chain(<<BOOLEAN,b>>)
generate_java_code
add_call_chain(<<B,B,D,b>>)
add_command("C", "A", <<["a", "BOOLEAN"], ["d", "INTEGER"]>>)
bool_value (false)
add_query("C", "D", <<["C", "BOOLEAN"], ["b", "D"], ["C", "d"], ["D", "B"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["e", "D"], ["a", "INTEGER"]>>, "b")
numerical_negation
add_query("e", "BOOLEAN", <<["c", "INTEGER"], ["C", "BOOLEAN"], ["b", "c"]>>, "A")
logical_negation
add_attribute("e", "e", "BOOLEAN")
add_query("B", "d", <<["D", "INTEGER"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "INTEGER"], ["D", "INTEGER"]>>, "b")
add_call_chain(<<a,b,D,c,c,e,D,D>>)
type_check
generate_java_code
add_attribute("e", "c", "INTEGER")
modulo
numerical_negation
type_check
add_query("d", "B", <<["D", "BOOLEAN"], ["A", "INTEGER"], ["e", "BOOLEAN"], ["D", "d"], ["A", "INTEGER"], ["BOOLEAN", "INTEGER"], ["INTEGER", "e"], ["BOOLEAN", "INTEGER"], ["B", "BOOLEAN"]>>, "B")
type_check
int_value (10)
bool_value (false)
bool_value (true)
add_call_chain(<<D,c>>)
