add_attribute("d", "c", "INTEGER")
add_attribute("b", "B", "BOOLEAN")
add_query("B", "D", <<["d", "INTEGER"]>>, "D")
add_query("B", "b", <<["B", "INTEGER"], ["D", "INTEGER"], ["c", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["a", "INTEGER"], ["a", "BOOLEAN"], ["b", "BOOLEAN"]>>, "e")
numerical_negation
generate_java_code
bool_value (false)
add_query("c", "A", <<["b", "INTEGER"], ["d", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "INTEGER"], ["c", "INTEGER"]>>, "b")
add_call_chain(<<e>>)
add_attribute("B", "e", "INTEGER")
type_check
add_attribute("d", "INTEGER", "INTEGER")
conjunction
add_call_chain(<<B,a,B,INTEGER,b,C,C,b>>)
int_value (33)
numerical_negation
add_attribute("e", "C", "D")
numerical_negation
add_call_chain(<<e,INTEGER>>)
add_class(e)
int_value (10)
generate_java_code
disjunction
type_check
add_attribute("a", "b", "INTEGER")
add_query("e", "d", <<["a", "INTEGER"], ["C", "INTEGER"], ["D", "INTEGER"], ["D", "INTEGER"], ["A", "a"]>>, "B")
add_attribute("B", "A", "b")
add_call_chain(<<B>>)
add_query("BOOLEAN", "C", <<["c", "C"]>>, "a")
numerical_negation
add_attribute("B", "D", "INTEGER")
add_attribute("D", "B", "BOOLEAN")
logical_negation
add_query("d", "BOOLEAN", <<["C", "INTEGER"], ["C", "INTEGER"], ["b", "BOOLEAN"]>>, "a")
int_value (12)
add_call_chain(<<D,b,B,c,A,C>>)
bool_value (false)
add_call_chain(<<e,c,B,d>>)
add_query("BOOLEAN", "D", <<["A", "a"], ["e", "INTEGER"], ["D", "BOOLEAN"]>>, "C")
int_value (9)
numerical_negation
add_call_chain(<<A,D,e,BOOLEAN,c,b,a,c,C>>)
conjunction
add_query("e", "B", <<["e", "INTEGER"], ["C", "BOOLEAN"], ["C", "A"], ["c", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "INTEGER"], ["A", "INTEGER"], ["e", "BOOLEAN"]>>, "d")
generate_java_code
add_class(BOOLEAN)
int_value (14)
numerical_negation
add_call_chain(<<A,b,a,INTEGER,BOOLEAN,d>>)
add_call_chain(<<c,c,C,c,b,BOOLEAN,C,b,INTEGER>>)
add_query("b", "b", <<["a", "BOOLEAN"], ["A", "INTEGER"], ["A", "d"], ["b", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["A", "INTEGER"], ["e", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "INTEGER"]>>, "e")
greater_than
add_attribute("d", "c", "INTEGER")
int_value (46)
add_query("b", "D", <<["e", "e"], ["B", "b"], ["a", "INTEGER"], ["A", "e"], ["c", "INTEGER"], ["e", "INTEGER"], ["a", "BOOLEAN"], ["INTEGER", "C"], ["B", "BOOLEAN"]>>, "e")
add_command("c", "INTEGER", <<["a", "INTEGER"], ["D", "INTEGER"], ["C", "D"], ["d", "BOOLEAN"], ["b", "d"], ["e", "BOOLEAN"]>>)
numerical_negation
add_class(D)
conjunction
add_query("e", "A", <<["B", "BOOLEAN"], ["d", "INTEGER"], ["C", "BOOLEAN"]>>, "B")
type_check
bool_value (true)
numerical_negation
int_value (10)
numerical_negation
add_command("D", "INTEGER", <<["BOOLEAN", "BOOLEAN"], ["c", "BOOLEAN"], ["d", "C"], ["D", "BOOLEAN"], ["e", "B"], ["a", "INTEGER"], ["d", "INTEGER"], ["c", "d"]>>)
add_query("D", "a", <<["e", "B"], ["BOOLEAN", "d"], ["a", "B"], ["BOOLEAN", "BOOLEAN"], ["A", "BOOLEAN"]>>, "D")
add_attribute("C", "INTEGER", "BOOLEAN")
logical_negation
add_query("C", "A", <<["e", "INTEGER"], ["B", "C"], ["e", "BOOLEAN"]>>, "A")
add_query("INTEGER", "c", <<["e", "INTEGER"], ["e", "d"], ["INTEGER", "BOOLEAN"], ["D", "a"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["C", "INTEGER"], ["D", "INTEGER"], ["A", "INTEGER"]>>, "A")
add_attribute("B", "B", "BOOLEAN")
add_attribute("e", "B", "INTEGER")
add_command("B", "C", <<["BOOLEAN", "INTEGER"]>>)
add_attribute("D", "c", "a")
add_attribute("C", "D", "C")
add_query("INTEGER", "B", <<["b", "INTEGER"]>>, "C")
add_command("b", "A", <<["b", "a"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["c", "INTEGER"], ["e", "a"], ["a", "BOOLEAN"], ["BOOLEAN", "a"], ["A", "a"], ["b", "c"]>>)
bool_value (false)
logical_negation
less_than
conjunction
int_value (37)
add_command("C", "b", <<["D", "d"], ["INTEGER", "BOOLEAN"]>>)
subtraction
add_call_chain(<<a,b,D,B,D,C,A,C>>)
bool_value (false)
add_call_chain(<<d>>)
add_query("D", "c", <<["C", "a"], ["b", "C"]>>, "A")
int_value (25)
type_check
int_value (8)
add_query("b", "D", <<["b", "D"], ["e", "BOOLEAN"], ["A", "e"], ["INTEGER", "INTEGER"], ["b", "C"], ["B", "A"], ["b", "INTEGER"], ["D", "BOOLEAN"]>>, "INTEGER")
add_class(A)
add_query("D", "D", <<["c", "INTEGER"], ["INTEGER", "BOOLEAN"], ["D", "B"], ["c", "BOOLEAN"], ["c", "INTEGER"], ["A", "INTEGER"]>>, "c")
int_value (8)
equals
disjunction
int_value (13)
bool_value (true)
add_attribute("BOOLEAN", "d", "INTEGER")
add_query("C", "BOOLEAN", <<["BOOLEAN", "BOOLEAN"], ["e", "b"], ["e", "B"], ["c", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["D", "A"], ["e", "INTEGER"]>>, "c")
generate_java_code
logical_negation
less_than
add_call_chain(<<C,d,a,B,d>>)
bool_value (true)
less_than
add_call_chain(<<c,INTEGER,D,D,B,B,a,D,B>>)
bool_value (true)
add_command("b", "e", <<["D", "B"], ["C", "BOOLEAN"], ["a", "INTEGER"]>>)
disjunction
add_call_chain(<<a,A,B,d,B>>)
less_than
bool_value (false)
greater_than
add_call_chain(<<A>>)
add_call_chain(<<d,e,INTEGER,c,B,A,D,A>>)
int_value (38)
multiplication
add_query("b", "A", <<["c", "d"]>>, "A")
add_class(b)
add_class(b)
numerical_negation
add_call_chain(<<d,B,c,D>>)
add_query("e", "B", <<["a", "BOOLEAN"], ["c", "B"], ["e", "b"], ["e", "d"], ["a", "BOOLEAN"]>>, "e")
generate_java_code
add_attribute("e", "a", "INTEGER")
bool_value (true)
bool_value (false)
generate_java_code
add_class(d)
type_check
add_attribute("D", "b", "BOOLEAN")
int_value (13)
add_command("a", "D", <<["C", "c"], ["a", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "INTEGER"]>>)
generate_java_code
disjunction
type_check
add_query("B", "D", <<["c", "INTEGER"], ["c", "BOOLEAN"], ["A", "C"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["BOOLEAN", "a"], ["d", "BOOLEAN"], ["A", "e"]>>, "A")
multiplication
type_check
add_class(b)
type_check
disjunction
generate_java_code
add_command("INTEGER", "c", <<["B", "BOOLEAN"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["b", "INTEGER"], ["a", "BOOLEAN"], ["A", "e"], ["b", "INTEGER"], ["B", "BOOLEAN"]>>)
add_attribute("b", "a", "BOOLEAN")
add_query("B", "D", <<["a", "a"], ["D", "D"], ["b", "INTEGER"], ["e", "INTEGER"], ["e", "d"], ["D", "a"], ["D", "BOOLEAN"]>>, "D")
add_class(A)
type_check
int_value (33)
add_call_chain(<<e>>)
int_value (24)
bool_value (false)
add_command("BOOLEAN", "e", <<["d", "c"], ["d", "D"], ["INTEGER", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["BOOLEAN", "d"], ["D", "INTEGER"]>>)
modulo
numerical_negation
less_than
numerical_negation
modulo
add_query("A", "a", <<["c", "d"], ["e", "INTEGER"], ["C", "d"], ["c", "INTEGER"]>>, "c")
add_command("A", "e", <<["d", "INTEGER"], ["b", "INTEGER"], ["D", "INTEGER"], ["d", "BOOLEAN"], ["A", "INTEGER"], ["b", "INTEGER"], ["b", "BOOLEAN"]>>)
add_command("e", "d", <<["a", "BOOLEAN"], ["a", "INTEGER"], ["a", "a"], ["C", "INTEGER"], ["BOOLEAN", "INTEGER"], ["e", "C"], ["c", "INTEGER"]>>)
add_call_chain(<<A,D,BOOLEAN,D,d>>)
generate_java_code
type_check
add_command("d", "b", <<["c", "INTEGER"], ["a", "INTEGER"], ["d", "A"], ["INTEGER", "a"], ["C", "BOOLEAN"], ["a", "INTEGER"], ["c", "A"]>>)
add_query("A", "A", <<["b", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "BOOLEAN"]>>, "c")
add_command("C", "D", <<["C", "BOOLEAN"], ["D", "D"], ["C", "BOOLEAN"], ["c", "B"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["B", "BOOLEAN"]>>)
type_check
add_query("a", "B", <<["D", "BOOLEAN"], ["b", "INTEGER"], ["INTEGER", "BOOLEAN"], ["INTEGER", "a"], ["C", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["c", "INTEGER"], ["a", "c"], ["A", "b"]>>, "e")
add_command("INTEGER", "a", <<["INTEGER", "INTEGER"]>>)
add_call_chain(<<C,B>>)
equals
generate_java_code
add_call_chain(<<INTEGER,B,A>>)
type_check
logical_negation
add_command("D", "A", <<["D", "b"], ["b", "b"], ["A", "INTEGER"], ["b", "INTEGER"], ["b", "BOOLEAN"], ["c", "d"], ["a", "INTEGER"]>>)
add_attribute("A", "C", "C")
add_class(b)
add_call_chain(<<BOOLEAN>>)
int_value (30)
numerical_negation
add_call_chain(<<c,c,A,B,c,D>>)
add_class(D)
bool_value (false)
add_command("C", "D", <<["INTEGER", "BOOLEAN"], ["b", "A"], ["BOOLEAN", "A"], ["b", "INTEGER"], ["B", "BOOLEAN"], ["B", "INTEGER"], ["BOOLEAN", "INTEGER"], ["D", "b"]>>)
add_class(D)
logical_negation
greater_than
add_call_chain(<<a,C>>)
add_call_chain(<<c,A,C,B,e,A,C,D>>)
logical_negation
logical_negation
numerical_negation
add_command("C", "e", <<["c", "BOOLEAN"], ["b", "D"], ["A", "d"], ["c", "INTEGER"], ["INTEGER", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "INTEGER"], ["c", "INTEGER"], ["e", "BOOLEAN"]>>)
generate_java_code
add_command("d", "C", <<["d", "b"], ["A", "INTEGER"], ["D", "INTEGER"], ["B", "INTEGER"], ["a", "BOOLEAN"], ["B", "e"]>>)
add_call_chain(<<INTEGER,a>>)
add_command("BOOLEAN", "A", <<["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"]>>)
bool_value (false)
add_command("a", "b", <<["D", "B"], ["c", "INTEGER"], ["c", "INTEGER"], ["D", "INTEGER"], ["A", "INTEGER"], ["D", "INTEGER"]>>)
subtraction
numerical_negation
generate_java_code
add_call_chain(<<B,a,B,c,d,B,a,B>>)
add_call_chain(<<D,b>>)
