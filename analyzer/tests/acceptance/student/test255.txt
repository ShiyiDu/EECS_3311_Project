equals
add_attribute("D", "D", "BOOLEAN")
add_call_chain(<<B,D,A>>)
addition
add_call_chain(<<A,C>>)
add_command("a", "a", <<["C", "INTEGER"], ["B", "B"], ["b", "BOOLEAN"]>>)
conjunction
add_command("d", "A", <<["B", "d"], ["D", "INTEGER"], ["d", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "C"], ["D", "INTEGER"]>>)
add_attribute("d", "A", "INTEGER")
int_value (29)
add_command("C", "e", <<["BOOLEAN", "b"], ["C", "INTEGER"], ["a", "BOOLEAN"], ["c", "INTEGER"], ["d", "INTEGER"]>>)
bool_value (false)
conjunction
bool_value (true)
disjunction
add_call_chain(<<D,b,A>>)
logical_negation
add_call_chain(<<A,INTEGER,a,B,B>>)
bool_value (false)
logical_negation
logical_negation
logical_negation
int_value (24)
add_call_chain(<<D,B>>)
add_query("b", "A", <<["C", "BOOLEAN"], ["A", "C"], ["a", "INTEGER"], ["c", "A"], ["A", "INTEGER"]>>, "c")
add_attribute("BOOLEAN", "D", "BOOLEAN")
add_call_chain(<<B,e,D,D,a,A,BOOLEAN>>)
logical_negation
int_value (42)
generate_java_code
numerical_negation
add_query("D", "C", <<["c", "INTEGER"], ["INTEGER", "BOOLEAN"], ["d", "INTEGER"], ["a", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["D", "BOOLEAN"], ["D", "C"]>>, "D")
add_command("A", "INTEGER", <<["b", "INTEGER"]>>)
add_query("a", "BOOLEAN", <<["INTEGER", "INTEGER"], ["B", "BOOLEAN"], ["a", "C"], ["D", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "BOOLEAN"]>>, "D")
add_call_chain(<<INTEGER,BOOLEAN,INTEGER,b,B>>)
add_call_chain(<<INTEGER,e,A,D,B>>)
add_attribute("c", "d", "BOOLEAN")
generate_java_code
equals
logical_negation
add_query("d", "C", <<["a", "INTEGER"], ["c", "c"], ["b", "b"]>>, "INTEGER")
numerical_negation
type_check
add_call_chain(<<B,a,C,A,INTEGER>>)
add_call_chain(<<d,b,a,e,b,e,a,D>>)
add_attribute("D", "B", "INTEGER")
disjunction
greater_than
int_value (13)
add_call_chain(<<A,a,e,A>>)
int_value (44)
add_query("b", "B", <<["C", "INTEGER"], ["INTEGER", "A"], ["D", "INTEGER"], ["d", "BOOLEAN"], ["B", "INTEGER"]>>, "B")
add_class(e)
add_query("A", "D", <<["C", "BOOLEAN"], ["INTEGER", "D"], ["D", "c"], ["D", "BOOLEAN"], ["INTEGER", "D"], ["C", "INTEGER"], ["b", "b"]>>, "e")
add_attribute("e", "B", "INTEGER")
add_call_chain(<<D,B,b,e,b,INTEGER,c>>)
int_value (15)
multiplication
add_call_chain(<<c,a,b>>)
logical_negation
add_attribute("D", "c", "BOOLEAN")
equals
type_check
add_class(A)
numerical_negation
add_query("c", "INTEGER", <<["D", "BOOLEAN"], ["b", "INTEGER"], ["A", "D"], ["b", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["D", "INTEGER"], ["A", "INTEGER"]>>, "d")
add_attribute("c", "BOOLEAN", "b")
logical_negation
generate_java_code
add_class(BOOLEAN)
add_call_chain(<<e,a,A,e,D>>)
type_check
add_call_chain(<<B,d,C,B,d>>)
add_attribute("B", "e", "BOOLEAN")
add_query("e", "INTEGER", <<["a", "a"], ["a", "INTEGER"], ["a", "BOOLEAN"], ["INTEGER", "c"], ["A", "C"], ["e", "INTEGER"]>>, "d")
add_call_chain(<<BOOLEAN,A,A,e>>)
add_call_chain(<<a,C,C,D,BOOLEAN,C,INTEGER>>)
generate_java_code
int_value (39)
add_query("C", "INTEGER", <<["d", "INTEGER"], ["e", "BOOLEAN"]>>, "D")
add_class(D)
quotient
add_attribute("e", "C", "B")
addition
numerical_negation
disjunction
bool_value (true)
add_query("B", "B", <<["D", "A"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>, "C")
add_query("e", "b", <<["b", "d"]>>, "e")
add_call_chain(<<e>>)
add_query("B", "A", <<["a", "BOOLEAN"], ["D", "B"], ["e", "BOOLEAN"], ["A", "a"], ["e", "BOOLEAN"]>>, "D")
add_attribute("A", "c", "INTEGER")
add_query("e", "a", <<["e", "INTEGER"], ["D", "INTEGER"]>>, "D")
add_call_chain(<<d,a>>)
add_attribute("D", "c", "INTEGER")
add_class(C)
bool_value (true)
type_check
add_call_chain(<<INTEGER,D,d,c>>)
add_call_chain(<<D>>)
add_command("INTEGER", "D", <<["C", "D"], ["BOOLEAN", "b"], ["a", "C"], ["B", "C"], ["C", "A"], ["d", "BOOLEAN"], ["C", "d"], ["d", "BOOLEAN"]>>)
logical_negation
numerical_negation
int_value (20)
int_value (42)
bool_value (true)
disjunction
bool_value (false)
add_attribute("c", "d", "e")
add_call_chain(<<INTEGER>>)
disjunction
add_call_chain(<<B,B,c,B,D,c>>)
greater_than
logical_negation
add_attribute("INTEGER", "d", "INTEGER")
add_call_chain(<<B,D>>)
add_query("e", "C", <<["A", "C"], ["b", "INTEGER"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "BOOLEAN"]>>, "c")
bool_value (false)
add_command("e", "C", <<["c", "d"], ["BOOLEAN", "b"], ["D", "INTEGER"], ["e", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["D", "INTEGER"]>>)
add_call_chain(<<BOOLEAN,d>>)
add_class(c)
int_value (9)
numerical_negation
type_check
logical_negation
less_than
add_query("INTEGER", "c", <<["B", "BOOLEAN"], ["C", "INTEGER"], ["e", "BOOLEAN"], ["a", "BOOLEAN"], ["b", "INTEGER"], ["d", "INTEGER"], ["c", "BOOLEAN"]>>, "e")
generate_java_code
type_check
type_check
add_command("INTEGER", "INTEGER", <<["C", "e"], ["D", "INTEGER"], ["d", "INTEGER"]>>)
add_attribute("a", "c", "BOOLEAN")
subtraction
add_class(c)
bool_value (true)
numerical_negation
type_check
numerical_negation
add_attribute("A", "e", "INTEGER")
add_class(C)
add_attribute("a", "d", "e")
numerical_negation
add_command("b", "BOOLEAN", <<["d", "INTEGER"], ["A", "a"], ["C", "BOOLEAN"], ["A", "INTEGER"]>>)
add_query("a", "INTEGER", <<["INTEGER", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "INTEGER"], ["a", "INTEGER"], ["BOOLEAN", "INTEGER"], ["e", "a"], ["B", "INTEGER"]>>, "B")
add_query("a", "e", <<["B", "BOOLEAN"], ["b", "C"], ["A", "INTEGER"], ["A", "b"], ["B", "BOOLEAN"]>>, "A")
add_attribute("A", "d", "INTEGER")
add_attribute("C", "BOOLEAN", "a")
add_call_chain(<<b,b>>)
numerical_negation
disjunction
generate_java_code
add_call_chain(<<A,C,D,d,a,c,e>>)
add_call_chain(<<c,d,A>>)
int_value (18)
generate_java_code
type_check
add_attribute("d", "C", "e")
logical_negation
add_query("d", "D", <<["D", "INTEGER"], ["D", "BOOLEAN"], ["B", "c"], ["C", "A"], ["a", "INTEGER"], ["a", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "INTEGER"]>>, "e")
conjunction
add_attribute("BOOLEAN", "a", "INTEGER")
disjunction
int_value (13)
add_query("D", "C", <<["b", "d"], ["A", "INTEGER"], ["d", "INTEGER"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["a", "B"], ["a", "BOOLEAN"]>>, "c")
generate_java_code
add_call_chain(<<C,c,B,C>>)
bool_value (true)
add_call_chain(<<C,d,e,B,b,BOOLEAN,e,c>>)
add_class(d)
add_class(b)
add_command("A", "INTEGER", <<["d", "B"], ["INTEGER", "INTEGER"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["b", "e"], ["b", "INTEGER"]>>)
conjunction
modulo
add_attribute("C", "b", "BOOLEAN")
generate_java_code
bool_value (true)
logical_negation
add_command("D", "A", <<["INTEGER", "BOOLEAN"]>>)
generate_java_code
type_check
int_value (16)
bool_value (false)
int_value (43)
bool_value (true)
modulo
add_command("D", "c", <<["C", "INTEGER"], ["A", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "BOOLEAN"]>>)
bool_value (false)
disjunction
type_check
add_command("BOOLEAN", "A", <<["A", "A"]>>)
add_query("a", "A", <<["C", "A"], ["a", "B"], ["e", "e"], ["INTEGER", "INTEGER"], ["A", "b"], ["D", "b"], ["D", "INTEGER"]>>, "B")
generate_java_code
generate_java_code
type_check
add_call_chain(<<C,B,B,B,c,b,d>>)
add_call_chain(<<BOOLEAN,C,c,B,C,b,A,d,D>>)
