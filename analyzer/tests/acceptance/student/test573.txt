less_than
add_call_chain(<<e,A,BOOLEAN,c,c,c,a,c,B>>)
equals
bool_value (true)
add_query("A", "A", <<["b", "D"]>>, "C")
subtraction
add_command("C", "A", <<["B", "INTEGER"], ["a", "D"], ["B", "INTEGER"], ["BOOLEAN", "INTEGER"], ["INTEGER", "BOOLEAN"], ["b", "e"], ["A", "INTEGER"]>>)
type_check
multiplication
add_call_chain(<<b,A,e,b,d,D,B,e>>)
add_query("C", "A", <<["b", "BOOLEAN"], ["a", "c"]>>, "BOOLEAN")
bool_value (false)
add_class(d)
int_value (8)
equals
logical_negation
type_check
bool_value (false)
add_attribute("e", "b", "INTEGER")
int_value (25)
int_value (25)
bool_value (false)
add_attribute("e", "C", "C")
conjunction
add_call_chain(<<A,c,a,c,D>>)
logical_negation
numerical_negation
numerical_negation
add_call_chain(<<A,A,c,C,a,b,B,e,a>>)
conjunction
bool_value (true)
add_query("INTEGER", "C", <<["B", "INTEGER"], ["C", "D"], ["e", "b"]>>, "B")
greater_than
numerical_negation
add_attribute("INTEGER", "e", "BOOLEAN")
multiplication
add_attribute("B", "INTEGER", "INTEGER")
bool_value (true)
add_call_chain(<<B,d,B,D,B,d,A,D,A>>)
add_query("INTEGER", "c", <<["B", "BOOLEAN"], ["d", "INTEGER"], ["e", "BOOLEAN"], ["e", "d"], ["c", "e"], ["d", "a"], ["INTEGER", "BOOLEAN"]>>, "BOOLEAN")
int_value (7)
add_class(B)
add_call_chain(<<A,A,D,d,C>>)
add_attribute("D", "e", "BOOLEAN")
int_value (44)
add_query("A", "a", <<["A", "C"], ["C", "BOOLEAN"], ["d", "INTEGER"], ["d", "INTEGER"], ["d", "BOOLEAN"], ["e", "BOOLEAN"], ["a", "BOOLEAN"]>>, "e")
add_call_chain(<<c,D,INTEGER,c>>)
bool_value (false)
add_call_chain(<<d>>)
logical_negation
type_check
add_call_chain(<<a,B,C,d,a,B,D>>)
int_value (19)
add_call_chain(<<b,A,INTEGER,d>>)
numerical_negation
quotient
int_value (44)
generate_java_code
multiplication
disjunction
logical_negation
conjunction
numerical_negation
add_attribute("C", "b", "BOOLEAN")
bool_value (true)
add_query("C", "c", <<["B", "INTEGER"], ["C", "INTEGER"], ["c", "BOOLEAN"], ["A", "e"], ["a", "INTEGER"], ["D", "INTEGER"], ["b", "INTEGER"]>>, "B")
bool_value (true)
add_call_chain(<<C,b,d,c,c,b,d>>)
generate_java_code
bool_value (true)
add_command("A", "D", <<["A", "c"], ["e", "b"], ["A", "C"], ["C", "d"]>>)
type_check
add_call_chain(<<d,d,B,D,B>>)
bool_value (false)
add_attribute("a", "a", "BOOLEAN")
equals
logical_negation
add_call_chain(<<e,A,B>>)
equals
equals
bool_value (true)
disjunction
add_command("d", "b", <<["c", "C"], ["c", "INTEGER"], ["D", "INTEGER"], ["B", "INTEGER"], ["C", "INTEGER"], ["INTEGER", "BOOLEAN"], ["C", "a"], ["a", "BOOLEAN"]>>)
type_check
numerical_negation
add_call_chain(<<A,D,B,A,B,D,C,a,D>>)
type_check
add_query("a", "A", <<["C", "INTEGER"], ["A", "b"]>>, "BOOLEAN")
int_value (2)
add_attribute("A", "a", "BOOLEAN")
bool_value (true)
type_check
add_query("A", "C", <<["D", "BOOLEAN"], ["c", "BOOLEAN"], ["a", "INTEGER"], ["c", "INTEGER"], ["D", "INTEGER"], ["d", "BOOLEAN"], ["b", "BOOLEAN"], ["e", "INTEGER"]>>, "c")
add_command("c", "a", <<["B", "A"], ["a", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "BOOLEAN"]>>)
add_query("a", "b", <<["INTEGER", "BOOLEAN"], ["A", "INTEGER"], ["d", "BOOLEAN"], ["e", "a"], ["d", "BOOLEAN"], ["e", "b"], ["B", "BOOLEAN"], ["e", "INTEGER"]>>, "BOOLEAN")
generate_java_code
add_call_chain(<<BOOLEAN,b,d,D,c,e,b,e,c>>)
add_attribute("A", "c", "INTEGER")
add_command("D", "B", <<["d", "BOOLEAN"], ["A", "B"], ["b", "BOOLEAN"], ["d", "INTEGER"]>>)
add_attribute("C", "BOOLEAN", "INTEGER")
int_value (26)
add_attribute("e", "b", "INTEGER")
add_query("A", "a", <<["B", "a"], ["C", "c"], ["D", "BOOLEAN"]>>, "b")
add_attribute("b", "b", "d")
int_value (39)
quotient
generate_java_code
int_value (2)
conjunction
bool_value (true)
less_than
type_check
add_query("BOOLEAN", "C", <<["A", "e"], ["c", "c"]>>, "D")
generate_java_code
numerical_negation
type_check
add_class(e)
add_class(a)
int_value (46)
type_check
bool_value (true)
generate_java_code
int_value (12)
type_check
logical_negation
add_call_chain(<<B,a,BOOLEAN,a,BOOLEAN,C>>)
add_call_chain(<<INTEGER>>)
multiplication
add_call_chain(<<A,INTEGER,d>>)
add_call_chain(<<c>>)
add_command("A", "c", <<["c", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "C"], ["C", "INTEGER"], ["c", "INTEGER"], ["a", "BOOLEAN"], ["b", "e"]>>)
add_call_chain(<<e,b,D,e,A,c,B>>)
add_query("A", "C", <<["INTEGER", "BOOLEAN"]>>, "B")
add_query("a", "c", <<["d", "C"], ["b", "B"], ["e", "INTEGER"], ["C", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>, "INTEGER")
add_call_chain(<<INTEGER,BOOLEAN,A,d,A,b,C>>)
add_call_chain(<<e,a,INTEGER>>)
add_command("c", "e", <<["INTEGER", "BOOLEAN"]>>)
type_check
add_class(C)
less_than
add_attribute("c", "A", "e")
disjunction
add_attribute("d", "C", "INTEGER")
int_value (32)
add_attribute("a", "B", "BOOLEAN")
bool_value (false)
logical_negation
bool_value (true)
int_value (1)
add_call_chain(<<C,b>>)
add_command("D", "C", <<["a", "INTEGER"], ["b", "D"], ["c", "BOOLEAN"], ["b", "INTEGER"], ["c", "INTEGER"], ["e", "BOOLEAN"], ["D", "D"], ["D", "a"]>>)
add_call_chain(<<C,d,D>>)
logical_negation
add_attribute("D", "B", "INTEGER")
add_class(b)
add_class(D)
less_than
logical_negation
add_call_chain(<<D>>)
add_command("d", "B", <<["e", "INTEGER"], ["b", "BOOLEAN"], ["c", "b"], ["D", "a"]>>)
bool_value (false)
add_attribute("BOOLEAN", "c", "d")
int_value (16)
quotient
add_query("d", "c", <<["c", "BOOLEAN"], ["C", "INTEGER"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["c", "D"], ["D", "INTEGER"], ["D", "D"], ["e", "BOOLEAN"]>>, "b")
add_command("c", "c", <<["B", "BOOLEAN"], ["C", "INTEGER"], ["A", "C"]>>)
add_command("A", "B", <<["INTEGER", "D"], ["c", "INTEGER"], ["c", "INTEGER"], ["C", "BOOLEAN"]>>)
bool_value (true)
logical_negation
numerical_negation
int_value (22)
add_command("d", "c", <<["C", "D"], ["c", "e"]>>)
add_query("A", "b", <<["INTEGER", "a"], ["b", "INTEGER"], ["b", "C"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["A", "INTEGER"]>>, "c")
add_query("e", "D", <<["d", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "A"]>>, "a")
logical_negation
add_call_chain(<<B,D,INTEGER,c,c,A,a,a>>)
bool_value (true)
add_query("BOOLEAN", "A", <<["a", "INTEGER"], ["BOOLEAN", "INTEGER"]>>, "C")
add_query("C", "D", <<["d", "BOOLEAN"], ["INTEGER", "INTEGER"]>>, "d")
add_call_chain(<<C,d,INTEGER,e,e,A,a,BOOLEAN,A>>)
add_class(D)
add_class(b)
subtraction
int_value (33)
add_call_chain(<<D,a,B>>)
add_query("B", "A", <<["B", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "INTEGER"], ["d", "INTEGER"], ["INTEGER", "INTEGER"], ["B", "C"], ["d", "b"]>>, "D")
add_command("c", "c", <<["A", "BOOLEAN"], ["b", "INTEGER"], ["D", "INTEGER"], ["A", "B"], ["D", "INTEGER"], ["a", "BOOLEAN"], ["e", "BOOLEAN"]>>)
add_call_chain(<<A>>)
add_attribute("b", "e", "INTEGER")
logical_negation
add_call_chain(<<A,A,BOOLEAN,INTEGER,B,d,c>>)
bool_value (false)
logical_negation
type_check
numerical_negation
add_call_chain(<<BOOLEAN,A,b,BOOLEAN,c,B>>)
bool_value (true)
logical_negation
add_attribute("d", "e", "INTEGER")
logical_negation
add_class(b)
addition
add_call_chain(<<a,e,e>>)
addition
int_value (41)
modulo
int_value (28)
logical_negation
bool_value (true)
less_than
logical_negation
add_call_chain(<<B,BOOLEAN,c>>)
add_command("D", "a", <<["INTEGER", "BOOLEAN"], ["B", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["B", "INTEGER"], ["d", "INTEGER"], ["D", "BOOLEAN"]>>)
bool_value (false)
add_query("d", "e", <<["B", "INTEGER"], ["A", "BOOLEAN"]>>, "D")
add_call_chain(<<e,B,a,D>>)
int_value (43)
add_call_chain(<<e,e,e,c,C>>)
bool_value (true)
add_query("A", "e", <<["c", "INTEGER"], ["c", "C"], ["A", "b"]>>, "a")
add_attribute("D", "A", "B")
add_command("e", "A", <<["a", "INTEGER"], ["C", "b"], ["d", "d"], ["e", "C"]>>)
add_call_chain(<<A,C,A,A>>)
add_query("A", "A", <<["D", "BOOLEAN"], ["e", "INTEGER"], ["b", "INTEGER"]>>, "d")
equals
int_value (33)
add_class(B)
type_check
logical_negation
generate_java_code
add_command("D", "e", <<["c", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "INTEGER"], ["BOOLEAN", "A"], ["e", "b"]>>)
add_command("D", "a", <<["a", "INTEGER"]>>)
type_check
bool_value (false)
add_command("d", "D", <<["b", "BOOLEAN"], ["a", "INTEGER"], ["A", "C"], ["c", "BOOLEAN"], ["C", "BOOLEAN"]>>)
add_query("b", "D", <<["c", "D"], ["D", "D"], ["INTEGER", "INTEGER"]>>, "b")
numerical_negation
less_than
add_class(d)
add_call_chain(<<a,a,c,a>>)
int_value (28)
add_attribute("a", "C", "INTEGER")
int_value (24)
bool_value (true)
add_attribute("A", "c", "INTEGER")
conjunction
numerical_negation
less_than
add_attribute("c", "C", "INTEGER")
