int_value (34)
bool_value (true)
add_call_chain(<<BOOLEAN,d,e,A,C,C,B>>)
add_attribute("D", "C", "BOOLEAN")
add_command("C", "a", <<["e", "INTEGER"]>>)
add_query("C", "c", <<["B", "C"]>>, "d")
generate_java_code
add_call_chain(<<a,C,A,c,d,D,e,b,b>>)
add_attribute("D", "D", "BOOLEAN")
add_call_chain(<<d>>)
logical_negation
add_call_chain(<<C>>)
addition
add_call_chain(<<e,B>>)
int_value (41)
numerical_negation
add_call_chain(<<b,a,C,B,B,d,BOOLEAN,c>>)
modulo
add_call_chain(<<C,a,BOOLEAN,c,e,D,b,B,B>>)
add_query("INTEGER", "C", <<["c", "INTEGER"], ["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "C"]>>, "e")
add_attribute("c", "b", "BOOLEAN")
add_call_chain(<<D>>)
add_attribute("b", "a", "a")
add_command("d", "d", <<["INTEGER", "d"], ["C", "D"], ["a", "c"], ["d", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "c"]>>)
bool_value (false)
equals
modulo
numerical_negation
add_call_chain(<<a,C,D,INTEGER,B,b,a>>)
add_call_chain(<<a,a,d,B,b,c,a,A>>)
bool_value (false)
add_command("C", "A", <<["c", "BOOLEAN"], ["A", "e"], ["e", "INTEGER"], ["c", "INTEGER"], ["b", "a"]>>)
equals
int_value (10)
add_attribute("C", "A", "INTEGER")
bool_value (true)
bool_value (false)
bool_value (false)
bool_value (true)
quotient
conjunction
add_attribute("b", "A", "e")
logical_negation
greater_than
int_value (23)
bool_value (false)
bool_value (true)
multiplication
int_value (5)
bool_value (true)
add_query("a", "B", <<["INTEGER", "INTEGER"]>>, "b")
add_command("a", "c", <<["A", "A"]>>)
add_command("c", "c", <<["A", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "INTEGER"]>>)
bool_value (true)
add_command("A", "D", <<["c", "e"], ["BOOLEAN", "INTEGER"], ["a", "a"], ["C", "D"], ["a", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "C"], ["INTEGER", "BOOLEAN"], ["d", "BOOLEAN"]>>)
generate_java_code
add_query("a", "B", <<["a", "INTEGER"], ["e", "INTEGER"], ["INTEGER", "D"], ["D", "INTEGER"], ["c", "INTEGER"], ["a", "BOOLEAN"], ["B", "INTEGER"]>>, "b")
add_call_chain(<<b,C,c,c>>)
add_call_chain(<<C,A,c,e,e,A,c>>)
add_attribute("A", "B", "BOOLEAN")
add_command("B", "a", <<["BOOLEAN", "INTEGER"], ["a", "a"], ["e", "INTEGER"], ["B", "D"], ["D", "BOOLEAN"], ["b", "a"], ["d", "A"]>>)
add_query("a", "A", <<["b", "BOOLEAN"], ["b", "INTEGER"], ["b", "BOOLEAN"], ["c", "INTEGER"], ["BOOLEAN", "INTEGER"], ["INTEGER", "INTEGER"]>>, "D")
add_query("d", "D", <<["e", "D"], ["INTEGER", "INTEGER"], ["INTEGER", "INTEGER"], ["C", "INTEGER"]>>, "b")
addition
add_attribute("A", "a", "BOOLEAN")
add_call_chain(<<C,C,B>>)
add_attribute("e", "C", "INTEGER")
add_call_chain(<<b>>)
add_call_chain(<<d,B>>)
add_call_chain(<<d,BOOLEAN,d,C,e>>)
add_query("b", "b", <<["D", "BOOLEAN"], ["d", "INTEGER"], ["e", "C"], ["B", "C"], ["b", "INTEGER"], ["C", "INTEGER"]>>, "B")
add_attribute("c", "d", "INTEGER")
add_query("D", "A", <<["d", "INTEGER"], ["A", "BOOLEAN"], ["e", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "INTEGER"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["A", "INTEGER"]>>, "B")
generate_java_code
conjunction
logical_negation
equals
add_command("BOOLEAN", "e", <<["D", "INTEGER"], ["a", "INTEGER"], ["d", "INTEGER"], ["B", "INTEGER"], ["INTEGER", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["a", "INTEGER"]>>)
add_query("A", "a", <<["B", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "C"], ["INTEGER", "D"], ["a", "a"], ["A", "BOOLEAN"], ["C", "INTEGER"]>>, "c")
generate_java_code
add_command("B", "e", <<["B", "INTEGER"], ["c", "BOOLEAN"], ["D", "INTEGER"], ["A", "INTEGER"], ["d", "INTEGER"]>>)
add_call_chain(<<B,e,e,b,C,A>>)
add_class(A)
add_attribute("c", "e", "INTEGER")
greater_than
disjunction
int_value (9)
add_call_chain(<<d,D,C,d,A,a,c,b,BOOLEAN>>)
add_attribute("C", "B", "BOOLEAN")
numerical_negation
add_query("D", "d", <<["c", "INTEGER"], ["B", "BOOLEAN"], ["e", "C"], ["c", "INTEGER"], ["D", "b"], ["B", "INTEGER"], ["c", "INTEGER"]>>, "C")
add_call_chain(<<D,B,a,D>>)
numerical_negation
generate_java_code
add_call_chain(<<D,d,d,A,B,e,INTEGER>>)
add_query("e", "INTEGER", <<["d", "INTEGER"], ["a", "BOOLEAN"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["b", "INTEGER"], ["b", "INTEGER"], ["a", "BOOLEAN"], ["A", "A"]>>, "B")
add_command("A", "B", <<["d", "B"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["e", "INTEGER"], ["D", "d"], ["INTEGER", "INTEGER"], ["d", "BOOLEAN"], ["e", "D"], ["e", "D"]>>)
add_call_chain(<<e,c,D,A>>)
add_attribute("c", "C", "INTEGER")
add_class(e)
add_attribute("b", "B", "INTEGER")
add_attribute("a", "B", "INTEGER")
add_attribute("e", "B", "INTEGER")
less_than
add_query("A", "A", <<["e", "INTEGER"], ["BOOLEAN", "INTEGER"]>>, "C")
add_class(A)
add_command("A", "BOOLEAN", <<["A", "BOOLEAN"], ["b", "INTEGER"], ["A", "INTEGER"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["A", "BOOLEAN"]>>)
logical_negation
equals
bool_value (true)
conjunction
numerical_negation
int_value (25)
int_value (10)
add_call_chain(<<a,D,B,INTEGER,BOOLEAN,D,C,e,A>>)
add_call_chain(<<a,B,d,b,a,B,e,INTEGER,a>>)
add_class(e)
bool_value (true)
add_attribute("B", "e", "INTEGER")
add_attribute("BOOLEAN", "A", "INTEGER")
int_value (43)
numerical_negation
int_value (27)
add_query("A", "e", <<["a", "BOOLEAN"], ["INTEGER", "D"]>>, "C")
add_command("c", "A", <<["BOOLEAN", "INTEGER"], ["INTEGER", "BOOLEAN"], ["b", "INTEGER"], ["d", "INTEGER"]>>)
add_class(b)
numerical_negation
numerical_negation
add_call_chain(<<d,D,B,a,e>>)
add_attribute("e", "e", "INTEGER")
numerical_negation
add_attribute("B", "a", "INTEGER")
int_value (2)
add_call_chain(<<D,D,d,C,A,d,A,a,INTEGER>>)
int_value (15)
add_call_chain(<<e,BOOLEAN,INTEGER,A,c,B>>)
add_query("A", "c", <<["D", "b"], ["INTEGER", "INTEGER"], ["d", "INTEGER"], ["d", "BOOLEAN"]>>, "C")
int_value (43)
disjunction
int_value (39)
int_value (4)
type_check
greater_than
logical_negation
add_command("BOOLEAN", "A", <<["D", "D"], ["C", "BOOLEAN"], ["B", "INTEGER"]>>)
add_query("A", "A", <<["A", "C"], ["D", "BOOLEAN"]>>, "c")
int_value (44)
add_attribute("B", "a", "D")
add_call_chain(<<a,D,a,d>>)
add_call_chain(<<D,b,A,a,e,c,D,D>>)
numerical_negation
numerical_negation
generate_java_code
add_attribute("d", "B", "B")
int_value (7)
add_class(INTEGER)
int_value (37)
bool_value (false)
conjunction
add_query("b", "INTEGER", <<["D", "INTEGER"], ["D", "A"], ["INTEGER", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "c"], ["d", "INTEGER"], ["D", "INTEGER"], ["e", "INTEGER"], ["C", "INTEGER"]>>, "B")
multiplication
add_call_chain(<<C>>)
disjunction
add_query("D", "INTEGER", <<["c", "BOOLEAN"]>>, "b")
type_check
type_check
add_attribute("C", "c", "BOOLEAN")
add_command("D", "D", <<["e", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "INTEGER"], ["a", "INTEGER"]>>)
generate_java_code
add_query("d", "D", <<["B", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "A"], ["D", "BOOLEAN"]>>, "INTEGER")
generate_java_code
add_query("INTEGER", "A", <<["D", "B"], ["d", "BOOLEAN"], ["C", "e"], ["d", "C"], ["b", "A"], ["BOOLEAN", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["A", "e"]>>, "BOOLEAN")
add_command("C", "D", <<["e", "BOOLEAN"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["INTEGER", "INTEGER"], ["e", "B"], ["D", "BOOLEAN"], ["b", "INTEGER"], ["D", "e"]>>)
conjunction
add_query("b", "c", <<["c", "BOOLEAN"], ["BOOLEAN", "b"], ["d", "INTEGER"]>>, "d")
int_value (6)
add_call_chain(<<c>>)
addition
numerical_negation
add_command("D", "INTEGER", <<["D", "d"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "a"], ["A", "BOOLEAN"], ["B", "e"], ["INTEGER", "INTEGER"], ["b", "INTEGER"]>>)
type_check
add_command("C", "B", <<["c", "INTEGER"], ["A", "A"], ["a", "B"], ["b", "INTEGER"], ["B", "B"], ["b", "B"]>>)
type_check
add_class(B)
add_call_chain(<<e,e,D,C,B>>)
add_attribute("c", "c", "e")
add_query("e", "D", <<["a", "INTEGER"], ["a", "INTEGER"], ["A", "INTEGER"], ["BOOLEAN", "INTEGER"], ["INTEGER", "BOOLEAN"], ["d", "INTEGER"], ["e", "BOOLEAN"], ["C", "BOOLEAN"]>>, "a")
add_call_chain(<<A,BOOLEAN,BOOLEAN,A,b,a>>)
add_command("C", "a", <<["C", "c"], ["B", "BOOLEAN"], ["c", "b"], ["c", "d"], ["D", "INTEGER"], ["c", "BOOLEAN"], ["D", "C"]>>)
add_call_chain(<<D,D,d,C>>)
int_value (30)
subtraction
add_call_chain(<<D,a,D,B,d,b,b>>)
type_check
greater_than
add_query("D", "D", <<["D", "INTEGER"], ["C", "BOOLEAN"]>>, "C")
less_than
add_call_chain(<<e,b,a,D>>)
type_check
conjunction
bool_value (false)
add_call_chain(<<a,B,C,BOOLEAN,BOOLEAN>>)
add_attribute("INTEGER", "C", "INTEGER")
add_command("e", "b", <<["B", "A"], ["INTEGER", "INTEGER"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["d", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>)
numerical_negation
greater_than
add_attribute("e", "C", "BOOLEAN")
add_query("d", "b", <<["A", "C"]>>, "a")
int_value (16)
int_value (39)
type_check
add_query("a", "B", <<["BOOLEAN", "BOOLEAN"], ["A", "a"], ["b", "BOOLEAN"], ["C", "d"], ["C", "BOOLEAN"], ["INTEGER", "D"]>>, "D")
add_query("c", "D", <<["C", "INTEGER"], ["BOOLEAN", "INTEGER"], ["e", "D"], ["b", "INTEGER"], ["B", "C"], ["B", "BOOLEAN"]>>, "INTEGER")
add_call_chain(<<c,BOOLEAN,c>>)
logical_negation
add_call_chain(<<d>>)
add_command("a", "d", <<["INTEGER", "BOOLEAN"], ["a", "INTEGER"], ["B", "BOOLEAN"], ["d", "INTEGER"]>>)
logical_negation
add_call_chain(<<e,INTEGER,e,B,b,B>>)
add_attribute("D", "INTEGER", "INTEGER")
add_command("b", "a", <<["e", "BOOLEAN"], ["A", "c"], ["d", "INTEGER"]>>)
add_query("INTEGER", "d", <<["D", "INTEGER"], ["BOOLEAN", "INTEGER"], ["C", "BOOLEAN"], ["d", "B"], ["e", "BOOLEAN"], ["a", "a"], ["e", "INTEGER"], ["d", "c"]>>, "B")
add_command("B", "A", <<["e", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>)
add_command("a", "C", <<["b", "BOOLEAN"], ["e", "BOOLEAN"], ["INTEGER", "INTEGER"]>>)
type_check
logical_negation
numerical_negation
numerical_negation
int_value (23)
int_value (37)
equals
bool_value (true)
add_class(b)
bool_value (true)
add_command("INTEGER", "C", <<["INTEGER", "c"], ["C", "BOOLEAN"], ["a", "INTEGER"], ["a", "INTEGER"], ["C", "BOOLEAN"], ["d", "BOOLEAN"]>>)
type_check
add_call_chain(<<c,D,b,A,A,e,e,D,a>>)
bool_value (false)
add_query("a", "d", <<["A", "C"], ["D", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>, "A")
add_command("a", "a", <<["B", "INTEGER"], ["a", "INTEGER"], ["d", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "b"], ["A", "C"], ["A", "b"]>>)
add_command("B", "C", <<["c", "INTEGER"]>>)
numerical_negation
logical_negation
logical_negation
bool_value (true)
logical_negation
generate_java_code
add_command("D", "B", <<["b", "d"], ["A", "INTEGER"], ["b", "c"], ["d", "INTEGER"], ["a", "BOOLEAN"], ["a", "B"]>>)
add_call_chain(<<C,a,c>>)
add_attribute("INTEGER", "b", "BOOLEAN")
int_value (22)
generate_java_code
add_call_chain(<<d,d,INTEGER>>)
add_call_chain(<<A,INTEGER,D,D,C>>)
add_query("D", "c", <<["d", "B"], ["INTEGER", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "b"], ["C", "BOOLEAN"]>>, "a")
bool_value (true)
add_attribute("INTEGER", "a", "BOOLEAN")
add_call_chain(<<C,d,C,A,c,a,A,b>>)
