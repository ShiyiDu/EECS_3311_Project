add_call_chain(<<INTEGER,INTEGER,d,b,d>>)
disjunction
add_command("BOOLEAN", "A", <<["c", "INTEGER"], ["e", "c"], ["c", "INTEGER"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "B"], ["A", "BOOLEAN"], ["D", "INTEGER"]>>)
disjunction
bool_value (false)
type_check
int_value (48)
logical_negation
add_attribute("B", "A", "INTEGER")
int_value (29)
add_call_chain(<<d,C,a>>)
add_call_chain(<<A>>)
int_value (29)
numerical_negation
add_command("d", "C", <<["C", "a"], ["B", "INTEGER"], ["C", "D"], ["c", "INTEGER"], ["a", "INTEGER"], ["e", "INTEGER"]>>)
addition
bool_value (false)
logical_negation
add_call_chain(<<D,a,B,b,c>>)
add_command("b", "B", <<["D", "BOOLEAN"]>>)
add_query("A", "A", <<["D", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "e"], ["B", "C"], ["INTEGER", "INTEGER"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["e", "INTEGER"]>>, "d")
add_call_chain(<<e,INTEGER,D,A,BOOLEAN,INTEGER,A,e>>)
add_call_chain(<<D,A,d,C>>)
bool_value (true)
int_value (7)
bool_value (true)
numerical_negation
subtraction
logical_negation
equals
bool_value (true)
add_attribute("B", "A", "BOOLEAN")
generate_java_code
add_call_chain(<<e,d,a,c,C,a,B,B,A>>)
add_call_chain(<<c,a,A,B,d,d,e,d,D>>)
add_command("D", "c", <<["e", "INTEGER"]>>)
add_query("A", "C", <<["B", "INTEGER"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["B", "INTEGER"], ["B", "BOOLEAN"], ["B", "b"], ["B", "BOOLEAN"]>>, "D")
type_check
add_call_chain(<<A,A>>)
add_call_chain(<<b,d,c>>)
int_value (10)
logical_negation
logical_negation
numerical_negation
quotient
add_call_chain(<<C>>)
generate_java_code
int_value (23)
greater_than
int_value (25)
add_query("a", "D", <<["e", "INTEGER"], ["C", "BOOLEAN"], ["e", "a"], ["c", "A"]>>, "a")
disjunction
bool_value (false)
bool_value (false)
less_than
generate_java_code
add_call_chain(<<a,c,a,e,e,d,INTEGER>>)
modulo
logical_negation
add_call_chain(<<B>>)
add_call_chain(<<D>>)
add_query("d", "A", <<["e", "INTEGER"], ["a", "d"], ["a", "D"], ["C", "BOOLEAN"], ["e", "D"], ["e", "INTEGER"], ["b", "INTEGER"], ["A", "INTEGER"], ["b", "INTEGER"]>>, "d")
int_value (14)
add_attribute("A", "B", "INTEGER")
generate_java_code
logical_negation
disjunction
add_attribute("c", "A", "BOOLEAN")
add_query("b", "d", <<["BOOLEAN", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["a", "c"], ["A", "BOOLEAN"], ["d", "B"]>>, "INTEGER")
add_call_chain(<<e,B,B,C,BOOLEAN,d,d>>)
greater_than
type_check
add_call_chain(<<BOOLEAN,c>>)
add_query("c", "BOOLEAN", <<["d", "INTEGER"], ["B", "c"], ["A", "INTEGER"], ["c", "BOOLEAN"]>>, "b")
generate_java_code
add_call_chain(<<b,C>>)
add_command("BOOLEAN", "INTEGER", <<["C", "BOOLEAN"], ["c", "INTEGER"], ["a", "C"], ["d", "INTEGER"]>>)
add_call_chain(<<e,A,b,d,e,b,c,C>>)
numerical_negation
add_attribute("B", "D", "INTEGER")
logical_negation
add_command("C", "D", <<["a", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["c", "BOOLEAN"], ["C", "INTEGER"], ["b", "INTEGER"], ["D", "INTEGER"], ["e", "b"]>>)
add_call_chain(<<A,b,d,a,D,e>>)
add_class(a)
add_command("A", "C", <<["INTEGER", "BOOLEAN"], ["B", "e"], ["BOOLEAN", "BOOLEAN"], ["c", "BOOLEAN"], ["d", "INTEGER"], ["C", "BOOLEAN"], ["c", "c"], ["INTEGER", "BOOLEAN"]>>)
greater_than
numerical_negation
add_call_chain(<<B,D,INTEGER,A>>)
int_value (14)
add_call_chain(<<b,B,A,B,b,a,C>>)
add_attribute("e", "INTEGER", "BOOLEAN")
add_class(B)
add_attribute("D", "a", "INTEGER")
add_query("C", "B", <<["D", "BOOLEAN"], ["C", "d"], ["d", "INTEGER"], ["b", "C"], ["d", "INTEGER"], ["C", "INTEGER"]>>, "b")
logical_negation
add_command("d", "A", <<["B", "INTEGER"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["A", "e"], ["e", "D"], ["D", "INTEGER"], ["d", "BOOLEAN"]>>)
add_class(B)
logical_negation
generate_java_code
add_command("d", "d", <<["INTEGER", "INTEGER"], ["d", "D"]>>)
add_query("a", "C", <<["b", "BOOLEAN"], ["C", "BOOLEAN"]>>, "D")
type_check
less_than
less_than
int_value (17)
add_query("B", "b", <<["B", "BOOLEAN"]>>, "INTEGER")
logical_negation
conjunction
add_class(BOOLEAN)
logical_negation
add_attribute("a", "B", "INTEGER")
int_value (16)
type_check
generate_java_code
add_call_chain(<<d,D>>)
bool_value (true)
int_value (16)
add_query("B", "b", <<["A", "INTEGER"], ["e", "INTEGER"], ["b", "INTEGER"], ["D", "e"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "BOOLEAN"]>>, "C")
int_value (16)
generate_java_code
add_call_chain(<<BOOLEAN,c,B,c,a,e,c,a>>)
add_call_chain(<<c,C,B,A,D>>)
add_query("D", "B", <<["e", "INTEGER"], ["c", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "INTEGER"], ["e", "INTEGER"]>>, "A")
add_call_chain(<<a,d,A,C,b>>)
generate_java_code
multiplication
add_call_chain(<<C,D,A>>)
logical_negation
type_check
int_value (47)
int_value (37)
add_query("c", "e", <<["INTEGER", "b"], ["D", "BOOLEAN"], ["a", "d"], ["D", "BOOLEAN"], ["D", "A"], ["b", "B"], ["BOOLEAN", "BOOLEAN"]>>, "e")
logical_negation
add_call_chain(<<b,B,b,A,BOOLEAN,c>>)
bool_value (true)
add_call_chain(<<B>>)
add_attribute("D", "B", "D")
add_attribute("A", "B", "INTEGER")
generate_java_code
add_call_chain(<<b,a,e,B,a,a,INTEGER,A,B>>)
generate_java_code
add_command("D", "c", <<["C", "D"], ["d", "INTEGER"], ["D", "INTEGER"], ["C", "B"]>>)
type_check
addition
generate_java_code
add_query("c", "b", <<["INTEGER", "BOOLEAN"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["B", "b"]>>, "a")
add_class(D)
type_check
logical_negation
generate_java_code
add_call_chain(<<C,D,INTEGER>>)
addition
generate_java_code
add_attribute("a", "c", "BOOLEAN")
add_call_chain(<<e,A,B,D>>)
conjunction
int_value (5)
equals
add_attribute("d", "A", "C")
bool_value (true)
add_class(c)
conjunction
generate_java_code
add_attribute("e", "c", "b")
int_value (4)
logical_negation
int_value (5)
int_value (18)
add_call_chain(<<INTEGER,b,B,e,b,a,e>>)
add_attribute("A", "B", "INTEGER")
add_call_chain(<<d,C,b>>)
add_call_chain(<<d,B,c,C,B,INTEGER>>)
generate_java_code
logical_negation
add_attribute("B", "B", "INTEGER")
add_attribute("A", "b", "BOOLEAN")
modulo
add_command("a", "D", <<["e", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
conjunction
add_query("B", "D", <<["B", "BOOLEAN"], ["D", "B"]>>, "INTEGER")
disjunction
add_call_chain(<<BOOLEAN>>)
int_value (27)
int_value (9)
int_value (2)
add_call_chain(<<B,D,A,A,B,C,e>>)
add_attribute("A", "A", "BOOLEAN")
add_call_chain(<<INTEGER,C,C,A,A>>)
int_value (46)
add_command("A", "B", <<["b", "BOOLEAN"]>>)
add_attribute("d", "A", "INTEGER")
logical_negation
conjunction
int_value (7)
int_value (26)
numerical_negation
add_call_chain(<<b,B,INTEGER,C>>)
int_value (29)
add_class(A)
add_class(c)
quotient
add_attribute("c", "B", "c")
add_call_chain(<<a,C,d>>)
logical_negation
add_call_chain(<<A,a,d,A>>)
bool_value (true)
add_attribute("D", "INTEGER", "D")
disjunction
add_attribute("D", "A", "BOOLEAN")
add_class(D)
add_call_chain(<<B,D,a,D>>)
add_call_chain(<<D,c,A,C>>)
add_call_chain(<<c,BOOLEAN,e,b,a,C,BOOLEAN>>)
less_than
