add_attribute("D", "D", "BOOLEAN")
add_attribute("A", "B", "INTEGER")
add_attribute("A", "D", "INTEGER")
add_command("D", "INTEGER", <<["C", "B"], ["C", "INTEGER"]>>)
add_call_chain(<<e,B,INTEGER,C,A,e,e,b,C>>)
add_command("c", "c", <<["d", "INTEGER"], ["A", "b"], ["c", "BOOLEAN"]>>)
disjunction
multiplication
generate_java_code
int_value (11)
add_command("a", "b", <<["INTEGER", "INTEGER"], ["A", "INTEGER"], ["d", "INTEGER"], ["e", "BOOLEAN"]>>)
bool_value (true)
add_query("B", "d", <<["c", "c"], ["a", "c"], ["INTEGER", "b"], ["d", "INTEGER"], ["A", "INTEGER"], ["C", "INTEGER"], ["e", "D"], ["d", "BOOLEAN"], ["a", "INTEGER"]>>, "B")
add_query("d", "c", <<["c", "INTEGER"], ["D", "C"], ["C", "INTEGER"], ["INTEGER", "BOOLEAN"], ["c", "INTEGER"], ["INTEGER", "e"], ["C", "BOOLEAN"], ["D", "BOOLEAN"]>>, "d")
greater_than
equals
multiplication
greater_than
add_query("BOOLEAN", "c", <<["B", "INTEGER"], ["A", "b"], ["A", "b"], ["b", "B"], ["D", "e"], ["A", "c"], ["c", "INTEGER"], ["e", "BOOLEAN"]>>, "c")
numerical_negation
add_call_chain(<<a>>)
add_call_chain(<<B,b,d,INTEGER,d,b>>)
bool_value (false)
add_command("a", "B", <<["d", "INTEGER"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["INTEGER", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "A"], ["a", "BOOLEAN"], ["C", "BOOLEAN"]>>)
bool_value (false)
add_call_chain(<<e>>)
int_value (26)
int_value (27)
int_value (20)
greater_than
equals
add_class(d)
add_command("D", "C", <<["BOOLEAN", "INTEGER"], ["e", "INTEGER"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["B", "INTEGER"], ["B", "C"], ["e", "INTEGER"], ["C", "BOOLEAN"]>>)
add_call_chain(<<B,c,d,c,C,A,D,d>>)
add_call_chain(<<B,D,b,A,a,B>>)
modulo
conjunction
add_command("A", "D", <<["e", "D"], ["c", "D"], ["d", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["c", "BOOLEAN"]>>)
bool_value (true)
int_value (29)
logical_negation
numerical_negation
add_query("d", "A", <<["b", "d"], ["b", "c"]>>, "C")
disjunction
add_attribute("D", "b", "BOOLEAN")
multiplication
bool_value (true)
int_value (40)
conjunction
add_call_chain(<<d,BOOLEAN,c,C,d,D,C,BOOLEAN>>)
less_than
logical_negation
less_than
logical_negation
generate_java_code
add_command("BOOLEAN", "c", <<["B", "INTEGER"], ["B", "BOOLEAN"], ["e", "a"]>>)
add_query("c", "a", <<["BOOLEAN", "C"], ["A", "INTEGER"], ["INTEGER", "BOOLEAN"], ["c", "BOOLEAN"], ["e", "INTEGER"]>>, "INTEGER")
type_check
generate_java_code
int_value (11)
bool_value (false)
add_attribute("C", "B", "a")
int_value (37)
add_call_chain(<<BOOLEAN>>)
add_call_chain(<<C,C,e,D,e,b,B>>)
int_value (34)
add_class(a)
add_attribute("B", "A", "BOOLEAN")
add_class(e)
add_command("b", "a", <<["A", "a"], ["D", "BOOLEAN"], ["b", "e"], ["INTEGER", "BOOLEAN"], ["a", "e"], ["a", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>)
subtraction
multiplication
disjunction
add_attribute("D", "C", "A")
add_command("INTEGER", "A", <<["B", "BOOLEAN"], ["A", "c"], ["A", "D"], ["b", "INTEGER"], ["BOOLEAN", "INTEGER"], ["e", "INTEGER"], ["C", "BOOLEAN"]>>)
type_check
add_command("B", "C", <<["d", "INTEGER"], ["c", "INTEGER"], ["c", "BOOLEAN"], ["D", "C"], ["A", "INTEGER"], ["BOOLEAN", "INTEGER"], ["INTEGER", "INTEGER"], ["d", "INTEGER"]>>)
add_query("d", "a", <<["a", "BOOLEAN"], ["d", "INTEGER"], ["B", "BOOLEAN"]>>, "A")
int_value (44)
quotient
add_class(BOOLEAN)
add_query("INTEGER", "D", <<["d", "e"], ["b", "INTEGER"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["INTEGER", "e"], ["A", "c"], ["BOOLEAN", "BOOLEAN"], ["e", "BOOLEAN"], ["a", "INTEGER"]>>, "D")
add_class(e)
add_attribute("B", "d", "BOOLEAN")
generate_java_code
add_query("e", "C", <<["C", "INTEGER"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["c", "INTEGER"], ["e", "b"], ["D", "b"], ["C", "INTEGER"]>>, "e")
add_call_chain(<<B,A,b,A,C,C>>)
type_check
add_attribute("c", "BOOLEAN", "c")
add_command("B", "C", <<["b", "d"], ["b", "INTEGER"], ["d", "INTEGER"]>>)
add_query("d", "D", <<["A", "B"], ["d", "INTEGER"], ["a", "BOOLEAN"], ["C", "C"], ["A", "A"]>>, "C")
add_attribute("C", "A", "e")
add_command("e", "d", <<["A", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["e", "BOOLEAN"], ["a", "INTEGER"], ["d", "BOOLEAN"]>>)
add_command("BOOLEAN", "D", <<["a", "a"], ["C", "BOOLEAN"], ["d", "INTEGER"], ["c", "BOOLEAN"]>>)
add_attribute("C", "BOOLEAN", "INTEGER")
generate_java_code
add_command("C", "a", <<["c", "B"], ["b", "BOOLEAN"]>>)
add_call_chain(<<B>>)
logical_negation
logical_negation
disjunction
add_class(c)
add_call_chain(<<A>>)
type_check
int_value (23)
add_class(c)
add_class(A)
generate_java_code
generate_java_code
add_call_chain(<<A,a,A,A,b,e,D,d,e>>)
add_attribute("D", "C", "BOOLEAN")
bool_value (true)
numerical_negation
add_call_chain(<<BOOLEAN,D,b,d>>)
add_attribute("B", "A", "INTEGER")
logical_negation
generate_java_code
int_value (43)
multiplication
equals
add_class(D)
add_class(D)
numerical_negation
add_attribute("e", "D", "INTEGER")
quotient
numerical_negation
bool_value (false)
numerical_negation
int_value (4)
bool_value (true)
conjunction
add_call_chain(<<d,C,INTEGER,C,D>>)
add_query("D", "B", <<["b", "INTEGER"], ["c", "INTEGER"], ["A", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["e", "INTEGER"], ["c", "BOOLEAN"], ["b", "BOOLEAN"]>>, "d")
bool_value (false)
logical_negation
numerical_negation
add_query("C", "B", <<["e", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "INTEGER"]>>, "A")
disjunction
int_value (16)
add_call_chain(<<e,C,B>>)
bool_value (true)
add_command("c", "C", <<["e", "b"], ["d", "INTEGER"], ["b", "INTEGER"], ["C", "D"], ["b", "BOOLEAN"], ["INTEGER", "B"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "INTEGER"]>>)
add_call_chain(<<a,a,b,C,A,b,e>>)
int_value (8)
add_call_chain(<<b,d,INTEGER>>)
add_query("A", "b", <<["b", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "C"], ["b", "INTEGER"], ["d", "A"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "BOOLEAN"]>>, "BOOLEAN")
numerical_negation
logical_negation
add_attribute("a", "d", "BOOLEAN")
numerical_negation
numerical_negation
bool_value (false)
add_call_chain(<<INTEGER,a,a>>)
add_command("C", "C", <<["C", "a"], ["D", "INTEGER"], ["B", "INTEGER"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "c"], ["b", "BOOLEAN"]>>)
numerical_negation
type_check
generate_java_code
add_call_chain(<<b,D,a,A,BOOLEAN,INTEGER,e>>)
logical_negation
logical_negation
logical_negation
multiplication
add_attribute("c", "e", "BOOLEAN")
add_call_chain(<<A,c,B,B,d>>)
bool_value (false)
add_call_chain(<<INTEGER,INTEGER,d,d,d,BOOLEAN,c,a,A>>)
add_call_chain(<<a,a,D>>)
add_call_chain(<<e,BOOLEAN,e,BOOLEAN,e,C,d,c>>)
add_command("d", "A", <<["c", "c"], ["BOOLEAN", "e"], ["BOOLEAN", "a"]>>)
add_command("C", "A", <<["B", "BOOLEAN"]>>)
numerical_negation
add_call_chain(<<INTEGER,d,D,A,C,c,C>>)
type_check
add_command("b", "c", <<["d", "INTEGER"], ["e", "b"], ["c", "INTEGER"], ["A", "BOOLEAN"], ["C", "INTEGER"]>>)
logical_negation
add_query("b", "BOOLEAN", <<["b", "A"], ["e", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "INTEGER"], ["a", "INTEGER"]>>, "A")
modulo
add_call_chain(<<A,A,D,B,c,b,d,D>>)
add_query("BOOLEAN", "a", <<["D", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "C"], ["BOOLEAN", "BOOLEAN"]>>, "e")
greater_than
bool_value (false)
numerical_negation
int_value (24)
generate_java_code
bool_value (false)
add_call_chain(<<B,c,d,e,e,B,a,c,d>>)
add_query("A", "b", <<["INTEGER", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "BOOLEAN"]>>, "A")
logical_negation
add_command("C", "e", <<["a", "e"], ["a", "INTEGER"], ["b", "BOOLEAN"], ["INTEGER", "INTEGER"], ["BOOLEAN", "a"], ["b", "INTEGER"], ["B", "D"]>>)
add_query("d", "D", <<["D", "INTEGER"], ["a", "INTEGER"], ["D", "INTEGER"], ["D", "INTEGER"], ["a", "c"], ["c", "BOOLEAN"], ["A", "BOOLEAN"]>>, "d")
logical_negation
add_attribute("d", "a", "INTEGER")
quotient
add_attribute("a", "D", "INTEGER")
add_class(b)
int_value (38)
add_attribute("BOOLEAN", "D", "INTEGER")
greater_than
add_class(INTEGER)
bool_value (false)
add_call_chain(<<a>>)
add_query("e", "INTEGER", <<["D", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["c", "D"], ["D", "C"], ["b", "INTEGER"], ["b", "BOOLEAN"], ["D", "D"]>>, "b")
add_query("C", "a", <<["BOOLEAN", "BOOLEAN"], ["A", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["e", "C"], ["B", "e"], ["c", "B"], ["d", "INTEGER"], ["INTEGER", "INTEGER"], ["d", "BOOLEAN"]>>, "b")
add_call_chain(<<B,a,D,e,e,b>>)
add_attribute("A", "c", "c")
type_check
add_call_chain(<<e,a>>)
numerical_negation
less_than
logical_negation
add_call_chain(<<A,D,C,INTEGER,A>>)
add_call_chain(<<e,INTEGER,e,D>>)
add_class(e)
int_value (17)
add_attribute("e", "C", "B")
add_call_chain(<<A,a,B>>)
logical_negation
add_call_chain(<<B,B,A,d,C>>)
add_query("a", "BOOLEAN", <<["D", "BOOLEAN"], ["c", "INTEGER"]>>, "D")
add_command("e", "c", <<["B", "D"], ["B", "INTEGER"], ["B", "C"]>>)
add_attribute("e", "INTEGER", "BOOLEAN")
logical_negation
generate_java_code
add_query("A", "a", <<["e", "D"], ["c", "BOOLEAN"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["c", "A"], ["D", "INTEGER"], ["A", "B"], ["e", "INTEGER"]>>, "d")
type_check
add_call_chain(<<b,d,A,c,c,a,D>>)
numerical_negation
numerical_negation
logical_negation
add_query("e", "B", <<["b", "BOOLEAN"], ["b", "INTEGER"], ["BOOLEAN", "INTEGER"]>>, "e")
quotient
add_call_chain(<<d,b,a,C,e,e,a>>)
generate_java_code
add_call_chain(<<B,A,B,B,a>>)
add_call_chain(<<C,B,a,c,b,d,e>>)
add_call_chain(<<a,d,B,b,b,C,D,c>>)
add_attribute("C", "A", "INTEGER")
add_call_chain(<<A,A,d,b,D,A,b>>)
add_attribute("D", "C", "a")
add_attribute("c", "d", "e")
add_command("c", "d", <<["b", "BOOLEAN"], ["e", "d"], ["C", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["d", "BOOLEAN"], ["BOOLEAN", "B"], ["b", "INTEGER"]>>)
type_check
int_value (20)
add_attribute("D", "c", "d")
bool_value (false)
