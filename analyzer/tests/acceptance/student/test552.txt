add_class(C)
add_call_chain(<<a>>)
add_attribute("c", "D", "A")
generate_java_code
add_query("B", "B", <<["INTEGER", "INTEGER"], ["D", "INTEGER"], ["D", "d"], ["C", "BOOLEAN"]>>, "D")
add_command("C", "b", <<["C", "INTEGER"], ["A", "A"], ["D", "a"], ["d", "INTEGER"], ["D", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "B"]>>)
add_call_chain(<<A,D,D,A,b,INTEGER,INTEGER,B>>)
add_query("A", "b", <<["A", "INTEGER"], ["e", "INTEGER"], ["C", "BOOLEAN"], ["e", "INTEGER"], ["e", "INTEGER"], ["B", "c"], ["C", "b"], ["B", "INTEGER"], ["A", "BOOLEAN"]>>, "D")
bool_value (false)
add_attribute("c", "b", "C")
numerical_negation
logical_negation
add_query("d", "INTEGER", <<["a", "INTEGER"], ["INTEGER", "BOOLEAN"], ["INTEGER", "INTEGER"], ["c", "BOOLEAN"], ["c", "BOOLEAN"], ["b", "e"], ["BOOLEAN", "BOOLEAN"], ["A", "A"], ["A", "INTEGER"]>>, "a")
add_call_chain(<<B,c,c,c,C,D>>)
bool_value (false)
add_command("INTEGER", "D", <<["C", "INTEGER"], ["D", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["b", "D"], ["C", "C"], ["c", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "BOOLEAN"]>>)
addition
logical_negation
add_command("d", "A", <<["D", "INTEGER"], ["B", "B"], ["BOOLEAN", "BOOLEAN"], ["B", "BOOLEAN"]>>)
int_value (27)
type_check
add_class(B)
add_class(D)
less_than
add_query("b", "b", <<["a", "B"], ["C", "e"], ["a", "BOOLEAN"]>>, "e")
generate_java_code
add_call_chain(<<c,A,b,A,D>>)
add_call_chain(<<B,D,D,d>>)
numerical_negation
generate_java_code
conjunction
add_call_chain(<<e>>)
add_attribute("D", "A", "BOOLEAN")
int_value (26)
add_command("D", "a", <<["D", "INTEGER"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["INTEGER", "INTEGER"], ["b", "BOOLEAN"]>>)
add_call_chain(<<d,D,B,c,D>>)
less_than
add_attribute("C", "b", "BOOLEAN")
int_value (10)
equals
int_value (10)
disjunction
logical_negation
bool_value (true)
equals
add_class(A)
add_query("c", "B", <<["C", "INTEGER"], ["e", "INTEGER"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "c"]>>, "e")
bool_value (true)
generate_java_code
add_attribute("A", "e", "BOOLEAN")
multiplication
greater_than
numerical_negation
add_command("A", "A", <<["d", "BOOLEAN"]>>)
multiplication
add_class(C)
bool_value (true)
add_class(b)
bool_value (true)
bool_value (true)
modulo
add_attribute("d", "c", "C")
add_query("A", "D", <<["e", "INTEGER"], ["c", "C"], ["B", "BOOLEAN"], ["b", "b"], ["D", "BOOLEAN"], ["e", "INTEGER"], ["INTEGER", "a"], ["c", "BOOLEAN"], ["D", "BOOLEAN"]>>, "a")
numerical_negation
bool_value (true)
disjunction
generate_java_code
bool_value (false)
add_query("c", "c", <<["e", "BOOLEAN"], ["B", "INTEGER"]>>, "c")
add_call_chain(<<A,D>>)
add_command("D", "d", <<["C", "BOOLEAN"], ["d", "b"], ["A", "BOOLEAN"]>>)
bool_value (true)
numerical_negation
add_class(BOOLEAN)
int_value (15)
add_class(B)
type_check
int_value (29)
add_call_chain(<<A,c,D,c,c,b,C,A,e>>)
bool_value (true)
add_class(INTEGER)
type_check
add_attribute("c", "C", "a")
numerical_negation
add_class(e)
logical_negation
logical_negation
logical_negation
add_call_chain(<<C,C>>)
add_query("D", "D", <<["a", "INTEGER"], ["c", "A"], ["BOOLEAN", "BOOLEAN"], ["A", "D"], ["B", "B"], ["B", "BOOLEAN"]>>, "C")
bool_value (false)
logical_negation
logical_negation
bool_value (false)
add_call_chain(<<A,d,b>>)
type_check
type_check
add_attribute("A", "A", "d")
type_check
multiplication
add_class(a)
greater_than
generate_java_code
add_call_chain(<<e,c,a>>)
add_command("B", "e", <<["A", "BOOLEAN"], ["b", "BOOLEAN"]>>)
add_attribute("d", "A", "BOOLEAN")
add_command("e", "c", <<["e", "INTEGER"], ["B", "B"]>>)
add_call_chain(<<D,a,B>>)
add_query("BOOLEAN", "a", <<["C", "c"], ["B", "A"], ["B", "BOOLEAN"], ["d", "C"], ["a", "INTEGER"], ["D", "BOOLEAN"], ["b", "INTEGER"], ["e", "BOOLEAN"], ["B", "d"]>>, "INTEGER")
subtraction
numerical_negation
add_call_chain(<<a>>)
add_call_chain(<<e,d,B,c>>)
add_call_chain(<<C,BOOLEAN,d,A,c,D,d,C,INTEGER>>)
numerical_negation
int_value (14)
add_call_chain(<<B,a,D,B,b,B,e,d,D>>)
numerical_negation
add_class(a)
quotient
int_value (32)
int_value (15)
add_query("d", "b", <<["B", "INTEGER"], ["d", "e"], ["B", "BOOLEAN"], ["C", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["B", "BOOLEAN"], ["a", "A"], ["a", "BOOLEAN"], ["d", "INTEGER"]>>, "c")
numerical_negation
add_query("d", "BOOLEAN", <<["D", "INTEGER"], ["A", "BOOLEAN"], ["b", "d"], ["INTEGER", "INTEGER"], ["BOOLEAN", "B"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["d", "INTEGER"], ["D", "INTEGER"]>>, "e")
add_query("b", "INTEGER", <<["C", "b"]>>, "D")
bool_value (true)
logical_negation
type_check
add_query("b", "a", <<["B", "BOOLEAN"], ["D", "INTEGER"], ["a", "BOOLEAN"]>>, "B")
add_class(c)
add_call_chain(<<a,C>>)
add_command("INTEGER", "D", <<["B", "BOOLEAN"], ["a", "a"], ["A", "INTEGER"], ["B", "b"], ["C", "D"], ["b", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["A", "BOOLEAN"]>>)
add_query("C", "C", <<["B", "BOOLEAN"], ["D", "BOOLEAN"], ["a", "BOOLEAN"], ["b", "B"]>>, "e")
generate_java_code
add_attribute("BOOLEAN", "INTEGER", "d")
add_call_chain(<<B,D,c,A,BOOLEAN,b>>)
add_call_chain(<<B,D,BOOLEAN,INTEGER,c,D,A,D,e>>)
add_class(B)
conjunction
numerical_negation
generate_java_code
add_call_chain(<<c,c,a,C>>)
add_attribute("A", "b", "INTEGER")
bool_value (true)
greater_than
int_value (29)
add_query("b", "C", <<["C", "INTEGER"], ["C", "INTEGER"], ["e", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "D"], ["D", "b"], ["BOOLEAN", "BOOLEAN"], ["c", "BOOLEAN"], ["a", "B"]>>, "a")
add_attribute("BOOLEAN", "D", "INTEGER")
logical_negation
add_query("A", "c", <<["A", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "c"], ["B", "A"], ["d", "d"], ["c", "e"], ["BOOLEAN", "B"], ["BOOLEAN", "INTEGER"]>>, "A")
less_than
add_query("D", "b", <<["a", "A"], ["e", "INTEGER"], ["b", "INTEGER"], ["b", "BOOLEAN"]>>, "D")
add_command("a", "c", <<["a", "D"], ["INTEGER", "INTEGER"], ["D", "BOOLEAN"]>>)
int_value (3)
