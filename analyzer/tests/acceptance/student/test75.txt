greater_than
numerical_negation
add_command("a", "a", <<["b", "BOOLEAN"], ["e", "D"], ["D", "INTEGER"], ["d", "b"], ["D", "BOOLEAN"], ["C", "A"], ["c", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["d", "b"]>>)
int_value (18)
disjunction
type_check
bool_value (false)
int_value (19)
int_value (10)
int_value (10)
logical_negation
disjunction
quotient
int_value (32)
add_class(c)
generate_java_code
numerical_negation
add_command("a", "a", <<["INTEGER", "BOOLEAN"], ["C", "b"], ["a", "c"], ["D", "INTEGER"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["a", "C"]>>)
add_query("C", "INTEGER", <<["e", "BOOLEAN"]>>, "a")
add_command("b", "D", <<["d", "INTEGER"], ["A", "e"], ["A", "INTEGER"], ["B", "BOOLEAN"]>>)
add_query("d", "A", <<["A", "INTEGER"], ["A", "BOOLEAN"], ["b", "C"], ["C", "INTEGER"], ["a", "INTEGER"], ["A", "a"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["C", "BOOLEAN"]>>, "C")
add_class(a)
add_call_chain(<<B,b,BOOLEAN,c,d,d>>)
int_value (17)
add_query("d", "BOOLEAN", <<["BOOLEAN", "BOOLEAN"], ["INTEGER", "INTEGER"]>>, "D")
add_call_chain(<<INTEGER>>)
add_call_chain(<<D,D,e,a,BOOLEAN,A,A,C,B>>)
logical_negation
conjunction
logical_negation
add_query("b", "A", <<["b", "D"], ["D", "INTEGER"], ["b", "a"]>>, "e")
int_value (1)
bool_value (false)
int_value (11)
add_call_chain(<<e,d,d>>)
numerical_negation
add_class(a)
type_check
bool_value (false)
generate_java_code
logical_negation
greater_than
add_call_chain(<<C>>)
conjunction
add_command("c", "INTEGER", <<["B", "c"], ["e", "d"], ["d", "BOOLEAN"], ["b", "D"], ["INTEGER", "BOOLEAN"], ["d", "a"], ["c", "e"]>>)
type_check
addition
numerical_negation
add_call_chain(<<B,d,a,INTEGER,e,e,e,D>>)
add_call_chain(<<c,BOOLEAN,d,B>>)
add_attribute("c", "A", "a")
int_value (30)
add_query("D", "e", <<["c", "BOOLEAN"], ["B", "a"], ["B", "INTEGER"], ["D", "INTEGER"], ["e", "BOOLEAN"], ["C", "INTEGER"]>>, "b")
int_value (21)
add_class(b)
greater_than
add_class(b)
add_query("A", "b", <<["A", "BOOLEAN"], ["B", "INTEGER"], ["A", "B"], ["a", "BOOLEAN"], ["e", "INTEGER"], ["e", "e"], ["B", "e"], ["c", "BOOLEAN"]>>, "e")
bool_value (true)
add_command("B", "BOOLEAN", <<["e", "INTEGER"], ["b", "INTEGER"], ["a", "INTEGER"], ["BOOLEAN", "B"], ["c", "BOOLEAN"], ["B", "A"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["e", "INTEGER"]>>)
generate_java_code
add_class(e)
generate_java_code
quotient
generate_java_code
add_call_chain(<<a,A,BOOLEAN,c,C>>)
add_class(e)
bool_value (false)
add_call_chain(<<e,D,d,D>>)
conjunction
generate_java_code
addition
add_command("e", "BOOLEAN", <<["INTEGER", "INTEGER"], ["C", "INTEGER"]>>)
add_call_chain(<<D,BOOLEAN,c,c,d,BOOLEAN,d>>)
add_query("c", "INTEGER", <<["d", "BOOLEAN"], ["A", "b"], ["B", "INTEGER"]>>, "B")
int_value (21)
add_command("A", "A", <<["c", "BOOLEAN"], ["A", "BOOLEAN"]>>)
generate_java_code
type_check
bool_value (true)
conjunction
type_check
add_class(c)
add_call_chain(<<D,D>>)
numerical_negation
generate_java_code
add_command("BOOLEAN", "D", <<["C", "BOOLEAN"], ["e", "BOOLEAN"], ["a", "INTEGER"], ["D", "BOOLEAN"], ["B", "BOOLEAN"]>>)
numerical_negation
add_call_chain(<<a,b,A,d,A,c,e,A>>)
numerical_negation
add_attribute("D", "e", "BOOLEAN")
modulo
add_query("B", "c", <<["C", "INTEGER"], ["INTEGER", "D"], ["c", "a"], ["b", "BOOLEAN"], ["A", "c"], ["C", "D"], ["e", "INTEGER"], ["C", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>, "e")
type_check
add_command("D", "a", <<["b", "D"], ["C", "BOOLEAN"]>>)
generate_java_code
add_query("A", "C", <<["b", "INTEGER"]>>, "b")
add_class(A)
generate_java_code
add_query("D", "D", <<["A", "c"], ["b", "BOOLEAN"], ["D", "INTEGER"], ["A", "BOOLEAN"]>>, "A")
add_class(e)
add_call_chain(<<A,b>>)
generate_java_code
add_class(d)
add_call_chain(<<e,C,INTEGER,B,a,a,c,C>>)
int_value (24)
logical_negation
int_value (23)
type_check
int_value (24)
add_command("C", "a", <<["D", "BOOLEAN"], ["b", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["INTEGER", "d"], ["C", "C"], ["c", "BOOLEAN"], ["BOOLEAN", "c"], ["BOOLEAN", "INTEGER"], ["c", "BOOLEAN"]>>)
logical_negation
disjunction
numerical_negation
int_value (21)
add_call_chain(<<b,e,b>>)
add_command("B", "e", <<["C", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "INTEGER"], ["d", "BOOLEAN"], ["A", "INTEGER"], ["B", "INTEGER"]>>)
quotient
add_call_chain(<<e,C>>)
add_query("c", "a", <<["BOOLEAN", "INTEGER"]>>, "a")
logical_negation
add_command("B", "b", <<["b", "INTEGER"]>>)
add_command("c", "A", <<["A", "INTEGER"], ["INTEGER", "INTEGER"], ["c", "BOOLEAN"], ["B", "INTEGER"], ["a", "INTEGER"], ["A", "INTEGER"]>>)
add_attribute("a", "C", "a")
add_call_chain(<<e,A,C,BOOLEAN,d>>)
int_value (49)
add_call_chain(<<D,d,e>>)
generate_java_code
add_query("c", "INTEGER", <<["a", "b"], ["C", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>, "e")
numerical_negation
add_query("a", "e", <<["C", "INTEGER"], ["e", "c"], ["a", "INTEGER"], ["b", "INTEGER"]>>, "A")
add_call_chain(<<A,C,D,BOOLEAN>>)
type_check
greater_than
add_command("BOOLEAN", "e", <<["D", "INTEGER"], ["A", "D"], ["INTEGER", "INTEGER"]>>)
add_command("e", "A", <<["a", "INTEGER"], ["A", "a"], ["c", "e"], ["b", "INTEGER"], ["A", "INTEGER"], ["B", "INTEGER"], ["D", "INTEGER"]>>)
numerical_negation
type_check
add_attribute("C", "D", "e")
add_query("c", "a", <<["e", "c"], ["d", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["B", "BOOLEAN"]>>, "C")
add_query("A", "c", <<["B", "BOOLEAN"]>>, "B")
add_call_chain(<<D,c,b,A,A,b,c>>)
disjunction
add_attribute("e", "D", "INTEGER")
add_call_chain(<<D,d>>)
generate_java_code
logical_negation
type_check
add_call_chain(<<e,C,D>>)
addition
add_call_chain(<<INTEGER,INTEGER,c>>)
add_query("INTEGER", "d", <<["D", "BOOLEAN"], ["c", "INTEGER"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "BOOLEAN"]>>, "e")
equals
addition
add_query("A", "d", <<["B", "A"], ["D", "INTEGER"]>>, "e")
add_query("D", "d", <<["c", "BOOLEAN"], ["A", "INTEGER"], ["BOOLEAN", "d"], ["a", "INTEGER"], ["INTEGER", "C"]>>, "INTEGER")
type_check
add_attribute("a", "A", "BOOLEAN")
type_check
add_class(b)
add_call_chain(<<b,A,b,B,a,C,D,D,A>>)
add_call_chain(<<e,a,a>>)
add_query("e", "A", <<["c", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "a"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["A", "INTEGER"], ["BOOLEAN", "INTEGER"], ["B", "BOOLEAN"]>>, "C")
bool_value (true)
numerical_negation
add_call_chain(<<C,INTEGER,d,b,b>>)
numerical_negation
add_attribute("a", "e", "INTEGER")
add_attribute("D", "e", "INTEGER")
equals
numerical_negation
add_class(A)
generate_java_code
add_attribute("d", "b", "e")
add_command("B", "B", <<["d", "INTEGER"], ["B", "INTEGER"], ["C", "B"], ["c", "INTEGER"], ["B", "d"], ["BOOLEAN", "d"], ["B", "INTEGER"]>>)
add_attribute("d", "a", "e")
add_command("C", "C", <<["C", "BOOLEAN"], ["e", "INTEGER"], ["D", "B"]>>)
add_class(d)
add_call_chain(<<C,a,b,D,e>>)
int_value (13)
add_query("D", "c", <<["A", "BOOLEAN"]>>, "d")
add_call_chain(<<B,c,C,b,B,INTEGER,BOOLEAN,a,a>>)
add_command("BOOLEAN", "c", <<["C", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "BOOLEAN"]>>)
add_query("A", "c", <<["c", "BOOLEAN"], ["c", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "INTEGER"], ["B", "BOOLEAN"], ["D", "INTEGER"], ["e", "BOOLEAN"], ["b", "b"]>>, "e")
type_check
type_check
add_call_chain(<<D,C,a,INTEGER,b,e>>)
int_value (26)
logical_negation
bool_value (false)
logical_negation
add_call_chain(<<BOOLEAN,B,c,e,INTEGER,A,a,c,BOOLEAN>>)
add_class(d)
logical_negation
add_query("a", "a", <<["c", "b"], ["a", "INTEGER"], ["C", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["B", "INTEGER"]>>, "A")
add_call_chain(<<b,b,D>>)
logical_negation
logical_negation
add_attribute("C", "e", "INTEGER")
add_command("D", "a", <<["BOOLEAN", "INTEGER"], ["d", "C"], ["D", "INTEGER"]>>)
int_value (3)
type_check
int_value (32)
add_attribute("b", "c", "D")
type_check
add_call_chain(<<e,e,d,b>>)
add_call_chain(<<c,BOOLEAN>>)
numerical_negation
generate_java_code
add_command("a", "a", <<["D", "INTEGER"], ["a", "BOOLEAN"], ["b", "d"], ["B", "a"], ["B", "INTEGER"], ["BOOLEAN", "d"], ["c", "BOOLEAN"], ["INTEGER", "c"], ["a", "BOOLEAN"]>>)
add_query("INTEGER", "INTEGER", <<["c", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["B", "INTEGER"], ["b", "BOOLEAN"], ["b", "e"], ["D", "BOOLEAN"]>>, "B")
add_query("INTEGER", "D", <<["b", "INTEGER"], ["C", "INTEGER"], ["d", "BOOLEAN"]>>, "A")
add_class(D)
int_value (34)
add_command("d", "e", <<["B", "BOOLEAN"], ["d", "b"], ["D", "b"], ["b", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "INTEGER"]>>)
add_call_chain(<<D,C>>)
numerical_negation
add_command("b", "b", <<["e", "INTEGER"], ["INTEGER", "INTEGER"], ["C", "INTEGER"]>>)
add_attribute("e", "C", "e")
bool_value (false)
add_call_chain(<<D,D,c>>)
logical_negation
add_query("D", "b", <<["a", "BOOLEAN"]>>, "e")
numerical_negation
generate_java_code
add_call_chain(<<B,a,e,BOOLEAN,D,e>>)
add_attribute("B", "INTEGER", "C")
bool_value (false)
add_call_chain(<<INTEGER,a,a,b,D>>)
add_call_chain(<<BOOLEAN,e,a,B,C,A>>)
quotient
add_attribute("d", "c", "BOOLEAN")
numerical_negation
conjunction
add_call_chain(<<INTEGER,c,e,b,c,INTEGER,D,B>>)
numerical_negation
int_value (10)
multiplication
int_value (4)
add_class(a)
logical_negation
