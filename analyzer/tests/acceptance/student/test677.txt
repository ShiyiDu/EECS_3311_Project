conjunction
logical_negation
add_call_chain(<<b,b,e,INTEGER,B,c,c,B>>)
add_call_chain(<<D,c,D,INTEGER,b>>)
add_class(e)
add_class(c)
generate_java_code
add_query("d", "a", <<["C", "e"], ["b", "BOOLEAN"], ["C", "INTEGER"], ["B", "INTEGER"], ["D", "a"], ["A", "INTEGER"]>>, "e")
bool_value (false)
add_attribute("d", "c", "INTEGER")
add_call_chain(<<B,e,INTEGER,a,B,A,B,b,A>>)
quotient
logical_negation
conjunction
int_value (3)
add_call_chain(<<a,A,B,b,C,B>>)
generate_java_code
logical_negation
add_call_chain(<<D,B,D,C,D,A,a>>)
add_command("d", "C", <<["b", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "BOOLEAN"], ["c", "B"], ["A", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "D"], ["BOOLEAN", "INTEGER"]>>)
modulo
equals
add_query("D", "D", <<["C", "BOOLEAN"], ["C", "e"], ["b", "INTEGER"], ["b", "BOOLEAN"], ["A", "BOOLEAN"]>>, "D")
numerical_negation
generate_java_code
add_query("b", "B", <<["D", "c"], ["a", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["B", "INTEGER"]>>, "A")
add_command("d", "d", <<["a", "D"], ["A", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
generate_java_code
add_command("d", "C", <<["B", "BOOLEAN"], ["INTEGER", "e"]>>)
int_value (19)
add_query("b", "C", <<["D", "BOOLEAN"], ["A", "INTEGER"], ["d", "INTEGER"], ["B", "e"], ["B", "C"], ["BOOLEAN", "INTEGER"], ["B", "a"], ["A", "a"], ["A", "BOOLEAN"]>>, "b")
bool_value (false)
less_than
add_attribute("e", "INTEGER", "INTEGER")
add_command("a", "e", <<["c", "e"]>>)
modulo
int_value (46)
add_command("b", "D", <<["a", "INTEGER"], ["e", "BOOLEAN"], ["a", "B"], ["c", "INTEGER"], ["A", "INTEGER"], ["b", "BOOLEAN"]>>)
add_class(c)
disjunction
disjunction
int_value (33)
add_class(INTEGER)
generate_java_code
add_class(d)
add_call_chain(<<b,C,BOOLEAN,c,A,A,INTEGER,D,B>>)
bool_value (false)
add_query("A", "a", <<["C", "BOOLEAN"], ["D", "b"], ["a", "INTEGER"], ["A", "INTEGER"], ["C", "INTEGER"], ["a", "BOOLEAN"], ["a", "c"]>>, "BOOLEAN")
add_query("INTEGER", "B", <<["b", "a"], ["d", "BOOLEAN"], ["e", "BOOLEAN"], ["d", "INTEGER"], ["BOOLEAN", "INTEGER"], ["B", "INTEGER"], ["INTEGER", "BOOLEAN"], ["B", "b"]>>, "INTEGER")
add_call_chain(<<D,d,BOOLEAN,C,B,B>>)
greater_than
conjunction
add_call_chain(<<e,C,BOOLEAN>>)
add_query("A", "D", <<["b", "c"], ["b", "INTEGER"], ["e", "D"], ["d", "BOOLEAN"], ["A", "INTEGER"]>>, "BOOLEAN")
int_value (17)
add_call_chain(<<c,a,c,c>>)
int_value (39)
multiplication
logical_negation
add_call_chain(<<C,A>>)
type_check
add_attribute("C", "e", "c")
type_check
int_value (15)
add_class(b)
add_command("B", "e", <<["c", "d"], ["a", "INTEGER"], ["b", "BOOLEAN"], ["e", "e"], ["D", "INTEGER"], ["b", "D"], ["e", "INTEGER"]>>)
add_attribute("d", "A", "INTEGER")
numerical_negation
numerical_negation
generate_java_code
add_class(A)
add_call_chain(<<e,INTEGER>>)
add_call_chain(<<b>>)
add_command("d", "b", <<["c", "C"], ["B", "INTEGER"], ["e", "INTEGER"], ["d", "a"], ["c", "INTEGER"]>>)
logical_negation
logical_negation
add_command("A", "INTEGER", <<["c", "INTEGER"], ["D", "INTEGER"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["d", "INTEGER"], ["d", "INTEGER"], ["a", "INTEGER"], ["A", "INTEGER"]>>)
add_call_chain(<<a>>)
bool_value (true)
add_call_chain(<<C,d,C,d,C>>)
add_attribute("C", "A", "INTEGER")
add_query("C", "D", <<["d", "INTEGER"], ["b", "BOOLEAN"]>>, "b")
add_command("A", "A", <<["c", "INTEGER"], ["c", "INTEGER"], ["B", "INTEGER"]>>)
disjunction
bool_value (true)
add_call_chain(<<INTEGER,BOOLEAN,b,INTEGER,A,C,B,C>>)
add_attribute("C", "a", "a")
add_call_chain(<<c,c,c,D,B,B,B,a>>)
numerical_negation
add_call_chain(<<INTEGER,c>>)
int_value (4)
add_command("a", "b", <<["C", "A"], ["e", "e"], ["D", "b"]>>)
logical_negation
int_value (48)
add_query("C", "A", <<["a", "C"], ["c", "INTEGER"], ["d", "b"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "BOOLEAN"]>>, "B")
quotient
add_class(C)
modulo
numerical_negation
add_attribute("INTEGER", "D", "BOOLEAN")
bool_value (false)
add_query("INTEGER", "b", <<["a", "a"]>>, "e")
int_value (35)
numerical_negation
add_attribute("B", "C", "D")
add_attribute("d", "c", "BOOLEAN")
add_command("a", "a", <<["e", "c"], ["a", "c"], ["C", "BOOLEAN"], ["A", "A"], ["a", "INTEGER"], ["b", "INTEGER"], ["a", "b"], ["C", "INTEGER"]>>)
add_command("a", "C", <<["b", "D"], ["d", "BOOLEAN"], ["D", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["INTEGER", "INTEGER"], ["B", "INTEGER"], ["e", "INTEGER"]>>)
add_query("e", "D", <<["INTEGER", "INTEGER"], ["e", "a"], ["b", "C"], ["D", "B"], ["C", "INTEGER"], ["c", "INTEGER"], ["A", "BOOLEAN"], ["a", "BOOLEAN"]>>, "B")
bool_value (true)
add_attribute("B", "C", "BOOLEAN")
add_command("A", "e", <<["B", "BOOLEAN"], ["A", "INTEGER"], ["A", "c"], ["a", "BOOLEAN"], ["c", "BOOLEAN"], ["a", "INTEGER"], ["A", "D"], ["BOOLEAN", "INTEGER"]>>)
greater_than
disjunction
add_command("D", "c", <<["d", "C"], ["D", "INTEGER"], ["B", "a"], ["INTEGER", "B"], ["BOOLEAN", "BOOLEAN"], ["e", "a"], ["A", "C"]>>)
int_value (18)
add_call_chain(<<BOOLEAN,D>>)
add_call_chain(<<A,e,e,A,c>>)
add_attribute("INTEGER", "e", "D")
generate_java_code
logical_negation
bool_value (true)
int_value (35)
logical_negation
add_command("d", "D", <<["D", "D"], ["C", "BOOLEAN"], ["a", "INTEGER"], ["d", "BOOLEAN"], ["d", "INTEGER"]>>)
bool_value (false)
bool_value (true)
less_than
int_value (8)
add_attribute("BOOLEAN", "e", "BOOLEAN")
int_value (23)
disjunction
logical_negation
add_query("e", "e", <<["B", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "B"], ["B", "INTEGER"], ["D", "INTEGER"]>>, "a")
int_value (30)
add_command("A", "C", <<["D", "b"], ["A", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "C"], ["B", "D"], ["d", "BOOLEAN"], ["D", "B"]>>)
add_call_chain(<<d,B,C,BOOLEAN,A,a,e>>)
add_query("e", "b", <<["A", "INTEGER"], ["e", "BOOLEAN"], ["d", "INTEGER"], ["D", "INTEGER"], ["a", "D"], ["A", "BOOLEAN"]>>, "BOOLEAN")
add_class(c)
add_class(B)
conjunction
add_attribute("C", "a", "BOOLEAN")
int_value (32)
add_query("BOOLEAN", "e", <<["c", "INTEGER"], ["b", "INTEGER"], ["A", "BOOLEAN"], ["B", "c"], ["B", "c"]>>, "INTEGER")
add_call_chain(<<BOOLEAN,C,a,B,d,d,a,D,d>>)
add_command("b", "b", <<["a", "INTEGER"], ["A", "INTEGER"]>>)
type_check
add_call_chain(<<A,d,B,A,B,D,D,C,C>>)
greater_than
logical_negation
add_call_chain(<<b,a,b,C,b,c,C,C>>)
numerical_negation
conjunction
subtraction
add_call_chain(<<b,d,b,C>>)
add_class(b)
add_query("D", "c", <<["b", "BOOLEAN"], ["B", "c"], ["D", "INTEGER"], ["c", "INTEGER"], ["C", "b"], ["a", "INTEGER"], ["e", "D"], ["d", "INTEGER"], ["A", "BOOLEAN"]>>, "a")
int_value (6)
bool_value (true)
add_call_chain(<<e,e,C,d,b,e,C>>)
generate_java_code
bool_value (false)
add_class(c)
less_than
less_than
bool_value (true)
greater_than
add_call_chain(<<D,D>>)
add_command("C", "a", <<["B", "d"], ["A", "BOOLEAN"], ["A", "INTEGER"], ["C", "e"], ["c", "INTEGER"], ["a", "B"], ["c", "INTEGER"]>>)
equals
bool_value (true)
add_call_chain(<<A,b>>)
logical_negation
less_than
add_query("a", "c", <<["d", "INTEGER"], ["BOOLEAN", "INTEGER"]>>, "D")
int_value (39)
generate_java_code
add_command("D", "BOOLEAN", <<["c", "c"], ["A", "B"], ["c", "d"], ["B", "e"], ["C", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "INTEGER"], ["b", "INTEGER"]>>)
generate_java_code
conjunction
int_value (33)
add_query("C", "C", <<["e", "INTEGER"], ["e", "C"], ["c", "INTEGER"], ["c", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "C"], ["d", "BOOLEAN"], ["b", "INTEGER"]>>, "D")
add_query("C", "C", <<["b", "INTEGER"], ["B", "INTEGER"], ["c", "c"], ["BOOLEAN", "e"], ["b", "BOOLEAN"], ["d", "INTEGER"], ["C", "D"], ["D", "INTEGER"]>>, "c")
int_value (42)
generate_java_code
bool_value (true)
bool_value (true)
conjunction
int_value (3)
numerical_negation
subtraction
add_command("B", "C", <<["B", "INTEGER"]>>)
add_command("C", "INTEGER", <<["INTEGER", "B"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["D", "INTEGER"]>>)
bool_value (true)
generate_java_code
greater_than
disjunction
bool_value (true)
logical_negation
int_value (48)
greater_than
generate_java_code
add_call_chain(<<C,A,b,A,D,d,A>>)
add_call_chain(<<B,B,D,A,B,A,b,C,B>>)
add_attribute("e", "C", "BOOLEAN")
bool_value (false)
add_class(D)
bool_value (true)
logical_negation
add_command("D", "c", <<["C", "a"], ["A", "A"], ["b", "INTEGER"], ["e", "C"], ["A", "e"], ["D", "d"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["a", "INTEGER"]>>)
add_call_chain(<<D>>)
add_query("d", "B", <<["a", "BOOLEAN"], ["A", "c"], ["a", "BOOLEAN"], ["D", "INTEGER"], ["BOOLEAN", "INTEGER"], ["b", "INTEGER"]>>, "c")
logical_negation
add_class(A)
less_than
greater_than
generate_java_code
int_value (8)
logical_negation
add_call_chain(<<INTEGER,D,C,B,B,e,b,a>>)
add_query("c", "e", <<["d", "INTEGER"], ["A", "BOOLEAN"], ["d", "d"], ["D", "INTEGER"], ["c", "D"]>>, "INTEGER")
add_command("D", "B", <<["a", "BOOLEAN"], ["A", "INTEGER"], ["b", "BOOLEAN"], ["d", "A"], ["d", "INTEGER"], ["D", "BOOLEAN"], ["BOOLEAN", "a"], ["B", "BOOLEAN"]>>)
add_call_chain(<<b,BOOLEAN,A,a,BOOLEAN,d>>)
add_call_chain(<<B,B,D>>)
