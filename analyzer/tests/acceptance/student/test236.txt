add_query("A", "d", <<["d", "C"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["B", "BOOLEAN"]>>, "C")
add_query("C", "C", <<["c", "INTEGER"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>, "a")
add_command("C", "INTEGER", <<["B", "D"]>>)
add_command("e", "c", <<["c", "B"], ["D", "BOOLEAN"], ["INTEGER", "e"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "A"], ["c", "BOOLEAN"]>>)
add_class(BOOLEAN)
type_check
add_attribute("e", "b", "INTEGER")
add_query("A", "A", <<["A", "a"]>>, "B")
numerical_negation
add_command("C", "BOOLEAN", <<["b", "BOOLEAN"], ["B", "c"], ["C", "C"], ["b", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["A", "e"], ["INTEGER", "BOOLEAN"]>>)
add_call_chain(<<A,C,B,e,c,A>>)
bool_value (true)
equals
logical_negation
add_query("INTEGER", "e", <<["B", "INTEGER"], ["BOOLEAN", "INTEGER"], ["B", "BOOLEAN"], ["A", "e"], ["e", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "INTEGER"]>>, "b")
add_call_chain(<<B,B,C,BOOLEAN,INTEGER,C,B>>)
add_call_chain(<<c>>)
add_query("C", "c", <<["d", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["c", "BOOLEAN"], ["d", "INTEGER"], ["A", "A"], ["D", "INTEGER"], ["B", "BOOLEAN"]>>, "a")
generate_java_code
logical_negation
add_call_chain(<<BOOLEAN>>)
add_call_chain(<<D,D,D,b,d>>)
bool_value (false)
multiplication
add_call_chain(<<b,d,B,B>>)
generate_java_code
numerical_negation
modulo
logical_negation
add_call_chain(<<C,c,d,B>>)
add_command("C", "C", <<["d", "c"], ["b", "INTEGER"], ["e", "INTEGER"]>>)
add_call_chain(<<C,C,c,INTEGER,D,b>>)
add_call_chain(<<C,D,c>>)
disjunction
add_command("b", "c", <<["c", "e"], ["e", "BOOLEAN"], ["a", "A"], ["b", "INTEGER"], ["d", "D"]>>)
add_attribute("A", "a", "INTEGER")
add_class(c)
int_value (18)
int_value (34)
add_attribute("e", "d", "INTEGER")
add_call_chain(<<c,A,C,C,B>>)
add_command("d", "d", <<["A", "INTEGER"], ["A", "C"], ["INTEGER", "A"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["C", "B"], ["e", "d"], ["C", "INTEGER"]>>)
logical_negation
add_query("a", "C", <<["A", "BOOLEAN"], ["a", "BOOLEAN"]>>, "a")
add_command("c", "d", <<["a", "INTEGER"]>>)
greater_than
type_check
add_attribute("INTEGER", "C", "a")
subtraction
int_value (7)
type_check
numerical_negation
add_attribute("C", "e", "INTEGER")
add_attribute("A", "b", "C")
add_attribute("B", "A", "BOOLEAN")
add_call_chain(<<b,c,c,a,B,b,D>>)
generate_java_code
add_attribute("e", "B", "BOOLEAN")
add_class(C)
bool_value (false)
add_call_chain(<<b,D,A,INTEGER>>)
multiplication
numerical_negation
add_call_chain(<<a,D,c,e,a,c,B,d,C>>)
add_call_chain(<<A,BOOLEAN,a,b,c,e>>)
type_check
numerical_negation
add_call_chain(<<d,c,A,d,D,C,b,e>>)
add_query("e", "BOOLEAN", <<["D", "INTEGER"], ["b", "BOOLEAN"], ["d", "INTEGER"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["C", "C"], ["d", "INTEGER"], ["B", "BOOLEAN"], ["B", "INTEGER"]>>, "C")
conjunction
numerical_negation
add_attribute("b", "INTEGER", "INTEGER")
generate_java_code
add_command("A", "A", <<["B", "BOOLEAN"], ["b", "D"], ["b", "c"], ["INTEGER", "BOOLEAN"], ["e", "INTEGER"]>>)
logical_negation
add_query("e", "B", <<["a", "d"], ["b", "BOOLEAN"], ["b", "c"], ["a", "INTEGER"]>>, "A")
bool_value (true)
numerical_negation
add_call_chain(<<d,B>>)
numerical_negation
int_value (5)
equals
add_call_chain(<<BOOLEAN,b,c,d,a,d>>)
add_call_chain(<<c,a,INTEGER>>)
add_query("a", "B", <<["c", "BOOLEAN"], ["B", "B"], ["c", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["INTEGER", "B"], ["INTEGER", "INTEGER"], ["a", "D"], ["B", "INTEGER"], ["e", "INTEGER"]>>, "B")
add_command("B", "a", <<["b", "INTEGER"]>>)
add_call_chain(<<A,c,C,D,c,a,B,a,e>>)
add_command("D", "e", <<["A", "INTEGER"], ["C", "A"], ["c", "e"], ["a", "a"], ["A", "D"], ["a", "INTEGER"], ["D", "d"], ["c", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>)
add_call_chain(<<d,A,e,d,INTEGER,e,a,c,e>>)
bool_value (true)
add_attribute("A", "A", "BOOLEAN")
add_query("e", "c", <<["B", "INTEGER"], ["INTEGER", "b"]>>, "C")
add_command("A", "D", <<["C", "INTEGER"], ["b", "INTEGER"], ["C", "c"], ["c", "INTEGER"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["d", "INTEGER"]>>)
multiplication
numerical_negation
add_query("b", "b", <<["C", "b"], ["B", "INTEGER"], ["B", "BOOLEAN"], ["c", "c"], ["A", "INTEGER"], ["B", "c"], ["B", "INTEGER"], ["B", "BOOLEAN"]>>, "e")
add_call_chain(<<c,C,A,INTEGER,D,B>>)
add_query("INTEGER", "d", <<["A", "BOOLEAN"], ["a", "A"], ["C", "BOOLEAN"], ["C", "B"], ["d", "c"], ["a", "BOOLEAN"], ["e", "BOOLEAN"]>>, "B")
int_value (30)
numerical_negation
logical_negation
type_check
bool_value (true)
add_query("B", "B", <<["c", "BOOLEAN"], ["e", "INTEGER"], ["a", "INTEGER"], ["B", "INTEGER"]>>, "C")
addition
add_command("b", "INTEGER", <<["INTEGER", "BOOLEAN"], ["c", "BOOLEAN"], ["b", "INTEGER"], ["e", "INTEGER"], ["A", "BOOLEAN"], ["d", "INTEGER"], ["D", "B"], ["e", "BOOLEAN"], ["e", "B"]>>)
logical_negation
generate_java_code
add_call_chain(<<e,A,B>>)
greater_than
numerical_negation
add_attribute("D", "C", "D")
add_command("C", "a", <<["BOOLEAN", "A"], ["c", "INTEGER"], ["e", "D"], ["e", "BOOLEAN"], ["a", "b"], ["b", "A"], ["BOOLEAN", "d"], ["A", "INTEGER"], ["D", "B"]>>)
add_attribute("a", "C", "INTEGER")
add_query("e", "D", <<["a", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "d"], ["C", "c"]>>, "BOOLEAN")
generate_java_code
type_check
add_call_chain(<<B,e,b,e,e,a,INTEGER,e,D>>)
add_attribute("a", "a", "A")
add_call_chain(<<INTEGER>>)
bool_value (true)
int_value (33)
numerical_negation
quotient
add_attribute("b", "INTEGER", "c")
add_query("d", "d", <<["A", "d"], ["d", "INTEGER"], ["a", "BOOLEAN"], ["a", "INTEGER"], ["D", "INTEGER"], ["b", "BOOLEAN"]>>, "A")
logical_negation
type_check
generate_java_code
add_attribute("A", "d", "d")
equals
type_check
greater_than
generate_java_code
bool_value (true)
add_attribute("D", "D", "BOOLEAN")
add_command("b", "d", <<["A", "INTEGER"], ["d", "BOOLEAN"], ["e", "C"], ["d", "d"], ["C", "d"]>>)
disjunction
bool_value (true)
add_attribute("D", "c", "INTEGER")
bool_value (true)
int_value (46)
add_call_chain(<<e,e,a>>)
int_value (7)
int_value (42)
add_call_chain(<<B,A,e,b>>)
type_check
logical_negation
bool_value (true)
add_attribute("D", "B", "a")
add_call_chain(<<C,C>>)
generate_java_code
add_attribute("B", "c", "BOOLEAN")
numerical_negation
numerical_negation
int_value (45)
bool_value (true)
add_query("d", "e", <<["A", "C"], ["A", "INTEGER"], ["b", "BOOLEAN"], ["d", "d"], ["d", "INTEGER"], ["INTEGER", "BOOLEAN"], ["b", "INTEGER"], ["INTEGER", "BOOLEAN"]>>, "D")
add_query("A", "C", <<["D", "C"], ["C", "BOOLEAN"]>>, "C")
logical_negation
numerical_negation
less_than
logical_negation
add_call_chain(<<D,B,D,d,d,c,D,A,B>>)
add_attribute("B", "c", "INTEGER")
add_class(a)
add_call_chain(<<a,d,b,d,B,c,BOOLEAN>>)
add_command("c", "d", <<["b", "INTEGER"], ["C", "C"], ["c", "INTEGER"], ["B", "INTEGER"], ["e", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "BOOLEAN"]>>)
generate_java_code
add_query("a", "e", <<["b", "D"], ["b", "BOOLEAN"], ["BOOLEAN", "c"]>>, "c")
add_call_chain(<<b,D>>)
type_check
add_query("A", "B", <<["A", "BOOLEAN"], ["B", "B"], ["b", "BOOLEAN"]>>, "C")
add_call_chain(<<B>>)
generate_java_code
int_value (39)
add_command("c", "A", <<["D", "INTEGER"], ["INTEGER", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "D"], ["BOOLEAN", "BOOLEAN"], ["b", "A"]>>)
add_call_chain(<<A,d,A,a,b,A,d,D>>)
add_command("A", "a", <<["b", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "a"], ["D", "INTEGER"], ["INTEGER", "BOOLEAN"], ["A", "INTEGER"], ["C", "INTEGER"]>>)
add_command("b", "C", <<["D", "A"], ["D", "b"], ["c", "A"], ["b", "INTEGER"], ["b", "INTEGER"], ["d", "BOOLEAN"], ["A", "INTEGER"], ["a", "C"], ["e", "INTEGER"]>>)
generate_java_code
add_query("c", "C", <<["e", "INTEGER"], ["D", "d"], ["e", "BOOLEAN"], ["B", "INTEGER"], ["c", "c"]>>, "c")
add_query("A", "B", <<["A", "INTEGER"], ["b", "C"], ["e", "A"], ["B", "INTEGER"], ["b", "BOOLEAN"]>>, "D")
add_command("a", "a", <<["INTEGER", "BOOLEAN"], ["C", "INTEGER"]>>)
multiplication
generate_java_code
add_call_chain(<<A,D,a,a,c,d,C,C>>)
add_call_chain(<<BOOLEAN>>)
bool_value (true)
int_value (27)
bool_value (false)
greater_than
add_query("C", "A", <<["e", "C"], ["d", "INTEGER"], ["BOOLEAN", "INTEGER"], ["INTEGER", "BOOLEAN"], ["e", "c"], ["D", "INTEGER"], ["b", "A"], ["D", "C"], ["BOOLEAN", "BOOLEAN"]>>, "D")
add_attribute("b", "c", "INTEGER")
add_call_chain(<<D>>)
greater_than
add_call_chain(<<c,b,e,B,a,B,A>>)
add_query("c", "b", <<["A", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["b", "e"], ["b", "INTEGER"], ["C", "BOOLEAN"]>>, "C")
multiplication
logical_negation
add_query("B", "d", <<["A", "BOOLEAN"], ["a", "D"], ["c", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["c", "INTEGER"], ["D", "A"], ["C", "INTEGER"]>>, "e")
add_call_chain(<<B,A,b>>)
logical_negation
add_call_chain(<<b,b,C>>)
add_call_chain(<<A>>)
generate_java_code
modulo
logical_negation
less_than
numerical_negation
bool_value (true)
add_call_chain(<<a,e,A,c>>)
int_value (5)
int_value (14)
modulo
less_than
add_command("a", "a", <<["c", "INTEGER"], ["c", "BOOLEAN"], ["a", "A"], ["D", "a"]>>)
int_value (40)
