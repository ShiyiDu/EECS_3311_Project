add_class(d)
add_attribute("c", "C", "BOOLEAN")
add_attribute("D", "INTEGER", "INTEGER")
conjunction
generate_java_code
bool_value (true)
add_attribute("b", "b", "INTEGER")
equals
add_attribute("e", "a", "INTEGER")
int_value (3)
int_value (44)
type_check
add_call_chain(<<B,B>>)
add_attribute("INTEGER", "INTEGER", "INTEGER")
add_command("e", "c", <<["C", "INTEGER"], ["B", "b"], ["BOOLEAN", "b"], ["C", "INTEGER"], ["D", "c"]>>)
add_query("A", "A", <<["D", "d"]>>, "C")
numerical_negation
equals
subtraction
add_class(d)
add_call_chain(<<e,B,d,c,B>>)
add_query("b", "d", <<["b", "BOOLEAN"], ["c", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>, "B")
add_attribute("d", "INTEGER", "INTEGER")
logical_negation
add_attribute("A", "A", "INTEGER")
add_call_chain(<<B,b,C>>)
add_attribute("a", "e", "INTEGER")
add_call_chain(<<C,e,C,e>>)
bool_value (true)
bool_value (false)
add_call_chain(<<d>>)
add_command("c", "D", <<["INTEGER", "INTEGER"], ["c", "A"], ["C", "BOOLEAN"], ["B", "INTEGER"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["C", "B"], ["b", "INTEGER"]>>)
add_attribute("e", "C", "INTEGER")
add_attribute("B", "a", "e")
subtraction
add_command("C", "c", <<["INTEGER", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["b", "INTEGER"], ["d", "BOOLEAN"], ["c", "a"]>>)
add_query("D", "D", <<["A", "INTEGER"], ["d", "A"], ["B", "D"], ["A", "C"], ["a", "INTEGER"], ["C", "C"]>>, "D")
add_query("A", "C", <<["INTEGER", "INTEGER"], ["C", "INTEGER"], ["b", "INTEGER"], ["d", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["A", "c"], ["D", "INTEGER"]>>, "B")
numerical_negation
add_query("d", "B", <<["e", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "A"], ["D", "BOOLEAN"]>>, "c")
less_than
add_query("a", "D", <<["D", "INTEGER"], ["B", "INTEGER"], ["c", "A"], ["a", "BOOLEAN"], ["B", "INTEGER"], ["D", "C"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>, "C")
add_call_chain(<<a,INTEGER,B>>)
add_class(e)
add_attribute("B", "INTEGER", "BOOLEAN")
add_call_chain(<<d,INTEGER,d,B,A,A>>)
add_call_chain(<<A,a>>)
add_query("C", "b", <<["e", "a"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "BOOLEAN"], ["b", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["INTEGER", "INTEGER"], ["C", "B"]>>, "e")
add_call_chain(<<INTEGER,INTEGER>>)
disjunction
greater_than
logical_negation
add_call_chain(<<a,INTEGER,A,C,a>>)
add_call_chain(<<A,A,e,B,C>>)
bool_value (true)
type_check
add_call_chain(<<C,e,e>>)
add_class(INTEGER)
numerical_negation
add_command("a", "a", <<["D", "a"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["a", "INTEGER"]>>)
addition
add_call_chain(<<B,b,c,e,B,A,e,BOOLEAN,C>>)
add_command("C", "B", <<["A", "BOOLEAN"], ["a", "A"], ["INTEGER", "BOOLEAN"], ["c", "INTEGER"], ["D", "a"], ["C", "BOOLEAN"], ["a", "B"], ["C", "B"]>>)
add_call_chain(<<BOOLEAN,A,D>>)
conjunction
add_command("e", "D", <<["b", "BOOLEAN"], ["d", "a"], ["B", "INTEGER"], ["a", "INTEGER"]>>)
add_attribute("d", "b", "c")
add_attribute("a", "C", "e")
logical_negation
bool_value (false)
quotient
type_check
add_query("A", "d", <<["d", "INTEGER"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["d", "BOOLEAN"], ["e", "b"]>>, "INTEGER")
add_call_chain(<<d,e,a,A,b,e,d>>)
quotient
bool_value (false)
logical_negation
bool_value (true)
bool_value (true)
add_call_chain(<<B,c>>)
add_command("INTEGER", "d", <<["d", "INTEGER"], ["A", "A"], ["D", "BOOLEAN"], ["b", "INTEGER"], ["d", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "INTEGER"]>>)
add_call_chain(<<A,BOOLEAN,e,A,d,c,B>>)
type_check
numerical_negation
numerical_negation
add_query("a", "e", <<["B", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "INTEGER"]>>, "A")
add_class(C)
add_attribute("b", "A", "b")
add_call_chain(<<D,c,BOOLEAN>>)
add_call_chain(<<C,A,D,c,d,INTEGER,e,C,A>>)
int_value (44)
logical_negation
type_check
logical_negation
disjunction
add_attribute("b", "D", "e")
add_call_chain(<<a,C,INTEGER,c,C>>)
subtraction
type_check
add_query("c", "B", <<["b", "INTEGER"], ["C", "d"], ["d", "BOOLEAN"], ["c", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["B", "a"], ["a", "c"], ["A", "INTEGER"]>>, "d")
bool_value (true)
int_value (44)
disjunction
add_call_chain(<<A,A,b,d,A,A,INTEGER>>)
generate_java_code
add_attribute("d", "D", "BOOLEAN")
add_query("BOOLEAN", "b", <<["D", "BOOLEAN"], ["C", "D"], ["e", "B"], ["e", "INTEGER"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["B", "d"], ["B", "e"]>>, "A")
numerical_negation
add_attribute("c", "D", "INTEGER")
conjunction
add_call_chain(<<BOOLEAN>>)
type_check
int_value (24)
disjunction
int_value (2)
disjunction
logical_negation
add_call_chain(<<BOOLEAN,d,B,C,b>>)
type_check
add_call_chain(<<B,A,a,e,b,b,d>>)
int_value (15)
bool_value (false)
numerical_negation
add_command("D", "B", <<["c", "a"], ["D", "e"], ["A", "a"], ["d", "a"]>>)
add_query("a", "b", <<["C", "A"], ["C", "C"], ["c", "b"], ["A", "INTEGER"], ["B", "INTEGER"], ["d", "INTEGER"], ["d", "b"], ["INTEGER", "A"], ["a", "C"]>>, "e")
logical_negation
bool_value (true)
int_value (47)
disjunction
add_attribute("e", "c", "INTEGER")
add_call_chain(<<BOOLEAN,D,D>>)
bool_value (true)
numerical_negation
add_command("BOOLEAN", "D", <<["b", "B"], ["c", "BOOLEAN"], ["C", "d"], ["B", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
add_call_chain(<<C,D,B,c,a,D,D>>)
numerical_negation
add_attribute("c", "b", "B")
add_query("A", "c", <<["e", "INTEGER"], ["b", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "d"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["A", "INTEGER"]>>, "D")
add_call_chain(<<B>>)
add_query("INTEGER", "A", <<["D", "BOOLEAN"]>>, "D")
bool_value (false)
logical_negation
logical_negation
type_check
add_call_chain(<<D,C>>)
add_call_chain(<<e,b,e,C,a,A,C,c>>)
numerical_negation
conjunction
logical_negation
add_query("D", "D", <<["INTEGER", "INTEGER"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["B", "INTEGER"], ["B", "e"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["a", "INTEGER"], ["a", "BOOLEAN"]>>, "c")
add_call_chain(<<b>>)
bool_value (false)
bool_value (true)
add_call_chain(<<b,d,a,c,e,a,A>>)
type_check
add_query("e", "a", <<["c", "INTEGER"], ["D", "INTEGER"], ["e", "B"], ["c", "BOOLEAN"], ["e", "A"], ["B", "INTEGER"]>>, "b")
multiplication
add_call_chain(<<BOOLEAN>>)
bool_value (true)
add_query("B", "A", <<["B", "INTEGER"], ["b", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "d"]>>, "A")
add_call_chain(<<A,D,a,B,C,e,a,d>>)
disjunction
add_command("BOOLEAN", "c", <<["c", "e"], ["INTEGER", "INTEGER"], ["d", "INTEGER"], ["B", "BOOLEAN"], ["e", "c"]>>)
int_value (49)
add_attribute("INTEGER", "e", "B")
add_call_chain(<<c,A,c,b,c,A>>)
int_value (11)
add_call_chain(<<e,c,D,A,d,C>>)
bool_value (false)
add_command("d", "C", <<["B", "a"], ["INTEGER", "a"], ["a", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "INTEGER"], ["a", "INTEGER"], ["INTEGER", "INTEGER"], ["C", "INTEGER"], ["e", "BOOLEAN"]>>)
add_attribute("c", "B", "d")
add_query("C", "C", <<["b", "INTEGER"], ["d", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "INTEGER"], ["B", "d"]>>, "B")
numerical_negation
add_command("B", "D", <<["e", "C"], ["b", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "INTEGER"], ["a", "INTEGER"], ["B", "a"], ["D", "BOOLEAN"]>>)
add_attribute("b", "B", "B")
add_query("a", "A", <<["B", "INTEGER"]>>, "C")
add_class(INTEGER)
type_check
quotient
modulo
add_attribute("C", "BOOLEAN", "BOOLEAN")
add_query("A", "C", <<["B", "B"], ["d", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["d", "B"], ["B", "c"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "a"], ["d", "INTEGER"]>>, "b")
add_query("e", "d", <<["C", "c"], ["A", "BOOLEAN"], ["d", "d"], ["b", "BOOLEAN"], ["d", "INTEGER"], ["d", "D"], ["C", "BOOLEAN"], ["a", "BOOLEAN"], ["b", "INTEGER"]>>, "B")
logical_negation
add_attribute("B", "D", "BOOLEAN")
add_call_chain(<<b,e,C>>)
generate_java_code
add_command("BOOLEAN", "e", <<["A", "INTEGER"], ["d", "INTEGER"], ["c", "C"]>>)
add_query("INTEGER", "B", <<["B", "e"], ["c", "BOOLEAN"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["A", "A"], ["a", "BOOLEAN"]>>, "d")
logical_negation
add_call_chain(<<D,a,c,b,D>>)
add_attribute("BOOLEAN", "INTEGER", "BOOLEAN")
numerical_negation
bool_value (false)
add_call_chain(<<A,BOOLEAN,B,e,C,D>>)
generate_java_code
logical_negation
greater_than
add_call_chain(<<a,D,d,D,a,e,B,B,c>>)
add_call_chain(<<B>>)
add_command("D", "A", <<["INTEGER", "BOOLEAN"], ["C", "INTEGER"], ["A", "INTEGER"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["C", "a"]>>)
conjunction
bool_value (false)
add_attribute("A", "e", "a")
logical_negation
int_value (21)
add_class(e)
add_call_chain(<<c,C,a,b,b,c>>)
add_command("BOOLEAN", "a", <<["b", "BOOLEAN"], ["D", "e"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "INTEGER"]>>)
add_attribute("B", "D", "c")
add_attribute("B", "INTEGER", "BOOLEAN")
int_value (44)
equals
add_call_chain(<<e,d>>)
add_class(C)
logical_negation
bool_value (true)
