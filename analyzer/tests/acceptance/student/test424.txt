type_check
multiplication
generate_java_code
addition
int_value (28)
logical_negation
add_attribute("A", "c", "e")
addition
add_call_chain(<<C,e,e,a,D,e>>)
add_call_chain(<<c,C,A,d>>)
add_query("d", "B", <<["B", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "B"]>>, "A")
conjunction
int_value (34)
add_call_chain(<<d,A>>)
add_command("a", "c", <<["C", "INTEGER"], ["d", "e"]>>)
add_call_chain(<<C,e,D,c,C>>)
numerical_negation
bool_value (true)
add_attribute("c", "a", "INTEGER")
bool_value (true)
subtraction
add_attribute("D", "D", "B")
int_value (11)
type_check
add_attribute("e", "D", "D")
numerical_negation
int_value (44)
add_command("BOOLEAN", "c", <<["INTEGER", "INTEGER"], ["b", "BOOLEAN"], ["C", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "INTEGER"], ["D", "e"]>>)
add_attribute("BOOLEAN", "e", "BOOLEAN")
add_attribute("INTEGER", "B", "BOOLEAN")
add_command("b", "e", <<["d", "INTEGER"], ["INTEGER", "d"], ["BOOLEAN", "INTEGER"]>>)
int_value (5)
greater_than
subtraction
add_call_chain(<<INTEGER,c,A,B,D>>)
bool_value (false)
int_value (28)
add_call_chain(<<a,C,C,c,c,B,A>>)
numerical_negation
disjunction
add_attribute("c", "INTEGER", "INTEGER")
int_value (4)
bool_value (true)
add_attribute("B", "b", "d")
int_value (40)
add_call_chain(<<d,a,e,B,d,e>>)
generate_java_code
add_query("A", "a", <<["e", "BOOLEAN"]>>, "B")
bool_value (false)
add_command("D", "e", <<["d", "BOOLEAN"], ["D", "c"], ["e", "BOOLEAN"], ["b", "c"], ["c", "INTEGER"], ["e", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
add_command("d", "D", <<["D", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["c", "C"], ["d", "INTEGER"], ["D", "A"]>>)
generate_java_code
bool_value (true)
add_query("B", "D", <<["c", "BOOLEAN"], ["B", "e"], ["A", "c"], ["A", "c"], ["c", "INTEGER"], ["a", "INTEGER"], ["BOOLEAN", "INTEGER"], ["C", "INTEGER"]>>, "e")
generate_java_code
add_query("A", "b", <<["d", "D"], ["B", "B"]>>, "INTEGER")
add_call_chain(<<c,c,B,D>>)
add_call_chain(<<a,C,BOOLEAN,C,e,a,B>>)
logical_negation
add_call_chain(<<D,e,a,INTEGER,B,d,B>>)
logical_negation
quotient
addition
add_command("b", "BOOLEAN", <<["C", "A"], ["A", "BOOLEAN"]>>)
disjunction
add_call_chain(<<c,A,A,a,INTEGER>>)
type_check
add_attribute("BOOLEAN", "B", "C")
numerical_negation
logical_negation
type_check
bool_value (true)
bool_value (false)
add_query("C", "d", <<["C", "D"], ["a", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "D"], ["B", "BOOLEAN"]>>, "A")
logical_negation
greater_than
bool_value (false)
generate_java_code
add_query("C", "d", <<["BOOLEAN", "INTEGER"], ["a", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "INTEGER"], ["B", "D"], ["B", "D"], ["c", "INTEGER"]>>, "c")
add_call_chain(<<a,d,C,e,d,b,d,a>>)
multiplication
add_attribute("A", "D", "BOOLEAN")
add_query("A", "A", <<["a", "INTEGER"], ["d", "e"], ["D", "BOOLEAN"], ["A", "A"], ["INTEGER", "BOOLEAN"], ["c", "INTEGER"], ["c", "INTEGER"], ["B", "BOOLEAN"], ["b", "INTEGER"]>>, "c")
bool_value (true)
add_command("D", "BOOLEAN", <<["A", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["B", "d"], ["INTEGER", "INTEGER"], ["d", "BOOLEAN"], ["C", "INTEGER"]>>)
add_class(d)
int_value (28)
add_call_chain(<<b,D,A,A,a,D,d>>)
add_query("C", "a", <<["D", "INTEGER"], ["INTEGER", "BOOLEAN"], ["e", "INTEGER"], ["b", "BOOLEAN"], ["c", "d"], ["e", "b"], ["B", "A"], ["A", "INTEGER"], ["D", "D"]>>, "e")
disjunction
logical_negation
bool_value (false)
add_call_chain(<<b,e,C,B,C,INTEGER,INTEGER,a>>)
add_attribute("D", "b", "BOOLEAN")
add_command("A", "C", <<["C", "D"], ["B", "b"], ["c", "c"], ["c", "BOOLEAN"], ["d", "BOOLEAN"]>>)
generate_java_code
add_attribute("A", "d", "BOOLEAN")
type_check
bool_value (true)
add_call_chain(<<d,D,A,c,C,BOOLEAN,C,D,B>>)
add_query("C", "a", <<["D", "e"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["a", "BOOLEAN"], ["c", "INTEGER"], ["e", "INTEGER"]>>, "D")
logical_negation
int_value (34)
add_call_chain(<<b,a,D>>)
logical_negation
add_call_chain(<<a,a,A>>)
generate_java_code
subtraction
add_attribute("a", "b", "INTEGER")
conjunction
add_call_chain(<<C,INTEGER,e,d,b,A,BOOLEAN>>)
type_check
int_value (16)
add_query("A", "BOOLEAN", <<["B", "INTEGER"]>>, "a")
logical_negation
logical_negation
add_attribute("B", "e", "INTEGER")
generate_java_code
add_command("D", "b", <<["BOOLEAN", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "INTEGER"], ["e", "INTEGER"], ["B", "INTEGER"], ["C", "INTEGER"], ["C", "B"], ["c", "BOOLEAN"], ["a", "INTEGER"]>>)
add_call_chain(<<e,a,e,b,d>>)
add_call_chain(<<c>>)
equals
equals
bool_value (false)
numerical_negation
numerical_negation
equals
bool_value (false)
numerical_negation
equals
disjunction
add_attribute("INTEGER", "INTEGER", "BOOLEAN")
int_value (35)
int_value (5)
add_class(d)
add_command("D", "e", <<["A", "B"], ["C", "INTEGER"], ["B", "b"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["e", "d"], ["c", "INTEGER"], ["B", "c"]>>)
bool_value (true)
add_query("d", "D", <<["D", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["D", "BOOLEAN"]>>, "e")
logical_negation
type_check
add_class(INTEGER)
bool_value (true)
add_command("B", "d", <<["INTEGER", "B"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "BOOLEAN"], ["BOOLEAN", "a"], ["b", "INTEGER"], ["B", "INTEGER"]>>)
add_attribute("e", "D", "A")
add_class(d)
add_call_chain(<<C,B>>)
add_query("a", "B", <<["c", "BOOLEAN"], ["C", "BOOLEAN"]>>, "A")
add_attribute("c", "b", "INTEGER")
type_check
add_call_chain(<<B,B,b,a,d,a,D,e>>)
add_call_chain(<<d,e,a>>)
add_call_chain(<<a,A,e,D>>)
conjunction
numerical_negation
logical_negation
add_call_chain(<<C,a,a,B,BOOLEAN,BOOLEAN,D,d>>)
disjunction
add_call_chain(<<B,e>>)
add_command("BOOLEAN", "C", <<["b", "d"], ["b", "BOOLEAN"], ["B", "A"], ["d", "INTEGER"], ["c", "INTEGER"], ["c", "d"], ["e", "INTEGER"], ["C", "BOOLEAN"], ["d", "b"]>>)
add_attribute("b", "A", "INTEGER")
add_call_chain(<<b>>)
bool_value (false)
numerical_negation
generate_java_code
numerical_negation
logical_negation
add_call_chain(<<C>>)
numerical_negation
add_call_chain(<<a,D,D,e,D,a,INTEGER>>)
add_call_chain(<<e,B,b,c>>)
add_call_chain(<<BOOLEAN,e,B,b,e>>)
add_call_chain(<<C,D,d>>)
numerical_negation
add_call_chain(<<B,BOOLEAN>>)
disjunction
type_check
greater_than
bool_value (false)
add_call_chain(<<c,D,d,C>>)
add_call_chain(<<c,D,INTEGER,c,BOOLEAN,d>>)
bool_value (false)
less_than
add_call_chain(<<e>>)
int_value (28)
numerical_negation
add_call_chain(<<C,D,b,A,A,D,c,C>>)
add_class(a)
generate_java_code
numerical_negation
add_command("D", "B", <<["C", "INTEGER"], ["A", "e"], ["c", "BOOLEAN"], ["B", "INTEGER"], ["d", "e"], ["C", "c"], ["b", "INTEGER"], ["c", "INTEGER"]>>)
generate_java_code
logical_negation
int_value (49)
logical_negation
disjunction
addition
add_call_chain(<<D,b>>)
bool_value (false)
int_value (38)
add_call_chain(<<B,C,D,D,C,D,b,INTEGER>>)
numerical_negation
greater_than
add_query("C", "b", <<["c", "BOOLEAN"], ["A", "D"], ["B", "INTEGER"], ["c", "b"], ["e", "INTEGER"], ["C", "B"], ["b", "INTEGER"]>>, "INTEGER")
numerical_negation
equals
logical_negation
int_value (25)
conjunction
equals
add_call_chain(<<e,D,B>>)
add_command("A", "INTEGER", <<["a", "INTEGER"], ["e", "BOOLEAN"], ["C", "INTEGER"]>>)
numerical_negation
add_call_chain(<<C,BOOLEAN,D,BOOLEAN,a>>)
disjunction
add_attribute("A", "B", "e")
add_class(c)
add_query("c", "INTEGER", <<["BOOLEAN", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "a"], ["B", "BOOLEAN"]>>, "C")
add_call_chain(<<a>>)
add_class(C)
add_command("D", "D", <<["BOOLEAN", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "INTEGER"], ["A", "B"], ["a", "d"], ["BOOLEAN", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
generate_java_code
add_call_chain(<<A,B,A,D,e,A>>)
equals
