add_query("C", "B", <<["D", "A"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "D"], ["a", "BOOLEAN"], ["A", "a"]>>, "B")
bool_value (true)
type_check
add_query("A", "c", <<["d", "BOOLEAN"], ["C", "BOOLEAN"]>>, "BOOLEAN")
int_value (28)
logical_negation
add_call_chain(<<d,C,INTEGER,a,D,e,INTEGER,e,C>>)
greater_than
add_attribute("c", "INTEGER", "c")
add_call_chain(<<e,b,d,A>>)
generate_java_code
generate_java_code
add_call_chain(<<e>>)
add_command("B", "c", <<["D", "e"], ["A", "A"], ["C", "INTEGER"], ["C", "d"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["B", "C"], ["a", "BOOLEAN"], ["A", "INTEGER"]>>)
logical_negation
add_query("B", "b", <<["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["c", "BOOLEAN"], ["A", "BOOLEAN"]>>, "d")
add_attribute("c", "A", "BOOLEAN")
int_value (29)
generate_java_code
add_call_chain(<<e,b,INTEGER,C,a,B,C,INTEGER>>)
numerical_negation
add_command("C", "b", <<["a", "INTEGER"], ["c", "INTEGER"], ["BOOLEAN", "INTEGER"], ["d", "B"], ["C", "BOOLEAN"], ["d", "INTEGER"], ["C", "INTEGER"], ["b", "INTEGER"]>>)
conjunction
add_command("C", "e", <<["c", "INTEGER"], ["b", "a"], ["d", "C"], ["c", "d"], ["b", "A"], ["b", "b"], ["C", "a"], ["A", "INTEGER"], ["b", "INTEGER"]>>)
type_check
add_query("d", "A", <<["D", "A"], ["a", "INTEGER"], ["B", "BOOLEAN"], ["INTEGER", "INTEGER"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["B", "D"], ["B", "BOOLEAN"], ["A", "INTEGER"]>>, "C")
generate_java_code
disjunction
add_attribute("d", "c", "BOOLEAN")
bool_value (true)
add_query("e", "a", <<["c", "BOOLEAN"], ["A", "B"], ["a", "BOOLEAN"]>>, "A")
add_call_chain(<<INTEGER,INTEGER,BOOLEAN,C,e>>)
add_call_chain(<<BOOLEAN,b>>)
greater_than
less_than
add_call_chain(<<BOOLEAN,D,A,D,A,b,B>>)
logical_negation
bool_value (true)
add_query("d", "a", <<["C", "BOOLEAN"]>>, "a")
add_query("d", "B", <<["C", "INTEGER"], ["A", "BOOLEAN"]>>, "C")
bool_value (true)
modulo
add_call_chain(<<B,D,A,d,e>>)
conjunction
add_query("B", "B", <<["a", "INTEGER"], ["B", "D"], ["c", "BOOLEAN"], ["a", "BOOLEAN"]>>, "C")
add_call_chain(<<b,e,D>>)
add_attribute("C", "b", "A")
disjunction
bool_value (true)
add_call_chain(<<d,a,B,b,BOOLEAN>>)
add_class(e)
int_value (9)
generate_java_code
generate_java_code
numerical_negation
generate_java_code
addition
add_query("A", "C", <<["A", "A"], ["BOOLEAN", "INTEGER"], ["B", "D"], ["D", "INTEGER"], ["C", "INTEGER"], ["e", "d"]>>, "BOOLEAN")
numerical_negation
add_command("d", "d", <<["INTEGER", "INTEGER"], ["d", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>)
add_class(BOOLEAN)
int_value (47)
logical_negation
add_call_chain(<<c,A,INTEGER,b,C,INTEGER>>)
int_value (25)
logical_negation
less_than
type_check
add_query("C", "b", <<["C", "BOOLEAN"], ["d", "C"], ["c", "A"]>>, "B")
less_than
add_command("A", "d", <<["c", "A"], ["a", "BOOLEAN"], ["C", "INTEGER"], ["c", "INTEGER"], ["C", "BOOLEAN"], ["e", "BOOLEAN"]>>)
numerical_negation
bool_value (false)
bool_value (true)
bool_value (false)
add_query("B", "e", <<["c", "BOOLEAN"], ["C", "INTEGER"], ["c", "INTEGER"], ["a", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["e", "INTEGER"]>>, "d")
add_call_chain(<<D,e,C,B,b>>)
add_query("B", "c", <<["d", "INTEGER"], ["INTEGER", "BOOLEAN"], ["C", "INTEGER"]>>, "D")
disjunction
bool_value (false)
generate_java_code
add_class(D)
add_query("b", "c", <<["e", "BOOLEAN"], ["D", "c"], ["A", "BOOLEAN"]>>, "b")
equals
add_command("C", "d", <<["A", "A"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["A", "d"], ["B", "BOOLEAN"], ["b", "BOOLEAN"]>>)
disjunction
bool_value (false)
add_query("c", "b", <<["e", "C"], ["d", "INTEGER"], ["INTEGER", "C"]>>, "c")
bool_value (false)
modulo
add_attribute("D", "D", "BOOLEAN")
add_command("B", "d", <<["c", "BOOLEAN"], ["A", "INTEGER"], ["b", "d"], ["INTEGER", "INTEGER"], ["D", "BOOLEAN"], ["b", "INTEGER"], ["c", "INTEGER"], ["b", "D"], ["d", "a"]>>)
add_call_chain(<<b,C,a,A,b,e,a,d,c>>)
int_value (20)
add_call_chain(<<C,c,D,B,C>>)
bool_value (false)
numerical_negation
type_check
int_value (7)
add_call_chain(<<a,B,b,INTEGER,B,b,D>>)
bool_value (true)
add_call_chain(<<a,BOOLEAN,c,B,e,A,C,c,c>>)
numerical_negation
add_query("c", "e", <<["e", "a"], ["B", "INTEGER"]>>, "a")
quotient
less_than
add_command("a", "a", <<["B", "a"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["d", "INTEGER"], ["B", "C"], ["A", "BOOLEAN"], ["A", "A"], ["c", "b"]>>)
logical_negation
bool_value (false)
add_attribute("d", "d", "BOOLEAN")
conjunction
disjunction
disjunction
add_call_chain(<<C,INTEGER,B,C,A,C,c,d,b>>)
logical_negation
add_call_chain(<<d,C>>)
add_attribute("A", "e", "BOOLEAN")
add_call_chain(<<C,B,D>>)
add_attribute("a", "d", "INTEGER")
int_value (20)
generate_java_code
numerical_negation
add_attribute("b", "C", "BOOLEAN")
logical_negation
bool_value (true)
add_attribute("c", "a", "INTEGER")
add_call_chain(<<BOOLEAN,INTEGER,e,a,d,C,e,A>>)
add_query("C", "d", <<["B", "INTEGER"], ["b", "INTEGER"], ["B", "INTEGER"], ["B", "A"], ["d", "INTEGER"], ["e", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "INTEGER"]>>, "a")
add_call_chain(<<C,A,b>>)
add_call_chain(<<c,b,C>>)
greater_than
add_query("D", "a", <<["c", "BOOLEAN"], ["a", "d"], ["c", "A"], ["BOOLEAN", "INTEGER"], ["D", "c"]>>, "D")
equals
add_command("d", "D", <<["c", "D"], ["A", "BOOLEAN"], ["D", "INTEGER"], ["b", "INTEGER"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "e"]>>)
add_class(BOOLEAN)
type_check
type_check
int_value (11)
logical_negation
type_check
type_check
add_call_chain(<<B,C,c,D,C,d,A>>)
add_call_chain(<<e,c,A,B>>)
bool_value (false)
add_attribute("c", "A", "a")
logical_negation
bool_value (false)
multiplication
conjunction
add_attribute("D", "INTEGER", "BOOLEAN")
add_command("d", "D", <<["c", "INTEGER"], ["D", "A"], ["A", "e"]>>)
add_call_chain(<<c,A,c,a,B,b>>)
conjunction
add_command("D", "D", <<["b", "INTEGER"], ["C", "C"], ["D", "INTEGER"], ["B", "INTEGER"], ["a", "BOOLEAN"], ["D", "D"]>>)
add_command("a", "c", <<["d", "BOOLEAN"]>>)
add_attribute("A", "d", "INTEGER")
add_query("INTEGER", "B", <<["B", "INTEGER"], ["c", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["C", "BOOLEAN"], ["INTEGER", "INTEGER"], ["INTEGER", "INTEGER"], ["c", "BOOLEAN"], ["D", "INTEGER"], ["INTEGER", "c"]>>, "c")
add_class(b)
generate_java_code
add_query("A", "b", <<["INTEGER", "INTEGER"], ["D", "INTEGER"], ["c", "BOOLEAN"], ["B", "INTEGER"], ["e", "INTEGER"], ["d", "b"], ["d", "INTEGER"], ["c", "BOOLEAN"]>>, "b")
logical_negation
bool_value (true)
logical_negation
numerical_negation
logical_negation
bool_value (true)
int_value (2)
add_class(d)
add_call_chain(<<e,e,b,c,e,INTEGER,BOOLEAN,B>>)
generate_java_code
add_call_chain(<<d,e>>)
addition
add_command("d", "A", <<["b", "BOOLEAN"], ["INTEGER", "INTEGER"], ["D", "c"], ["D", "b"], ["A", "D"]>>)
add_query("B", "B", <<["C", "INTEGER"], ["C", "c"], ["b", "INTEGER"], ["d", "BOOLEAN"], ["A", "INTEGER"], ["INTEGER", "d"]>>, "e")
numerical_negation
add_call_chain(<<c,A,a,b,b,d>>)
add_command("e", "B", <<["A", "INTEGER"], ["A", "INTEGER"], ["b", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "INTEGER"], ["c", "d"]>>)
int_value (23)
add_class(B)
add_query("A", "A", <<["BOOLEAN", "A"], ["e", "INTEGER"], ["a", "INTEGER"], ["b", "BOOLEAN"], ["e", "INTEGER"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "BOOLEAN"]>>, "d")
add_command("d", "A", <<["c", "e"], ["BOOLEAN", "D"], ["e", "INTEGER"], ["BOOLEAN", "e"], ["A", "INTEGER"]>>)
add_query("C", "INTEGER", <<["b", "C"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["BOOLEAN", "INTEGER"], ["C", "INTEGER"], ["c", "c"], ["B", "D"], ["c", "INTEGER"], ["e", "BOOLEAN"]>>, "C")
addition
add_attribute("A", "D", "A")
add_query("D", "e", <<["b", "D"], ["B", "BOOLEAN"]>>, "B")
add_class(c)
add_call_chain(<<B,a,d,c,BOOLEAN,BOOLEAN,D>>)
int_value (17)
addition
disjunction
conjunction
add_call_chain(<<c,B,b,d,e>>)
int_value (31)
logical_negation
bool_value (false)
add_call_chain(<<C,c,e,c,BOOLEAN>>)
equals
add_query("A", "B", <<["INTEGER", "BOOLEAN"], ["D", "D"], ["INTEGER", "e"], ["A", "INTEGER"], ["C", "d"], ["C", "BOOLEAN"], ["b", "INTEGER"]>>, "c")
add_attribute("b", "b", "INTEGER")
bool_value (true)
numerical_negation
add_class(D)
bool_value (false)
add_attribute("b", "b", "INTEGER")
logical_negation
conjunction
generate_java_code
add_call_chain(<<C>>)
add_call_chain(<<c,C,B,D,C,e,D>>)
add_query("d", "INTEGER", <<["B", "b"]>>, "d")
int_value (10)
add_attribute("D", "c", "BOOLEAN")
add_command("A", "d", <<["c", "INTEGER"], ["INTEGER", "C"], ["C", "BOOLEAN"]>>)
add_class(A)
add_command("b", "C", <<["INTEGER", "INTEGER"], ["B", "INTEGER"], ["BOOLEAN", "INTEGER"], ["a", "BOOLEAN"]>>)
add_command("B", "INTEGER", <<["D", "e"], ["C", "INTEGER"], ["C", "C"]>>)
add_call_chain(<<A,b>>)
add_call_chain(<<e,D,D,c,INTEGER,B,D,e,D>>)
numerical_negation
add_class(c)
equals
add_query("c", "A", <<["C", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "B"]>>, "e")
addition
add_class(B)
add_query("b", "c", <<["c", "BOOLEAN"], ["e", "A"]>>, "C")
add_attribute("e", "D", "INTEGER")
add_attribute("A", "D", "INTEGER")
add_command("C", "B", <<["b", "d"], ["B", "INTEGER"], ["A", "B"], ["C", "A"], ["b", "BOOLEAN"]>>)
int_value (40)
add_call_chain(<<INTEGER,C,A>>)
