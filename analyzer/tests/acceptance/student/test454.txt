bool_value (true)
add_attribute("d", "B", "INTEGER")
numerical_negation
numerical_negation
generate_java_code
add_query("INTEGER", "b", <<["A", "B"], ["D", "e"]>>, "b")
add_attribute("BOOLEAN", "C", "BOOLEAN")
bool_value (false)
add_attribute("A", "INTEGER", "BOOLEAN")
numerical_negation
generate_java_code
bool_value (true)
numerical_negation
add_call_chain(<<e,B,d>>)
add_query("c", "a", <<["e", "BOOLEAN"], ["c", "BOOLEAN"], ["BOOLEAN", "C"], ["d", "c"], ["A", "A"]>>, "BOOLEAN")
add_call_chain(<<b,INTEGER>>)
numerical_negation
add_call_chain(<<e>>)
add_call_chain(<<d,A,INTEGER,e>>)
add_query("B", "INTEGER", <<["D", "B"], ["a", "INTEGER"], ["B", "D"], ["B", "e"], ["A", "BOOLEAN"], ["D", "INTEGER"], ["e", "INTEGER"], ["B", "b"]>>, "e")
add_attribute("D", "C", "A")
multiplication
add_command("a", "D", <<["e", "INTEGER"], ["e", "BOOLEAN"], ["BOOLEAN", "D"]>>)
add_call_chain(<<d,C,D,INTEGER,d,c,A,A>>)
generate_java_code
bool_value (false)
modulo
int_value (4)
logical_negation
bool_value (true)
add_command("a", "b", <<["e", "BOOLEAN"], ["b", "c"], ["a", "A"], ["C", "C"]>>)
add_call_chain(<<C,BOOLEAN,C,b,a,B,C,a>>)
add_query("e", "B", <<["d", "INTEGER"], ["D", "D"]>>, "A")
logical_negation
int_value (27)
int_value (6)
add_call_chain(<<B,A,A,B>>)
numerical_negation
conjunction
add_attribute("INTEGER", "INTEGER", "INTEGER")
generate_java_code
add_attribute("D", "A", "B")
generate_java_code
multiplication
int_value (1)
add_call_chain(<<c,e,A,C,d,a,c,a,b>>)
add_class(B)
numerical_negation
subtraction
logical_negation
add_query("A", "A", <<["a", "INTEGER"], ["c", "INTEGER"], ["A", "BOOLEAN"]>>, "BOOLEAN")
logical_negation
add_call_chain(<<B,b,D,b,D>>)
addition
less_than
bool_value (true)
add_query("D", "A", <<["A", "INTEGER"], ["A", "C"], ["d", "BOOLEAN"], ["a", "B"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["c", "INTEGER"]>>, "d")
add_call_chain(<<d,BOOLEAN,B,C,A,BOOLEAN,c,b>>)
add_call_chain(<<B,b,b,C,D>>)
add_call_chain(<<C,a,a,B,d,a,d>>)
add_query("d", "d", <<["d", "BOOLEAN"], ["C", "INTEGER"], ["D", "BOOLEAN"]>>, "e")
numerical_negation
int_value (35)
disjunction
add_class(d)
add_attribute("a", "e", "B")
disjunction
conjunction
int_value (8)
add_call_chain(<<c>>)
add_query("c", "B", <<["C", "BOOLEAN"], ["INTEGER", "INTEGER"], ["C", "INTEGER"], ["a", "INTEGER"], ["B", "BOOLEAN"], ["BOOLEAN", "b"], ["B", "INTEGER"], ["BOOLEAN", "INTEGER"], ["D", "D"]>>, "A")
int_value (29)
add_call_chain(<<A,B,e,B,BOOLEAN>>)
add_command("c", "B", <<["e", "C"], ["BOOLEAN", "e"], ["c", "D"], ["C", "BOOLEAN"], ["d", "A"], ["d", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "a"]>>)
add_attribute("A", "b", "BOOLEAN")
add_call_chain(<<a>>)
add_command("B", "b", <<["A", "BOOLEAN"], ["c", "c"], ["e", "INTEGER"]>>)
add_query("C", "A", <<["INTEGER", "BOOLEAN"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["e", "INTEGER"], ["d", "INTEGER"]>>, "c")
add_attribute("BOOLEAN", "b", "INTEGER")
add_query("a", "b", <<["c", "BOOLEAN"], ["a", "INTEGER"]>>, "A")
logical_negation
add_class(A)
numerical_negation
add_call_chain(<<e,D,D,a,b,INTEGER,A,INTEGER,BOOLEAN>>)
disjunction
add_command("b", "A", <<["INTEGER", "INTEGER"], ["a", "d"], ["INTEGER", "INTEGER"], ["a", "INTEGER"], ["B", "d"], ["D", "A"], ["b", "INTEGER"], ["b", "INTEGER"], ["c", "INTEGER"]>>)
multiplication
bool_value (false)
add_call_chain(<<C,d,BOOLEAN,a>>)
multiplication
int_value (16)
logical_negation
add_command("B", "b", <<["D", "C"], ["d", "C"]>>)
add_call_chain(<<d,B,b,INTEGER,e,e,BOOLEAN,c,d>>)
int_value (42)
add_call_chain(<<BOOLEAN,A>>)
int_value (13)
add_attribute("c", "B", "INTEGER")
int_value (24)
conjunction
add_command("D", "B", <<["a", "BOOLEAN"], ["D", "B"], ["d", "INTEGER"], ["D", "a"]>>)
greater_than
type_check
greater_than
add_call_chain(<<a,A,B,B,c,BOOLEAN>>)
add_call_chain(<<BOOLEAN,A,C,e,d,A,a,B>>)
int_value (10)
add_command("D", "C", <<["b", "INTEGER"], ["INTEGER", "INTEGER"], ["INTEGER", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "c"]>>)
add_call_chain(<<c,d,b,D>>)
add_command("C", "e", <<["D", "d"], ["e", "INTEGER"], ["b", "INTEGER"], ["A", "A"], ["c", "INTEGER"], ["C", "D"], ["c", "BOOLEAN"], ["C", "INTEGER"], ["A", "INTEGER"]>>)
add_attribute("INTEGER", "C", "a")
disjunction
bool_value (false)
add_command("e", "C", <<["a", "A"], ["D", "BOOLEAN"], ["b", "e"], ["B", "BOOLEAN"], ["c", "INTEGER"], ["C", "INTEGER"], ["d", "INTEGER"], ["e", "INTEGER"]>>)
add_call_chain(<<d,B,d,d,d,INTEGER>>)
multiplication
add_query("D", "a", <<["INTEGER", "C"], ["BOOLEAN", "BOOLEAN"], ["c", "INTEGER"], ["C", "a"], ["d", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "INTEGER"], ["C", "INTEGER"], ["A", "BOOLEAN"]>>, "BOOLEAN")
add_query("B", "D", <<["e", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["a", "B"], ["D", "BOOLEAN"]>>, "D")
numerical_negation
add_attribute("D", "A", "A")
conjunction
disjunction
logical_negation
generate_java_code
add_query("a", "e", <<["a", "INTEGER"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["C", "B"], ["a", "INTEGER"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["A", "INTEGER"], ["c", "BOOLEAN"]>>, "b")
add_call_chain(<<a,a,e,C,A,c,INTEGER,a,C>>)
add_query("D", "e", <<["D", "BOOLEAN"], ["BOOLEAN", "B"], ["b", "BOOLEAN"], ["BOOLEAN", "c"]>>, "e")
add_attribute("B", "b", "INTEGER")
add_call_chain(<<d,c,c,a,C,C,a,C>>)
int_value (20)
logical_negation
add_class(b)
generate_java_code
generate_java_code
add_call_chain(<<D,BOOLEAN,B,B>>)
add_query("b", "BOOLEAN", <<["a", "INTEGER"], ["D", "INTEGER"], ["A", "BOOLEAN"]>>, "INTEGER")
numerical_negation
bool_value (true)
numerical_negation
addition
logical_negation
add_attribute("b", "B", "INTEGER")
add_call_chain(<<d,D,a,d,A>>)
add_query("d", "c", <<["d", "BOOLEAN"], ["A", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["b", "BOOLEAN"], ["C", "INTEGER"], ["d", "INTEGER"]>>, "b")
add_call_chain(<<e,e,e,a,B,d,b,b>>)
bool_value (false)
bool_value (false)
add_command("INTEGER", "C", <<["C", "B"], ["C", "INTEGER"], ["C", "D"], ["C", "BOOLEAN"]>>)
less_than
equals
add_attribute("B", "b", "BOOLEAN")
logical_negation
addition
int_value (18)
disjunction
bool_value (false)
bool_value (true)
conjunction
modulo
bool_value (false)
add_command("INTEGER", "B", <<["b", "BOOLEAN"], ["c", "C"], ["e", "INTEGER"], ["a", "INTEGER"], ["c", "e"], ["a", "BOOLEAN"], ["a", "INTEGER"]>>)
add_call_chain(<<e,c,a,C,A,e>>)
add_query("A", "c", <<["d", "INTEGER"], ["d", "BOOLEAN"]>>, "d")
greater_than
add_attribute("D", "A", "A")
type_check
modulo
numerical_negation
add_call_chain(<<D,BOOLEAN>>)
add_call_chain(<<C,C,C,C,a>>)
int_value (49)
logical_negation
add_query("B", "a", <<["A", "BOOLEAN"], ["e", "a"], ["d", "BOOLEAN"]>>, "B")
int_value (10)
bool_value (true)
add_query("e", "B", <<["d", "BOOLEAN"]>>, "D")
add_call_chain(<<B,a,C>>)
add_query("c", "C", <<["e", "A"], ["b", "INTEGER"]>>, "INTEGER")
addition
add_command("A", "C", <<["A", "INTEGER"]>>)
add_call_chain(<<A,B>>)
conjunction
quotient
add_command("A", "B", <<["B", "e"], ["a", "BOOLEAN"], ["a", "e"], ["e", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "BOOLEAN"], ["b", "INTEGER"]>>)
bool_value (false)
add_call_chain(<<d,e,e>>)
int_value (17)
generate_java_code
add_query("C", "C", <<["BOOLEAN", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "e"]>>, "b")
numerical_negation
add_call_chain(<<D,B,BOOLEAN,D,B,B>>)
disjunction
add_query("A", "b", <<["b", "a"], ["BOOLEAN", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["e", "BOOLEAN"], ["e", "INTEGER"], ["e", "INTEGER"], ["a", "INTEGER"], ["INTEGER", "C"]>>, "d")
add_query("b", "d", <<["C", "INTEGER"], ["A", "INTEGER"], ["B", "INTEGER"], ["INTEGER", "INTEGER"], ["d", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "A"], ["b", "INTEGER"]>>, "D")
add_query("a", "e", <<["A", "INTEGER"], ["a", "D"], ["c", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "BOOLEAN"]>>, "C")
conjunction
bool_value (true)
int_value (25)
add_call_chain(<<a,a,C,INTEGER,B,B,B,D>>)
logical_negation
