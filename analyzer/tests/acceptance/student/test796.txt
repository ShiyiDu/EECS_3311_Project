add_attribute("e", "B", "INTEGER")
add_attribute("B", "INTEGER", "B")
add_call_chain(<<D,D,a,D>>)
add_query("B", "c", <<["A", "INTEGER"], ["a", "a"], ["A", "INTEGER"], ["A", "INTEGER"], ["b", "INTEGER"], ["INTEGER", "INTEGER"], ["B", "INTEGER"]>>, "B")
numerical_negation
add_command("b", "B", <<["a", "BOOLEAN"]>>)
add_command("BOOLEAN", "C", <<["c", "C"], ["INTEGER", "c"], ["c", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "INTEGER"]>>)
add_query("A", "e", <<["a", "BOOLEAN"], ["A", "INTEGER"], ["BOOLEAN", "b"], ["D", "b"], ["c", "INTEGER"], ["A", "INTEGER"], ["b", "e"]>>, "A")
add_call_chain(<<e>>)
conjunction
int_value (36)
bool_value (false)
add_attribute("C", "d", "BOOLEAN")
add_query("e", "D", <<["c", "e"], ["C", "c"]>>, "A")
logical_negation
add_call_chain(<<B,A>>)
type_check
greater_than
generate_java_code
add_call_chain(<<b,a,D,d,e,BOOLEAN,BOOLEAN,D,B>>)
add_command("d", "INTEGER", <<["A", "INTEGER"], ["c", "c"]>>)
int_value (16)
add_class(D)
multiplication
int_value (19)
add_call_chain(<<a,B,B,C,c,d,D,B>>)
bool_value (false)
add_call_chain(<<e,INTEGER,D,B>>)
bool_value (false)
int_value (47)
add_call_chain(<<C,c,b,D,D,D,a>>)
add_query("C", "C", <<["C", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "INTEGER"], ["B", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>, "b")
logical_negation
add_attribute("a", "d", "A")
numerical_negation
numerical_negation
numerical_negation
add_query("c", "B", <<["C", "INTEGER"]>>, "B")
numerical_negation
add_command("C", "D", <<["C", "INTEGER"], ["C", "B"], ["b", "INTEGER"], ["d", "INTEGER"], ["d", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["c", "BOOLEAN"]>>)
addition
modulo
generate_java_code
add_call_chain(<<C,C,C,a,A,b,C,c>>)
add_call_chain(<<C,C,B,a,A,A>>)
add_command("b", "e", <<["C", "c"], ["D", "BOOLEAN"], ["C", "INTEGER"]>>)
add_attribute("C", "C", "INTEGER")
add_call_chain(<<e>>)
add_call_chain(<<d,A>>)
add_command("B", "C", <<["b", "C"], ["A", "INTEGER"], ["a", "BOOLEAN"], ["c", "INTEGER"], ["BOOLEAN", "INTEGER"], ["D", "BOOLEAN"]>>)
add_query("C", "e", <<["A", "INTEGER"], ["e", "INTEGER"], ["d", "INTEGER"]>>, "a")
int_value (39)
int_value (31)
add_call_chain(<<A,c,b,B>>)
type_check
disjunction
add_call_chain(<<C,C,C,A,BOOLEAN,e,e,C,C>>)
greater_than
type_check
add_call_chain(<<D,D,BOOLEAN,A,c>>)
add_command("BOOLEAN", "a", <<["INTEGER", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "BOOLEAN"]>>)
bool_value (false)
logical_negation
disjunction
bool_value (false)
type_check
add_command("b", "BOOLEAN", <<["c", "BOOLEAN"], ["d", "BOOLEAN"], ["d", "D"], ["C", "D"], ["BOOLEAN", "INTEGER"]>>)
less_than
add_call_chain(<<D,B,a,c,A,A>>)
add_class(e)
int_value (28)
add_class(d)
add_call_chain(<<A>>)
type_check
add_call_chain(<<D,b,A,C>>)
add_call_chain(<<c,C,d,b,D,B>>)
logical_negation
add_command("c", "A", <<["INTEGER", "BOOLEAN"], ["b", "A"], ["b", "BOOLEAN"], ["a", "a"], ["b", "INTEGER"]>>)
numerical_negation
logical_negation
add_query("B", "c", <<["a", "d"], ["D", "INTEGER"], ["C", "A"], ["A", "INTEGER"], ["B", "INTEGER"], ["D", "B"]>>, "c")
add_command("d", "A", <<["D", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>)
add_query("C", "a", <<["B", "BOOLEAN"]>>, "D")
conjunction
less_than
generate_java_code
add_call_chain(<<c>>)
add_attribute("d", "e", "BOOLEAN")
logical_negation
int_value (48)
add_command("B", "C", <<["A", "A"], ["b", "INTEGER"], ["C", "c"], ["a", "INTEGER"], ["B", "INTEGER"], ["D", "INTEGER"], ["A", "INTEGER"], ["B", "b"], ["e", "INTEGER"]>>)
add_attribute("INTEGER", "c", "BOOLEAN")
greater_than
bool_value (true)
add_call_chain(<<C,A>>)
bool_value (false)
generate_java_code
add_query("BOOLEAN", "a", <<["BOOLEAN", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["D", "BOOLEAN"]>>, "c")
int_value (41)
add_class(e)
add_query("B", "c", <<["C", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["e", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["B", "INTEGER"], ["a", "BOOLEAN"], ["B", "D"], ["d", "INTEGER"], ["C", "BOOLEAN"]>>, "C")
bool_value (true)
equals
add_call_chain(<<C,b,D,C,INTEGER,a,D>>)
disjunction
int_value (45)
int_value (14)
add_call_chain(<<c,BOOLEAN,B,d,BOOLEAN>>)
multiplication
add_query("B", "B", <<["BOOLEAN", "e"], ["C", "INTEGER"], ["a", "INTEGER"], ["e", "INTEGER"]>>, "a")
disjunction
conjunction
add_attribute("a", "a", "BOOLEAN")
add_query("d", "c", <<["e", "BOOLEAN"]>>, "A")
add_query("d", "B", <<["d", "INTEGER"], ["D", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["c", "a"], ["d", "INTEGER"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "INTEGER"]>>, "e")
bool_value (true)
add_attribute("b", "A", "INTEGER")
add_query("A", "INTEGER", <<["A", "BOOLEAN"], ["c", "INTEGER"]>>, "BOOLEAN")
bool_value (false)
add_call_chain(<<a,d,B,B,B,B,INTEGER,b>>)
numerical_negation
bool_value (true)
generate_java_code
add_class(D)
int_value (34)
add_attribute("d", "C", "INTEGER")
logical_negation
add_command("b", "BOOLEAN", <<["C", "BOOLEAN"], ["d", "B"], ["a", "BOOLEAN"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["e", "INTEGER"], ["b", "BOOLEAN"], ["D", "BOOLEAN"]>>)
add_call_chain(<<d,a>>)
add_query("c", "d", <<["C", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["B", "A"], ["a", "C"]>>, "D")
add_call_chain(<<e,B,B>>)
add_call_chain(<<C,B,d,B,d,b>>)
logical_negation
add_call_chain(<<b,B,D>>)
logical_negation
add_command("INTEGER", "d", <<["BOOLEAN", "A"], ["a", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["C", "INTEGER"]>>)
generate_java_code
add_command("c", "C", <<["a", "INTEGER"], ["c", "C"]>>)
subtraction
equals
add_query("B", "B", <<["e", "INTEGER"], ["c", "c"], ["c", "INTEGER"], ["a", "INTEGER"], ["a", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>, "A")
add_command("INTEGER", "c", <<["e", "INTEGER"], ["A", "BOOLEAN"], ["C", "C"], ["A", "BOOLEAN"]>>)
add_call_chain(<<A,e,a,INTEGER>>)
add_call_chain(<<BOOLEAN,e,A,B,c,b,A>>)
generate_java_code
add_attribute("d", "a", "BOOLEAN")
add_call_chain(<<D,e,BOOLEAN,C,a,BOOLEAN,c,A,B>>)
logical_negation
add_call_chain(<<A,D>>)
add_class(INTEGER)
add_command("c", "A", <<["C", "BOOLEAN"]>>)
logical_negation
bool_value (true)
add_command("C", "d", <<["e", "INTEGER"]>>)
add_attribute("B", "a", "INTEGER")
add_command("C", "B", <<["d", "INTEGER"], ["a", "INTEGER"], ["e", "BOOLEAN"], ["d", "A"], ["D", "A"], ["D", "BOOLEAN"], ["A", "BOOLEAN"]>>)
add_call_chain(<<A,A,D,a,e,BOOLEAN,c,c,b>>)
conjunction
add_command("d", "D", <<["BOOLEAN", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["INTEGER", "d"], ["b", "e"]>>)
add_query("A", "INTEGER", <<["c", "BOOLEAN"], ["a", "C"]>>, "A")
logical_negation
equals
numerical_negation
logical_negation
add_command("A", "C", <<["d", "D"], ["c", "INTEGER"], ["BOOLEAN", "INTEGER"], ["D", "e"], ["C", "INTEGER"]>>)
quotient
add_query("d", "C", <<["B", "b"], ["c", "BOOLEAN"], ["B", "BOOLEAN"]>>, "INTEGER")
bool_value (true)
type_check
bool_value (true)
generate_java_code
add_call_chain(<<e,D,d,A,B,INTEGER,e,a>>)
add_query("C", "BOOLEAN", <<["BOOLEAN", "INTEGER"], ["C", "INTEGER"], ["INTEGER", "INTEGER"], ["B", "INTEGER"]>>, "e")
add_attribute("d", "B", "BOOLEAN")
bool_value (true)
add_query("c", "B", <<["C", "A"], ["C", "INTEGER"], ["INTEGER", "BOOLEAN"], ["BOOLEAN", "D"], ["INTEGER", "BOOLEAN"], ["e", "INTEGER"], ["c", "INTEGER"], ["d", "e"], ["a", "BOOLEAN"]>>, "a")
add_attribute("e", "d", "BOOLEAN")
bool_value (true)
add_query("B", "B", <<["e", "e"]>>, "b")
add_attribute("A", "A", "D")
add_attribute("a", "c", "INTEGER")
add_call_chain(<<B>>)
bool_value (true)
add_call_chain(<<B,e,D,D,d>>)
add_command("B", "a", <<["c", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["BOOLEAN", "B"]>>)
add_attribute("c", "b", "INTEGER")
add_call_chain(<<C,B>>)
logical_negation
add_attribute("e", "D", "BOOLEAN")
numerical_negation
add_attribute("e", "B", "BOOLEAN")
add_class(a)
add_query("D", "D", <<["BOOLEAN", "INTEGER"], ["B", "BOOLEAN"], ["a", "BOOLEAN"]>>, "e")
add_query("c", "D", <<["c", "INTEGER"], ["b", "BOOLEAN"], ["C", "INTEGER"]>>, "c")
add_class(A)
add_query("C", "A", <<["C", "A"], ["A", "INTEGER"], ["D", "INTEGER"], ["B", "BOOLEAN"], ["BOOLEAN", "c"], ["C", "A"]>>, "B")
add_call_chain(<<d,e,b,b,D,A,A,D>>)
equals
add_command("A", "INTEGER", <<["e", "INTEGER"]>>)
int_value (13)
add_command("a", "c", <<["D", "INTEGER"], ["A", "D"], ["c", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["C", "d"], ["A", "B"]>>)
logical_negation
add_call_chain(<<A,B,A,b,c,a,A,D>>)
add_call_chain(<<INTEGER,A,c,INTEGER,B,b,d,BOOLEAN,b>>)
less_than
logical_negation
bool_value (false)
add_command("a", "B", <<["a", "D"], ["e", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "INTEGER"], ["C", "BOOLEAN"], ["a", "BOOLEAN"]>>)
equals
int_value (11)
add_class(a)
add_command("b", "c", <<["a", "INTEGER"], ["b", "C"], ["A", "BOOLEAN"], ["d", "BOOLEAN"], ["e", "INTEGER"]>>)
add_command("B", "B", <<["e", "BOOLEAN"]>>)
less_than
type_check
modulo
add_command("A", "A", <<["D", "BOOLEAN"], ["A", "BOOLEAN"]>>)
add_attribute("B", "c", "b")
add_command("c", "BOOLEAN", <<["INTEGER", "INTEGER"], ["a", "BOOLEAN"], ["C", "B"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["A", "BOOLEAN"], ["A", "A"], ["C", "INTEGER"], ["B", "c"]>>)
bool_value (false)
generate_java_code
add_call_chain(<<b,INTEGER,a,d,e,C,D,c>>)
generate_java_code
add_attribute("c", "a", "INTEGER")
equals
add_call_chain(<<c>>)
generate_java_code
bool_value (false)
bool_value (true)
bool_value (true)
add_query("b", "D", <<["d", "A"], ["C", "B"], ["a", "INTEGER"]>>, "B")
