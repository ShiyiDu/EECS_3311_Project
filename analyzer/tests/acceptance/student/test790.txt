generate_java_code
add_call_chain(<<D,a,b,A,INTEGER>>)
add_call_chain(<<B,A,C,A,C,d,A,B,D>>)
logical_negation
add_call_chain(<<B,C>>)
add_class(d)
generate_java_code
add_call_chain(<<a,b>>)
add_attribute("a", "e", "BOOLEAN")
generate_java_code
add_query("b", "A", <<["a", "INTEGER"], ["b", "c"], ["e", "INTEGER"], ["e", "b"], ["D", "BOOLEAN"], ["e", "BOOLEAN"], ["c", "INTEGER"], ["a", "INTEGER"], ["c", "B"]>>, "A")
conjunction
add_command("b", "A", <<["b", "C"], ["D", "D"], ["A", "A"]>>)
type_check
addition
numerical_negation
type_check
add_query("e", "e", <<["C", "INTEGER"]>>, "d")
type_check
greater_than
add_query("A", "d", <<["B", "BOOLEAN"]>>, "a")
add_command("INTEGER", "e", <<["BOOLEAN", "A"], ["d", "e"]>>)
add_command("c", "C", <<["D", "D"], ["A", "A"]>>)
add_call_chain(<<b,A,c,INTEGER,A,C,D,b>>)
add_attribute("d", "C", "C")
generate_java_code
add_call_chain(<<D,c,D,D,e,e>>)
disjunction
numerical_negation
add_attribute("C", "B", "d")
add_query("A", "A", <<["INTEGER", "BOOLEAN"], ["d", "D"], ["e", "BOOLEAN"], ["B", "INTEGER"], ["B", "D"], ["C", "A"], ["B", "BOOLEAN"], ["C", "e"], ["A", "BOOLEAN"]>>, "b")
add_command("D", "a", <<["B", "A"], ["INTEGER", "BOOLEAN"]>>)
modulo
logical_negation
add_attribute("B", "A", "BOOLEAN")
logical_negation
add_command("D", "C", <<["BOOLEAN", "INTEGER"], ["D", "BOOLEAN"], ["a", "BOOLEAN"]>>)
type_check
int_value (12)
add_class(D)
add_call_chain(<<A,e,B>>)
add_call_chain(<<C,a>>)
add_command("b", "A", <<["B", "INTEGER"], ["d", "INTEGER"], ["A", "BOOLEAN"], ["d", "BOOLEAN"], ["b", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["C", "INTEGER"], ["a", "INTEGER"], ["B", "BOOLEAN"]>>)
logical_negation
numerical_negation
logical_negation
add_query("b", "B", <<["B", "INTEGER"]>>, "c")
add_call_chain(<<D,d,A,BOOLEAN,e,B,e,b,b>>)
int_value (6)
add_call_chain(<<B,b,C,D,B,e,C>>)
add_query("B", "c", <<["b", "INTEGER"], ["d", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "INTEGER"], ["c", "C"], ["INTEGER", "BOOLEAN"], ["C", "a"]>>, "c")
add_query("B", "A", <<["INTEGER", "c"]>>, "A")
add_command("B", "B", <<["a", "D"], ["a", "BOOLEAN"], ["c", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
bool_value (true)
add_attribute("d", "D", "INTEGER")
add_query("D", "a", <<["e", "INTEGER"], ["D", "INTEGER"], ["A", "BOOLEAN"], ["D", "a"], ["a", "BOOLEAN"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["A", "INTEGER"], ["c", "BOOLEAN"]>>, "b")
multiplication
add_call_chain(<<c,c,d,BOOLEAN,INTEGER,C,a,D,e>>)
int_value (29)
add_query("c", "b", <<["a", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "INTEGER"], ["A", "c"], ["b", "INTEGER"], ["A", "BOOLEAN"]>>, "D")
numerical_negation
add_query("D", "BOOLEAN", <<["C", "INTEGER"], ["d", "C"], ["INTEGER", "A"], ["c", "D"], ["c", "INTEGER"], ["c", "c"], ["d", "BOOLEAN"], ["A", "INTEGER"], ["D", "INTEGER"]>>, "D")
greater_than
add_call_chain(<<D,a,D,d,D,b,C>>)
add_class(c)
numerical_negation
add_call_chain(<<A,B,a,b,D,D,c>>)
add_command("e", "B", <<["b", "BOOLEAN"], ["e", "a"], ["A", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["e", "INTEGER"], ["INTEGER", "INTEGER"]>>)
int_value (29)
conjunction
add_query("A", "A", <<["e", "BOOLEAN"], ["D", "B"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "INTEGER"], ["INTEGER", "B"]>>, "a")
int_value (21)
add_call_chain(<<a,d,BOOLEAN>>)
int_value (46)
add_command("A", "D", <<["D", "d"], ["INTEGER", "BOOLEAN"]>>)
type_check
bool_value (true)
numerical_negation
numerical_negation
logical_negation
bool_value (false)
bool_value (false)
add_query("c", "A", <<["D", "a"]>>, "INTEGER")
bool_value (false)
add_query("c", "c", <<["B", "b"], ["D", "INTEGER"], ["B", "BOOLEAN"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["B", "INTEGER"]>>, "a")
add_query("a", "A", <<["d", "INTEGER"], ["INTEGER", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "B"], ["B", "BOOLEAN"], ["d", "BOOLEAN"]>>, "b")
conjunction
equals
less_than
add_class(d)
less_than
conjunction
type_check
bool_value (false)
logical_negation
add_command("BOOLEAN", "C", <<["e", "BOOLEAN"], ["d", "c"], ["a", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "e"], ["C", "INTEGER"], ["a", "INTEGER"]>>)
add_call_chain(<<INTEGER,c,D,B>>)
bool_value (true)
add_class(d)
addition
numerical_negation
generate_java_code
add_query("D", "D", <<["a", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "a"], ["D", "C"], ["a", "d"], ["B", "BOOLEAN"], ["C", "INTEGER"]>>, "B")
modulo
greater_than
add_call_chain(<<D>>)
add_attribute("e", "INTEGER", "INTEGER")
add_query("C", "D", <<["e", "A"], ["A", "BOOLEAN"], ["A", "D"], ["c", "INTEGER"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["c", "C"], ["c", "d"]>>, "d")
bool_value (true)
greater_than
add_query("C", "A", <<["b", "BOOLEAN"], ["B", "INTEGER"], ["BOOLEAN", "INTEGER"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "D"], ["c", "D"], ["B", "INTEGER"]>>, "C")
add_query("A", "BOOLEAN", <<["a", "BOOLEAN"], ["B", "e"], ["D", "BOOLEAN"], ["e", "INTEGER"], ["C", "C"]>>, "A")
add_attribute("B", "C", "BOOLEAN")
logical_negation
add_command("D", "D", <<["A", "e"]>>)
logical_negation
add_query("BOOLEAN", "e", <<["a", "BOOLEAN"], ["c", "BOOLEAN"]>>, "BOOLEAN")
add_query("a", "a", <<["A", "A"], ["B", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["a", "BOOLEAN"]>>, "e")
add_query("b", "C", <<["BOOLEAN", "BOOLEAN"], ["B", "C"], ["a", "INTEGER"], ["c", "INTEGER"], ["B", "BOOLEAN"]>>, "e")
bool_value (false)
int_value (16)
add_class(INTEGER)
add_query("a", "C", <<["BOOLEAN", "BOOLEAN"]>>, "B")
add_command("a", "a", <<["B", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "B"], ["BOOLEAN", "BOOLEAN"], ["B", "INTEGER"]>>)
bool_value (false)
add_class(C)
add_attribute("D", "A", "INTEGER")
int_value (49)
subtraction
int_value (34)
generate_java_code
add_command("b", "C", <<["B", "INTEGER"], ["b", "INTEGER"], ["b", "BOOLEAN"], ["c", "a"], ["e", "e"], ["D", "BOOLEAN"], ["a", "b"], ["D", "BOOLEAN"], ["C", "INTEGER"]>>)
less_than
add_call_chain(<<C,d>>)
logical_negation
generate_java_code
int_value (20)
bool_value (false)
add_call_chain(<<b,e>>)
numerical_negation
add_query("C", "d", <<["C", "INTEGER"], ["INTEGER", "BOOLEAN"], ["A", "b"], ["C", "BOOLEAN"], ["a", "e"], ["INTEGER", "B"]>>, "B")
conjunction
add_attribute("c", "e", "c")
add_attribute("A", "c", "INTEGER")
greater_than
add_attribute("D", "A", "INTEGER")
int_value (15)
greater_than
numerical_negation
add_query("b", "a", <<["c", "BOOLEAN"], ["e", "b"], ["D", "c"], ["d", "INTEGER"], ["a", "INTEGER"], ["a", "INTEGER"], ["D", "INTEGER"]>>, "INTEGER")
bool_value (true)
quotient
add_call_chain(<<BOOLEAN>>)
quotient
add_command("C", "a", <<["D", "C"], ["B", "INTEGER"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["c", "BOOLEAN"]>>)
subtraction
type_check
int_value (14)
add_call_chain(<<INTEGER,B>>)
type_check
int_value (14)
add_attribute("A", "C", "BOOLEAN")
bool_value (true)
int_value (24)
add_call_chain(<<B>>)
logical_negation
add_command("D", "b", <<["b", "INTEGER"], ["C", "b"], ["a", "BOOLEAN"], ["a", "e"], ["D", "BOOLEAN"]>>)
add_query("C", "INTEGER", <<["c", "BOOLEAN"], ["C", "INTEGER"], ["b", "INTEGER"]>>, "e")
add_call_chain(<<C,a,BOOLEAN,BOOLEAN,D,D,a,B>>)
int_value (18)
equals
bool_value (false)
int_value (3)
bool_value (true)
add_attribute("b", "b", "BOOLEAN")
greater_than
add_class(C)
type_check
numerical_negation
logical_negation
bool_value (false)
int_value (41)
add_call_chain(<<d,A,B,a,A,c,C,d,d>>)
int_value (16)
logical_negation
generate_java_code
conjunction
numerical_negation
add_attribute("e", "a", "BOOLEAN")
multiplication
greater_than
numerical_negation
add_command("C", "B", <<["b", "BOOLEAN"], ["A", "C"], ["D", "BOOLEAN"], ["b", "BOOLEAN"]>>)
add_call_chain(<<c,d,e,b,C,D>>)
int_value (25)
int_value (39)
generate_java_code
numerical_negation
equals
generate_java_code
type_check
add_attribute("a", "c", "C")
numerical_negation
add_call_chain(<<d,b,C>>)
numerical_negation
add_query("e", "b", <<["A", "BOOLEAN"], ["D", "BOOLEAN"]>>, "b")
add_attribute("A", "e", "A")
int_value (9)
add_query("BOOLEAN", "a", <<["c", "INTEGER"], ["C", "BOOLEAN"], ["d", "A"], ["INTEGER", "D"], ["D", "c"], ["A", "BOOLEAN"], ["a", "INTEGER"]>>, "c")
int_value (39)
bool_value (true)
add_query("C", "e", <<["A", "INTEGER"], ["D", "BOOLEAN"], ["a", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["D", "INTEGER"], ["C", "INTEGER"]>>, "A")
int_value (47)
logical_negation
generate_java_code
add_call_chain(<<a,b,A>>)
add_command("C", "A", <<["C", "D"]>>)
int_value (28)
add_class(d)
add_query("D", "BOOLEAN", <<["D", "C"], ["C", "INTEGER"], ["BOOLEAN", "d"], ["BOOLEAN", "B"], ["e", "D"]>>, "D")
add_attribute("BOOLEAN", "b", "BOOLEAN")
subtraction
logical_negation
generate_java_code
add_query("A", "c", <<["d", "D"], ["BOOLEAN", "c"], ["d", "C"], ["d", "BOOLEAN"], ["b", "B"], ["BOOLEAN", "INTEGER"], ["C", "INTEGER"], ["c", "BOOLEAN"]>>, "e")
type_check
generate_java_code
generate_java_code
bool_value (true)
add_call_chain(<<C,d,A,b,b,D>>)
add_query("A", "B", <<["C", "BOOLEAN"]>>, "b")
bool_value (true)
add_command("BOOLEAN", "a", <<["b", "BOOLEAN"], ["C", "INTEGER"], ["B", "B"], ["a", "BOOLEAN"], ["b", "B"], ["c", "c"], ["BOOLEAN", "b"], ["A", "INTEGER"], ["e", "d"]>>)
add_call_chain(<<C,C,a,e>>)
modulo
disjunction
type_check
type_check
add_command("b", "A", <<["D", "INTEGER"], ["d", "a"], ["b", "INTEGER"], ["B", "INTEGER"], ["BOOLEAN", "A"]>>)
add_command("a", "e", <<["A", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "INTEGER"], ["C", "e"], ["d", "C"], ["b", "BOOLEAN"]>>)
type_check
numerical_negation
add_command("c", "a", <<["c", "INTEGER"], ["B", "BOOLEAN"], ["e", "INTEGER"], ["b", "A"], ["c", "e"], ["c", "INTEGER"]>>)
add_command("INTEGER", "c", <<["b", "BOOLEAN"], ["D", "a"], ["d", "BOOLEAN"], ["D", "BOOLEAN"], ["INTEGER", "e"]>>)
numerical_negation
add_query("a", "b", <<["a", "INTEGER"], ["INTEGER", "INTEGER"], ["C", "C"], ["C", "BOOLEAN"], ["D", "b"], ["C", "b"], ["d", "BOOLEAN"]>>, "D")
add_call_chain(<<B,A,B,INTEGER,C,INTEGER>>)
disjunction
logical_negation
generate_java_code
add_call_chain(<<INTEGER,C,INTEGER,D,A>>)
add_attribute("D", "D", "BOOLEAN")
numerical_negation
add_call_chain(<<A,b,b,D,a>>)
conjunction
add_class(d)
int_value (8)
add_call_chain(<<D,a,d,d,D>>)
generate_java_code
add_call_chain(<<d,e>>)
int_value (22)
add_attribute("INTEGER", "e", "C")
add_query("d", "B", <<["A", "BOOLEAN"], ["B", "INTEGER"], ["c", "INTEGER"], ["C", "BOOLEAN"], ["B", "D"], ["e", "e"]>>, "C")
add_call_chain(<<A,BOOLEAN,e,BOOLEAN,C,c,A>>)
add_attribute("A", "INTEGER", "BOOLEAN")
type_check
add_query("d", "c", <<["d", "INTEGER"], ["A", "BOOLEAN"], ["A", "INTEGER"]>>, "b")
add_query("A", "e", <<["d", "c"], ["c", "BOOLEAN"], ["c", "BOOLEAN"], ["b", "A"], ["d", "BOOLEAN"], ["d", "BOOLEAN"], ["d", "c"], ["INTEGER", "A"]>>, "D")
numerical_negation
add_query("A", "A", <<["d", "a"], ["e", "A"], ["B", "B"], ["c", "BOOLEAN"], ["a", "C"], ["c", "BOOLEAN"], ["a", "INTEGER"]>>, "INTEGER")
add_query("c", "INTEGER", <<["b", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["e", "b"], ["A", "INTEGER"], ["a", "a"], ["c", "INTEGER"], ["c", "BOOLEAN"], ["c", "BOOLEAN"]>>, "a")
add_query("b", "D", <<["c", "BOOLEAN"], ["D", "INTEGER"], ["e", "INTEGER"], ["INTEGER", "BOOLEAN"], ["c", "BOOLEAN"], ["c", "e"], ["BOOLEAN", "d"]>>, "c")
disjunction
add_query("b", "d", <<["C", "d"], ["B", "d"], ["D", "C"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "e"], ["D", "C"], ["e", "a"]>>, "e")
logical_negation
subtraction
add_class(D)
int_value (15)
greater_than
less_than
bool_value (true)
bool_value (true)
bool_value (false)
add_class(A)
bool_value (true)
conjunction
bool_value (true)
int_value (44)
add_command("INTEGER", "BOOLEAN", <<["a", "e"]>>)
