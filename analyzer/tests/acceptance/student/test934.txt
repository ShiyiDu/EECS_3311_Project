generate_java_code
numerical_negation
add_call_chain(<<a,c,D,c,A>>)
add_call_chain(<<b,a,b,b,c,D,C>>)
add_attribute("A", "B", "INTEGER")
add_attribute("b", "B", "C")
add_query("B", "C", <<["INTEGER", "INTEGER"], ["e", "BOOLEAN"]>>, "A")
equals
numerical_negation
type_check
logical_negation
logical_negation
add_class(e)
bool_value (true)
add_attribute("B", "BOOLEAN", "INTEGER")
int_value (34)
add_call_chain(<<A,INTEGER,B,b,a,D,e,d>>)
add_attribute("INTEGER", "BOOLEAN", "B")
logical_negation
add_call_chain(<<C,C,a,BOOLEAN>>)
add_call_chain(<<b>>)
int_value (7)
bool_value (false)
add_query("a", "A", <<["A", "BOOLEAN"], ["e", "INTEGER"], ["INTEGER", "d"], ["INTEGER", "INTEGER"], ["D", "BOOLEAN"], ["B", "A"], ["a", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "INTEGER"]>>, "b")
int_value (6)
numerical_negation
add_command("D", "b", <<["e", "D"], ["a", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "INTEGER"], ["C", "INTEGER"]>>)
add_command("D", "INTEGER", <<["a", "BOOLEAN"], ["C", "INTEGER"], ["INTEGER", "c"], ["b", "c"], ["BOOLEAN", "INTEGER"], ["a", "D"], ["C", "INTEGER"], ["b", "INTEGER"]>>)
bool_value (true)
multiplication
add_call_chain(<<D,c,D,e>>)
add_call_chain(<<e>>)
add_command("B", "B", <<["BOOLEAN", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "D"], ["D", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["C", "d"], ["INTEGER", "D"]>>)
less_than
add_call_chain(<<A,INTEGER,D,a,c,C>>)
int_value (3)
conjunction
add_command("b", "INTEGER", <<["A", "b"], ["C", "A"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["e", "D"], ["e", "INTEGER"]>>)
add_attribute("A", "INTEGER", "BOOLEAN")
int_value (3)
add_call_chain(<<e,A,b,a,e,A,d,a,B>>)
add_call_chain(<<BOOLEAN,e>>)
numerical_negation
type_check
numerical_negation
logical_negation
numerical_negation
logical_negation
add_call_chain(<<INTEGER,e,b,d,INTEGER,c,D>>)
add_call_chain(<<a,D,C,C>>)
add_call_chain(<<d,BOOLEAN,BOOLEAN,b,D,A>>)
add_call_chain(<<d,A,A,d,d,D,D>>)
bool_value (true)
equals
add_query("C", "a", <<["c", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "INTEGER"], ["C", "BOOLEAN"], ["e", "INTEGER"], ["a", "b"], ["A", "INTEGER"], ["B", "INTEGER"]>>, "INTEGER")
add_call_chain(<<b,C,d,a,A,A,A,e,b>>)
int_value (43)
conjunction
add_command("b", "D", <<["BOOLEAN", "c"], ["B", "INTEGER"], ["c", "INTEGER"], ["b", "INTEGER"], ["A", "INTEGER"]>>)
add_call_chain(<<a,B,b,c,a>>)
add_query("BOOLEAN", "c", <<["B", "BOOLEAN"], ["A", "e"], ["BOOLEAN", "BOOLEAN"]>>, "A")
generate_java_code
multiplication
add_attribute("c", "B", "INTEGER")
conjunction
numerical_negation
add_query("INTEGER", "C", <<["B", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["e", "INTEGER"], ["b", "d"]>>, "D")
int_value (21)
numerical_negation
add_query("d", "A", <<["C", "BOOLEAN"]>>, "INTEGER")
int_value (2)
add_attribute("a", "B", "INTEGER")
int_value (16)
add_call_chain(<<D,A,INTEGER,e,e,b>>)
type_check
logical_negation
disjunction
less_than
add_query("e", "b", <<["a", "BOOLEAN"], ["b", "INTEGER"], ["e", "INTEGER"]>>, "c")
add_call_chain(<<b,a>>)
logical_negation
int_value (25)
add_call_chain(<<INTEGER,C,C,B>>)
add_attribute("D", "c", "BOOLEAN")
add_class(A)
add_query("A", "C", <<["c", "d"], ["C", "BOOLEAN"], ["e", "INTEGER"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["d", "e"], ["b", "INTEGER"], ["D", "b"], ["b", "INTEGER"]>>, "e")
int_value (25)
logical_negation
int_value (39)
less_than
int_value (27)
generate_java_code
generate_java_code
add_call_chain(<<c,C,B,A>>)
add_command("b", "c", <<["b", "INTEGER"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["D", "d"], ["b", "BOOLEAN"], ["C", "B"]>>)
bool_value (true)
add_call_chain(<<d,C,a,c,a>>)
add_query("e", "b", <<["INTEGER", "INTEGER"], ["C", "B"], ["a", "C"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "A"]>>, "A")
type_check
numerical_negation
disjunction
conjunction
add_command("INTEGER", "C", <<["D", "A"], ["D", "d"], ["d", "INTEGER"]>>)
add_command("a", "B", <<["B", "INTEGER"], ["c", "D"], ["D", "BOOLEAN"]>>)
add_call_chain(<<C,a,d,A,A>>)
bool_value (false)
quotient
add_call_chain(<<D,B,a,c,a,a>>)
add_call_chain(<<b,BOOLEAN,BOOLEAN,C,B,a,b>>)
equals
add_call_chain(<<D,b,BOOLEAN,C>>)
numerical_negation
generate_java_code
int_value (10)
less_than
add_attribute("b", "b", "BOOLEAN")
add_attribute("e", "e", "BOOLEAN")
bool_value (false)
multiplication
bool_value (true)
add_query("B", "A", <<["C", "BOOLEAN"], ["B", "INTEGER"], ["BOOLEAN", "INTEGER"], ["d", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "INTEGER"], ["b", "BOOLEAN"]>>, "B")
logical_negation
add_query("D", "b", <<["e", "INTEGER"], ["B", "c"], ["b", "INTEGER"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "D"], ["BOOLEAN", "BOOLEAN"], ["a", "BOOLEAN"]>>, "D")
logical_negation
add_call_chain(<<c,d,c,B,A,d,B,INTEGER,a>>)
bool_value (true)
add_query("BOOLEAN", "D", <<["C", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "e"], ["a", "BOOLEAN"], ["B", "INTEGER"], ["B", "INTEGER"], ["B", "INTEGER"], ["C", "c"]>>, "a")
add_call_chain(<<b,e,d,e,A>>)
add_call_chain(<<D,a,d>>)
bool_value (false)
add_command("c", "e", <<["D", "INTEGER"], ["b", "BOOLEAN"], ["A", "INTEGER"], ["B", "BOOLEAN"]>>)
greater_than
add_query("C", "D", <<["b", "INTEGER"], ["C", "INTEGER"], ["D", "D"]>>, "D")
add_attribute("e", "c", "A")
add_call_chain(<<C,b,d,e,BOOLEAN,C,A,C>>)
int_value (23)
generate_java_code
add_call_chain(<<A,B>>)
logical_negation
generate_java_code
add_command("D", "e", <<["C", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "C"], ["B", "BOOLEAN"], ["d", "INTEGER"]>>)
bool_value (false)
bool_value (false)
add_attribute("A", "D", "INTEGER")
add_call_chain(<<a,e>>)
add_call_chain(<<e,a,BOOLEAN,D,C,c,BOOLEAN,A,A>>)
bool_value (false)
add_class(B)
add_call_chain(<<c,c,A,c,c,a,c,a>>)
add_command("e", "C", <<["INTEGER", "BOOLEAN"], ["A", "INTEGER"], ["c", "INTEGER"], ["C", "BOOLEAN"], ["INTEGER", "INTEGER"], ["B", "B"]>>)
bool_value (false)
add_query("B", "C", <<["a", "BOOLEAN"], ["D", "INTEGER"], ["C", "INTEGER"], ["INTEGER", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["C", "b"]>>, "D")
type_check
subtraction
add_attribute("C", "b", "BOOLEAN")
add_command("a", "C", <<["b", "INTEGER"], ["B", "INTEGER"], ["INTEGER", "a"], ["INTEGER", "c"], ["D", "INTEGER"], ["e", "D"], ["B", "INTEGER"], ["e", "D"]>>)
conjunction
add_attribute("a", "A", "INTEGER")
add_command("c", "e", <<["B", "INTEGER"], ["A", "BOOLEAN"], ["B", "A"], ["b", "INTEGER"]>>)
generate_java_code
logical_negation
type_check
add_query("A", "e", <<["BOOLEAN", "a"], ["A", "INTEGER"], ["b", "B"], ["e", "INTEGER"], ["D", "c"], ["C", "BOOLEAN"], ["b", "INTEGER"]>>, "B")
add_query("a", "c", <<["BOOLEAN", "INTEGER"], ["b", "B"], ["b", "e"], ["D", "d"], ["c", "INTEGER"], ["e", "a"], ["d", "INTEGER"], ["a", "INTEGER"]>>, "C")
add_query("d", "e", <<["b", "BOOLEAN"], ["C", "e"], ["e", "C"], ["c", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "c"]>>, "e")
multiplication
add_call_chain(<<C,B,b,A,B,c,B>>)
bool_value (false)
logical_negation
add_query("B", "A", <<["D", "INTEGER"], ["e", "INTEGER"], ["A", "INTEGER"], ["C", "INTEGER"], ["d", "BOOLEAN"]>>, "b")
conjunction
logical_negation
add_call_chain(<<A,B,A,A,D,d,B>>)
int_value (42)
add_call_chain(<<D,c,INTEGER,C,c>>)
logical_negation
numerical_negation
add_call_chain(<<d,a,INTEGER>>)
add_call_chain(<<C,d,b,d,a>>)
type_check
logical_negation
int_value (22)
add_command("B", "c", <<["B", "BOOLEAN"], ["D", "B"]>>)
generate_java_code
disjunction
add_call_chain(<<D,c,C,B>>)
numerical_negation
bool_value (true)
type_check
add_class(C)
add_attribute("c", "e", "INTEGER")
int_value (33)
equals
add_attribute("c", "c", "A")
add_attribute("A", "e", "BOOLEAN")
add_attribute("D", "A", "D")
int_value (32)
logical_negation
bool_value (false)
add_attribute("A", "c", "INTEGER")
add_call_chain(<<d,e>>)
int_value (20)
less_than
add_attribute("D", "c", "BOOLEAN")
less_than
less_than
add_call_chain(<<e,C,d,D,BOOLEAN,A,d,INTEGER>>)
conjunction
add_command("INTEGER", "C", <<["c", "e"]>>)
equals
int_value (47)
type_check
quotient
add_query("e", "D", <<["D", "A"], ["c", "BOOLEAN"], ["INTEGER", "INTEGER"], ["b", "b"], ["B", "D"]>>, "D")
add_attribute("b", "A", "e")
bool_value (true)
add_command("D", "c", <<["d", "BOOLEAN"], ["INTEGER", "c"], ["b", "B"], ["D", "INTEGER"], ["a", "C"], ["c", "BOOLEAN"], ["B", "INTEGER"]>>)
generate_java_code
int_value (10)
add_call_chain(<<B,e,b,A,A,D,BOOLEAN,INTEGER>>)
add_call_chain(<<a,c,b,INTEGER,b,a,d,b>>)
logical_negation
less_than
add_query("C", "A", <<["a", "c"], ["C", "C"], ["C", "BOOLEAN"], ["e", "d"], ["B", "BOOLEAN"]>>, "A")
add_class(BOOLEAN)
add_command("a", "b", <<["B", "INTEGER"], ["d", "a"]>>)
add_call_chain(<<D,e,B,b,e,e>>)
add_call_chain(<<D,c,B,A,e,e,e>>)
