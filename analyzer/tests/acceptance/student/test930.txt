type_check
add_command("C", "A", <<["C", "e"], ["b", "INTEGER"]>>)
quotient
bool_value (false)
int_value (12)
add_call_chain(<<a,e,d,e,e,b>>)
generate_java_code
numerical_negation
type_check
add_attribute("a", "b", "INTEGER")
add_call_chain(<<e>>)
add_command("a", "d", <<["e", "D"], ["e", "B"], ["a", "INTEGER"], ["a", "INTEGER"], ["a", "A"], ["c", "BOOLEAN"]>>)
type_check
disjunction
subtraction
add_query("C", "BOOLEAN", <<["d", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["d", "b"], ["A", "INTEGER"], ["b", "BOOLEAN"]>>, "e")
add_call_chain(<<D,a,B,A,C,d,A,c,a>>)
add_command("INTEGER", "e", <<["D", "e"], ["b", "B"], ["INTEGER", "C"]>>)
numerical_negation
add_attribute("BOOLEAN", "c", "BOOLEAN")
modulo
subtraction
add_command("b", "BOOLEAN", <<["b", "INTEGER"], ["d", "C"], ["d", "INTEGER"], ["D", "A"], ["b", "a"]>>)
logical_negation
generate_java_code
add_attribute("D", "a", "C")
bool_value (true)
add_class(B)
add_call_chain(<<BOOLEAN,BOOLEAN,INTEGER,A,B,C>>)
int_value (17)
add_class(b)
add_command("A", "B", <<["d", "b"], ["C", "B"], ["e", "D"], ["b", "INTEGER"], ["b", "C"], ["D", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "C"]>>)
add_command("c", "B", <<["C", "b"], ["D", "INTEGER"], ["a", "BOOLEAN"], ["D", "d"]>>)
int_value (9)
add_class(D)
add_attribute("c", "B", "INTEGER")
add_attribute("D", "C", "BOOLEAN")
bool_value (true)
add_command("A", "B", <<["BOOLEAN", "INTEGER"], ["D", "INTEGER"], ["d", "INTEGER"], ["C", "INTEGER"]>>)
bool_value (true)
logical_negation
type_check
add_attribute("c", "a", "D")
bool_value (false)
add_command("D", "C", <<["C", "INTEGER"], ["BOOLEAN", "B"]>>)
numerical_negation
add_query("INTEGER", "B", <<["A", "BOOLEAN"], ["e", "INTEGER"], ["C", "INTEGER"], ["B", "INTEGER"], ["c", "BOOLEAN"], ["C", "INTEGER"], ["A", "INTEGER"]>>, "INTEGER")
add_call_chain(<<d,A,b,D,e,INTEGER>>)
add_command("B", "C", <<["B", "C"]>>)
numerical_negation
add_call_chain(<<b,C,a,C,c,INTEGER,b>>)
add_attribute("C", "D", "BOOLEAN")
add_command("C", "BOOLEAN", <<["b", "A"], ["A", "BOOLEAN"], ["c", "D"]>>)
logical_negation
add_call_chain(<<INTEGER>>)
bool_value (true)
add_call_chain(<<A,A,d,d,c>>)
modulo
add_class(C)
add_call_chain(<<a,D,e,A,A,d>>)
add_query("D", "e", <<["a", "INTEGER"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "BOOLEAN"]>>, "c")
add_command("D", "e", <<["C", "INTEGER"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["d", "INTEGER"], ["c", "INTEGER"], ["D", "INTEGER"]>>)
logical_negation
bool_value (true)
type_check
add_call_chain(<<d,D,D,B,b,INTEGER,B,d>>)
numerical_negation
multiplication
bool_value (true)
add_query("D", "d", <<["d", "INTEGER"], ["B", "INTEGER"], ["D", "C"], ["c", "C"]>>, "INTEGER")
add_query("D", "B", <<["D", "BOOLEAN"], ["D", "INTEGER"], ["BOOLEAN", "INTEGER"], ["INTEGER", "INTEGER"], ["C", "C"], ["b", "INTEGER"]>>, "C")
disjunction
generate_java_code
add_call_chain(<<c,b,D,a,B,b,B>>)
add_query("C", "c", <<["B", "INTEGER"], ["BOOLEAN", "INTEGER"]>>, "A")
logical_negation
disjunction
add_query("A", "A", <<["A", "INTEGER"]>>, "B")
int_value (37)
generate_java_code
int_value (46)
int_value (37)
add_command("B", "BOOLEAN", <<["d", "INTEGER"], ["B", "BOOLEAN"], ["e", "A"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["a", "b"], ["A", "BOOLEAN"]>>)
add_query("B", "d", <<["INTEGER", "BOOLEAN"], ["B", "B"], ["A", "e"]>>, "c")
int_value (22)
bool_value (true)
bool_value (true)
add_query("BOOLEAN", "A", <<["c", "BOOLEAN"], ["B", "BOOLEAN"], ["INTEGER", "B"], ["D", "INTEGER"], ["INTEGER", "d"], ["D", "BOOLEAN"]>>, "D")
add_attribute("C", "D", "INTEGER")
type_check
add_attribute("A", "D", "BOOLEAN")
numerical_negation
add_call_chain(<<D>>)
add_attribute("D", "D", "a")
add_query("b", "e", <<["D", "BOOLEAN"], ["b", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "A"], ["c", "d"], ["e", "b"], ["D", "d"]>>, "d")
subtraction
add_command("c", "B", <<["C", "BOOLEAN"], ["A", "BOOLEAN"]>>)
generate_java_code
numerical_negation
add_command("BOOLEAN", "a", <<["B", "D"], ["BOOLEAN", "B"], ["b", "INTEGER"], ["A", "B"], ["d", "BOOLEAN"], ["B", "BOOLEAN"]>>)
subtraction
logical_negation
greater_than
disjunction
conjunction
add_call_chain(<<BOOLEAN,c,c,d,BOOLEAN,INTEGER,e>>)
add_call_chain(<<b,b,e,B,e,INTEGER>>)
subtraction
bool_value (true)
add_class(D)
int_value (48)
int_value (25)
add_class(a)
add_call_chain(<<c,d,a,BOOLEAN>>)
type_check
add_call_chain(<<a,BOOLEAN,D,C,BOOLEAN,c,B,A>>)
bool_value (true)
add_command("e", "b", <<["d", "INTEGER"], ["A", "B"], ["A", "INTEGER"], ["C", "INTEGER"], ["d", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "D"], ["a", "d"]>>)
add_attribute("a", "BOOLEAN", "D")
add_command("a", "e", <<["C", "INTEGER"], ["A", "b"], ["d", "BOOLEAN"], ["e", "C"], ["D", "e"], ["c", "BOOLEAN"]>>)
modulo
add_query("D", "D", <<["C", "a"]>>, "D")
bool_value (true)
add_call_chain(<<A,b,e,D,A>>)
add_command("e", "e", <<["BOOLEAN", "BOOLEAN"], ["a", "INTEGER"], ["b", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "INTEGER"]>>)
add_call_chain(<<A,D,a,B,d,A>>)
add_class(D)
add_call_chain(<<A,B,INTEGER,INTEGER>>)
add_call_chain(<<B,B,C,INTEGER,B,c>>)
int_value (23)
logical_negation
equals
logical_negation
quotient
add_call_chain(<<a>>)
bool_value (true)
add_command("C", "b", <<["e", "INTEGER"], ["c", "INTEGER"], ["a", "C"], ["c", "INTEGER"], ["D", "BOOLEAN"]>>)
add_attribute("d", "D", "INTEGER")
int_value (45)
less_than
add_command("C", "INTEGER", <<["c", "INTEGER"], ["B", "INTEGER"], ["D", "e"], ["d", "INTEGER"], ["A", "e"]>>)
add_command("a", "BOOLEAN", <<["D", "INTEGER"], ["d", "C"]>>)
equals
add_query("a", "B", <<["c", "A"]>>, "d")
int_value (41)
add_call_chain(<<C,c,c,A>>)
add_query("D", "D", <<["a", "e"], ["d", "BOOLEAN"], ["B", "INTEGER"], ["b", "INTEGER"], ["e", "INTEGER"], ["c", "INTEGER"], ["C", "INTEGER"], ["a", "INTEGER"], ["D", "BOOLEAN"]>>, "C")
numerical_negation
add_call_chain(<<INTEGER,B,B,B>>)
add_call_chain(<<B,A,e,d,c>>)
numerical_negation
add_query("B", "B", <<["d", "BOOLEAN"], ["d", "BOOLEAN"], ["INTEGER", "INTEGER"]>>, "C")
add_class(D)
add_command("e", "C", <<["BOOLEAN", "B"], ["B", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "BOOLEAN"]>>)
add_call_chain(<<b>>)
add_query("e", "A", <<["b", "INTEGER"], ["D", "BOOLEAN"], ["c", "INTEGER"]>>, "C")
add_class(c)
int_value (12)
logical_negation
greater_than
add_query("BOOLEAN", "A", <<["A", "INTEGER"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "BOOLEAN"]>>, "A")
type_check
add_command("BOOLEAN", "D", <<["B", "BOOLEAN"], ["b", "INTEGER"]>>)
add_attribute("b", "D", "INTEGER")
int_value (2)
add_call_chain(<<b,a,e,c,a,b,B>>)
add_query("A", "A", <<["d", "INTEGER"], ["D", "INTEGER"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["D", "INTEGER"]>>, "D")
int_value (36)
add_command("e", "c", <<["a", "INTEGER"], ["a", "INTEGER"], ["b", "C"], ["e", "INTEGER"], ["b", "INTEGER"], ["a", "INTEGER"], ["D", "C"]>>)
add_attribute("a", "D", "c")
add_call_chain(<<e,B,c>>)
add_attribute("c", "B", "BOOLEAN")
logical_negation
numerical_negation
bool_value (true)
add_call_chain(<<d,a,e,C,A,c>>)
logical_negation
generate_java_code
add_attribute("d", "A", "INTEGER")
add_attribute("D", "a", "BOOLEAN")
conjunction
add_attribute("C", "B", "INTEGER")
numerical_negation
conjunction
addition
add_call_chain(<<A,b,B,c>>)
add_call_chain(<<D,B,c,d,b,e>>)
int_value (39)
add_command("a", "A", <<["c", "BOOLEAN"]>>)
add_call_chain(<<C,INTEGER,A,A>>)
numerical_negation
int_value (34)
add_call_chain(<<C,a,B,B,C,a,a>>)
int_value (39)
add_command("d", "c", <<["A", "BOOLEAN"], ["e", "A"], ["b", "INTEGER"], ["C", "INTEGER"], ["b", "a"]>>)
numerical_negation
add_query("A", "A", <<["b", "BOOLEAN"], ["b", "INTEGER"]>>, "b")
int_value (7)
add_call_chain(<<B,BOOLEAN,B,d,B,C,d,e>>)
generate_java_code
add_call_chain(<<d,D>>)
logical_negation
modulo
add_attribute("d", "BOOLEAN", "e")
disjunction
type_check
add_command("b", "D", <<["A", "INTEGER"], ["A", "INTEGER"], ["B", "A"], ["d", "BOOLEAN"], ["D", "INTEGER"]>>)
add_query("A", "c", <<["D", "d"]>>, "e")
add_query("a", "b", <<["BOOLEAN", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["b", "D"], ["b", "D"], ["D", "INTEGER"], ["d", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "b"], ["a", "d"]>>, "c")
greater_than
add_attribute("C", "a", "INTEGER")
type_check
add_call_chain(<<c,A>>)
greater_than
numerical_negation
bool_value (false)
add_call_chain(<<B,c,D>>)
type_check
numerical_negation
add_call_chain(<<e,d>>)
add_call_chain(<<B,e,c,INTEGER,d,A>>)
add_attribute("d", "D", "INTEGER")
logical_negation
int_value (39)
add_command("B", "B", <<["a", "b"]>>)
conjunction
bool_value (false)
numerical_negation
