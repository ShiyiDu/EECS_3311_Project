add_class(d)
disjunction
numerical_negation
logical_negation
disjunction
add_command("D", "D", <<["INTEGER", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "BOOLEAN"], ["a", "BOOLEAN"]>>)
bool_value (true)
add_query("c", "B", <<["C", "a"], ["C", "BOOLEAN"], ["b", "d"]>>, "e")
add_attribute("a", "b", "INTEGER")
add_call_chain(<<b,e,a,d,INTEGER,a>>)
add_command("D", "b", <<["B", "INTEGER"], ["b", "BOOLEAN"], ["C", "d"], ["e", "BOOLEAN"]>>)
logical_negation
addition
add_class(a)
add_attribute("c", "B", "D")
add_call_chain(<<c,BOOLEAN,a>>)
int_value (4)
add_call_chain(<<e,C,b,A,c,B,C,B,B>>)
add_command("e", "A", <<["c", "BOOLEAN"], ["C", "INTEGER"], ["b", "BOOLEAN"], ["D", "INTEGER"], ["a", "INTEGER"]>>)
add_command("b", "C", <<["e", "e"], ["B", "INTEGER"], ["c", "BOOLEAN"]>>)
add_call_chain(<<D,D,c,b,d,d,D>>)
multiplication
numerical_negation
logical_negation
add_attribute("B", "b", "INTEGER")
add_class(C)
add_class(BOOLEAN)
add_call_chain(<<INTEGER,c,A,e,B,c,a,B>>)
add_query("e", "d", <<["a", "INTEGER"], ["B", "b"], ["B", "D"], ["C", "a"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["c", "INTEGER"], ["B", "INTEGER"]>>, "C")
add_attribute("INTEGER", "B", "C")
add_call_chain(<<a>>)
add_call_chain(<<D,c,D,C,B,e>>)
add_class(C)
add_query("c", "c", <<["A", "INTEGER"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "D"], ["e", "BOOLEAN"], ["a", "INTEGER"], ["C", "b"], ["b", "INTEGER"], ["C", "INTEGER"]>>, "A")
add_query("b", "BOOLEAN", <<["D", "INTEGER"], ["a", "D"], ["d", "INTEGER"]>>, "INTEGER")
add_attribute("d", "c", "BOOLEAN")
logical_negation
add_call_chain(<<A,A,A,c,D,b,C>>)
int_value (32)
add_command("a", "B", <<["e", "c"], ["B", "INTEGER"], ["b", "a"]>>)
generate_java_code
add_query("e", "A", <<["d", "BOOLEAN"], ["B", "INTEGER"], ["C", "INTEGER"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "C"], ["B", "BOOLEAN"]>>, "B")
add_query("B", "d", <<["b", "INTEGER"], ["d", "D"], ["a", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "e"], ["B", "d"], ["c", "INTEGER"], ["e", "INTEGER"], ["C", "INTEGER"]>>, "d")
add_command("D", "C", <<["A", "INTEGER"], ["D", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["B", "INTEGER"], ["B", "BOOLEAN"]>>)
subtraction
add_attribute("b", "C", "BOOLEAN")
equals
int_value (24)
addition
add_query("A", "b", <<["B", "c"], ["d", "INTEGER"], ["A", "INTEGER"], ["e", "INTEGER"], ["d", "BOOLEAN"], ["b", "BOOLEAN"], ["INTEGER", "C"]>>, "A")
type_check
add_class(C)
add_attribute("A", "INTEGER", "BOOLEAN")
add_command("b", "a", <<["b", "INTEGER"], ["c", "BOOLEAN"], ["d", "b"], ["D", "BOOLEAN"], ["c", "D"], ["B", "INTEGER"], ["c", "BOOLEAN"]>>)
int_value (21)
logical_negation
numerical_negation
int_value (29)
add_call_chain(<<e,D,d,A,C,A>>)
add_attribute("a", "e", "INTEGER")
less_than
add_query("C", "A", <<["B", "INTEGER"], ["c", "BOOLEAN"], ["D", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "D"], ["INTEGER", "INTEGER"], ["B", "INTEGER"]>>, "c")
add_call_chain(<<c,B,D,e,e,B>>)
add_command("A", "A", <<["D", "d"], ["C", "INTEGER"]>>)
add_call_chain(<<a,D,b,d,C,A,b,b>>)
add_query("A", "c", <<["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "c"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["D", "d"], ["b", "BOOLEAN"]>>, "a")
numerical_negation
equals
logical_negation
add_query("c", "e", <<["B", "INTEGER"]>>, "B")
add_attribute("D", "B", "INTEGER")
type_check
subtraction
add_query("D", "a", <<["d", "INTEGER"], ["b", "INTEGER"]>>, "e")
add_call_chain(<<a>>)
add_call_chain(<<b,a,D,e,e,D,C>>)
generate_java_code
bool_value (false)
add_call_chain(<<d,D,B,D,e>>)
generate_java_code
add_call_chain(<<A,A>>)
generate_java_code
less_than
add_attribute("B", "a", "INTEGER")
int_value (21)
add_call_chain(<<e,e,C>>)
add_call_chain(<<e,A,c,a,c,C,e>>)
conjunction
generate_java_code
add_call_chain(<<D,B,INTEGER,A,a,e>>)
numerical_negation
greater_than
add_command("C", "A", <<["d", "INTEGER"], ["D", "INTEGER"], ["a", "e"], ["BOOLEAN", "A"], ["d", "BOOLEAN"]>>)
add_query("D", "INTEGER", <<["b", "a"], ["a", "BOOLEAN"], ["B", "BOOLEAN"], ["BOOLEAN", "b"], ["e", "a"], ["B", "BOOLEAN"], ["D", "INTEGER"], ["INTEGER", "b"], ["A", "c"]>>, "e")
add_attribute("D", "D", "d")
add_command("A", "A", <<["C", "D"], ["D", "INTEGER"], ["c", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "b"], ["B", "BOOLEAN"], ["a", "BOOLEAN"]>>)
add_command("A", "A", <<["D", "A"], ["B", "INTEGER"]>>)
add_attribute("B", "e", "BOOLEAN")
logical_negation
logical_negation
add_attribute("INTEGER", "B", "BOOLEAN")
type_check
generate_java_code
add_query("e", "B", <<["INTEGER", "D"], ["e", "BOOLEAN"], ["B", "BOOLEAN"]>>, "INTEGER")
int_value (16)
bool_value (true)
equals
add_query("c", "A", <<["a", "INTEGER"], ["C", "e"], ["A", "BOOLEAN"], ["INTEGER", "d"], ["b", "INTEGER"], ["A", "INTEGER"], ["B", "b"]>>, "b")
logical_negation
bool_value (false)
int_value (20)
generate_java_code
add_query("A", "B", <<["a", "INTEGER"], ["e", "BOOLEAN"]>>, "C")
add_query("a", "A", <<["C", "INTEGER"], ["b", "INTEGER"], ["e", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "B"], ["B", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "INTEGER"]>>, "B")
bool_value (true)
add_attribute("D", "B", "INTEGER")
add_call_chain(<<A,INTEGER,e,BOOLEAN,b,BOOLEAN,BOOLEAN,BOOLEAN,d>>)
bool_value (false)
bool_value (true)
less_than
add_class(d)
add_query("d", "d", <<["d", "BOOLEAN"], ["d", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "BOOLEAN"]>>, "D")
conjunction
quotient
logical_negation
add_call_chain(<<A,A,d>>)
add_query("b", "a", <<["INTEGER", "e"], ["BOOLEAN", "INTEGER"], ["e", "A"], ["A", "BOOLEAN"]>>, "D")
add_query("A", "c", <<["D", "BOOLEAN"], ["D", "d"], ["BOOLEAN", "INTEGER"], ["A", "BOOLEAN"], ["C", "INTEGER"]>>, "A")
generate_java_code
add_call_chain(<<d,B,e,D,a,D,B,a,C>>)
add_call_chain(<<c,d,A,INTEGER,C>>)
add_call_chain(<<A,e,D,b,A,e>>)
numerical_negation
conjunction
add_attribute("D", "A", "BOOLEAN")
bool_value (true)
type_check
add_query("c", "A", <<["e", "BOOLEAN"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["B", "INTEGER"], ["d", "INTEGER"], ["A", "c"], ["B", "BOOLEAN"], ["d", "BOOLEAN"]>>, "b")
type_check
type_check
add_call_chain(<<c,b,A,C,D,C>>)
add_call_chain(<<C,c,d>>)
add_command("BOOLEAN", "A", <<["D", "a"]>>)
add_call_chain(<<INTEGER,D,INTEGER,B,A,c,D,a>>)
numerical_negation
less_than
logical_negation
disjunction
add_call_chain(<<b,b,a,A,a,b,A,c,INTEGER>>)
add_call_chain(<<C,C,a,BOOLEAN>>)
type_check
add_call_chain(<<B,d>>)
add_query("d", "D", <<["b", "BOOLEAN"], ["B", "C"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["d", "BOOLEAN"]>>, "c")
add_call_chain(<<C,A,A,e,A,A,d>>)
add_attribute("BOOLEAN", "e", "A")
add_attribute("d", "e", "b")
add_query("b", "A", <<["c", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "BOOLEAN"]>>, "A")
int_value (45)
add_class(D)
add_class(B)
add_class(a)
bool_value (false)
numerical_negation
add_query("C", "d", <<["C", "INTEGER"], ["c", "INTEGER"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["e", "d"], ["b", "BOOLEAN"]>>, "A")
disjunction
add_command("e", "c", <<["a", "INTEGER"], ["C", "e"], ["b", "e"], ["d", "e"], ["A", "INTEGER"]>>)
bool_value (false)
add_query("D", "d", <<["C", "a"], ["c", "BOOLEAN"]>>, "C")
add_call_chain(<<d,d,D,D,B,d>>)
quotient
add_class(D)
modulo
logical_negation
add_call_chain(<<a,b,b,d,INTEGER,INTEGER,b,D>>)
type_check
add_command("D", "C", <<["D", "INTEGER"], ["d", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["b", "BOOLEAN"]>>)
add_attribute("D", "b", "BOOLEAN")
generate_java_code
add_call_chain(<<b,D,INTEGER,B,BOOLEAN>>)
generate_java_code
int_value (11)
bool_value (true)
add_attribute("B", "D", "e")
numerical_negation
add_class(B)
generate_java_code
add_attribute("B", "b", "BOOLEAN")
conjunction
generate_java_code
add_call_chain(<<B,b,d>>)
add_attribute("B", "b", "BOOLEAN")
numerical_negation
add_command("e", "c", <<["d", "INTEGER"], ["d", "INTEGER"], ["D", "a"]>>)
add_class(c)
add_query("b", "b", <<["a", "INTEGER"], ["d", "BOOLEAN"], ["e", "a"], ["INTEGER", "BOOLEAN"], ["B", "b"]>>, "c")
add_attribute("C", "e", "BOOLEAN")
add_command("B", "a", <<["b", "c"], ["c", "BOOLEAN"]>>)
add_query("C", "e", <<["B", "INTEGER"], ["b", "INTEGER"], ["a", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "D"], ["a", "e"]>>, "D")
add_query("INTEGER", "A", <<["c", "INTEGER"]>>, "INTEGER")
add_class(a)
type_check
add_call_chain(<<a,B,b,d,C,D>>)
add_query("D", "e", <<["INTEGER", "a"], ["a", "BOOLEAN"], ["BOOLEAN", "a"], ["d", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "a"], ["e", "INTEGER"], ["D", "BOOLEAN"]>>, "B")
add_command("BOOLEAN", "B", <<["D", "b"], ["d", "A"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["A", "c"], ["C", "INTEGER"], ["e", "BOOLEAN"]>>)
add_call_chain(<<e>>)
add_call_chain(<<D,INTEGER,C,A,C,d,A>>)
add_attribute("C", "a", "d")
disjunction
add_call_chain(<<c,D,B,D,a,e,A>>)
add_attribute("INTEGER", "D", "INTEGER")
bool_value (true)
add_class(e)
add_attribute("A", "C", "INTEGER")
add_command("e", "d", <<["A", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "BOOLEAN"]>>)
numerical_negation
add_class(A)
add_query("C", "C", <<["A", "BOOLEAN"], ["b", "BOOLEAN"], ["d", "B"], ["B", "A"], ["D", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>, "A")
logical_negation
add_attribute("d", "C", "BOOLEAN")
add_class(A)
type_check
add_class(C)
int_value (13)
add_call_chain(<<A,D,A>>)
numerical_negation
logical_negation
add_query("d", "B", <<["B", "INTEGER"], ["b", "D"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "A"], ["c", "D"], ["INTEGER", "A"], ["d", "D"]>>, "a")
multiplication
add_call_chain(<<C,B,e,e,C,D>>)
add_command("D", "a", <<["C", "D"], ["C", "C"], ["A", "d"], ["A", "b"], ["C", "a"]>>)
type_check
add_call_chain(<<c,B,c,D,B,BOOLEAN,BOOLEAN,C,b>>)
add_command("D", "INTEGER", <<["d", "C"], ["e", "INTEGER"], ["c", "INTEGER"], ["D", "INTEGER"]>>)
add_command("c", "e", <<["B", "INTEGER"], ["B", "BOOLEAN"], ["e", "INTEGER"], ["c", "BOOLEAN"], ["c", "BOOLEAN"], ["c", "e"], ["e", "D"], ["e", "b"], ["BOOLEAN", "A"]>>)
bool_value (true)
add_query("INTEGER", "e", <<["d", "BOOLEAN"], ["e", "INTEGER"], ["e", "BOOLEAN"], ["b", "INTEGER"], ["e", "BOOLEAN"], ["D", "INTEGER"], ["B", "A"]>>, "d")
add_query("D", "d", <<["A", "d"], ["e", "d"], ["B", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["BOOLEAN", "c"], ["D", "C"], ["b", "A"], ["c", "b"]>>, "BOOLEAN")
add_query("d", "BOOLEAN", <<["C", "INTEGER"], ["A", "A"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["d", "BOOLEAN"], ["e", "B"]>>, "D")
add_call_chain(<<BOOLEAN,c,c,BOOLEAN,e>>)
quotient
add_call_chain(<<BOOLEAN,a,B,D,B,INTEGER,BOOLEAN,d>>)
logical_negation
add_command("a", "D", <<["D", "D"], ["e", "INTEGER"], ["b", "A"]>>)
add_attribute("d", "d", "d")
add_call_chain(<<A,e,B,C>>)
modulo
add_attribute("b", "A", "C")
bool_value (false)
numerical_negation
quotient
add_call_chain(<<e,C,a,C,c,a,A,e,e>>)
quotient
int_value (27)
conjunction
logical_negation
bool_value (true)
add_call_chain(<<d>>)
add_query("A", "b", <<["C", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["c", "c"], ["INTEGER", "INTEGER"], ["C", "a"], ["d", "INTEGER"]>>, "B")
add_call_chain(<<b,C,B,D,D,C>>)
int_value (20)
add_command("e", "INTEGER", <<["C", "b"], ["e", "BOOLEAN"], ["D", "B"], ["B", "D"], ["b", "e"], ["b", "c"]>>)
int_value (41)
add_call_chain(<<INTEGER,D>>)
bool_value (false)
add_class(e)
int_value (13)
add_query("C", "A", <<["D", "d"], ["e", "INTEGER"], ["B", "C"]>>, "D")
add_call_chain(<<INTEGER,e,d,D,d,C,b,c>>)
numerical_negation
add_command("c", "A", <<["c", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["B", "BOOLEAN"]>>)
type_check
numerical_negation
logical_negation
bool_value (false)
less_than
add_call_chain(<<a,c,A,D,d,D,C,C>>)
bool_value (true)
add_call_chain(<<B,INTEGER,a,B>>)
