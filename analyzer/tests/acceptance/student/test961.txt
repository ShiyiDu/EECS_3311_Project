add_query("d", "c", <<["INTEGER", "BOOLEAN"], ["e", "INTEGER"], ["b", "INTEGER"], ["C", "D"], ["a", "INTEGER"], ["INTEGER", "D"]>>, "C")
numerical_negation
multiplication
numerical_negation
multiplication
add_command("D", "A", <<["a", "B"]>>)
add_call_chain(<<B,d,INTEGER>>)
disjunction
add_call_chain(<<c,A,a,d,C,d>>)
bool_value (true)
add_call_chain(<<B,c>>)
add_call_chain(<<b,d>>)
add_attribute("C", "A", "INTEGER")
int_value (17)
add_class(c)
less_than
bool_value (true)
conjunction
add_query("B", "D", <<["B", "d"], ["a", "INTEGER"], ["D", "A"], ["A", "INTEGER"], ["A", "INTEGER"]>>, "b")
numerical_negation
int_value (35)
addition
conjunction
add_command("b", "D", <<["a", "INTEGER"], ["D", "BOOLEAN"], ["D", "a"], ["a", "BOOLEAN"], ["d", "BOOLEAN"], ["b", "D"]>>)
add_attribute("c", "d", "INTEGER")
int_value (2)
int_value (4)
add_call_chain(<<a,c,a,A,A,D>>)
add_attribute("B", "INTEGER", "BOOLEAN")
add_class(e)
equals
numerical_negation
add_command("a", "c", <<["C", "D"], ["C", "INTEGER"], ["D", "INTEGER"], ["a", "BOOLEAN"], ["d", "INTEGER"], ["d", "BOOLEAN"], ["b", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
int_value (20)
equals
less_than
int_value (40)
int_value (14)
add_command("BOOLEAN", "a", <<["D", "BOOLEAN"], ["INTEGER", "D"], ["A", "INTEGER"], ["b", "a"], ["A", "BOOLEAN"]>>)
add_call_chain(<<c,BOOLEAN,A>>)
add_attribute("c", "c", "B")
add_command("A", "a", <<["d", "BOOLEAN"]>>)
type_check
add_call_chain(<<B>>)
add_call_chain(<<A,A,BOOLEAN,a,A,c,B,BOOLEAN>>)
add_attribute("A", "C", "d")
greater_than
add_attribute("e", "c", "INTEGER")
add_query("a", "c", <<["D", "INTEGER"], ["c", "A"], ["C", "A"], ["a", "INTEGER"], ["a", "BOOLEAN"], ["B", "BOOLEAN"]>>, "INTEGER")
add_command("a", "a", <<["D", "BOOLEAN"], ["d", "INTEGER"], ["B", "d"], ["c", "INTEGER"], ["c", "C"]>>)
add_command("A", "C", <<["D", "INTEGER"], ["INTEGER", "BOOLEAN"], ["D", "INTEGER"], ["d", "INTEGER"], ["d", "INTEGER"], ["e", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>)
add_query("D", "c", <<["B", "BOOLEAN"], ["c", "BOOLEAN"]>>, "C")
add_class(B)
type_check
add_query("e", "b", <<["e", "b"]>>, "C")
greater_than
bool_value (true)
add_command("A", "A", <<["INTEGER", "BOOLEAN"], ["D", "INTEGER"], ["c", "INTEGER"], ["e", "D"], ["c", "INTEGER"], ["B", "BOOLEAN"], ["A", "INTEGER"]>>)
bool_value (true)
add_command("b", "b", <<["a", "INTEGER"], ["B", "INTEGER"]>>)
generate_java_code
bool_value (false)
bool_value (false)
add_call_chain(<<A,a>>)
addition
numerical_negation
add_query("c", "d", <<["A", "a"], ["BOOLEAN", "INTEGER"], ["d", "INTEGER"], ["b", "BOOLEAN"]>>, "B")
generate_java_code
add_attribute("b", "c", "INTEGER")
add_attribute("d", "INTEGER", "d")
bool_value (true)
add_query("b", "C", <<["b", "INTEGER"], ["INTEGER", "e"], ["A", "BOOLEAN"]>>, "b")
logical_negation
conjunction
bool_value (true)
add_call_chain(<<d,B,C,c>>)
int_value (42)
add_query("b", "C", <<["e", "BOOLEAN"], ["INTEGER", "INTEGER"]>>, "D")
conjunction
numerical_negation
logical_negation
add_class(A)
int_value (20)
int_value (28)
generate_java_code
disjunction
add_attribute("b", "A", "C")
equals
type_check
add_query("a", "A", <<["b", "INTEGER"], ["C", "INTEGER"], ["A", "INTEGER"], ["d", "BOOLEAN"]>>, "B")
add_call_chain(<<b,B,e,INTEGER,a,C,C,b,INTEGER>>)
add_command("a", "C", <<["b", "INTEGER"], ["d", "INTEGER"], ["a", "B"], ["INTEGER", "B"], ["a", "INTEGER"]>>)
add_command("B", "b", <<["c", "BOOLEAN"], ["C", "BOOLEAN"]>>)
logical_negation
int_value (21)
add_query("BOOLEAN", "A", <<["BOOLEAN", "INTEGER"], ["e", "INTEGER"], ["b", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "A"], ["C", "B"]>>, "D")
logical_negation
bool_value (false)
type_check
conjunction
add_command("INTEGER", "A", <<["B", "BOOLEAN"], ["D", "D"], ["b", "BOOLEAN"], ["b", "INTEGER"], ["C", "INTEGER"], ["e", "BOOLEAN"], ["D", "INTEGER"], ["C", "INTEGER"], ["a", "BOOLEAN"]>>)
add_call_chain(<<B,C,b,D,B,b>>)
greater_than
subtraction
add_class(c)
add_call_chain(<<d,A>>)
add_class(INTEGER)
add_command("c", "a", <<["b", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "C"], ["A", "INTEGER"], ["D", "e"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["a", "D"], ["INTEGER", "BOOLEAN"]>>)
bool_value (true)
add_command("D", "e", <<["c", "A"], ["A", "BOOLEAN"], ["d", "INTEGER"], ["BOOLEAN", "INTEGER"]>>)
int_value (34)
add_call_chain(<<b>>)
add_command("b", "BOOLEAN", <<["INTEGER", "INTEGER"], ["e", "BOOLEAN"], ["e", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "INTEGER"]>>)
add_command("c", "INTEGER", <<["C", "INTEGER"], ["A", "INTEGER"], ["b", "C"], ["b", "C"], ["B", "B"], ["C", "e"], ["B", "D"]>>)
add_query("c", "e", <<["D", "INTEGER"], ["A", "BOOLEAN"]>>, "d")
add_command("b", "INTEGER", <<["BOOLEAN", "BOOLEAN"], ["B", "b"], ["INTEGER", "d"], ["e", "a"], ["C", "BOOLEAN"], ["c", "INTEGER"], ["C", "BOOLEAN"]>>)
add_attribute("C", "C", "BOOLEAN")
add_attribute("A", "d", "BOOLEAN")
numerical_negation
add_call_chain(<<D,C,BOOLEAN,e,A,A,c>>)
generate_java_code
add_class(a)
add_call_chain(<<A,d,D,C,b,e,b,d,b>>)
bool_value (false)
add_query("c", "e", <<["e", "e"], ["D", "BOOLEAN"], ["e", "B"], ["c", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["b", "D"]>>, "c")
type_check
less_than
add_query("C", "C", <<["D", "BOOLEAN"], ["b", "C"], ["e", "A"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["d", "BOOLEAN"]>>, "C")
numerical_negation
add_class(e)
add_command("INTEGER", "B", <<["e", "BOOLEAN"], ["D", "BOOLEAN"]>>)
add_attribute("A", "c", "INTEGER")
add_call_chain(<<c,A,C,e,a,d>>)
logical_negation
int_value (10)
less_than
add_query("c", "b", <<["B", "D"], ["D", "INTEGER"], ["C", "c"], ["D", "D"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["D", "A"], ["C", "INTEGER"]>>, "BOOLEAN")
add_call_chain(<<D>>)
add_attribute("A", "e", "e")
add_command("A", "c", <<["A", "INTEGER"]>>)
add_command("e", "e", <<["D", "BOOLEAN"], ["C", "A"], ["A", "INTEGER"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["d", "INTEGER"]>>)
add_query("B", "b", <<["B", "INTEGER"], ["a", "INTEGER"], ["A", "a"], ["e", "INTEGER"], ["d", "BOOLEAN"], ["b", "C"], ["c", "e"], ["e", "b"], ["a", "BOOLEAN"]>>, "D")
add_call_chain(<<b,A,A,A,e>>)
type_check
numerical_negation
add_class(d)
addition
less_than
subtraction
type_check
generate_java_code
add_command("e", "B", <<["c", "INTEGER"], ["c", "BOOLEAN"]>>)
bool_value (false)
add_class(d)
less_than
generate_java_code
bool_value (true)
int_value (49)
add_attribute("C", "b", "BOOLEAN")
add_class(B)
less_than
add_attribute("BOOLEAN", "b", "INTEGER")
add_class(C)
bool_value (false)
bool_value (true)
add_call_chain(<<e,e>>)
conjunction
bool_value (true)
less_than
bool_value (false)
add_query("C", "B", <<["C", "BOOLEAN"], ["b", "INTEGER"], ["D", "INTEGER"], ["e", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "INTEGER"], ["C", "c"], ["a", "BOOLEAN"]>>, "A")
type_check
logical_negation
add_command("b", "b", <<["A", "BOOLEAN"], ["d", "D"], ["C", "BOOLEAN"], ["D", "b"], ["D", "INTEGER"]>>)
int_value (26)
int_value (8)
add_call_chain(<<A,c,A,C>>)
logical_negation
int_value (30)
generate_java_code
type_check
int_value (32)
add_attribute("B", "C", "A")
add_class(C)
add_attribute("c", "B", "INTEGER")
add_class(INTEGER)
numerical_negation
addition
add_command("BOOLEAN", "BOOLEAN", <<["e", "D"], ["A", "INTEGER"], ["c", "B"]>>)
logical_negation
disjunction
numerical_negation
int_value (4)
int_value (26)
logical_negation
logical_negation
addition
conjunction
equals
add_query("c", "a", <<["A", "B"], ["c", "INTEGER"], ["a", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "D"], ["D", "BOOLEAN"]>>, "b")
add_call_chain(<<BOOLEAN,D,d,INTEGER,INTEGER,B>>)
add_query("b", "b", <<["D", "B"], ["d", "e"], ["c", "INTEGER"], ["C", "BOOLEAN"], ["D", "d"]>>, "d")
bool_value (true)
add_call_chain(<<B,A,a,C>>)
add_class(A)
numerical_negation
numerical_negation
add_attribute("BOOLEAN", "B", "BOOLEAN")
generate_java_code
addition
quotient
numerical_negation
conjunction
add_call_chain(<<BOOLEAN,d,d,INTEGER,e,e>>)
int_value (36)
int_value (33)
add_attribute("A", "D", "BOOLEAN")
int_value (42)
bool_value (false)
type_check
add_command("c", "C", <<["A", "A"], ["INTEGER", "INTEGER"], ["D", "D"], ["D", "INTEGER"], ["INTEGER", "INTEGER"], ["B", "b"]>>)
generate_java_code
add_call_chain(<<c,d,C,B,BOOLEAN,c,c,D,d>>)
add_call_chain(<<D,c,b,b,a>>)
