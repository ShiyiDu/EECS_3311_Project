logical_negation
add_call_chain(<<D,e,a,A,a,A>>)
type_check
quotient
logical_negation
add_command("d", "A", <<["b", "A"], ["c", "e"], ["D", "INTEGER"], ["b", "BOOLEAN"], ["D", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>)
bool_value (true)
bool_value (true)
add_query("a", "BOOLEAN", <<["e", "BOOLEAN"], ["C", "e"], ["c", "d"]>>, "INTEGER")
bool_value (true)
add_call_chain(<<c,a>>)
int_value (5)
numerical_negation
add_command("BOOLEAN", "D", <<["e", "d"]>>)
logical_negation
bool_value (true)
numerical_negation
add_query("C", "e", <<["A", "A"], ["D", "BOOLEAN"], ["D", "BOOLEAN"], ["INTEGER", "INTEGER"], ["D", "D"], ["d", "BOOLEAN"], ["INTEGER", "b"], ["b", "BOOLEAN"]>>, "B")
quotient
add_command("e", "C", <<["b", "INTEGER"], ["e", "BOOLEAN"], ["INTEGER", "INTEGER"], ["e", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "INTEGER"], ["d", "INTEGER"]>>)
add_call_chain(<<D,A,e>>)
add_query("INTEGER", "INTEGER", <<["e", "C"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "a"]>>, "d")
add_call_chain(<<e,e,D,e,A,b,A>>)
bool_value (false)
equals
bool_value (false)
add_command("b", "c", <<["c", "A"], ["b", "A"], ["B", "BOOLEAN"]>>)
greater_than
multiplication
type_check
add_call_chain(<<c,B,D,C,a,C,C>>)
add_attribute("d", "INTEGER", "INTEGER")
addition
int_value (3)
int_value (12)
type_check
add_query("A", "C", <<["BOOLEAN", "BOOLEAN"], ["BOOLEAN", "c"], ["B", "INTEGER"], ["a", "A"]>>, "C")
add_attribute("D", "d", "BOOLEAN")
add_class(a)
quotient
type_check
add_call_chain(<<d>>)
int_value (24)
logical_negation
disjunction
add_attribute("C", "B", "e")
bool_value (true)
int_value (5)
generate_java_code
numerical_negation
add_call_chain(<<e,BOOLEAN,d,b>>)
add_query("D", "B", <<["C", "INTEGER"], ["C", "BOOLEAN"], ["a", "BOOLEAN"], ["INTEGER", "D"], ["a", "a"], ["a", "INTEGER"], ["A", "INTEGER"], ["D", "BOOLEAN"]>>, "d")
add_call_chain(<<A,A,c,e,A,D,B,e,c>>)
add_class(B)
add_command("e", "D", <<["A", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "INTEGER"], ["b", "BOOLEAN"], ["c", "D"], ["D", "B"], ["e", "INTEGER"], ["B", "D"]>>)
add_command("C", "B", <<["e", "b"], ["D", "INTEGER"], ["B", "INTEGER"]>>)
add_class(A)
logical_negation
add_query("e", "b", <<["C", "e"], ["INTEGER", "C"], ["D", "BOOLEAN"], ["d", "D"], ["d", "BOOLEAN"], ["C", "INTEGER"]>>, "c")
add_query("b", "BOOLEAN", <<["b", "a"], ["d", "BOOLEAN"], ["A", "INTEGER"], ["B", "BOOLEAN"]>>, "INTEGER")
equals
bool_value (false)
int_value (25)
equals
add_call_chain(<<D>>)
add_command("INTEGER", "D", <<["C", "INTEGER"], ["e", "INTEGER"], ["D", "INTEGER"], ["d", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
add_call_chain(<<D,B,d>>)
logical_negation
int_value (36)
add_command("d", "c", <<["c", "BOOLEAN"], ["A", "c"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["e", "BOOLEAN"]>>)
bool_value (true)
add_command("b", "b", <<["e", "INTEGER"], ["c", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "a"], ["B", "INTEGER"], ["A", "INTEGER"], ["A", "A"]>>)
add_attribute("C", "a", "BOOLEAN")
multiplication
add_class(e)
logical_negation
add_query("d", "INTEGER", <<["D", "INTEGER"], ["c", "INTEGER"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "INTEGER"], ["BOOLEAN", "b"]>>, "b")
type_check
quotient
logical_negation
add_command("D", "D", <<["c", "INTEGER"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "BOOLEAN"], ["c", "INTEGER"], ["e", "INTEGER"], ["d", "INTEGER"]>>)
bool_value (false)
add_call_chain(<<b,c,b,c,e,b,d,d,D>>)
type_check
numerical_negation
int_value (41)
equals
add_query("b", "A", <<["a", "B"], ["c", "INTEGER"], ["d", "INTEGER"], ["b", "b"], ["A", "BOOLEAN"], ["d", "BOOLEAN"]>>, "b")
bool_value (true)
add_call_chain(<<INTEGER,b,b,B,e,C,D>>)
add_attribute("D", "B", "D")
add_call_chain(<<b,d,A,INTEGER,D>>)
less_than
logical_negation
add_query("C", "D", <<["e", "BOOLEAN"], ["D", "A"], ["INTEGER", "b"], ["c", "INTEGER"]>>, "c")
add_call_chain(<<c,A>>)
add_attribute("A", "d", "BOOLEAN")
add_call_chain(<<c,c,D,c,a,A,BOOLEAN>>)
int_value (20)
add_attribute("A", "a", "e")
add_query("e", "c", <<["e", "INTEGER"], ["b", "BOOLEAN"], ["A", "INTEGER"]>>, "D")
addition
add_class(D)
add_query("C", "B", <<["d", "INTEGER"], ["B", "A"], ["D", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["C", "c"], ["d", "D"]>>, "B")
add_query("d", "a", <<["A", "D"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["BOOLEAN", "b"], ["c", "a"], ["C", "BOOLEAN"]>>, "a")
bool_value (true)
add_call_chain(<<D,a,a,B,B,B,d,A>>)
disjunction
type_check
add_call_chain(<<INTEGER,C,b,c,c,b>>)
add_attribute("b", "d", "INTEGER")
add_command("b", "e", <<["C", "INTEGER"], ["a", "e"], ["B", "a"], ["a", "e"], ["B", "c"]>>)
add_command("d", "B", <<["C", "BOOLEAN"], ["C", "BOOLEAN"], ["d", "INTEGER"], ["B", "BOOLEAN"]>>)
int_value (28)
type_check
add_class(b)
bool_value (true)
add_call_chain(<<A,a,c>>)
int_value (25)
numerical_negation
add_command("D", "d", <<["d", "BOOLEAN"]>>)
add_query("D", "BOOLEAN", <<["A", "INTEGER"], ["A", "BOOLEAN"]>>, "C")
quotient
add_command("D", "b", <<["e", "BOOLEAN"]>>)
type_check
modulo
generate_java_code
type_check
bool_value (true)
numerical_negation
add_class(D)
type_check
logical_negation
add_query("BOOLEAN", "e", <<["A", "BOOLEAN"], ["D", "A"], ["C", "INTEGER"]>>, "B")
add_call_chain(<<A,e,A>>)
add_call_chain(<<a,B,D,D>>)
generate_java_code
int_value (17)
modulo
generate_java_code
conjunction
add_call_chain(<<BOOLEAN,b>>)
add_command("INTEGER", "a", <<["d", "INTEGER"], ["c", "BOOLEAN"], ["c", "b"], ["b", "a"], ["A", "INTEGER"], ["e", "INTEGER"], ["c", "c"], ["e", "INTEGER"]>>)
add_query("a", "D", <<["B", "BOOLEAN"], ["b", "b"], ["C", "BOOLEAN"], ["c", "B"], ["b", "D"]>>, "e")
bool_value (false)
generate_java_code
numerical_negation
less_than
int_value (6)
multiplication
type_check
add_command("A", "B", <<["B", "BOOLEAN"]>>)
greater_than
add_query("e", "c", <<["A", "BOOLEAN"]>>, "B")
add_attribute("B", "a", "INTEGER")
add_command("a", "b", <<["D", "INTEGER"], ["D", "e"], ["A", "d"], ["B", "INTEGER"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["B", "D"], ["c", "INTEGER"], ["c", "BOOLEAN"]>>)
add_command("BOOLEAN", "e", <<["D", "BOOLEAN"], ["e", "B"]>>)
add_class(a)
bool_value (true)
int_value (11)
conjunction
add_command("C", "INTEGER", <<["C", "BOOLEAN"]>>)
add_command("B", "C", <<["D", "BOOLEAN"], ["INTEGER", "INTEGER"], ["a", "e"], ["INTEGER", "BOOLEAN"], ["A", "INTEGER"], ["INTEGER", "BOOLEAN"], ["B", "INTEGER"], ["BOOLEAN", "e"]>>)
add_call_chain(<<a,B,d,b,e,b>>)
add_attribute("D", "INTEGER", "INTEGER")
generate_java_code
add_attribute("C", "c", "b")
int_value (24)
add_attribute("e", "C", "BOOLEAN")
add_call_chain(<<A,a,BOOLEAN,A,b,a>>)
int_value (40)
add_call_chain(<<B,B,BOOLEAN,BOOLEAN,B,a,D>>)
int_value (15)
type_check
conjunction
generate_java_code
add_command("BOOLEAN", "A", <<["B", "c"]>>)
conjunction
add_call_chain(<<A,D,b,e,d,B>>)
numerical_negation
generate_java_code
add_call_chain(<<D,D,e,c,B,c>>)
int_value (5)
generate_java_code
add_query("d", "B", <<["c", "BOOLEAN"], ["C", "INTEGER"]>>, "e")
bool_value (false)
add_query("C", "B", <<["b", "INTEGER"], ["BOOLEAN", "INTEGER"]>>, "D")
bool_value (false)
numerical_negation
add_query("a", "e", <<["d", "c"], ["D", "b"], ["C", "INTEGER"], ["e", "a"], ["B", "BOOLEAN"], ["A", "INTEGER"]>>, "d")
add_class(d)
numerical_negation
add_command("b", "A", <<["e", "C"], ["D", "b"], ["D", "BOOLEAN"], ["a", "e"], ["d", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["d", "INTEGER"]>>)
modulo
add_query("B", "A", <<["b", "INTEGER"], ["D", "INTEGER"], ["A", "a"], ["D", "INTEGER"], ["C", "BOOLEAN"]>>, "e")
add_call_chain(<<D,C,b,d,a,A>>)
add_attribute("a", "B", "a")
numerical_negation
add_attribute("C", "A", "BOOLEAN")
add_attribute("A", "c", "INTEGER")
logical_negation
add_call_chain(<<c>>)
int_value (32)
add_call_chain(<<e,INTEGER,A,d,C,INTEGER,c>>)
add_call_chain(<<a,b,a,e,B,BOOLEAN>>)
add_query("e", "C", <<["D", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "B"], ["B", "INTEGER"], ["e", "BOOLEAN"]>>, "a")
int_value (32)
bool_value (false)
addition
add_command("A", "A", <<["C", "BOOLEAN"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["D", "BOOLEAN"]>>)
add_class(D)
less_than
add_call_chain(<<b,c,D>>)
add_query("D", "d", <<["D", "BOOLEAN"], ["A", "INTEGER"], ["B", "INTEGER"], ["b", "INTEGER"], ["d", "INTEGER"], ["D", "BOOLEAN"], ["b", "e"], ["D", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>, "B")
equals
add_query("b", "d", <<["e", "INTEGER"], ["A", "BOOLEAN"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["e", "INTEGER"], ["e", "a"], ["A", "C"]>>, "c")
disjunction
logical_negation
add_command("e", "B", <<["D", "d"], ["B", "BOOLEAN"], ["e", "BOOLEAN"], ["c", "C"]>>)
