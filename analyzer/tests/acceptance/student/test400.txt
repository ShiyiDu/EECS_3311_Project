int_value (40)
add_query("c", "b", <<["INTEGER", "INTEGER"], ["b", "INTEGER"]>>, "D")
addition
less_than
modulo
logical_negation
add_call_chain(<<INTEGER,D,C,B,e,D,B,B>>)
add_query("c", "d", <<["D", "a"], ["d", "INTEGER"]>>, "b")
add_call_chain(<<a,B,B,e,d,B,B,D>>)
add_class(D)
add_call_chain(<<C,e,e,INTEGER,D,A>>)
type_check
add_call_chain(<<e,C,B,e,A>>)
generate_java_code
add_call_chain(<<C,d,a,a,b>>)
add_attribute("d", "A", "BOOLEAN")
conjunction
equals
int_value (7)
logical_negation
numerical_negation
logical_negation
logical_negation
add_call_chain(<<D,BOOLEAN,c,e,b,b,e,C,d>>)
add_query("c", "b", <<["B", "INTEGER"], ["d", "INTEGER"], ["INTEGER", "D"]>>, "D")
logical_negation
add_command("d", "a", <<["e", "BOOLEAN"], ["c", "BOOLEAN"], ["d", "INTEGER"], ["e", "INTEGER"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["b", "BOOLEAN"]>>)
add_call_chain(<<A,C,D>>)
add_call_chain(<<b,C,a,b,c,C>>)
int_value (10)
add_class(C)
add_call_chain(<<c,e,c,BOOLEAN,b,e,B,B>>)
add_attribute("c", "C", "INTEGER")
add_command("B", "a", <<["D", "A"], ["B", "INTEGER"], ["c", "b"], ["INTEGER", "b"], ["a", "e"], ["c", "INTEGER"]>>)
add_command("d", "b", <<["D", "BOOLEAN"], ["INTEGER", "INTEGER"], ["a", "INTEGER"], ["a", "BOOLEAN"], ["e", "INTEGER"], ["B", "INTEGER"], ["C", "D"], ["a", "INTEGER"]>>)
add_command("b", "INTEGER", <<["c", "BOOLEAN"], ["B", "INTEGER"], ["c", "a"], ["b", "BOOLEAN"]>>)
type_check
add_class(INTEGER)
conjunction
numerical_negation
add_attribute("a", "A", "INTEGER")
add_query("a", "D", <<["a", "INTEGER"], ["B", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["c", "INTEGER"], ["e", "d"], ["a", "INTEGER"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "b"]>>, "a")
numerical_negation
add_attribute("A", "d", "INTEGER")
add_attribute("INTEGER", "A", "BOOLEAN")
type_check
equals
bool_value (true)
subtraction
add_command("C", "B", <<["INTEGER", "INTEGER"], ["A", "B"], ["INTEGER", "INTEGER"], ["D", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "INTEGER"], ["e", "BOOLEAN"]>>)
int_value (37)
add_call_chain(<<A,e,BOOLEAN,BOOLEAN,d>>)
add_call_chain(<<d,D,B,B>>)
add_attribute("d", "B", "INTEGER")
numerical_negation
add_attribute("A", "e", "INTEGER")
logical_negation
add_attribute("d", "C", "BOOLEAN")
numerical_negation
numerical_negation
int_value (36)
bool_value (false)
add_attribute("A", "a", "INTEGER")
add_attribute("A", "b", "BOOLEAN")
add_call_chain(<<d,C,a,c,C>>)
add_query("INTEGER", "D", <<["d", "BOOLEAN"], ["A", "INTEGER"], ["b", "INTEGER"]>>, "d")
bool_value (true)
add_call_chain(<<BOOLEAN,C>>)
add_command("e", "a", <<["A", "INTEGER"], ["B", "BOOLEAN"], ["A", "d"], ["a", "INTEGER"], ["INTEGER", "A"], ["D", "BOOLEAN"], ["D", "INTEGER"]>>)
generate_java_code
add_call_chain(<<INTEGER,a>>)
add_class(A)
int_value (2)
int_value (27)
logical_negation
numerical_negation
int_value (35)
add_call_chain(<<b,C>>)
add_class(d)
modulo
add_command("A", "INTEGER", <<["C", "BOOLEAN"]>>)
int_value (26)
bool_value (false)
subtraction
logical_negation
add_call_chain(<<B,a,D,D,D,INTEGER,B,A,A>>)
logical_negation
int_value (31)
add_command("c", "b", <<["A", "INTEGER"], ["a", "C"]>>)
bool_value (false)
multiplication
int_value (41)
numerical_negation
bool_value (false)
add_attribute("c", "a", "BOOLEAN")
int_value (8)
numerical_negation
addition
quotient
generate_java_code
add_call_chain(<<b,a,a,D,b,C,b>>)
add_query("e", "D", <<["B", "INTEGER"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["c", "BOOLEAN"]>>, "d")
int_value (39)
add_command("b", "d", <<["b", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "d"], ["c", "INTEGER"]>>)
int_value (12)
add_class(C)
add_attribute("C", "INTEGER", "BOOLEAN")
numerical_negation
disjunction
add_attribute("B", "A", "BOOLEAN")
logical_negation
numerical_negation
add_class(a)
add_command("b", "b", <<["D", "INTEGER"], ["e", "B"], ["e", "INTEGER"], ["INTEGER", "INTEGER"], ["A", "b"], ["c", "b"], ["b", "B"], ["B", "INTEGER"], ["b", "INTEGER"]>>)
bool_value (false)
type_check
bool_value (true)
add_command("C", "BOOLEAN", <<["B", "INTEGER"], ["C", "D"]>>)
bool_value (true)
bool_value (false)
add_attribute("INTEGER", "a", "BOOLEAN")
add_class(B)
bool_value (true)
add_call_chain(<<D,D,d,D,INTEGER,d,D,C>>)
generate_java_code
multiplication
logical_negation
numerical_negation
equals
add_query("B", "b", <<["A", "a"], ["A", "INTEGER"], ["A", "C"]>>, "D")
logical_negation
add_call_chain(<<C>>)
int_value (46)
add_call_chain(<<e,BOOLEAN,b,D,B>>)
add_attribute("A", "D", "INTEGER")
add_call_chain(<<D,d>>)
logical_negation
generate_java_code
int_value (38)
type_check
numerical_negation
add_call_chain(<<B,C>>)
add_call_chain(<<A>>)
int_value (25)
add_attribute("c", "d", "BOOLEAN")
quotient
add_command("D", "a", <<["A", "A"], ["d", "INTEGER"], ["e", "INTEGER"]>>)
logical_negation
add_attribute("e", "a", "BOOLEAN")
add_command("c", "e", <<["b", "INTEGER"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["d", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "D"], ["C", "INTEGER"]>>)
add_call_chain(<<c,B,e,b,b,A,D,a,C>>)
add_call_chain(<<d,A,B,D>>)
bool_value (true)
add_call_chain(<<e,b,e,C,e,b>>)
int_value (15)
add_call_chain(<<c,A,D,D,c,a>>)
add_command("e", "B", <<["d", "BOOLEAN"], ["A", "D"], ["c", "BOOLEAN"], ["a", "e"]>>)
disjunction
logical_negation
logical_negation
add_call_chain(<<D,D,e>>)
bool_value (true)
quotient
greater_than
logical_negation
add_query("a", "C", <<["INTEGER", "C"], ["BOOLEAN", "INTEGER"], ["e", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["B", "B"], ["e", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "c"], ["e", "INTEGER"]>>, "BOOLEAN")
add_query("A", "A", <<["a", "d"], ["D", "D"], ["d", "BOOLEAN"]>>, "b")
add_class(e)
add_query("C", "A", <<["d", "a"], ["e", "d"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["A", "BOOLEAN"]>>, "A")
add_command("D", "d", <<["C", "BOOLEAN"], ["B", "INTEGER"], ["a", "INTEGER"], ["D", "C"], ["B", "BOOLEAN"], ["c", "d"], ["a", "d"], ["BOOLEAN", "INTEGER"], ["a", "INTEGER"]>>)
type_check
int_value (14)
add_class(c)
generate_java_code
int_value (26)
add_query("e", "BOOLEAN", <<["B", "INTEGER"], ["e", "INTEGER"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["INTEGER", "a"], ["B", "INTEGER"], ["c", "BOOLEAN"], ["d", "A"], ["c", "BOOLEAN"]>>, "C")
add_call_chain(<<A>>)
int_value (38)
type_check
addition
add_call_chain(<<C>>)
add_class(d)
type_check
logical_negation
logical_negation
bool_value (true)
bool_value (false)
add_attribute("c", "A", "e")
generate_java_code
add_call_chain(<<D>>)
bool_value (true)
generate_java_code
