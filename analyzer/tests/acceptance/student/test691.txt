disjunction
bool_value (true)
int_value (24)
add_class(INTEGER)
equals
add_call_chain(<<B,A,B,D,INTEGER>>)
int_value (35)
add_call_chain(<<A,c,d,A,A>>)
logical_negation
conjunction
add_call_chain(<<B>>)
int_value (12)
subtraction
add_command("c", "b", <<["d", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["A", "d"], ["A", "B"]>>)
type_check
disjunction
add_query("D", "b", <<["D", "a"], ["D", "INTEGER"]>>, "B")
add_query("C", "B", <<["C", "BOOLEAN"], ["a", "INTEGER"], ["d", "b"]>>, "e")
add_attribute("A", "B", "BOOLEAN")
generate_java_code
add_command("e", "a", <<["INTEGER", "A"], ["b", "INTEGER"]>>)
add_command("a", "c", <<["b", "BOOLEAN"], ["A", "b"], ["C", "INTEGER"]>>)
add_attribute("b", "BOOLEAN", "BOOLEAN")
add_call_chain(<<d,a,A>>)
add_call_chain(<<A,B,d,c,b>>)
add_class(INTEGER)
bool_value (true)
add_call_chain(<<C,C,c,C>>)
modulo
quotient
add_command("B", "c", <<["C", "INTEGER"], ["BOOLEAN", "INTEGER"], ["INTEGER", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "BOOLEAN"]>>)
add_command("C", "B", <<["INTEGER", "BOOLEAN"], ["A", "A"], ["B", "INTEGER"], ["B", "B"], ["BOOLEAN", "D"], ["C", "D"]>>)
logical_negation
logical_negation
type_check
add_command("a", "e", <<["d", "INTEGER"]>>)
equals
add_command("B", "d", <<["A", "D"], ["e", "INTEGER"], ["C", "INTEGER"]>>)
type_check
add_command("b", "D", <<["a", "e"]>>)
add_command("B", "d", <<["a", "INTEGER"]>>)
add_class(A)
greater_than
add_call_chain(<<d,C,e,D,e,b,d>>)
add_call_chain(<<C,B,B>>)
addition
add_attribute("c", "BOOLEAN", "BOOLEAN")
bool_value (false)
add_call_chain(<<b,A>>)
type_check
greater_than
greater_than
greater_than
equals
conjunction
add_call_chain(<<b,b,INTEGER,D,A>>)
add_call_chain(<<e,BOOLEAN,BOOLEAN,BOOLEAN,D>>)
add_call_chain(<<B,BOOLEAN,C,e,B,b,B,B>>)
add_call_chain(<<C,C,A,c,b,C,C,A>>)
generate_java_code
add_attribute("B", "e", "INTEGER")
int_value (32)
bool_value (false)
int_value (41)
add_call_chain(<<BOOLEAN,e>>)
add_attribute("c", "e", "INTEGER")
add_query("a", "D", <<["e", "b"], ["C", "BOOLEAN"], ["b", "B"], ["d", "BOOLEAN"]>>, "c")
quotient
add_call_chain(<<INTEGER,c,BOOLEAN,D,B>>)
add_attribute("e", "e", "B")
conjunction
conjunction
int_value (3)
add_call_chain(<<c>>)
type_check
add_call_chain(<<B,INTEGER,c,C,b,c,D,BOOLEAN>>)
greater_than
bool_value (true)
add_query("INTEGER", "D", <<["e", "BOOLEAN"], ["B", "INTEGER"]>>, "D")
add_call_chain(<<e,C,D,b,INTEGER,A,D,d,e>>)
add_class(c)
add_attribute("a", "C", "INTEGER")
int_value (5)
add_command("D", "a", <<["C", "INTEGER"], ["C", "B"], ["D", "BOOLEAN"], ["C", "c"], ["C", "INTEGER"], ["d", "INTEGER"], ["C", "INTEGER"], ["A", "INTEGER"], ["e", "B"]>>)
type_check
add_attribute("C", "e", "b")
add_attribute("INTEGER", "b", "BOOLEAN")
add_query("D", "B", <<["d", "BOOLEAN"], ["A", "b"], ["BOOLEAN", "BOOLEAN"], ["d", "INTEGER"], ["C", "INTEGER"], ["a", "c"], ["D", "BOOLEAN"], ["d", "BOOLEAN"], ["e", "INTEGER"]>>, "d")
add_call_chain(<<B,d,d,A,c,e,D,a>>)
logical_negation
generate_java_code
add_query("d", "BOOLEAN", <<["D", "d"], ["C", "INTEGER"]>>, "BOOLEAN")
generate_java_code
add_command("c", "D", <<["e", "BOOLEAN"]>>)
modulo
add_attribute("A", "c", "BOOLEAN")
logical_negation
add_call_chain(<<A>>)
add_call_chain(<<A,B,a,B,D,C>>)
int_value (2)
conjunction
logical_negation
numerical_negation
add_call_chain(<<d,b,e,C>>)
add_query("e", "INTEGER", <<["BOOLEAN", "INTEGER"], ["C", "BOOLEAN"], ["a", "INTEGER"], ["C", "C"], ["e", "BOOLEAN"], ["d", "a"], ["c", "INTEGER"]>>, "c")
bool_value (false)
add_call_chain(<<c,D,a>>)
bool_value (false)
add_attribute("C", "d", "c")
add_class(BOOLEAN)
add_class(INTEGER)
addition
bool_value (true)
add_call_chain(<<b,BOOLEAN,B,B,B,D,e,BOOLEAN>>)
add_call_chain(<<C,C,B,e>>)
int_value (35)
numerical_negation
type_check
add_command("INTEGER", "D", <<["BOOLEAN", "BOOLEAN"], ["a", "INTEGER"], ["BOOLEAN", "e"], ["A", "INTEGER"], ["A", "INTEGER"]>>)
multiplication
numerical_negation
add_query("b", "e", <<["INTEGER", "INTEGER"], ["C", "BOOLEAN"], ["a", "c"], ["c", "INTEGER"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["e", "a"], ["A", "C"]>>, "A")
quotient
add_call_chain(<<A,BOOLEAN,D,c,e>>)
add_call_chain(<<A,INTEGER,b,e,e,D,A>>)
add_call_chain(<<e,B,C>>)
logical_negation
bool_value (true)
bool_value (true)
add_attribute("b", "a", "b")
less_than
logical_negation
multiplication
add_query("a", "b", <<["A", "BOOLEAN"], ["a", "INTEGER"]>>, "B")
add_class(A)
type_check
bool_value (true)
add_attribute("B", "B", "C")
add_query("b", "INTEGER", <<["a", "INTEGER"], ["c", "BOOLEAN"], ["D", "INTEGER"], ["e", "A"], ["D", "C"], ["b", "b"], ["D", "INTEGER"], ["a", "BOOLEAN"], ["B", "INTEGER"]>>, "D")
add_call_chain(<<INTEGER,A,A,A,b,B,A,b>>)
add_call_chain(<<B,c,INTEGER,C,d,d,A,c,d>>)
add_query("A", "a", <<["D", "BOOLEAN"], ["b", "INTEGER"], ["B", "INTEGER"]>>, "C")
add_query("B", "d", <<["D", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "c"], ["b", "d"], ["a", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>, "a")
add_call_chain(<<b,c,A,BOOLEAN,B,b>>)
equals
equals
numerical_negation
quotient
bool_value (true)
add_attribute("e", "e", "BOOLEAN")
add_command("B", "C", <<["c", "INTEGER"]>>)
numerical_negation
int_value (33)
int_value (34)
add_attribute("A", "b", "INTEGER")
add_attribute("e", "b", "INTEGER")
add_command("INTEGER", "C", <<["INTEGER", "BOOLEAN"]>>)
int_value (45)
type_check
add_attribute("A", "d", "e")
type_check
add_command("B", "b", <<["D", "BOOLEAN"], ["INTEGER", "INTEGER"], ["a", "INTEGER"], ["B", "a"]>>)
int_value (15)
add_command("INTEGER", "d", <<["C", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["B", "a"], ["B", "B"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["d", "INTEGER"]>>)
add_attribute("B", "e", "BOOLEAN")
logical_negation
disjunction
int_value (8)
add_command("INTEGER", "D", <<["a", "INTEGER"], ["A", "d"], ["C", "D"], ["BOOLEAN", "INTEGER"]>>)
multiplication
subtraction
add_command("d", "D", <<["C", "BOOLEAN"], ["A", "D"], ["D", "INTEGER"], ["A", "INTEGER"], ["B", "d"], ["d", "BOOLEAN"], ["b", "INTEGER"], ["A", "BOOLEAN"]>>)
generate_java_code
add_query("BOOLEAN", "a", <<["c", "BOOLEAN"], ["C", "A"], ["a", "INTEGER"]>>, "B")
generate_java_code
bool_value (false)
add_command("c", "e", <<["INTEGER", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "A"], ["e", "BOOLEAN"]>>)
add_query("A", "D", <<["a", "BOOLEAN"], ["C", "B"], ["e", "d"], ["B", "BOOLEAN"]>>, "D")
generate_java_code
bool_value (true)
equals
add_class(a)
add_attribute("e", "b", "BOOLEAN")
int_value (35)
add_attribute("A", "INTEGER", "INTEGER")
logical_negation
logical_negation
numerical_negation
add_query("c", "c", <<["b", "BOOLEAN"]>>, "INTEGER")
add_call_chain(<<c,d,D,BOOLEAN>>)
type_check
add_attribute("BOOLEAN", "c", "BOOLEAN")
add_attribute("D", "B", "BOOLEAN")
add_call_chain(<<A,B,a,b,INTEGER,a,e,C,d>>)
add_query("BOOLEAN", "D", <<["D", "INTEGER"], ["D", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "B"], ["BOOLEAN", "A"], ["B", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["A", "INTEGER"], ["a", "D"]>>, "BOOLEAN")
add_query("C", "B", <<["A", "BOOLEAN"], ["BOOLEAN", "a"], ["A", "INTEGER"], ["D", "INTEGER"], ["c", "B"], ["BOOLEAN", "B"], ["D", "INTEGER"]>>, "A")
numerical_negation
add_call_chain(<<B,B,d,e,a>>)
add_attribute("D", "b", "BOOLEAN")
add_call_chain(<<INTEGER,a,C,a>>)
bool_value (false)
add_command("c", "e", <<["D", "A"], ["e", "D"], ["c", "b"], ["c", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "B"]>>)
add_query("b", "D", <<["B", "INTEGER"], ["A", "BOOLEAN"]>>, "INTEGER")
numerical_negation
type_check
add_command("b", "B", <<["C", "B"], ["BOOLEAN", "INTEGER"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["B", "BOOLEAN"]>>)
numerical_negation
add_call_chain(<<d,a,a,A>>)
add_command("c", "B", <<["c", "INTEGER"], ["d", "BOOLEAN"], ["b", "INTEGER"]>>)
bool_value (true)
numerical_negation
multiplication
int_value (43)
add_class(b)
add_command("A", "A", <<["D", "BOOLEAN"], ["BOOLEAN", "a"], ["C", "A"], ["BOOLEAN", "BOOLEAN"]>>)
int_value (45)
add_command("BOOLEAN", "d", <<["c", "INTEGER"], ["c", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "B"]>>)
add_query("d", "e", <<["a", "e"], ["BOOLEAN", "d"]>>, "INTEGER")
type_check
add_command("b", "BOOLEAN", <<["A", "D"]>>)
add_attribute("D", "D", "INTEGER")
int_value (4)
add_call_chain(<<INTEGER,b,a,c,c,e,b>>)
int_value (27)
add_query("A", "B", <<["C", "INTEGER"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["a", "C"], ["A", "c"]>>, "INTEGER")
conjunction
logical_negation
numerical_negation
bool_value (false)
bool_value (true)
int_value (9)
add_attribute("c", "A", "BOOLEAN")
logical_negation
int_value (22)
disjunction
add_call_chain(<<a,D,INTEGER,INTEGER,b,e,c,D>>)
type_check
add_query("A", "B", <<["c", "BOOLEAN"], ["d", "INTEGER"], ["a", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["d", "A"], ["d", "INTEGER"], ["C", "D"], ["D", "BOOLEAN"], ["BOOLEAN", "e"]>>, "A")
int_value (38)
add_call_chain(<<b,a,D,a,b,a,d,A,c>>)
