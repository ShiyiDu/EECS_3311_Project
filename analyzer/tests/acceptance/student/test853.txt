add_query("c", "e", <<["D", "A"], ["D", "INTEGER"], ["a", "INTEGER"], ["b", "BOOLEAN"], ["a", "INTEGER"]>>, "A")
logical_negation
add_command("B", "a", <<["A", "INTEGER"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["C", "INTEGER"], ["d", "A"]>>)
add_command("B", "b", <<["B", "INTEGER"], ["A", "INTEGER"], ["B", "INTEGER"]>>)
add_class(A)
logical_negation
int_value (23)
add_call_chain(<<A,BOOLEAN,B,A,b,d,c>>)
int_value (37)
add_command("a", "a", <<["c", "d"], ["B", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["D", "INTEGER"], ["b", "INTEGER"], ["b", "INTEGER"], ["b", "BOOLEAN"]>>)
equals
numerical_negation
add_command("A", "b", <<["b", "C"], ["d", "B"], ["d", "INTEGER"], ["A", "INTEGER"], ["D", "BOOLEAN"]>>)
add_call_chain(<<C,A,B,a,d>>)
add_query("C", "A", <<["D", "BOOLEAN"], ["d", "e"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "INTEGER"], ["A", "BOOLEAN"], ["A", "INTEGER"]>>, "B")
add_call_chain(<<a,D,A,INTEGER>>)
int_value (16)
logical_negation
add_attribute("B", "A", "BOOLEAN")
add_call_chain(<<b,D,B>>)
logical_negation
add_call_chain(<<c,C,A,e>>)
int_value (19)
int_value (31)
numerical_negation
add_query("c", "C", <<["D", "D"], ["INTEGER", "b"], ["e", "INTEGER"], ["B", "INTEGER"], ["INTEGER", "INTEGER"], ["d", "BOOLEAN"]>>, "e")
numerical_negation
type_check
add_call_chain(<<b,d>>)
add_query("d", "A", <<["A", "INTEGER"]>>, "a")
generate_java_code
multiplication
add_call_chain(<<b,a,B,BOOLEAN,A>>)
conjunction
bool_value (false)
int_value (27)
add_query("BOOLEAN", "d", <<["e", "BOOLEAN"], ["d", "d"], ["d", "c"], ["d", "INTEGER"], ["A", "A"], ["d", "BOOLEAN"], ["d", "INTEGER"], ["B", "INTEGER"], ["c", "b"]>>, "b")
add_call_chain(<<A,a>>)
add_command("A", "D", <<["BOOLEAN", "BOOLEAN"], ["b", "INTEGER"], ["B", "BOOLEAN"], ["b", "e"], ["a", "BOOLEAN"], ["d", "INTEGER"], ["d", "INTEGER"]>>)
numerical_negation
add_attribute("D", "b", "BOOLEAN")
int_value (15)
bool_value (true)
add_call_chain(<<d,B,INTEGER,c>>)
logical_negation
add_query("c", "c", <<["e", "BOOLEAN"], ["a", "INTEGER"]>>, "c")
add_command("c", "A", <<["e", "INTEGER"], ["c", "BOOLEAN"]>>)
numerical_negation
int_value (38)
equals
subtraction
add_call_chain(<<D>>)
bool_value (false)
add_attribute("B", "a", "BOOLEAN")
quotient
numerical_negation
bool_value (false)
generate_java_code
add_call_chain(<<d,D,C,C,D>>)
add_call_chain(<<b,BOOLEAN,b,D,c,b,A,e>>)
add_call_chain(<<D,B,d,d,C>>)
bool_value (true)
numerical_negation
generate_java_code
numerical_negation
bool_value (false)
add_attribute("D", "D", "BOOLEAN")
add_attribute("D", "D", "INTEGER")
add_call_chain(<<C,BOOLEAN,B,INTEGER,c,d,BOOLEAN,B>>)
add_attribute("B", "D", "BOOLEAN")
add_class(A)
numerical_negation
int_value (10)
bool_value (false)
logical_negation
greater_than
add_query("A", "b", <<["A", "INTEGER"], ["e", "INTEGER"]>>, "INTEGER")
add_attribute("B", "C", "INTEGER")
add_command("B", "a", <<["D", "INTEGER"], ["d", "D"]>>)
numerical_negation
add_call_chain(<<C,C,e>>)
bool_value (false)
logical_negation
numerical_negation
add_command("C", "d", <<["a", "BOOLEAN"], ["b", "B"], ["d", "BOOLEAN"], ["C", "INTEGER"]>>)
add_query("b", "c", <<["b", "BOOLEAN"], ["a", "INTEGER"], ["D", "B"], ["D", "BOOLEAN"]>>, "INTEGER")
add_call_chain(<<b,INTEGER,C,d,A,d>>)
int_value (9)
int_value (31)
numerical_negation
generate_java_code
add_query("c", "BOOLEAN", <<["C", "INTEGER"], ["e", "e"], ["b", "INTEGER"], ["a", "INTEGER"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["c", "INTEGER"]>>, "d")
add_query("A", "C", <<["a", "BOOLEAN"], ["INTEGER", "INTEGER"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["C", "INTEGER"], ["a", "INTEGER"], ["D", "INTEGER"]>>, "c")
add_attribute("a", "c", "BOOLEAN")
add_command("INTEGER", "e", <<["e", "BOOLEAN"], ["A", "BOOLEAN"]>>)
type_check
logical_negation
add_attribute("B", "C", "INTEGER")
generate_java_code
add_attribute("B", "INTEGER", "A")
quotient
bool_value (true)
add_command("e", "D", <<["c", "B"], ["B", "BOOLEAN"], ["c", "INTEGER"], ["e", "C"], ["A", "INTEGER"], ["INTEGER", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "a"]>>)
add_call_chain(<<b,d>>)
add_class(A)
add_query("C", "e", <<["b", "e"], ["a", "INTEGER"], ["e", "INTEGER"], ["a", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "B"]>>, "INTEGER")
multiplication
logical_negation
addition
add_attribute("C", "e", "INTEGER")
add_command("B", "B", <<["A", "INTEGER"], ["c", "BOOLEAN"], ["A", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "INTEGER"], ["A", "INTEGER"]>>)
type_check
add_query("e", "B", <<["B", "A"], ["B", "BOOLEAN"], ["e", "INTEGER"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "C"], ["a", "INTEGER"]>>, "BOOLEAN")
add_attribute("A", "b", "INTEGER")
int_value (46)
add_call_chain(<<b,C,e,e>>)
add_command("B", "d", <<["B", "a"], ["B", "c"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["B", "INTEGER"], ["c", "BOOLEAN"], ["c", "BOOLEAN"], ["a", "INTEGER"], ["b", "a"]>>)
type_check
int_value (11)
add_attribute("D", "a", "INTEGER")
add_command("D", "b", <<["B", "C"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["D", "INTEGER"], ["A", "INTEGER"]>>)
add_call_chain(<<INTEGER,D,B,B,C,A,a>>)
add_class(B)
int_value (4)
add_attribute("e", "C", "INTEGER")
bool_value (true)
add_attribute("D", "c", "INTEGER")
add_query("BOOLEAN", "b", <<["B", "BOOLEAN"]>>, "e")
bool_value (true)
conjunction
type_check
add_attribute("b", "INTEGER", "a")
greater_than
add_call_chain(<<a,A>>)
conjunction
equals
int_value (7)
type_check
add_command("B", "B", <<["B", "C"], ["INTEGER", "c"], ["b", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["INTEGER", "C"], ["B", "BOOLEAN"]>>)
type_check
logical_negation
add_call_chain(<<INTEGER,D,b,B,a,e,e>>)
add_query("C", "e", <<["C", "INTEGER"], ["D", "INTEGER"], ["d", "a"], ["B", "B"], ["D", "INTEGER"], ["INTEGER", "INTEGER"], ["d", "BOOLEAN"]>>, "c")
add_command("B", "e", <<["c", "c"]>>)
add_call_chain(<<d,c>>)
add_query("INTEGER", "INTEGER", <<["a", "INTEGER"], ["e", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>, "a")
add_query("c", "C", <<["c", "d"], ["e", "INTEGER"], ["INTEGER", "INTEGER"], ["C", "D"]>>, "e")
add_call_chain(<<a,INTEGER>>)
add_command("B", "A", <<["D", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "INTEGER"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["D", "INTEGER"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["b", "D"]>>)
add_command("A", "c", <<["C", "a"], ["A", "BOOLEAN"]>>)
logical_negation
add_class(INTEGER)
add_call_chain(<<b,D,b,a,BOOLEAN,a,BOOLEAN>>)
greater_than
int_value (20)
add_attribute("e", "d", "a")
bool_value (true)
add_query("c", "b", <<["d", "INTEGER"], ["b", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "A"], ["e", "INTEGER"]>>, "BOOLEAN")
bool_value (false)
bool_value (true)
logical_negation
add_call_chain(<<d,e>>)
add_call_chain(<<d,A,d,C>>)
quotient
add_attribute("B", "D", "BOOLEAN")
bool_value (true)
bool_value (false)
modulo
logical_negation
add_call_chain(<<INTEGER,d>>)
add_attribute("INTEGER", "C", "BOOLEAN")
bool_value (true)
add_query("d", "A", <<["e", "b"], ["d", "BOOLEAN"], ["b", "b"], ["INTEGER", "c"]>>, "B")
add_command("C", "b", <<["A", "BOOLEAN"], ["A", "INTEGER"], ["D", "BOOLEAN"]>>)
numerical_negation
add_command("C", "d", <<["e", "BOOLEAN"], ["C", "BOOLEAN"], ["INTEGER", "b"]>>)
add_class(A)
add_call_chain(<<BOOLEAN,B,BOOLEAN,A,BOOLEAN,D,e>>)
add_call_chain(<<c,e>>)
type_check
conjunction
add_attribute("c", "B", "BOOLEAN")
add_call_chain(<<INTEGER,A,INTEGER,BOOLEAN,BOOLEAN>>)
numerical_negation
add_call_chain(<<a,BOOLEAN,B,D,C,d,INTEGER,C>>)
add_command("A", "c", <<["C", "BOOLEAN"], ["D", "INTEGER"], ["B", "BOOLEAN"], ["D", "B"], ["D", "INTEGER"]>>)
add_query("A", "c", <<["e", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["c", "D"], ["A", "BOOLEAN"], ["C", "INTEGER"]>>, "a")
add_class(A)
type_check
int_value (7)
logical_negation
logical_negation
add_command("c", "C", <<["INTEGER", "A"], ["D", "BOOLEAN"], ["d", "BOOLEAN"], ["e", "c"], ["C", "INTEGER"], ["BOOLEAN", "d"], ["B", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
int_value (2)
add_command("B", "A", <<["a", "C"], ["A", "b"], ["INTEGER", "a"], ["D", "INTEGER"], ["A", "BOOLEAN"], ["d", "B"], ["B", "BOOLEAN"], ["a", "C"]>>)
quotient
add_attribute("A", "c", "BOOLEAN")
bool_value (true)
