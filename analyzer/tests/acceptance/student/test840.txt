add_query("e", "d", <<["c", "INTEGER"], ["d", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["a", "a"], ["D", "A"], ["a", "INTEGER"], ["D", "INTEGER"]>>, "C")
add_call_chain(<<a,c,A,c,C,D>>)
add_attribute("BOOLEAN", "B", "b")
logical_negation
add_class(B)
add_class(e)
add_attribute("c", "d", "INTEGER")
add_class(d)
add_class(INTEGER)
add_command("A", "B", <<["BOOLEAN", "e"], ["B", "BOOLEAN"], ["C", "D"], ["BOOLEAN", "a"]>>)
logical_negation
add_call_chain(<<B,c,d,C,a,A,A,C>>)
multiplication
add_query("INTEGER", "a", <<["d", "C"], ["BOOLEAN", "c"]>>, "INTEGER")
logical_negation
add_query("d", "c", <<["C", "e"], ["A", "c"], ["b", "BOOLEAN"], ["e", "d"], ["B", "b"]>>, "e")
int_value (28)
numerical_negation
add_attribute("C", "INTEGER", "INTEGER")
int_value (34)
add_query("d", "C", <<["a", "BOOLEAN"], ["A", "INTEGER"], ["B", "A"]>>, "INTEGER")
add_call_chain(<<B>>)
bool_value (true)
add_class(b)
bool_value (true)
type_check
add_attribute("A", "B", "D")
int_value (24)
numerical_negation
generate_java_code
add_call_chain(<<a,c,A,D,a>>)
disjunction
bool_value (false)
add_attribute("d", "INTEGER", "BOOLEAN")
bool_value (false)
numerical_negation
numerical_negation
int_value (11)
bool_value (false)
add_attribute("B", "C", "BOOLEAN")
bool_value (false)
add_call_chain(<<b,B,B,INTEGER>>)
numerical_negation
add_call_chain(<<INTEGER,c>>)
add_class(b)
bool_value (true)
add_attribute("B", "A", "INTEGER")
add_call_chain(<<A,A,A,A,a,A>>)
add_call_chain(<<d>>)
add_call_chain(<<b,c,A>>)
numerical_negation
type_check
addition
add_query("c", "A", <<["a", "BOOLEAN"], ["b", "BOOLEAN"]>>, "b")
bool_value (true)
add_attribute("c", "c", "BOOLEAN")
logical_negation
int_value (14)
bool_value (true)
conjunction
conjunction
addition
bool_value (true)
type_check
add_query("A", "e", <<["D", "b"], ["INTEGER", "a"], ["c", "d"], ["BOOLEAN", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["B", "INTEGER"]>>, "d")
type_check
add_attribute("A", "e", "INTEGER")
add_attribute("A", "B", "INTEGER")
add_call_chain(<<C,b,e,c,BOOLEAN>>)
int_value (6)
add_call_chain(<<a>>)
add_command("D", "b", <<["c", "BOOLEAN"], ["A", "INTEGER"], ["a", "B"], ["a", "BOOLEAN"], ["C", "INTEGER"], ["BOOLEAN", "INTEGER"], ["INTEGER", "e"]>>)
numerical_negation
add_class(BOOLEAN)
bool_value (false)
add_attribute("INTEGER", "B", "BOOLEAN")
numerical_negation
add_class(D)
add_query("b", "d", <<["c", "INTEGER"], ["B", "INTEGER"], ["BOOLEAN", "INTEGER"]>>, "d")
disjunction
add_call_chain(<<D,e,c,BOOLEAN,C,C>>)
add_call_chain(<<e,B>>)
add_command("D", "b", <<["A", "INTEGER"], ["d", "BOOLEAN"], ["A", "INTEGER"], ["b", "e"]>>)
add_attribute("a", "INTEGER", "INTEGER")
add_attribute("B", "b", "BOOLEAN")
add_command("C", "B", <<["B", "A"], ["b", "BOOLEAN"], ["c", "INTEGER"], ["c", "D"]>>)
add_call_chain(<<d>>)
conjunction
int_value (19)
numerical_negation
disjunction
add_query("B", "a", <<["e", "A"], ["D", "BOOLEAN"], ["a", "BOOLEAN"], ["b", "B"]>>, "B")
logical_negation
add_call_chain(<<c,D,C,D,D,a>>)
add_attribute("a", "D", "INTEGER")
logical_negation
bool_value (false)
int_value (20)
add_call_chain(<<D,INTEGER,C,e,c,c,d,b>>)
add_attribute("d", "B", "A")
type_check
add_query("B", "c", <<["c", "INTEGER"], ["A", "d"], ["e", "b"], ["d", "BOOLEAN"], ["c", "BOOLEAN"], ["d", "INTEGER"], ["e", "BOOLEAN"], ["D", "INTEGER"]>>, "BOOLEAN")
int_value (17)
add_command("b", "e", <<["C", "BOOLEAN"], ["B", "INTEGER"], ["B", "INTEGER"], ["D", "c"], ["INTEGER", "INTEGER"], ["b", "c"]>>)
bool_value (true)
add_call_chain(<<B,d,D,d>>)
greater_than
add_attribute("A", "BOOLEAN", "INTEGER")
add_query("b", "e", <<["c", "b"], ["e", "BOOLEAN"]>>, "C")
bool_value (true)
bool_value (true)
add_query("c", "e", <<["C", "a"], ["a", "d"], ["e", "A"]>>, "b")
add_attribute("d", "A", "BOOLEAN")
equals
add_attribute("D", "D", "BOOLEAN")
add_call_chain(<<e>>)
logical_negation
generate_java_code
int_value (38)
numerical_negation
greater_than
int_value (23)
int_value (36)
numerical_negation
int_value (25)
type_check
conjunction
add_attribute("C", "c", "BOOLEAN")
add_call_chain(<<c,B>>)
logical_negation
add_command("c", "C", <<["INTEGER", "INTEGER"]>>)
add_call_chain(<<b,BOOLEAN>>)
add_attribute("b", "A", "b")
add_call_chain(<<INTEGER,BOOLEAN>>)
add_attribute("B", "D", "BOOLEAN")
conjunction
add_class(B)
add_call_chain(<<e,C,b,D,C,C>>)
greater_than
add_class(e)
add_attribute("D", "c", "BOOLEAN")
add_call_chain(<<e>>)
add_command("D", "B", <<["b", "BOOLEAN"]>>)
add_query("b", "D", <<["B", "C"]>>, "A")
generate_java_code
equals
add_attribute("C", "D", "BOOLEAN")
logical_negation
add_call_chain(<<c,INTEGER,A,c,D,d,a,C>>)
add_call_chain(<<A,c,A,a>>)
add_class(e)
bool_value (true)
logical_negation
bool_value (true)
conjunction
disjunction
add_call_chain(<<INTEGER,d,a,e,e,b>>)
type_check
add_call_chain(<<BOOLEAN,b,b,INTEGER,D,C>>)
logical_negation
logical_negation
conjunction
add_call_chain(<<B,B,b,c,D,B,b>>)
bool_value (false)
add_attribute("c", "d", "BOOLEAN")
add_class(A)
add_query("B", "D", <<["a", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "d"]>>, "c")
bool_value (false)
int_value (6)
add_command("D", "a", <<["INTEGER", "BOOLEAN"]>>)
conjunction
numerical_negation
bool_value (false)
bool_value (false)
bool_value (true)
disjunction
add_call_chain(<<C,a,c,D,A,B,c,C>>)
conjunction
int_value (43)
add_call_chain(<<b,d,D>>)
add_query("d", "INTEGER", <<["B", "INTEGER"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["b", "A"], ["e", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["c", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "INTEGER"]>>, "A")
type_check
add_call_chain(<<C>>)
greater_than
generate_java_code
add_query("d", "BOOLEAN", <<["A", "INTEGER"], ["C", "a"]>>, "d")
add_command("B", "A", <<["a", "INTEGER"], ["B", "BOOLEAN"], ["C", "INTEGER"], ["B", "INTEGER"], ["c", "BOOLEAN"], ["INTEGER", "e"], ["B", "INTEGER"]>>)
add_command("B", "D", <<["INTEGER", "D"]>>)
add_call_chain(<<c,INTEGER,D>>)
add_call_chain(<<C,d,INTEGER>>)
type_check
int_value (33)
type_check
numerical_negation
add_attribute("d", "a", "D")
less_than
addition
add_query("b", "C", <<["d", "BOOLEAN"], ["a", "D"]>>, "D")
add_class(B)
add_query("A", "C", <<["B", "BOOLEAN"], ["A", "A"], ["a", "INTEGER"], ["a", "INTEGER"], ["e", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "INTEGER"], ["d", "D"]>>, "B")
bool_value (true)
int_value (35)
generate_java_code
modulo
int_value (6)
int_value (20)
subtraction
logical_negation
add_call_chain(<<A>>)
add_attribute("b", "B", "d")
add_command("D", "A", <<["C", "c"], ["A", "INTEGER"], ["d", "BOOLEAN"], ["B", "b"], ["INTEGER", "INTEGER"], ["A", "INTEGER"], ["d", "BOOLEAN"], ["D", "e"]>>)
add_command("C", "a", <<["BOOLEAN", "BOOLEAN"], ["A", "a"], ["d", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "BOOLEAN"]>>)
greater_than
conjunction
numerical_negation
add_call_chain(<<e,e,INTEGER,A,C,B,a,a,D>>)
disjunction
add_call_chain(<<B,B>>)
add_command("d", "B", <<["B", "d"], ["INTEGER", "INTEGER"], ["C", "b"], ["INTEGER", "BOOLEAN"], ["A", "INTEGER"]>>)
generate_java_code
add_attribute("c", "a", "D")
add_attribute("B", "C", "INTEGER")
generate_java_code
add_command("INTEGER", "e", <<["c", "a"], ["e", "INTEGER"], ["C", "INTEGER"], ["c", "BOOLEAN"], ["D", "INTEGER"], ["b", "INTEGER"]>>)
numerical_negation
logical_negation
add_command("D", "c", <<["A", "e"], ["d", "BOOLEAN"], ["B", "INTEGER"], ["BOOLEAN", "INTEGER"], ["c", "INTEGER"]>>)
add_call_chain(<<C,e,A>>)
conjunction
quotient
logical_negation
add_command("A", "a", <<["D", "BOOLEAN"], ["C", "A"], ["INTEGER", "c"]>>)
add_class(C)
add_call_chain(<<d>>)
add_command("BOOLEAN", "C", <<["e", "INTEGER"]>>)
add_class(C)
add_query("C", "B", <<["d", "BOOLEAN"], ["D", "INTEGER"], ["INTEGER", "INTEGER"], ["C", "INTEGER"], ["b", "INTEGER"], ["C", "INTEGER"], ["c", "INTEGER"]>>, "D")
add_command("C", "B", <<["A", "B"], ["BOOLEAN", "c"], ["A", "INTEGER"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["c", "INTEGER"], ["C", "D"]>>)
bool_value (true)
generate_java_code
int_value (28)
bool_value (true)
add_call_chain(<<BOOLEAN,c>>)
add_attribute("B", "c", "BOOLEAN")
add_call_chain(<<INTEGER,B,e,B>>)
add_call_chain(<<c,c>>)
bool_value (true)
add_command("D", "B", <<["C", "INTEGER"], ["a", "D"], ["e", "b"]>>)
add_attribute("A", "A", "INTEGER")
add_command("B", "e", <<["A", "INTEGER"], ["C", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "b"], ["C", "B"], ["C", "INTEGER"], ["b", "BOOLEAN"], ["a", "B"]>>)
add_command("a", "b", <<["D", "b"], ["D", "INTEGER"], ["C", "INTEGER"], ["A", "INTEGER"], ["b", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "INTEGER"]>>)
add_attribute("D", "a", "b")
add_call_chain(<<A,D,D,C,B,c,D,d,a>>)
add_attribute("D", "d", "a")
add_query("D", "d", <<["A", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "a"], ["a", "INTEGER"], ["D", "INTEGER"], ["INTEGER", "d"], ["d", "INTEGER"], ["c", "BOOLEAN"]>>, "a")
multiplication
multiplication
bool_value (true)
int_value (38)
