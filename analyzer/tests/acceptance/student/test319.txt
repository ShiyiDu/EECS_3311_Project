numerical_negation
add_call_chain(<<B,B,d,B,D,D,BOOLEAN,e>>)
type_check
add_class(e)
add_attribute("A", "B", "c")
add_query("b", "D", <<["d", "INTEGER"]>>, "D")
bool_value (false)
greater_than
add_command("C", "D", <<["a", "BOOLEAN"], ["c", "BOOLEAN"]>>)
add_attribute("a", "b", "e")
add_call_chain(<<B,D,b,b,D,c,C,d>>)
add_query("a", "C", <<["C", "INTEGER"], ["INTEGER", "BOOLEAN"], ["C", "INTEGER"], ["c", "INTEGER"]>>, "C")
add_attribute("C", "C", "INTEGER")
logical_negation
modulo
logical_negation
int_value (20)
add_class(a)
bool_value (false)
add_command("A", "a", <<["b", "BOOLEAN"]>>)
add_call_chain(<<d,D,B,D,A,D,e,C,d>>)
add_command("B", "C", <<["INTEGER", "A"]>>)
generate_java_code
bool_value (false)
int_value (17)
disjunction
type_check
type_check
generate_java_code
add_query("BOOLEAN", "BOOLEAN", <<["d", "INTEGER"], ["INTEGER", "BOOLEAN"], ["D", "e"], ["B", "BOOLEAN"], ["e", "D"], ["B", "BOOLEAN"], ["B", "BOOLEAN"]>>, "BOOLEAN")
logical_negation
add_command("e", "e", <<["c", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["a", "d"], ["e", "INTEGER"], ["c", "a"], ["A", "INTEGER"], ["e", "BOOLEAN"]>>)
conjunction
less_than
logical_negation
add_call_chain(<<B,D>>)
add_call_chain(<<B,C>>)
conjunction
bool_value (true)
generate_java_code
int_value (28)
type_check
bool_value (false)
add_command("A", "INTEGER", <<["C", "INTEGER"], ["e", "INTEGER"], ["D", "BOOLEAN"], ["INTEGER", "e"], ["A", "BOOLEAN"], ["d", "INTEGER"]>>)
add_call_chain(<<BOOLEAN,B,B,INTEGER,C>>)
equals
int_value (29)
add_class(d)
add_attribute("b", "a", "BOOLEAN")
generate_java_code
type_check
add_query("c", "BOOLEAN", <<["d", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "INTEGER"], ["b", "C"], ["B", "INTEGER"], ["b", "BOOLEAN"], ["B", "C"]>>, "C")
conjunction
add_class(B)
add_call_chain(<<b,e,a,INTEGER,e>>)
add_call_chain(<<d,e,b,A>>)
add_class(d)
add_call_chain(<<D,A,A,D,INTEGER>>)
add_query("b", "e", <<["d", "INTEGER"], ["a", "d"]>>, "B")
add_call_chain(<<d,D>>)
add_call_chain(<<e,B,e,B,INTEGER,D>>)
add_attribute("b", "B", "INTEGER")
generate_java_code
add_class(C)
add_class(A)
add_command("BOOLEAN", "C", <<["a", "C"]>>)
quotient
conjunction
add_attribute("BOOLEAN", "B", "BOOLEAN")
numerical_negation
add_query("c", "e", <<["INTEGER", "BOOLEAN"], ["D", "B"], ["c", "B"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["D", "D"], ["C", "INTEGER"]>>, "d")
add_class(B)
logical_negation
type_check
int_value (12)
int_value (7)
equals
add_query("INTEGER", "INTEGER", <<["a", "BOOLEAN"], ["B", "B"], ["A", "A"], ["b", "A"], ["d", "d"], ["b", "BOOLEAN"]>>, "e")
modulo
type_check
addition
add_class(B)
add_call_chain(<<B,INTEGER,c,c,b,c,D,b>>)
int_value (48)
bool_value (true)
logical_negation
add_command("b", "d", <<["d", "INTEGER"], ["e", "INTEGER"], ["c", "INTEGER"], ["e", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "B"], ["B", "BOOLEAN"]>>)
int_value (10)
add_query("D", "BOOLEAN", <<["C", "c"], ["c", "BOOLEAN"], ["b", "BOOLEAN"], ["e", "INTEGER"], ["a", "BOOLEAN"], ["C", "INTEGER"], ["a", "INTEGER"]>>, "b")
int_value (6)
type_check
addition
add_class(B)
bool_value (false)
add_call_chain(<<C,D>>)
add_class(A)
add_call_chain(<<D,D,b,c>>)
conjunction
add_class(A)
generate_java_code
numerical_negation
add_attribute("A", "c", "B")
type_check
add_call_chain(<<A,b>>)
add_class(a)
add_class(INTEGER)
bool_value (true)
add_attribute("D", "d", "BOOLEAN")
add_attribute("INTEGER", "A", "INTEGER")
less_than
add_class(a)
bool_value (true)
modulo
logical_negation
add_query("INTEGER", "BOOLEAN", <<["A", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["d", "INTEGER"], ["a", "INTEGER"], ["B", "BOOLEAN"], ["A", "C"]>>, "a")
add_command("B", "a", <<["b", "A"], ["BOOLEAN", "D"], ["INTEGER", "BOOLEAN"], ["D", "A"], ["d", "d"], ["c", "INTEGER"], ["B", "d"], ["D", "BOOLEAN"]>>)
add_call_chain(<<d,B,A>>)
add_command("C", "B", <<["A", "BOOLEAN"], ["D", "INTEGER"], ["B", "b"], ["D", "BOOLEAN"], ["A", "C"], ["b", "INTEGER"], ["a", "a"], ["BOOLEAN", "INTEGER"], ["BOOLEAN", "A"]>>)
bool_value (false)
add_call_chain(<<c,a,B,INTEGER,b,A,a>>)
add_call_chain(<<d,B>>)
conjunction
type_check
add_query("e", "D", <<["C", "INTEGER"], ["A", "c"], ["B", "INTEGER"], ["C", "INTEGER"], ["d", "INTEGER"], ["d", "INTEGER"], ["D", "a"]>>, "b")
conjunction
add_command("a", "C", <<["b", "BOOLEAN"], ["e", "D"], ["C", "INTEGER"], ["c", "INTEGER"]>>)
add_call_chain(<<b,D,B,D>>)
generate_java_code
add_call_chain(<<B,a,C,C,d,c,d,B>>)
add_query("BOOLEAN", "d", <<["C", "e"], ["C", "INTEGER"], ["C", "A"], ["b", "INTEGER"], ["B", "A"], ["b", "a"]>>, "D")
generate_java_code
numerical_negation
add_query("b", "d", <<["A", "B"], ["e", "INTEGER"], ["b", "BOOLEAN"], ["e", "INTEGER"], ["e", "b"], ["A", "BOOLEAN"], ["a", "INTEGER"]>>, "d")
conjunction
add_query("INTEGER", "C", <<["e", "INTEGER"], ["b", "INTEGER"], ["b", "BOOLEAN"], ["b", "INTEGER"], ["b", "INTEGER"], ["a", "D"], ["c", "c"], ["a", "INTEGER"], ["c", "INTEGER"]>>, "e")
bool_value (false)
add_call_chain(<<BOOLEAN,a,B,b,INTEGER,B,e>>)
add_attribute("BOOLEAN", "a", "BOOLEAN")
add_call_chain(<<C>>)
add_command("a", "b", <<["B", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "BOOLEAN"]>>)
int_value (14)
int_value (31)
add_attribute("A", "b", "b")
bool_value (true)
add_attribute("c", "c", "INTEGER")
add_call_chain(<<e,d,C>>)
generate_java_code
logical_negation
bool_value (false)
add_attribute("a", "d", "BOOLEAN")
logical_negation
type_check
add_call_chain(<<a,b,c>>)
logical_negation
quotient
int_value (22)
add_attribute("b", "A", "INTEGER")
numerical_negation
int_value (45)
add_class(c)
add_command("b", "a", <<["c", "B"], ["e", "BOOLEAN"], ["A", "e"], ["a", "d"], ["d", "C"], ["b", "BOOLEAN"]>>)
add_class(b)
multiplication
add_command("BOOLEAN", "a", <<["D", "INTEGER"], ["e", "B"], ["C", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["e", "c"], ["A", "INTEGER"], ["d", "BOOLEAN"]>>)
add_command("D", "B", <<["INTEGER", "INTEGER"], ["a", "BOOLEAN"], ["e", "BOOLEAN"]>>)
bool_value (false)
bool_value (false)
add_call_chain(<<c,C,A,a,B>>)
numerical_negation
add_command("a", "e", <<["a", "b"], ["c", "d"], ["D", "BOOLEAN"]>>)
add_class(A)
conjunction
add_command("A", "a", <<["a", "BOOLEAN"], ["b", "INTEGER"], ["e", "INTEGER"], ["C", "C"], ["a", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>)
add_command("BOOLEAN", "a", <<["BOOLEAN", "BOOLEAN"]>>)
add_call_chain(<<A>>)
greater_than
generate_java_code
type_check
int_value (34)
add_query("a", "C", <<["INTEGER", "BOOLEAN"], ["c", "INTEGER"], ["A", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["d", "e"]>>, "d")
bool_value (false)
logical_negation
add_query("A", "d", <<["d", "D"], ["C", "BOOLEAN"], ["B", "INTEGER"], ["B", "D"], ["C", "d"], ["INTEGER", "BOOLEAN"]>>, "C")
add_query("A", "e", <<["a", "BOOLEAN"]>>, "C")
logical_negation
generate_java_code
add_attribute("d", "A", "INTEGER")
generate_java_code
add_attribute("A", "B", "a")
quotient
add_class(A)
add_attribute("a", "d", "B")
greater_than
bool_value (false)
bool_value (false)
add_call_chain(<<b,e,D,d,INTEGER>>)
int_value (14)
add_command("c", "b", <<["INTEGER", "INTEGER"], ["BOOLEAN", "INTEGER"]>>)
numerical_negation
add_attribute("d", "C", "c")
add_call_chain(<<B,D>>)
add_query("BOOLEAN", "B", <<["D", "INTEGER"], ["D", "e"], ["D", "INTEGER"], ["A", "C"]>>, "D")
add_call_chain(<<D>>)
multiplication
quotient
add_command("A", "C", <<["d", "BOOLEAN"], ["b", "C"], ["BOOLEAN", "INTEGER"], ["b", "BOOLEAN"], ["a", "B"]>>)
add_query("d", "a", <<["A", "INTEGER"], ["A", "INTEGER"], ["d", "BOOLEAN"], ["c", "e"], ["C", "INTEGER"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["C", "BOOLEAN"]>>, "C")
add_attribute("A", "b", "C")
disjunction
conjunction
numerical_negation
quotient
add_call_chain(<<d,C,C>>)
int_value (18)
bool_value (true)
add_class(A)
int_value (13)
numerical_negation
type_check
add_query("e", "D", <<["e", "INTEGER"], ["b", "BOOLEAN"], ["C", "INTEGER"]>>, "a")
logical_negation
logical_negation
int_value (25)
add_call_chain(<<d,d,c,e,D,BOOLEAN,B,A,D>>)
add_query("B", "c", <<["INTEGER", "C"], ["C", "D"], ["B", "INTEGER"], ["C", "e"], ["B", "INTEGER"], ["b", "b"], ["INTEGER", "BOOLEAN"], ["A", "INTEGER"]>>, "B")
bool_value (true)
equals
int_value (25)
generate_java_code
add_query("A", "b", <<["b", "INTEGER"], ["D", "BOOLEAN"], ["e", "INTEGER"], ["C", "BOOLEAN"], ["D", "D"], ["INTEGER", "INTEGER"], ["b", "BOOLEAN"], ["c", "B"]>>, "B")
add_command("d", "a", <<["c", "BOOLEAN"], ["D", "BOOLEAN"], ["INTEGER", "A"], ["d", "INTEGER"]>>)
int_value (2)
equals
add_call_chain(<<A,e,b,D>>)
add_call_chain(<<C,C>>)
numerical_negation
add_command("d", "A", <<["A", "BOOLEAN"], ["A", "d"], ["INTEGER", "A"], ["B", "BOOLEAN"], ["D", "BOOLEAN"]>>)
int_value (40)
add_command("d", "d", <<["D", "INTEGER"], ["d", "BOOLEAN"], ["D", "INTEGER"], ["B", "BOOLEAN"], ["c", "INTEGER"], ["e", "BOOLEAN"]>>)
generate_java_code
add_class(a)
add_call_chain(<<c,a,c,A,b,e,A,c,A>>)
generate_java_code
less_than
add_call_chain(<<A,B,e,A,e,C>>)
logical_negation
greater_than
int_value (9)
type_check
bool_value (true)
numerical_negation
add_attribute("C", "D", "BOOLEAN")
equals
add_call_chain(<<B,a,A,C,b>>)
add_command("INTEGER", "D", <<["b", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "INTEGER"], ["A", "A"], ["a", "BOOLEAN"], ["B", "INTEGER"]>>)
add_attribute("a", "C", "BOOLEAN")
add_call_chain(<<C,c,c,e,A>>)
add_command("c", "A", <<["BOOLEAN", "a"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["C", "INTEGER"], ["b", "BOOLEAN"], ["C", "A"]>>)
add_call_chain(<<D,B>>)
add_call_chain(<<A,A,D,D,e,a,C>>)
