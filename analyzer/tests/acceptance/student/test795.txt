add_query("d", "INTEGER", <<["d", "INTEGER"], ["a", "INTEGER"], ["B", "BOOLEAN"]>>, "BOOLEAN")
disjunction
add_query("d", "D", <<["B", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "d"], ["BOOLEAN", "C"], ["d", "INTEGER"], ["c", "INTEGER"]>>, "c")
add_call_chain(<<c,A,A>>)
conjunction
add_query("b", "e", <<["B", "BOOLEAN"], ["B", "INTEGER"], ["a", "INTEGER"], ["c", "C"]>>, "D")
add_call_chain(<<A,c,e,a>>)
multiplication
add_attribute("B", "e", "INTEGER")
numerical_negation
add_call_chain(<<C,B,BOOLEAN,A,D,A,C,B,A>>)
numerical_negation
add_query("A", "e", <<["D", "A"], ["B", "INTEGER"], ["D", "INTEGER"]>>, "b")
bool_value (false)
add_query("A", "B", <<["c", "d"], ["C", "INTEGER"], ["B", "INTEGER"], ["c", "a"], ["b", "INTEGER"], ["C", "INTEGER"]>>, "b")
type_check
type_check
generate_java_code
add_attribute("e", "a", "INTEGER")
bool_value (false)
add_attribute("A", "a", "c")
bool_value (false)
int_value (41)
int_value (11)
add_call_chain(<<d,d,d,INTEGER,C,b>>)
numerical_negation
int_value (8)
logical_negation
numerical_negation
add_query("a", "e", <<["b", "b"], ["c", "INTEGER"], ["e", "BOOLEAN"], ["C", "C"], ["D", "D"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["C", "B"], ["INTEGER", "e"]>>, "a")
logical_negation
add_attribute("BOOLEAN", "C", "BOOLEAN")
bool_value (true)
add_attribute("C", "a", "BOOLEAN")
bool_value (false)
add_query("d", "a", <<["a", "INTEGER"], ["C", "A"], ["d", "e"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["D", "BOOLEAN"], ["INTEGER", "INTEGER"]>>, "B")
add_command("INTEGER", "B", <<["a", "INTEGER"], ["b", "INTEGER"], ["D", "BOOLEAN"]>>)
multiplication
int_value (40)
conjunction
generate_java_code
logical_negation
bool_value (false)
add_command("A", "e", <<["c", "BOOLEAN"], ["D", "INTEGER"]>>)
int_value (7)
add_command("D", "D", <<["B", "BOOLEAN"], ["a", "INTEGER"], ["a", "A"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["c", "BOOLEAN"]>>)
add_command("A", "d", <<["BOOLEAN", "INTEGER"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["a", "INTEGER"], ["B", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>)
add_class(D)
add_command("a", "D", <<["B", "a"], ["A", "INTEGER"], ["a", "INTEGER"], ["b", "C"], ["e", "BOOLEAN"], ["D", "INTEGER"]>>)
bool_value (false)
add_call_chain(<<c,D,INTEGER,e,A,D,b,c,D>>)
int_value (49)
add_command("C", "C", <<["a", "INTEGER"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "A"], ["B", "INTEGER"], ["c", "INTEGER"], ["b", "B"], ["B", "c"]>>)
add_command("D", "a", <<["A", "c"], ["a", "BOOLEAN"], ["D", "INTEGER"], ["c", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "INTEGER"]>>)
type_check
less_than
add_call_chain(<<A,B,e,BOOLEAN,b,c,A>>)
int_value (22)
logical_negation
numerical_negation
numerical_negation
add_call_chain(<<INTEGER,c,D,e,B,C,A,c>>)
add_call_chain(<<A,b,e,b,A,C,B,b>>)
add_query("b", "C", <<["e", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["d", "BOOLEAN"], ["INTEGER", "c"], ["b", "INTEGER"], ["C", "D"]>>, "b")
logical_negation
add_query("D", "INTEGER", <<["d", "INTEGER"], ["a", "INTEGER"], ["d", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["C", "INTEGER"], ["A", "c"], ["a", "d"], ["A", "INTEGER"]>>, "D")
add_attribute("d", "A", "INTEGER")
type_check
add_call_chain(<<A,c,a,d,b,b,INTEGER,C,A>>)
add_query("D", "B", <<["b", "BOOLEAN"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["D", "BOOLEAN"]>>, "b")
add_command("INTEGER", "A", <<["A", "c"], ["e", "e"], ["C", "INTEGER"]>>)
int_value (21)
numerical_negation
int_value (42)
subtraction
add_query("INTEGER", "B", <<["B", "BOOLEAN"], ["A", "A"]>>, "A")
add_call_chain(<<C>>)
type_check
numerical_negation
numerical_negation
add_class(D)
type_check
add_query("A", "A", <<["D", "INTEGER"], ["B", "INTEGER"], ["BOOLEAN", "a"]>>, "c")
bool_value (false)
addition
add_call_chain(<<d>>)
add_call_chain(<<C,c,A,C,D>>)
int_value (33)
add_call_chain(<<BOOLEAN,e,c,A,B,c,B>>)
greater_than
logical_negation
add_attribute("BOOLEAN", "INTEGER", "INTEGER")
add_call_chain(<<c,b,b>>)
logical_negation
add_call_chain(<<A,INTEGER,D,e,e,c,C,A,C>>)
add_call_chain(<<c,b,d>>)
equals
numerical_negation
bool_value (false)
add_query("BOOLEAN", "b", <<["INTEGER", "INTEGER"], ["INTEGER", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "d"]>>, "C")
generate_java_code
subtraction
bool_value (false)
int_value (48)
int_value (42)
add_attribute("d", "B", "BOOLEAN")
conjunction
int_value (37)
equals
add_call_chain(<<e,D,C,B,e,c>>)
add_attribute("C", "B", "BOOLEAN")
logical_negation
add_call_chain(<<e,D,b,D,d,B,c,a,INTEGER>>)
add_query("C", "INTEGER", <<["C", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>, "d")
type_check
logical_negation
bool_value (false)
generate_java_code
int_value (46)
add_call_chain(<<INTEGER,e,d,a,B,d,d,c>>)
add_query("A", "e", <<["B", "INTEGER"], ["B", "e"], ["BOOLEAN", "a"], ["INTEGER", "BOOLEAN"], ["A", "INTEGER"], ["B", "INTEGER"], ["C", "C"], ["A", "INTEGER"]>>, "BOOLEAN")
type_check
bool_value (false)
generate_java_code
type_check
numerical_negation
add_call_chain(<<e,d,D,b,A>>)
disjunction
add_call_chain(<<D,D,e,a,BOOLEAN>>)
generate_java_code
int_value (2)
add_call_chain(<<d,c,C>>)
int_value (22)
logical_negation
equals
conjunction
add_call_chain(<<b,BOOLEAN,B>>)
logical_negation
add_call_chain(<<c,c,c,INTEGER,C,A,INTEGER,A,d>>)
numerical_negation
quotient
disjunction
add_call_chain(<<C,D,A,a>>)
bool_value (true)
add_attribute("B", "B", "INTEGER")
bool_value (true)
add_class(b)
add_query("C", "c", <<["a", "BOOLEAN"], ["b", "B"], ["c", "INTEGER"], ["b", "INTEGER"], ["A", "INTEGER"], ["e", "BOOLEAN"], ["d", "INTEGER"]>>, "B")
add_command("B", "c", <<["e", "BOOLEAN"], ["a", "INTEGER"]>>)
add_call_chain(<<B>>)
bool_value (true)
generate_java_code
bool_value (true)
add_call_chain(<<C>>)
add_call_chain(<<c,d,B,BOOLEAN>>)
add_attribute("B", "d", "BOOLEAN")
subtraction
add_call_chain(<<e>>)
numerical_negation
add_attribute("INTEGER", "C", "BOOLEAN")
add_call_chain(<<d,A,BOOLEAN,a,D,A,C>>)
add_call_chain(<<C,b,a>>)
equals
disjunction
numerical_negation
bool_value (false)
add_attribute("a", "c", "BOOLEAN")
logical_negation
add_call_chain(<<A,INTEGER,BOOLEAN,a,e,c,B,a>>)
add_command("D", "e", <<["b", "INTEGER"], ["B", "INTEGER"], ["b", "INTEGER"], ["e", "e"], ["c", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["A", "B"], ["b", "BOOLEAN"], ["A", "INTEGER"]>>)
add_attribute("C", "BOOLEAN", "INTEGER")
bool_value (false)
int_value (45)
add_class(A)
add_command("D", "A", <<["A", "INTEGER"], ["a", "D"], ["a", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["c", "b"], ["B", "INTEGER"]>>)
type_check
add_call_chain(<<INTEGER,B,d,d,C,C,C>>)
add_class(e)
int_value (24)
modulo
disjunction
type_check
add_attribute("A", "a", "INTEGER")
add_class(b)
add_attribute("d", "A", "BOOLEAN")
disjunction
add_command("b", "b", <<["b", "d"], ["a", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "INTEGER"], ["d", "INTEGER"], ["a", "BOOLEAN"], ["e", "INTEGER"]>>)
int_value (36)
add_attribute("a", "e", "BOOLEAN")
add_command("A", "D", <<["B", "B"], ["c", "BOOLEAN"]>>)
type_check
quotient
add_attribute("b", "d", "INTEGER")
add_call_chain(<<B,b,b,B,A,c,B,B,INTEGER>>)
generate_java_code
add_call_chain(<<A,d>>)
add_call_chain(<<d,B,A,B,e,a>>)
add_command("A", "A", <<["e", "BOOLEAN"], ["b", "INTEGER"], ["a", "INTEGER"], ["b", "BOOLEAN"]>>)
disjunction
bool_value (true)
add_attribute("e", "B", "BOOLEAN")
add_query("e", "A", <<["e", "c"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "e"], ["a", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "INTEGER"]>>, "D")
add_query("A", "C", <<["B", "B"], ["e", "INTEGER"], ["B", "c"]>>, "INTEGER")
type_check
numerical_negation
add_command("b", "e", <<["C", "C"], ["C", "INTEGER"], ["e", "BOOLEAN"], ["B", "INTEGER"], ["a", "BOOLEAN"], ["A", "INTEGER"], ["d", "BOOLEAN"], ["e", "e"], ["D", "INTEGER"]>>)
logical_negation
add_command("C", "D", <<["BOOLEAN", "INTEGER"], ["c", "C"], ["C", "BOOLEAN"], ["D", "d"]>>)
add_command("C", "c", <<["a", "INTEGER"], ["INTEGER", "BOOLEAN"], ["B", "d"]>>)
generate_java_code
add_call_chain(<<A,b,D,A,A,e>>)
generate_java_code
logical_negation
bool_value (false)
numerical_negation
add_call_chain(<<a,C,C>>)
type_check
greater_than
add_call_chain(<<c,A,C,a,b,a>>)
bool_value (false)
add_call_chain(<<A,D,a>>)
