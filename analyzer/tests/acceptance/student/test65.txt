add_query("a", "e", <<["b", "BOOLEAN"]>>, "e")
numerical_negation
add_call_chain(<<D,D,d,a,A>>)
add_command("C", "A", <<["c", "D"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["d", "INTEGER"]>>)
disjunction
add_call_chain(<<d,a,D,A,c,d,C>>)
type_check
equals
bool_value (true)
conjunction
modulo
int_value (38)
add_call_chain(<<A,c,B,C,a,D,BOOLEAN,e>>)
int_value (23)
add_attribute("c", "e", "BOOLEAN")
add_query("C", "c", <<["B", "INTEGER"], ["b", "c"]>>, "b")
add_class(A)
add_command("A", "A", <<["D", "INTEGER"], ["a", "BOOLEAN"], ["c", "INTEGER"], ["b", "D"], ["b", "INTEGER"], ["b", "INTEGER"], ["D", "c"], ["a", "INTEGER"]>>)
conjunction
bool_value (true)
add_call_chain(<<d,a,e,A,e,C,a,A,a>>)
add_class(D)
bool_value (false)
add_query("b", "c", <<["e", "BOOLEAN"], ["C", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["B", "INTEGER"], ["A", "b"], ["D", "BOOLEAN"], ["C", "c"], ["c", "INTEGER"]>>, "b")
add_class(D)
modulo
add_command("e", "a", <<["d", "b"]>>)
type_check
numerical_negation
add_call_chain(<<e,B,e,D>>)
add_attribute("C", "A", "INTEGER")
add_query("A", "C", <<["d", "BOOLEAN"], ["C", "INTEGER"], ["C", "D"], ["e", "C"]>>, "D")
add_attribute("b", "b", "c")
add_call_chain(<<C,INTEGER,C,e,BOOLEAN,INTEGER,C,D>>)
disjunction
add_query("B", "e", <<["c", "INTEGER"]>>, "b")
add_query("B", "d", <<["D", "BOOLEAN"], ["e", "INTEGER"], ["a", "INTEGER"], ["A", "e"], ["d", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "INTEGER"]>>, "e")
logical_negation
bool_value (true)
add_class(b)
add_query("e", "INTEGER", <<["C", "BOOLEAN"], ["d", "b"], ["A", "BOOLEAN"], ["c", "INTEGER"]>>, "d")
add_command("b", "D", <<["A", "INTEGER"], ["c", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["b", "D"], ["d", "BOOLEAN"]>>)
add_attribute("a", "d", "BOOLEAN")
bool_value (true)
type_check
numerical_negation
bool_value (true)
greater_than
bool_value (false)
add_class(BOOLEAN)
generate_java_code
add_query("INTEGER", "b", <<["b", "B"], ["A", "B"], ["C", "INTEGER"], ["d", "INTEGER"], ["d", "BOOLEAN"], ["A", "BOOLEAN"]>>, "d")
add_attribute("C", "B", "BOOLEAN")
add_command("a", "a", <<["a", "e"], ["b", "INTEGER"], ["c", "INTEGER"], ["c", "c"], ["b", "C"], ["a", "INTEGER"], ["a", "BOOLEAN"], ["B", "BOOLEAN"]>>)
add_attribute("c", "C", "b")
type_check
quotient
add_query("A", "C", <<["A", "D"], ["B", "B"], ["c", "C"], ["b", "INTEGER"], ["B", "BOOLEAN"]>>, "d")
int_value (24)
less_than
add_call_chain(<<b,C>>)
numerical_negation
bool_value (true)
modulo
add_attribute("e", "d", "BOOLEAN")
numerical_negation
bool_value (false)
type_check
addition
add_command("c", "A", <<["C", "BOOLEAN"], ["b", "INTEGER"], ["C", "C"], ["C", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "d"], ["c", "BOOLEAN"], ["c", "e"]>>)
type_check
type_check
add_call_chain(<<e,c>>)
numerical_negation
add_command("D", "b", <<["b", "A"], ["B", "BOOLEAN"], ["e", "INTEGER"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["D", "BOOLEAN"]>>)
bool_value (true)
logical_negation
add_query("a", "BOOLEAN", <<["B", "D"]>>, "A")
bool_value (false)
generate_java_code
add_call_chain(<<a>>)
add_query("C", "a", <<["A", "BOOLEAN"], ["C", "INTEGER"], ["D", "C"], ["D", "INTEGER"], ["b", "d"], ["B", "BOOLEAN"], ["C", "e"], ["D", "INTEGER"], ["b", "INTEGER"]>>, "C")
add_class(C)
add_command("b", "INTEGER", <<["d", "INTEGER"], ["BOOLEAN", "B"], ["BOOLEAN", "INTEGER"], ["e", "b"], ["c", "INTEGER"]>>)
add_attribute("C", "A", "INTEGER")
int_value (23)
add_attribute("B", "b", "a")
bool_value (false)
add_call_chain(<<d>>)
equals
logical_negation
add_call_chain(<<c,d,b>>)
add_query("c", "c", <<["B", "INTEGER"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "a"], ["d", "B"]>>, "INTEGER")
add_command("b", "D", <<["b", "BOOLEAN"], ["B", "d"], ["BOOLEAN", "INTEGER"], ["e", "BOOLEAN"], ["b", "BOOLEAN"], ["e", "e"], ["C", "INTEGER"], ["A", "a"]>>)
generate_java_code
add_command("d", "B", <<["A", "A"], ["b", "BOOLEAN"], ["d", "B"], ["C", "BOOLEAN"], ["e", "INTEGER"], ["e", "INTEGER"]>>)
greater_than
add_class(C)
logical_negation
int_value (22)
add_attribute("e", "B", "B")
add_command("a", "BOOLEAN", <<["C", "BOOLEAN"], ["BOOLEAN", "a"], ["C", "INTEGER"], ["D", "BOOLEAN"]>>)
add_class(A)
quotient
bool_value (false)
numerical_negation
add_call_chain(<<C,D,e,C,A,c>>)
int_value (45)
add_call_chain(<<C>>)
numerical_negation
disjunction
bool_value (false)
add_call_chain(<<d,e,b,e,INTEGER,b>>)
disjunction
equals
logical_negation
add_attribute("b", "e", "A")
add_query("INTEGER", "D", <<["d", "INTEGER"], ["d", "INTEGER"], ["e", "b"], ["D", "BOOLEAN"], ["A", "INTEGER"]>>, "B")
logical_negation
add_query("BOOLEAN", "c", <<["c", "INTEGER"], ["c", "INTEGER"], ["B", "d"]>>, "A")
multiplication
add_class(C)
bool_value (false)
bool_value (true)
numerical_negation
disjunction
numerical_negation
add_call_chain(<<B,b,D,A,b,d,d>>)
int_value (27)
less_than
add_call_chain(<<c,c,A,INTEGER,C,b,D>>)
add_attribute("e", "d", "INTEGER")
add_call_chain(<<D,e,c,BOOLEAN,b,c,b,A>>)
add_call_chain(<<D,c,B,c,BOOLEAN,C,A,d>>)
bool_value (true)
add_class(B)
add_command("d", "c", <<["D", "D"], ["C", "BOOLEAN"], ["B", "d"], ["A", "INTEGER"], ["b", "e"], ["a", "e"], ["C", "BOOLEAN"], ["d", "BOOLEAN"]>>)
add_command("c", "A", <<["b", "INTEGER"], ["d", "BOOLEAN"], ["D", "INTEGER"], ["D", "INTEGER"], ["a", "INTEGER"], ["B", "INTEGER"]>>)
logical_negation
add_attribute("A", "A", "BOOLEAN")
bool_value (true)
disjunction
addition
add_attribute("BOOLEAN", "c", "BOOLEAN")
add_command("C", "D", <<["A", "INTEGER"], ["B", "INTEGER"], ["C", "d"], ["A", "INTEGER"]>>)
add_class(c)
logical_negation
add_class(C)
logical_negation
generate_java_code
add_call_chain(<<d,A,e,d,e,C,c>>)
add_attribute("c", "BOOLEAN", "BOOLEAN")
int_value (43)
add_attribute("B", "D", "INTEGER")
add_attribute("a", "c", "c")
bool_value (true)
add_call_chain(<<B,a,b,D,d>>)
add_attribute("D", "A", "C")
generate_java_code
add_class(c)
numerical_negation
add_call_chain(<<e,c,b,BOOLEAN,B>>)
conjunction
logical_negation
add_query("a", "B", <<["D", "INTEGER"], ["D", "BOOLEAN"], ["b", "INTEGER"], ["e", "INTEGER"], ["c", "INTEGER"], ["B", "INTEGER"], ["c", "BOOLEAN"], ["B", "INTEGER"], ["c", "BOOLEAN"]>>, "b")
int_value (26)
add_call_chain(<<e>>)
add_query("d", "C", <<["C", "INTEGER"], ["B", "e"]>>, "A")
logical_negation
type_check
int_value (21)
disjunction
bool_value (true)
add_call_chain(<<a,e,d,C>>)
add_class(B)
add_call_chain(<<C,c,b>>)
quotient
add_query("B", "e", <<["BOOLEAN", "INTEGER"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["BOOLEAN", "c"], ["D", "INTEGER"]>>, "a")
greater_than
numerical_negation
add_query("c", "b", <<["B", "b"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["b", "INTEGER"], ["c", "BOOLEAN"]>>, "c")
bool_value (false)
