add_call_chain(<<c>>)
disjunction
add_call_chain(<<d,a,b,a,A,D>>)
int_value (46)
add_attribute("B", "A", "INTEGER")
generate_java_code
add_class(A)
numerical_negation
int_value (42)
add_call_chain(<<A,B,C,A,d,e,C,A,b>>)
add_call_chain(<<a,e,b,d,D,e>>)
add_call_chain(<<A,B>>)
add_command("c", "e", <<["A", "INTEGER"], ["D", "c"], ["C", "INTEGER"], ["A", "INTEGER"], ["BOOLEAN", "INTEGER"], ["a", "INTEGER"]>>)
quotient
type_check
add_attribute("A", "C", "C")
modulo
add_attribute("INTEGER", "C", "BOOLEAN")
numerical_negation
bool_value (false)
less_than
add_command("D", "b", <<["d", "BOOLEAN"], ["D", "B"], ["a", "BOOLEAN"]>>)
add_query("b", "C", <<["a", "BOOLEAN"], ["b", "A"], ["B", "INTEGER"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["C", "BOOLEAN"]>>, "INTEGER")
int_value (4)
logical_negation
generate_java_code
logical_negation
logical_negation
int_value (18)
add_call_chain(<<b,c,e,c,e>>)
equals
disjunction
add_call_chain(<<c,B,c,A>>)
add_class(a)
generate_java_code
add_command("A", "A", <<["B", "INTEGER"], ["D", "c"], ["d", "INTEGER"], ["c", "D"], ["c", "e"], ["e", "e"], ["a", "BOOLEAN"], ["A", "INTEGER"]>>)
add_call_chain(<<INTEGER,C,B,a,D,BOOLEAN>>)
int_value (40)
add_call_chain(<<a,D,D,b,c>>)
add_class(b)
add_class(INTEGER)
add_query("e", "C", <<["b", "INTEGER"], ["b", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["a", "INTEGER"]>>, "C")
add_call_chain(<<c,D,D,c,d,A,a,a>>)
add_query("C", "C", <<["B", "INTEGER"], ["A", "d"], ["b", "BOOLEAN"], ["d", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "D"], ["B", "BOOLEAN"]>>, "BOOLEAN")
add_attribute("D", "a", "INTEGER")
type_check
add_call_chain(<<C,A,e>>)
add_command("A", "a", <<["B", "a"], ["D", "BOOLEAN"], ["A", "d"], ["C", "BOOLEAN"], ["c", "D"], ["BOOLEAN", "BOOLEAN"], ["B", "b"], ["C", "e"]>>)
add_command("BOOLEAN", "A", <<["B", "BOOLEAN"], ["d", "BOOLEAN"], ["e", "D"], ["a", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "INTEGER"], ["A", "INTEGER"], ["b", "INTEGER"]>>)
add_command("B", "INTEGER", <<["A", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "INTEGER"]>>)
add_command("A", "A", <<["D", "B"], ["e", "BOOLEAN"], ["D", "BOOLEAN"], ["d", "BOOLEAN"]>>)
numerical_negation
add_attribute("INTEGER", "D", "d")
numerical_negation
add_call_chain(<<b,a,e,INTEGER,C>>)
add_call_chain(<<INTEGER,a,e,d>>)
generate_java_code
generate_java_code
add_call_chain(<<b,C,C,D,c,INTEGER,B>>)
numerical_negation
logical_negation
bool_value (false)
int_value (16)
add_query("d", "b", <<["e", "INTEGER"], ["b", "BOOLEAN"], ["a", "d"], ["c", "INTEGER"], ["A", "INTEGER"]>>, "D")
add_attribute("e", "C", "BOOLEAN")
add_command("D", "INTEGER", <<["C", "INTEGER"], ["B", "B"], ["INTEGER", "c"], ["e", "b"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["a", "C"], ["a", "INTEGER"]>>)
type_check
add_query("a", "A", <<["b", "INTEGER"]>>, "B")
add_class(BOOLEAN)
int_value (26)
add_command("INTEGER", "b", <<["d", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["B", "INTEGER"], ["D", "C"], ["BOOLEAN", "INTEGER"]>>)
add_call_chain(<<e,BOOLEAN,B,D,B,D>>)
bool_value (false)
generate_java_code
add_class(c)
int_value (45)
add_attribute("a", "b", "INTEGER")
multiplication
logical_negation
add_call_chain(<<c,b,b,b,BOOLEAN,b,d,a>>)
add_call_chain(<<c,B,A,e,B,BOOLEAN,A,d>>)
type_check
disjunction
disjunction
int_value (25)
numerical_negation
add_attribute("a", "C", "BOOLEAN")
add_command("d", "d", <<["INTEGER", "BOOLEAN"], ["C", "INTEGER"], ["a", "INTEGER"], ["C", "e"], ["d", "a"], ["d", "BOOLEAN"], ["A", "c"], ["d", "d"], ["a", "INTEGER"]>>)
generate_java_code
add_command("e", "B", <<["e", "BOOLEAN"], ["INTEGER", "INTEGER"]>>)
add_query("A", "C", <<["B", "INTEGER"], ["a", "BOOLEAN"], ["D", "INTEGER"], ["a", "B"], ["B", "INTEGER"], ["a", "BOOLEAN"], ["c", "d"]>>, "b")
add_command("C", "d", <<["BOOLEAN", "e"], ["b", "INTEGER"], ["b", "INTEGER"], ["INTEGER", "b"], ["INTEGER", "c"]>>)
bool_value (false)
add_command("C", "A", <<["B", "A"], ["a", "INTEGER"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["D", "a"], ["c", "BOOLEAN"], ["D", "INTEGER"]>>)
int_value (12)
bool_value (true)
add_attribute("d", "e", "D")
type_check
disjunction
numerical_negation
quotient
add_call_chain(<<A>>)
add_call_chain(<<A,c>>)
add_command("C", "D", <<["b", "INTEGER"], ["A", "D"], ["e", "d"], ["BOOLEAN", "INTEGER"], ["c", "INTEGER"], ["B", "INTEGER"], ["C", "b"], ["A", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
int_value (36)
bool_value (true)
add_call_chain(<<c,B,a,B>>)
int_value (14)
greater_than
generate_java_code
add_query("A", "A", <<["e", "C"]>>, "C")
add_attribute("A", "A", "INTEGER")
add_command("INTEGER", "B", <<["D", "BOOLEAN"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["e", "INTEGER"], ["D", "c"], ["D", "INTEGER"]>>)
conjunction
addition
add_call_chain(<<INTEGER,C,B,BOOLEAN,b,C,D,c>>)
bool_value (true)
add_query("d", "BOOLEAN", <<["D", "BOOLEAN"], ["b", "C"]>>, "c")
int_value (2)
add_command("d", "B", <<["b", "d"], ["c", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "D"], ["C", "c"], ["a", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "b"]>>)
less_than
add_query("D", "d", <<["e", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["b", "BOOLEAN"], ["b", "A"]>>, "a")
bool_value (true)
bool_value (true)
conjunction
logical_negation
add_attribute("C", "d", "e")
add_call_chain(<<b,INTEGER,C,c>>)
add_call_chain(<<A,D,e,c,B,B,D,e>>)
add_call_chain(<<A,d,a,C>>)
disjunction
add_query("B", "C", <<["INTEGER", "INTEGER"]>>, "e")
int_value (23)
addition
greater_than
add_call_chain(<<INTEGER,d,e>>)
add_call_chain(<<D,d,a>>)
add_attribute("D", "INTEGER", "D")
bool_value (false)
add_call_chain(<<a,B,a,c,a>>)
add_call_chain(<<BOOLEAN,C,e,b,e,A>>)
numerical_negation
logical_negation
add_command("D", "B", <<["d", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "C"], ["c", "INTEGER"], ["A", "BOOLEAN"], ["d", "BOOLEAN"]>>)
int_value (26)
add_class(b)
addition
add_call_chain(<<d,a>>)
add_class(a)
int_value (44)
bool_value (false)
bool_value (false)
add_call_chain(<<B,c,e,c,B,A>>)
logical_negation
generate_java_code
add_query("b", "INTEGER", <<["A", "D"], ["D", "BOOLEAN"], ["c", "b"], ["D", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>, "C")
add_query("D", "c", <<["e", "INTEGER"], ["a", "INTEGER"], ["a", "BOOLEAN"], ["A", "b"], ["b", "BOOLEAN"], ["A", "B"]>>, "e")
add_class(a)
conjunction
logical_negation
add_query("e", "b", <<["B", "D"], ["b", "INTEGER"]>>, "BOOLEAN")
type_check
multiplication
add_query("b", "C", <<["a", "D"], ["C", "B"], ["d", "INTEGER"]>>, "d")
add_command("d", "b", <<["b", "INTEGER"], ["B", "BOOLEAN"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
disjunction
equals
add_call_chain(<<A,B,e,C,d,BOOLEAN,a>>)
type_check
add_call_chain(<<a,BOOLEAN,a>>)
add_command("B", "B", <<["C", "INTEGER"], ["a", "B"]>>)
add_attribute("e", "B", "INTEGER")
logical_negation
generate_java_code
generate_java_code
add_command("D", "c", <<["d", "INTEGER"], ["A", "BOOLEAN"], ["e", "D"], ["c", "INTEGER"], ["b", "INTEGER"], ["c", "B"], ["C", "INTEGER"], ["A", "D"]>>)
add_call_chain(<<C,C,B,b,c,b,e>>)
greater_than
bool_value (false)
add_class(e)
add_command("D", "e", <<["b", "INTEGER"], ["e", "INTEGER"]>>)
bool_value (true)
generate_java_code
add_command("D", "b", <<["BOOLEAN", "B"], ["b", "INTEGER"], ["D", "e"], ["e", "b"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["d", "INTEGER"], ["c", "BOOLEAN"], ["INTEGER", "INTEGER"]>>)
add_class(d)
generate_java_code
add_class(a)
add_call_chain(<<e,B,b>>)
add_call_chain(<<B,d,b,b,c,C,a>>)
add_attribute("e", "C", "BOOLEAN")
logical_negation
add_command("A", "B", <<["c", "b"], ["a", "INTEGER"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["a", "BOOLEAN"], ["b", "B"], ["D", "BOOLEAN"], ["A", "BOOLEAN"]>>)
numerical_negation
type_check
add_call_chain(<<d,B>>)
int_value (17)
add_command("A", "C", <<["A", "INTEGER"], ["b", "BOOLEAN"], ["C", "e"], ["b", "b"], ["c", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "D"], ["b", "b"], ["b", "d"]>>)
type_check
add_attribute("c", "C", "INTEGER")
bool_value (true)
add_call_chain(<<d,D,D,D>>)
add_command("INTEGER", "d", <<["a", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["c", "INTEGER"], ["a", "a"]>>)
add_command("A", "C", <<["c", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["e", "BOOLEAN"]>>)
add_attribute("a", "A", "B")
logical_negation
logical_negation
type_check
logical_negation
add_command("A", "a", <<["d", "D"], ["A", "D"], ["b", "c"], ["A", "BOOLEAN"]>>)
logical_negation
numerical_negation
add_command("BOOLEAN", "c", <<["A", "B"], ["d", "d"], ["INTEGER", "c"], ["B", "BOOLEAN"], ["A", "B"], ["D", "INTEGER"], ["D", "INTEGER"], ["b", "INTEGER"], ["D", "INTEGER"]>>)
add_query("d", "e", <<["e", "INTEGER"], ["D", "B"], ["c", "BOOLEAN"], ["c", "C"], ["d", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["B", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>, "C")
add_query("D", "B", <<["b", "INTEGER"], ["INTEGER", "INTEGER"], ["A", "INTEGER"], ["C", "B"]>>, "c")
multiplication
bool_value (false)
generate_java_code
add_call_chain(<<d>>)
generate_java_code
logical_negation
add_command("C", "INTEGER", <<["C", "INTEGER"], ["d", "BOOLEAN"], ["e", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "B"], ["D", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["BOOLEAN", "a"]>>)
add_attribute("a", "D", "BOOLEAN")
bool_value (true)
add_attribute("a", "d", "BOOLEAN")
add_call_chain(<<C,INTEGER,d,C,d,b,B>>)
add_call_chain(<<B>>)
add_call_chain(<<D,B,BOOLEAN,A,b,BOOLEAN>>)
add_call_chain(<<a,B,A,d,C>>)
numerical_negation
add_class(B)
add_call_chain(<<e,c,A,A,c,A,d,D,C>>)
add_attribute("e", "a", "INTEGER")
add_command("c", "d", <<["C", "INTEGER"]>>)
add_class(D)
add_query("C", "C", <<["A", "BOOLEAN"], ["d", "D"], ["BOOLEAN", "INTEGER"], ["d", "BOOLEAN"], ["c", "D"]>>, "C")
add_class(C)
less_than
type_check
multiplication
logical_negation
less_than
logical_negation
add_command("e", "c", <<["C", "BOOLEAN"]>>)
int_value (25)
generate_java_code
add_call_chain(<<B,A,INTEGER,C>>)
add_class(b)
add_query("A", "B", <<["C", "BOOLEAN"], ["c", "INTEGER"], ["d", "BOOLEAN"], ["e", "INTEGER"], ["A", "e"], ["c", "e"]>>, "BOOLEAN")
bool_value (true)
add_command("b", "c", <<["c", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["B", "c"], ["B", "INTEGER"]>>)
add_class(d)
add_query("B", "C", <<["INTEGER", "C"], ["a", "INTEGER"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "BOOLEAN"], ["e", "INTEGER"], ["e", "d"], ["A", "C"], ["a", "INTEGER"]>>, "A")
add_call_chain(<<C>>)
add_call_chain(<<C,e>>)
add_call_chain(<<A,c>>)
less_than
numerical_negation
int_value (40)
add_command("b", "BOOLEAN", <<["A", "INTEGER"], ["B", "b"]>>)
add_call_chain(<<INTEGER>>)
int_value (23)
numerical_negation
numerical_negation
