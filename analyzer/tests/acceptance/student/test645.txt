add_call_chain(<<C,C,b,a,e,INTEGER,b>>)
subtraction
add_class(INTEGER)
int_value (20)
bool_value (true)
add_query("d", "a", <<["A", "BOOLEAN"], ["a", "D"], ["e", "D"], ["A", "INTEGER"], ["d", "INTEGER"], ["b", "BOOLEAN"], ["b", "INTEGER"]>>, "c")
add_class(c)
logical_negation
generate_java_code
bool_value (true)
logical_negation
add_attribute("d", "a", "INTEGER")
add_call_chain(<<e,C,B,e,INTEGER,D,D>>)
int_value (10)
bool_value (true)
add_command("B", "C", <<["c", "INTEGER"]>>)
addition
logical_negation
numerical_negation
add_call_chain(<<D,a>>)
add_command("D", "d", <<["INTEGER", "e"], ["a", "INTEGER"]>>)
add_command("D", "D", <<["A", "INTEGER"], ["b", "INTEGER"], ["a", "INTEGER"], ["B", "A"], ["B", "BOOLEAN"], ["A", "b"], ["e", "INTEGER"], ["d", "BOOLEAN"]>>)
add_call_chain(<<B,INTEGER,C,a,C,a,B>>)
add_call_chain(<<BOOLEAN,INTEGER,D,D,c,b,a>>)
add_command("A", "a", <<["b", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "INTEGER"], ["b", "a"], ["b", "INTEGER"]>>)
generate_java_code
add_call_chain(<<D,e>>)
int_value (5)
greater_than
add_call_chain(<<b,BOOLEAN,d,C>>)
bool_value (true)
add_attribute("C", "B", "A")
add_call_chain(<<c,d,BOOLEAN,b,c,d>>)
add_command("D", "c", <<["A", "a"], ["C", "BOOLEAN"], ["D", "BOOLEAN"]>>)
conjunction
add_class(INTEGER)
add_attribute("e", "INTEGER", "INTEGER")
add_class(c)
less_than
generate_java_code
numerical_negation
bool_value (false)
add_command("e", "e", <<["D", "INTEGER"], ["d", "INTEGER"], ["A", "INTEGER"], ["d", "C"], ["a", "BOOLEAN"], ["d", "d"], ["C", "BOOLEAN"]>>)
addition
add_attribute("B", "b", "BOOLEAN")
add_attribute("d", "A", "BOOLEAN")
add_call_chain(<<a,D,c,C,c,c,e>>)
int_value (7)
logical_negation
add_class(B)
bool_value (false)
int_value (26)
add_query("B", "d", <<["C", "BOOLEAN"]>>, "B")
add_command("d", "B", <<["a", "INTEGER"], ["e", "B"], ["B", "INTEGER"], ["B", "BOOLEAN"], ["A", "D"]>>)
add_command("INTEGER", "a", <<["BOOLEAN", "INTEGER"], ["e", "BOOLEAN"], ["C", "D"], ["b", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "A"]>>)
add_query("e", "b", <<["B", "B"], ["INTEGER", "INTEGER"], ["e", "b"], ["D", "D"]>>, "D")
add_command("e", "c", <<["d", "INTEGER"], ["INTEGER", "INTEGER"]>>)
add_attribute("a", "c", "INTEGER")
bool_value (true)
bool_value (true)
add_command("c", "B", <<["e", "INTEGER"], ["C", "BOOLEAN"], ["C", "C"], ["b", "INTEGER"], ["A", "d"], ["C", "e"]>>)
conjunction
add_call_chain(<<C,c,A,e,D,C,D,A>>)
less_than
add_command("b", "C", <<["INTEGER", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "INTEGER"], ["a", "INTEGER"], ["C", "D"]>>)
bool_value (false)
bool_value (true)
type_check
bool_value (false)
add_class(c)
quotient
int_value (38)
add_command("INTEGER", "d", <<["e", "BOOLEAN"], ["B", "b"], ["C", "INTEGER"], ["a", "INTEGER"], ["a", "BOOLEAN"], ["c", "INTEGER"]>>)
conjunction
int_value (23)
add_call_chain(<<B,c,C,b,c>>)
add_attribute("e", "C", "INTEGER")
multiplication
add_class(D)
add_call_chain(<<b,d,b,A,A,e>>)
add_query("b", "C", <<["B", "INTEGER"], ["e", "INTEGER"], ["A", "a"], ["C", "BOOLEAN"]>>, "a")
logical_negation
generate_java_code
quotient
numerical_negation
multiplication
add_command("INTEGER", "c", <<["c", "INTEGER"], ["c", "INTEGER"], ["b", "d"], ["C", "INTEGER"], ["d", "INTEGER"], ["C", "b"], ["D", "INTEGER"]>>)
add_call_chain(<<e,B>>)
add_query("INTEGER", "b", <<["C", "INTEGER"], ["D", "BOOLEAN"], ["A", "INTEGER"]>>, "d")
add_call_chain(<<B,d,b,b,D,a,C>>)
add_attribute("b", "BOOLEAN", "INTEGER")
modulo
add_call_chain(<<C,e,a>>)
less_than
numerical_negation
int_value (21)
add_call_chain(<<e,C,B,d,a,b>>)
addition
less_than
add_call_chain(<<b>>)
add_call_chain(<<A,D,INTEGER>>)
int_value (44)
add_command("A", "d", <<["c", "BOOLEAN"], ["e", "a"], ["A", "INTEGER"], ["C", "B"], ["D", "BOOLEAN"], ["b", "C"]>>)
bool_value (false)
int_value (8)
less_than
int_value (41)
add_class(e)
bool_value (true)
add_attribute("a", "a", "D")
add_attribute("e", "INTEGER", "BOOLEAN")
generate_java_code
add_attribute("c", "d", "INTEGER")
conjunction
add_attribute("C", "A", "BOOLEAN")
add_attribute("e", "d", "BOOLEAN")
add_query("d", "d", <<["INTEGER", "INTEGER"], ["D", "BOOLEAN"], ["a", "BOOLEAN"]>>, "B")
add_command("d", "e", <<["e", "D"]>>)
numerical_negation
add_command("INTEGER", "e", <<["INTEGER", "BOOLEAN"]>>)
add_call_chain(<<a>>)
add_query("C", "c", <<["e", "BOOLEAN"], ["c", "B"], ["B", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["b", "BOOLEAN"]>>, "B")
logical_negation
quotient
add_command("D", "C", <<["e", "BOOLEAN"], ["A", "INTEGER"], ["c", "B"], ["d", "D"], ["INTEGER", "BOOLEAN"], ["c", "a"]>>)
numerical_negation
bool_value (true)
add_command("A", "e", <<["B", "b"], ["c", "BOOLEAN"], ["e", "C"], ["INTEGER", "e"], ["D", "d"], ["A", "INTEGER"], ["a", "a"], ["D", "INTEGER"], ["e", "INTEGER"]>>)
add_query("c", "D", <<["BOOLEAN", "INTEGER"], ["d", "INTEGER"], ["D", "BOOLEAN"], ["b", "C"], ["INTEGER", "BOOLEAN"], ["b", "INTEGER"], ["INTEGER", "INTEGER"]>>, "B")
disjunction
add_attribute("D", "D", "a")
add_call_chain(<<a,c,A,C,B>>)
modulo
equals
numerical_negation
equals
subtraction
equals
add_command("BOOLEAN", "A", <<["D", "BOOLEAN"], ["b", "e"]>>)
modulo
int_value (42)
add_query("A", "A", <<["e", "BOOLEAN"], ["D", "INTEGER"], ["B", "D"], ["D", "D"], ["INTEGER", "BOOLEAN"], ["a", "d"], ["A", "BOOLEAN"], ["d", "c"], ["C", "INTEGER"]>>, "A")
add_query("D", "C", <<["D", "INTEGER"], ["A", "INTEGER"]>>, "C")
type_check
bool_value (true)
add_query("C", "D", <<["b", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["d", "BOOLEAN"], ["d", "INTEGER"], ["c", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>, "C")
add_query("e", "d", <<["C", "BOOLEAN"], ["a", "BOOLEAN"], ["b", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["A", "INTEGER"], ["D", "a"], ["B", "c"]>>, "e")
disjunction
int_value (7)
type_check
generate_java_code
int_value (5)
bool_value (false)
int_value (46)
add_command("d", "e", <<["d", "INTEGER"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["a", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "C"], ["d", "INTEGER"], ["c", "INTEGER"]>>)
add_call_chain(<<B,D,e>>)
bool_value (true)
subtraction
add_command("INTEGER", "INTEGER", <<["e", "BOOLEAN"], ["C", "c"], ["d", "INTEGER"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["C", "B"], ["B", "INTEGER"], ["C", "INTEGER"]>>)
equals
conjunction
disjunction
type_check
add_command("D", "a", <<["d", "INTEGER"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["e", "e"]>>)
bool_value (false)
add_attribute("d", "a", "C")
type_check
int_value (33)
add_call_chain(<<c,a,A,B,C,BOOLEAN,c,e,b>>)
add_call_chain(<<INTEGER,a,e,D,a,e>>)
add_call_chain(<<A,INTEGER>>)
add_command("b", "d", <<["a", "BOOLEAN"], ["a", "A"], ["e", "INTEGER"], ["c", "INTEGER"], ["INTEGER", "b"]>>)
type_check
add_command("A", "B", <<["a", "BOOLEAN"], ["b", "INTEGER"], ["BOOLEAN", "INTEGER"], ["b", "BOOLEAN"]>>)
generate_java_code
add_query("b", "e", <<["d", "INTEGER"], ["BOOLEAN", "c"], ["B", "INTEGER"], ["d", "A"], ["INTEGER", "INTEGER"], ["B", "b"], ["b", "BOOLEAN"]>>, "d")
add_call_chain(<<INTEGER,e,D>>)
bool_value (false)
add_command("d", "A", <<["INTEGER", "INTEGER"]>>)
type_check
add_call_chain(<<D,INTEGER,C,C,B>>)
conjunction
add_command("BOOLEAN", "e", <<["b", "BOOLEAN"], ["b", "BOOLEAN"], ["e", "INTEGER"], ["d", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "INTEGER"], ["A", "e"], ["A", "BOOLEAN"]>>)
logical_negation
add_class(C)
add_query("B", "BOOLEAN", <<["A", "INTEGER"], ["b", "D"], ["d", "B"], ["d", "BOOLEAN"], ["A", "INTEGER"], ["e", "A"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["C", "BOOLEAN"]>>, "e")
numerical_negation
disjunction
add_call_chain(<<b,D>>)
int_value (36)
add_command("C", "d", <<["C", "BOOLEAN"], ["a", "INTEGER"], ["A", "INTEGER"], ["B", "c"]>>)
logical_negation
add_query("e", "d", <<["c", "BOOLEAN"], ["a", "INTEGER"], ["INTEGER", "e"], ["d", "A"], ["INTEGER", "INTEGER"]>>, "b")
bool_value (true)
add_call_chain(<<a>>)
addition
add_call_chain(<<d,C,b,b>>)
add_call_chain(<<BOOLEAN,A,d>>)
add_attribute("A", "A", "d")
bool_value (true)
add_query("B", "B", <<["c", "BOOLEAN"], ["b", "c"]>>, "c")
add_attribute("C", "INTEGER", "INTEGER")
add_class(C)
add_call_chain(<<e,b,a,D>>)
add_call_chain(<<b,C,e,e,D,B,B,b,d>>)
add_query("b", "B", <<["A", "BOOLEAN"], ["c", "BOOLEAN"], ["c", "C"], ["A", "BOOLEAN"], ["D", "INTEGER"], ["e", "BOOLEAN"]>>, "d")
numerical_negation
type_check
add_attribute("C", "INTEGER", "INTEGER")
conjunction
add_class(D)
logical_negation
disjunction
bool_value (false)
add_command("c", "D", <<["BOOLEAN", "INTEGER"], ["C", "INTEGER"], ["a", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "BOOLEAN"], ["b", "A"], ["A", "A"]>>)
int_value (26)
add_call_chain(<<A,b>>)
type_check
add_call_chain(<<d,d,e>>)
bool_value (true)
numerical_negation
bool_value (false)
generate_java_code
less_than
addition
add_call_chain(<<e,e,C,e,a,c,d>>)
disjunction
add_call_chain(<<D>>)
int_value (49)
numerical_negation
add_call_chain(<<C,A,B,c>>)
bool_value (true)
disjunction
