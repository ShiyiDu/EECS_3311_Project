add_call_chain(<<C,b,c>>)
add_command("B", "d", <<["B", "INTEGER"], ["b", "BOOLEAN"], ["e", "B"], ["C", "INTEGER"], ["A", "b"]>>)
equals
add_attribute("a", "A", "c")
logical_negation
add_call_chain(<<B,C>>)
multiplication
add_query("a", "b", <<["B", "BOOLEAN"], ["A", "INTEGER"], ["INTEGER", "INTEGER"], ["b", "INTEGER"], ["b", "INTEGER"], ["b", "BOOLEAN"], ["A", "INTEGER"], ["b", "BOOLEAN"], ["c", "BOOLEAN"]>>, "c")
add_attribute("b", "b", "INTEGER")
type_check
int_value (3)
add_command("a", "A", <<["INTEGER", "C"], ["e", "BOOLEAN"], ["D", "a"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["b", "e"]>>)
add_query("B", "C", <<["A", "a"], ["D", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "B"], ["D", "INTEGER"]>>, "B")
add_attribute("e", "a", "BOOLEAN")
add_call_chain(<<A>>)
add_call_chain(<<A,D,A,b,a,A,D>>)
equals
add_query("D", "c", <<["e", "BOOLEAN"]>>, "b")
add_call_chain(<<C,b>>)
int_value (48)
logical_negation
add_attribute("c", "D", "b")
modulo
generate_java_code
equals
add_call_chain(<<INTEGER>>)
int_value (28)
numerical_negation
generate_java_code
add_command("D", "d", <<["D", "INTEGER"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["d", "BOOLEAN"], ["b", "BOOLEAN"], ["d", "c"]>>)
add_command("B", "A", <<["C", "BOOLEAN"], ["d", "INTEGER"]>>)
bool_value (true)
add_attribute("b", "c", "INTEGER")
numerical_negation
add_command("D", "INTEGER", <<["D", "a"], ["e", "D"], ["c", "INTEGER"]>>)
add_query("D", "a", <<["D", "C"]>>, "c")
generate_java_code
add_query("b", "b", <<["B", "INTEGER"], ["a", "BOOLEAN"], ["c", "INTEGER"], ["b", "c"], ["d", "INTEGER"], ["e", "B"], ["C", "BOOLEAN"]>>, "c")
addition
int_value (19)
add_attribute("d", "a", "INTEGER")
add_attribute("A", "C", "BOOLEAN")
int_value (8)
disjunction
add_attribute("b", "B", "INTEGER")
add_call_chain(<<D,b,d,A>>)
add_command("B", "b", <<["INTEGER", "INTEGER"], ["e", "b"], ["BOOLEAN", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "INTEGER"]>>)
add_command("INTEGER", "A", <<["e", "INTEGER"], ["C", "D"]>>)
add_call_chain(<<b,C,C,B,A,D,c>>)
add_call_chain(<<C,B,B,a,B,C,c,d,d>>)
numerical_negation
numerical_negation
add_call_chain(<<B,A>>)
add_attribute("A", "BOOLEAN", "BOOLEAN")
add_attribute("C", "B", "INTEGER")
add_command("B", "C", <<["c", "INTEGER"], ["d", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "b"]>>)
type_check
generate_java_code
bool_value (false)
add_query("c", "e", <<["A", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "b"], ["a", "INTEGER"]>>, "A")
conjunction
int_value (37)
equals
add_call_chain(<<C,d,A,BOOLEAN>>)
add_query("c", "d", <<["b", "INTEGER"], ["a", "A"], ["c", "A"], ["INTEGER", "BOOLEAN"], ["d", "INTEGER"], ["C", "INTEGER"], ["e", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "b"]>>, "B")
type_check
logical_negation
add_query("B", "A", <<["c", "BOOLEAN"], ["e", "d"], ["D", "INTEGER"], ["c", "BOOLEAN"], ["c", "D"], ["c", "BOOLEAN"]>>, "C")
type_check
numerical_negation
add_command("b", "d", <<["A", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "INTEGER"], ["e", "C"], ["INTEGER", "D"], ["A", "INTEGER"], ["d", "d"], ["A", "INTEGER"]>>)
equals
add_query("c", "B", <<["D", "A"], ["C", "INTEGER"], ["A", "INTEGER"]>>, "b")
add_command("B", "d", <<["a", "BOOLEAN"], ["d", "BOOLEAN"], ["e", "BOOLEAN"]>>)
subtraction
add_class(a)
disjunction
bool_value (false)
type_check
generate_java_code
type_check
bool_value (false)
type_check
bool_value (true)
add_command("a", "C", <<["BOOLEAN", "INTEGER"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["BOOLEAN", "INTEGER"], ["A", "INTEGER"]>>)
generate_java_code
bool_value (true)
add_command("d", "e", <<["b", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "INTEGER"], ["INTEGER", "c"], ["D", "c"], ["C", "D"], ["b", "INTEGER"]>>)
type_check
type_check
add_command("e", "d", <<["b", "BOOLEAN"], ["e", "B"], ["D", "INTEGER"], ["C", "INTEGER"]>>)
add_command("b", "A", <<["C", "BOOLEAN"], ["c", "BOOLEAN"], ["d", "BOOLEAN"], ["d", "INTEGER"], ["C", "d"], ["d", "A"]>>)
add_attribute("e", "b", "BOOLEAN")
bool_value (false)
logical_negation
type_check
bool_value (true)
add_call_chain(<<c>>)
add_attribute("e", "B", "D")
int_value (12)
add_call_chain(<<e,d,BOOLEAN,D,B,c,e,c>>)
add_query("c", "D", <<["d", "INTEGER"], ["a", "e"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["b", "d"], ["BOOLEAN", "C"]>>, "d")
add_call_chain(<<b,BOOLEAN,A,D,B,d,C,d>>)
add_call_chain(<<B>>)
add_attribute("D", "BOOLEAN", "B")
logical_negation
bool_value (true)
add_attribute("c", "e", "INTEGER")
add_command("c", "a", <<["e", "INTEGER"], ["e", "A"]>>)
add_query("b", "B", <<["B", "INTEGER"], ["c", "e"], ["c", "INTEGER"], ["C", "BOOLEAN"], ["b", "a"], ["c", "BOOLEAN"], ["e", "INTEGER"], ["D", "BOOLEAN"], ["C", "BOOLEAN"]>>, "BOOLEAN")
type_check
add_class(INTEGER)
add_attribute("c", "e", "A")
add_command("c", "a", <<["b", "BOOLEAN"], ["C", "e"], ["A", "B"], ["D", "INTEGER"]>>)
generate_java_code
disjunction
equals
numerical_negation
add_query("b", "b", <<["D", "BOOLEAN"], ["C", "A"], ["B", "D"]>>, "D")
conjunction
add_attribute("D", "c", "INTEGER")
conjunction
add_call_chain(<<C,C,c,d>>)
generate_java_code
add_call_chain(<<A,A,b,c,D,e>>)
numerical_negation
bool_value (false)
generate_java_code
bool_value (false)
add_call_chain(<<D,BOOLEAN,B,d,c,a,BOOLEAN,D,A>>)
add_call_chain(<<BOOLEAN,BOOLEAN,INTEGER,a>>)
add_call_chain(<<c>>)
add_command("c", "c", <<["b", "B"], ["c", "INTEGER"], ["b", "INTEGER"], ["a", "C"], ["A", "c"], ["a", "BOOLEAN"], ["b", "BOOLEAN"]>>)
quotient
logical_negation
add_command("A", "a", <<["C", "INTEGER"], ["b", "INTEGER"], ["B", "BOOLEAN"], ["INTEGER", "b"], ["BOOLEAN", "BOOLEAN"], ["A", "INTEGER"]>>)
numerical_negation
int_value (27)
add_call_chain(<<B,d,B,b>>)
logical_negation
add_attribute("B", "A", "INTEGER")
add_query("C", "C", <<["INTEGER", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["B", "BOOLEAN"], ["B", "INTEGER"]>>, "D")
add_command("b", "a", <<["a", "INTEGER"], ["A", "INTEGER"], ["C", "INTEGER"], ["B", "B"], ["e", "BOOLEAN"], ["d", "INTEGER"]>>)
type_check
logical_negation
bool_value (false)
add_command("b", "a", <<["A", "INTEGER"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
add_command("A", "INTEGER", <<["B", "INTEGER"], ["b", "D"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["C", "BOOLEAN"]>>)
add_attribute("D", "B", "a")
generate_java_code
add_call_chain(<<e,INTEGER>>)
bool_value (true)
add_attribute("BOOLEAN", "b", "c")
int_value (49)
bool_value (true)
add_call_chain(<<e,a,A,d>>)
add_query("d", "c", <<["c", "INTEGER"], ["d", "INTEGER"], ["b", "BOOLEAN"], ["c", "INTEGER"], ["C", "B"], ["C", "D"], ["D", "INTEGER"], ["C", "c"], ["D", "BOOLEAN"]>>, "c")
int_value (5)
disjunction
numerical_negation
add_command("C", "INTEGER", <<["B", "BOOLEAN"], ["a", "c"]>>)
int_value (12)
add_class(b)
add_class(INTEGER)
add_call_chain(<<b,e,c,d,b,A,A,B>>)
logical_negation
add_class(b)
logical_negation
logical_negation
add_attribute("D", "BOOLEAN", "INTEGER")
generate_java_code
add_command("C", "B", <<["d", "D"], ["d", "b"], ["a", "BOOLEAN"], ["INTEGER", "b"], ["D", "INTEGER"], ["b", "A"], ["B", "e"]>>)
add_call_chain(<<c,D,d,A,d,e,INTEGER,B>>)
add_query("a", "c", <<["e", "INTEGER"], ["a", "A"], ["e", "INTEGER"], ["d", "D"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["D", "INTEGER"]>>, "a")
int_value (6)
bool_value (true)
add_command("A", "INTEGER", <<["d", "e"], ["B", "INTEGER"], ["B", "INTEGER"], ["A", "c"], ["A", "INTEGER"], ["b", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "INTEGER"]>>)
add_query("d", "b", <<["a", "BOOLEAN"], ["a", "BOOLEAN"]>>, "C")
add_call_chain(<<a,A,a,d>>)
add_attribute("d", "B", "BOOLEAN")
add_command("c", "d", <<["BOOLEAN", "BOOLEAN"], ["A", "c"]>>)
int_value (46)
generate_java_code
int_value (3)
conjunction
add_call_chain(<<a,B,A>>)
logical_negation
modulo
add_call_chain(<<A>>)
add_query("B", "c", <<["A", "INTEGER"], ["A", "BOOLEAN"], ["D", "INTEGER"], ["A", "e"], ["B", "b"], ["B", "BOOLEAN"], ["a", "c"]>>, "C")
subtraction
add_command("e", "C", <<["d", "BOOLEAN"], ["B", "BOOLEAN"]>>)
add_call_chain(<<e>>)
add_attribute("a", "D", "BOOLEAN")
add_query("e", "D", <<["D", "C"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "INTEGER"], ["C", "a"], ["c", "BOOLEAN"]>>, "e")
generate_java_code
add_call_chain(<<b,C,e,A,d,B,b,b>>)
add_query("e", "INTEGER", <<["B", "BOOLEAN"]>>, "e")
int_value (31)
add_query("D", "B", <<["B", "INTEGER"], ["D", "BOOLEAN"], ["INTEGER", "b"], ["a", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "INTEGER"], ["e", "INTEGER"], ["a", "BOOLEAN"], ["d", "c"]>>, "e")
generate_java_code
generate_java_code
add_command("a", "D", <<["a", "BOOLEAN"], ["c", "D"], ["a", "INTEGER"], ["a", "B"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["C", "BOOLEAN"]>>)
add_call_chain(<<B,c,A,e>>)
logical_negation
add_command("BOOLEAN", "d", <<["B", "a"], ["c", "B"], ["INTEGER", "INTEGER"], ["b", "BOOLEAN"], ["D", "INTEGER"]>>)
add_query("D", "e", <<["b", "BOOLEAN"]>>, "C")
add_call_chain(<<D,c>>)
numerical_negation
logical_negation
add_query("B", "C", <<["e", "BOOLEAN"], ["b", "b"], ["B", "D"], ["D", "c"], ["b", "INTEGER"]>>, "C")
add_call_chain(<<BOOLEAN>>)
logical_negation
logical_negation
add_call_chain(<<c,C>>)
conjunction
add_attribute("B", "C", "B")
disjunction
int_value (23)
add_call_chain(<<b,a,A,C,d,C,C,d,A>>)
generate_java_code
int_value (42)
add_command("c", "D", <<["D", "BOOLEAN"], ["A", "BOOLEAN"], ["BOOLEAN", "b"], ["C", "B"], ["D", "INTEGER"], ["B", "B"], ["e", "INTEGER"], ["B", "BOOLEAN"], ["d", "BOOLEAN"]>>)
addition
add_query("A", "C", <<["C", "b"], ["D", "C"], ["d", "C"], ["A", "INTEGER"], ["a", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "INTEGER"]>>, "a")
add_attribute("A", "c", "INTEGER")
add_query("C", "e", <<["d", "BOOLEAN"], ["e", "INTEGER"], ["a", "BOOLEAN"], ["D", "INTEGER"], ["INTEGER", "INTEGER"], ["A", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "BOOLEAN"]>>, "c")
generate_java_code
add_attribute("C", "b", "BOOLEAN")
