generate_java_code
type_check
generate_java_code
add_class(b)
add_command("a", "c", <<["A", "INTEGER"], ["c", "INTEGER"], ["c", "BOOLEAN"], ["c", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["C", "INTEGER"], ["d", "BOOLEAN"], ["e", "BOOLEAN"]>>)
int_value (38)
type_check
bool_value (false)
conjunction
add_query("C", "B", <<["b", "BOOLEAN"], ["C", "INTEGER"], ["d", "INTEGER"], ["e", "INTEGER"], ["a", "c"], ["D", "e"], ["INTEGER", "BOOLEAN"], ["INTEGER", "e"]>>, "e")
add_attribute("D", "c", "INTEGER")
add_command("B", "a", <<["b", "INTEGER"], ["BOOLEAN", "INTEGER"], ["e", "INTEGER"], ["b", "d"], ["INTEGER", "BOOLEAN"]>>)
type_check
int_value (2)
add_call_chain(<<A,C,D,e,c,e>>)
add_attribute("D", "BOOLEAN", "A")
disjunction
generate_java_code
conjunction
add_command("a", "D", <<["C", "INTEGER"], ["c", "B"], ["d", "INTEGER"], ["D", "b"], ["B", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "INTEGER"]>>)
numerical_negation
int_value (2)
add_call_chain(<<d,BOOLEAN,D,C>>)
add_query("e", "c", <<["b", "d"], ["C", "BOOLEAN"], ["B", "C"], ["C", "INTEGER"], ["C", "e"], ["A", "b"]>>, "D")
add_class(B)
add_query("A", "INTEGER", <<["B", "b"], ["C", "B"], ["a", "INTEGER"], ["B", "BOOLEAN"], ["a", "INTEGER"], ["C", "INTEGER"], ["d", "a"]>>, "A")
bool_value (false)
type_check
int_value (26)
add_attribute("a", "e", "INTEGER")
add_attribute("d", "d", "BOOLEAN")
add_attribute("A", "D", "BOOLEAN")
bool_value (true)
numerical_negation
add_query("b", "B", <<["a", "BOOLEAN"], ["c", "INTEGER"], ["D", "INTEGER"], ["C", "BOOLEAN"]>>, "D")
add_call_chain(<<a,A,BOOLEAN,d,e,B,c>>)
add_query("e", "B", <<["c", "INTEGER"], ["c", "BOOLEAN"], ["c", "INTEGER"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["c", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "BOOLEAN"]>>, "D")
numerical_negation
int_value (1)
numerical_negation
add_command("c", "INTEGER", <<["B", "INTEGER"], ["A", "A"], ["a", "b"], ["e", "b"], ["b", "INTEGER"], ["A", "INTEGER"]>>)
add_command("B", "a", <<["B", "D"], ["c", "BOOLEAN"], ["BOOLEAN", "a"], ["d", "BOOLEAN"], ["c", "INTEGER"]>>)
type_check
conjunction
bool_value (true)
add_call_chain(<<e,B,C,d>>)
add_command("D", "B", <<["e", "A"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["b", "BOOLEAN"]>>)
bool_value (false)
add_query("BOOLEAN", "C", <<["A", "d"], ["c", "INTEGER"], ["a", "B"], ["D", "BOOLEAN"], ["A", "D"], ["d", "d"], ["e", "a"], ["d", "BOOLEAN"]>>, "BOOLEAN")
subtraction
add_attribute("C", "BOOLEAN", "BOOLEAN")
add_query("INTEGER", "e", <<["b", "c"]>>, "b")
add_class(D)
logical_negation
logical_negation
add_attribute("A", "INTEGER", "BOOLEAN")
add_command("D", "A", <<["c", "b"], ["b", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "A"]>>)
numerical_negation
add_command("INTEGER", "a", <<["A", "INTEGER"], ["D", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["A", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
add_attribute("A", "C", "e")
add_command("C", "b", <<["B", "e"], ["D", "INTEGER"], ["b", "BOOLEAN"], ["b", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["INTEGER", "A"], ["d", "a"]>>)
bool_value (true)
add_call_chain(<<a,b,e>>)
add_command("b", "B", <<["D", "BOOLEAN"], ["c", "b"], ["e", "INTEGER"], ["B", "INTEGER"], ["D", "INTEGER"], ["b", "INTEGER"], ["B", "D"], ["INTEGER", "INTEGER"], ["c", "D"]>>)
generate_java_code
add_call_chain(<<a,a,b,A,BOOLEAN,c,b>>)
add_command("INTEGER", "a", <<["a", "BOOLEAN"], ["D", "INTEGER"], ["B", "BOOLEAN"], ["d", "c"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["A", "a"]>>)
less_than
add_command("C", "b", <<["d", "INTEGER"], ["INTEGER", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "INTEGER"]>>)
add_command("c", "a", <<["d", "BOOLEAN"], ["A", "INTEGER"], ["b", "INTEGER"], ["INTEGER", "INTEGER"], ["A", "BOOLEAN"], ["d", "a"], ["C", "e"], ["c", "INTEGER"], ["INTEGER", "A"]>>)
conjunction
bool_value (true)
generate_java_code
generate_java_code
logical_negation
add_call_chain(<<A,C,D,a>>)
generate_java_code
modulo
add_query("A", "e", <<["b", "INTEGER"], ["a", "INTEGER"], ["b", "a"]>>, "INTEGER")
type_check
add_call_chain(<<C,C,BOOLEAN>>)
add_attribute("a", "D", "INTEGER")
add_query("b", "BOOLEAN", <<["e", "INTEGER"], ["B", "A"]>>, "d")
logical_negation
add_command("d", "e", <<["e", "D"], ["e", "INTEGER"], ["C", "A"], ["b", "a"], ["B", "INTEGER"], ["C", "INTEGER"], ["b", "B"], ["c", "BOOLEAN"], ["a", "A"]>>)
logical_negation
greater_than
add_call_chain(<<B,INTEGER,INTEGER,D,INTEGER>>)
add_query("d", "D", <<["A", "d"], ["B", "INTEGER"], ["b", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "INTEGER"], ["D", "INTEGER"], ["c", "BOOLEAN"], ["e", "BOOLEAN"]>>, "C")
add_call_chain(<<a>>)
generate_java_code
bool_value (false)
disjunction
logical_negation
logical_negation
int_value (14)
add_command("D", "e", <<["e", "c"], ["C", "b"], ["a", "INTEGER"], ["A", "e"], ["d", "INTEGER"], ["C", "BOOLEAN"], ["c", "INTEGER"], ["C", "INTEGER"]>>)
add_attribute("c", "b", "B")
add_query("B", "INTEGER", <<["c", "BOOLEAN"], ["b", "INTEGER"], ["a", "d"], ["INTEGER", "a"]>>, "A")
add_call_chain(<<d>>)
add_command("A", "e", <<["BOOLEAN", "B"], ["C", "BOOLEAN"], ["d", "B"], ["D", "INTEGER"], ["a", "b"], ["d", "D"], ["B", "C"], ["a", "BOOLEAN"]>>)
add_class(C)
add_attribute("A", "BOOLEAN", "INTEGER")
add_call_chain(<<c,A>>)
equals
add_class(B)
add_call_chain(<<B,C,d,A>>)
logical_negation
add_query("INTEGER", "INTEGER", <<["a", "INTEGER"], ["D", "INTEGER"], ["A", "BOOLEAN"], ["A", "INTEGER"]>>, "b")
add_command("d", "c", <<["C", "BOOLEAN"], ["a", "INTEGER"], ["D", "BOOLEAN"], ["D", "INTEGER"]>>)
add_call_chain(<<c,B,D,C,A,b,a>>)
numerical_negation
int_value (39)
add_command("e", "b", <<["b", "INTEGER"], ["c", "c"], ["A", "BOOLEAN"], ["b", "c"]>>)
add_attribute("e", "B", "INTEGER")
addition
logical_negation
add_call_chain(<<c,d,C,D,b,b,b,B,d>>)
type_check
add_command("B", "d", <<["A", "C"], ["e", "e"], ["C", "INTEGER"], ["D", "BOOLEAN"]>>)
bool_value (true)
add_class(BOOLEAN)
add_call_chain(<<c,a,e,a,C,A,e,A,b>>)
generate_java_code
add_call_chain(<<c,A,INTEGER,D,A,a,e>>)
add_attribute("C", "b", "C")
add_query("a", "D", <<["A", "BOOLEAN"], ["B", "INTEGER"]>>, "A")
less_than
add_command("C", "d", <<["a", "BOOLEAN"], ["e", "INTEGER"], ["D", "INTEGER"]>>)
int_value (11)
add_call_chain(<<d,c,c,C,A,d,c,B,a>>)
numerical_negation
int_value (32)
add_query("d", "c", <<["C", "C"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["D", "INTEGER"], ["A", "a"]>>, "C")
disjunction
int_value (29)
logical_negation
add_query("c", "INTEGER", <<["A", "INTEGER"], ["A", "INTEGER"], ["a", "BOOLEAN"]>>, "d")
add_call_chain(<<INTEGER,D>>)
int_value (29)
numerical_negation
logical_negation
add_query("a", "D", <<["c", "INTEGER"]>>, "e")
disjunction
logical_negation
generate_java_code
add_class(c)
add_call_chain(<<e>>)
add_call_chain(<<BOOLEAN,D,BOOLEAN>>)
bool_value (true)
conjunction
numerical_negation
less_than
disjunction
add_attribute("b", "e", "a")
add_call_chain(<<INTEGER,A,e,b,c,D,B>>)
int_value (16)
add_command("D", "a", <<["A", "BOOLEAN"], ["b", "B"], ["A", "INTEGER"], ["B", "b"], ["INTEGER", "D"], ["b", "BOOLEAN"], ["D", "b"], ["e", "A"], ["d", "BOOLEAN"]>>)
numerical_negation
addition
add_query("D", "e", <<["INTEGER", "BOOLEAN"], ["B", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>, "INTEGER")
int_value (22)
add_class(C)
subtraction
greater_than
add_call_chain(<<c,d,c,d,e,INTEGER,b,e,a>>)
quotient
int_value (20)
less_than
logical_negation
less_than
add_query("C", "c", <<["C", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["BOOLEAN", "A"], ["C", "a"], ["e", "BOOLEAN"]>>, "d")
add_command("a", "c", <<["d", "d"], ["D", "BOOLEAN"], ["d", "BOOLEAN"]>>)
add_query("a", "b", <<["A", "BOOLEAN"], ["A", "INTEGER"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "INTEGER"], ["a", "a"], ["d", "a"], ["d", "BOOLEAN"]>>, "D")
add_call_chain(<<BOOLEAN,B,A,C,d>>)
int_value (11)
add_command("b", "BOOLEAN", <<["D", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["d", "BOOLEAN"], ["e", "D"], ["b", "INTEGER"], ["C", "INTEGER"], ["INTEGER", "INTEGER"]>>)
add_call_chain(<<D,A,B>>)
numerical_negation
add_call_chain(<<b>>)
