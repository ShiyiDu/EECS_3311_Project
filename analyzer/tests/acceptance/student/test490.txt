bool_value (false)
add_command("B", "a", <<["A", "INTEGER"], ["C", "b"], ["D", "e"], ["D", "INTEGER"], ["C", "INTEGER"]>>)
add_call_chain(<<B,e,B,B>>)
logical_negation
bool_value (false)
add_attribute("INTEGER", "a", "INTEGER")
add_call_chain(<<d,D,C,b,B,a>>)
add_call_chain(<<d>>)
logical_negation
logical_negation
generate_java_code
add_call_chain(<<e,e,e,INTEGER,d,D,e,C>>)
generate_java_code
int_value (38)
numerical_negation
add_call_chain(<<INTEGER,B,D,d,C,B>>)
type_check
type_check
less_than
add_call_chain(<<C,e,B,a,c,BOOLEAN>>)
greater_than
numerical_negation
quotient
bool_value (true)
logical_negation
generate_java_code
add_query("A", "e", <<["INTEGER", "BOOLEAN"], ["INTEGER", "INTEGER"], ["a", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["a", "INTEGER"], ["C", "INTEGER"], ["c", "INTEGER"], ["b", "a"]>>, "A")
bool_value (false)
bool_value (false)
bool_value (true)
add_attribute("a", "b", "INTEGER")
int_value (33)
add_query("a", "D", <<["B", "C"], ["c", "BOOLEAN"], ["C", "INTEGER"], ["C", "d"], ["D", "D"], ["C", "BOOLEAN"]>>, "D")
bool_value (false)
add_query("C", "A", <<["e", "INTEGER"], ["INTEGER", "D"], ["C", "a"], ["b", "C"]>>, "C")
add_attribute("INTEGER", "C", "C")
add_query("C", "e", <<["e", "BOOLEAN"], ["a", "INTEGER"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["c", "INTEGER"]>>, "B")
add_call_chain(<<B,C,d,c>>)
add_class(B)
add_command("INTEGER", "c", <<["BOOLEAN", "BOOLEAN"], ["d", "a"], ["e", "INTEGER"], ["b", "a"], ["B", "BOOLEAN"], ["a", "INTEGER"]>>)
int_value (8)
equals
add_class(D)
add_command("c", "b", <<["D", "INTEGER"], ["a", "e"], ["INTEGER", "INTEGER"], ["a", "INTEGER"], ["D", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>)
int_value (15)
logical_negation
add_call_chain(<<B,a,B,b,b>>)
int_value (29)
conjunction
add_command("e", "c", <<["c", "INTEGER"], ["c", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "B"]>>)
addition
add_command("C", "d", <<["a", "BOOLEAN"], ["B", "b"]>>)
type_check
conjunction
add_call_chain(<<A,D,C,A,D,C,d,a,b>>)
less_than
int_value (43)
type_check
add_call_chain(<<b,e>>)
type_check
add_command("a", "B", <<["a", "C"], ["a", "a"], ["INTEGER", "INTEGER"], ["e", "C"], ["d", "D"]>>)
type_check
add_class(C)
bool_value (true)
add_call_chain(<<d,C,D>>)
numerical_negation
int_value (35)
add_attribute("A", "C", "c")
type_check
equals
int_value (21)
numerical_negation
add_class(B)
add_call_chain(<<B,e,b,B,A>>)
disjunction
add_call_chain(<<D,e,D,c>>)
add_query("BOOLEAN", "A", <<["b", "INTEGER"]>>, "C")
numerical_negation
int_value (49)
equals
int_value (19)
int_value (32)
int_value (46)
add_attribute("C", "C", "INTEGER")
add_call_chain(<<BOOLEAN>>)
add_call_chain(<<c>>)
logical_negation
int_value (44)
quotient
add_call_chain(<<e,C,e,e,C,a,b,a>>)
add_query("c", "A", <<["c", "INTEGER"]>>, "d")
disjunction
add_query("a", "A", <<["D", "INTEGER"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["BOOLEAN", "C"]>>, "BOOLEAN")
add_command("e", "c", <<["d", "INTEGER"], ["a", "INTEGER"], ["b", "BOOLEAN"], ["C", "INTEGER"], ["b", "a"], ["BOOLEAN", "INTEGER"]>>)
int_value (5)
multiplication
add_command("A", "A", <<["a", "INTEGER"]>>)
add_attribute("D", "a", "BOOLEAN")
greater_than
add_call_chain(<<B,B,d>>)
add_attribute("d", "B", "BOOLEAN")
int_value (9)
add_call_chain(<<e,BOOLEAN>>)
bool_value (false)
bool_value (true)
modulo
logical_negation
add_attribute("C", "d", "INTEGER")
type_check
add_query("INTEGER", "D", <<["D", "INTEGER"], ["d", "BOOLEAN"]>>, "a")
greater_than
numerical_negation
conjunction
subtraction
add_command("D", "a", <<["C", "INTEGER"], ["A", "INTEGER"], ["e", "INTEGER"], ["INTEGER", "INTEGER"]>>)
bool_value (true)
numerical_negation
add_call_chain(<<INTEGER,A,e,b,e,INTEGER,INTEGER,a,B>>)
conjunction
add_attribute("e", "A", "BOOLEAN")
modulo
bool_value (false)
subtraction
add_call_chain(<<e,C>>)
add_query("a", "a", <<["b", "BOOLEAN"], ["e", "BOOLEAN"], ["d", "INTEGER"], ["A", "INTEGER"], ["INTEGER", "INTEGER"], ["C", "BOOLEAN"], ["A", "BOOLEAN"]>>, "B")
generate_java_code
add_call_chain(<<B,BOOLEAN,INTEGER>>)
int_value (27)
add_attribute("A", "A", "INTEGER")
int_value (28)
add_call_chain(<<a,c,INTEGER,d,C,A,c,b,d>>)
conjunction
disjunction
add_command("B", "d", <<["B", "INTEGER"], ["e", "INTEGER"], ["A", "BOOLEAN"], ["d", "c"], ["C", "INTEGER"]>>)
numerical_negation
add_call_chain(<<D,b>>)
add_query("B", "e", <<["A", "B"], ["D", "A"], ["d", "INTEGER"], ["c", "INTEGER"]>>, "C")
type_check
generate_java_code
add_class(d)
add_attribute("e", "C", "a")
add_command("B", "BOOLEAN", <<["C", "INTEGER"], ["B", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "A"], ["e", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["INTEGER", "b"]>>)
add_call_chain(<<c,B,d,d,c>>)
add_query("BOOLEAN", "b", <<["c", "BOOLEAN"], ["C", "BOOLEAN"]>>, "c")
add_attribute("C", "A", "INTEGER")
add_query("C", "B", <<["a", "INTEGER"], ["b", "INTEGER"], ["c", "INTEGER"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "INTEGER"], ["A", "INTEGER"]>>, "c")
int_value (23)
add_command("A", "e", <<["D", "BOOLEAN"]>>)
add_call_chain(<<INTEGER>>)
add_attribute("d", "e", "INTEGER")
type_check
quotient
numerical_negation
add_attribute("b", "B", "INTEGER")
logical_negation
int_value (13)
bool_value (false)
add_call_chain(<<c,A,B,A,INTEGER,A,e,C>>)
add_query("D", "C", <<["a", "A"], ["b", "BOOLEAN"], ["A", "d"], ["D", "C"], ["D", "BOOLEAN"]>>, "c")
add_call_chain(<<B,B,B,b,a,C,c>>)
multiplication
numerical_negation
modulo
add_attribute("C", "c", "BOOLEAN")
add_command("a", "B", <<["A", "INTEGER"], ["B", "BOOLEAN"]>>)
add_attribute("c", "d", "BOOLEAN")
add_class(B)
add_command("A", "C", <<["B", "BOOLEAN"], ["D", "INTEGER"]>>)
add_command("b", "e", <<["e", "INTEGER"], ["A", "INTEGER"]>>)
add_attribute("a", "b", "BOOLEAN")
add_query("D", "a", <<["e", "INTEGER"], ["D", "INTEGER"], ["A", "INTEGER"], ["BOOLEAN", "INTEGER"], ["INTEGER", "BOOLEAN"], ["C", "INTEGER"], ["BOOLEAN", "A"], ["C", "INTEGER"], ["B", "INTEGER"]>>, "c")
add_call_chain(<<b,e,a,INTEGER>>)
add_class(C)
generate_java_code
add_attribute("e", "e", "INTEGER")
add_attribute("B", "c", "c")
int_value (18)
int_value (26)
add_class(C)
add_command("D", "c", <<["e", "INTEGER"], ["a", "INTEGER"], ["INTEGER", "a"], ["D", "D"], ["a", "INTEGER"], ["B", "INTEGER"], ["INTEGER", "D"]>>)
add_query("D", "e", <<["e", "INTEGER"], ["C", "INTEGER"], ["B", "B"], ["D", "e"]>>, "d")
add_class(e)
add_call_chain(<<c,B,c>>)
add_query("C", "a", <<["D", "BOOLEAN"], ["c", "B"], ["C", "BOOLEAN"], ["e", "BOOLEAN"]>>, "C")
int_value (20)
bool_value (false)
int_value (37)
add_command("INTEGER", "e", <<["b", "BOOLEAN"], ["A", "A"], ["BOOLEAN", "INTEGER"], ["e", "BOOLEAN"], ["b", "D"]>>)
modulo
add_call_chain(<<d,e,c,BOOLEAN,A,BOOLEAN>>)
equals
bool_value (false)
equals
less_than
conjunction
add_call_chain(<<D,D>>)
add_command("D", "a", <<["D", "BOOLEAN"], ["d", "BOOLEAN"], ["d", "INTEGER"], ["A", "INTEGER"]>>)
conjunction
add_query("C", "D", <<["c", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "INTEGER"], ["INTEGER", "BOOLEAN"], ["e", "BOOLEAN"]>>, "B")
add_command("INTEGER", "b", <<["b", "b"], ["BOOLEAN", "b"], ["b", "b"], ["B", "INTEGER"], ["d", "BOOLEAN"], ["b", "INTEGER"], ["c", "BOOLEAN"]>>)
type_check
add_attribute("c", "e", "INTEGER")
add_attribute("D", "b", "INTEGER")
modulo
equals
add_query("D", "A", <<["B", "B"], ["D", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "D"], ["e", "b"], ["a", "d"], ["B", "BOOLEAN"], ["A", "INTEGER"]>>, "BOOLEAN")
bool_value (false)
int_value (34)
add_command("A", "C", <<["c", "INTEGER"], ["d", "A"], ["d", "BOOLEAN"], ["d", "A"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "A"]>>)
add_call_chain(<<C,d,B,C,d,b,c>>)
add_call_chain(<<a,D,D>>)
equals
logical_negation
less_than
add_call_chain(<<e>>)
numerical_negation
add_attribute("B", "B", "INTEGER")
add_call_chain(<<B,d,c,C,B,d,a,C,e>>)
add_call_chain(<<A>>)
equals
less_than
type_check
disjunction
add_attribute("e", "A", "INTEGER")
logical_negation
add_command("A", "a", <<["A", "C"], ["a", "B"], ["C", "INTEGER"], ["c", "B"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "BOOLEAN"]>>)
add_command("b", "D", <<["c", "BOOLEAN"]>>)
add_query("d", "A", <<["c", "C"], ["b", "BOOLEAN"], ["e", "INTEGER"], ["INTEGER", "INTEGER"], ["e", "C"], ["c", "INTEGER"], ["a", "BOOLEAN"]>>, "BOOLEAN")
int_value (20)
add_command("c", "A", <<["BOOLEAN", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "BOOLEAN"]>>)
add_attribute("A", "C", "e")
type_check
int_value (41)
generate_java_code
bool_value (true)
add_command("b", "d", <<["INTEGER", "A"], ["c", "INTEGER"], ["e", "B"]>>)
bool_value (true)
numerical_negation
bool_value (true)
subtraction
modulo
add_class(D)
add_class(b)
add_command("C", "B", <<["C", "INTEGER"], ["B", "INTEGER"], ["a", "C"], ["B", "INTEGER"], ["e", "INTEGER"], ["c", "BOOLEAN"]>>)
add_attribute("C", "a", "INTEGER")
conjunction
less_than
add_query("b", "D", <<["C", "BOOLEAN"], ["INTEGER", "b"], ["C", "e"]>>, "D")
int_value (45)
generate_java_code
numerical_negation
generate_java_code
numerical_negation
int_value (19)
add_command("C", "B", <<["a", "BOOLEAN"], ["C", "INTEGER"], ["A", "INTEGER"], ["A", "c"], ["d", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "e"], ["A", "BOOLEAN"], ["B", "INTEGER"]>>)
add_attribute("c", "b", "BOOLEAN")
add_class(D)
add_attribute("c", "A", "A")
type_check
bool_value (true)
generate_java_code
add_command("C", "B", <<["d", "A"], ["b", "INTEGER"], ["d", "b"], ["d", "INTEGER"], ["C", "INTEGER"], ["b", "INTEGER"], ["D", "INTEGER"], ["c", "INTEGER"]>>)
add_attribute("D", "d", "BOOLEAN")
add_attribute("d", "e", "BOOLEAN")
int_value (7)
add_command("e", "D", <<["BOOLEAN", "BOOLEAN"], ["e", "a"], ["A", "BOOLEAN"]>>)
bool_value (false)
