bool_value (false)
bool_value (true)
add_attribute("B", "c", "BOOLEAN")
add_call_chain(<<A,C,A,INTEGER,B,A,a>>)
add_call_chain(<<a,C,BOOLEAN,A,D>>)
add_call_chain(<<INTEGER>>)
add_attribute("BOOLEAN", "INTEGER", "BOOLEAN")
subtraction
add_command("C", "C", <<["b", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "C"], ["C", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "INTEGER"], ["C", "INTEGER"], ["e", "INTEGER"]>>)
logical_negation
logical_negation
bool_value (true)
add_call_chain(<<D,e,D,c,B,B,d,C>>)
add_call_chain(<<d,C,B,d,D>>)
logical_negation
add_command("a", "b", <<["D", "B"]>>)
add_class(B)
conjunction
add_attribute("D", "A", "BOOLEAN")
logical_negation
int_value (16)
disjunction
add_query("D", "d", <<["INTEGER", "BOOLEAN"], ["D", "INTEGER"], ["b", "B"], ["C", "b"], ["c", "BOOLEAN"], ["e", "e"], ["INTEGER", "BOOLEAN"], ["D", "BOOLEAN"]>>, "BOOLEAN")
type_check
logical_negation
multiplication
add_call_chain(<<a,C>>)
add_query("C", "A", <<["C", "INTEGER"], ["B", "d"]>>, "A")
multiplication
numerical_negation
add_query("b", "D", <<["C", "INTEGER"]>>, "a")
add_call_chain(<<b>>)
add_call_chain(<<e,b,C,D,B,A,e,a,e>>)
bool_value (false)
bool_value (false)
add_call_chain(<<b,D,C,e,a,B,C,A>>)
add_attribute("D", "b", "BOOLEAN")
add_command("INTEGER", "C", <<["b", "D"], ["B", "D"], ["c", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>)
int_value (34)
bool_value (false)
equals
type_check
add_call_chain(<<INTEGER,B,a>>)
numerical_negation
multiplication
addition
add_attribute("B", "D", "INTEGER")
generate_java_code
add_command("D", "e", <<["D", "a"], ["A", "A"], ["e", "INTEGER"], ["B", "e"], ["b", "A"], ["B", "BOOLEAN"], ["C", "INTEGER"], ["e", "BOOLEAN"], ["D", "INTEGER"]>>)
add_attribute("c", "A", "c")
add_call_chain(<<c,b,B,d,B>>)
numerical_negation
multiplication
int_value (39)
bool_value (false)
disjunction
logical_negation
bool_value (true)
add_query("A", "d", <<["A", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["c", "INTEGER"], ["b", "INTEGER"], ["B", "INTEGER"], ["b", "BOOLEAN"], ["B", "e"], ["e", "d"], ["B", "INTEGER"]>>, "C")
add_command("D", "D", <<["e", "BOOLEAN"], ["D", "INTEGER"], ["A", "INTEGER"], ["B", "INTEGER"], ["INTEGER", "C"], ["A", "BOOLEAN"], ["d", "c"], ["d", "INTEGER"]>>)
bool_value (true)
add_command("A", "D", <<["a", "BOOLEAN"], ["e", "INTEGER"], ["B", "INTEGER"], ["d", "BOOLEAN"], ["c", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "INTEGER"], ["a", "INTEGER"]>>)
add_query("D", "A", <<["c", "d"], ["e", "e"]>>, "e")
add_query("b", "c", <<["b", "INTEGER"], ["D", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["b", "b"], ["c", "INTEGER"], ["c", "INTEGER"]>>, "c")
equals
quotient
multiplication
bool_value (true)
add_attribute("B", "d", "INTEGER")
int_value (40)
add_query("D", "A", <<["INTEGER", "INTEGER"], ["c", "INTEGER"]>>, "c")
int_value (32)
add_query("a", "a", <<["c", "C"], ["D", "A"], ["c", "INTEGER"], ["A", "c"], ["B", "A"], ["d", "INTEGER"], ["e", "BOOLEAN"]>>, "BOOLEAN")
add_query("e", "INTEGER", <<["d", "BOOLEAN"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["A", "BOOLEAN"]>>, "BOOLEAN")
add_call_chain(<<A,D,b,B,BOOLEAN,A>>)
add_class(INTEGER)
int_value (3)
int_value (35)
equals
type_check
type_check
add_class(c)
type_check
add_query("b", "A", <<["c", "C"], ["a", "INTEGER"], ["B", "INTEGER"], ["d", "B"]>>, "d")
add_call_chain(<<b,c,A,C,C>>)
disjunction
add_attribute("a", "c", "BOOLEAN")
modulo
add_command("e", "A", <<["a", "BOOLEAN"], ["c", "INTEGER"], ["BOOLEAN", "D"], ["e", "BOOLEAN"]>>)
conjunction
numerical_negation
add_call_chain(<<b,e,e,A>>)
generate_java_code
add_command("e", "INTEGER", <<["B", "C"]>>)
bool_value (true)
add_attribute("d", "A", "BOOLEAN")
bool_value (true)
add_command("B", "A", <<["C", "BOOLEAN"], ["a", "c"], ["A", "C"], ["a", "D"], ["D", "BOOLEAN"], ["D", "INTEGER"]>>)
int_value (38)
add_call_chain(<<BOOLEAN,e>>)
add_attribute("D", "B", "D")
add_call_chain(<<a,d,d,INTEGER,c,e>>)
add_query("C", "e", <<["C", "INTEGER"], ["a", "INTEGER"], ["A", "BOOLEAN"], ["c", "BOOLEAN"]>>, "b")
int_value (14)
bool_value (true)
type_check
add_query("B", "a", <<["D", "BOOLEAN"], ["c", "INTEGER"], ["c", "D"], ["B", "INTEGER"], ["A", "INTEGER"], ["A", "INTEGER"]>>, "BOOLEAN")
numerical_negation
add_query("D", "B", <<["b", "INTEGER"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["B", "BOOLEAN"]>>, "A")
add_class(BOOLEAN)
numerical_negation
add_query("a", "D", <<["B", "INTEGER"], ["D", "A"], ["e", "INTEGER"], ["INTEGER", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>, "B")
int_value (29)
add_call_chain(<<e,B>>)
subtraction
int_value (12)
add_call_chain(<<C,A,INTEGER,A,c,C>>)
greater_than
add_call_chain(<<a,d,A,D>>)
addition
add_attribute("A", "A", "d")
add_call_chain(<<BOOLEAN,b,d,e,INTEGER,C,d,B>>)
add_attribute("C", "b", "BOOLEAN")
add_command("B", "a", <<["d", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "BOOLEAN"], ["b", "B"], ["B", "INTEGER"]>>)
add_call_chain(<<C,INTEGER,a,B,BOOLEAN,d,A>>)
add_call_chain(<<a,a,e,e,b,D,INTEGER,A,a>>)
add_command("b", "d", <<["d", "B"], ["e", "INTEGER"], ["e", "INTEGER"]>>)
generate_java_code
conjunction
add_call_chain(<<a,B,d,c,a,b,e>>)
add_attribute("A", "a", "c")
add_command("A", "B", <<["d", "INTEGER"], ["C", "BOOLEAN"], ["C", "b"], ["d", "D"]>>)
generate_java_code
bool_value (true)
numerical_negation
add_attribute("B", "D", "BOOLEAN")
less_than
add_call_chain(<<e,D>>)
numerical_negation
add_attribute("C", "INTEGER", "INTEGER")
add_query("C", "b", <<["D", "d"], ["c", "B"], ["a", "INTEGER"], ["C", "BOOLEAN"], ["D", "a"]>>, "A")
add_call_chain(<<D,D,INTEGER,B,INTEGER,D,C>>)
logical_negation
add_query("c", "INTEGER", <<["C", "C"], ["a", "INTEGER"], ["d", "C"], ["d", "B"], ["C", "BOOLEAN"], ["C", "a"], ["c", "INTEGER"], ["b", "INTEGER"], ["b", "BOOLEAN"]>>, "c")
subtraction
int_value (5)
type_check
generate_java_code
add_attribute("d", "e", "a")
add_query("A", "c", <<["A", "B"], ["D", "d"]>>, "d")
add_query("INTEGER", "A", <<["b", "c"], ["e", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>, "D")
add_attribute("b", "B", "BOOLEAN")
bool_value (true)
add_call_chain(<<BOOLEAN,C,D,c>>)
add_call_chain(<<c>>)
add_call_chain(<<e,c>>)
add_command("D", "c", <<["d", "BOOLEAN"], ["C", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "INTEGER"], ["A", "INTEGER"], ["B", "B"]>>)
generate_java_code
add_command("BOOLEAN", "a", <<["A", "BOOLEAN"]>>)
add_class(e)
add_attribute("e", "d", "BOOLEAN")
add_attribute("D", "D", "B")
numerical_negation
logical_negation
add_command("A", "A", <<["B", "e"], ["c", "e"], ["B", "BOOLEAN"], ["D", "e"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["A", "c"], ["a", "INTEGER"], ["A", "INTEGER"]>>)
conjunction
add_class(D)
add_class(d)
add_call_chain(<<a,C,INTEGER,b,C>>)
add_attribute("c", "a", "INTEGER")
add_call_chain(<<c,b,C,d,c,e,d>>)
add_command("c", "a", <<["C", "D"]>>)
int_value (31)
numerical_negation
add_call_chain(<<D,INTEGER,D,e,A,d,e,D,B>>)
add_call_chain(<<D,a,b,C,d,C,c>>)
multiplication
numerical_negation
add_class(B)
generate_java_code
generate_java_code
add_query("a", "b", <<["B", "C"], ["e", "D"], ["A", "INTEGER"], ["a", "BOOLEAN"], ["D", "INTEGER"], ["e", "BOOLEAN"], ["INTEGER", "C"], ["D", "INTEGER"], ["D", "INTEGER"]>>, "A")
bool_value (false)
add_command("C", "B", <<["D", "INTEGER"]>>)
add_attribute("c", "C", "INTEGER")
add_query("D", "C", <<["B", "INTEGER"], ["e", "INTEGER"], ["D", "A"]>>, "b")
add_query("d", "B", <<["A", "BOOLEAN"]>>, "BOOLEAN")
add_command("D", "INTEGER", <<["d", "BOOLEAN"], ["C", "e"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["A", "d"], ["D", "BOOLEAN"], ["A", "B"]>>)
add_call_chain(<<e,c>>)
addition
add_call_chain(<<d,A>>)
int_value (33)
add_query("INTEGER", "A", <<["BOOLEAN", "C"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["b", "b"]>>, "B")
conjunction
logical_negation
add_call_chain(<<b,INTEGER,e,e,a,B,d,INTEGER,A>>)
bool_value (false)
add_attribute("B", "a", "c")
add_call_chain(<<c,D,d,a,c,A,B,A>>)
add_query("e", "D", <<["c", "INTEGER"], ["b", "D"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["c", "a"], ["d", "b"], ["A", "INTEGER"]>>, "A")
logical_negation
add_class(B)
generate_java_code
add_attribute("B", "a", "BOOLEAN")
add_query("B", "A", <<["D", "BOOLEAN"], ["b", "INTEGER"]>>, "C")
type_check
type_check
subtraction
add_attribute("d", "d", "INTEGER")
add_class(A)
generate_java_code
type_check
type_check
add_command("INTEGER", "C", <<["BOOLEAN", "INTEGER"], ["b", "INTEGER"], ["c", "INTEGER"], ["b", "C"], ["D", "b"], ["b", "BOOLEAN"]>>)
add_call_chain(<<b>>)
add_query("D", "D", <<["b", "INTEGER"], ["d", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "BOOLEAN"]>>, "e")
numerical_negation
int_value (4)
add_command("INTEGER", "BOOLEAN", <<["D", "BOOLEAN"], ["d", "d"]>>)
add_call_chain(<<D,e,B>>)
type_check
add_call_chain(<<b,INTEGER,c,D>>)
logical_negation
numerical_negation
logical_negation
add_command("A", "a", <<["c", "BOOLEAN"], ["c", "BOOLEAN"], ["d", "A"]>>)
add_command("D", "c", <<["INTEGER", "BOOLEAN"], ["A", "INTEGER"], ["b", "INTEGER"], ["C", "BOOLEAN"]>>)
add_attribute("d", "e", "INTEGER")
add_call_chain(<<e>>)
add_call_chain(<<A,c>>)
int_value (39)
add_class(c)
numerical_negation
type_check
add_call_chain(<<a,c,BOOLEAN,b,B,C,c,A>>)
logical_negation
add_attribute("d", "A", "BOOLEAN")
modulo
add_call_chain(<<C,INTEGER,a>>)
add_attribute("a", "A", "INTEGER")
add_command("B", "a", <<["e", "INTEGER"], ["d", "INTEGER"], ["C", "BOOLEAN"]>>)
add_query("d", "d", <<["D", "BOOLEAN"], ["e", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["c", "B"]>>, "b")
add_attribute("BOOLEAN", "B", "BOOLEAN")
type_check
add_attribute("INTEGER", "a", "d")
add_call_chain(<<e,b,e,c,C,C,c>>)
