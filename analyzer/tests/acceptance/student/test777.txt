conjunction
add_query("e", "B", <<["INTEGER", "BOOLEAN"], ["INTEGER", "a"], ["C", "INTEGER"], ["c", "INTEGER"], ["b", "INTEGER"], ["a", "INTEGER"], ["C", "BOOLEAN"], ["A", "D"]>>, "d")
add_call_chain(<<C,a>>)
int_value (16)
add_query("C", "c", <<["d", "BOOLEAN"], ["c", "BOOLEAN"], ["c", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["c", "INTEGER"], ["c", "A"]>>, "d")
int_value (30)
add_attribute("a", "c", "BOOLEAN")
add_query("e", "B", <<["B", "INTEGER"], ["d", "INTEGER"]>>, "B")
numerical_negation
add_call_chain(<<BOOLEAN,a,INTEGER,C,b,e,B>>)
logical_negation
multiplication
less_than
add_command("B", "INTEGER", <<["D", "INTEGER"], ["D", "BOOLEAN"], ["b", "INTEGER"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["C", "b"]>>)
add_query("b", "B", <<["D", "A"], ["BOOLEAN", "INTEGER"], ["B", "INTEGER"], ["e", "BOOLEAN"], ["A", "a"], ["e", "C"], ["e", "BOOLEAN"], ["b", "INTEGER"], ["D", "D"]>>, "C")
int_value (33)
type_check
add_attribute("d", "a", "BOOLEAN")
add_call_chain(<<INTEGER,B,c>>)
equals
multiplication
add_query("d", "a", <<["c", "INTEGER"]>>, "C")
add_call_chain(<<D,D,a,c,c,a>>)
add_query("c", "B", <<["b", "BOOLEAN"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["D", "e"]>>, "D")
add_class(A)
bool_value (true)
int_value (15)
add_command("c", "D", <<["BOOLEAN", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["c", "BOOLEAN"], ["d", "D"], ["b", "d"], ["D", "BOOLEAN"], ["e", "INTEGER"]>>)
equals
add_query("A", "INTEGER", <<["a", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "B"], ["B", "BOOLEAN"]>>, "e")
add_class(D)
bool_value (false)
bool_value (false)
quotient
add_call_chain(<<B,D,b,B,C,A>>)
add_call_chain(<<B,d,a,a,B,B,b>>)
int_value (38)
bool_value (true)
modulo
add_query("b", "D", <<["C", "INTEGER"], ["b", "BOOLEAN"], ["B", "INTEGER"]>>, "B")
multiplication
numerical_negation
disjunction
add_attribute("A", "A", "BOOLEAN")
int_value (17)
greater_than
add_class(d)
add_call_chain(<<b,e,A>>)
int_value (42)
int_value (8)
logical_negation
add_command("a", "A", <<["B", "BOOLEAN"], ["c", "INTEGER"], ["b", "BOOLEAN"], ["a", "INTEGER"], ["d", "B"]>>)
logical_negation
add_command("BOOLEAN", "B", <<["b", "B"], ["b", "INTEGER"], ["e", "BOOLEAN"], ["b", "INTEGER"], ["C", "INTEGER"], ["d", "INTEGER"], ["a", "INTEGER"]>>)
numerical_negation
add_class(A)
add_call_chain(<<INTEGER>>)
add_query("a", "d", <<["C", "INTEGER"], ["B", "INTEGER"], ["c", "INTEGER"], ["BOOLEAN", "c"], ["B", "INTEGER"], ["e", "BOOLEAN"], ["D", "INTEGER"]>>, "c")
add_command("c", "C", <<["b", "BOOLEAN"], ["d", "INTEGER"]>>)
addition
less_than
int_value (5)
add_command("B", "b", <<["b", "BOOLEAN"], ["b", "e"], ["B", "INTEGER"], ["d", "a"], ["B", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "BOOLEAN"]>>)
add_class(A)
add_attribute("A", "c", "INTEGER")
bool_value (false)
add_query("BOOLEAN", "D", <<["d", "INTEGER"], ["a", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["D", "INTEGER"]>>, "b")
add_call_chain(<<e,e,e,e,c,D,D,c>>)
bool_value (false)
add_query("D", "B", <<["c", "b"], ["D", "INTEGER"]>>, "B")
quotient
logical_negation
int_value (31)
logical_negation
bool_value (false)
numerical_negation
int_value (48)
add_query("d", "B", <<["B", "INTEGER"], ["c", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "D"], ["d", "A"], ["A", "d"]>>, "e")
int_value (4)
int_value (5)
add_call_chain(<<C,b,a,D,b,b>>)
int_value (15)
add_attribute("BOOLEAN", "A", "BOOLEAN")
numerical_negation
logical_negation
add_class(c)
add_query("D", "A", <<["d", "BOOLEAN"], ["a", "e"], ["a", "d"], ["A", "A"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "a"], ["e", "INTEGER"]>>, "a")
add_call_chain(<<e,c,d,D>>)
multiplication
type_check
numerical_negation
add_call_chain(<<C>>)
add_command("b", "A", <<["BOOLEAN", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["d", "a"], ["D", "BOOLEAN"], ["c", "BOOLEAN"], ["e", "INTEGER"], ["c", "b"], ["e", "BOOLEAN"]>>)
add_call_chain(<<C,D,C>>)
conjunction
bool_value (true)
add_call_chain(<<d,BOOLEAN,B,d,e,B,e,INTEGER>>)
add_attribute("B", "d", "BOOLEAN")
add_command("A", "D", <<["C", "BOOLEAN"], ["C", "c"], ["A", "INTEGER"], ["d", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>)
add_call_chain(<<C,D,c,D,a,D,b,a>>)
quotient
numerical_negation
generate_java_code
add_call_chain(<<c,b,c,B,C,BOOLEAN,C>>)
type_check
add_command("e", "e", <<["C", "INTEGER"], ["e", "b"], ["B", "INTEGER"], ["C", "b"]>>)
add_call_chain(<<D,D,b,B,e,b,b,D,e>>)
add_call_chain(<<B,A,d,B>>)
add_query("B", "C", <<["C", "INTEGER"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["A", "a"], ["D", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>, "INTEGER")
conjunction
numerical_negation
add_attribute("D", "B", "BOOLEAN")
add_call_chain(<<A,C,D,BOOLEAN,e,d,A>>)
int_value (17)
add_attribute("INTEGER", "c", "b")
greater_than
add_call_chain(<<c,c,B,BOOLEAN,INTEGER,b,B>>)
logical_negation
add_attribute("D", "a", "BOOLEAN")
type_check
add_query("b", "BOOLEAN", <<["d", "D"], ["e", "BOOLEAN"], ["c", "INTEGER"], ["a", "C"], ["BOOLEAN", "INTEGER"], ["BOOLEAN", "d"], ["B", "INTEGER"], ["A", "INTEGER"]>>, "C")
add_call_chain(<<b,e,B,D,a,e>>)
numerical_negation
add_call_chain(<<B,c,c,B,B,C,e>>)
logical_negation
addition
multiplication
add_query("BOOLEAN", "D", <<["a", "INTEGER"], ["e", "A"]>>, "C")
type_check
disjunction
add_class(d)
add_command("a", "B", <<["A", "INTEGER"], ["b", "INTEGER"], ["A", "C"], ["INTEGER", "INTEGER"], ["e", "INTEGER"], ["e", "C"]>>)
add_call_chain(<<C,A>>)
type_check
add_query("b", "b", <<["C", "B"], ["BOOLEAN", "INTEGER"], ["B", "INTEGER"], ["a", "INTEGER"], ["a", "B"], ["b", "BOOLEAN"], ["c", "BOOLEAN"], ["d", "INTEGER"]>>, "a")
add_command("B", "d", <<["a", "INTEGER"], ["e", "BOOLEAN"], ["d", "INTEGER"]>>)
add_attribute("b", "b", "BOOLEAN")
int_value (40)
add_query("c", "a", <<["d", "INTEGER"], ["C", "A"], ["B", "BOOLEAN"], ["C", "d"], ["e", "INTEGER"]>>, "D")
type_check
type_check
add_command("a", "d", <<["C", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["b", "BOOLEAN"], ["D", "d"], ["d", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "INTEGER"]>>)
add_attribute("B", "A", "BOOLEAN")
bool_value (true)
add_call_chain(<<D,d,C,B,a,C>>)
add_command("e", "e", <<["INTEGER", "b"], ["B", "INTEGER"], ["B", "INTEGER"], ["a", "BOOLEAN"], ["INTEGER", "B"]>>)
add_command("C", "D", <<["B", "INTEGER"], ["D", "BOOLEAN"], ["C", "c"], ["c", "INTEGER"], ["d", "BOOLEAN"], ["D", "BOOLEAN"]>>)
add_query("e", "a", <<["a", "BOOLEAN"], ["A", "b"]>>, "D")
add_command("d", "INTEGER", <<["BOOLEAN", "INTEGER"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "INTEGER"], ["c", "e"], ["d", "c"]>>)
add_command("C", "INTEGER", <<["B", "b"], ["A", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "INTEGER"], ["D", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>)
bool_value (true)
type_check
add_query("D", "B", <<["A", "BOOLEAN"], ["A", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["d", "e"], ["A", "INTEGER"]>>, "e")
add_query("B", "A", <<["b", "INTEGER"]>>, "d")
type_check
numerical_negation
int_value (30)
greater_than
add_class(e)
conjunction
add_command("C", "c", <<["C", "BOOLEAN"], ["c", "D"], ["B", "BOOLEAN"], ["D", "BOOLEAN"]>>)
numerical_negation
add_call_chain(<<C,B,c,D,C,C,a,C>>)
add_query("A", "a", <<["B", "C"], ["e", "BOOLEAN"], ["C", "c"], ["A", "BOOLEAN"]>>, "BOOLEAN")
add_call_chain(<<INTEGER,D,d,b,A,d,D>>)
add_command("D", "B", <<["C", "D"]>>)
add_call_chain(<<c,D,C,c,c,e,B,D>>)
add_call_chain(<<d,A>>)
add_attribute("B", "BOOLEAN", "BOOLEAN")
int_value (13)
add_call_chain(<<C,INTEGER,b,INTEGER,c,B,d,e,D>>)
add_command("C", "A", <<["C", "INTEGER"]>>)
add_attribute("d", "a", "INTEGER")
add_command("a", "C", <<["c", "INTEGER"]>>)
generate_java_code
add_attribute("c", "BOOLEAN", "BOOLEAN")
add_attribute("e", "d", "INTEGER")
add_attribute("e", "b", "INTEGER")
generate_java_code
add_attribute("INTEGER", "INTEGER", "BOOLEAN")
add_query("D", "A", <<["B", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["INTEGER", "INTEGER"], ["A", "C"]>>, "A")
add_attribute("C", "c", "INTEGER")
add_call_chain(<<BOOLEAN,D>>)
disjunction
add_class(C)
equals
add_command("B", "B", <<["c", "INTEGER"], ["D", "D"]>>)
add_call_chain(<<C,b,a,c,c,e,C>>)
add_command("C", "b", <<["c", "INTEGER"], ["D", "INTEGER"], ["e", "BOOLEAN"], ["A", "INTEGER"]>>)
int_value (34)
bool_value (false)
logical_negation
add_query("e", "D", <<["d", "INTEGER"]>>, "BOOLEAN")
multiplication
type_check
add_call_chain(<<c,d,b>>)
add_class(e)
generate_java_code
add_query("D", "a", <<["B", "C"]>>, "A")
add_class(A)
add_class(B)
bool_value (false)
add_call_chain(<<A,e,c>>)
add_attribute("A", "D", "INTEGER")
int_value (19)
quotient
generate_java_code
greater_than
add_query("D", "D", <<["A", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "e"]>>, "D")
add_command("C", "B", <<["d", "INTEGER"], ["e", "INTEGER"], ["b", "c"], ["d", "INTEGER"], ["a", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
add_class(d)
type_check
logical_negation
add_call_chain(<<A>>)
numerical_negation
add_command("b", "b", <<["b", "d"]>>)
numerical_negation
conjunction
conjunction
int_value (14)
multiplication
add_call_chain(<<BOOLEAN,A>>)
add_command("a", "d", <<["b", "INTEGER"]>>)
add_attribute("C", "c", "INTEGER")
bool_value (false)
generate_java_code
add_class(c)
bool_value (false)
int_value (44)
add_command("a", "c", <<["e", "INTEGER"], ["B", "INTEGER"], ["C", "BOOLEAN"], ["d", "BOOLEAN"], ["INTEGER", "INTEGER"]>>)
add_call_chain(<<D,B>>)
