numerical_negation
int_value (9)
add_query("INTEGER", "D", <<["B", "C"], ["C", "INTEGER"], ["INTEGER", "INTEGER"], ["d", "INTEGER"], ["a", "INTEGER"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "BOOLEAN"]>>, "b")
numerical_negation
logical_negation
int_value (24)
add_query("B", "C", <<["A", "c"], ["B", "b"], ["c", "INTEGER"], ["C", "INTEGER"], ["c", "BOOLEAN"]>>, "b")
add_call_chain(<<C,INTEGER,B,d>>)
add_command("a", "B", <<["D", "BOOLEAN"], ["d", "INTEGER"], ["C", "INTEGER"], ["d", "BOOLEAN"], ["b", "INTEGER"], ["b", "BOOLEAN"]>>)
logical_negation
type_check
add_attribute("a", "D", "INTEGER")
less_than
int_value (4)
type_check
bool_value (false)
add_query("INTEGER", "c", <<["a", "BOOLEAN"]>>, "b")
add_command("c", "INTEGER", <<["D", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "A"], ["c", "c"]>>)
modulo
subtraction
add_call_chain(<<C,B,D,e,BOOLEAN>>)
bool_value (false)
generate_java_code
add_class(a)
less_than
type_check
add_attribute("C", "A", "BOOLEAN")
numerical_negation
add_query("b", "C", <<["d", "b"], ["A", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "B"], ["c", "c"]>>, "D")
add_call_chain(<<a,C,D,e,B,C,INTEGER>>)
add_class(a)
numerical_negation
add_command("e", "B", <<["a", "D"], ["d", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["a", "INTEGER"], ["B", "A"]>>)
add_command("B", "d", <<["A", "BOOLEAN"], ["b", "BOOLEAN"], ["e", "INTEGER"]>>)
type_check
add_call_chain(<<b,b,c,b,C,D>>)
subtraction
bool_value (true)
numerical_negation
generate_java_code
add_command("e", "c", <<["c", "INTEGER"], ["C", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "C"], ["e", "A"], ["INTEGER", "BOOLEAN"]>>)
add_call_chain(<<B,e>>)
addition
int_value (10)
add_command("A", "A", <<["D", "BOOLEAN"], ["e", "INTEGER"]>>)
generate_java_code
numerical_negation
add_call_chain(<<C,e,C,b,b>>)
conjunction
add_call_chain(<<INTEGER>>)
greater_than
logical_negation
add_call_chain(<<C,d,d,D>>)
add_call_chain(<<BOOLEAN,d,c,d,b,d>>)
addition
generate_java_code
add_query("c", "c", <<["b", "b"], ["A", "BOOLEAN"], ["A", "INTEGER"], ["INTEGER", "b"], ["A", "INTEGER"], ["d", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "d"]>>, "A")
add_call_chain(<<a>>)
add_call_chain(<<d,BOOLEAN,c,c,b>>)
int_value (33)
type_check
add_attribute("b", "d", "D")
add_command("A", "D", <<["c", "e"], ["A", "A"], ["d", "INTEGER"], ["A", "a"], ["INTEGER", "BOOLEAN"], ["A", "INTEGER"], ["C", "D"]>>)
bool_value (false)
generate_java_code
quotient
bool_value (true)
add_attribute("D", "a", "D")
logical_negation
add_attribute("c", "c", "e")
add_command("D", "D", <<["INTEGER", "BOOLEAN"], ["C", "INTEGER"], ["b", "A"], ["b", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["c", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["D", "b"]>>)
add_command("b", "B", <<["e", "INTEGER"]>>)
logical_negation
less_than
bool_value (true)
add_call_chain(<<d,D,a,a,b,c,A,b>>)
generate_java_code
generate_java_code
add_attribute("d", "C", "BOOLEAN")
add_call_chain(<<C,c,B,INTEGER,A,D,c,e>>)
add_call_chain(<<C,D,e,a,d,b,D>>)
type_check
add_command("c", "d", <<["BOOLEAN", "BOOLEAN"], ["B", "a"], ["C", "INTEGER"]>>)
add_query("B", "BOOLEAN", <<["D", "BOOLEAN"], ["e", "b"], ["BOOLEAN", "INTEGER"], ["d", "D"], ["INTEGER", "BOOLEAN"], ["c", "d"]>>, "A")
type_check
add_attribute("d", "A", "INTEGER")
add_call_chain(<<e,e,C,d,B,c,C,C,C>>)
add_call_chain(<<B,BOOLEAN>>)
add_query("D", "A", <<["B", "INTEGER"], ["c", "A"], ["INTEGER", "BOOLEAN"]>>, "C")
logical_negation
bool_value (true)
type_check
add_call_chain(<<c,C,a,e,B,C,B,c>>)
bool_value (true)
add_query("A", "e", <<["B", "INTEGER"], ["C", "c"], ["C", "BOOLEAN"], ["A", "c"], ["c", "c"], ["b", "BOOLEAN"]>>, "e")
add_class(c)
numerical_negation
add_command("INTEGER", "b", <<["D", "c"], ["e", "D"], ["INTEGER", "BOOLEAN"], ["D", "B"], ["e", "d"], ["b", "BOOLEAN"], ["C", "INTEGER"]>>)
numerical_negation
add_query("B", "BOOLEAN", <<["D", "BOOLEAN"]>>, "INTEGER")
logical_negation
add_query("D", "B", <<["a", "INTEGER"], ["a", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "INTEGER"]>>, "C")
numerical_negation
int_value (21)
int_value (11)
add_class(d)
bool_value (true)
add_attribute("B", "C", "BOOLEAN")
int_value (10)
add_call_chain(<<b,a,D,d,A,A,D,BOOLEAN>>)
numerical_negation
add_command("A", "D", <<["a", "INTEGER"]>>)
add_query("a", "D", <<["e", "INTEGER"], ["D", "INTEGER"], ["e", "D"], ["a", "INTEGER"], ["b", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "INTEGER"]>>, "B")
numerical_negation
add_call_chain(<<BOOLEAN,b,A,d,A,A,a,e>>)
type_check
add_query("B", "C", <<["A", "INTEGER"], ["A", "INTEGER"], ["A", "e"], ["B", "D"]>>, "B")
add_attribute("d", "INTEGER", "INTEGER")
numerical_negation
conjunction
add_attribute("C", "B", "INTEGER")
multiplication
bool_value (true)
int_value (24)
add_attribute("B", "B", "INTEGER")
add_query("C", "BOOLEAN", <<["INTEGER", "b"], ["c", "INTEGER"], ["e", "INTEGER"]>>, "e")
add_call_chain(<<B>>)
disjunction
numerical_negation
add_query("C", "A", <<["BOOLEAN", "BOOLEAN"]>>, "INTEGER")
int_value (38)
bool_value (false)
add_call_chain(<<B>>)
type_check
numerical_negation
add_command("D", "A", <<["b", "BOOLEAN"], ["INTEGER", "A"]>>)
generate_java_code
logical_negation
disjunction
conjunction
int_value (42)
conjunction
add_query("C", "INTEGER", <<["d", "BOOLEAN"], ["B", "INTEGER"], ["d", "BOOLEAN"], ["B", "d"], ["c", "BOOLEAN"], ["d", "INTEGER"], ["c", "INTEGER"], ["B", "B"]>>, "A")
add_query("C", "A", <<["A", "BOOLEAN"], ["b", "c"], ["INTEGER", "c"], ["e", "BOOLEAN"], ["c", "BOOLEAN"]>>, "D")
add_call_chain(<<e,C,A,a>>)
logical_negation
bool_value (true)
numerical_negation
modulo
subtraction
add_attribute("A", "e", "d")
bool_value (false)
add_call_chain(<<C,INTEGER,b,B,INTEGER,b,B>>)
add_command("B", "A", <<["d", "b"], ["A", "d"], ["c", "INTEGER"], ["D", "BOOLEAN"], ["B", "BOOLEAN"]>>)
add_call_chain(<<B,C,d,c>>)
add_query("c", "C", <<["D", "INTEGER"], ["C", "INTEGER"], ["b", "d"], ["D", "INTEGER"], ["B", "INTEGER"], ["e", "a"], ["a", "INTEGER"], ["B", "BOOLEAN"], ["C", "a"]>>, "d")
disjunction
add_query("D", "BOOLEAN", <<["a", "INTEGER"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["e", "BOOLEAN"], ["d", "INTEGER"], ["a", "INTEGER"]>>, "b")
logical_negation
add_attribute("d", "D", "INTEGER")
greater_than
conjunction
add_attribute("c", "c", "BOOLEAN")
greater_than
add_call_chain(<<BOOLEAN,a,b,INTEGER,C,D,a,C,B>>)
int_value (40)
add_command("D", "D", <<["a", "INTEGER"], ["b", "INTEGER"]>>)
bool_value (true)
bool_value (true)
add_command("C", "d", <<["D", "BOOLEAN"], ["c", "INTEGER"], ["D", "BOOLEAN"], ["C", "INTEGER"]>>)
add_class(c)
add_attribute("a", "INTEGER", "BOOLEAN")
int_value (22)
generate_java_code
numerical_negation
add_attribute("B", "B", "INTEGER")
add_class(C)
bool_value (false)
bool_value (true)
add_query("e", "d", <<["d", "C"], ["a", "INTEGER"], ["B", "B"]>>, "C")
add_command("a", "C", <<["B", "INTEGER"]>>)
type_check
disjunction
add_call_chain(<<c>>)
add_call_chain(<<C,a,d,e>>)
conjunction
conjunction
conjunction
multiplication
logical_negation
bool_value (false)
add_query("D", "C", <<["c", "B"], ["B", "INTEGER"]>>, "B")
add_command("b", "D", <<["B", "c"], ["c", "b"]>>)
bool_value (false)
add_call_chain(<<INTEGER,b,c,e,e>>)
bool_value (true)
add_call_chain(<<d,D,b,a,e,a>>)
int_value (47)
add_call_chain(<<A,a,A,D,B,b,A,A,C>>)
