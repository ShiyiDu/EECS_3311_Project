add_command("B", "B", <<["INTEGER", "INTEGER"], ["e", "INTEGER"]>>)
add_call_chain(<<D,b,e>>)
type_check
quotient
add_command("b", "D", <<["c", "INTEGER"], ["d", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>)
numerical_negation
add_class(INTEGER)
add_attribute("BOOLEAN", "C", "INTEGER")
add_call_chain(<<D,BOOLEAN,e,A,D,c,C>>)
int_value (33)
type_check
logical_negation
add_call_chain(<<B,b,D,a,D>>)
greater_than
add_attribute("a", "A", "B")
numerical_negation
add_call_chain(<<b,B,D,D,C,A,D,BOOLEAN,B>>)
logical_negation
add_class(e)
int_value (14)
subtraction
add_call_chain(<<BOOLEAN,d,e,a,D,C,B,a,c>>)
add_attribute("c", "b", "BOOLEAN")
int_value (27)
add_call_chain(<<A,e,D,INTEGER,B,C,e,BOOLEAN,c>>)
multiplication
numerical_negation
add_query("C", "e", <<["D", "INTEGER"], ["C", "BOOLEAN"], ["INTEGER", "d"]>>, "d")
add_query("a", "a", <<["d", "BOOLEAN"], ["D", "A"], ["e", "INTEGER"], ["c", "BOOLEAN"], ["A", "INTEGER"], ["b", "INTEGER"], ["BOOLEAN", "e"], ["c", "INTEGER"], ["D", "D"]>>, "a")
add_command("e", "B", <<["D", "B"], ["D", "c"], ["D", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["a", "BOOLEAN"], ["D", "INTEGER"], ["b", "D"], ["c", "BOOLEAN"]>>)
add_command("A", "e", <<["b", "INTEGER"], ["a", "INTEGER"], ["c", "d"], ["A", "INTEGER"], ["e", "INTEGER"], ["A", "B"], ["b", "INTEGER"], ["c", "BOOLEAN"]>>)
add_query("BOOLEAN", "D", <<["e", "BOOLEAN"], ["e", "BOOLEAN"], ["a", "INTEGER"], ["e", "BOOLEAN"]>>, "d")
type_check
add_call_chain(<<d,e,INTEGER,d,a,BOOLEAN>>)
disjunction
add_call_chain(<<BOOLEAN,a,b,e,B,D,D,A>>)
int_value (16)
add_call_chain(<<D,A,C,C,C,B,C>>)
add_attribute("e", "B", "INTEGER")
add_call_chain(<<a,c,BOOLEAN,INTEGER,a,INTEGER>>)
numerical_negation
less_than
int_value (35)
add_attribute("C", "a", "BOOLEAN")
logical_negation
add_query("A", "C", <<["d", "A"], ["D", "D"], ["e", "INTEGER"], ["B", "e"]>>, "A")
int_value (27)
add_command("INTEGER", "A", <<["b", "INTEGER"], ["D", "BOOLEAN"], ["A", "BOOLEAN"]>>)
add_command("C", "D", <<["D", "INTEGER"], ["d", "INTEGER"], ["e", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "C"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["b", "BOOLEAN"], ["d", "B"]>>)
add_attribute("b", "d", "INTEGER")
logical_negation
equals
add_command("C", "A", <<["a", "b"], ["d", "D"], ["A", "INTEGER"]>>)
logical_negation
add_command("d", "c", <<["d", "INTEGER"], ["A", "a"], ["a", "A"]>>)
numerical_negation
bool_value (false)
add_query("b", "e", <<["C", "A"], ["a", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["A", "INTEGER"]>>, "C")
bool_value (false)
logical_negation
add_call_chain(<<b,A,a,A,C,a,INTEGER,C>>)
add_call_chain(<<d,C,C,C,b>>)
generate_java_code
add_call_chain(<<d,b,B,d,c,c,D>>)
add_query("INTEGER", "a", <<["b", "INTEGER"], ["B", "d"], ["a", "e"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "INTEGER"]>>, "B")
add_class(B)
add_class(d)
bool_value (false)
add_query("c", "a", <<["c", "a"]>>, "BOOLEAN")
add_command("D", "C", <<["e", "INTEGER"], ["a", "BOOLEAN"], ["c", "INTEGER"], ["d", "BOOLEAN"], ["INTEGER", "INTEGER"], ["D", "C"], ["A", "C"]>>)
add_call_chain(<<B>>)
type_check
add_attribute("D", "d", "BOOLEAN")
add_attribute("INTEGER", "e", "BOOLEAN")
add_call_chain(<<INTEGER,INTEGER,a,e,A>>)
generate_java_code
add_call_chain(<<d,e,INTEGER,C,b,INTEGER>>)
logical_negation
add_query("BOOLEAN", "B", <<["INTEGER", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["c", "BOOLEAN"]>>, "INTEGER")
add_command("D", "C", <<["C", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "A"], ["INTEGER", "INTEGER"], ["e", "INTEGER"], ["C", "BOOLEAN"], ["B", "B"]>>)
logical_negation
add_call_chain(<<b>>)
equals
add_query("b", "C", <<["b", "INTEGER"], ["C", "e"], ["BOOLEAN", "INTEGER"], ["d", "e"], ["INTEGER", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["A", "INTEGER"]>>, "B")
bool_value (true)
type_check
add_call_chain(<<INTEGER,BOOLEAN,INTEGER,D,e,A,c>>)
int_value (14)
bool_value (true)
add_attribute("e", "b", "BOOLEAN")
type_check
add_query("D", "a", <<["e", "INTEGER"], ["a", "BOOLEAN"], ["c", "e"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "BOOLEAN"]>>, "b")
numerical_negation
add_class(D)
add_attribute("A", "A", "d")
add_attribute("d", "a", "INTEGER")
add_query("B", "BOOLEAN", <<["B", "INTEGER"], ["d", "BOOLEAN"], ["b", "INTEGER"], ["b", "d"], ["c", "INTEGER"], ["a", "BOOLEAN"], ["C", "a"]>>, "B")
add_call_chain(<<d,c>>)
numerical_negation
add_call_chain(<<A,b,C,BOOLEAN,BOOLEAN,c,D,d,A>>)
add_attribute("c", "c", "D")
add_query("e", "A", <<["b", "B"], ["BOOLEAN", "e"], ["INTEGER", "C"], ["C", "A"], ["C", "BOOLEAN"], ["B", "c"], ["D", "INTEGER"]>>, "a")
type_check
add_attribute("C", "D", "INTEGER")
int_value (41)
add_attribute("B", "d", "BOOLEAN")
add_query("D", "e", <<["e", "BOOLEAN"], ["d", "INTEGER"], ["D", "INTEGER"], ["B", "INTEGER"], ["B", "BOOLEAN"], ["c", "INTEGER"]>>, "D")
add_query("c", "e", <<["c", "c"], ["D", "BOOLEAN"]>>, "c")
logical_negation
int_value (17)
int_value (39)
add_class(B)
add_attribute("BOOLEAN", "C", "BOOLEAN")
logical_negation
logical_negation
logical_negation
conjunction
generate_java_code
generate_java_code
add_call_chain(<<A,a,A,BOOLEAN,d>>)
greater_than
int_value (35)
add_command("a", "C", <<["C", "INTEGER"], ["b", "e"], ["B", "INTEGER"]>>)
numerical_negation
add_attribute("D", "C", "INTEGER")
conjunction
int_value (23)
add_attribute("B", "b", "INTEGER")
add_call_chain(<<D,A,e,D>>)
add_query("B", "e", <<["A", "BOOLEAN"], ["BOOLEAN", "B"], ["INTEGER", "BOOLEAN"], ["a", "INTEGER"], ["C", "a"], ["c", "b"]>>, "c")
add_command("C", "D", <<["c", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "BOOLEAN"]>>)
add_query("d", "b", <<["a", "D"], ["A", "INTEGER"], ["A", "INTEGER"], ["INTEGER", "BOOLEAN"]>>, "BOOLEAN")
type_check
add_call_chain(<<INTEGER,a>>)
add_query("c", "A", <<["c", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "INTEGER"], ["INTEGER", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>, "e")
add_attribute("a", "b", "INTEGER")
add_attribute("c", "b", "BOOLEAN")
add_attribute("C", "e", "BOOLEAN")
int_value (40)
add_query("BOOLEAN", "d", <<["INTEGER", "INTEGER"], ["C", "INTEGER"], ["B", "a"], ["e", "INTEGER"], ["C", "INTEGER"], ["C", "A"], ["b", "INTEGER"]>>, "A")
generate_java_code
add_command("a", "BOOLEAN", <<["D", "INTEGER"], ["d", "BOOLEAN"], ["d", "INTEGER"], ["D", "INTEGER"], ["b", "e"]>>)
generate_java_code
add_call_chain(<<a,A,D,e,INTEGER>>)
logical_negation
add_call_chain(<<B,INTEGER,D>>)
add_call_chain(<<b,B,B,C,A>>)
add_class(d)
add_class(c)
add_attribute("c", "A", "B")
less_than
bool_value (false)
add_attribute("a", "e", "A")
numerical_negation
add_query("b", "d", <<["b", "BOOLEAN"], ["C", "a"], ["A", "B"], ["c", "c"], ["D", "INTEGER"]>>, "C")
add_call_chain(<<A,B,c,D,d>>)
add_command("d", "INTEGER", <<["c", "c"], ["e", "INTEGER"], ["b", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["e", "INTEGER"], ["BOOLEAN", "B"]>>)
less_than
add_class(BOOLEAN)
add_call_chain(<<A,d,c,b>>)
addition
add_call_chain(<<a,A>>)
disjunction
add_call_chain(<<D,c,d,c,d,C,BOOLEAN,INTEGER,A>>)
int_value (22)
conjunction
add_call_chain(<<A,d,a,e,C,INTEGER,e,e>>)
logical_negation
logical_negation
logical_negation
add_command("d", "B", <<["d", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["a", "d"], ["C", "C"], ["c", "BOOLEAN"]>>)
bool_value (true)
addition
int_value (25)
add_query("a", "e", <<["D", "BOOLEAN"], ["INTEGER", "INTEGER"], ["e", "INTEGER"], ["e", "INTEGER"], ["D", "B"], ["B", "INTEGER"], ["c", "e"], ["A", "BOOLEAN"], ["c", "BOOLEAN"]>>, "B")
add_call_chain(<<C,c,C,D,d,D>>)
add_command("c", "C", <<["b", "a"], ["INTEGER", "INTEGER"], ["e", "BOOLEAN"], ["A", "INTEGER"]>>)
bool_value (true)
add_command("c", "INTEGER", <<["B", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "C"]>>)
add_call_chain(<<d,c,b,A,c,A,D,C>>)
numerical_negation
logical_negation
numerical_negation
add_command("C", "e", <<["e", "INTEGER"], ["a", "a"], ["c", "BOOLEAN"], ["b", "b"], ["e", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["c", "BOOLEAN"]>>)
add_call_chain(<<C>>)
add_class(C)
logical_negation
add_call_chain(<<b,C,C,A>>)
type_check
modulo
int_value (1)
add_attribute("A", "d", "INTEGER")
int_value (34)
int_value (9)
int_value (31)
conjunction
add_attribute("a", "INTEGER", "e")
add_query("D", "a", <<["d", "BOOLEAN"]>>, "C")
add_class(A)
modulo
int_value (18)
add_command("b", "a", <<["D", "INTEGER"], ["C", "d"], ["a", "e"], ["a", "INTEGER"], ["INTEGER", "e"], ["a", "D"]>>)
add_attribute("A", "e", "BOOLEAN")
add_call_chain(<<B,e,D,A,C>>)
greater_than
add_attribute("B", "D", "d")
less_than
numerical_negation
add_call_chain(<<d>>)
add_call_chain(<<D,INTEGER,B,e,C,B,a,A,A>>)
add_call_chain(<<B,BOOLEAN,C,c>>)
bool_value (false)
add_query("c", "B", <<["D", "BOOLEAN"], ["c", "d"], ["c", "B"]>>, "A")
add_command("A", "b", <<["C", "D"], ["A", "A"]>>)
add_command("e", "B", <<["d", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>)
logical_negation
logical_negation
disjunction
type_check
add_command("c", "B", <<["C", "A"], ["e", "c"], ["INTEGER", "BOOLEAN"], ["C", "D"], ["d", "INTEGER"]>>)
add_attribute("B", "e", "BOOLEAN")
add_attribute("d", "e", "INTEGER")
add_command("INTEGER", "INTEGER", <<["A", "B"], ["D", "A"]>>)
bool_value (false)
add_call_chain(<<B,A>>)
bool_value (true)
add_call_chain(<<b,A,e,b,e>>)
numerical_negation
generate_java_code
add_query("b", "BOOLEAN", <<["A", "INTEGER"], ["e", "e"], ["c", "INTEGER"]>>, "B")
equals
add_call_chain(<<INTEGER,a,e,d,A,c,a>>)
generate_java_code
logical_negation
add_call_chain(<<A,e,INTEGER,B,a,INTEGER>>)
add_attribute("A", "D", "INTEGER")
modulo
numerical_negation
add_call_chain(<<a,A,A,b,B,c,BOOLEAN,D>>)
add_command("A", "d", <<["A", "BOOLEAN"]>>)
disjunction
bool_value (true)
bool_value (false)
less_than
add_query("B", "d", <<["c", "INTEGER"]>>, "D")
add_query("b", "e", <<["e", "A"]>>, "e")
add_call_chain(<<b,c,C>>)
less_than
generate_java_code
add_call_chain(<<D,BOOLEAN>>)
logical_negation
add_attribute("C", "a", "INTEGER")
addition
int_value (45)
