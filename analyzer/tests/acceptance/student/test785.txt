add_query("A", "a", <<["BOOLEAN", "INTEGER"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["b", "INTEGER"]>>, "D")
add_attribute("C", "c", "INTEGER")
disjunction
add_call_chain(<<B,D,D>>)
modulo
type_check
add_attribute("a", "INTEGER", "BOOLEAN")
add_call_chain(<<c>>)
add_command("A", "D", <<["a", "BOOLEAN"], ["d", "INTEGER"], ["B", "INTEGER"]>>)
add_command("INTEGER", "BOOLEAN", <<["C", "BOOLEAN"], ["a", "INTEGER"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>)
bool_value (true)
int_value (28)
quotient
numerical_negation
add_query("d", "BOOLEAN", <<["BOOLEAN", "INTEGER"], ["BOOLEAN", "INTEGER"]>>, "C")
numerical_negation
disjunction
bool_value (false)
add_call_chain(<<C,d,C,a,a,a,B>>)
bool_value (false)
add_class(c)
add_call_chain(<<e,A>>)
add_call_chain(<<INTEGER,e,a>>)
add_command("A", "A", <<["BOOLEAN", "INTEGER"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["A", "A"]>>)
add_attribute("B", "b", "BOOLEAN")
add_attribute("D", "C", "BOOLEAN")
generate_java_code
add_call_chain(<<b,A,c,B,C,INTEGER,b>>)
add_class(INTEGER)
add_command("B", "d", <<["c", "BOOLEAN"], ["B", "INTEGER"], ["A", "INTEGER"], ["INTEGER", "c"], ["a", "a"]>>)
greater_than
add_attribute("d", "c", "INTEGER")
add_attribute("A", "A", "BOOLEAN")
numerical_negation
add_attribute("b", "c", "BOOLEAN")
numerical_negation
generate_java_code
add_class(INTEGER)
add_call_chain(<<D,e,D>>)
add_call_chain(<<D,B,e,B,a,a,b,e,D>>)
int_value (13)
add_command("INTEGER", "b", <<["B", "c"]>>)
add_attribute("D", "C", "BOOLEAN")
bool_value (true)
generate_java_code
add_query("b", "C", <<["D", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["INTEGER", "e"]>>, "B")
int_value (20)
add_command("e", "C", <<["B", "BOOLEAN"], ["B", "INTEGER"], ["C", "INTEGER"], ["e", "INTEGER"]>>)
equals
add_attribute("c", "c", "INTEGER")
add_query("c", "e", <<["A", "BOOLEAN"], ["d", "a"], ["e", "BOOLEAN"], ["e", "INTEGER"], ["C", "INTEGER"], ["INTEGER", "B"], ["e", "b"]>>, "A")
add_command("C", "D", <<["c", "b"], ["INTEGER", "D"], ["d", "INTEGER"], ["D", "BOOLEAN"], ["B", "A"]>>)
add_command("C", "INTEGER", <<["e", "INTEGER"], ["b", "BOOLEAN"]>>)
add_attribute("C", "A", "INTEGER")
add_query("a", "C", <<["c", "INTEGER"], ["A", "BOOLEAN"], ["A", "B"], ["B", "BOOLEAN"]>>, "d")
add_command("e", "c", <<["e", "BOOLEAN"]>>)
generate_java_code
multiplication
bool_value (true)
type_check
add_call_chain(<<e,d>>)
generate_java_code
add_query("d", "d", <<["INTEGER", "INTEGER"], ["D", "INTEGER"], ["INTEGER", "d"], ["d", "e"], ["b", "INTEGER"], ["A", "INTEGER"], ["e", "INTEGER"], ["D", "b"], ["b", "INTEGER"]>>, "D")
greater_than
less_than
add_class(D)
add_query("b", "INTEGER", <<["d", "BOOLEAN"], ["C", "INTEGER"], ["INTEGER", "C"], ["a", "BOOLEAN"], ["d", "INTEGER"], ["e", "INTEGER"], ["a", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>, "a")
int_value (5)
add_attribute("C", "e", "INTEGER")
add_call_chain(<<BOOLEAN,A,BOOLEAN,C,C,a,e,INTEGER,b>>)
add_attribute("A", "D", "BOOLEAN")
add_class(D)
add_class(D)
add_command("D", "A", <<["A", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["B", "INTEGER"], ["d", "BOOLEAN"], ["c", "INTEGER"], ["B", "BOOLEAN"]>>)
add_call_chain(<<d,c,BOOLEAN,D>>)
add_query("e", "e", <<["D", "INTEGER"], ["d", "BOOLEAN"]>>, "INTEGER")
int_value (20)
subtraction
add_command("d", "c", <<["b", "INTEGER"], ["e", "INTEGER"], ["d", "b"], ["D", "BOOLEAN"], ["INTEGER", "INTEGER"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["a", "INTEGER"], ["B", "INTEGER"]>>)
logical_negation
conjunction
logical_negation
logical_negation
add_call_chain(<<c,d,A,C>>)
less_than
int_value (20)
bool_value (false)
add_query("e", "a", <<["B", "INTEGER"], ["a", "BOOLEAN"], ["INTEGER", "a"], ["B", "INTEGER"]>>, "B")
add_command("C", "A", <<["B", "D"], ["A", "D"], ["BOOLEAN", "D"], ["C", "BOOLEAN"], ["C", "c"], ["INTEGER", "c"], ["INTEGER", "BOOLEAN"], ["B", "a"], ["A", "BOOLEAN"]>>)
add_attribute("C", "D", "C")
add_class(C)
type_check
numerical_negation
add_command("B", "A", <<["a", "D"], ["INTEGER", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "c"], ["a", "INTEGER"], ["A", "INTEGER"]>>)
numerical_negation
greater_than
greater_than
add_query("C", "a", <<["D", "INTEGER"]>>, "e")
conjunction
add_call_chain(<<b,e,c,D,e,e,d>>)
conjunction
add_call_chain(<<b,b,A,B,INTEGER,C>>)
int_value (25)
add_call_chain(<<INTEGER,b,C,B>>)
add_attribute("b", "B", "C")
add_attribute("b", "a", "INTEGER")
bool_value (true)
logical_negation
add_attribute("INTEGER", "D", "INTEGER")
int_value (23)
add_query("e", "C", <<["e", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "INTEGER"], ["e", "BOOLEAN"], ["c", "BOOLEAN"]>>, "B")
quotient
conjunction
int_value (43)
add_command("a", "C", <<["e", "A"]>>)
add_query("C", "D", <<["b", "BOOLEAN"], ["b", "INTEGER"], ["BOOLEAN", "d"]>>, "D")
add_attribute("D", "d", "C")
add_call_chain(<<e,A,d,d,A,A,e>>)
logical_negation
add_command("b", "d", <<["D", "BOOLEAN"], ["B", "D"], ["BOOLEAN", "BOOLEAN"], ["b", "D"], ["D", "BOOLEAN"], ["INTEGER", "b"], ["A", "D"]>>)
logical_negation
add_command("C", "INTEGER", <<["C", "INTEGER"], ["b", "INTEGER"], ["d", "d"], ["INTEGER", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["C", "INTEGER"], ["e", "BOOLEAN"]>>)
add_command("e", "A", <<["b", "INTEGER"], ["a", "D"]>>)
add_attribute("BOOLEAN", "B", "BOOLEAN")
quotient
add_call_chain(<<BOOLEAN,C,INTEGER,C,c,e,A>>)
add_query("C", "b", <<["e", "BOOLEAN"], ["D", "INTEGER"]>>, "D")
equals
add_query("D", "e", <<["D", "d"], ["INTEGER", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "INTEGER"], ["INTEGER", "INTEGER"], ["e", "BOOLEAN"], ["B", "B"], ["c", "INTEGER"], ["A", "B"]>>, "d")
add_call_chain(<<INTEGER,e>>)
add_class(c)
add_class(d)
int_value (13)
generate_java_code
add_query("B", "INTEGER", <<["c", "BOOLEAN"], ["BOOLEAN", "C"], ["BOOLEAN", "D"], ["C", "BOOLEAN"], ["c", "BOOLEAN"]>>, "e")
add_call_chain(<<B,BOOLEAN,a,a,D,e,b,BOOLEAN>>)
add_call_chain(<<e,INTEGER,b,d,a,D>>)
generate_java_code
int_value (49)
add_command("a", "b", <<["a", "BOOLEAN"], ["e", "INTEGER"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["BOOLEAN", "INTEGER"], ["B", "B"], ["BOOLEAN", "a"]>>)
add_attribute("a", "A", "INTEGER")
generate_java_code
bool_value (true)
add_query("c", "D", <<["a", "INTEGER"], ["D", "INTEGER"], ["D", "INTEGER"], ["e", "INTEGER"]>>, "d")
modulo
greater_than
numerical_negation
logical_negation
add_query("D", "B", <<["a", "INTEGER"], ["e", "BOOLEAN"], ["d", "INTEGER"], ["C", "INTEGER"], ["c", "BOOLEAN"], ["D", "BOOLEAN"]>>, "d")
numerical_negation
numerical_negation
add_call_chain(<<D,b,A,D,A,C,D>>)
add_command("C", "b", <<["b", "INTEGER"], ["A", "BOOLEAN"], ["a", "c"], ["D", "B"], ["b", "BOOLEAN"], ["D", "A"], ["C", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>)
int_value (46)
add_attribute("b", "e", "e")
disjunction
numerical_negation
bool_value (false)
int_value (36)
add_query("c", "b", <<["D", "INTEGER"], ["b", "d"], ["A", "INTEGER"], ["C", "A"]>>, "a")
add_command("B", "B", <<["c", "BOOLEAN"], ["b", "BOOLEAN"], ["e", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["D", "e"], ["D", "D"]>>)
add_class(B)
conjunction
add_command("A", "INTEGER", <<["b", "BOOLEAN"], ["a", "BOOLEAN"]>>)
add_class(D)
generate_java_code
type_check
bool_value (false)
add_command("e", "a", <<["A", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "BOOLEAN"]>>)
add_query("d", "d", <<["A", "BOOLEAN"], ["INTEGER", "INTEGER"]>>, "c")
add_command("A", "c", <<["C", "C"], ["a", "b"], ["B", "INTEGER"]>>)
add_attribute("b", "INTEGER", "D")
bool_value (false)
type_check
int_value (46)
add_call_chain(<<B,d,C,b,D,C,B,c>>)
bool_value (true)
int_value (15)
add_command("D", "C", <<["A", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "e"], ["D", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["BOOLEAN", "D"]>>)
add_attribute("BOOLEAN", "INTEGER", "INTEGER")
bool_value (false)
logical_negation
add_call_chain(<<e,B,b,d,a,INTEGER,B,D,d>>)
add_attribute("D", "A", "A")
generate_java_code
add_query("e", "b", <<["B", "INTEGER"], ["A", "BOOLEAN"], ["b", "INTEGER"], ["B", "BOOLEAN"], ["A", "b"]>>, "c")
logical_negation
add_attribute("B", "A", "C")
add_command("e", "BOOLEAN", <<["b", "b"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["C", "C"]>>)
generate_java_code
type_check
add_call_chain(<<C,a,B>>)
generate_java_code
bool_value (false)
add_call_chain(<<b,D,c,b,D,D,d,e,e>>)
add_class(b)
add_call_chain(<<INTEGER,a,B,d,D,C>>)
add_query("A", "a", <<["C", "BOOLEAN"], ["D", "D"], ["a", "BOOLEAN"]>>, "INTEGER")
add_command("C", "e", <<["b", "c"], ["A", "BOOLEAN"], ["e", "d"], ["BOOLEAN", "e"]>>)
quotient
disjunction
type_check
numerical_negation
add_query("A", "A", <<["b", "INTEGER"], ["e", "BOOLEAN"], ["a", "INTEGER"], ["a", "D"], ["D", "B"]>>, "D")
subtraction
logical_negation
bool_value (false)
add_call_chain(<<INTEGER,INTEGER,d>>)
add_call_chain(<<D,b,B,b,c,C>>)
numerical_negation
generate_java_code
add_command("e", "c", <<["INTEGER", "C"], ["a", "b"], ["D", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["D", "INTEGER"], ["c", "A"]>>)
add_command("C", "D", <<["e", "BOOLEAN"], ["b", "INTEGER"]>>)
logical_negation
add_command("C", "A", <<["C", "B"], ["C", "BOOLEAN"], ["b", "d"], ["INTEGER", "BOOLEAN"], ["B", "INTEGER"], ["d", "INTEGER"], ["d", "INTEGER"]>>)
numerical_negation
add_call_chain(<<e,D,B,B,C,a,b>>)
subtraction
add_call_chain(<<D,B,B,c,INTEGER,b,B,a>>)
int_value (16)
add_call_chain(<<d,C,A,d,C,A,e,b>>)
logical_negation
add_call_chain(<<b,b,D,C,BOOLEAN,INTEGER,C>>)
add_call_chain(<<INTEGER,C,B,a,A>>)
add_call_chain(<<d,D,d,b,C,b,d>>)
less_than
