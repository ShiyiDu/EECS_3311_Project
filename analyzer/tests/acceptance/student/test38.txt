add_call_chain(<<B,d,C,e>>)
add_call_chain(<<c,b,D,d,A,A>>)
equals
generate_java_code
quotient
generate_java_code
bool_value (false)
logical_negation
add_command("D", "c", <<["D", "BOOLEAN"], ["D", "INTEGER"], ["e", "INTEGER"], ["c", "b"]>>)
generate_java_code
add_attribute("B", "b", "INTEGER")
add_class(D)
add_command("C", "B", <<["b", "b"], ["C", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "BOOLEAN"]>>)
add_class(A)
numerical_negation
int_value (12)
numerical_negation
add_command("d", "A", <<["e", "BOOLEAN"], ["c", "B"], ["B", "BOOLEAN"], ["c", "INTEGER"], ["D", "D"], ["D", "BOOLEAN"], ["c", "BOOLEAN"], ["b", "D"], ["b", "INTEGER"]>>)
add_class(b)
add_attribute("D", "e", "BOOLEAN")
add_command("B", "d", <<["A", "INTEGER"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "A"], ["d", "A"], ["B", "C"], ["b", "INTEGER"]>>)
add_query("c", "e", <<["c", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "INTEGER"], ["b", "C"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["D", "INTEGER"], ["INTEGER", "e"]>>, "C")
addition
generate_java_code
add_class(INTEGER)
generate_java_code
add_call_chain(<<C,C,C,e,b,e,a>>)
add_query("A", "D", <<["D", "INTEGER"], ["c", "BOOLEAN"], ["b", "INTEGER"], ["a", "INTEGER"], ["D", "INTEGER"], ["C", "B"], ["e", "BOOLEAN"]>>, "D")
bool_value (true)
add_query("b", "C", <<["C", "BOOLEAN"], ["d", "INTEGER"]>>, "A")
add_call_chain(<<b,c,INTEGER>>)
add_query("c", "A", <<["D", "INTEGER"], ["d", "A"], ["C", "e"]>>, "BOOLEAN")
int_value (10)
int_value (45)
add_call_chain(<<A>>)
bool_value (true)
logical_negation
add_attribute("d", "C", "INTEGER")
bool_value (true)
add_command("C", "b", <<["D", "e"], ["B", "a"], ["a", "INTEGER"], ["A", "INTEGER"], ["D", "INTEGER"]>>)
logical_negation
logical_negation
add_class(A)
quotient
add_call_chain(<<b,a,a,A,c,e,e>>)
add_call_chain(<<D,c,C,e,e,A,B,c>>)
add_query("a", "b", <<["e", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "INTEGER"], ["INTEGER", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "A"]>>, "C")
add_command("b", "e", <<["c", "b"], ["e", "BOOLEAN"], ["a", "INTEGER"], ["c", "BOOLEAN"]>>)
int_value (49)
generate_java_code
add_attribute("a", "C", "BOOLEAN")
add_attribute("B", "D", "INTEGER")
int_value (9)
add_command("e", "d", <<["a", "BOOLEAN"]>>)
int_value (3)
add_call_chain(<<d,B,C,c>>)
add_query("c", "e", <<["a", "INTEGER"]>>, "a")
add_call_chain(<<A,A>>)
less_than
logical_negation
conjunction
add_call_chain(<<C,A,B,A,INTEGER,B>>)
greater_than
numerical_negation
type_check
add_call_chain(<<c>>)
add_class(BOOLEAN)
add_call_chain(<<D,c,C>>)
int_value (4)
disjunction
disjunction
type_check
add_call_chain(<<b,INTEGER,c>>)
generate_java_code
add_query("A", "D", <<["INTEGER", "INTEGER"], ["INTEGER", "BOOLEAN"]>>, "BOOLEAN")
int_value (14)
multiplication
bool_value (true)
add_attribute("d", "D", "BOOLEAN")
logical_negation
add_call_chain(<<b,D,BOOLEAN,A,C,INTEGER,d,d,C>>)
add_attribute("d", "D", "INTEGER")
add_call_chain(<<d,A,e,B,INTEGER,D,a>>)
add_command("A", "C", <<["C", "INTEGER"], ["D", "INTEGER"], ["c", "a"], ["INTEGER", "BOOLEAN"], ["B", "INTEGER"], ["INTEGER", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["C", "INTEGER"], ["A", "e"]>>)
add_call_chain(<<D,a,d,C,D,INTEGER,BOOLEAN,D>>)
add_call_chain(<<D,B,b,c,a,D,c,d,D>>)
add_query("d", "a", <<["A", "BOOLEAN"], ["e", "BOOLEAN"]>>, "c")
add_attribute("C", "a", "INTEGER")
add_class(a)
multiplication
disjunction
quotient
add_attribute("d", "C", "C")
generate_java_code
multiplication
add_query("B", "B", <<["C", "e"], ["C", "INTEGER"], ["BOOLEAN", "INTEGER"], ["e", "INTEGER"], ["D", "b"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["d", "D"]>>, "d")
add_class(B)
numerical_negation
int_value (48)
add_call_chain(<<A>>)
add_command("c", "B", <<["e", "INTEGER"]>>)
add_call_chain(<<B>>)
numerical_negation
logical_negation
add_command("b", "B", <<["c", "a"], ["b", "BOOLEAN"], ["B", "C"], ["b", "BOOLEAN"], ["A", "d"], ["B", "BOOLEAN"], ["B", "INTEGER"], ["A", "c"]>>)
add_call_chain(<<INTEGER,a>>)
add_call_chain(<<A>>)
logical_negation
numerical_negation
quotient
generate_java_code
type_check
add_command("c", "D", <<["a", "INTEGER"], ["D", "BOOLEAN"]>>)
add_class(a)
disjunction
bool_value (true)
bool_value (true)
bool_value (false)
add_command("INTEGER", "c", <<["BOOLEAN", "C"], ["d", "C"], ["e", "BOOLEAN"], ["e", "d"], ["C", "INTEGER"]>>)
add_attribute("INTEGER", "A", "BOOLEAN")
int_value (9)
add_class(B)
add_attribute("A", "a", "BOOLEAN")
add_attribute("e", "e", "INTEGER")
add_call_chain(<<C,a>>)
numerical_negation
add_attribute("a", "C", "BOOLEAN")
add_attribute("A", "D", "B")
disjunction
add_attribute("d", "b", "A")
logical_negation
modulo
add_query("A", "c", <<["C", "BOOLEAN"]>>, "B")
add_query("d", "BOOLEAN", <<["d", "INTEGER"], ["a", "BOOLEAN"], ["b", "BOOLEAN"], ["INTEGER", "INTEGER"], ["b", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "e"], ["e", "INTEGER"], ["c", "INTEGER"]>>, "A")
add_call_chain(<<INTEGER,BOOLEAN,d,C,c,A,BOOLEAN,d>>)
generate_java_code
multiplication
add_attribute("b", "a", "BOOLEAN")
numerical_negation
add_attribute("d", "D", "A")
int_value (14)
disjunction
add_command("B", "INTEGER", <<["C", "INTEGER"], ["C", "INTEGER"], ["INTEGER", "INTEGER"]>>)
bool_value (false)
logical_negation
disjunction
int_value (29)
add_class(B)
add_call_chain(<<d,a,B,a,D,D,D>>)
add_class(d)
add_query("D", "b", <<["a", "B"], ["INTEGER", "INTEGER"], ["e", "BOOLEAN"], ["e", "A"], ["d", "D"], ["b", "BOOLEAN"]>>, "b")
bool_value (false)
int_value (19)
type_check
numerical_negation
equals
add_call_chain(<<d,e,B,e,B,B>>)
equals
add_command("A", "D", <<["c", "A"], ["A", "INTEGER"], ["INTEGER", "c"], ["a", "INTEGER"], ["A", "BOOLEAN"], ["B", "BOOLEAN"]>>)
add_command("A", "B", <<["b", "C"]>>)
int_value (36)
generate_java_code
logical_negation
add_command("c", "INTEGER", <<["B", "INTEGER"]>>)
generate_java_code
less_than
bool_value (true)
add_attribute("b", "B", "a")
add_command("A", "A", <<["d", "b"], ["A", "A"], ["C", "BOOLEAN"], ["D", "BOOLEAN"]>>)
add_call_chain(<<A,d,a,e,d,INTEGER,B,c,BOOLEAN>>)
add_call_chain(<<B,B>>)
add_call_chain(<<d,D,b,C,d,A,B,A>>)
add_call_chain(<<B,D,c>>)
add_command("a", "A", <<["D", "INTEGER"], ["D", "e"], ["b", "INTEGER"]>>)
add_call_chain(<<A,C,a,b,d,b,d>>)
numerical_negation
generate_java_code
logical_negation
disjunction
add_call_chain(<<D,A,c,a>>)
add_call_chain(<<C,D,b>>)
add_call_chain(<<C,d,INTEGER,INTEGER,INTEGER,C,b,e>>)
add_attribute("b", "b", "BOOLEAN")
add_attribute("d", "d", "BOOLEAN")
int_value (47)
numerical_negation
conjunction
less_than
add_command("INTEGER", "b", <<["d", "a"], ["D", "BOOLEAN"], ["A", "e"]>>)
add_class(A)
equals
numerical_negation
bool_value (false)
add_query("a", "b", <<["a", "D"]>>, "C")
conjunction
add_class(d)
add_call_chain(<<C,B,b>>)
add_attribute("e", "B", "d")
add_attribute("a", "C", "BOOLEAN")
generate_java_code
add_call_chain(<<e,c,a,e,INTEGER,A,a,INTEGER,b>>)
add_call_chain(<<BOOLEAN,C,B,D,A,d,b,a>>)
type_check
add_call_chain(<<B,A,D,a,c,A>>)
add_call_chain(<<b,C,BOOLEAN,D,D,C>>)
add_class(d)
add_call_chain(<<c,BOOLEAN,A,B,A,b,B,b>>)
add_attribute("C", "c", "d")
add_query("BOOLEAN", "a", <<["c", "b"], ["e", "INTEGER"], ["BOOLEAN", "d"], ["D", "b"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "C"], ["e", "INTEGER"], ["b", "B"]>>, "C")
add_query("d", "e", <<["D", "INTEGER"], ["a", "BOOLEAN"], ["d", "BOOLEAN"], ["c", "e"], ["a", "BOOLEAN"], ["c", "BOOLEAN"], ["BOOLEAN", "C"], ["c", "INTEGER"]>>, "B")
numerical_negation
add_command("d", "D", <<["D", "BOOLEAN"], ["C", "A"], ["b", "BOOLEAN"], ["A", "BOOLEAN"]>>)
equals
add_class(A)
add_call_chain(<<a,e>>)
add_query("A", "BOOLEAN", <<["INTEGER", "BOOLEAN"], ["c", "INTEGER"], ["c", "e"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>, "C")
logical_negation
add_class(D)
disjunction
type_check
add_attribute("c", "A", "INTEGER")
add_call_chain(<<c,C,b,d,B,e,a,d,D>>)
add_query("D", "B", <<["C", "C"], ["C", "BOOLEAN"], ["d", "a"], ["C", "A"], ["D", "INTEGER"], ["d", "d"], ["A", "INTEGER"], ["B", "INTEGER"]>>, "d")
add_attribute("C", "INTEGER", "BOOLEAN")
add_query("c", "a", <<["c", "INTEGER"], ["D", "INTEGER"], ["c", "BOOLEAN"], ["b", "INTEGER"], ["a", "A"], ["b", "INTEGER"], ["D", "b"], ["c", "b"], ["d", "INTEGER"]>>, "a")
add_call_chain(<<d,B,c>>)
numerical_negation
numerical_negation
add_call_chain(<<A,b,B,d,b>>)
numerical_negation
less_than
add_query("b", "A", <<["A", "BOOLEAN"], ["e", "INTEGER"], ["D", "B"], ["C", "INTEGER"], ["B", "d"], ["C", "BOOLEAN"], ["d", "INTEGER"], ["c", "BOOLEAN"]>>, "c")
greater_than
int_value (21)
bool_value (false)
add_call_chain(<<B,c,e,B,e,A,c>>)
generate_java_code
bool_value (false)
