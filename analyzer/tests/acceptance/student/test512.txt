modulo
generate_java_code
numerical_negation
conjunction
logical_negation
type_check
bool_value (true)
add_call_chain(<<A,e,INTEGER,A>>)
add_query("A", "d", <<["A", "BOOLEAN"]>>, "A")
add_attribute("C", "e", "INTEGER")
add_query("BOOLEAN", "a", <<["d", "INTEGER"], ["a", "e"], ["BOOLEAN", "d"], ["b", "INTEGER"]>>, "c")
add_command("c", "D", <<["C", "INTEGER"], ["a", "INTEGER"], ["B", "INTEGER"], ["b", "INTEGER"], ["A", "INTEGER"], ["INTEGER", "C"]>>)
add_class(INTEGER)
type_check
add_call_chain(<<d,d,d>>)
modulo
multiplication
int_value (24)
generate_java_code
add_class(BOOLEAN)
add_call_chain(<<BOOLEAN,b>>)
bool_value (true)
add_call_chain(<<c,a,d,e,BOOLEAN,a,D,B,A>>)
logical_negation
conjunction
add_call_chain(<<b,B>>)
logical_negation
add_call_chain(<<c,c>>)
add_attribute("B", "d", "BOOLEAN")
subtraction
equals
add_class(b)
add_class(D)
add_class(BOOLEAN)
add_class(e)
generate_java_code
add_attribute("e", "A", "BOOLEAN")
add_command("e", "INTEGER", <<["A", "BOOLEAN"], ["B", "INTEGER"], ["A", "D"]>>)
add_attribute("D", "b", "BOOLEAN")
add_query("D", "d", <<["B", "BOOLEAN"]>>, "C")
add_command("e", "INTEGER", <<["INTEGER", "BOOLEAN"], ["e", "BOOLEAN"]>>)
add_command("C", "A", <<["e", "BOOLEAN"], ["C", "INTEGER"], ["C", "INTEGER"], ["b", "A"], ["C", "B"]>>)
add_call_chain(<<INTEGER,C,d,e,e>>)
add_call_chain(<<A,C,e>>)
bool_value (true)
add_command("C", "C", <<["B", "BOOLEAN"], ["e", "INTEGER"], ["A", "b"], ["A", "INTEGER"], ["B", "INTEGER"]>>)
add_call_chain(<<d,d>>)
add_command("c", "c", <<["c", "BOOLEAN"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["c", "C"], ["B", "e"], ["BOOLEAN", "BOOLEAN"], ["B", "BOOLEAN"]>>)
add_attribute("d", "A", "BOOLEAN")
bool_value (false)
add_query("e", "e", <<["d", "INTEGER"], ["INTEGER", "A"], ["d", "INTEGER"], ["c", "c"], ["b", "e"], ["d", "BOOLEAN"], ["INTEGER", "INTEGER"], ["c", "D"]>>, "e")
add_query("D", "a", <<["C", "INTEGER"], ["B", "INTEGER"], ["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "INTEGER"], ["b", "INTEGER"], ["d", "INTEGER"], ["c", "INTEGER"], ["INTEGER", "INTEGER"]>>, "A")
generate_java_code
logical_negation
numerical_negation
greater_than
int_value (47)
add_query("B", "e", <<["b", "BOOLEAN"], ["e", "INTEGER"], ["b", "INTEGER"], ["e", "e"], ["D", "INTEGER"], ["e", "A"]>>, "d")
add_call_chain(<<D,C,C,a,A,e,B>>)
modulo
add_call_chain(<<A,d,C,B,B,B>>)
add_attribute("c", "c", "C")
add_query("a", "INTEGER", <<["A", "BOOLEAN"], ["BOOLEAN", "D"], ["b", "INTEGER"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["c", "c"], ["INTEGER", "BOOLEAN"], ["C", "BOOLEAN"]>>, "a")
numerical_negation
add_query("B", "d", <<["a", "BOOLEAN"], ["A", "D"], ["a", "BOOLEAN"]>>, "C")
int_value (26)
bool_value (true)
add_attribute("c", "A", "e")
add_call_chain(<<D,b,D>>)
add_call_chain(<<e,b,e>>)
int_value (3)
add_query("C", "B", <<["e", "BOOLEAN"], ["A", "A"]>>, "D")
logical_negation
add_query("a", "b", <<["B", "BOOLEAN"], ["d", "b"], ["B", "B"], ["b", "INTEGER"], ["b", "INTEGER"], ["d", "INTEGER"]>>, "d")
add_attribute("INTEGER", "b", "INTEGER")
add_query("e", "c", <<["d", "INTEGER"], ["INTEGER", "C"]>>, "D")
logical_negation
logical_negation
add_class(b)
generate_java_code
type_check
logical_negation
equals
add_command("INTEGER", "INTEGER", <<["A", "BOOLEAN"]>>)
add_call_chain(<<c,a,d,B,A,c>>)
add_call_chain(<<C,b,e,D,a,b,C,BOOLEAN>>)
add_class(A)
add_call_chain(<<A,d,B,b,B,INTEGER,INTEGER,b,D>>)
numerical_negation
add_call_chain(<<a,e,c,C,A,c,c,D,c>>)
add_call_chain(<<d,C,D>>)
numerical_negation
add_query("b", "INTEGER", <<["A", "a"], ["c", "INTEGER"]>>, "A")
add_query("d", "BOOLEAN", <<["d", "B"], ["B", "D"], ["BOOLEAN", "BOOLEAN"], ["a", "C"], ["d", "BOOLEAN"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>, "e")
add_attribute("d", "d", "INTEGER")
add_attribute("e", "b", "c")
int_value (41)
add_attribute("b", "C", "BOOLEAN")
conjunction
int_value (26)
add_attribute("b", "d", "D")
add_call_chain(<<C>>)
add_class(d)
conjunction
logical_negation
generate_java_code
conjunction
int_value (25)
logical_negation
logical_negation
add_call_chain(<<e,e>>)
bool_value (false)
int_value (14)
subtraction
generate_java_code
add_attribute("INTEGER", "a", "C")
add_call_chain(<<B,C,e,BOOLEAN,B,b,d,A,INTEGER>>)
add_query("c", "B", <<["C", "BOOLEAN"], ["C", "BOOLEAN"], ["INTEGER", "INTEGER"]>>, "a")
add_command("D", "C", <<["d", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["D", "INTEGER"], ["d", "c"]>>)
logical_negation
numerical_negation
int_value (3)
add_attribute("e", "INTEGER", "BOOLEAN")
add_class(A)
add_call_chain(<<e,e,e,e,C,INTEGER>>)
add_call_chain(<<A,c,A>>)
add_attribute("e", "e", "INTEGER")
disjunction
addition
disjunction
add_call_chain(<<BOOLEAN,BOOLEAN,a,b,c,C,e,b>>)
type_check
add_call_chain(<<C,B>>)
add_call_chain(<<a,B,b>>)
multiplication
logical_negation
bool_value (false)
int_value (37)
int_value (36)
add_call_chain(<<e,b>>)
add_query("d", "c", <<["A", "INTEGER"]>>, "D")
bool_value (false)
bool_value (true)
add_class(C)
add_command("a", "C", <<["d", "BOOLEAN"], ["C", "INTEGER"], ["e", "INTEGER"], ["c", "INTEGER"], ["b", "INTEGER"], ["INTEGER", "b"]>>)
add_query("D", "e", <<["A", "C"], ["INTEGER", "a"], ["INTEGER", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "INTEGER"], ["B", "d"], ["e", "INTEGER"]>>, "d")
disjunction
int_value (28)
numerical_negation
add_call_chain(<<b,A,B,a,C,A,d,BOOLEAN>>)
conjunction
generate_java_code
addition
int_value (34)
add_attribute("c", "e", "INTEGER")
logical_negation
type_check
add_class(b)
add_command("c", "a", <<["A", "d"], ["d", "c"], ["B", "BOOLEAN"], ["B", "C"]>>)
add_query("A", "c", <<["e", "BOOLEAN"], ["d", "D"], ["c", "INTEGER"], ["D", "INTEGER"], ["b", "BOOLEAN"], ["e", "b"], ["D", "BOOLEAN"], ["e", "INTEGER"]>>, "b")
bool_value (false)
add_query("e", "e", <<["c", "INTEGER"], ["D", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "INTEGER"], ["d", "INTEGER"], ["INTEGER", "INTEGER"], ["b", "C"]>>, "INTEGER")
add_call_chain(<<B,D,b,a,BOOLEAN,C,BOOLEAN,C>>)
add_call_chain(<<d,d,a>>)
conjunction
add_command("b", "INTEGER", <<["B", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["b", "BOOLEAN"], ["b", "BOOLEAN"], ["e", "INTEGER"], ["C", "INTEGER"]>>)
add_attribute("B", "D", "BOOLEAN")
add_attribute("e", "B", "BOOLEAN")
add_command("C", "b", <<["C", "b"], ["a", "d"], ["a", "INTEGER"]>>)
logical_negation
add_class(C)
numerical_negation
add_command("INTEGER", "A", <<["e", "BOOLEAN"], ["B", "INTEGER"], ["B", "C"], ["e", "C"], ["B", "BOOLEAN"]>>)
int_value (41)
add_call_chain(<<B,C>>)
add_class(D)
add_query("A", "A", <<["a", "BOOLEAN"], ["e", "INTEGER"], ["a", "BOOLEAN"], ["a", "D"], ["B", "INTEGER"]>>, "b")
bool_value (true)
add_class(d)
subtraction
logical_negation
bool_value (true)
int_value (38)
logical_negation
add_attribute("A", "A", "INTEGER")
add_attribute("D", "d", "INTEGER")
add_attribute("a", "D", "C")
generate_java_code
add_command("d", "c", <<["b", "INTEGER"], ["D", "BOOLEAN"], ["C", "BOOLEAN"]>>)
greater_than
numerical_negation
quotient
