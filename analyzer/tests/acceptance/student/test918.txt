add_command("b", "A", <<["a", "BOOLEAN"], ["D", "INTEGER"], ["C", "A"], ["a", "c"], ["D", "INTEGER"], ["A", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "BOOLEAN"]>>)
add_query("e", "d", <<["C", "b"], ["a", "INTEGER"], ["A", "d"], ["e", "BOOLEAN"]>>, "A")
generate_java_code
add_call_chain(<<A>>)
add_query("C", "a", <<["D", "BOOLEAN"], ["c", "BOOLEAN"]>>, "D")
modulo
add_query("e", "c", <<["c", "c"], ["e", "BOOLEAN"], ["D", "INTEGER"]>>, "a")
numerical_negation
generate_java_code
add_class(e)
equals
type_check
add_call_chain(<<D,INTEGER,D,D,A,B>>)
add_call_chain(<<B,B,b,b>>)
numerical_negation
numerical_negation
logical_negation
add_call_chain(<<A>>)
add_call_chain(<<e,e,a,B,d,D,C,C>>)
add_query("a", "D", <<["e", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "BOOLEAN"]>>, "B")
add_command("A", "A", <<["A", "INTEGER"], ["A", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["b", "BOOLEAN"], ["BOOLEAN", "B"], ["D", "INTEGER"]>>)
add_class(A)
generate_java_code
int_value (32)
bool_value (true)
less_than
add_attribute("e", "B", "e")
subtraction
add_query("d", "D", <<["A", "BOOLEAN"], ["B", "C"], ["C", "BOOLEAN"], ["d", "c"]>>, "e")
type_check
add_attribute("BOOLEAN", "d", "INTEGER")
logical_negation
multiplication
add_attribute("B", "e", "INTEGER")
logical_negation
add_call_chain(<<b,BOOLEAN,b,D,BOOLEAN,b,A,C,B>>)
add_call_chain(<<b>>)
add_attribute("e", "B", "INTEGER")
add_call_chain(<<B>>)
add_call_chain(<<C,D,d,D>>)
numerical_negation
bool_value (true)
add_query("B", "D", <<["D", "INTEGER"], ["c", "INTEGER"], ["D", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "INTEGER"]>>, "c")
modulo
add_attribute("B", "B", "C")
add_command("BOOLEAN", "c", <<["B", "INTEGER"]>>)
logical_negation
logical_negation
add_query("c", "A", <<["b", "INTEGER"], ["b", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "D"]>>, "b")
less_than
logical_negation
add_command("INTEGER", "e", <<["d", "INTEGER"], ["d", "C"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["B", "a"], ["c", "INTEGER"]>>)
generate_java_code
generate_java_code
add_query("a", "C", <<["b", "A"], ["B", "e"], ["INTEGER", "INTEGER"]>>, "BOOLEAN")
bool_value (false)
add_call_chain(<<D,C>>)
add_attribute("c", "c", "INTEGER")
int_value (6)
add_query("e", "e", <<["D", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "e"], ["C", "A"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "BOOLEAN"]>>, "a")
add_attribute("D", "B", "BOOLEAN")
conjunction
int_value (25)
add_command("c", "B", <<["A", "B"], ["A", "INTEGER"], ["D", "BOOLEAN"]>>)
bool_value (true)
add_attribute("D", "D", "INTEGER")
generate_java_code
int_value (47)
bool_value (true)
add_command("INTEGER", "b", <<["a", "BOOLEAN"], ["C", "D"]>>)
add_attribute("b", "e", "B")
generate_java_code
add_command("B", "D", <<["C", "C"], ["a", "BOOLEAN"]>>)
bool_value (true)
add_class(D)
add_query("BOOLEAN", "B", <<["A", "e"], ["b", "INTEGER"], ["e", "BOOLEAN"], ["B", "BOOLEAN"]>>, "c")
bool_value (true)
equals
numerical_negation
numerical_negation
add_call_chain(<<c,a,A,B,D,BOOLEAN,B,e,b>>)
add_attribute("A", "INTEGER", "INTEGER")
add_call_chain(<<D,a,d,A,BOOLEAN>>)
logical_negation
int_value (28)
add_call_chain(<<INTEGER,A,b,e,C,e,C,INTEGER>>)
add_query("A", "b", <<["b", "C"], ["D", "INTEGER"], ["A", "INTEGER"]>>, "d")
add_call_chain(<<B,C,INTEGER,a,B,B,INTEGER,d,e>>)
logical_negation
add_class(d)
numerical_negation
subtraction
add_attribute("C", "d", "b")
conjunction
equals
disjunction
add_call_chain(<<A,INTEGER>>)
add_call_chain(<<INTEGER,b,c,C,a,c>>)
add_call_chain(<<B,d,INTEGER,A,B,d>>)
add_class(e)
add_query("INTEGER", "B", <<["c", "b"]>>, "B")
add_call_chain(<<D,e,e>>)
type_check
int_value (10)
logical_negation
multiplication
add_class(a)
disjunction
add_call_chain(<<c,B,D>>)
numerical_negation
bool_value (true)
add_query("b", "D", <<["b", "B"], ["INTEGER", "INTEGER"], ["e", "INTEGER"], ["c", "A"], ["B", "a"], ["c", "BOOLEAN"]>>, "D")
add_attribute("a", "B", "BOOLEAN")
add_attribute("C", "C", "BOOLEAN")
add_class(B)
add_call_chain(<<B,e,A,BOOLEAN,e,C,C>>)
logical_negation
add_class(INTEGER)
add_command("d", "D", <<["A", "c"], ["c", "INTEGER"], ["C", "C"], ["c", "B"], ["B", "BOOLEAN"], ["A", "BOOLEAN"]>>)
add_call_chain(<<c,d,d,e>>)
int_value (9)
disjunction
add_attribute("B", "d", "INTEGER")
numerical_negation
add_command("C", "D", <<["b", "BOOLEAN"]>>)
add_command("D", "D", <<["B", "e"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["b", "D"], ["B", "INTEGER"], ["e", "b"], ["BOOLEAN", "D"], ["INTEGER", "BOOLEAN"]>>)
add_class(b)
add_command("B", "A", <<["D", "d"], ["A", "INTEGER"], ["e", "INTEGER"], ["e", "INTEGER"], ["a", "BOOLEAN"]>>)
add_call_chain(<<d,C,BOOLEAN,BOOLEAN,D,INTEGER,c,d>>)
add_query("e", "a", <<["C", "e"], ["B", "e"], ["B", "INTEGER"], ["B", "INTEGER"], ["b", "INTEGER"], ["B", "BOOLEAN"]>>, "c")
add_query("b", "INTEGER", <<["B", "BOOLEAN"], ["d", "INTEGER"], ["A", "INTEGER"], ["C", "INTEGER"], ["a", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["d", "BOOLEAN"]>>, "C")
add_attribute("b", "e", "D")
add_attribute("BOOLEAN", "c", "BOOLEAN")
type_check
generate_java_code
add_class(a)
add_attribute("b", "D", "BOOLEAN")
int_value (10)
numerical_negation
add_query("D", "c", <<["B", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "INTEGER"], ["D", "b"], ["BOOLEAN", "INTEGER"], ["e", "A"]>>, "B")
int_value (32)
logical_negation
quotient
numerical_negation
add_class(b)
add_call_chain(<<c>>)
add_attribute("A", "e", "INTEGER")
add_command("c", "b", <<["D", "INTEGER"], ["D", "A"], ["B", "b"], ["C", "b"], ["INTEGER", "INTEGER"], ["d", "d"], ["B", "INTEGER"], ["a", "INTEGER"], ["c", "BOOLEAN"]>>)
logical_negation
add_call_chain(<<D,a,e,D,c,d>>)
add_call_chain(<<a,d,B,A,a,b>>)
generate_java_code
add_attribute("a", "A", "b")
add_call_chain(<<B,BOOLEAN,C>>)
equals
quotient
add_query("B", "A", <<["B", "D"], ["C", "A"]>>, "e")
equals
numerical_negation
add_call_chain(<<C,A,A,C,c>>)
add_query("d", "a", <<["INTEGER", "INTEGER"], ["b", "BOOLEAN"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["d", "C"], ["D", "C"], ["D", "a"], ["D", "INTEGER"], ["c", "INTEGER"]>>, "a")
add_attribute("C", "B", "INTEGER")
type_check
add_command("C", "C", <<["c", "INTEGER"], ["a", "BOOLEAN"], ["b", "D"], ["e", "a"], ["a", "INTEGER"]>>)
add_call_chain(<<C,b,c,C,B,C>>)
add_call_chain(<<INTEGER,C,a,c,B>>)
type_check
add_call_chain(<<A,d,A>>)
int_value (31)
int_value (39)
add_attribute("d", "c", "BOOLEAN")
numerical_negation
equals
add_call_chain(<<b,A,D,b,B,e,c>>)
add_class(C)
add_command("a", "e", <<["d", "INTEGER"], ["b", "BOOLEAN"], ["A", "INTEGER"], ["b", "C"], ["C", "B"], ["c", "A"], ["C", "BOOLEAN"], ["c", "b"]>>)
add_call_chain(<<D,b,a,B,A,e>>)
disjunction
add_query("a", "e", <<["B", "BOOLEAN"], ["B", "a"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "d"], ["a", "INTEGER"], ["A", "BOOLEAN"], ["b", "BOOLEAN"]>>, "a")
int_value (28)
add_attribute("e", "C", "INTEGER")
disjunction
add_call_chain(<<BOOLEAN,INTEGER>>)
int_value (22)
numerical_negation
add_query("e", "D", <<["INTEGER", "BOOLEAN"], ["D", "D"], ["a", "INTEGER"], ["b", "d"], ["B", "INTEGER"], ["a", "BOOLEAN"], ["c", "INTEGER"], ["c", "INTEGER"]>>, "b")
add_attribute("e", "c", "C")
add_class(D)
add_call_chain(<<b,C,d,INTEGER,D>>)
generate_java_code
bool_value (false)
add_attribute("b", "c", "INTEGER")
add_command("D", "INTEGER", <<["B", "INTEGER"], ["D", "BOOLEAN"], ["c", "A"], ["c", "b"], ["b", "INTEGER"], ["D", "INTEGER"]>>)
add_attribute("c", "e", "INTEGER")
bool_value (false)
add_query("d", "d", <<["C", "BOOLEAN"], ["d", "INTEGER"], ["INTEGER", "INTEGER"], ["B", "INTEGER"], ["a", "B"], ["A", "BOOLEAN"], ["a", "INTEGER"]>>, "C")
disjunction
equals
add_attribute("A", "b", "INTEGER")
modulo
subtraction
type_check
conjunction
add_call_chain(<<d,b,C,d,A,e,C,INTEGER,C>>)
generate_java_code
add_call_chain(<<C,C,D>>)
bool_value (true)
add_call_chain(<<B,c,INTEGER,C,C,D,B>>)
bool_value (false)
int_value (41)
disjunction
add_call_chain(<<e,c,BOOLEAN>>)
disjunction
add_call_chain(<<d,INTEGER,c,e,e,c,D,c>>)
add_call_chain(<<d,b,D,C,BOOLEAN,e,C,b,c>>)
int_value (43)
type_check
add_class(d)
add_attribute("d", "a", "INTEGER")
subtraction
add_query("b", "c", <<["a", "INTEGER"]>>, "B")
type_check
equals
add_query("e", "A", <<["C", "BOOLEAN"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["B", "INTEGER"], ["c", "BOOLEAN"], ["d", "BOOLEAN"]>>, "A")
generate_java_code
numerical_negation
bool_value (false)
logical_negation
add_call_chain(<<C,e,c,B,B,e>>)
generate_java_code
int_value (39)
add_command("b", "INTEGER", <<["C", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["e", "B"], ["e", "INTEGER"], ["a", "BOOLEAN"], ["C", "INTEGER"]>>)
add_class(b)
numerical_negation
numerical_negation
add_call_chain(<<D,a,A,INTEGER,A,A,c>>)
multiplication
generate_java_code
add_call_chain(<<A,A,c,b,b,d,C>>)
bool_value (true)
add_call_chain(<<A,a>>)
add_call_chain(<<c,b,b,BOOLEAN,BOOLEAN,e,A,D>>)
bool_value (false)
