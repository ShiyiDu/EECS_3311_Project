logical_negation
add_attribute("C", "b", "a")
add_query("a", "A", <<["e", "INTEGER"], ["d", "INTEGER"], ["e", "d"]>>, "C")
add_attribute("C", "A", "INTEGER")
add_call_chain(<<B,A,D>>)
add_query("e", "a", <<["C", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "b"], ["c", "BOOLEAN"]>>, "A")
generate_java_code
numerical_negation
bool_value (true)
add_command("c", "d", <<["C", "INTEGER"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["e", "INTEGER"]>>)
int_value (25)
add_command("a", "B", <<["d", "C"], ["d", "C"], ["b", "INTEGER"], ["D", "BOOLEAN"], ["c", "BOOLEAN"], ["b", "d"], ["B", "D"]>>)
greater_than
add_query("A", "C", <<["BOOLEAN", "INTEGER"], ["c", "b"], ["D", "BOOLEAN"], ["C", "b"]>>, "b")
add_command("B", "C", <<["INTEGER", "A"], ["e", "BOOLEAN"], ["c", "d"], ["e", "INTEGER"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["d", "C"], ["B", "c"], ["B", "INTEGER"]>>)
logical_negation
add_call_chain(<<b,d,B,e,B>>)
add_attribute("a", "INTEGER", "b")
add_command("b", "c", <<["d", "B"], ["BOOLEAN", "INTEGER"], ["B", "B"], ["C", "BOOLEAN"], ["e", "INTEGER"], ["a", "INTEGER"], ["e", "A"], ["B", "BOOLEAN"], ["C", "d"]>>)
add_class(d)
greater_than
conjunction
int_value (4)
addition
add_attribute("A", "A", "BOOLEAN")
type_check
bool_value (true)
add_call_chain(<<a,A,a,INTEGER,D,e,C,B>>)
add_call_chain(<<B,a,e,b,A>>)
disjunction
bool_value (false)
add_query("D", "D", <<["A", "INTEGER"], ["B", "e"], ["B", "c"], ["INTEGER", "BOOLEAN"], ["d", "INTEGER"], ["A", "BOOLEAN"]>>, "B")
add_call_chain(<<INTEGER,C,C>>)
type_check
numerical_negation
add_call_chain(<<C,A>>)
modulo
bool_value (false)
equals
generate_java_code
type_check
less_than
int_value (30)
numerical_negation
logical_negation
add_query("d", "d", <<["C", "BOOLEAN"], ["a", "BOOLEAN"], ["b", "INTEGER"], ["INTEGER", "INTEGER"], ["B", "BOOLEAN"]>>, "A")
add_class(BOOLEAN)
quotient
bool_value (true)
add_class(B)
add_call_chain(<<a,C,a,a>>)
add_attribute("b", "A", "e")
logical_negation
logical_negation
add_class(c)
add_call_chain(<<d,d,d,C>>)
numerical_negation
add_command("e", "INTEGER", <<["A", "A"], ["a", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["a", "c"], ["A", "e"], ["INTEGER", "B"], ["C", "D"], ["B", "C"]>>)
generate_java_code
int_value (45)
add_query("c", "D", <<["A", "BOOLEAN"]>>, "e")
generate_java_code
conjunction
greater_than
add_attribute("B", "INTEGER", "INTEGER")
int_value (26)
int_value (36)
greater_than
bool_value (false)
add_query("A", "e", <<["c", "INTEGER"], ["c", "INTEGER"], ["INTEGER", "C"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "a"]>>, "c")
conjunction
numerical_negation
bool_value (true)
generate_java_code
generate_java_code
add_class(b)
add_call_chain(<<e,D,e,INTEGER,e>>)
disjunction
add_query("B", "B", <<["C", "C"], ["D", "BOOLEAN"]>>, "C")
int_value (34)
add_call_chain(<<C,e,b>>)
add_command("C", "b", <<["C", "INTEGER"], ["d", "D"], ["e", "A"]>>)
type_check
numerical_negation
add_query("d", "A", <<["b", "BOOLEAN"], ["INTEGER", "d"], ["A", "B"], ["C", "BOOLEAN"], ["A", "a"], ["C", "INTEGER"], ["A", "D"]>>, "a")
add_call_chain(<<e>>)
add_query("d", "D", <<["INTEGER", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["d", "BOOLEAN"], ["b", "INTEGER"], ["d", "A"], ["D", "BOOLEAN"], ["c", "INTEGER"], ["c", "e"]>>, "B")
logical_negation
add_command("C", "e", <<["a", "INTEGER"]>>)
type_check
add_command("D", "c", <<["c", "INTEGER"], ["D", "INTEGER"], ["A", "INTEGER"], ["e", "BOOLEAN"], ["C", "d"], ["BOOLEAN", "BOOLEAN"], ["D", "c"], ["INTEGER", "INTEGER"], ["BOOLEAN", "INTEGER"]>>)
int_value (42)
greater_than
add_class(INTEGER)
add_attribute("e", "C", "INTEGER")
add_command("A", "INTEGER", <<["D", "BOOLEAN"]>>)
add_class(e)
int_value (23)
type_check
bool_value (true)
add_call_chain(<<b,c,b,C,b,BOOLEAN,e,a,c>>)
addition
add_command("c", "A", <<["C", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "A"]>>)
logical_negation
add_query("a", "c", <<["a", "b"], ["c", "B"], ["INTEGER", "e"]>>, "INTEGER")
add_query("C", "a", <<["D", "e"], ["c", "INTEGER"], ["d", "INTEGER"], ["d", "INTEGER"], ["C", "a"]>>, "C")
numerical_negation
add_attribute("d", "INTEGER", "b")
generate_java_code
logical_negation
logical_negation
logical_negation
add_command("B", "C", <<["D", "BOOLEAN"], ["B", "INTEGER"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["d", "INTEGER"], ["B", "d"]>>)
generate_java_code
add_call_chain(<<B,D,B,A,d,A>>)
type_check
bool_value (false)
type_check
bool_value (true)
int_value (31)
add_call_chain(<<A,BOOLEAN,d,A,a,C,C>>)
add_call_chain(<<e,e,c,e,a,b,INTEGER,e>>)
subtraction
add_query("INTEGER", "D", <<["b", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "a"], ["C", "INTEGER"], ["BOOLEAN", "INTEGER"], ["c", "INTEGER"], ["e", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "B"]>>, "c")
bool_value (true)
add_command("d", "B", <<["A", "B"], ["C", "BOOLEAN"], ["B", "A"]>>)
int_value (21)
type_check
add_query("A", "e", <<["C", "BOOLEAN"], ["e", "INTEGER"]>>, "A")
conjunction
conjunction
logical_negation
subtraction
add_call_chain(<<D,INTEGER,c,A>>)
generate_java_code
add_command("A", "B", <<["BOOLEAN", "BOOLEAN"], ["D", "INTEGER"], ["C", "D"], ["BOOLEAN", "BOOLEAN"], ["d", "d"], ["INTEGER", "INTEGER"], ["a", "BOOLEAN"], ["a", "BOOLEAN"]>>)
bool_value (false)
add_call_chain(<<d,INTEGER,C,D,d,C,c,C,B>>)
generate_java_code
int_value (4)
generate_java_code
generate_java_code
add_class(INTEGER)
int_value (28)
add_query("a", "A", <<["B", "BOOLEAN"], ["BOOLEAN", "c"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["c", "BOOLEAN"]>>, "A")
modulo
int_value (4)
add_command("A", "C", <<["b", "b"], ["C", "B"], ["e", "BOOLEAN"], ["c", "a"], ["B", "C"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["a", "INTEGER"]>>)
logical_negation
add_query("a", "B", <<["C", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "A"], ["a", "D"], ["INTEGER", "INTEGER"], ["d", "c"], ["INTEGER", "BOOLEAN"], ["e", "BOOLEAN"]>>, "D")
add_command("c", "c", <<["c", "a"], ["A", "BOOLEAN"], ["B", "C"]>>)
bool_value (false)
add_query("a", "D", <<["INTEGER", "BOOLEAN"], ["b", "e"], ["BOOLEAN", "INTEGER"], ["a", "D"]>>, "A")
int_value (32)
numerical_negation
generate_java_code
add_command("A", "INTEGER", <<["B", "c"], ["C", "BOOLEAN"], ["b", "A"], ["d", "A"], ["a", "b"], ["A", "INTEGER"], ["D", "INTEGER"]>>)
add_call_chain(<<a>>)
add_command("a", "C", <<["BOOLEAN", "INTEGER"], ["A", "BOOLEAN"], ["INTEGER", "b"]>>)
numerical_negation
add_command("b", "e", <<["C", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "INTEGER"], ["B", "INTEGER"], ["e", "e"], ["A", "INTEGER"]>>)
type_check
add_command("D", "d", <<["a", "INTEGER"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["c", "a"], ["e", "B"], ["a", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "INTEGER"], ["a", "d"]>>)
add_call_chain(<<d,A,c,c,e,A,d,d,BOOLEAN>>)
type_check
logical_negation
logical_negation
less_than
add_call_chain(<<INTEGER>>)
add_attribute("INTEGER", "e", "INTEGER")
add_attribute("e", "INTEGER", "c")
bool_value (true)
add_attribute("d", "D", "BOOLEAN")
int_value (44)
