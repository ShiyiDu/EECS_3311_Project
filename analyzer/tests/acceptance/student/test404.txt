multiplication
equals
add_command("d", "C", <<["a", "INTEGER"], ["C", "INTEGER"], ["D", "D"], ["d", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "A"], ["INTEGER", "INTEGER"], ["C", "b"]>>)
bool_value (false)
add_class(D)
add_call_chain(<<B,B>>)
quotient
add_attribute("BOOLEAN", "B", "BOOLEAN")
add_query("D", "b", <<["C", "BOOLEAN"], ["e", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["e", "BOOLEAN"], ["INTEGER", "B"], ["b", "INTEGER"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "INTEGER"]>>, "BOOLEAN")
generate_java_code
add_command("b", "b", <<["c", "BOOLEAN"], ["b", "D"], ["a", "BOOLEAN"], ["BOOLEAN", "A"], ["INTEGER", "a"]>>)
add_call_chain(<<c>>)
modulo
int_value (1)
logical_negation
add_attribute("D", "D", "BOOLEAN")
add_command("INTEGER", "D", <<["C", "INTEGER"], ["A", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "BOOLEAN"]>>)
add_attribute("C", "d", "a")
add_call_chain(<<e,C,C,C,e>>)
logical_negation
add_call_chain(<<d,C,A,e,C,B,b>>)
bool_value (true)
bool_value (true)
less_than
add_call_chain(<<A>>)
logical_negation
multiplication
bool_value (false)
add_attribute("b", "A", "BOOLEAN")
add_call_chain(<<d,B,A,D>>)
add_class(A)
modulo
disjunction
add_query("D", "c", <<["C", "INTEGER"], ["A", "INTEGER"]>>, "INTEGER")
conjunction
logical_negation
add_query("INTEGER", "D", <<["B", "INTEGER"], ["A", "BOOLEAN"], ["D", "INTEGER"], ["A", "BOOLEAN"], ["D", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "BOOLEAN"], ["b", "INTEGER"]>>, "e")
add_command("B", "b", <<["C", "INTEGER"], ["D", "d"], ["d", "BOOLEAN"]>>)
int_value (37)
add_attribute("d", "e", "INTEGER")
logical_negation
add_command("e", "b", <<["b", "e"], ["D", "c"], ["D", "BOOLEAN"], ["d", "BOOLEAN"], ["d", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["e", "INTEGER"]>>)
bool_value (false)
add_attribute("a", "e", "c")
add_class(A)
add_attribute("B", "a", "INTEGER")
add_attribute("C", "e", "A")
generate_java_code
generate_java_code
add_call_chain(<<A,c,A,b,c,d>>)
add_class(INTEGER)
generate_java_code
int_value (10)
add_command("b", "C", <<["b", "C"], ["INTEGER", "INTEGER"], ["BOOLEAN", "INTEGER"], ["b", "BOOLEAN"], ["BOOLEAN", "C"], ["B", "BOOLEAN"], ["B", "C"], ["INTEGER", "e"], ["d", "BOOLEAN"]>>)
add_call_chain(<<b,B,b,C,BOOLEAN>>)
bool_value (true)
greater_than
generate_java_code
add_call_chain(<<c,INTEGER,C>>)
add_call_chain(<<D,A,b,a,b,B>>)
add_call_chain(<<d,c,a,c,d,d,B,c>>)
subtraction
modulo
generate_java_code
add_command("e", "D", <<["a", "BOOLEAN"], ["A", "INTEGER"], ["b", "BOOLEAN"]>>)
add_command("a", "A", <<["a", "INTEGER"], ["INTEGER", "INTEGER"], ["BOOLEAN", "INTEGER"], ["D", "d"], ["A", "BOOLEAN"], ["d", "INTEGER"], ["d", "INTEGER"]>>)
disjunction
disjunction
generate_java_code
add_call_chain(<<b,a,c,C>>)
add_class(d)
type_check
add_call_chain(<<INTEGER,B,d,d,BOOLEAN>>)
add_attribute("A", "b", "BOOLEAN")
add_query("d", "D", <<["INTEGER", "B"]>>, "B")
add_query("d", "C", <<["d", "A"], ["INTEGER", "D"], ["c", "BOOLEAN"], ["B", "INTEGER"], ["e", "c"], ["A", "BOOLEAN"], ["A", "a"], ["C", "BOOLEAN"]>>, "A")
add_command("d", "b", <<["A", "BOOLEAN"], ["a", "D"], ["a", "BOOLEAN"], ["C", "B"], ["d", "INTEGER"], ["C", "INTEGER"], ["C", "INTEGER"]>>)
add_class(d)
add_call_chain(<<C,C,C,C,B,D,D,INTEGER,INTEGER>>)
add_call_chain(<<D,D>>)
bool_value (false)
less_than
bool_value (false)
add_query("e", "C", <<["INTEGER", "BOOLEAN"], ["D", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["B", "INTEGER"], ["c", "a"], ["b", "c"], ["BOOLEAN", "BOOLEAN"]>>, "D")
less_than
bool_value (true)
numerical_negation
add_command("d", "d", <<["A", "INTEGER"], ["a", "INTEGER"], ["A", "A"], ["A", "C"], ["d", "BOOLEAN"], ["BOOLEAN", "B"]>>)
add_query("B", "A", <<["c", "INTEGER"], ["c", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "INTEGER"], ["A", "INTEGER"], ["D", "INTEGER"], ["D", "A"]>>, "d")
add_call_chain(<<D,B>>)
add_class(D)
add_query("BOOLEAN", "c", <<["c", "d"]>>, "c")
logical_negation
add_command("C", "d", <<["B", "BOOLEAN"], ["C", "INTEGER"], ["b", "A"], ["d", "INTEGER"], ["c", "d"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["a", "d"]>>)
bool_value (true)
add_call_chain(<<b,b,INTEGER,D,C>>)
add_command("C", "d", <<["C", "INTEGER"], ["d", "c"], ["C", "INTEGER"], ["a", "d"], ["d", "BOOLEAN"], ["c", "INTEGER"]>>)
greater_than
add_query("e", "a", <<["b", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "BOOLEAN"]>>, "D")
numerical_negation
bool_value (false)
generate_java_code
add_call_chain(<<B,a,BOOLEAN,b,D,B,e>>)
addition
add_query("c", "c", <<["C", "d"]>>, "c")
numerical_negation
add_query("a", "b", <<["e", "INTEGER"]>>, "INTEGER")
int_value (41)
numerical_negation
type_check
add_query("B", "d", <<["INTEGER", "e"], ["d", "BOOLEAN"], ["d", "a"]>>, "C")
int_value (7)
add_query("B", "D", <<["D", "INTEGER"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["INTEGER", "A"]>>, "C")
logical_negation
add_call_chain(<<C,b>>)
add_command("D", "A", <<["d", "BOOLEAN"], ["D", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "INTEGER"], ["A", "B"], ["A", "B"]>>)
add_call_chain(<<BOOLEAN,A,a>>)
add_command("INTEGER", "c", <<["a", "A"], ["BOOLEAN", "a"]>>)
add_attribute("D", "a", "INTEGER")
bool_value (false)
numerical_negation
add_call_chain(<<INTEGER,d,B,e>>)
int_value (9)
type_check
int_value (30)
add_call_chain(<<d>>)
bool_value (false)
add_call_chain(<<e,D,B,C,b,A,C>>)
add_attribute("C", "BOOLEAN", "D")
quotient
logical_negation
add_query("B", "d", <<["D", "BOOLEAN"], ["C", "BOOLEAN"]>>, "INTEGER")
add_attribute("c", "A", "INTEGER")
add_attribute("d", "a", "BOOLEAN")
add_attribute("c", "b", "INTEGER")
numerical_negation
add_class(a)
add_command("d", "b", <<["B", "INTEGER"], ["BOOLEAN", "INTEGER"], ["b", "INTEGER"], ["INTEGER", "INTEGER"], ["e", "INTEGER"], ["BOOLEAN", "c"], ["d", "INTEGER"], ["C", "BOOLEAN"], ["a", "D"]>>)
add_call_chain(<<c,BOOLEAN,B>>)
greater_than
add_call_chain(<<e,INTEGER,d,e,C,D,B>>)
add_query("e", "A", <<["e", "BOOLEAN"]>>, "INTEGER")
add_query("b", "a", <<["e", "a"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["D", "A"], ["e", "INTEGER"], ["d", "BOOLEAN"], ["e", "INTEGER"], ["e", "A"], ["b", "e"]>>, "B")
numerical_negation
add_call_chain(<<a,a,a,D>>)
type_check
logical_negation
equals
add_query("a", "A", <<["B", "B"], ["e", "INTEGER"], ["C", "c"], ["b", "C"], ["B", "a"], ["e", "BOOLEAN"], ["A", "D"]>>, "c")
add_call_chain(<<c,a,C,b,D,C,a,a>>)
add_call_chain(<<INTEGER,c,C,e,C,C,D,c>>)
type_check
logical_negation
add_call_chain(<<b>>)
generate_java_code
add_command("BOOLEAN", "INTEGER", <<["c", "a"]>>)
bool_value (false)
int_value (41)
int_value (5)
add_query("B", "d", <<["d", "BOOLEAN"], ["e", "BOOLEAN"], ["c", "INTEGER"], ["D", "e"], ["A", "d"], ["INTEGER", "e"], ["C", "BOOLEAN"]>>, "a")
add_attribute("INTEGER", "D", "BOOLEAN")
add_call_chain(<<B,BOOLEAN,BOOLEAN,e,B,b,b,A,a>>)
equals
add_call_chain(<<C,A,B,B,C,B,a,d>>)
numerical_negation
quotient
logical_negation
modulo
add_query("B", "D", <<["B", "BOOLEAN"], ["C", "BOOLEAN"], ["BOOLEAN", "C"], ["D", "INTEGER"], ["D", "b"], ["a", "BOOLEAN"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["c", "BOOLEAN"]>>, "D")
add_attribute("D", "e", "C")
add_command("C", "INTEGER", <<["d", "BOOLEAN"], ["c", "D"], ["a", "INTEGER"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["BOOLEAN", "A"], ["A", "a"], ["a", "a"], ["D", "BOOLEAN"]>>)
int_value (44)
numerical_negation
add_query("A", "e", <<["b", "INTEGER"]>>, "d")
int_value (14)
generate_java_code
type_check
add_call_chain(<<b,C,INTEGER,BOOLEAN,c,BOOLEAN>>)
numerical_negation
add_attribute("INTEGER", "b", "c")
type_check
add_class(A)
conjunction
numerical_negation
bool_value (true)
logical_negation
add_call_chain(<<d,c,C,D,c,BOOLEAN,e,C>>)
add_attribute("d", "D", "BOOLEAN")
add_call_chain(<<e,d,BOOLEAN,a,a,c,INTEGER,D>>)
add_attribute("C", "a", "BOOLEAN")
add_query("INTEGER", "B", <<["B", "INTEGER"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["b", "BOOLEAN"]>>, "c")
add_query("c", "e", <<["C", "INTEGER"], ["c", "INTEGER"], ["b", "BOOLEAN"], ["b", "INTEGER"], ["e", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "e"], ["C", "INTEGER"]>>, "b")
add_command("c", "C", <<["A", "C"], ["D", "D"], ["B", "b"], ["b", "a"], ["BOOLEAN", "INTEGER"]>>)
logical_negation
less_than
add_call_chain(<<B,D>>)
add_class(B)
add_call_chain(<<a,d,A,c,A>>)
add_class(c)
int_value (42)
add_attribute("d", "e", "BOOLEAN")
add_command("a", "d", <<["a", "d"], ["d", "D"], ["C", "INTEGER"], ["C", "INTEGER"], ["B", "INTEGER"], ["B", "B"]>>)
greater_than
bool_value (true)
add_command("b", "a", <<["B", "INTEGER"]>>)
logical_negation
add_command("e", "C", <<["C", "INTEGER"], ["B", "BOOLEAN"], ["D", "A"], ["D", "INTEGER"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["a", "BOOLEAN"], ["b", "B"], ["B", "c"]>>)
generate_java_code
add_call_chain(<<c>>)
type_check
int_value (30)
greater_than
type_check
add_call_chain(<<e>>)
add_command("A", "A", <<["BOOLEAN", "A"], ["e", "BOOLEAN"], ["INTEGER", "INTEGER"], ["C", "INTEGER"]>>)
add_call_chain(<<D,D,b,d>>)
logical_negation
add_command("b", "D", <<["b", "BOOLEAN"]>>)
add_call_chain(<<B,A,C,d,c,d>>)
bool_value (true)
bool_value (true)
logical_negation
conjunction
bool_value (false)
add_query("D", "B", <<["INTEGER", "a"], ["D", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["b", "INTEGER"], ["B", "c"]>>, "C")
int_value (34)
add_command("INTEGER", "INTEGER", <<["BOOLEAN", "C"], ["a", "A"], ["BOOLEAN", "D"], ["D", "BOOLEAN"], ["C", "D"], ["BOOLEAN", "INTEGER"], ["INTEGER", "c"], ["D", "BOOLEAN"]>>)
generate_java_code
subtraction
add_query("A", "D", <<["D", "BOOLEAN"]>>, "b")
logical_negation
int_value (25)
int_value (8)
add_class(b)
add_command("C", "a", <<["a", "B"], ["e", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "C"], ["e", "INTEGER"], ["c", "c"]>>)
int_value (30)
add_query("C", "C", <<["C", "b"], ["c", "INTEGER"], ["D", "INTEGER"], ["c", "INTEGER"], ["d", "INTEGER"], ["B", "BOOLEAN"]>>, "D")
bool_value (false)
add_class(C)
quotient
int_value (40)
add_query("e", "e", <<["B", "INTEGER"], ["B", "INTEGER"], ["b", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["a", "INTEGER"]>>, "B")
add_command("BOOLEAN", "e", <<["INTEGER", "C"], ["BOOLEAN", "BOOLEAN"], ["b", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>)
add_command("A", "A", <<["e", "INTEGER"]>>)
numerical_negation
int_value (16)
conjunction
add_command("A", "A", <<["A", "INTEGER"], ["c", "BOOLEAN"], ["D", "INTEGER"], ["d", "e"], ["c", "INTEGER"], ["INTEGER", "BOOLEAN"], ["a", "b"]>>)
bool_value (true)
