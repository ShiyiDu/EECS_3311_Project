add_class(d)
bool_value (false)
add_attribute("e", "A", "A")
add_class(D)
add_call_chain(<<b,C>>)
add_call_chain(<<C,INTEGER,c>>)
add_query("e", "C", <<["d", "BOOLEAN"], ["C", "d"], ["B", "INTEGER"], ["e", "INTEGER"], ["A", "e"], ["b", "c"]>>, "e")
add_query("C", "A", <<["D", "d"], ["b", "INTEGER"], ["d", "c"], ["C", "BOOLEAN"], ["C", "c"], ["A", "e"]>>, "BOOLEAN")
add_query("a", "C", <<["e", "BOOLEAN"], ["c", "b"], ["B", "BOOLEAN"], ["e", "INTEGER"]>>, "d")
add_call_chain(<<D,B,B,BOOLEAN,c>>)
type_check
logical_negation
addition
add_call_chain(<<B,BOOLEAN,c,C,C>>)
numerical_negation
bool_value (true)
add_class(C)
add_command("A", "A", <<["a", "D"], ["D", "a"], ["B", "BOOLEAN"], ["b", "a"], ["D", "INTEGER"], ["C", "INTEGER"], ["A", "B"]>>)
add_call_chain(<<d,BOOLEAN,BOOLEAN,INTEGER>>)
add_query("B", "a", <<["e", "INTEGER"], ["d", "BOOLEAN"], ["e", "a"], ["A", "INTEGER"], ["e", "BOOLEAN"], ["D", "D"], ["d", "INTEGER"]>>, "e")
add_query("b", "D", <<["e", "INTEGER"]>>, "d")
add_class(d)
add_command("B", "d", <<["a", "A"], ["D", "A"]>>)
conjunction
add_command("c", "C", <<["D", "BOOLEAN"], ["c", "INTEGER"], ["d", "INTEGER"], ["b", "BOOLEAN"]>>)
equals
add_call_chain(<<b,e,A,D,B,d>>)
add_call_chain(<<b,B,C,b,A,A,BOOLEAN,C,c>>)
add_attribute("a", "c", "A")
int_value (45)
add_call_chain(<<C,c,e>>)
type_check
numerical_negation
add_attribute("A", "C", "c")
add_command("B", "b", <<["A", "C"], ["A", "e"], ["a", "BOOLEAN"]>>)
add_call_chain(<<A,b,B,b,BOOLEAN,a,B>>)
add_call_chain(<<d>>)
numerical_negation
add_query("A", "d", <<["C", "C"], ["d", "BOOLEAN"]>>, "D")
less_than
multiplication
add_attribute("e", "a", "BOOLEAN")
add_call_chain(<<D>>)
add_call_chain(<<d,c,B,D,c,D,a,b,A>>)
add_command("c", "d", <<["C", "a"], ["BOOLEAN", "INTEGER"], ["b", "d"]>>)
logical_negation
add_call_chain(<<A,b>>)
bool_value (false)
logical_negation
conjunction
add_call_chain(<<c,C,C>>)
add_call_chain(<<A,a,C>>)
generate_java_code
subtraction
type_check
add_call_chain(<<a,a,A>>)
add_call_chain(<<b,C,b,C,a,BOOLEAN,INTEGER,A>>)
add_call_chain(<<A,A,d,b,A,C,D,B,A>>)
equals
add_query("b", "B", <<["B", "INTEGER"], ["a", "BOOLEAN"], ["D", "e"], ["a", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "B"], ["B", "B"], ["BOOLEAN", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>, "B")
add_query("A", "C", <<["INTEGER", "e"], ["c", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["A", "BOOLEAN"]>>, "B")
int_value (35)
modulo
add_query("D", "A", <<["d", "INTEGER"]>>, "D")
numerical_negation
add_call_chain(<<C,C,b,A,BOOLEAN,c,B,BOOLEAN,B>>)
add_call_chain(<<d,D,B>>)
multiplication
int_value (2)
less_than
bool_value (true)
add_call_chain(<<D,A,C,D,B,a,A,C,INTEGER>>)
logical_negation
logical_negation
add_call_chain(<<c,c,a,D,e,e,e,D,C>>)
numerical_negation
bool_value (true)
add_call_chain(<<C,a,D,a,B>>)
int_value (44)
add_attribute("a", "c", "BOOLEAN")
add_class(B)
logical_negation
logical_negation
add_call_chain(<<D>>)
add_class(A)
add_class(C)
add_call_chain(<<e,BOOLEAN,B,D,c,D,D>>)
numerical_negation
add_command("e", "a", <<["b", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "C"]>>)
add_call_chain(<<b,b,D,e>>)
add_call_chain(<<a,c,A,a,D>>)
add_call_chain(<<e,B,B,C,b,INTEGER,B,c>>)
type_check
greater_than
add_attribute("A", "a", "INTEGER")
logical_negation
add_command("a", "A", <<["D", "BOOLEAN"], ["INTEGER", "INTEGER"]>>)
add_call_chain(<<A>>)
add_attribute("a", "c", "A")
bool_value (true)
add_query("INTEGER", "d", <<["a", "BOOLEAN"]>>, "C")
add_attribute("c", "a", "B")
generate_java_code
add_class(C)
multiplication
addition
bool_value (false)
add_attribute("C", "b", "BOOLEAN")
add_attribute("a", "b", "BOOLEAN")
logical_negation
add_call_chain(<<A,e>>)
bool_value (true)
bool_value (false)
int_value (13)
add_attribute("b", "e", "INTEGER")
bool_value (false)
add_attribute("a", "A", "c")
conjunction
add_command("BOOLEAN", "INTEGER", <<["A", "INTEGER"], ["b", "BOOLEAN"], ["a", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
add_query("D", "BOOLEAN", <<["b", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "INTEGER"], ["b", "c"], ["B", "INTEGER"], ["B", "INTEGER"], ["A", "INTEGER"]>>, "e")
generate_java_code
numerical_negation
add_call_chain(<<e,D,A,b,D,D,b,INTEGER>>)
add_call_chain(<<C,c,INTEGER,e,C>>)
bool_value (true)
less_than
bool_value (true)
add_call_chain(<<C,A>>)
add_attribute("D", "C", "INTEGER")
numerical_negation
bool_value (true)
add_query("C", "D", <<["e", "A"], ["INTEGER", "INTEGER"], ["INTEGER", "INTEGER"], ["INTEGER", "b"]>>, "c")
add_attribute("D", "c", "BOOLEAN")
quotient
add_query("e", "B", <<["C", "B"], ["a", "e"], ["D", "INTEGER"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "b"]>>, "a")
numerical_negation
add_command("b", "B", <<["B", "INTEGER"]>>)
int_value (42)
add_call_chain(<<b>>)
int_value (5)
numerical_negation
add_call_chain(<<A,d>>)
greater_than
add_call_chain(<<A,d,D,B,INTEGER>>)
add_query("INTEGER", "D", <<["d", "BOOLEAN"], ["a", "b"], ["b", "B"], ["e", "INTEGER"], ["B", "INTEGER"]>>, "A")
equals
add_query("A", "D", <<["d", "a"], ["c", "INTEGER"], ["A", "C"], ["D", "INTEGER"], ["D", "D"]>>, "D")
conjunction
add_query("BOOLEAN", "c", <<["c", "INTEGER"], ["c", "INTEGER"]>>, "B")
add_command("A", "C", <<["B", "INTEGER"], ["B", "INTEGER"], ["C", "c"]>>)
add_call_chain(<<A,C,B>>)
bool_value (true)
add_call_chain(<<e,C,D>>)
add_attribute("b", "D", "e")
add_attribute("D", "d", "BOOLEAN")
add_call_chain(<<e,d,BOOLEAN,b,B>>)
add_query("b", "d", <<["A", "BOOLEAN"]>>, "c")
type_check
logical_negation
add_query("c", "e", <<["d", "a"], ["A", "b"], ["e", "BOOLEAN"], ["D", "b"], ["B", "D"], ["c", "INTEGER"], ["A", "e"], ["C", "c"]>>, "C")
int_value (44)
add_query("d", "e", <<["D", "INTEGER"], ["c", "d"], ["a", "BOOLEAN"], ["b", "c"], ["D", "BOOLEAN"], ["A", "INTEGER"]>>, "d")
type_check
add_query("d", "a", <<["C", "BOOLEAN"], ["C", "D"], ["B", "INTEGER"], ["c", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "C"], ["a", "BOOLEAN"]>>, "b")
add_call_chain(<<B>>)
add_command("b", "C", <<["a", "BOOLEAN"], ["c", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["e", "c"], ["e", "b"], ["e", "BOOLEAN"], ["d", "BOOLEAN"]>>)
add_query("B", "B", <<["BOOLEAN", "BOOLEAN"], ["e", "INTEGER"], ["B", "BOOLEAN"], ["A", "b"], ["B", "BOOLEAN"], ["C", "a"], ["d", "INTEGER"], ["INTEGER", "C"]>>, "BOOLEAN")
add_query("e", "B", <<["b", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "INTEGER"], ["B", "INTEGER"], ["e", "d"], ["b", "BOOLEAN"], ["e", "INTEGER"], ["B", "BOOLEAN"]>>, "B")
generate_java_code
add_call_chain(<<BOOLEAN,b>>)
equals
add_command("INTEGER", "a", <<["d", "INTEGER"], ["C", "a"], ["C", "BOOLEAN"], ["C", "e"], ["d", "e"]>>)
int_value (14)
generate_java_code
numerical_negation
int_value (7)
generate_java_code
add_call_chain(<<e,A,c,a,d,A,c>>)
numerical_negation
add_call_chain(<<b,c,INTEGER,C,D,A,e>>)
add_attribute("D", "A", "INTEGER")
bool_value (true)
add_attribute("c", "C", "INTEGER")
add_call_chain(<<c,A,D,b,C,D,B,D,D>>)
add_query("D", "c", <<["C", "BOOLEAN"], ["D", "a"], ["D", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["C", "A"]>>, "INTEGER")
add_call_chain(<<c>>)
numerical_negation
add_query("a", "a", <<["D", "INTEGER"], ["c", "BOOLEAN"], ["d", "INTEGER"], ["e", "INTEGER"], ["A", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "BOOLEAN"], ["e", "BOOLEAN"], ["a", "BOOLEAN"]>>, "C")
add_attribute("e", "b", "C")
add_query("b", "c", <<["C", "INTEGER"], ["a", "INTEGER"], ["d", "INTEGER"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["INTEGER", "INTEGER"]>>, "a")
logical_negation
add_attribute("a", "D", "D")
add_call_chain(<<a,C,C,d,B>>)
add_attribute("e", "c", "INTEGER")
add_command("b", "b", <<["e", "BOOLEAN"], ["b", "B"], ["a", "b"], ["C", "INTEGER"]>>)
generate_java_code
add_query("e", "A", <<["D", "e"], ["D", "B"], ["e", "A"], ["BOOLEAN", "INTEGER"], ["e", "A"], ["e", "BOOLEAN"], ["c", "INTEGER"], ["d", "INTEGER"]>>, "INTEGER")
logical_negation
add_call_chain(<<BOOLEAN>>)
greater_than
bool_value (true)
int_value (31)
add_attribute("D", "C", "INTEGER")
add_call_chain(<<B>>)
conjunction
logical_negation
add_attribute("e", "d", "c")
add_call_chain(<<c,C,A,b,B,b>>)
type_check
add_attribute("a", "A", "INTEGER")
logical_negation
add_command("B", "b", <<["a", "INTEGER"], ["A", "INTEGER"], ["A", "INTEGER"], ["D", "INTEGER"]>>)
less_than
int_value (43)
logical_negation
numerical_negation
add_command("INTEGER", "D", <<["e", "b"], ["b", "B"], ["D", "BOOLEAN"], ["e", "INTEGER"], ["D", "BOOLEAN"], ["a", "BOOLEAN"]>>)
add_call_chain(<<e,b,INTEGER,INTEGER,e,d>>)
modulo
add_query("C", "C", <<["a", "c"], ["B", "BOOLEAN"], ["D", "INTEGER"], ["e", "d"], ["D", "D"], ["a", "INTEGER"], ["INTEGER", "B"]>>, "D")
add_call_chain(<<e,A,A>>)
add_class(D)
add_command("c", "B", <<["c", "INTEGER"], ["A", "BOOLEAN"]>>)
logical_negation
type_check
generate_java_code
add_call_chain(<<c,a,a,a,b,b,d,b>>)
add_attribute("D", "INTEGER", "BOOLEAN")
add_attribute("d", "e", "BOOLEAN")
int_value (31)
add_call_chain(<<C>>)
add_call_chain(<<INTEGER,D,e,C,d,D,A,b>>)
int_value (44)
add_call_chain(<<C,e,D,B>>)
add_call_chain(<<e,a,INTEGER,C,b,a,C,A,D>>)
greater_than
add_call_chain(<<INTEGER,e,C,D,c,C>>)
conjunction
add_command("BOOLEAN", "b", <<["INTEGER", "A"], ["a", "INTEGER"]>>)
add_class(a)
numerical_negation
addition
logical_negation
add_attribute("C", "INTEGER", "BOOLEAN")
add_class(A)
add_query("e", "INTEGER", <<["c", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["c", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["A", "C"], ["C", "BOOLEAN"]>>, "b")
add_command("c", "e", <<["d", "BOOLEAN"], ["e", "BOOLEAN"]>>)
add_call_chain(<<C,C,B,d,C,b,a,a,d>>)
add_command("B", "e", <<["D", "INTEGER"], ["c", "INTEGER"], ["e", "INTEGER"], ["a", "BOOLEAN"], ["B", "INTEGER"], ["A", "a"], ["d", "BOOLEAN"], ["A", "INTEGER"]>>)
type_check
add_class(d)
add_command("e", "e", <<["C", "BOOLEAN"], ["b", "INTEGER"], ["D", "INTEGER"], ["D", "INTEGER"], ["D", "BOOLEAN"]>>)
add_command("A", "A", <<["A", "c"], ["d", "INTEGER"], ["D", "c"], ["b", "BOOLEAN"], ["e", "D"], ["a", "BOOLEAN"], ["b", "B"], ["c", "d"], ["e", "BOOLEAN"]>>)
add_command("e", "C", <<["D", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "INTEGER"], ["C", "C"], ["b", "BOOLEAN"]>>)
add_attribute("C", "a", "INTEGER")
add_command("A", "c", <<["d", "BOOLEAN"], ["a", "INTEGER"], ["A", "BOOLEAN"]>>)
int_value (30)
add_command("C", "A", <<["a", "INTEGER"], ["d", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["a", "BOOLEAN"], ["b", "e"], ["b", "BOOLEAN"], ["e", "d"]>>)
bool_value (false)
add_command("c", "e", <<["A", "INTEGER"], ["A", "INTEGER"], ["b", "INTEGER"], ["d", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "INTEGER"], ["D", "BOOLEAN"]>>)
add_attribute("e", "D", "INTEGER")
add_call_chain(<<a,A,c,c,B,b,INTEGER,B>>)
type_check
add_command("c", "INTEGER", <<["e", "INTEGER"], ["e", "INTEGER"], ["d", "e"]>>)
add_query("b", "B", <<["c", "INTEGER"], ["A", "BOOLEAN"], ["C", "BOOLEAN"]>>, "A")
numerical_negation
add_class(C)
numerical_negation
greater_than
int_value (12)
add_call_chain(<<a,C,A>>)
int_value (32)
