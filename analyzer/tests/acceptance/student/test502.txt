add_query("D", "c", <<["D", "a"], ["INTEGER", "BOOLEAN"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["A", "A"], ["a", "INTEGER"]>>, "D")
equals
add_call_chain(<<D,c,A>>)
add_attribute("b", "b", "e")
add_call_chain(<<c,d,D,A,C,b,B>>)
add_query("C", "D", <<["B", "INTEGER"], ["e", "INTEGER"], ["d", "BOOLEAN"], ["A", "INTEGER"], ["a", "INTEGER"], ["c", "b"], ["A", "INTEGER"], ["a", "INTEGER"]>>, "C")
add_call_chain(<<C>>)
type_check
generate_java_code
add_query("B", "D", <<["b", "C"], ["d", "BOOLEAN"], ["D", "INTEGER"], ["b", "INTEGER"], ["a", "INTEGER"], ["D", "C"]>>, "A")
add_call_chain(<<C,B,C,b,d,a,d>>)
addition
add_class(e)
numerical_negation
bool_value (true)
int_value (9)
add_attribute("b", "D", "D")
greater_than
add_call_chain(<<a,INTEGER,D>>)
quotient
numerical_negation
add_call_chain(<<A,b,b,C,b,D,c>>)
add_command("INTEGER", "b", <<["a", "D"], ["D", "INTEGER"], ["e", "INTEGER"], ["INTEGER", "INTEGER"], ["b", "e"], ["C", "BOOLEAN"], ["INTEGER", "INTEGER"], ["D", "a"]>>)
add_query("B", "e", <<["BOOLEAN", "B"], ["B", "INTEGER"], ["b", "INTEGER"]>>, "B")
add_call_chain(<<B,c,d,c,b,INTEGER>>)
bool_value (false)
numerical_negation
type_check
add_query("D", "D", <<["B", "BOOLEAN"], ["b", "INTEGER"]>>, "a")
modulo
int_value (10)
subtraction
generate_java_code
add_attribute("D", "b", "BOOLEAN")
int_value (25)
disjunction
add_call_chain(<<c,C,c,BOOLEAN,BOOLEAN>>)
add_call_chain(<<A>>)
logical_negation
logical_negation
add_command("b", "A", <<["D", "BOOLEAN"], ["e", "A"], ["B", "INTEGER"]>>)
add_command("e", "a", <<["a", "INTEGER"], ["c", "INTEGER"], ["A", "b"], ["B", "INTEGER"], ["A", "INTEGER"], ["d", "BOOLEAN"], ["a", "INTEGER"], ["A", "BOOLEAN"]>>)
add_call_chain(<<e,a,c>>)
add_query("e", "c", <<["d", "BOOLEAN"], ["C", "INTEGER"], ["D", "C"], ["d", "C"], ["A", "BOOLEAN"]>>, "BOOLEAN")
add_class(e)
add_attribute("B", "D", "BOOLEAN")
int_value (35)
type_check
add_command("e", "B", <<["C", "INTEGER"], ["a", "INTEGER"], ["D", "BOOLEAN"], ["A", "INTEGER"]>>)
add_call_chain(<<d,INTEGER,a>>)
add_class(b)
numerical_negation
type_check
add_query("D", "B", <<["C", "C"], ["c", "INTEGER"], ["c", "A"], ["B", "INTEGER"], ["A", "b"], ["INTEGER", "b"], ["B", "c"], ["BOOLEAN", "BOOLEAN"]>>, "a")
int_value (24)
add_call_chain(<<b,A,A,b,C,b,c,C,e>>)
add_attribute("A", "C", "INTEGER")
numerical_negation
addition
add_call_chain(<<C,A,B,e,D>>)
add_query("e", "INTEGER", <<["D", "A"], ["INTEGER", "INTEGER"]>>, "c")
add_command("b", "D", <<["B", "INTEGER"], ["a", "INTEGER"], ["a", "C"], ["A", "D"], ["e", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
generate_java_code
add_attribute("D", "c", "a")
add_command("D", "b", <<["D", "A"]>>)
add_query("BOOLEAN", "a", <<["d", "INTEGER"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["b", "b"]>>, "c")
add_call_chain(<<C,D,D,C,d,A,D,b>>)
logical_negation
add_command("b", "e", <<["e", "INTEGER"], ["B", "BOOLEAN"], ["C", "BOOLEAN"]>>)
add_query("A", "INTEGER", <<["C", "B"], ["A", "c"], ["INTEGER", "BOOLEAN"], ["B", "INTEGER"], ["A", "BOOLEAN"]>>, "e")
add_call_chain(<<C,C,A,B,INTEGER,e,INTEGER>>)
addition
add_query("c", "d", <<["D", "BOOLEAN"], ["c", "e"], ["C", "BOOLEAN"]>>, "BOOLEAN")
less_than
greater_than
add_command("c", "A", <<["D", "BOOLEAN"], ["C", "INTEGER"], ["A", "INTEGER"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["BOOLEAN", "b"], ["D", "BOOLEAN"], ["A", "INTEGER"]>>)
add_command("INTEGER", "D", <<["D", "a"], ["B", "INTEGER"], ["C", "INTEGER"], ["A", "INTEGER"], ["c", "INTEGER"], ["b", "INTEGER"], ["C", "BOOLEAN"]>>)
quotient
add_query("a", "d", <<["A", "INTEGER"], ["a", "A"], ["B", "INTEGER"], ["e", "a"], ["INTEGER", "BOOLEAN"]>>, "b")
multiplication
add_call_chain(<<C,D,D,C,b>>)
add_query("b", "B", <<["b", "INTEGER"], ["e", "BOOLEAN"], ["b", "d"], ["c", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "c"], ["A", "b"], ["B", "INTEGER"]>>, "B")
add_command("A", "BOOLEAN", <<["B", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "D"], ["e", "BOOLEAN"], ["INTEGER", "A"], ["e", "C"], ["c", "a"], ["A", "BOOLEAN"]>>)
add_command("D", "B", <<["C", "BOOLEAN"]>>)
add_call_chain(<<b,c,c,a,e,B,C>>)
add_command("A", "C", <<["D", "INTEGER"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["e", "INTEGER"], ["A", "INTEGER"], ["C", "INTEGER"]>>)
add_query("D", "c", <<["INTEGER", "B"], ["A", "BOOLEAN"], ["C", "b"], ["C", "BOOLEAN"], ["INTEGER", "d"], ["INTEGER", "BOOLEAN"], ["c", "d"], ["e", "B"]>>, "D")
bool_value (true)
add_command("D", "e", <<["c", "BOOLEAN"], ["e", "INTEGER"], ["A", "B"]>>)
add_query("b", "B", <<["c", "BOOLEAN"], ["b", "D"], ["c", "INTEGER"], ["a", "INTEGER"], ["c", "D"], ["d", "INTEGER"], ["C", "A"], ["a", "INTEGER"], ["D", "D"]>>, "BOOLEAN")
add_command("e", "d", <<["A", "b"], ["B", "INTEGER"], ["C", "INTEGER"], ["e", "BOOLEAN"], ["a", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["D", "INTEGER"], ["a", "A"], ["c", "D"]>>)
add_attribute("b", "B", "b")
generate_java_code
add_call_chain(<<a,INTEGER>>)
int_value (39)
generate_java_code
add_query("a", "A", <<["INTEGER", "INTEGER"], ["INTEGER", "e"], ["C", "INTEGER"], ["c", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "a"], ["c", "BOOLEAN"], ["e", "e"], ["D", "BOOLEAN"]>>, "a")
add_command("D", "INTEGER", <<["A", "B"], ["a", "d"], ["BOOLEAN", "BOOLEAN"], ["A", "INTEGER"], ["A", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
generate_java_code
bool_value (false)
bool_value (false)
logical_negation
add_query("a", "A", <<["BOOLEAN", "e"], ["d", "A"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "c"]>>, "c")
add_attribute("C", "b", "C")
numerical_negation
add_call_chain(<<C,BOOLEAN,b,INTEGER,a,D>>)
disjunction
logical_negation
int_value (22)
add_query("B", "b", <<["a", "INTEGER"], ["a", "BOOLEAN"]>>, "A")
int_value (35)
int_value (28)
add_command("a", "d", <<["C", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "INTEGER"], ["A", "e"], ["a", "INTEGER"], ["d", "BOOLEAN"]>>)
int_value (14)
add_query("e", "b", <<["A", "INTEGER"], ["A", "B"], ["D", "A"]>>, "A")
add_attribute("c", "e", "BOOLEAN")
numerical_negation
numerical_negation
bool_value (true)
bool_value (false)
int_value (30)
add_query("c", "d", <<["A", "INTEGER"], ["c", "b"]>>, "C")
equals
int_value (42)
add_call_chain(<<a,C,d,B,INTEGER,b>>)
disjunction
add_command("A", "D", <<["c", "INTEGER"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["C", "B"]>>)
equals
add_query("d", "e", <<["B", "INTEGER"]>>, "a")
conjunction
generate_java_code
add_query("B", "d", <<["a", "INTEGER"], ["a", "BOOLEAN"]>>, "e")
bool_value (false)
logical_negation
add_call_chain(<<INTEGER,A,INTEGER>>)
add_attribute("A", "BOOLEAN", "INTEGER")
bool_value (true)
add_call_chain(<<e,B,B,c>>)
generate_java_code
bool_value (true)
logical_negation
disjunction
add_command("d", "C", <<["A", "B"], ["d", "BOOLEAN"], ["INTEGER", "INTEGER"]>>)
generate_java_code
add_command("c", "INTEGER", <<["e", "INTEGER"], ["e", "BOOLEAN"], ["d", "BOOLEAN"]>>)
bool_value (false)
less_than
conjunction
add_call_chain(<<A,BOOLEAN,BOOLEAN,a>>)
equals
add_class(c)
bool_value (true)
disjunction
conjunction
less_than
greater_than
add_attribute("c", "e", "BOOLEAN")
less_than
generate_java_code
add_attribute("C", "d", "INTEGER")
conjunction
add_attribute("INTEGER", "c", "BOOLEAN")
add_call_chain(<<C,B,D,INTEGER,b>>)
add_command("A", "A", <<["d", "B"], ["a", "B"], ["BOOLEAN", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "INTEGER"], ["C", "BOOLEAN"], ["B", "INTEGER"], ["A", "INTEGER"]>>)
add_call_chain(<<a,A,B,A,BOOLEAN,D,c,D>>)
add_attribute("INTEGER", "e", "a")
add_call_chain(<<d,d,c>>)
type_check
generate_java_code
numerical_negation
add_command("d", "D", <<["b", "INTEGER"], ["INTEGER", "C"], ["b", "INTEGER"]>>)
less_than
add_call_chain(<<BOOLEAN,e>>)
add_command("d", "D", <<["c", "INTEGER"], ["c", "d"], ["e", "INTEGER"], ["B", "BOOLEAN"], ["D", "INTEGER"]>>)
add_class(B)
add_class(C)
add_attribute("D", "a", "BOOLEAN")
add_call_chain(<<C,d,B,B,b,b,A,D>>)
add_command("B", "D", <<["e", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "INTEGER"], ["d", "D"], ["INTEGER", "INTEGER"], ["C", "BOOLEAN"], ["d", "INTEGER"]>>)
add_query("C", "A", <<["C", "BOOLEAN"], ["d", "INTEGER"], ["B", "INTEGER"], ["D", "INTEGER"], ["e", "INTEGER"], ["C", "INTEGER"], ["b", "A"], ["D", "INTEGER"]>>, "B")
bool_value (true)
logical_negation
add_call_chain(<<BOOLEAN,INTEGER,e,B>>)
less_than
add_query("BOOLEAN", "A", <<["d", "BOOLEAN"], ["a", "B"], ["B", "INTEGER"], ["INTEGER", "INTEGER"], ["INTEGER", "INTEGER"], ["c", "D"], ["B", "INTEGER"], ["c", "a"]>>, "e")
add_call_chain(<<e,INTEGER,BOOLEAN>>)
multiplication
logical_negation
logical_negation
type_check
int_value (36)
bool_value (false)
bool_value (false)
add_query("a", "D", <<["d", "BOOLEAN"], ["C", "b"], ["BOOLEAN", "INTEGER"], ["C", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "a"], ["A", "INTEGER"]>>, "C")
disjunction
add_call_chain(<<D>>)
add_call_chain(<<B,B,b,C>>)
add_call_chain(<<e,d,BOOLEAN>>)
logical_negation
add_command("A", "d", <<["e", "BOOLEAN"], ["d", "B"], ["INTEGER", "D"], ["A", "D"], ["A", "INTEGER"], ["e", "INTEGER"]>>)
int_value (21)
bool_value (true)
bool_value (true)
type_check
equals
add_class(d)
add_call_chain(<<b>>)
bool_value (true)
conjunction
add_attribute("D", "A", "BOOLEAN")
add_command("b", "d", <<["c", "D"], ["C", "C"], ["A", "a"], ["D", "BOOLEAN"], ["d", "D"], ["c", "INTEGER"], ["B", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "INTEGER"]>>)
numerical_negation
type_check
numerical_negation
bool_value (true)
bool_value (true)
add_call_chain(<<e,A,C,D>>)
equals
add_call_chain(<<A,a,B,A,D,e,A,a,C>>)
add_query("d", "B", <<["b", "INTEGER"], ["d", "b"], ["a", "c"], ["c", "BOOLEAN"], ["D", "INTEGER"]>>, "e")
addition
add_attribute("d", "BOOLEAN", "INTEGER")
logical_negation
bool_value (true)
add_call_chain(<<a,D,e,d,A,INTEGER,e,A,A>>)
conjunction
conjunction
disjunction
less_than
logical_negation
bool_value (false)
add_call_chain(<<INTEGER,e,A,c,B,D,C>>)
type_check
generate_java_code
greater_than
