add_call_chain(<<e,b,e,c,d,b,c,B,B>>)
disjunction
int_value (10)
add_query("d", "BOOLEAN", <<["b", "INTEGER"], ["e", "INTEGER"], ["C", "INTEGER"], ["c", "BOOLEAN"], ["C", "B"], ["BOOLEAN", "INTEGER"]>>, "c")
add_attribute("D", "D", "A")
logical_negation
add_command("D", "b", <<["e", "BOOLEAN"], ["d", "e"]>>)
logical_negation
modulo
int_value (15)
add_query("c", "A", <<["c", "D"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["C", "BOOLEAN"]>>, "D")
add_query("d", "B", <<["d", "b"], ["A", "INTEGER"], ["c", "d"], ["BOOLEAN", "BOOLEAN"], ["e", "INTEGER"], ["e", "e"], ["INTEGER", "BOOLEAN"], ["C", "INTEGER"], ["a", "e"]>>, "D")
add_attribute("c", "BOOLEAN", "B")
type_check
add_attribute("d", "b", "d")
bool_value (true)
add_call_chain(<<A,a,c>>)
add_command("C", "d", <<["A", "D"], ["b", "C"], ["c", "INTEGER"], ["A", "INTEGER"], ["INTEGER", "INTEGER"]>>)
add_query("B", "C", <<["C", "BOOLEAN"], ["B", "INTEGER"], ["D", "INTEGER"], ["B", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["A", "BOOLEAN"], ["c", "BOOLEAN"]>>, "INTEGER")
add_class(INTEGER)
add_class(D)
greater_than
logical_negation
add_query("c", "a", <<["A", "INTEGER"], ["C", "c"], ["b", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "D"], ["b", "D"], ["C", "INTEGER"]>>, "A")
int_value (39)
generate_java_code
int_value (21)
add_query("A", "D", <<["C", "b"], ["c", "D"], ["C", "D"], ["B", "BOOLEAN"], ["d", "INTEGER"]>>, "INTEGER")
add_call_chain(<<A,INTEGER,c,d,c,A,B>>)
add_query("a", "INTEGER", <<["INTEGER", "d"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["C", "C"], ["A", "INTEGER"], ["B", "BOOLEAN"]>>, "BOOLEAN")
add_command("d", "b", <<["C", "INTEGER"]>>)
add_attribute("A", "d", "e")
int_value (30)
add_call_chain(<<b>>)
add_call_chain(<<BOOLEAN,A,INTEGER,A,b,A,D,A,C>>)
add_call_chain(<<C,A,e>>)
add_attribute("D", "D", "A")
add_query("A", "A", <<["C", "INTEGER"], ["B", "BOOLEAN"], ["INTEGER", "INTEGER"], ["c", "INTEGER"], ["a", "BOOLEAN"]>>, "B")
addition
conjunction
generate_java_code
add_class(d)
add_attribute("c", "c", "c")
add_call_chain(<<C,D,d,C,d,D,C>>)
greater_than
generate_java_code
add_call_chain(<<d,D,d,D,b,e,C,b>>)
add_query("a", "B", <<["B", "BOOLEAN"], ["D", "INTEGER"], ["b", "A"], ["c", "INTEGER"], ["C", "BOOLEAN"], ["D", "B"], ["e", "INTEGER"], ["a", "INTEGER"], ["D", "INTEGER"]>>, "c")
add_class(d)
int_value (8)
numerical_negation
generate_java_code
numerical_negation
disjunction
int_value (5)
add_attribute("D", "b", "b")
numerical_negation
add_command("e", "D", <<["D", "BOOLEAN"], ["c", "INTEGER"]>>)
add_call_chain(<<B,C,D,INTEGER>>)
add_command("e", "e", <<["B", "INTEGER"], ["C", "INTEGER"], ["c", "INTEGER"], ["d", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "BOOLEAN"]>>)
add_call_chain(<<d,INTEGER,d,C,e>>)
add_call_chain(<<a>>)
add_class(D)
logical_negation
add_call_chain(<<c,C,C,B,b,C,c,B>>)
int_value (3)
add_query("C", "e", <<["b", "INTEGER"], ["d", "BOOLEAN"], ["INTEGER", "INTEGER"], ["C", "INTEGER"], ["C", "BOOLEAN"]>>, "D")
conjunction
add_command("D", "B", <<["BOOLEAN", "BOOLEAN"], ["d", "INTEGER"], ["a", "INTEGER"], ["BOOLEAN", "INTEGER"], ["d", "INTEGER"], ["e", "INTEGER"]>>)
add_attribute("c", "D", "BOOLEAN")
add_command("e", "C", <<["C", "BOOLEAN"], ["A", "INTEGER"], ["B", "INTEGER"], ["a", "BOOLEAN"], ["C", "INTEGER"]>>)
type_check
add_query("D", "a", <<["C", "B"], ["A", "B"], ["e", "C"], ["c", "INTEGER"], ["d", "INTEGER"], ["B", "INTEGER"], ["e", "INTEGER"]>>, "D")
modulo
logical_negation
add_command("D", "a", <<["B", "INTEGER"], ["A", "BOOLEAN"], ["A", "INTEGER"], ["C", "e"], ["C", "e"], ["e", "BOOLEAN"], ["e", "INTEGER"], ["c", "BOOLEAN"]>>)
logical_negation
add_call_chain(<<BOOLEAN,e,e,D,C,D,a,c>>)
modulo
int_value (8)
type_check
add_command("C", "b", <<["d", "BOOLEAN"], ["D", "BOOLEAN"]>>)
add_query("d", "a", <<["b", "BOOLEAN"], ["C", "c"], ["B", "A"], ["c", "BOOLEAN"], ["B", "INTEGER"], ["C", "BOOLEAN"], ["e", "BOOLEAN"]>>, "c")
generate_java_code
add_command("e", "d", <<["c", "d"], ["b", "BOOLEAN"], ["D", "C"], ["e", "BOOLEAN"]>>)
add_query("A", "b", <<["b", "BOOLEAN"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["INTEGER", "D"], ["d", "a"], ["A", "B"]>>, "C")
add_attribute("B", "c", "BOOLEAN")
bool_value (true)
add_call_chain(<<e,A>>)
add_call_chain(<<D>>)
add_attribute("C", "A", "BOOLEAN")
add_call_chain(<<c>>)
add_query("c", "A", <<["b", "INTEGER"], ["c", "BOOLEAN"], ["a", "a"], ["b", "c"], ["B", "A"], ["d", "BOOLEAN"], ["e", "BOOLEAN"], ["d", "INTEGER"]>>, "BOOLEAN")
add_call_chain(<<D,A,INTEGER,d,e,C,d,d,c>>)
add_call_chain(<<B,d,B,a,BOOLEAN,b,D,b>>)
add_attribute("A", "a", "INTEGER")
bool_value (true)
add_query("C", "a", <<["e", "a"], ["d", "d"], ["c", "BOOLEAN"], ["d", "BOOLEAN"], ["c", "INTEGER"], ["B", "c"], ["BOOLEAN", "BOOLEAN"]>>, "B")
numerical_negation
add_command("INTEGER", "b", <<["B", "BOOLEAN"]>>)
add_command("b", "D", <<["e", "INTEGER"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["d", "e"], ["a", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "INTEGER"]>>)
add_query("d", "e", <<["C", "e"]>>, "D")
add_query("a", "A", <<["b", "INTEGER"]>>, "INTEGER")
type_check
add_attribute("c", "C", "B")
logical_negation
int_value (49)
numerical_negation
add_call_chain(<<D,C,b,B,A,B,D,INTEGER,b>>)
add_attribute("D", "C", "INTEGER")
logical_negation
equals
add_query("d", "c", <<["b", "C"], ["d", "INTEGER"], ["d", "A"]>>, "B")
add_call_chain(<<C,d,C,e,BOOLEAN,a,e,c>>)
type_check
type_check
logical_negation
bool_value (true)
int_value (22)
add_call_chain(<<C,A,d,A,C,D,a,D,D>>)
logical_negation
add_attribute("b", "B", "INTEGER")
add_class(b)
quotient
add_call_chain(<<b,a,e>>)
type_check
add_call_chain(<<a,A,d,d,B,e,D,e,e>>)
add_query("e", "BOOLEAN", <<["D", "e"], ["C", "INTEGER"]>>, "D")
add_call_chain(<<D,BOOLEAN,e,C,e,A,BOOLEAN,C>>)
numerical_negation
add_attribute("e", "B", "INTEGER")
add_command("D", "d", <<["D", "e"], ["A", "BOOLEAN"], ["a", "BOOLEAN"]>>)
add_call_chain(<<C,a,b,C,A,B,c,e>>)
add_call_chain(<<B,B,e,INTEGER,e,a,D,INTEGER,a>>)
add_class(INTEGER)
generate_java_code
quotient
conjunction
add_attribute("D", "a", "INTEGER")
add_query("BOOLEAN", "B", <<["D", "BOOLEAN"]>>, "C")
add_attribute("B", "a", "INTEGER")
add_attribute("INTEGER", "b", "A")
numerical_negation
logical_negation
add_attribute("D", "b", "INTEGER")
add_query("A", "D", <<["C", "D"], ["c", "INTEGER"], ["B", "C"], ["a", "A"], ["A", "INTEGER"], ["INTEGER", "INTEGER"], ["c", "b"]>>, "c")
bool_value (true)
add_command("C", "C", <<["C", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "d"], ["d", "BOOLEAN"], ["INTEGER", "A"], ["e", "BOOLEAN"], ["C", "e"], ["A", "BOOLEAN"], ["A", "BOOLEAN"]>>)
add_command("C", "C", <<["d", "BOOLEAN"]>>)
less_than
type_check
subtraction
add_query("c", "b", <<["B", "BOOLEAN"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["D", "b"]>>, "D")
generate_java_code
add_call_chain(<<b,A>>)
generate_java_code
int_value (3)
add_attribute("B", "b", "BOOLEAN")
bool_value (true)
logical_negation
add_call_chain(<<b,D,c,C,b>>)
type_check
numerical_negation
add_query("e", "D", <<["C", "C"], ["c", "INTEGER"], ["a", "D"], ["D", "A"]>>, "e")
add_attribute("C", "BOOLEAN", "INTEGER")
add_call_chain(<<d,A,D,c,D,c,INTEGER>>)
add_call_chain(<<b,B,a>>)
int_value (43)
add_query("B", "d", <<["B", "INTEGER"], ["INTEGER", "INTEGER"], ["A", "INTEGER"], ["e", "a"]>>, "B")
add_query("B", "b", <<["e", "INTEGER"], ["b", "INTEGER"], ["a", "INTEGER"]>>, "A")
logical_negation
modulo
add_query("C", "b", <<["c", "INTEGER"]>>, "d")
add_call_chain(<<a,BOOLEAN,B,B>>)
logical_negation
add_class(C)
int_value (7)
add_call_chain(<<B,a>>)
add_call_chain(<<c,A,BOOLEAN,A,C>>)
bool_value (false)
modulo
type_check
add_query("D", "e", <<["D", "INTEGER"], ["D", "INTEGER"], ["A", "BOOLEAN"], ["D", "INTEGER"], ["D", "e"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["a", "INTEGER"]>>, "d")
numerical_negation
bool_value (true)
bool_value (false)
generate_java_code
add_call_chain(<<BOOLEAN,a,C,a,d,c>>)
bool_value (true)
type_check
add_query("BOOLEAN", "d", <<["c", "INTEGER"], ["A", "BOOLEAN"], ["c", "INTEGER"]>>, "e")
bool_value (false)
add_call_chain(<<c,B,C>>)
add_call_chain(<<d,INTEGER,B,D,B,C,C>>)
bool_value (true)
multiplication
generate_java_code
subtraction
add_command("a", "A", <<["A", "INTEGER"], ["D", "a"]>>)
add_attribute("D", "b", "INTEGER")
logical_negation
add_attribute("a", "B", "INTEGER")
add_query("a", "C", <<["B", "b"], ["BOOLEAN", "BOOLEAN"], ["a", "INTEGER"], ["b", "BOOLEAN"], ["d", "BOOLEAN"]>>, "A")
add_query("D", "b", <<["A", "BOOLEAN"], ["B", "INTEGER"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["e", "BOOLEAN"], ["d", "d"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["A", "BOOLEAN"]>>, "C")
int_value (25)
add_call_chain(<<d,C,A,B,D,c>>)
add_call_chain(<<d,b,A,b,D>>)
numerical_negation
add_command("BOOLEAN", "C", <<["b", "INTEGER"], ["C", "INTEGER"], ["C", "INTEGER"], ["e", "BOOLEAN"], ["C", "A"], ["a", "INTEGER"], ["d", "BOOLEAN"], ["C", "BOOLEAN"]>>)
bool_value (true)
int_value (33)
add_command("b", "C", <<["B", "INTEGER"], ["D", "BOOLEAN"], ["d", "c"], ["e", "INTEGER"]>>)
add_query("e", "BOOLEAN", <<["B", "D"], ["INTEGER", "b"], ["c", "BOOLEAN"], ["b", "a"], ["C", "A"], ["a", "INTEGER"]>>, "e")
add_query("d", "A", <<["d", "d"], ["B", "BOOLEAN"], ["e", "D"], ["D", "C"]>>, "d")
numerical_negation
add_class(d)
add_attribute("C", "A", "A")
multiplication
bool_value (false)
int_value (20)
add_call_chain(<<B,A,A,d,C,A>>)
generate_java_code
add_attribute("c", "b", "INTEGER")
add_query("d", "B", <<["c", "BOOLEAN"], ["d", "b"], ["INTEGER", "b"], ["A", "A"]>>, "A")
add_class(INTEGER)
logical_negation
add_attribute("a", "d", "INTEGER")
equals
add_attribute("a", "e", "b")
add_command("b", "A", <<["C", "BOOLEAN"]>>)
add_query("e", "D", <<["e", "BOOLEAN"], ["b", "e"], ["BOOLEAN", "BOOLEAN"], ["a", "INTEGER"], ["D", "INTEGER"], ["D", "a"], ["b", "INTEGER"]>>, "B")
bool_value (false)
bool_value (false)
add_command("B", "e", <<["a", "D"], ["e", "BOOLEAN"]>>)
int_value (6)
int_value (38)
generate_java_code
add_query("D", "B", <<["D", "D"]>>, "A")
add_command("C", "D", <<["B", "c"], ["b", "INTEGER"], ["d", "INTEGER"], ["A", "BOOLEAN"], ["e", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
numerical_negation
conjunction
add_class(A)
logical_negation
add_call_chain(<<A,A,c,C,b,e,d,b>>)
add_call_chain(<<A,b,a,e,a,c>>)
add_command("a", "a", <<["e", "BOOLEAN"], ["c", "BOOLEAN"], ["a", "d"], ["a", "BOOLEAN"], ["B", "INTEGER"], ["c", "INTEGER"]>>)
logical_negation
add_call_chain(<<D,BOOLEAN,c,B,b>>)
bool_value (false)
add_attribute("B", "C", "INTEGER")
add_call_chain(<<c>>)
int_value (44)
logical_negation
add_attribute("C", "C", "BOOLEAN")
conjunction
generate_java_code
greater_than
add_attribute("a", "b", "INTEGER")
add_query("c", "b", <<["INTEGER", "BOOLEAN"], ["A", "C"], ["A", "INTEGER"], ["a", "B"], ["D", "D"]>>, "c")
add_call_chain(<<e,B,BOOLEAN,b>>)
numerical_negation
add_command("C", "B", <<["C", "D"], ["c", "C"], ["e", "BOOLEAN"], ["D", "INTEGER"], ["A", "BOOLEAN"]>>)
logical_negation
add_class(d)
bool_value (false)
type_check
add_attribute("B", "a", "BOOLEAN")
logical_negation
conjunction
add_call_chain(<<B,d,D>>)
conjunction
bool_value (true)
