type_check
add_call_chain(<<D,D,e,D,d>>)
disjunction
logical_negation
subtraction
add_class(C)
add_attribute("c", "B", "D")
generate_java_code
generate_java_code
add_command("A", "b", <<["b", "e"], ["a", "INTEGER"], ["d", "B"], ["C", "BOOLEAN"], ["D", "C"], ["c", "BOOLEAN"], ["B", "C"]>>)
add_call_chain(<<a,a,c,INTEGER,D,A,BOOLEAN,B,B>>)
add_call_chain(<<d,C>>)
int_value (34)
bool_value (true)
add_command("C", "D", <<["a", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "INTEGER"], ["b", "INTEGER"], ["D", "INTEGER"], ["D", "B"], ["C", "INTEGER"]>>)
add_call_chain(<<c>>)
less_than
numerical_negation
numerical_negation
numerical_negation
generate_java_code
int_value (41)
add_call_chain(<<B,A,b,A>>)
add_class(e)
add_command("b", "d", <<["e", "BOOLEAN"], ["A", "INTEGER"], ["INTEGER", "d"], ["A", "BOOLEAN"]>>)
int_value (11)
add_call_chain(<<a>>)
add_command("D", "c", <<["c", "e"], ["B", "BOOLEAN"], ["e", "BOOLEAN"], ["d", "d"], ["INTEGER", "INTEGER"], ["e", "d"], ["a", "B"], ["a", "BOOLEAN"]>>)
generate_java_code
add_call_chain(<<b,A,A,e,d,e,B>>)
add_attribute("BOOLEAN", "BOOLEAN", "A")
add_class(D)
addition
addition
modulo
disjunction
bool_value (false)
add_call_chain(<<b,D,A,D,INTEGER,e,b,C>>)
bool_value (false)
add_class(c)
logical_negation
add_call_chain(<<D>>)
add_attribute("A", "D", "BOOLEAN")
add_call_chain(<<A,INTEGER,INTEGER,INTEGER,B>>)
add_class(BOOLEAN)
disjunction
add_call_chain(<<D,b>>)
add_command("b", "c", <<["C", "BOOLEAN"]>>)
logical_negation
add_call_chain(<<A,a,e,b,D,b,B,INTEGER,B>>)
conjunction
bool_value (false)
add_call_chain(<<B,a,e,C>>)
less_than
bool_value (false)
add_attribute("e", "D", "C")
quotient
add_call_chain(<<INTEGER,A,D,b,INTEGER,B,a>>)
int_value (30)
generate_java_code
add_query("e", "C", <<["b", "BOOLEAN"]>>, "e")
logical_negation
logical_negation
add_command("a", "B", <<["c", "INTEGER"], ["c", "BOOLEAN"], ["b", "INTEGER"], ["C", "D"], ["c", "INTEGER"], ["C", "B"], ["b", "d"]>>)
add_command("c", "BOOLEAN", <<["B", "INTEGER"], ["a", "C"], ["a", "BOOLEAN"]>>)
add_class(C)
int_value (48)
add_call_chain(<<A,c,D>>)
add_command("a", "BOOLEAN", <<["c", "c"], ["a", "INTEGER"]>>)
bool_value (true)
conjunction
add_query("B", "a", <<["C", "INTEGER"], ["B", "e"], ["b", "INTEGER"], ["D", "INTEGER"], ["a", "INTEGER"], ["b", "c"], ["B", "INTEGER"], ["d", "INTEGER"], ["b", "BOOLEAN"]>>, "D")
numerical_negation
add_query("a", "c", <<["A", "INTEGER"], ["a", "INTEGER"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["C", "BOOLEAN"], ["INTEGER", "d"], ["c", "D"]>>, "a")
type_check
add_call_chain(<<a,a,D,INTEGER,C,e,B,D>>)
greater_than
bool_value (false)
int_value (14)
greater_than
bool_value (true)
add_attribute("B", "b", "B")
numerical_negation
generate_java_code
add_call_chain(<<B,c,B,d>>)
add_attribute("B", "a", "INTEGER")
add_class(B)
add_call_chain(<<C,c,e,A,c>>)
numerical_negation
add_query("B", "b", <<["B", "d"], ["d", "INTEGER"], ["e", "D"], ["B", "INTEGER"], ["d", "INTEGER"], ["a", "BOOLEAN"], ["b", "INTEGER"], ["C", "C"], ["d", "B"]>>, "c")
add_command("a", "B", <<["c", "D"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "INTEGER"]>>)
add_query("D", "B", <<["d", "INTEGER"], ["D", "INTEGER"], ["c", "BOOLEAN"], ["e", "INTEGER"], ["B", "a"], ["A", "BOOLEAN"]>>, "C")
add_attribute("d", "d", "INTEGER")
add_class(INTEGER)
less_than
add_attribute("b", "c", "b")
add_call_chain(<<d,a,D,e,c,a,d>>)
numerical_negation
add_call_chain(<<B,c,b,B,C,A>>)
int_value (31)
add_class(c)
type_check
numerical_negation
logical_negation
type_check
numerical_negation
add_command("C", "B", <<["BOOLEAN", "INTEGER"], ["b", "INTEGER"], ["C", "c"]>>)
add_query("c", "d", <<["C", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>, "e")
int_value (36)
add_call_chain(<<b,c>>)
generate_java_code
add_call_chain(<<B,e,D,D,c,e>>)
add_query("C", "A", <<["C", "C"], ["INTEGER", "D"], ["a", "BOOLEAN"]>>, "C")
int_value (11)
disjunction
add_call_chain(<<a,A,c,e,BOOLEAN,c,b,d>>)
logical_negation
generate_java_code
add_attribute("b", "A", "INTEGER")
add_command("b", "A", <<["d", "INTEGER"], ["D", "a"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["D", "INTEGER"], ["A", "A"], ["b", "INTEGER"], ["e", "BOOLEAN"]>>)
add_class(C)
type_check
int_value (47)
bool_value (true)
add_class(d)
logical_negation
add_command("BOOLEAN", "d", <<["c", "INTEGER"], ["B", "BOOLEAN"], ["a", "D"]>>)
type_check
add_attribute("a", "c", "b")
add_command("C", "A", <<["BOOLEAN", "d"], ["A", "e"], ["a", "d"], ["C", "BOOLEAN"]>>)
numerical_negation
bool_value (false)
numerical_negation
bool_value (true)
generate_java_code
add_command("D", "D", <<["D", "INTEGER"], ["INTEGER", "c"], ["d", "c"], ["c", "c"], ["e", "INTEGER"], ["C", "BOOLEAN"]>>)
add_command("b", "a", <<["C", "BOOLEAN"], ["e", "INTEGER"]>>)
add_query("C", "A", <<["a", "INTEGER"], ["D", "BOOLEAN"], ["d", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "C"], ["c", "c"]>>, "C")
add_attribute("A", "a", "BOOLEAN")
int_value (47)
greater_than
add_class(B)
add_call_chain(<<d,D,A,b,C,a,c>>)
addition
less_than
bool_value (true)
generate_java_code
type_check
add_call_chain(<<b,d,c,e,A>>)
add_attribute("c", "e", "D")
equals
bool_value (true)
generate_java_code
logical_negation
add_command("d", "e", <<["b", "INTEGER"], ["B", "a"]>>)
subtraction
add_call_chain(<<e>>)
bool_value (false)
bool_value (false)
bool_value (true)
add_call_chain(<<b,INTEGER,C,INTEGER>>)
logical_negation
int_value (3)
add_query("d", "D", <<["b", "BOOLEAN"], ["c", "INTEGER"], ["a", "INTEGER"], ["a", "INTEGER"], ["c", "INTEGER"], ["b", "INTEGER"], ["A", "e"]>>, "D")
add_call_chain(<<C,e>>)
int_value (40)
add_command("A", "d", <<["a", "D"], ["c", "INTEGER"], ["b", "BOOLEAN"], ["a", "A"], ["C", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["b", "INTEGER"], ["e", "INTEGER"], ["BOOLEAN", "INTEGER"]>>)
int_value (17)
add_query("A", "b", <<["D", "C"], ["INTEGER", "BOOLEAN"], ["c", "BOOLEAN"], ["BOOLEAN", "e"]>>, "a")
add_command("c", "D", <<["B", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "INTEGER"]>>)
add_call_chain(<<C,A,D>>)
add_query("B", "b", <<["C", "d"], ["a", "INTEGER"], ["a", "INTEGER"], ["D", "BOOLEAN"], ["INTEGER", "INTEGER"], ["C", "BOOLEAN"]>>, "D")
numerical_negation
logical_negation
add_attribute("c", "BOOLEAN", "INTEGER")
bool_value (false)
add_class(B)
logical_negation
add_query("d", "e", <<["B", "INTEGER"], ["a", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "INTEGER"], ["d", "c"]>>, "A")
generate_java_code
type_check
add_command("a", "B", <<["d", "c"], ["d", "BOOLEAN"], ["C", "D"], ["BOOLEAN", "BOOLEAN"], ["d", "BOOLEAN"]>>)
add_call_chain(<<C,A,a,c,d>>)
add_command("A", "B", <<["b", "BOOLEAN"], ["C", "INTEGER"], ["A", "d"], ["BOOLEAN", "INTEGER"], ["e", "a"]>>)
add_query("A", "e", <<["A", "e"], ["INTEGER", "BOOLEAN"], ["a", "b"]>>, "c")
add_command("A", "a", <<["c", "INTEGER"], ["d", "INTEGER"], ["b", "INTEGER"], ["c", "INTEGER"], ["BOOLEAN", "INTEGER"], ["INTEGER", "C"]>>)
logical_negation
add_attribute("D", "e", "INTEGER")
generate_java_code
modulo
type_check
bool_value (true)
add_query("e", "D", <<["c", "BOOLEAN"], ["C", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["D", "BOOLEAN"], ["D", "a"]>>, "B")
bool_value (false)
conjunction
add_call_chain(<<e,e,A,a,A,B,b,d,D>>)
add_class(B)
add_call_chain(<<BOOLEAN,B,C,B>>)
