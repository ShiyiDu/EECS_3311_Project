logical_negation
add_attribute("d", "A", "BOOLEAN")
add_call_chain(<<C,e>>)
add_query("b", "A", <<["D", "BOOLEAN"], ["d", "b"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "b"], ["INTEGER", "B"]>>, "c")
logical_negation
add_attribute("a", "C", "C")
logical_negation
add_query("d", "D", <<["B", "A"], ["B", "INTEGER"], ["A", "c"], ["c", "INTEGER"]>>, "A")
less_than
modulo
bool_value (false)
logical_negation
bool_value (true)
int_value (29)
add_command("e", "C", <<["b", "BOOLEAN"], ["C", "BOOLEAN"], ["BOOLEAN", "a"], ["A", "INTEGER"], ["b", "d"], ["A", "BOOLEAN"], ["INTEGER", "INTEGER"], ["B", "BOOLEAN"]>>)
bool_value (true)
add_command("D", "C", <<["A", "BOOLEAN"], ["B", "d"], ["BOOLEAN", "INTEGER"]>>)
add_call_chain(<<a,A,D,c,a,D,e,BOOLEAN,a>>)
generate_java_code
add_query("c", "A", <<["B", "e"], ["D", "D"], ["BOOLEAN", "d"], ["INTEGER", "BOOLEAN"], ["b", "INTEGER"], ["d", "BOOLEAN"]>>, "c")
add_class(B)
add_attribute("C", "d", "C")
add_query("B", "A", <<["c", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "B"], ["C", "e"]>>, "a")
add_command("A", "INTEGER", <<["d", "A"], ["BOOLEAN", "INTEGER"], ["B", "b"], ["A", "A"]>>)
add_call_chain(<<A,a>>)
generate_java_code
add_query("b", "INTEGER", <<["C", "INTEGER"], ["B", "INTEGER"], ["C", "INTEGER"], ["e", "BOOLEAN"], ["A", "D"], ["d", "INTEGER"]>>, "BOOLEAN")
quotient
add_query("c", "C", <<["B", "INTEGER"], ["b", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "C"]>>, "D")
add_command("B", "e", <<["a", "INTEGER"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["d", "INTEGER"], ["C", "INTEGER"], ["B", "b"], ["A", "a"], ["C", "C"], ["INTEGER", "INTEGER"]>>)
bool_value (false)
add_call_chain(<<BOOLEAN,b,d,A,C>>)
add_class(a)
numerical_negation
quotient
add_call_chain(<<A,d,BOOLEAN,d>>)
add_query("a", "B", <<["INTEGER", "BOOLEAN"], ["d", "e"], ["D", "BOOLEAN"], ["b", "INTEGER"], ["a", "BOOLEAN"], ["C", "INTEGER"], ["c", "BOOLEAN"]>>, "a")
bool_value (true)
add_call_chain(<<b>>)
add_call_chain(<<b,D>>)
type_check
conjunction
add_query("d", "A", <<["B", "BOOLEAN"], ["B", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["b", "INTEGER"], ["e", "d"], ["D", "INTEGER"]>>, "a")
add_command("c", "B", <<["d", "A"], ["b", "INTEGER"]>>)
greater_than
bool_value (false)
add_attribute("d", "b", "INTEGER")
add_command("C", "e", <<["D", "A"], ["C", "INTEGER"]>>)
int_value (38)
add_call_chain(<<B,D,BOOLEAN,B,a,C>>)
modulo
add_command("c", "a", <<["C", "e"], ["C", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["b", "INTEGER"], ["C", "INTEGER"]>>)
add_class(c)
addition
equals
add_attribute("BOOLEAN", "D", "INTEGER")
numerical_negation
greater_than
add_command("C", "e", <<["a", "INTEGER"], ["c", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["INTEGER", "d"], ["c", "BOOLEAN"]>>)
int_value (4)
add_call_chain(<<b,BOOLEAN>>)
add_command("D", "C", <<["e", "B"], ["a", "b"], ["B", "a"]>>)
int_value (39)
add_call_chain(<<c,b,A>>)
bool_value (true)
add_query("e", "D", <<["B", "B"], ["C", "D"], ["a", "INTEGER"], ["A", "INTEGER"], ["b", "BOOLEAN"], ["d", "c"], ["e", "A"]>>, "D")
generate_java_code
add_attribute("c", "e", "B")
add_call_chain(<<D,C,C,D,e,e,d,e>>)
add_attribute("D", "e", "BOOLEAN")
numerical_negation
add_query("D", "INTEGER", <<["a", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["a", "BOOLEAN"]>>, "BOOLEAN")
add_call_chain(<<B,b,a,B,B,b,d,A,c>>)
add_attribute("C", "B", "BOOLEAN")
less_than
quotient
add_call_chain(<<BOOLEAN,e,C,b,a>>)
bool_value (false)
add_attribute("a", "C", "e")
int_value (28)
add_call_chain(<<e,b,A>>)
add_query("b", "a", <<["D", "INTEGER"]>>, "B")
logical_negation
add_query("BOOLEAN", "INTEGER", <<["d", "BOOLEAN"], ["C", "C"], ["c", "BOOLEAN"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["a", "INTEGER"]>>, "B")
equals
generate_java_code
conjunction
bool_value (false)
logical_negation
add_query("b", "A", <<["a", "a"], ["a", "INTEGER"], ["a", "INTEGER"], ["D", "D"], ["d", "BOOLEAN"], ["c", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["C", "INTEGER"]>>, "BOOLEAN")
add_query("D", "D", <<["c", "INTEGER"], ["B", "INTEGER"], ["c", "BOOLEAN"], ["A", "INTEGER"]>>, "b")
int_value (11)
add_command("c", "a", <<["D", "A"], ["e", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "INTEGER"], ["a", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["C", "c"], ["d", "BOOLEAN"], ["b", "BOOLEAN"]>>)
generate_java_code
add_query("A", "d", <<["BOOLEAN", "INTEGER"], ["a", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["d", "BOOLEAN"]>>, "a")
add_call_chain(<<e,c>>)
type_check
add_attribute("d", "e", "BOOLEAN")
add_command("D", "A", <<["D", "INTEGER"]>>)
add_call_chain(<<INTEGER,c,d,INTEGER>>)
add_attribute("b", "a", "INTEGER")
add_command("A", "a", <<["BOOLEAN", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["INTEGER", "C"], ["b", "D"], ["D", "a"], ["b", "BOOLEAN"], ["d", "BOOLEAN"]>>)
add_command("A", "a", <<["a", "INTEGER"], ["C", "INTEGER"], ["D", "B"], ["B", "C"], ["b", "A"], ["e", "b"], ["d", "B"], ["e", "D"]>>)
add_query("d", "a", <<["INTEGER", "BOOLEAN"], ["a", "INTEGER"], ["a", "INTEGER"], ["D", "c"], ["b", "INTEGER"], ["C", "INTEGER"], ["A", "BOOLEAN"]>>, "a")
add_attribute("C", "B", "C")
bool_value (false)
add_call_chain(<<b,INTEGER,c,D,c,a,c,c>>)
add_attribute("e", "BOOLEAN", "INTEGER")
add_attribute("D", "e", "INTEGER")
less_than
multiplication
add_call_chain(<<e,A,a,B,D,INTEGER,a>>)
disjunction
add_command("INTEGER", "B", <<["D", "BOOLEAN"], ["b", "b"]>>)
add_query("b", "A", <<["c", "b"]>>, "C")
numerical_negation
bool_value (false)
add_class(e)
add_call_chain(<<B,A,D,d,D,b,c,B>>)
generate_java_code
int_value (32)
bool_value (true)
add_query("C", "A", <<["C", "BOOLEAN"], ["C", "c"], ["D", "c"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "INTEGER"], ["d", "INTEGER"], ["A", "BOOLEAN"], ["b", "D"]>>, "e")
add_call_chain(<<C,B,A,B,d,A,C,C,b>>)
add_call_chain(<<A,d,e,d>>)
add_query("INTEGER", "A", <<["b", "BOOLEAN"]>>, "e")
type_check
add_attribute("D", "D", "D")
add_call_chain(<<e,e>>)
add_query("B", "A", <<["B", "BOOLEAN"], ["b", "INTEGER"]>>, "c")
add_command("a", "INTEGER", <<["INTEGER", "b"], ["e", "BOOLEAN"]>>)
int_value (6)
add_query("A", "BOOLEAN", <<["b", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["D", "INTEGER"], ["C", "e"], ["C", "INTEGER"], ["D", "BOOLEAN"]>>, "B")
numerical_negation
add_class(D)
numerical_negation
add_query("e", "C", <<["b", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "D"], ["e", "BOOLEAN"]>>, "A")
numerical_negation
add_query("d", "a", <<["BOOLEAN", "b"], ["d", "BOOLEAN"], ["INTEGER", "C"], ["b", "INTEGER"], ["B", "INTEGER"]>>, "a")
add_call_chain(<<C,D,B,D,D,C,b,a>>)
add_attribute("D", "B", "BOOLEAN")
add_call_chain(<<e,d,INTEGER,BOOLEAN,b,B,a>>)
add_attribute("D", "INTEGER", "BOOLEAN")
add_attribute("B", "e", "INTEGER")
add_call_chain(<<b,BOOLEAN>>)
add_attribute("a", "C", "D")
add_attribute("A", "a", "INTEGER")
bool_value (true)
addition
add_call_chain(<<e,B,c,a,a>>)
equals
generate_java_code
bool_value (false)
logical_negation
int_value (47)
add_attribute("a", "D", "BOOLEAN")
conjunction
bool_value (false)
type_check
generate_java_code
add_command("e", "a", <<["INTEGER", "INTEGER"], ["e", "INTEGER"], ["a", "BOOLEAN"], ["INTEGER", "C"], ["INTEGER", "BOOLEAN"], ["INTEGER", "INTEGER"], ["b", "INTEGER"], ["A", "BOOLEAN"]>>)
add_attribute("a", "BOOLEAN", "INTEGER")
add_call_chain(<<C,d,c,c>>)
conjunction
equals
add_call_chain(<<c,BOOLEAN,a>>)
add_command("C", "a", <<["e", "b"], ["A", "BOOLEAN"]>>)
add_command("BOOLEAN", "c", <<["c", "BOOLEAN"], ["c", "C"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "A"]>>)
add_call_chain(<<a,B,d,c,BOOLEAN,c,A>>)
add_command("A", "b", <<["INTEGER", "INTEGER"]>>)
conjunction
type_check
add_query("BOOLEAN", "A", <<["C", "BOOLEAN"], ["D", "b"], ["e", "D"], ["A", "INTEGER"], ["D", "BOOLEAN"]>>, "e")
generate_java_code
add_call_chain(<<c,e,INTEGER>>)
int_value (15)
numerical_negation
type_check
generate_java_code
add_call_chain(<<a,D,c,B,C,D,d>>)
bool_value (true)
int_value (47)
modulo
numerical_negation
bool_value (false)
add_query("D", "c", <<["c", "A"], ["C", "BOOLEAN"], ["e", "BOOLEAN"], ["a", "B"], ["D", "INTEGER"], ["e", "c"]>>, "b")
bool_value (false)
int_value (44)
numerical_negation
add_command("B", "d", <<["a", "BOOLEAN"], ["d", "INTEGER"], ["d", "BOOLEAN"], ["e", "B"], ["a", "BOOLEAN"], ["e", "INTEGER"], ["A", "INTEGER"], ["C", "BOOLEAN"]>>)
add_call_chain(<<D,B>>)
bool_value (false)
add_command("e", "D", <<["e", "INTEGER"], ["D", "INTEGER"], ["e", "b"]>>)
add_attribute("e", "d", "INTEGER")
add_command("e", "D", <<["e", "INTEGER"], ["a", "INTEGER"], ["e", "d"], ["d", "D"]>>)
numerical_negation
add_attribute("a", "e", "BOOLEAN")
int_value (12)
add_query("a", "b", <<["A", "D"], ["C", "INTEGER"], ["INTEGER", "A"], ["e", "BOOLEAN"], ["a", "B"], ["A", "INTEGER"], ["A", "BOOLEAN"]>>, "b")
add_call_chain(<<b,b,A,BOOLEAN,b,C>>)
disjunction
add_command("a", "d", <<["e", "D"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["C", "C"], ["C", "INTEGER"], ["d", "BOOLEAN"], ["d", "INTEGER"], ["a", "INTEGER"]>>)
add_call_chain(<<d,c,B>>)
add_query("INTEGER", "C", <<["d", "INTEGER"], ["c", "e"]>>, "C")
logical_negation
int_value (28)
generate_java_code
numerical_negation
add_command("a", "a", <<["b", "A"], ["e", "INTEGER"], ["d", "BOOLEAN"], ["B", "INTEGER"]>>)
add_command("c", "INTEGER", <<["b", "INTEGER"], ["C", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["C", "c"], ["d", "BOOLEAN"]>>)
add_class(A)
numerical_negation
bool_value (true)
addition
add_command("B", "B", <<["A", "BOOLEAN"], ["e", "a"], ["C", "INTEGER"], ["d", "BOOLEAN"]>>)
add_attribute("d", "A", "BOOLEAN")
add_class(a)
bool_value (false)
bool_value (false)
add_command("e", "b", <<["e", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "a"], ["e", "INTEGER"]>>)
bool_value (true)
numerical_negation
add_attribute("A", "C", "c")
equals
add_query("C", "C", <<["A", "D"], ["b", "a"], ["B", "INTEGER"], ["BOOLEAN", "INTEGER"], ["D", "BOOLEAN"], ["b", "BOOLEAN"], ["d", "C"]>>, "e")
add_call_chain(<<A,e,A,C>>)
add_call_chain(<<BOOLEAN>>)
greater_than
add_class(C)
add_class(C)
int_value (29)
add_class(BOOLEAN)
generate_java_code
add_call_chain(<<c,A,e>>)
numerical_negation
add_call_chain(<<a,c,A,D,A,C,INTEGER,d,C>>)
bool_value (true)
add_command("b", "a", <<["B", "d"], ["e", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["C", "INTEGER"], ["c", "BOOLEAN"], ["A", "b"], ["B", "INTEGER"]>>)
generate_java_code
numerical_negation
add_attribute("B", "c", "BOOLEAN")
add_call_chain(<<e,c,c,c,B,c,D>>)
add_query("a", "C", <<["B", "BOOLEAN"], ["C", "INTEGER"], ["d", "B"]>>, "b")
numerical_negation
add_command("C", "B", <<["D", "B"], ["b", "INTEGER"], ["b", "c"], ["A", "INTEGER"], ["e", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["C", "B"]>>)
