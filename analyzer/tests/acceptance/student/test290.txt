bool_value (true)
add_query("B", "C", <<["A", "BOOLEAN"], ["c", "A"], ["e", "INTEGER"]>>, "a")
type_check
add_call_chain(<<e,D>>)
numerical_negation
add_class(b)
add_attribute("b", "INTEGER", "INTEGER")
add_call_chain(<<D,b>>)
add_command("B", "a", <<["BOOLEAN", "INTEGER"], ["a", "BOOLEAN"]>>)
add_class(c)
add_command("a", "d", <<["A", "INTEGER"], ["A", "BOOLEAN"], ["d", "INTEGER"], ["B", "e"]>>)
add_call_chain(<<INTEGER,d>>)
add_query("C", "e", <<["D", "BOOLEAN"], ["d", "BOOLEAN"]>>, "INTEGER")
add_class(e)
numerical_negation
bool_value (false)
numerical_negation
add_attribute("C", "C", "BOOLEAN")
add_query("B", "C", <<["A", "INTEGER"], ["a", "BOOLEAN"], ["D", "d"], ["B", "INTEGER"], ["A", "INTEGER"], ["C", "INTEGER"], ["e", "BOOLEAN"]>>, "BOOLEAN")
numerical_negation
int_value (43)
add_call_chain(<<c,C,D,e,a,d>>)
add_query("D", "B", <<["B", "INTEGER"]>>, "c")
disjunction
bool_value (true)
bool_value (false)
logical_negation
add_query("b", "b", <<["e", "INTEGER"], ["a", "INTEGER"], ["d", "D"]>>, "c")
add_call_chain(<<A,C,B,e,a>>)
numerical_negation
addition
add_query("c", "B", <<["C", "A"], ["D", "INTEGER"], ["INTEGER", "D"], ["C", "BOOLEAN"]>>, "e")
add_attribute("a", "D", "BOOLEAN")
add_class(D)
add_call_chain(<<e,B,D,B,e>>)
add_class(B)
add_call_chain(<<a>>)
add_call_chain(<<b>>)
logical_negation
add_call_chain(<<INTEGER,B>>)
add_command("D", "D", <<["A", "B"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["BOOLEAN", "INTEGER"], ["A", "c"], ["a", "INTEGER"], ["d", "INTEGER"]>>)
logical_negation
add_call_chain(<<B,C,C,B,d,e,a,e>>)
disjunction
add_class(D)
addition
greater_than
logical_negation
bool_value (false)
int_value (6)
add_call_chain(<<B,D,d,b,a,d>>)
add_class(D)
add_call_chain(<<C,c,a>>)
bool_value (false)
add_call_chain(<<D,B,b,B,a,d,A>>)
int_value (20)
int_value (41)
conjunction
add_call_chain(<<c,c,B,e,BOOLEAN,A,a>>)
add_attribute("D", "a", "C")
less_than
add_attribute("BOOLEAN", "B", "A")
add_query("D", "a", <<["C", "INTEGER"], ["C", "a"]>>, "B")
bool_value (true)
logical_negation
add_class(b)
add_class(d)
add_call_chain(<<BOOLEAN,D,a,d,a,B,C>>)
add_call_chain(<<b,e,D,b,C,C,INTEGER,d,C>>)
generate_java_code
greater_than
bool_value (false)
bool_value (false)
logical_negation
add_attribute("e", "e", "C")
type_check
add_query("b", "BOOLEAN", <<["b", "INTEGER"], ["b", "d"], ["b", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "INTEGER"]>>, "INTEGER")
generate_java_code
subtraction
logical_negation
int_value (26)
greater_than
equals
logical_negation
logical_negation
add_call_chain(<<c>>)
add_call_chain(<<c>>)
add_command("e", "B", <<["BOOLEAN", "INTEGER"], ["C", "INTEGER"], ["d", "b"], ["d", "INTEGER"]>>)
add_class(c)
add_class(b)
add_command("INTEGER", "C", <<["c", "B"], ["d", "D"], ["D", "BOOLEAN"], ["A", "BOOLEAN"]>>)
add_attribute("C", "A", "b")
add_call_chain(<<BOOLEAN,c,b>>)
int_value (9)
bool_value (false)
int_value (25)
logical_negation
add_query("e", "a", <<["b", "INTEGER"], ["C", "INTEGER"], ["b", "INTEGER"]>>, "e")
numerical_negation
add_call_chain(<<d,C>>)
add_query("BOOLEAN", "b", <<["BOOLEAN", "INTEGER"], ["d", "INTEGER"]>>, "B")
disjunction
add_command("BOOLEAN", "e", <<["e", "INTEGER"], ["a", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "INTEGER"], ["c", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "d"], ["c", "BOOLEAN"]>>)
add_call_chain(<<A,D,BOOLEAN>>)
add_query("e", "A", <<["c", "BOOLEAN"], ["B", "BOOLEAN"]>>, "INTEGER")
add_command("B", "c", <<["INTEGER", "B"], ["e", "INTEGER"], ["b", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["d", "BOOLEAN"]>>)
int_value (12)
add_command("c", "a", <<["A", "INTEGER"], ["b", "C"], ["b", "C"], ["c", "b"], ["a", "BOOLEAN"], ["C", "BOOLEAN"]>>)
conjunction
add_attribute("C", "b", "INTEGER")
int_value (13)
numerical_negation
add_call_chain(<<D,b,BOOLEAN,A,B,c,C,B,e>>)
numerical_negation
bool_value (false)
add_attribute("BOOLEAN", "c", "BOOLEAN")
conjunction
add_call_chain(<<e,c,INTEGER,a>>)
add_call_chain(<<B>>)
addition
add_attribute("B", "A", "A")
equals
less_than
greater_than
int_value (22)
int_value (35)
generate_java_code
less_than
type_check
add_call_chain(<<b>>)
type_check
add_call_chain(<<b,A,d>>)
add_class(C)
bool_value (false)
add_command("d", "A", <<["B", "BOOLEAN"], ["C", "B"], ["A", "INTEGER"], ["a", "BOOLEAN"], ["e", "INTEGER"], ["A", "BOOLEAN"], ["D", "BOOLEAN"]>>)
int_value (36)
add_query("C", "B", <<["A", "INTEGER"], ["B", "BOOLEAN"], ["BOOLEAN", "d"], ["B", "c"], ["d", "b"], ["d", "D"]>>, "b")
generate_java_code
add_attribute("c", "e", "BOOLEAN")
int_value (34)
add_attribute("c", "D", "INTEGER")
conjunction
add_command("b", "D", <<["c", "B"]>>)
type_check
add_attribute("a", "D", "INTEGER")
generate_java_code
conjunction
subtraction
add_attribute("b", "C", "INTEGER")
int_value (38)
add_call_chain(<<e,D,d,d,a,INTEGER,BOOLEAN,e>>)
add_attribute("D", "d", "BOOLEAN")
int_value (15)
logical_negation
add_attribute("b", "A", "BOOLEAN")
logical_negation
numerical_negation
add_call_chain(<<d,A,D,B,A,D>>)
int_value (3)
add_call_chain(<<a,BOOLEAN>>)
generate_java_code
bool_value (true)
add_attribute("A", "B", "BOOLEAN")
modulo
add_attribute("BOOLEAN", "e", "D")
logical_negation
add_call_chain(<<b,c,d,a,e,d,c,A>>)
numerical_negation
add_attribute("b", "B", "INTEGER")
quotient
logical_negation
conjunction
int_value (35)
generate_java_code
add_call_chain(<<C,a,INTEGER,a,D,A,D,a>>)
add_call_chain(<<A,a,INTEGER,e,D,BOOLEAN,e,B>>)
int_value (17)
add_attribute("c", "A", "BOOLEAN")
multiplication
generate_java_code
numerical_negation
logical_negation
add_command("C", "D", <<["INTEGER", "BOOLEAN"], ["a", "A"]>>)
add_command("C", "D", <<["B", "BOOLEAN"], ["A", "INTEGER"], ["A", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["d", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "INTEGER"]>>)
add_call_chain(<<D,e>>)
subtraction
bool_value (false)
add_call_chain(<<INTEGER,a,B,b,C,B,B,B>>)
add_attribute("c", "d", "INTEGER")
int_value (24)
numerical_negation
subtraction
int_value (37)
type_check
numerical_negation
bool_value (false)
numerical_negation
logical_negation
int_value (49)
add_call_chain(<<INTEGER,B,A,INTEGER,B,D,C>>)
add_command("C", "C", <<["a", "BOOLEAN"]>>)
int_value (41)
add_query("INTEGER", "B", <<["INTEGER", "INTEGER"], ["a", "BOOLEAN"], ["B", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>, "BOOLEAN")
add_call_chain(<<b,C,A,B,INTEGER,B,B,d,C>>)
int_value (44)
