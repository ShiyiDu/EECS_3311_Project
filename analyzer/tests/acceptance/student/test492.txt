add_attribute("A", "C", "INTEGER")
type_check
add_query("e", "b", <<["e", "INTEGER"], ["c", "BOOLEAN"], ["e", "a"], ["b", "A"]>>, "A")
type_check
numerical_negation
bool_value (true)
add_attribute("B", "C", "INTEGER")
modulo
add_command("b", "INTEGER", <<["A", "INTEGER"], ["a", "INTEGER"], ["D", "BOOLEAN"], ["d", "B"], ["B", "B"], ["a", "D"], ["A", "a"]>>)
add_call_chain(<<INTEGER,INTEGER,BOOLEAN,A,a,d>>)
add_class(D)
add_command("b", "b", <<["b", "INTEGER"], ["d", "e"], ["c", "INTEGER"], ["B", "e"], ["d", "BOOLEAN"], ["BOOLEAN", "d"], ["D", "INTEGER"], ["b", "a"], ["b", "BOOLEAN"]>>)
numerical_negation
logical_negation
logical_negation
add_call_chain(<<A,e,A,INTEGER,B>>)
add_attribute("e", "A", "BOOLEAN")
add_attribute("d", "D", "INTEGER")
int_value (24)
add_attribute("a", "d", "BOOLEAN")
int_value (39)
add_call_chain(<<BOOLEAN,A,D,e,e>>)
subtraction
add_attribute("A", "e", "INTEGER")
logical_negation
add_call_chain(<<INTEGER,d,C,D,A>>)
add_command("C", "B", <<["D", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["d", "INTEGER"], ["A", "BOOLEAN"], ["D", "INTEGER"], ["C", "e"], ["d", "A"], ["A", "BOOLEAN"], ["b", "INTEGER"]>>)
less_than
type_check
add_command("C", "C", <<["a", "BOOLEAN"], ["d", "e"], ["B", "INTEGER"], ["b", "d"], ["d", "INTEGER"], ["c", "BOOLEAN"]>>)
int_value (15)
numerical_negation
add_class(c)
add_class(A)
int_value (15)
add_query("INTEGER", "e", <<["c", "BOOLEAN"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["c", "INTEGER"], ["c", "D"], ["a", "BOOLEAN"], ["a", "d"], ["A", "b"], ["d", "INTEGER"]>>, "D")
add_query("e", "b", <<["D", "a"]>>, "INTEGER")
add_query("a", "c", <<["e", "INTEGER"], ["BOOLEAN", "b"]>>, "A")
add_call_chain(<<c,e>>)
disjunction
add_call_chain(<<d,B>>)
add_attribute("A", "C", "D")
numerical_negation
numerical_negation
add_command("a", "C", <<["e", "B"], ["INTEGER", "B"], ["C", "BOOLEAN"]>>)
add_attribute("c", "b", "a")
bool_value (false)
add_command("INTEGER", "D", <<["e", "BOOLEAN"], ["INTEGER", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>)
add_query("BOOLEAN", "c", <<["C", "INTEGER"], ["d", "INTEGER"], ["d", "BOOLEAN"], ["e", "INTEGER"], ["A", "BOOLEAN"], ["b", "e"]>>, "a")
int_value (18)
addition
add_command("b", "B", <<["A", "BOOLEAN"], ["e", "INTEGER"], ["D", "BOOLEAN"], ["D", "a"], ["e", "BOOLEAN"], ["B", "A"], ["c", "a"], ["e", "BOOLEAN"], ["D", "INTEGER"]>>)
add_call_chain(<<a,d,D,b,c,B,b,C,B>>)
add_attribute("D", "a", "INTEGER")
add_attribute("A", "D", "INTEGER")
add_query("D", "a", <<["B", "D"], ["A", "BOOLEAN"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["A", "a"], ["D", "e"]>>, "A")
greater_than
bool_value (true)
type_check
generate_java_code
generate_java_code
add_query("C", "A", <<["a", "INTEGER"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "C"], ["D", "D"]>>, "a")
disjunction
generate_java_code
bool_value (false)
add_query("d", "c", <<["B", "INTEGER"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["d", "e"], ["b", "INTEGER"], ["c", "BOOLEAN"]>>, "e")
quotient
bool_value (true)
bool_value (true)
numerical_negation
bool_value (true)
add_command("a", "e", <<["D", "BOOLEAN"], ["C", "INTEGER"], ["A", "INTEGER"], ["e", "d"], ["B", "a"], ["C", "BOOLEAN"], ["c", "BOOLEAN"]>>)
numerical_negation
add_command("b", "c", <<["B", "BOOLEAN"], ["b", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>)
add_command("c", "b", <<["B", "INTEGER"], ["A", "a"], ["D", "INTEGER"], ["e", "INTEGER"], ["D", "e"], ["B", "INTEGER"]>>)
modulo
numerical_negation
add_attribute("INTEGER", "C", "B")
add_query("D", "B", <<["D", "d"]>>, "B")
add_command("e", "D", <<["A", "BOOLEAN"]>>)
bool_value (false)
int_value (44)
int_value (14)
int_value (16)
conjunction
add_call_chain(<<D,A,B,D,e>>)
add_call_chain(<<INTEGER>>)
type_check
greater_than
int_value (21)
numerical_negation
type_check
add_command("a", "a", <<["a", "D"], ["A", "BOOLEAN"], ["D", "c"], ["B", "C"], ["A", "BOOLEAN"], ["D", "C"], ["a", "b"], ["C", "D"]>>)
add_query("A", "A", <<["c", "BOOLEAN"], ["d", "INTEGER"], ["a", "INTEGER"], ["D", "INTEGER"], ["e", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["a", "INTEGER"]>>, "c")
type_check
add_call_chain(<<b,e,A,b,A>>)
greater_than
add_query("d", "B", <<["INTEGER", "INTEGER"], ["C", "C"], ["D", "a"], ["B", "INTEGER"], ["b", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "b"], ["C", "BOOLEAN"]>>, "B")
generate_java_code
logical_negation
logical_negation
int_value (41)
add_attribute("D", "C", "INTEGER")
bool_value (true)
add_call_chain(<<d,INTEGER,D,D,A,C,B>>)
add_command("d", "D", <<["c", "BOOLEAN"]>>)
bool_value (true)
add_call_chain(<<D,C,B,d,A,b,D>>)
add_class(BOOLEAN)
add_call_chain(<<b,C,b,a,C,d,INTEGER,BOOLEAN>>)
add_command("D", "INTEGER", <<["B", "INTEGER"], ["a", "C"], ["e", "INTEGER"], ["A", "c"], ["B", "INTEGER"]>>)
add_command("a", "D", <<["C", "c"], ["c", "INTEGER"], ["D", "INTEGER"], ["A", "INTEGER"], ["A", "INTEGER"], ["A", "BOOLEAN"]>>)
equals
conjunction
bool_value (true)
multiplication
add_class(e)
logical_negation
bool_value (false)
logical_negation
add_command("b", "A", <<["D", "BOOLEAN"]>>)
add_command("C", "C", <<["a", "C"]>>)
add_class(b)
generate_java_code
add_query("C", "A", <<["b", "INTEGER"], ["e", "BOOLEAN"]>>, "BOOLEAN")
add_attribute("INTEGER", "c", "INTEGER")
bool_value (true)
add_attribute("c", "a", "BOOLEAN")
logical_negation
bool_value (false)
quotient
add_call_chain(<<D>>)
add_query("b", "INTEGER", <<["d", "BOOLEAN"], ["INTEGER", "A"], ["A", "INTEGER"], ["INTEGER", "BOOLEAN"]>>, "C")
addition
addition
add_call_chain(<<BOOLEAN,d,BOOLEAN,a,A,D,c>>)
add_command("e", "e", <<["d", "C"], ["b", "INTEGER"], ["D", "e"], ["D", "C"], ["A", "INTEGER"]>>)
add_call_chain(<<BOOLEAN,A,A,e,A,B,B,B>>)
add_call_chain(<<c,b,d>>)
bool_value (false)
add_query("b", "INTEGER", <<["a", "e"], ["C", "BOOLEAN"], ["a", "INTEGER"], ["C", "INTEGER"], ["c", "D"], ["a", "INTEGER"], ["b", "b"], ["a", "e"], ["B", "INTEGER"]>>, "c")
add_class(d)
type_check
type_check
add_query("D", "B", <<["A", "INTEGER"], ["D", "A"], ["a", "INTEGER"], ["a", "BOOLEAN"], ["A", "A"]>>, "A")
type_check
multiplication
logical_negation
add_command("INTEGER", "B", <<["d", "e"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "INTEGER"]>>)
add_class(a)
add_attribute("INTEGER", "b", "INTEGER")
add_query("D", "a", <<["A", "a"], ["b", "d"], ["b", "INTEGER"], ["BOOLEAN", "INTEGER"], ["BOOLEAN", "INTEGER"], ["INTEGER", "C"]>>, "D")
add_command("e", "d", <<["C", "BOOLEAN"], ["b", "INTEGER"], ["A", "b"], ["B", "INTEGER"], ["D", "INTEGER"], ["D", "INTEGER"], ["b", "c"]>>)
add_command("c", "C", <<["a", "INTEGER"], ["d", "A"], ["e", "BOOLEAN"], ["A", "BOOLEAN"]>>)
generate_java_code
generate_java_code
add_command("b", "D", <<["D", "BOOLEAN"], ["INTEGER", "INTEGER"], ["D", "BOOLEAN"], ["b", "INTEGER"], ["a", "BOOLEAN"]>>)
add_query("d", "A", <<["d", "B"], ["C", "e"], ["A", "b"]>>, "A")
generate_java_code
add_call_chain(<<a,d,a,A,e,a,A>>)
bool_value (true)
add_attribute("b", "e", "INTEGER")
generate_java_code
add_call_chain(<<D,e,C,b,c,D,INTEGER>>)
greater_than
int_value (44)
add_query("e", "B", <<["c", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "d"], ["c", "e"], ["D", "e"], ["d", "BOOLEAN"]>>, "INTEGER")
add_query("A", "A", <<["B", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["D", "BOOLEAN"]>>, "c")
numerical_negation
numerical_negation
add_attribute("B", "D", "BOOLEAN")
add_query("b", "C", <<["e", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "b"], ["b", "INTEGER"], ["INTEGER", "b"], ["b", "D"], ["b", "INTEGER"], ["C", "INTEGER"]>>, "c")
addition
type_check
add_query("BOOLEAN", "A", <<["A", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "INTEGER"], ["a", "INTEGER"], ["d", "INTEGER"]>>, "c")
int_value (27)
generate_java_code
int_value (49)
add_call_chain(<<d,D,c>>)
int_value (4)
add_call_chain(<<b,BOOLEAN,d,d,b,d,a,B,INTEGER>>)
greater_than
add_attribute("a", "A", "BOOLEAN")
add_call_chain(<<b,A,c,a>>)
generate_java_code
type_check
add_command("a", "c", <<["b", "BOOLEAN"]>>)
bool_value (false)
logical_negation
logical_negation
add_class(C)
add_class(c)
bool_value (true)
add_command("B", "e", <<["d", "BOOLEAN"], ["D", "INTEGER"], ["c", "BOOLEAN"], ["INTEGER", "a"]>>)
add_call_chain(<<B,BOOLEAN>>)
add_class(B)
numerical_negation
generate_java_code
add_command("c", "a", <<["B", "c"], ["e", "d"], ["D", "INTEGER"], ["D", "INTEGER"], ["a", "D"], ["C", "BOOLEAN"]>>)
bool_value (true)
bool_value (true)
numerical_negation
add_call_chain(<<C,A,d,c,c>>)
