add_call_chain(<<D,B,c,d,b,b,b>>)
add_command("B", "INTEGER", <<["B", "BOOLEAN"], ["b", "b"], ["b", "INTEGER"], ["b", "BOOLEAN"], ["d", "A"], ["C", "INTEGER"], ["B", "b"], ["A", "INTEGER"]>>)
add_query("d", "d", <<["A", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "BOOLEAN"]>>, "B")
logical_negation
less_than
add_call_chain(<<B,B,C>>)
numerical_negation
add_command("a", "INTEGER", <<["a", "e"], ["D", "INTEGER"], ["a", "BOOLEAN"], ["b", "C"]>>)
add_call_chain(<<A,A,c,B,B,A>>)
add_query("c", "C", <<["a", "INTEGER"], ["A", "B"], ["C", "BOOLEAN"], ["e", "D"], ["d", "BOOLEAN"], ["C", "D"], ["A", "BOOLEAN"]>>, "e")
int_value (18)
add_call_chain(<<C,C,C,D,A,D,b,c>>)
add_call_chain(<<a,a,A,BOOLEAN>>)
add_class(A)
logical_negation
equals
add_attribute("INTEGER", "INTEGER", "a")
add_class(BOOLEAN)
bool_value (false)
add_class(INTEGER)
add_attribute("c", "BOOLEAN", "BOOLEAN")
bool_value (false)
int_value (34)
type_check
less_than
add_attribute("INTEGER", "c", "BOOLEAN")
add_class(c)
add_query("D", "c", <<["D", "c"], ["INTEGER", "INTEGER"], ["d", "INTEGER"], ["d", "INTEGER"], ["c", "BOOLEAN"], ["A", "a"]>>, "B")
add_command("C", "a", <<["BOOLEAN", "INTEGER"], ["A", "A"]>>)
equals
logical_negation
int_value (9)
add_command("e", "D", <<["A", "INTEGER"], ["e", "INTEGER"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["C", "a"], ["INTEGER", "INTEGER"], ["D", "D"]>>)
greater_than
add_command("B", "e", <<["e", "BOOLEAN"], ["BOOLEAN", "b"], ["d", "BOOLEAN"], ["A", "BOOLEAN"]>>)
add_call_chain(<<B,d,A,C,D,BOOLEAN,D,D>>)
numerical_negation
add_query("A", "e", <<["A", "D"], ["B", "INTEGER"], ["C", "INTEGER"], ["B", "INTEGER"], ["d", "INTEGER"], ["a", "INTEGER"], ["d", "a"], ["d", "c"]>>, "B")
disjunction
add_command("a", "D", <<["INTEGER", "INTEGER"], ["D", "BOOLEAN"], ["C", "e"], ["c", "INTEGER"], ["B", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "INTEGER"]>>)
add_attribute("B", "A", "INTEGER")
add_call_chain(<<B,a,B,e,A,a,c>>)
add_query("D", "e", <<["b", "D"], ["d", "D"], ["BOOLEAN", "c"], ["BOOLEAN", "D"], ["B", "INTEGER"], ["A", "BOOLEAN"]>>, "A")
addition
numerical_negation
add_attribute("B", "b", "BOOLEAN")
int_value (46)
add_call_chain(<<c,C,e,INTEGER,b>>)
add_class(a)
conjunction
add_command("c", "b", <<["A", "INTEGER"], ["c", "b"], ["C", "INTEGER"], ["d", "BOOLEAN"]>>)
add_attribute("C", "a", "B")
greater_than
modulo
bool_value (false)
bool_value (true)
logical_negation
bool_value (true)
add_attribute("INTEGER", "B", "BOOLEAN")
add_attribute("C", "d", "d")
add_call_chain(<<C,C,b,INTEGER,c>>)
bool_value (false)
add_call_chain(<<B,B,a,d,INTEGER,C>>)
add_attribute("INTEGER", "c", "INTEGER")
int_value (43)
add_call_chain(<<B,e,a,d,BOOLEAN>>)
add_command("d", "INTEGER", <<["b", "B"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["c", "INTEGER"], ["a", "BOOLEAN"], ["e", "INTEGER"], ["B", "BOOLEAN"]>>)
generate_java_code
generate_java_code
int_value (37)
add_query("D", "d", <<["B", "c"], ["A", "BOOLEAN"], ["e", "e"], ["a", "INTEGER"], ["c", "INTEGER"], ["B", "INTEGER"]>>, "BOOLEAN")
int_value (34)
add_call_chain(<<e,C,A,B,A,d,A,C>>)
add_command("A", "b", <<["e", "D"], ["BOOLEAN", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "C"], ["d", "A"], ["a", "INTEGER"], ["D", "INTEGER"], ["c", "A"]>>)
less_than
add_class(d)
int_value (28)
add_query("D", "INTEGER", <<["C", "INTEGER"], ["C", "BOOLEAN"], ["b", "C"]>>, "A")
add_query("b", "D", <<["a", "INTEGER"], ["C", "INTEGER"], ["d", "B"]>>, "A")
type_check
logical_negation
less_than
add_attribute("BOOLEAN", "d", "INTEGER")
add_query("a", "b", <<["D", "INTEGER"], ["C", "INTEGER"], ["INTEGER", "BOOLEAN"]>>, "A")
add_query("d", "d", <<["B", "BOOLEAN"]>>, "c")
int_value (45)
add_command("D", "d", <<["A", "INTEGER"], ["D", "C"], ["C", "a"], ["BOOLEAN", "INTEGER"], ["d", "INTEGER"], ["e", "INTEGER"], ["a", "INTEGER"]>>)
generate_java_code
generate_java_code
add_command("B", "BOOLEAN", <<["INTEGER", "BOOLEAN"], ["A", "BOOLEAN"]>>)
add_command("B", "a", <<["A", "BOOLEAN"]>>)
add_query("a", "a", <<["D", "B"], ["INTEGER", "BOOLEAN"], ["B", "d"], ["INTEGER", "BOOLEAN"], ["INTEGER", "A"], ["B", "BOOLEAN"], ["e", "INTEGER"]>>, "C")
add_query("b", "INTEGER", <<["BOOLEAN", "BOOLEAN"], ["c", "INTEGER"], ["e", "INTEGER"], ["c", "B"]>>, "A")
int_value (43)
add_call_chain(<<C,B>>)
add_class(a)
add_query("INTEGER", "INTEGER", <<["C", "D"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "INTEGER"], ["B", "D"], ["a", "BOOLEAN"], ["d", "BOOLEAN"], ["BOOLEAN", "B"], ["c", "A"]>>, "D")
logical_negation
numerical_negation
add_attribute("D", "INTEGER", "BOOLEAN")
add_class(e)
bool_value (false)
add_query("d", "e", <<["c", "d"], ["C", "INTEGER"], ["B", "a"], ["e", "D"], ["d", "INTEGER"], ["C", "b"]>>, "a")
bool_value (true)
add_class(B)
int_value (1)
add_attribute("INTEGER", "A", "BOOLEAN")
type_check
add_query("D", "b", <<["d", "INTEGER"], ["c", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "e"], ["a", "BOOLEAN"]>>, "a")
add_class(INTEGER)
generate_java_code
add_attribute("d", "BOOLEAN", "C")
add_class(C)
add_command("b", "c", <<["A", "d"], ["B", "BOOLEAN"], ["D", "INTEGER"]>>)
type_check
greater_than
add_attribute("D", "b", "INTEGER")
add_attribute("C", "D", "b")
int_value (45)
bool_value (false)
add_call_chain(<<b,A,b,a,A,b,e>>)
numerical_negation
type_check
logical_negation
int_value (19)
add_query("a", "b", <<["B", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "INTEGER"], ["D", "C"], ["B", "INTEGER"]>>, "D")
add_query("C", "a", <<["D", "A"], ["A", "BOOLEAN"], ["c", "C"], ["e", "BOOLEAN"], ["D", "INTEGER"], ["b", "INTEGER"], ["A", "INTEGER"], ["BOOLEAN", "INTEGER"], ["A", "BOOLEAN"]>>, "b")
add_command("e", "c", <<["A", "BOOLEAN"], ["INTEGER", "d"], ["A", "INTEGER"], ["A", "e"], ["A", "BOOLEAN"], ["a", "A"], ["a", "INTEGER"]>>)
logical_negation
generate_java_code
numerical_negation
add_call_chain(<<a,C,B,c,c,c,e,c>>)
add_attribute("D", "C", "INTEGER")
add_query("A", "BOOLEAN", <<["b", "C"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["B", "C"], ["e", "BOOLEAN"], ["c", "BOOLEAN"], ["a", "INTEGER"]>>, "C")
add_call_chain(<<D,D,b,c>>)
disjunction
int_value (29)
generate_java_code
add_call_chain(<<a,INTEGER,C,d,C,INTEGER>>)
int_value (46)
generate_java_code
bool_value (false)
add_call_chain(<<B,c,D,BOOLEAN,B,BOOLEAN>>)
add_attribute("D", "d", "INTEGER")
add_command("e", "A", <<["B", "INTEGER"], ["A", "e"], ["c", "C"]>>)
add_query("A", "A", <<["A", "INTEGER"], ["D", "B"], ["D", "INTEGER"]>>, "A")
bool_value (true)
type_check
add_attribute("c", "a", "BOOLEAN")
logical_negation
type_check
add_call_chain(<<b,B,d,B,INTEGER>>)
disjunction
numerical_negation
add_attribute("c", "c", "INTEGER")
add_query("d", "B", <<["d", "BOOLEAN"], ["c", "B"], ["B", "e"], ["D", "BOOLEAN"], ["b", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "INTEGER"]>>, "A")
disjunction
add_class(C)
add_call_chain(<<d,INTEGER,e,d,a,d,a,c>>)
generate_java_code
add_attribute("C", "A", "BOOLEAN")
type_check
int_value (6)
addition
add_call_chain(<<c,e>>)
add_command("C", "BOOLEAN", <<["D", "INTEGER"], ["A", "INTEGER"]>>)
add_query("INTEGER", "C", <<["B", "INTEGER"], ["B", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["B", "INTEGER"], ["d", "BOOLEAN"], ["e", "INTEGER"]>>, "b")
add_call_chain(<<D,D,B,BOOLEAN,d>>)
less_than
quotient
numerical_negation
add_call_chain(<<D,a>>)
add_query("A", "A", <<["a", "INTEGER"], ["A", "BOOLEAN"], ["d", "d"]>>, "C")
add_class(B)
add_command("B", "A", <<["B", "BOOLEAN"], ["D", "D"], ["BOOLEAN", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "INTEGER"]>>)
quotient
add_call_chain(<<b,a,d,c>>)
logical_negation
add_class(D)
add_query("a", "b", <<["d", "BOOLEAN"], ["D", "INTEGER"]>>, "A")
bool_value (true)
quotient
type_check
add_call_chain(<<A,d>>)
int_value (37)
add_call_chain(<<BOOLEAN,B,INTEGER>>)
disjunction
add_attribute("D", "BOOLEAN", "INTEGER")
add_attribute("d", "B", "BOOLEAN")
add_command("D", "INTEGER", <<["d", "INTEGER"], ["INTEGER", "BOOLEAN"], ["e", "INTEGER"], ["d", "c"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["C", "d"], ["BOOLEAN", "INTEGER"], ["c", "C"]>>)
add_query("a", "b", <<["b", "BOOLEAN"], ["B", "INTEGER"], ["b", "c"], ["B", "INTEGER"], ["a", "INTEGER"], ["e", "A"], ["c", "INTEGER"], ["c", "INTEGER"], ["B", "BOOLEAN"]>>, "C")
bool_value (false)
quotient
add_query("A", "D", <<["d", "BOOLEAN"], ["A", "b"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "A"], ["b", "INTEGER"], ["a", "a"], ["D", "INTEGER"]>>, "C")
int_value (24)
bool_value (true)
bool_value (true)
add_attribute("d", "A", "INTEGER")
add_call_chain(<<A,a,c,C,d,BOOLEAN,e,INTEGER>>)
add_command("d", "b", <<["C", "INTEGER"], ["a", "A"], ["c", "b"], ["b", "D"], ["c", "INTEGER"]>>)
add_class(c)
add_call_chain(<<d,b>>)
add_call_chain(<<B,A,b,D,B>>)
type_check
numerical_negation
add_query("A", "A", <<["b", "e"], ["A", "BOOLEAN"]>>, "e")
logical_negation
addition
int_value (10)
numerical_negation
generate_java_code
add_attribute("D", "BOOLEAN", "A")
add_command("A", "e", <<["c", "A"], ["BOOLEAN", "INTEGER"], ["c", "BOOLEAN"], ["b", "BOOLEAN"], ["INTEGER", "INTEGER"], ["C", "e"], ["e", "INTEGER"]>>)
quotient
bool_value (true)
logical_negation
add_attribute("C", "e", "BOOLEAN")
bool_value (true)
type_check
logical_negation
disjunction
add_call_chain(<<d,B,c,B,c,a,BOOLEAN,A,a>>)
int_value (19)
