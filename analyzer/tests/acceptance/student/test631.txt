add_attribute("b", "c", "e")
add_call_chain(<<d,B,d,A>>)
int_value (33)
less_than
generate_java_code
less_than
add_command("C", "D", <<["a", "INTEGER"], ["B", "b"], ["C", "INTEGER"], ["D", "INTEGER"], ["e", "B"], ["C", "BOOLEAN"], ["c", "INTEGER"]>>)
add_attribute("e", "c", "BOOLEAN")
greater_than
add_command("INTEGER", "e", <<["A", "BOOLEAN"], ["b", "INTEGER"], ["d", "d"], ["INTEGER", "INTEGER"], ["d", "INTEGER"]>>)
add_call_chain(<<C,c>>)
add_query("B", "B", <<["e", "c"], ["C", "INTEGER"], ["d", "INTEGER"]>>, "B")
numerical_negation
add_query("e", "D", <<["C", "INTEGER"], ["B", "BOOLEAN"]>>, "INTEGER")
logical_negation
add_command("B", "INTEGER", <<["b", "INTEGER"], ["D", "d"], ["e", "D"], ["D", "INTEGER"], ["BOOLEAN", "INTEGER"], ["INTEGER", "D"], ["e", "BOOLEAN"], ["D", "INTEGER"], ["D", "C"]>>)
type_check
add_call_chain(<<b,a,b,D>>)
type_check
numerical_negation
add_query("e", "B", <<["INTEGER", "BOOLEAN"], ["A", "INTEGER"], ["A", "BOOLEAN"], ["D", "INTEGER"], ["a", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "D"], ["a", "INTEGER"], ["c", "D"]>>, "C")
int_value (11)
logical_negation
int_value (26)
add_call_chain(<<a,a,B,BOOLEAN,C,D,e,c>>)
int_value (23)
add_call_chain(<<C,A,B,a,B,b>>)
add_call_chain(<<INTEGER,d,A>>)
add_attribute("C", "D", "INTEGER")
add_command("c", "c", <<["BOOLEAN", "INTEGER"], ["B", "INTEGER"], ["INTEGER", "INTEGER"], ["B", "INTEGER"], ["C", "INTEGER"], ["d", "A"]>>)
add_attribute("b", "d", "INTEGER")
add_call_chain(<<C,B,BOOLEAN>>)
add_call_chain(<<a,c,B,e>>)
add_command("BOOLEAN", "C", <<["C", "INTEGER"], ["INTEGER", "INTEGER"]>>)
add_call_chain(<<c,a,a,d,b,BOOLEAN>>)
add_attribute("B", "D", "BOOLEAN")
int_value (32)
multiplication
bool_value (true)
logical_negation
logical_negation
conjunction
add_command("b", "D", <<["B", "INTEGER"], ["d", "BOOLEAN"], ["BOOLEAN", "A"]>>)
logical_negation
bool_value (true)
add_query("D", "D", <<["c", "INTEGER"], ["A", "INTEGER"]>>, "a")
add_query("B", "C", <<["a", "BOOLEAN"], ["c", "a"]>>, "C")
less_than
numerical_negation
quotient
add_attribute("B", "A", "BOOLEAN")
generate_java_code
add_command("B", "A", <<["D", "e"]>>)
bool_value (false)
add_attribute("e", "B", "BOOLEAN")
numerical_negation
add_call_chain(<<a,B,c>>)
add_attribute("c", "b", "BOOLEAN")
add_query("A", "A", <<["D", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "a"], ["b", "A"], ["A", "INTEGER"]>>, "B")
add_query("A", "A", <<["BOOLEAN", "INTEGER"]>>, "e")
add_call_chain(<<B,D,e,d,d,D,D>>)
add_call_chain(<<d,e,D,b,C,A>>)
add_query("c", "A", <<["a", "BOOLEAN"], ["b", "INTEGER"], ["a", "B"], ["c", "B"], ["e", "d"], ["c", "INTEGER"], ["a", "INTEGER"], ["INTEGER", "a"], ["a", "BOOLEAN"]>>, "a")
add_call_chain(<<C,a,BOOLEAN,B,B,A,d>>)
logical_negation
logical_negation
logical_negation
add_call_chain(<<C>>)
bool_value (false)
numerical_negation
subtraction
add_call_chain(<<b,d,a,D,c>>)
generate_java_code
bool_value (false)
add_call_chain(<<C,a,a,b,A>>)
add_command("c", "A", <<["d", "D"], ["d", "B"], ["INTEGER", "INTEGER"], ["e", "b"]>>)
add_query("A", "b", <<["d", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["c", "D"], ["c", "INTEGER"], ["e", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "INTEGER"]>>, "D")
add_query("C", "BOOLEAN", <<["b", "D"]>>, "D")
add_class(d)
multiplication
disjunction
logical_negation
add_query("d", "d", <<["a", "BOOLEAN"]>>, "INTEGER")
numerical_negation
numerical_negation
int_value (23)
add_command("e", "B", <<["B", "C"], ["b", "INTEGER"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["b", "b"], ["B", "INTEGER"]>>)
add_command("INTEGER", "e", <<["A", "INTEGER"], ["e", "BOOLEAN"]>>)
int_value (21)
add_call_chain(<<BOOLEAN,d,B,d,d,c,e>>)
add_attribute("D", "a", "BOOLEAN")
int_value (1)
add_command("e", "c", <<["d", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "INTEGER"], ["a", "INTEGER"], ["c", "c"], ["D", "INTEGER"], ["D", "C"]>>)
int_value (2)
bool_value (true)
add_command("D", "D", <<["BOOLEAN", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "INTEGER"], ["INTEGER", "INTEGER"], ["D", "BOOLEAN"]>>)
bool_value (true)
add_call_chain(<<B>>)
add_call_chain(<<c,d,INTEGER>>)
equals
add_attribute("BOOLEAN", "INTEGER", "INTEGER")
numerical_negation
bool_value (true)
add_attribute("C", "B", "BOOLEAN")
generate_java_code
add_attribute("B", "C", "BOOLEAN")
modulo
numerical_negation
generate_java_code
add_call_chain(<<c,A,C,d,a>>)
add_command("BOOLEAN", "C", <<["C", "INTEGER"], ["B", "INTEGER"], ["A", "BOOLEAN"]>>)
add_call_chain(<<A,B,d,B,A,d,INTEGER>>)
add_class(e)
quotient
add_query("D", "d", <<["b", "BOOLEAN"]>>, "e")
numerical_negation
add_attribute("C", "a", "d")
int_value (45)
logical_negation
add_command("a", "c", <<["b", "INTEGER"], ["A", "INTEGER"], ["A", "c"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["a", "c"], ["c", "d"]>>)
type_check
add_query("C", "C", <<["d", "INTEGER"], ["D", "INTEGER"], ["c", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "D"], ["d", "INTEGER"]>>, "d")
add_query("C", "b", <<["c", "BOOLEAN"], ["B", "B"]>>, "C")
add_command("BOOLEAN", "C", <<["INTEGER", "BOOLEAN"], ["INTEGER", "c"], ["a", "BOOLEAN"]>>)
type_check
int_value (33)
add_query("A", "INTEGER", <<["BOOLEAN", "INTEGER"]>>, "e")
add_call_chain(<<d,e,INTEGER,A,d,a>>)
add_command("INTEGER", "d", <<["d", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "D"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["d", "INTEGER"]>>)
int_value (39)
add_attribute("B", "D", "e")
quotient
add_attribute("D", "c", "C")
bool_value (true)
add_class(A)
add_class(a)
type_check
int_value (11)
conjunction
numerical_negation
type_check
add_command("A", "d", <<["d", "BOOLEAN"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["c", "c"], ["B", "INTEGER"], ["A", "BOOLEAN"]>>)
add_class(b)
add_query("b", "B", <<["A", "INTEGER"], ["b", "INTEGER"]>>, "a")
add_command("D", "C", <<["C", "b"], ["A", "BOOLEAN"], ["e", "D"], ["B", "BOOLEAN"], ["e", "C"]>>)
add_call_chain(<<A>>)
add_command("c", "D", <<["D", "BOOLEAN"], ["e", "BOOLEAN"], ["BOOLEAN", "a"], ["D", "B"], ["d", "INTEGER"]>>)
numerical_negation
add_command("d", "d", <<["C", "C"], ["d", "BOOLEAN"], ["B", "INTEGER"], ["d", "INTEGER"], ["c", "INTEGER"]>>)
greater_than
add_command("INTEGER", "INTEGER", <<["c", "a"], ["D", "INTEGER"]>>)
add_attribute("c", "D", "BOOLEAN")
add_command("D", "e", <<["e", "BOOLEAN"], ["A", "INTEGER"], ["D", "INTEGER"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["C", "B"]>>)
add_call_chain(<<B,B,B,d,d,e,BOOLEAN,e,c>>)
add_call_chain(<<BOOLEAN,BOOLEAN,a,d>>)
add_call_chain(<<c,A,A,INTEGER,a,b,D,a>>)
numerical_negation
addition
bool_value (true)
bool_value (false)
int_value (34)
add_call_chain(<<a,c,INTEGER,d,e>>)
greater_than
conjunction
type_check
add_attribute("e", "c", "INTEGER")
add_call_chain(<<e,a,d,d>>)
generate_java_code
logical_negation
disjunction
logical_negation
add_query("B", "a", <<["B", "INTEGER"]>>, "A")
add_call_chain(<<e,b,A,C,INTEGER,b>>)
add_attribute("d", "d", "INTEGER")
add_call_chain(<<C,D,B,e,A,d,C,d>>)
add_call_chain(<<D,C,A,BOOLEAN,B>>)
logical_negation
add_call_chain(<<C,d,D,BOOLEAN,INTEGER,d,A>>)
numerical_negation
add_query("b", "A", <<["D", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "INTEGER"], ["A", "BOOLEAN"]>>, "d")
add_command("D", "e", <<["e", "BOOLEAN"], ["A", "INTEGER"], ["a", "INTEGER"], ["d", "A"], ["B", "BOOLEAN"]>>)
add_attribute("C", "D", "INTEGER")
bool_value (false)
type_check
bool_value (true)
logical_negation
add_attribute("C", "b", "C")
int_value (28)
add_call_chain(<<a,BOOLEAN,d,INTEGER,c,e,C,B,c>>)
bool_value (true)
multiplication
add_class(d)
disjunction
bool_value (false)
numerical_negation
add_class(C)
add_call_chain(<<d,d,a,d>>)
add_call_chain(<<B,A,d,C,A,e,B,c>>)
add_attribute("C", "d", "BOOLEAN")
logical_negation
disjunction
generate_java_code
numerical_negation
type_check
add_query("B", "B", <<["D", "INTEGER"], ["C", "INTEGER"]>>, "C")
numerical_negation
less_than
numerical_negation
int_value (7)
add_attribute("D", "c", "BOOLEAN")
add_call_chain(<<B,d,c,C,A,D,A>>)
add_query("C", "B", <<["D", "a"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["A", "d"], ["C", "INTEGER"], ["e", "INTEGER"], ["e", "BOOLEAN"], ["d", "BOOLEAN"], ["b", "C"]>>, "B")
bool_value (false)
add_call_chain(<<B,b>>)
add_attribute("A", "e", "BOOLEAN")
generate_java_code
int_value (34)
add_call_chain(<<c,d,d,c,C,a>>)
add_command("c", "B", <<["b", "BOOLEAN"], ["INTEGER", "A"], ["e", "C"], ["INTEGER", "BOOLEAN"], ["c", "c"], ["d", "INTEGER"], ["d", "BOOLEAN"], ["A", "INTEGER"]>>)
numerical_negation
bool_value (true)
add_command("B", "INTEGER", <<["INTEGER", "a"], ["d", "INTEGER"]>>)
numerical_negation
bool_value (false)
logical_negation
disjunction
add_call_chain(<<c>>)
numerical_negation
int_value (24)
int_value (6)
add_attribute("d", "D", "INTEGER")
add_command("C", "C", <<["e", "INTEGER"], ["A", "A"], ["b", "INTEGER"]>>)
add_query("b", "A", <<["BOOLEAN", "BOOLEAN"]>>, "B")
bool_value (false)
add_command("B", "D", <<["BOOLEAN", "d"], ["e", "BOOLEAN"], ["C", "A"], ["A", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "INTEGER"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["C", "a"]>>)
add_command("a", "b", <<["BOOLEAN", "INTEGER"], ["d", "BOOLEAN"], ["c", "e"], ["A", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "BOOLEAN"], ["d", "INTEGER"]>>)
add_query("d", "b", <<["B", "INTEGER"], ["D", "INTEGER"], ["b", "c"], ["C", "INTEGER"]>>, "BOOLEAN")
add_call_chain(<<a,c,D>>)
generate_java_code
add_call_chain(<<e>>)
add_call_chain(<<b,a>>)
add_attribute("c", "A", "INTEGER")
add_query("e", "A", <<["d", "e"], ["e", "BOOLEAN"], ["B", "INTEGER"], ["c", "BOOLEAN"], ["a", "INTEGER"], ["B", "a"]>>, "D")
greater_than
bool_value (true)
