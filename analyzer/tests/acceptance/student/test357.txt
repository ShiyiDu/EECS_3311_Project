numerical_negation
add_call_chain(<<a,b,A,a,INTEGER,B,D,D,D>>)
less_than
greater_than
bool_value (true)
add_command("C", "e", <<["C", "c"], ["B", "INTEGER"], ["INTEGER", "INTEGER"], ["B", "B"], ["A", "a"], ["B", "BOOLEAN"], ["A", "BOOLEAN"]>>)
add_call_chain(<<c,b,b>>)
add_attribute("D", "A", "a")
add_call_chain(<<b,C,B,b>>)
add_attribute("A", "A", "B")
add_attribute("a", "d", "BOOLEAN")
add_attribute("b", "A", "INTEGER")
add_attribute("d", "INTEGER", "INTEGER")
add_class(a)
generate_java_code
add_class(C)
add_command("A", "b", <<["a", "c"], ["e", "C"], ["BOOLEAN", "INTEGER"], ["B", "BOOLEAN"], ["B", "b"], ["a", "c"]>>)
add_call_chain(<<A>>)
generate_java_code
add_command("A", "A", <<["B", "A"], ["e", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["B", "BOOLEAN"], ["D", "A"], ["b", "BOOLEAN"]>>)
int_value (49)
add_call_chain(<<B,D>>)
numerical_negation
add_call_chain(<<c,B,BOOLEAN,b,a>>)
add_call_chain(<<B,b,b,c,b,BOOLEAN>>)
equals
logical_negation
numerical_negation
add_call_chain(<<d>>)
numerical_negation
logical_negation
numerical_negation
generate_java_code
add_call_chain(<<a,C,C,D,BOOLEAN,C,e,A,b>>)
add_query("b", "d", <<["A", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "d"], ["C", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "C"]>>, "d")
bool_value (true)
add_query("b", "d", <<["b", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "b"], ["a", "e"], ["C", "BOOLEAN"], ["B", "INTEGER"], ["d", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "b"]>>, "INTEGER")
add_query("D", "BOOLEAN", <<["A", "INTEGER"], ["A", "INTEGER"], ["BOOLEAN", "D"], ["a", "C"]>>, "b")
add_call_chain(<<d,A,b,C,BOOLEAN>>)
add_call_chain(<<A,e,D>>)
generate_java_code
numerical_negation
add_command("A", "D", <<["d", "BOOLEAN"], ["a", "INTEGER"]>>)
add_query("D", "C", <<["C", "BOOLEAN"], ["B", "a"], ["INTEGER", "INTEGER"], ["b", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "BOOLEAN"]>>, "B")
numerical_negation
logical_negation
add_call_chain(<<e,A,e>>)
add_command("D", "A", <<["A", "INTEGER"], ["d", "BOOLEAN"], ["C", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>)
add_call_chain(<<c,d,BOOLEAN,D,C,d,d,BOOLEAN>>)
generate_java_code
add_call_chain(<<B,B,A,b,b>>)
modulo
add_command("a", "A", <<["e", "BOOLEAN"], ["INTEGER", "e"], ["D", "INTEGER"], ["INTEGER", "BOOLEAN"], ["c", "INTEGER"], ["d", "d"], ["INTEGER", "BOOLEAN"], ["D", "BOOLEAN"], ["d", "INTEGER"]>>)
int_value (48)
add_call_chain(<<d,C,BOOLEAN,c,BOOLEAN,e,b>>)
add_class(C)
add_command("d", "B", <<["A", "INTEGER"], ["a", "INTEGER"], ["A", "b"], ["B", "INTEGER"], ["A", "C"], ["D", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "INTEGER"]>>)
generate_java_code
add_class(e)
generate_java_code
add_class(B)
add_attribute("C", "e", "BOOLEAN")
logical_negation
add_call_chain(<<d,b,d,a,a,a,B,a>>)
int_value (42)
add_command("D", "c", <<["C", "INTEGER"], ["B", "A"], ["c", "BOOLEAN"]>>)
generate_java_code
add_query("a", "A", <<["B", "INTEGER"]>>, "d")
add_query("A", "b", <<["C", "BOOLEAN"], ["b", "A"]>>, "B")
disjunction
add_call_chain(<<a,C,A,D,D,c,e,C>>)
logical_negation
logical_negation
add_query("D", "e", <<["B", "b"], ["D", "INTEGER"]>>, "d")
add_call_chain(<<d,B,a,BOOLEAN,B,INTEGER,B,e>>)
add_call_chain(<<a>>)
add_query("d", "C", <<["BOOLEAN", "A"], ["b", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "A"], ["INTEGER", "BOOLEAN"], ["C", "BOOLEAN"]>>, "C")
add_query("B", "B", <<["a", "D"], ["a", "d"], ["d", "INTEGER"], ["c", "BOOLEAN"], ["d", "B"]>>, "A")
add_query("D", "B", <<["B", "b"], ["A", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["A", "D"], ["a", "BOOLEAN"], ["A", "INTEGER"], ["INTEGER", "a"], ["B", "INTEGER"], ["D", "c"]>>, "a")
add_command("A", "C", <<["A", "INTEGER"], ["d", "BOOLEAN"], ["A", "BOOLEAN"]>>)
add_call_chain(<<C,B,d,D,A,A>>)
add_query("INTEGER", "c", <<["a", "INTEGER"], ["C", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>, "C")
add_call_chain(<<A,C,D,C,C,C,a,b>>)
add_command("c", "d", <<["d", "BOOLEAN"], ["A", "INTEGER"], ["b", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>)
greater_than
conjunction
generate_java_code
add_attribute("D", "d", "INTEGER")
disjunction
type_check
bool_value (true)
int_value (42)
bool_value (true)
logical_negation
logical_negation
add_command("D", "e", <<["d", "INTEGER"], ["C", "A"], ["b", "e"], ["a", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "INTEGER"], ["INTEGER", "INTEGER"]>>)
numerical_negation
add_attribute("A", "D", "BOOLEAN")
int_value (44)
logical_negation
logical_negation
add_attribute("d", "D", "BOOLEAN")
add_query("D", "D", <<["INTEGER", "BOOLEAN"], ["B", "BOOLEAN"], ["INTEGER", "INTEGER"]>>, "c")
add_attribute("e", "B", "INTEGER")
add_class(C)
generate_java_code
add_attribute("D", "c", "BOOLEAN")
bool_value (true)
bool_value (true)
less_than
add_command("b", "D", <<["e", "B"], ["b", "C"], ["d", "B"], ["e", "e"]>>)
add_query("a", "INTEGER", <<["D", "BOOLEAN"]>>, "B")
add_query("C", "D", <<["A", "INTEGER"], ["D", "INTEGER"], ["BOOLEAN", "INTEGER"], ["b", "INTEGER"], ["d", "D"], ["C", "A"], ["c", "INTEGER"], ["a", "INTEGER"]>>, "INTEGER")
type_check
disjunction
generate_java_code
int_value (41)
multiplication
add_call_chain(<<INTEGER,A,d,d,B,D,a,e,c>>)
add_command("d", "C", <<["A", "INTEGER"], ["d", "INTEGER"], ["a", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "B"]>>)
add_query("c", "a", <<["A", "C"], ["d", "b"], ["B", "BOOLEAN"], ["c", "C"], ["c", "BOOLEAN"], ["A", "INTEGER"], ["C", "INTEGER"], ["C", "c"]>>, "b")
add_query("A", "D", <<["BOOLEAN", "BOOLEAN"]>>, "B")
numerical_negation
bool_value (true)
add_class(C)
numerical_negation
add_call_chain(<<C,A,e,BOOLEAN,b,e,D,D>>)
type_check
add_call_chain(<<INTEGER,b,a,a,A,C,C,e>>)
add_command("B", "d", <<["B", "A"], ["b", "B"], ["d", "B"], ["e", "BOOLEAN"]>>)
generate_java_code
add_command("d", "D", <<["e", "BOOLEAN"], ["b", "b"], ["b", "d"], ["INTEGER", "INTEGER"], ["a", "B"], ["BOOLEAN", "BOOLEAN"], ["b", "INTEGER"], ["D", "C"], ["B", "a"]>>)
numerical_negation
addition
less_than
add_class(e)
addition
int_value (42)
numerical_negation
add_attribute("e", "INTEGER", "a")
add_command("e", "C", <<["D", "BOOLEAN"]>>)
bool_value (false)
add_command("a", "e", <<["C", "C"], ["BOOLEAN", "D"], ["b", "d"], ["b", "BOOLEAN"]>>)
int_value (11)
type_check
add_call_chain(<<e,a,b,D,D,A,c>>)
add_call_chain(<<d,e,a,B,C,b,D,c,b>>)
add_attribute("b", "INTEGER", "BOOLEAN")
add_class(BOOLEAN)
add_command("a", "a", <<["D", "INTEGER"], ["C", "d"], ["B", "INTEGER"], ["D", "d"]>>)
bool_value (false)
add_command("d", "A", <<["a", "INTEGER"], ["A", "B"], ["d", "BOOLEAN"]>>)
numerical_negation
bool_value (false)
disjunction
add_query("B", "INTEGER", <<["d", "BOOLEAN"], ["D", "e"], ["A", "c"], ["e", "a"], ["e", "INTEGER"], ["C", "A"]>>, "INTEGER")
add_command("B", "e", <<["C", "BOOLEAN"], ["C", "a"], ["d", "BOOLEAN"], ["b", "c"], ["b", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["a", "INTEGER"]>>)
multiplication
add_call_chain(<<a,A,a,a>>)
modulo
add_call_chain(<<d,e,D,B,D,INTEGER,c>>)
logical_negation
add_query("C", "c", <<["c", "C"], ["c", "BOOLEAN"], ["D", "B"], ["e", "INTEGER"], ["a", "INTEGER"], ["D", "BOOLEAN"]>>, "a")
add_call_chain(<<BOOLEAN>>)
int_value (6)
bool_value (false)
less_than
numerical_negation
add_class(A)
add_call_chain(<<B,A,e>>)
generate_java_code
add_call_chain(<<BOOLEAN,c,a,BOOLEAN,D>>)
bool_value (true)
add_call_chain(<<b,INTEGER>>)
quotient
add_call_chain(<<c,D>>)
add_call_chain(<<b,C,b,D,b,a,D,b,C>>)
type_check
add_call_chain(<<A,INTEGER>>)
add_call_chain(<<d,D,e,B>>)
add_command("A", "C", <<["d", "INTEGER"], ["e", "INTEGER"], ["a", "b"], ["A", "INTEGER"], ["b", "D"]>>)
bool_value (false)
multiplication
bool_value (true)
add_call_chain(<<C,C,c,e,c,C,B>>)
quotient
generate_java_code
numerical_negation
