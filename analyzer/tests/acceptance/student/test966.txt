less_than
add_class(b)
add_query("B", "A", <<["c", "INTEGER"], ["c", "INTEGER"], ["C", "BOOLEAN"], ["BOOLEAN", "A"], ["e", "INTEGER"], ["e", "BOOLEAN"]>>, "A")
int_value (20)
type_check
conjunction
numerical_negation
numerical_negation
bool_value (true)
add_call_chain(<<e,b,B>>)
bool_value (true)
equals
add_attribute("a", "c", "BOOLEAN")
bool_value (true)
add_call_chain(<<INTEGER,a,a,B,C,e,C,A,C>>)
disjunction
bool_value (true)
add_call_chain(<<d,C>>)
add_attribute("INTEGER", "c", "e")
add_command("INTEGER", "a", <<["A", "INTEGER"], ["e", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["D", "INTEGER"], ["B", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>)
add_attribute("B", "C", "INTEGER")
disjunction
numerical_negation
generate_java_code
add_command("B", "A", <<["C", "INTEGER"], ["b", "b"], ["d", "BOOLEAN"], ["d", "BOOLEAN"]>>)
quotient
add_attribute("b", "a", "a")
add_class(a)
numerical_negation
add_attribute("a", "C", "A")
modulo
type_check
add_command("c", "d", <<["A", "BOOLEAN"]>>)
type_check
add_attribute("C", "A", "A")
add_call_chain(<<D,d,D,D,D,D,C>>)
generate_java_code
add_call_chain(<<d>>)
add_query("INTEGER", "D", <<["d", "INTEGER"], ["D", "e"], ["e", "INTEGER"], ["INTEGER", "INTEGER"], ["d", "e"], ["A", "b"], ["A", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "d"]>>, "A")
int_value (10)
add_query("C", "d", <<["b", "d"], ["BOOLEAN", "BOOLEAN"], ["b", "INTEGER"], ["INTEGER", "C"]>>, "B")
type_check
add_query("BOOLEAN", "D", <<["b", "INTEGER"]>>, "b")
int_value (3)
add_attribute("e", "A", "BOOLEAN")
bool_value (true)
add_call_chain(<<INTEGER,D,d,b,B,a>>)
add_attribute("b", "B", "BOOLEAN")
add_call_chain(<<c>>)
add_query("c", "b", <<["b", "BOOLEAN"], ["c", "INTEGER"], ["c", "INTEGER"], ["a", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["a", "B"], ["B", "c"], ["A", "INTEGER"], ["c", "D"]>>, "C")
logical_negation
bool_value (false)
numerical_negation
bool_value (true)
numerical_negation
numerical_negation
add_attribute("a", "A", "INTEGER")
add_call_chain(<<C,D,a,c,c,A>>)
add_class(A)
int_value (40)
bool_value (true)
add_call_chain(<<A,c,INTEGER,c,D,B,D,b,e>>)
add_call_chain(<<e,B,d,D,b,A,A>>)
bool_value (false)
conjunction
add_query("B", "a", <<["d", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>, "b")
add_query("e", "d", <<["a", "C"], ["c", "C"], ["b", "INTEGER"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["BOOLEAN", "b"], ["c", "INTEGER"], ["B", "BOOLEAN"], ["e", "A"]>>, "e")
logical_negation
add_call_chain(<<B,e,D>>)
type_check
numerical_negation
numerical_negation
add_call_chain(<<e,a,a,D,B,A,e,e>>)
generate_java_code
add_call_chain(<<c,B,d,INTEGER,e,D,b>>)
add_command("A", "e", <<["BOOLEAN", "b"], ["d", "BOOLEAN"], ["b", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["A", "INTEGER"], ["c", "BOOLEAN"]>>)
disjunction
numerical_negation
bool_value (false)
add_command("b", "e", <<["e", "BOOLEAN"], ["B", "c"], ["a", "BOOLEAN"], ["C", "BOOLEAN"], ["BOOLEAN", "B"], ["b", "BOOLEAN"], ["C", "BOOLEAN"]>>)
logical_negation
add_query("BOOLEAN", "b", <<["b", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "C"], ["a", "D"], ["B", "e"], ["c", "INTEGER"], ["e", "b"], ["b", "BOOLEAN"], ["D", "INTEGER"]>>, "A")
add_query("e", "A", <<["d", "BOOLEAN"], ["D", "d"], ["INTEGER", "BOOLEAN"]>>, "B")
int_value (43)
add_command("e", "B", <<["b", "D"], ["B", "INTEGER"], ["e", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "d"]>>)
int_value (22)
add_command("C", "e", <<["d", "a"], ["D", "BOOLEAN"], ["d", "d"], ["c", "INTEGER"], ["BOOLEAN", "e"]>>)
addition
bool_value (false)
logical_negation
generate_java_code
numerical_negation
multiplication
bool_value (false)
add_call_chain(<<A>>)
disjunction
add_call_chain(<<c,D>>)
int_value (35)
add_call_chain(<<a,A,D>>)
add_attribute("D", "e", "C")
type_check
add_attribute("B", "C", "D")
add_call_chain(<<C,D,c,b>>)
conjunction
type_check
type_check
logical_negation
add_attribute("c", "b", "BOOLEAN")
int_value (11)
logical_negation
equals
add_command("b", "A", <<["D", "BOOLEAN"], ["C", "INTEGER"], ["C", "INTEGER"], ["e", "e"], ["B", "A"], ["A", "INTEGER"]>>)
add_call_chain(<<B,e,D,D,A,C,BOOLEAN,a,D>>)
add_attribute("C", "D", "BOOLEAN")
logical_negation
multiplication
add_command("d", "A", <<["a", "BOOLEAN"], ["A", "INTEGER"]>>)
add_call_chain(<<C,A,D,c,a,c>>)
add_call_chain(<<a,B,e>>)
add_query("e", "C", <<["D", "BOOLEAN"], ["b", "INTEGER"]>>, "b")
numerical_negation
int_value (3)
generate_java_code
equals
int_value (3)
add_query("B", "D", <<["INTEGER", "d"], ["A", "BOOLEAN"], ["e", "INTEGER"], ["a", "INTEGER"], ["A", "INTEGER"]>>, "C")
add_attribute("e", "C", "INTEGER")
add_query("e", "D", <<["e", "BOOLEAN"], ["b", "BOOLEAN"], ["b", "C"], ["b", "INTEGER"]>>, "BOOLEAN")
addition
add_command("e", "b", <<["d", "A"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "C"], ["d", "BOOLEAN"]>>)
add_query("a", "C", <<["a", "b"], ["e", "INTEGER"], ["d", "BOOLEAN"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["C", "INTEGER"]>>, "INTEGER")
add_query("a", "A", <<["d", "B"], ["b", "d"], ["c", "BOOLEAN"], ["C", "b"], ["d", "d"], ["C", "BOOLEAN"], ["B", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["D", "BOOLEAN"]>>, "b")
add_query("B", "A", <<["C", "b"], ["D", "INTEGER"], ["b", "INTEGER"], ["D", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["A", "A"]>>, "d")
conjunction
add_command("C", "C", <<["INTEGER", "INTEGER"], ["INTEGER", "BOOLEAN"], ["c", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
equals
add_call_chain(<<b,a,C,D,c,INTEGER>>)
bool_value (true)
int_value (21)
subtraction
int_value (21)
logical_negation
add_query("B", "d", <<["d", "b"], ["e", "INTEGER"], ["e", "BOOLEAN"], ["e", "BOOLEAN"], ["a", "B"], ["INTEGER", "INTEGER"], ["C", "BOOLEAN"], ["B", "D"], ["A", "BOOLEAN"]>>, "B")
add_query("BOOLEAN", "e", <<["D", "c"], ["a", "D"], ["A", "INTEGER"], ["b", "C"], ["c", "INTEGER"]>>, "C")
add_command("C", "D", <<["B", "a"], ["C", "BOOLEAN"], ["A", "A"], ["D", "c"], ["D", "INTEGER"], ["b", "BOOLEAN"]>>)
add_query("INTEGER", "b", <<["B", "e"], ["BOOLEAN", "INTEGER"], ["B", "a"], ["A", "A"]>>, "C")
bool_value (true)
add_call_chain(<<INTEGER,BOOLEAN,D,BOOLEAN,A,d>>)
equals
add_command("a", "A", <<["B", "INTEGER"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["d", "INTEGER"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["b", "C"], ["B", "a"]>>)
less_than
int_value (20)
int_value (10)
bool_value (true)
add_query("a", "A", <<["B", "c"], ["D", "INTEGER"], ["C", "c"], ["b", "INTEGER"], ["e", "INTEGER"], ["B", "INTEGER"]>>, "A")
quotient
add_query("D", "C", <<["C", "BOOLEAN"]>>, "D")
type_check
add_call_chain(<<C,a,e,INTEGER,INTEGER,d,a>>)
less_than
numerical_negation
generate_java_code
numerical_negation
bool_value (true)
numerical_negation
add_call_chain(<<c,A,b,D,c,b,B>>)
add_command("INTEGER", "d", <<["e", "C"], ["B", "BOOLEAN"], ["a", "D"], ["INTEGER", "A"]>>)
add_command("c", "d", <<["b", "BOOLEAN"], ["D", "a"], ["c", "BOOLEAN"], ["D", "INTEGER"], ["a", "B"]>>)
generate_java_code
bool_value (true)
generate_java_code
add_command("e", "INTEGER", <<["c", "BOOLEAN"], ["c", "INTEGER"], ["a", "INTEGER"], ["B", "INTEGER"], ["A", "B"], ["d", "INTEGER"], ["b", "INTEGER"], ["e", "INTEGER"], ["D", "INTEGER"]>>)
add_command("D", "a", <<["C", "a"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["a", "INTEGER"]>>)
add_command("C", "C", <<["BOOLEAN", "INTEGER"], ["c", "BOOLEAN"], ["e", "BOOLEAN"], ["d", "INTEGER"]>>)
add_attribute("e", "b", "BOOLEAN")
add_command("e", "b", <<["e", "C"], ["INTEGER", "BOOLEAN"], ["C", "e"], ["B", "a"], ["D", "INTEGER"], ["c", "e"], ["C", "BOOLEAN"], ["d", "BOOLEAN"], ["INTEGER", "INTEGER"]>>)
add_call_chain(<<d>>)
bool_value (false)
add_query("d", "d", <<["B", "INTEGER"], ["a", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["BOOLEAN", "INTEGER"], ["INTEGER", "INTEGER"], ["C", "BOOLEAN"]>>, "c")
bool_value (false)
add_command("d", "a", <<["D", "INTEGER"], ["b", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["b", "A"]>>)
int_value (17)
add_query("b", "B", <<["A", "INTEGER"], ["A", "INTEGER"]>>, "A")
add_command("e", "a", <<["c", "BOOLEAN"]>>)
add_call_chain(<<B,e,B,BOOLEAN,b,b>>)
add_command("a", "d", <<["d", "INTEGER"], ["c", "INTEGER"]>>)
add_command("A", "A", <<["a", "BOOLEAN"], ["B", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["e", "B"], ["a", "BOOLEAN"], ["B", "BOOLEAN"]>>)
add_command("D", "BOOLEAN", <<["C", "INTEGER"], ["D", "BOOLEAN"], ["c", "INTEGER"], ["B", "BOOLEAN"], ["D", "a"], ["e", "BOOLEAN"]>>)
logical_negation
add_call_chain(<<A,C,b,c,c,b>>)
add_call_chain(<<A,c,B>>)
add_call_chain(<<c,a,d,a>>)
add_call_chain(<<D,C>>)
add_attribute("A", "B", "INTEGER")
add_attribute("e", "B", "d")
add_command("B", "INTEGER", <<["INTEGER", "BOOLEAN"]>>)
add_call_chain(<<b,d,INTEGER,c,c>>)
logical_negation
int_value (26)
logical_negation
addition
add_class(C)
int_value (11)
numerical_negation
type_check
bool_value (false)
logical_negation
add_call_chain(<<e,A>>)
numerical_negation
numerical_negation
equals
subtraction
add_attribute("d", "A", "INTEGER")
int_value (41)
add_call_chain(<<C>>)
add_call_chain(<<b,e,B,C,b,e,d>>)
add_call_chain(<<A,A,A,C>>)
