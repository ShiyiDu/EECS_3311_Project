type_check
add_attribute("c", "e", "B")
numerical_negation
bool_value (false)
add_class(B)
add_class(D)
add_attribute("INTEGER", "c", "BOOLEAN")
subtraction
add_query("B", "e", <<["a", "d"], ["D", "BOOLEAN"], ["a", "d"], ["B", "BOOLEAN"], ["d", "c"], ["B", "d"], ["d", "A"], ["a", "INTEGER"]>>, "B")
add_attribute("INTEGER", "a", "INTEGER")
int_value (9)
add_call_chain(<<D,D,A,A,B>>)
add_command("c", "C", <<["a", "BOOLEAN"], ["A", "D"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["D", "b"], ["b", "BOOLEAN"], ["b", "BOOLEAN"], ["b", "B"], ["e", "INTEGER"]>>)
subtraction
disjunction
numerical_negation
add_call_chain(<<INTEGER,b,A,b,INTEGER,c,c,e,INTEGER>>)
int_value (37)
type_check
addition
add_call_chain(<<c,BOOLEAN,b>>)
generate_java_code
add_call_chain(<<B,C,B,C>>)
generate_java_code
add_command("e", "d", <<["D", "C"], ["d", "BOOLEAN"], ["A", "B"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["B", "INTEGER"]>>)
add_class(B)
add_class(C)
add_call_chain(<<D,C>>)
add_query("c", "A", <<["B", "BOOLEAN"], ["B", "D"], ["D", "INTEGER"], ["C", "INTEGER"]>>, "a")
less_than
type_check
bool_value (false)
numerical_negation
add_query("A", "c", <<["B", "INTEGER"], ["d", "BOOLEAN"], ["D", "INTEGER"], ["INTEGER", "BOOLEAN"], ["A", "B"]>>, "C")
greater_than
logical_negation
int_value (40)
numerical_negation
bool_value (false)
add_call_chain(<<b>>)
add_call_chain(<<B>>)
bool_value (true)
add_attribute("a", "A", "BOOLEAN")
modulo
bool_value (false)
add_class(b)
logical_negation
bool_value (false)
add_query("d", "INTEGER", <<["b", "c"], ["B", "BOOLEAN"], ["BOOLEAN", "D"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["INTEGER", "c"]>>, "C")
add_attribute("d", "D", "A")
logical_negation
int_value (34)
numerical_negation
bool_value (true)
add_query("a", "d", <<["C", "INTEGER"], ["A", "BOOLEAN"], ["INTEGER", "INTEGER"], ["a", "INTEGER"], ["b", "BOOLEAN"], ["A", "INTEGER"], ["c", "BOOLEAN"]>>, "b")
bool_value (false)
add_call_chain(<<B,d>>)
add_query("d", "e", <<["C", "INTEGER"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["d", "BOOLEAN"]>>, "A")
add_command("b", "A", <<["e", "INTEGER"], ["a", "BOOLEAN"]>>)
add_command("d", "e", <<["b", "D"], ["C", "B"], ["C", "c"], ["D", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "A"]>>)
logical_negation
int_value (37)
logical_negation
bool_value (false)
add_call_chain(<<A,INTEGER,B,e,b,D>>)
type_check
int_value (6)
type_check
numerical_negation
less_than
add_attribute("a", "b", "c")
add_attribute("b", "b", "BOOLEAN")
add_query("c", "B", <<["d", "D"], ["c", "c"], ["A", "INTEGER"], ["D", "INTEGER"], ["e", "B"], ["c", "b"], ["c", "INTEGER"], ["C", "INTEGER"], ["c", "BOOLEAN"]>>, "e")
less_than
add_command("e", "e", <<["a", "D"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["d", "INTEGER"], ["A", "D"], ["c", "A"], ["c", "INTEGER"], ["C", "INTEGER"], ["a", "BOOLEAN"]>>)
bool_value (true)
int_value (31)
add_attribute("b", "B", "INTEGER")
int_value (3)
add_call_chain(<<d,D,C,a,d,a>>)
add_command("B", "C", <<["e", "C"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["c", "INTEGER"], ["D", "BOOLEAN"], ["c", "BOOLEAN"]>>)
add_query("BOOLEAN", "C", <<["INTEGER", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "C"], ["e", "d"], ["D", "D"], ["e", "D"], ["b", "INTEGER"]>>, "c")
logical_negation
bool_value (true)
bool_value (false)
int_value (40)
logical_negation
logical_negation
add_query("C", "e", <<["b", "b"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["C", "INTEGER"], ["A", "b"]>>, "D")
numerical_negation
add_command("D", "C", <<["b", "INTEGER"], ["c", "INTEGER"]>>)
bool_value (true)
equals
less_than
logical_negation
generate_java_code
add_attribute("a", "C", "BOOLEAN")
add_query("C", "b", <<["C", "BOOLEAN"], ["d", "BOOLEAN"], ["BOOLEAN", "A"], ["e", "BOOLEAN"]>>, "e")
type_check
bool_value (false)
type_check
numerical_negation
logical_negation
add_query("D", "d", <<["c", "e"]>>, "b")
add_call_chain(<<A,INTEGER,c,e,D>>)
add_command("C", "a", <<["b", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["B", "INTEGER"], ["D", "b"], ["A", "c"]>>)
generate_java_code
add_call_chain(<<d,c,B,b,D,C,BOOLEAN,c>>)
type_check
add_query("b", "A", <<["e", "c"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["d", "INTEGER"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["c", "INTEGER"], ["A", "INTEGER"], ["b", "D"]>>, "a")
add_query("B", "D", <<["C", "INTEGER"], ["B", "INTEGER"], ["b", "BOOLEAN"], ["A", "C"], ["C", "C"], ["b", "INTEGER"], ["B", "BOOLEAN"], ["c", "INTEGER"], ["A", "BOOLEAN"]>>, "A")
type_check
add_attribute("INTEGER", "D", "INTEGER")
modulo
int_value (29)
int_value (11)
add_class(a)
add_attribute("c", "e", "BOOLEAN")
add_command("A", "d", <<["BOOLEAN", "BOOLEAN"], ["INTEGER", "a"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["C", "C"], ["e", "INTEGER"], ["A", "INTEGER"]>>)
conjunction
add_attribute("B", "b", "BOOLEAN")
add_query("c", "A", <<["A", "INTEGER"]>>, "B")
add_call_chain(<<D,a,c,A,d,e>>)
numerical_negation
add_command("e", "D", <<["A", "INTEGER"], ["B", "INTEGER"], ["e", "d"], ["A", "INTEGER"]>>)
bool_value (false)
add_query("e", "B", <<["d", "BOOLEAN"], ["b", "e"], ["a", "BOOLEAN"], ["B", "C"]>>, "D")
add_attribute("a", "B", "BOOLEAN")
bool_value (false)
add_attribute("B", "D", "B")
type_check
add_call_chain(<<e,a,e,A,A,c>>)
generate_java_code
logical_negation
add_query("A", "C", <<["B", "BOOLEAN"], ["B", "D"], ["d", "INTEGER"], ["BOOLEAN", "INTEGER"], ["c", "INTEGER"], ["b", "BOOLEAN"], ["BOOLEAN", "e"], ["e", "c"], ["A", "INTEGER"]>>, "C")
add_command("D", "d", <<["c", "c"]>>)
add_call_chain(<<A,a,b,A,D,A,A,B>>)
add_call_chain(<<B>>)
add_call_chain(<<e,C,INTEGER,b,A,c,e,b>>)
add_query("A", "D", <<["b", "BOOLEAN"], ["c", "A"], ["A", "b"], ["B", "c"], ["a", "INTEGER"], ["B", "b"]>>, "A")
bool_value (true)
add_query("A", "a", <<["A", "B"], ["c", "INTEGER"], ["c", "INTEGER"], ["D", "B"], ["D", "BOOLEAN"]>>, "a")
add_call_chain(<<D,D,e,b,d,D>>)
conjunction
bool_value (false)
add_attribute("A", "d", "c")
modulo
add_query("C", "C", <<["C", "d"], ["B", "INTEGER"], ["B", "BOOLEAN"], ["A", "B"], ["a", "INTEGER"], ["A", "b"], ["D", "d"], ["D", "INTEGER"], ["C", "BOOLEAN"]>>, "e")
disjunction
add_command("C", "a", <<["e", "B"], ["c", "d"], ["D", "C"]>>)
add_command("A", "B", <<["INTEGER", "INTEGER"]>>)
logical_negation
add_call_chain(<<D,D,BOOLEAN>>)
add_call_chain(<<a,c,C,D,A,A,d,b,a>>)
add_attribute("D", "INTEGER", "INTEGER")
generate_java_code
bool_value (false)
disjunction
numerical_negation
conjunction
add_call_chain(<<a,A,a,B>>)
bool_value (true)
add_call_chain(<<b,b,A,b,b>>)
subtraction
bool_value (true)
add_query("d", "c", <<["e", "C"], ["D", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["A", "INTEGER"]>>, "D")
add_command("B", "C", <<["A", "BOOLEAN"]>>)
bool_value (false)
int_value (29)
numerical_negation
logical_negation
quotient
bool_value (true)
add_call_chain(<<INTEGER,e,INTEGER,D,C>>)
bool_value (false)
add_command("a", "b", <<["d", "BOOLEAN"], ["d", "b"], ["A", "BOOLEAN"], ["INTEGER", "c"], ["e", "BOOLEAN"], ["d", "INTEGER"], ["D", "INTEGER"], ["D", "d"]>>)
logical_negation
modulo
conjunction
type_check
add_attribute("A", "INTEGER", "BOOLEAN")
add_class(e)
add_command("e", "C", <<["D", "INTEGER"], ["a", "e"]>>)
add_command("e", "e", <<["B", "BOOLEAN"], ["a", "e"]>>)
add_command("D", "c", <<["C", "D"], ["c", "D"], ["b", "b"], ["INTEGER", "BOOLEAN"], ["B", "BOOLEAN"]>>)
type_check
int_value (1)
generate_java_code
add_call_chain(<<a,A,B>>)
add_query("d", "c", <<["C", "BOOLEAN"]>>, "INTEGER")
add_call_chain(<<A,d,C,b,d,e,INTEGER>>)
add_command("D", "D", <<["B", "b"], ["a", "INTEGER"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["d", "BOOLEAN"], ["c", "C"], ["c", "C"], ["D", "INTEGER"], ["d", "INTEGER"]>>)
add_attribute("B", "d", "d")
add_call_chain(<<B,D,B,D,e,C,B,d,b>>)
add_query("a", "D", <<["d", "INTEGER"], ["D", "B"], ["a", "b"], ["D", "d"]>>, "b")
add_command("B", "a", <<["D", "BOOLEAN"], ["INTEGER", "INTEGER"], ["b", "BOOLEAN"], ["a", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["c", "B"], ["d", "b"], ["c", "INTEGER"]>>)
int_value (30)
bool_value (true)
add_attribute("D", "d", "INTEGER")
add_command("B", "b", <<["B", "INTEGER"], ["D", "b"]>>)
logical_negation
bool_value (false)
add_attribute("C", "d", "d")
numerical_negation
add_command("B", "c", <<["INTEGER", "c"], ["d", "C"], ["a", "INTEGER"], ["a", "d"], ["d", "c"], ["C", "INTEGER"], ["d", "INTEGER"], ["d", "c"], ["C", "c"]>>)
multiplication
generate_java_code
type_check
add_attribute("d", "b", "D")
quotient
add_query("A", "d", <<["b", "INTEGER"], ["BOOLEAN", "C"]>>, "INTEGER")
logical_negation
add_attribute("B", "c", "INTEGER")
add_command("D", "BOOLEAN", <<["D", "INTEGER"], ["A", "a"], ["d", "INTEGER"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["c", "INTEGER"], ["b", "INTEGER"]>>)
add_attribute("D", "C", "INTEGER")
add_call_chain(<<B,C,A,e,c,INTEGER>>)
add_attribute("C", "B", "INTEGER")
add_command("e", "D", <<["a", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "BOOLEAN"]>>)
add_query("INTEGER", "BOOLEAN", <<["B", "INTEGER"], ["a", "e"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "B"]>>, "c")
generate_java_code
add_command("c", "B", <<["A", "BOOLEAN"], ["b", "e"], ["c", "BOOLEAN"], ["a", "INTEGER"], ["B", "INTEGER"], ["c", "INTEGER"], ["B", "INTEGER"], ["D", "BOOLEAN"]>>)
add_class(D)
add_query("a", "D", <<["D", "A"], ["A", "INTEGER"], ["C", "INTEGER"], ["INTEGER", "d"], ["e", "BOOLEAN"], ["A", "B"]>>, "b")
bool_value (false)
bool_value (false)
bool_value (true)
add_call_chain(<<D,c,d,C,b,e,a,c>>)
add_query("e", "C", <<["A", "BOOLEAN"]>>, "B")
bool_value (true)
add_command("A", "C", <<["c", "d"], ["c", "INTEGER"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["c", "C"], ["b", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "INTEGER"]>>)
add_query("C", "B", <<["D", "BOOLEAN"], ["BOOLEAN", "e"], ["d", "A"], ["BOOLEAN", "INTEGER"], ["c", "BOOLEAN"], ["A", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>, "INTEGER")
add_attribute("c", "A", "BOOLEAN")
add_call_chain(<<d,a,c,A,B,B>>)
add_attribute("D", "A", "d")
less_than
add_query("c", "e", <<["d", "INTEGER"], ["C", "INTEGER"], ["INTEGER", "BOOLEAN"], ["C", "INTEGER"], ["C", "INTEGER"], ["INTEGER", "INTEGER"], ["d", "INTEGER"], ["e", "INTEGER"]>>, "a")
add_query("BOOLEAN", "b", <<["c", "INTEGER"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["e", "INTEGER"], ["C", "INTEGER"]>>, "INTEGER")
add_query("c", "A", <<["BOOLEAN", "BOOLEAN"], ["b", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>, "c")
logical_negation
generate_java_code
add_call_chain(<<BOOLEAN,e,D,BOOLEAN,d,c,A,b,D>>)
add_attribute("d", "e", "BOOLEAN")
add_attribute("a", "a", "INTEGER")
logical_negation
subtraction
add_command("a", "D", <<["BOOLEAN", "b"], ["e", "D"], ["A", "BOOLEAN"], ["d", "a"], ["D", "INTEGER"], ["c", "c"], ["D", "BOOLEAN"], ["c", "A"]>>)
add_command("c", "e", <<["C", "BOOLEAN"], ["BOOLEAN", "C"], ["b", "INTEGER"], ["d", "BOOLEAN"], ["c", "INTEGER"]>>)
logical_negation
type_check
int_value (25)
quotient
conjunction
int_value (35)
bool_value (true)
add_call_chain(<<D,C,d,a,b>>)
add_query("d", "b", <<["B", "INTEGER"], ["b", "D"]>>, "B")
type_check
add_query("C", "C", <<["A", "a"]>>, "b")
bool_value (true)
