add_class(D)
add_class(b)
disjunction
multiplication
disjunction
type_check
add_command("b", "e", <<["A", "INTEGER"]>>)
greater_than
generate_java_code
type_check
bool_value (true)
bool_value (true)
add_attribute("B", "D", "INTEGER")
bool_value (false)
bool_value (true)
logical_negation
int_value (1)
numerical_negation
add_query("b", "C", <<["BOOLEAN", "INTEGER"], ["A", "INTEGER"], ["e", "A"], ["C", "INTEGER"]>>, "C")
add_command("e", "c", <<["e", "INTEGER"], ["a", "e"], ["B", "b"], ["C", "A"], ["INTEGER", "A"], ["A", "INTEGER"]>>)
int_value (11)
add_command("b", "INTEGER", <<["B", "INTEGER"], ["B", "d"], ["B", "INTEGER"], ["A", "A"]>>)
add_attribute("d", "c", "BOOLEAN")
bool_value (false)
add_query("a", "D", <<["a", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["INTEGER", "INTEGER"], ["C", "INTEGER"], ["a", "INTEGER"]>>, "b")
numerical_negation
add_attribute("A", "BOOLEAN", "INTEGER")
generate_java_code
add_query("B", "D", <<["C", "d"]>>, "b")
logical_negation
generate_java_code
numerical_negation
logical_negation
add_query("A", "d", <<["BOOLEAN", "BOOLEAN"], ["d", "INTEGER"], ["a", "A"], ["B", "INTEGER"], ["b", "BOOLEAN"], ["B", "d"], ["INTEGER", "D"], ["c", "A"], ["a", "BOOLEAN"]>>, "B")
greater_than
logical_negation
generate_java_code
add_command("a", "D", <<["A", "BOOLEAN"], ["e", "C"], ["C", "c"], ["INTEGER", "BOOLEAN"], ["INTEGER", "e"], ["b", "D"], ["e", "INTEGER"]>>)
add_command("c", "C", <<["b", "B"], ["c", "INTEGER"], ["INTEGER", "INTEGER"]>>)
add_command("D", "a", <<["A", "BOOLEAN"], ["D", "INTEGER"], ["d", "BOOLEAN"]>>)
int_value (48)
bool_value (true)
int_value (32)
bool_value (true)
add_attribute("INTEGER", "b", "BOOLEAN")
int_value (46)
disjunction
numerical_negation
add_query("INTEGER", "A", <<["d", "c"]>>, "D")
add_command("D", "a", <<["b", "b"], ["B", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "BOOLEAN"], ["c", "c"], ["C", "A"], ["B", "BOOLEAN"], ["a", "INTEGER"], ["A", "A"]>>)
equals
int_value (13)
add_call_chain(<<B,C,a>>)
add_call_chain(<<c,A,b,c,a,c,C>>)
less_than
add_call_chain(<<A>>)
logical_negation
generate_java_code
int_value (47)
add_call_chain(<<a,a,D,e,C,e>>)
modulo
add_command("C", "d", <<["BOOLEAN", "A"], ["B", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["B", "C"], ["d", "INTEGER"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["B", "INTEGER"]>>)
bool_value (true)
add_call_chain(<<C,b,d,d,a,D,a>>)
add_call_chain(<<D,B>>)
numerical_negation
add_command("a", "C", <<["c", "A"], ["a", "b"], ["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"], ["b", "B"]>>)
bool_value (false)
logical_negation
numerical_negation
bool_value (false)
numerical_negation
add_command("D", "c", <<["B", "BOOLEAN"], ["A", "INTEGER"], ["e", "INTEGER"], ["D", "c"], ["c", "INTEGER"], ["b", "B"], ["a", "d"], ["A", "c"]>>)
add_query("A", "D", <<["e", "d"], ["c", "INTEGER"], ["a", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "a"], ["e", "D"], ["B", "b"]>>, "b")
int_value (45)
int_value (30)
generate_java_code
numerical_negation
add_query("A", "A", <<["d", "b"], ["a", "B"], ["a", "INTEGER"], ["B", "BOOLEAN"], ["B", "BOOLEAN"]>>, "A")
type_check
int_value (8)
add_attribute("e", "C", "INTEGER")
bool_value (true)
add_command("INTEGER", "INTEGER", <<["D", "b"]>>)
less_than
add_class(D)
less_than
greater_than
add_attribute("d", "A", "INTEGER")
add_class(C)
less_than
add_query("INTEGER", "c", <<["A", "d"]>>, "B")
add_call_chain(<<a,d,BOOLEAN,C,B,C,BOOLEAN,e>>)
add_query("A", "INTEGER", <<["BOOLEAN", "BOOLEAN"], ["e", "INTEGER"], ["D", "BOOLEAN"], ["B", "BOOLEAN"]>>, "A")
add_query("C", "BOOLEAN", <<["e", "INTEGER"], ["C", "BOOLEAN"], ["a", "INTEGER"], ["d", "INTEGER"], ["C", "INTEGER"]>>, "c")
add_class(b)
add_query("e", "c", <<["A", "BOOLEAN"]>>, "D")
add_query("D", "BOOLEAN", <<["BOOLEAN", "INTEGER"], ["b", "d"], ["A", "BOOLEAN"], ["b", "BOOLEAN"], ["d", "INTEGER"], ["a", "INTEGER"], ["B", "A"], ["b", "INTEGER"]>>, "c")
add_call_chain(<<D,D>>)
add_query("d", "C", <<["INTEGER", "INTEGER"], ["B", "INTEGER"], ["D", "BOOLEAN"]>>, "C")
quotient
add_query("B", "B", <<["D", "BOOLEAN"], ["D", "INTEGER"], ["b", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "b"], ["c", "A"]>>, "BOOLEAN")
numerical_negation
bool_value (true)
add_call_chain(<<d,a>>)
numerical_negation
add_call_chain(<<a,A,c,C,BOOLEAN,C>>)
bool_value (true)
less_than
conjunction
type_check
logical_negation
add_class(BOOLEAN)
add_query("B", "b", <<["A", "b"], ["d", "INTEGER"]>>, "b")
int_value (17)
add_query("c", "B", <<["A", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "e"], ["C", "A"], ["A", "INTEGER"]>>, "A")
add_call_chain(<<d>>)
bool_value (false)
int_value (22)
add_attribute("c", "b", "BOOLEAN")
add_attribute("e", "A", "c")
add_call_chain(<<INTEGER,C,B,e,a,e>>)
bool_value (false)
add_command("a", "D", <<["B", "BOOLEAN"], ["a", "e"], ["c", "BOOLEAN"], ["D", "INTEGER"], ["B", "C"], ["a", "INTEGER"], ["a", "INTEGER"]>>)
type_check
type_check
conjunction
type_check
add_attribute("INTEGER", "C", "b")
logical_negation
add_query("a", "B", <<["B", "c"], ["A", "c"], ["INTEGER", "B"], ["B", "INTEGER"], ["a", "d"], ["e", "BOOLEAN"], ["c", "INTEGER"]>>, "D")
logical_negation
disjunction
add_call_chain(<<B,D,A,d>>)
add_call_chain(<<c>>)
add_attribute("A", "INTEGER", "BOOLEAN")
conjunction
type_check
int_value (43)
add_query("D", "A", <<["D", "INTEGER"], ["e", "BOOLEAN"]>>, "c")
add_query("A", "d", <<["a", "INTEGER"], ["B", "INTEGER"], ["e", "C"], ["A", "D"], ["a", "d"]>>, "a")
generate_java_code
add_call_chain(<<b,A,e,C,A,C,e>>)
add_call_chain(<<B,c,B>>)
generate_java_code
add_call_chain(<<C,A,a,b,D>>)
int_value (44)
numerical_negation
add_attribute("A", "D", "INTEGER")
add_attribute("e", "B", "b")
add_call_chain(<<D,C,e>>)
add_attribute("b", "c", "B")
multiplication
int_value (24)
logical_negation
add_command("b", "c", <<["A", "B"], ["b", "BOOLEAN"], ["A", "B"], ["d", "INTEGER"]>>)
add_query("C", "D", <<["b", "BOOLEAN"], ["a", "INTEGER"], ["d", "INTEGER"], ["e", "BOOLEAN"], ["d", "BOOLEAN"]>>, "a")
logical_negation
add_query("b", "e", <<["b", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "c"]>>, "c")
type_check
add_attribute("BOOLEAN", "D", "d")
add_call_chain(<<A,e,D>>)
add_attribute("e", "BOOLEAN", "d")
add_query("C", "e", <<["e", "BOOLEAN"], ["b", "b"], ["d", "INTEGER"], ["C", "D"]>>, "C")
add_call_chain(<<C,A>>)
add_query("C", "INTEGER", <<["A", "INTEGER"], ["b", "A"], ["d", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "INTEGER"]>>, "BOOLEAN")
int_value (21)
add_attribute("C", "A", "b")
bool_value (false)
disjunction
type_check
add_query("c", "B", <<["A", "BOOLEAN"], ["B", "INTEGER"], ["B", "A"], ["b", "INTEGER"], ["e", "BOOLEAN"]>>, "c")
disjunction
add_command("INTEGER", "BOOLEAN", <<["e", "BOOLEAN"], ["e", "INTEGER"], ["C", "INTEGER"]>>)
add_query("A", "c", <<["b", "c"], ["a", "BOOLEAN"], ["A", "e"], ["d", "INTEGER"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["C", "BOOLEAN"]>>, "e")
add_query("BOOLEAN", "d", <<["D", "BOOLEAN"], ["b", "INTEGER"], ["C", "D"]>>, "D")
int_value (35)
bool_value (false)
add_class(A)
numerical_negation
add_call_chain(<<C,a,D,B,C,A,d,b>>)
add_class(e)
bool_value (true)
bool_value (true)
logical_negation
add_attribute("a", "D", "BOOLEAN")
add_attribute("A", "e", "BOOLEAN")
add_attribute("b", "B", "BOOLEAN")
add_class(A)
add_command("b", "c", <<["c", "INTEGER"], ["C", "A"]>>)
numerical_negation
add_command("B", "a", <<["e", "INTEGER"], ["a", "INTEGER"], ["INTEGER", "C"], ["b", "BOOLEAN"], ["C", "d"]>>)
modulo
add_call_chain(<<c,B,a,INTEGER,A,c,D,e,b>>)
add_command("C", "D", <<["b", "INTEGER"], ["D", "BOOLEAN"], ["c", "b"], ["BOOLEAN", "BOOLEAN"], ["b", "e"], ["c", "INTEGER"], ["C", "INTEGER"], ["D", "INTEGER"]>>)
add_attribute("A", "B", "INTEGER")
add_call_chain(<<A,B,C,e>>)
int_value (8)
type_check
add_command("INTEGER", "D", <<["B", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "e"], ["B", "c"], ["BOOLEAN", "BOOLEAN"], ["A", "INTEGER"], ["e", "INTEGER"]>>)
greater_than
bool_value (false)
add_class(e)
add_class(D)
bool_value (true)
add_call_chain(<<b,c,a>>)
numerical_negation
equals
type_check
add_attribute("c", "D", "BOOLEAN")
less_than
add_class(b)
add_class(c)
add_query("INTEGER", "INTEGER", <<["D", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "INTEGER"]>>, "A")
add_attribute("a", "C", "INTEGER")
add_class(C)
add_attribute("B", "c", "INTEGER")
bool_value (true)
add_command("d", "INTEGER", <<["INTEGER", "INTEGER"]>>)
logical_negation
addition
add_query("D", "A", <<["A", "INTEGER"], ["c", "BOOLEAN"], ["d", "C"], ["a", "BOOLEAN"]>>, "D")
generate_java_code
add_call_chain(<<b,A,B,e,c,C>>)
int_value (42)
add_call_chain(<<C,d,a,b>>)
bool_value (false)
add_call_chain(<<D,b,INTEGER,D,e,C>>)
logical_negation
add_query("d", "INTEGER", <<["e", "INTEGER"], ["A", "BOOLEAN"], ["a", "C"], ["a", "BOOLEAN"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["c", "BOOLEAN"]>>, "D")
add_call_chain(<<INTEGER,b,e,A,A>>)
addition
disjunction
logical_negation
add_query("B", "B", <<["b", "BOOLEAN"], ["B", "b"], ["c", "BOOLEAN"]>>, "b")
add_query("c", "D", <<["C", "INTEGER"], ["BOOLEAN", "e"], ["c", "D"], ["b", "A"]>>, "a")
add_query("C", "D", <<["B", "INTEGER"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "a"], ["B", "INTEGER"], ["a", "BOOLEAN"], ["C", "c"], ["d", "BOOLEAN"], ["D", "BOOLEAN"]>>, "D")
add_attribute("INTEGER", "c", "BOOLEAN")
add_attribute("c", "c", "b")
int_value (24)
add_query("B", "A", <<["C", "INTEGER"], ["d", "INTEGER"], ["e", "INTEGER"], ["c", "b"], ["e", "BOOLEAN"], ["a", "d"], ["b", "b"], ["e", "BOOLEAN"], ["d", "INTEGER"]>>, "c")
numerical_negation
add_query("d", "e", <<["A", "BOOLEAN"], ["D", "INTEGER"]>>, "d")
subtraction
logical_negation
subtraction
add_call_chain(<<B,B,D,BOOLEAN,A,C,e,B>>)
add_call_chain(<<d,INTEGER,c,c,b>>)
add_class(b)
add_call_chain(<<D,d,c,d,d,B,BOOLEAN,a,A>>)
logical_negation
add_call_chain(<<A,A,B,d,D>>)
add_attribute("d", "e", "INTEGER")
add_attribute("D", "A", "INTEGER")
add_call_chain(<<B,c,BOOLEAN,d,D,d,d,A>>)
type_check
greater_than
int_value (4)
add_attribute("b", "C", "INTEGER")
int_value (26)
numerical_negation
greater_than
add_attribute("INTEGER", "B", "BOOLEAN")
conjunction
add_attribute("c", "C", "INTEGER")
add_class(B)
logical_negation
conjunction
int_value (8)
add_command("B", "c", <<["e", "a"], ["C", "C"], ["c", "INTEGER"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["BOOLEAN", "INTEGER"], ["a", "INTEGER"], ["e", "BOOLEAN"]>>)
add_command("A", "B", <<["A", "d"], ["d", "INTEGER"], ["c", "INTEGER"], ["c", "INTEGER"], ["B", "BOOLEAN"]>>)
numerical_negation
logical_negation
int_value (21)
add_attribute("c", "D", "a")
add_query("D", "D", <<["B", "BOOLEAN"], ["A", "e"], ["B", "A"], ["B", "C"]>>, "B")
add_query("D", "D", <<["c", "d"]>>, "B")
type_check
add_attribute("A", "b", "INTEGER")
add_command("c", "e", <<["a", "b"], ["b", "BOOLEAN"], ["e", "A"], ["b", "BOOLEAN"], ["b", "BOOLEAN"]>>)
bool_value (false)
bool_value (false)
add_attribute("B", "D", "C")
add_command("B", "d", <<["B", "INTEGER"], ["A", "A"], ["BOOLEAN", "INTEGER"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["C", "BOOLEAN"]>>)
generate_java_code
int_value (30)
add_call_chain(<<C,c,a,D,c,C>>)
generate_java_code
add_attribute("a", "D", "BOOLEAN")
