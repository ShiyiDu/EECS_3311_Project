add_query("C", "e", <<["e", "BOOLEAN"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["b", "BOOLEAN"]>>, "C")
bool_value (false)
int_value (12)
conjunction
conjunction
add_query("c", "a", <<["C", "INTEGER"]>>, "C")
add_attribute("a", "B", "BOOLEAN")
add_call_chain(<<c,e,e>>)
int_value (37)
add_command("D", "B", <<["b", "INTEGER"], ["c", "INTEGER"], ["a", "INTEGER"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["A", "INTEGER"], ["A", "b"], ["b", "INTEGER"], ["D", "A"]>>)
equals
addition
numerical_negation
add_class(B)
int_value (17)
int_value (26)
numerical_negation
add_attribute("a", "c", "BOOLEAN")
add_attribute("d", "e", "BOOLEAN")
add_call_chain(<<a,c,B,C>>)
logical_negation
type_check
add_call_chain(<<e,A,b,c>>)
generate_java_code
add_attribute("C", "INTEGER", "BOOLEAN")
add_attribute("d", "a", "BOOLEAN")
add_call_chain(<<D,D,B,C,B,b,C,C>>)
int_value (13)
numerical_negation
add_attribute("B", "b", "BOOLEAN")
int_value (2)
greater_than
multiplication
add_call_chain(<<D,D,B,D>>)
bool_value (true)
add_call_chain(<<d,INTEGER,e,e,d,C,D,BOOLEAN>>)
logical_negation
logical_negation
add_attribute("e", "a", "BOOLEAN")
type_check
type_check
subtraction
add_query("d", "C", <<["B", "D"], ["INTEGER", "INTEGER"], ["INTEGER", "A"]>>, "b")
numerical_negation
add_command("INTEGER", "c", <<["B", "INTEGER"], ["A", "INTEGER"], ["b", "INTEGER"], ["b", "C"], ["A", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "c"], ["b", "BOOLEAN"]>>)
type_check
add_call_chain(<<INTEGER,d,B,A,D,a,c,c,c>>)
bool_value (false)
add_attribute("B", "BOOLEAN", "INTEGER")
bool_value (true)
numerical_negation
add_call_chain(<<C,B,C,A,B,D>>)
add_query("BOOLEAN", "INTEGER", <<["BOOLEAN", "e"], ["B", "B"], ["a", "BOOLEAN"], ["B", "e"], ["C", "BOOLEAN"], ["B", "C"], ["B", "INTEGER"]>>, "INTEGER")
add_attribute("B", "D", "INTEGER")
add_call_chain(<<b,d,C>>)
add_command("INTEGER", "b", <<["c", "INTEGER"], ["A", "INTEGER"], ["d", "INTEGER"], ["B", "INTEGER"], ["D", "D"], ["D", "e"], ["e", "BOOLEAN"]>>)
add_command("c", "B", <<["A", "c"], ["C", "BOOLEAN"], ["D", "a"], ["d", "b"], ["C", "c"], ["e", "D"], ["a", "BOOLEAN"]>>)
add_call_chain(<<C,B,e,D,d,C,c>>)
add_command("b", "D", <<["B", "A"], ["b", "BOOLEAN"], ["e", "a"], ["c", "BOOLEAN"], ["d", "C"], ["e", "BOOLEAN"]>>)
add_attribute("BOOLEAN", "e", "BOOLEAN")
less_than
bool_value (true)
logical_negation
bool_value (true)
add_call_chain(<<D,a,d,c,a,A,b,C,a>>)
add_call_chain(<<D>>)
disjunction
int_value (35)
numerical_negation
add_attribute("INTEGER", "b", "d")
add_call_chain(<<C,B,c,A,e,D,b>>)
add_attribute("d", "B", "BOOLEAN")
type_check
bool_value (true)
bool_value (true)
quotient
add_query("C", "B", <<["B", "INTEGER"], ["b", "c"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "INTEGER"], ["e", "BOOLEAN"]>>, "a")
conjunction
add_attribute("b", "b", "D")
add_class(d)
disjunction
add_call_chain(<<a,A,c,D>>)
logical_negation
add_call_chain(<<B,B,a>>)
logical_negation
add_class(C)
numerical_negation
bool_value (false)
bool_value (false)
type_check
add_query("INTEGER", "B", <<["INTEGER", "D"], ["a", "B"], ["e", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["B", "INTEGER"], ["INTEGER", "BOOLEAN"]>>, "INTEGER")
add_query("e", "d", <<["C", "INTEGER"], ["D", "INTEGER"], ["INTEGER", "d"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["a", "BOOLEAN"]>>, "BOOLEAN")
type_check
bool_value (false)
conjunction
add_call_chain(<<b,B>>)
int_value (11)
add_command("D", "INTEGER", <<["D", "D"], ["B", "D"], ["e", "b"], ["A", "BOOLEAN"], ["e", "A"]>>)
add_attribute("B", "a", "b")
int_value (44)
bool_value (true)
add_query("D", "A", <<["B", "D"], ["c", "BOOLEAN"], ["a", "INTEGER"], ["BOOLEAN", "INTEGER"], ["d", "BOOLEAN"], ["A", "INTEGER"], ["A", "BOOLEAN"], ["INTEGER", "INTEGER"]>>, "e")
add_call_chain(<<C,e,c,e,D,e>>)
add_call_chain(<<D,D,a,a>>)
conjunction
generate_java_code
disjunction
conjunction
conjunction
int_value (4)
bool_value (true)
equals
modulo
add_call_chain(<<c,B,A,A,D,B,C,e>>)
add_query("C", "d", <<["BOOLEAN", "BOOLEAN"], ["B", "A"], ["d", "INTEGER"], ["D", "INTEGER"], ["A", "INTEGER"], ["INTEGER", "c"], ["e", "INTEGER"], ["D", "INTEGER"], ["A", "INTEGER"]>>, "c")
type_check
generate_java_code
subtraction
bool_value (true)
add_attribute("A", "A", "BOOLEAN")
numerical_negation
add_call_chain(<<C,d,d,BOOLEAN,b,C,c,b>>)
add_command("A", "INTEGER", <<["a", "e"], ["C", "D"], ["B", "a"], ["C", "BOOLEAN"], ["C", "D"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["d", "INTEGER"]>>)
logical_negation
bool_value (false)
add_command("b", "D", <<["c", "INTEGER"], ["B", "BOOLEAN"]>>)
add_call_chain(<<c,b,d,e>>)
add_query("A", "INTEGER", <<["C", "INTEGER"]>>, "e")
add_query("e", "B", <<["d", "c"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "c"], ["BOOLEAN", "C"]>>, "d")
add_attribute("D", "B", "BOOLEAN")
add_class(c)
type_check
add_query("D", "BOOLEAN", <<["C", "INTEGER"], ["B", "b"], ["c", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["c", "BOOLEAN"], ["b", "d"], ["A", "BOOLEAN"], ["a", "e"]>>, "d")
add_class(c)
logical_negation
add_attribute("e", "e", "BOOLEAN")
add_query("c", "d", <<["A", "C"], ["C", "A"], ["D", "BOOLEAN"], ["C", "BOOLEAN"]>>, "B")
add_attribute("c", "A", "INTEGER")
add_query("c", "A", <<["b", "c"], ["INTEGER", "BOOLEAN"]>>, "a")
add_attribute("B", "A", "INTEGER")
add_command("A", "C", <<["D", "d"], ["A", "BOOLEAN"], ["d", "A"], ["A", "C"]>>)
logical_negation
subtraction
bool_value (true)
less_than
add_attribute("D", "B", "INTEGER")
generate_java_code
add_attribute("b", "C", "BOOLEAN")
add_call_chain(<<INTEGER,A,b>>)
int_value (1)
greater_than
numerical_negation
add_query("a", "d", <<["D", "d"], ["b", "BOOLEAN"], ["D", "D"], ["c", "D"], ["A", "b"], ["A", "BOOLEAN"]>>, "e")
add_class(d)
add_query("BOOLEAN", "e", <<["A", "INTEGER"], ["B", "B"], ["BOOLEAN", "INTEGER"]>>, "B")
addition
generate_java_code
bool_value (false)
add_call_chain(<<a,C>>)
equals
add_call_chain(<<C,BOOLEAN,e,d>>)
numerical_negation
bool_value (false)
less_than
numerical_negation
conjunction
add_query("b", "C", <<["A", "INTEGER"], ["b", "INTEGER"], ["C", "b"], ["c", "BOOLEAN"], ["c", "b"]>>, "A")
type_check
add_command("b", "C", <<["INTEGER", "B"], ["b", "INTEGER"], ["D", "BOOLEAN"], ["b", "c"], ["B", "INTEGER"], ["a", "INTEGER"], ["d", "e"]>>)
add_call_chain(<<a,a,D,a,e,c,D>>)
add_call_chain(<<c,a,b,A,B,e,b,e,c>>)
add_attribute("e", "c", "BOOLEAN")
add_call_chain(<<b>>)
add_command("d", "D", <<["c", "BOOLEAN"], ["d", "INTEGER"]>>)
add_attribute("B", "C", "INTEGER")
numerical_negation
add_attribute("a", "BOOLEAN", "C")
add_command("C", "D", <<["e", "B"]>>)
add_query("e", "B", <<["d", "C"]>>, "e")
modulo
add_call_chain(<<D>>)
bool_value (true)
add_command("C", "C", <<["D", "BOOLEAN"], ["C", "BOOLEAN"], ["INTEGER", "C"], ["a", "c"], ["e", "e"], ["B", "BOOLEAN"]>>)
disjunction
bool_value (true)
add_command("A", "INTEGER", <<["INTEGER", "b"], ["A", "BOOLEAN"], ["d", "INTEGER"]>>)
generate_java_code
int_value (22)
greater_than
bool_value (false)
logical_negation
type_check
bool_value (true)
add_call_chain(<<d,INTEGER,a,A,B,A>>)
add_attribute("BOOLEAN", "C", "BOOLEAN")
add_command("e", "b", <<["a", "INTEGER"], ["A", "INTEGER"], ["D", "INTEGER"], ["C", "b"], ["c", "INTEGER"]>>)
subtraction
numerical_negation
add_query("c", "e", <<["BOOLEAN", "BOOLEAN"], ["BOOLEAN", "A"], ["A", "A"]>>, "D")
add_call_chain(<<C,d,BOOLEAN,D,C>>)
bool_value (false)
