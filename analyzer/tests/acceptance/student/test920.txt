type_check
bool_value (true)
bool_value (true)
add_command("B", "d", <<["INTEGER", "INTEGER"], ["D", "INTEGER"], ["d", "INTEGER"], ["B", "INTEGER"]>>)
disjunction
conjunction
subtraction
type_check
add_call_chain(<<b,d,INTEGER,A,D,D>>)
bool_value (true)
add_query("INTEGER", "d", <<["A", "BOOLEAN"], ["c", "a"], ["A", "BOOLEAN"], ["d", "INTEGER"], ["BOOLEAN", "INTEGER"], ["INTEGER", "INTEGER"], ["A", "BOOLEAN"], ["A", "B"]>>, "B")
numerical_negation
bool_value (true)
add_call_chain(<<D,A,BOOLEAN,e,A,C,D>>)
add_call_chain(<<C,A,C,A,D,C>>)
conjunction
subtraction
type_check
type_check
add_command("e", "C", <<["D", "A"], ["c", "INTEGER"], ["D", "INTEGER"], ["c", "BOOLEAN"], ["D", "INTEGER"], ["BOOLEAN", "INTEGER"], ["a", "BOOLEAN"]>>)
add_command("e", "c", <<["b", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["e", "INTEGER"], ["e", "BOOLEAN"], ["d", "INTEGER"]>>)
bool_value (false)
numerical_negation
less_than
add_query("D", "e", <<["C", "c"], ["INTEGER", "A"], ["a", "BOOLEAN"]>>, "e")
add_call_chain(<<c,e,C,b,C,b,d>>)
add_command("C", "b", <<["D", "e"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["e", "c"], ["a", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "INTEGER"], ["b", "BOOLEAN"], ["A", "BOOLEAN"]>>)
type_check
disjunction
add_command("BOOLEAN", "d", <<["D", "BOOLEAN"], ["C", "a"]>>)
add_command("B", "b", <<["c", "INTEGER"], ["e", "BOOLEAN"], ["D", "INTEGER"], ["B", "INTEGER"], ["d", "e"], ["INTEGER", "INTEGER"]>>)
logical_negation
bool_value (true)
logical_negation
add_call_chain(<<BOOLEAN,A,a,D,D>>)
bool_value (false)
add_command("B", "a", <<["BOOLEAN", "b"], ["D", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "BOOLEAN"]>>)
add_query("c", "B", <<["A", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "B"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "d"], ["D", "a"], ["d", "INTEGER"]>>, "C")
add_attribute("b", "D", "INTEGER")
add_call_chain(<<a,B,c,D,d,A,INTEGER>>)
add_attribute("e", "c", "a")
add_attribute("a", "D", "INTEGER")
add_call_chain(<<D,D,D,D,a>>)
numerical_negation
add_query("BOOLEAN", "a", <<["a", "INTEGER"], ["INTEGER", "BOOLEAN"], ["A", "BOOLEAN"], ["INTEGER", "INTEGER"], ["e", "C"]>>, "c")
quotient
modulo
add_attribute("e", "d", "BOOLEAN")
add_call_chain(<<B,D,e,e,B>>)
conjunction
add_query("d", "D", <<["e", "B"], ["B", "C"], ["C", "d"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["b", "INTEGER"], ["b", "BOOLEAN"], ["a", "BOOLEAN"]>>, "d")
bool_value (false)
disjunction
add_call_chain(<<c,C,D,b,D,b>>)
add_call_chain(<<d,e,b>>)
numerical_negation
logical_negation
logical_negation
int_value (20)
add_query("c", "A", <<["A", "C"], ["A", "INTEGER"], ["A", "INTEGER"], ["d", "d"], ["c", "INTEGER"], ["B", "c"]>>, "C")
add_command("C", "B", <<["B", "INTEGER"], ["b", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "BOOLEAN"], ["a", "C"], ["d", "C"], ["D", "BOOLEAN"]>>)
add_query("INTEGER", "a", <<["A", "INTEGER"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["e", "B"]>>, "a")
add_query("e", "B", <<["B", "INTEGER"]>>, "C")
add_command("d", "a", <<["INTEGER", "c"], ["INTEGER", "INTEGER"], ["C", "a"]>>)
add_query("A", "INTEGER", <<["A", "BOOLEAN"]>>, "d")
add_command("a", "d", <<["d", "INTEGER"], ["D", "BOOLEAN"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>)
add_attribute("C", "B", "BOOLEAN")
add_query("d", "a", <<["A", "d"], ["B", "INTEGER"]>>, "e")
add_call_chain(<<D,A,d,c,c,d,A>>)
add_command("d", "c", <<["a", "c"], ["D", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "INTEGER"]>>)
generate_java_code
generate_java_code
add_query("B", "d", <<["C", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "D"], ["B", "INTEGER"], ["c", "C"], ["INTEGER", "INTEGER"], ["B", "INTEGER"]>>, "D")
add_class(B)
add_attribute("D", "d", "BOOLEAN")
type_check
add_attribute("d", "D", "INTEGER")
bool_value (true)
add_class(B)
int_value (11)
add_query("e", "D", <<["b", "INTEGER"], ["D", "BOOLEAN"], ["c", "B"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["BOOLEAN", "INTEGER"]>>, "b")
add_command("d", "d", <<["D", "INTEGER"], ["a", "A"], ["c", "A"], ["a", "INTEGER"], ["D", "BOOLEAN"], ["d", "BOOLEAN"], ["b", "D"]>>)
add_class(e)
add_attribute("BOOLEAN", "D", "BOOLEAN")
type_check
int_value (46)
type_check
add_call_chain(<<c,C,INTEGER,BOOLEAN,c,d,D,e,INTEGER>>)
numerical_negation
add_query("b", "a", <<["D", "INTEGER"], ["D", "BOOLEAN"]>>, "d")
add_call_chain(<<INTEGER,C,B,BOOLEAN,e,e,D,A,c>>)
add_attribute("BOOLEAN", "a", "e")
add_call_chain(<<a>>)
add_command("INTEGER", "e", <<["a", "BOOLEAN"], ["a", "INTEGER"], ["B", "d"]>>)
greater_than
modulo
add_command("b", "A", <<["B", "INTEGER"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["A", "INTEGER"], ["D", "e"], ["D", "INTEGER"], ["d", "BOOLEAN"]>>)
add_attribute("e", "A", "INTEGER")
add_command("b", "B", <<["e", "BOOLEAN"], ["B", "INTEGER"], ["B", "BOOLEAN"], ["C", "B"], ["C", "INTEGER"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["a", "INTEGER"]>>)
add_command("B", "A", <<["A", "a"], ["B", "BOOLEAN"]>>)
addition
add_query("INTEGER", "b", <<["e", "BOOLEAN"]>>, "b")
add_call_chain(<<B,e,B,C,C,c,B>>)
add_call_chain(<<C,A,A,C,a,b,C,d,A>>)
add_attribute("c", "c", "INTEGER")
conjunction
add_command("b", "B", <<["b", "INTEGER"], ["b", "INTEGER"], ["C", "INTEGER"], ["B", "INTEGER"], ["INTEGER", "B"], ["INTEGER", "BOOLEAN"], ["C", "INTEGER"]>>)
add_call_chain(<<A,b,a,a,D,D,e,B,C>>)
add_query("B", "INTEGER", <<["INTEGER", "b"], ["BOOLEAN", "INTEGER"]>>, "a")
int_value (3)
add_command("B", "b", <<["INTEGER", "C"], ["INTEGER", "INTEGER"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["d", "INTEGER"], ["INTEGER", "BOOLEAN"], ["INTEGER", "INTEGER"], ["B", "BOOLEAN"]>>)
add_class(c)
logical_negation
add_query("e", "D", <<["e", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["INTEGER", "INTEGER"], ["b", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "B"], ["a", "INTEGER"]>>, "INTEGER")
add_command("D", "e", <<["B", "INTEGER"], ["e", "INTEGER"], ["c", "BOOLEAN"]>>)
add_call_chain(<<b>>)
numerical_negation
add_call_chain(<<a,c,C,d,A,e,b,a,c>>)
add_call_chain(<<c,C,B,c,B>>)
int_value (49)
add_call_chain(<<e,a,c,D,B,D,d>>)
numerical_negation
add_call_chain(<<d,D,D,D,INTEGER,A,d,e,b>>)
add_query("D", "B", <<["d", "a"], ["d", "D"], ["BOOLEAN", "INTEGER"], ["A", "BOOLEAN"], ["d", "c"], ["C", "INTEGER"], ["D", "e"], ["e", "INTEGER"]>>, "INTEGER")
generate_java_code
int_value (42)
numerical_negation
add_call_chain(<<c,c>>)
logical_negation
int_value (23)
add_attribute("b", "C", "INTEGER")
add_attribute("e", "d", "BOOLEAN")
equals
conjunction
add_call_chain(<<d,A,d,a,b,e>>)
int_value (46)
add_class(BOOLEAN)
bool_value (true)
add_call_chain(<<A,A>>)
add_call_chain(<<d,C,B,C,A,D,c,D,c>>)
numerical_negation
add_query("e", "e", <<["d", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["D", "B"]>>, "A")
add_query("c", "b", <<["D", "INTEGER"], ["A", "BOOLEAN"], ["c", "D"], ["a", "B"]>>, "b")
add_command("BOOLEAN", "a", <<["INTEGER", "INTEGER"], ["A", "BOOLEAN"], ["b", "BOOLEAN"], ["b", "INTEGER"], ["a", "BOOLEAN"], ["C", "BOOLEAN"]>>)
add_class(BOOLEAN)
add_query("A", "c", <<["D", "D"], ["e", "a"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["c", "e"], ["B", "BOOLEAN"], ["e", "BOOLEAN"]>>, "d")
numerical_negation
add_call_chain(<<d,B,A>>)
add_call_chain(<<b,INTEGER,A,b,D,C,b,c>>)
logical_negation
add_call_chain(<<A,D,a,B,c,INTEGER,d,C>>)
int_value (28)
type_check
add_query("b", "B", <<["c", "c"], ["INTEGER", "b"], ["c", "INTEGER"], ["b", "INTEGER"], ["e", "BOOLEAN"]>>, "e")
modulo
add_query("B", "e", <<["B", "INTEGER"]>>, "c")
type_check
add_command("B", "c", <<["c", "b"], ["C", "d"], ["B", "INTEGER"], ["INTEGER", "INTEGER"], ["C", "BOOLEAN"], ["B", "BOOLEAN"]>>)
add_query("a", "D", <<["d", "e"], ["a", "BOOLEAN"], ["c", "C"]>>, "BOOLEAN")
subtraction
numerical_negation
conjunction
add_class(C)
add_query("b", "BOOLEAN", <<["B", "B"]>>, "INTEGER")
equals
add_call_chain(<<A,D,D>>)
add_query("A", "C", <<["d", "BOOLEAN"], ["B", "INTEGER"]>>, "A")
logical_negation
add_class(A)
add_attribute("a", "e", "A")
add_query("D", "d", <<["C", "c"], ["D", "INTEGER"], ["A", "C"], ["INTEGER", "d"], ["d", "INTEGER"], ["B", "BOOLEAN"], ["a", "INTEGER"], ["A", "BOOLEAN"], ["A", "D"]>>, "A")
add_call_chain(<<D,b,d,D,B,e,C>>)
type_check
add_class(A)
add_attribute("a", "C", "BOOLEAN")
add_call_chain(<<e,C,B,a,e,b,C,c>>)
add_call_chain(<<b,D,D,a>>)
add_query("A", "D", <<["D", "e"], ["C", "BOOLEAN"], ["d", "BOOLEAN"], ["INTEGER", "INTEGER"], ["B", "INTEGER"], ["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "D"]>>, "C")
add_attribute("INTEGER", "d", "B")
add_call_chain(<<C,A,e,b,A>>)
generate_java_code
add_call_chain(<<d,C,A,b>>)
add_call_chain(<<A,e>>)
add_attribute("INTEGER", "d", "BOOLEAN")
type_check
greater_than
int_value (2)
add_call_chain(<<c>>)
add_call_chain(<<A,B,a>>)
type_check
int_value (19)
disjunction
addition
disjunction
add_command("INTEGER", "A", <<["INTEGER", "INTEGER"], ["b", "INTEGER"]>>)
conjunction
type_check
type_check
add_query("a", "C", <<["C", "d"], ["e", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "b"], ["a", "INTEGER"], ["C", "BOOLEAN"], ["d", "BOOLEAN"]>>, "D")
add_call_chain(<<B>>)
int_value (16)
logical_negation
add_command("D", "C", <<["D", "INTEGER"], ["D", "B"], ["D", "b"], ["A", "INTEGER"], ["D", "INTEGER"], ["B", "C"]>>)
greater_than
add_attribute("d", "D", "BOOLEAN")
add_call_chain(<<INTEGER,e,C,B,A>>)
less_than
greater_than
add_attribute("e", "D", "BOOLEAN")
type_check
generate_java_code
bool_value (false)
bool_value (true)
add_call_chain(<<e,B,d>>)
add_call_chain(<<D,C,c,c,a,e,b,A>>)
add_command("b", "b", <<["B", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "A"], ["b", "INTEGER"], ["D", "INTEGER"], ["INTEGER", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["B", "A"]>>)
add_attribute("c", "B", "BOOLEAN")
add_query("C", "c", <<["A", "INTEGER"], ["B", "b"], ["A", "D"], ["b", "BOOLEAN"], ["C", "BOOLEAN"]>>, "e")
bool_value (false)
add_attribute("D", "A", "INTEGER")
add_call_chain(<<B,D,a>>)
add_command("e", "b", <<["d", "INTEGER"], ["c", "e"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["D", "a"], ["e", "e"], ["C", "INTEGER"]>>)
add_attribute("e", "b", "C")
logical_negation
type_check
int_value (8)
conjunction
conjunction
add_call_chain(<<a>>)
add_call_chain(<<INTEGER,C>>)
logical_negation
int_value (11)
add_class(d)
add_call_chain(<<D>>)
add_query("C", "B", <<["e", "INTEGER"], ["D", "BOOLEAN"], ["d", "d"], ["b", "C"], ["C", "BOOLEAN"], ["B", "BOOLEAN"]>>, "INTEGER")
add_call_chain(<<d,B,d,e,A,B>>)
logical_negation
add_attribute("e", "D", "INTEGER")
add_query("c", "B", <<["c", "BOOLEAN"]>>, "e")
equals
add_query("d", "a", <<["D", "INTEGER"], ["BOOLEAN", "A"], ["b", "B"], ["e", "BOOLEAN"]>>, "C")
add_call_chain(<<d,d,B,b,c,e,b,A,b>>)
int_value (47)
quotient
