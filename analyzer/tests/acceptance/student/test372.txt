logical_negation
logical_negation
logical_negation
type_check
conjunction
numerical_negation
add_command("c", "D", <<["b", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "b"], ["b", "BOOLEAN"], ["c", "A"], ["b", "c"], ["c", "BOOLEAN"]>>)
add_attribute("e", "a", "INTEGER")
int_value (45)
int_value (26)
bool_value (false)
generate_java_code
add_attribute("d", "BOOLEAN", "b")
add_query("c", "b", <<["B", "BOOLEAN"], ["B", "e"], ["d", "BOOLEAN"], ["B", "INTEGER"], ["A", "INTEGER"], ["A", "INTEGER"]>>, "BOOLEAN")
add_call_chain(<<c,d,d,d,c,D,C>>)
add_command("C", "B", <<["d", "BOOLEAN"], ["b", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["d", "BOOLEAN"], ["e", "c"], ["a", "INTEGER"], ["d", "INTEGER"], ["B", "BOOLEAN"]>>)
add_command("A", "c", <<["C", "e"], ["INTEGER", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["a", "b"], ["d", "INTEGER"], ["A", "BOOLEAN"]>>)
add_attribute("b", "B", "INTEGER")
int_value (48)
add_attribute("c", "D", "d")
add_attribute("b", "e", "C")
add_call_chain(<<d,e,BOOLEAN,D,c,C,e,D,b>>)
add_command("C", "BOOLEAN", <<["a", "INTEGER"], ["B", "BOOLEAN"], ["c", "INTEGER"]>>)
add_query("C", "e", <<["A", "e"], ["a", "BOOLEAN"], ["C", "c"], ["A", "BOOLEAN"]>>, "e")
add_command("BOOLEAN", "C", <<["e", "INTEGER"], ["B", "e"], ["INTEGER", "BOOLEAN"], ["d", "INTEGER"]>>)
add_call_chain(<<BOOLEAN,e,C>>)
add_query("D", "D", <<["B", "a"], ["C", "C"], ["B", "c"], ["A", "INTEGER"], ["D", "C"], ["c", "INTEGER"], ["c", "BOOLEAN"], ["D", "INTEGER"], ["b", "BOOLEAN"]>>, "A")
add_call_chain(<<b,b>>)
int_value (37)
add_command("BOOLEAN", "c", <<["a", "c"], ["INTEGER", "D"], ["C", "INTEGER"], ["d", "INTEGER"], ["B", "INTEGER"], ["BOOLEAN", "a"], ["A", "BOOLEAN"], ["A", "INTEGER"], ["c", "D"]>>)
add_command("B", "INTEGER", <<["a", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "INTEGER"]>>)
type_check
add_call_chain(<<BOOLEAN,a,d,c,c>>)
add_class(B)
subtraction
bool_value (true)
add_attribute("B", "C", "BOOLEAN")
add_call_chain(<<a,a,a,b,C,b,d>>)
bool_value (false)
logical_negation
multiplication
add_attribute("BOOLEAN", "d", "B")
generate_java_code
add_call_chain(<<C>>)
add_call_chain(<<B,A,b,c>>)
less_than
add_command("d", "e", <<["A", "INTEGER"], ["e", "INTEGER"], ["B", "BOOLEAN"], ["INTEGER", "INTEGER"], ["a", "BOOLEAN"]>>)
conjunction
int_value (23)
add_command("D", "d", <<["a", "b"], ["b", "INTEGER"], ["e", "BOOLEAN"], ["a", "INTEGER"], ["B", "INTEGER"], ["e", "b"], ["e", "BOOLEAN"]>>)
add_command("c", "B", <<["D", "a"], ["d", "INTEGER"], ["C", "A"], ["e", "INTEGER"], ["a", "INTEGER"], ["a", "e"], ["b", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "c"]>>)
add_query("A", "e", <<["c", "BOOLEAN"], ["b", "e"], ["C", "D"], ["D", "INTEGER"], ["B", "BOOLEAN"], ["D", "INTEGER"], ["b", "INTEGER"]>>, "C")
add_query("d", "b", <<["D", "BOOLEAN"], ["d", "b"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["INTEGER", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["e", "INTEGER"]>>, "INTEGER")
add_command("C", "D", <<["a", "BOOLEAN"], ["d", "INTEGER"], ["INTEGER", "BOOLEAN"], ["B", "C"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["INTEGER", "D"]>>)
logical_negation
add_command("c", "A", <<["d", "e"], ["e", "e"], ["d", "INTEGER"], ["e", "b"], ["INTEGER", "c"], ["b", "B"], ["C", "INTEGER"], ["e", "D"], ["A", "BOOLEAN"]>>)
logical_negation
add_class(a)
add_command("BOOLEAN", "e", <<["A", "INTEGER"], ["B", "D"], ["A", "INTEGER"], ["A", "INTEGER"], ["c", "INTEGER"], ["C", "INTEGER"], ["D", "a"], ["A", "INTEGER"]>>)
add_attribute("B", "c", "BOOLEAN")
add_class(d)
add_call_chain(<<D,A,C,c,D,INTEGER>>)
int_value (12)
add_call_chain(<<e,e>>)
logical_negation
add_query("e", "d", <<["BOOLEAN", "INTEGER"], ["e", "INTEGER"], ["BOOLEAN", "INTEGER"], ["A", "INTEGER"]>>, "D")
add_class(INTEGER)
add_query("A", "b", <<["B", "INTEGER"], ["C", "BOOLEAN"]>>, "b")
multiplication
int_value (32)
add_class(b)
generate_java_code
add_command("B", "d", <<["A", "B"], ["a", "INTEGER"], ["B", "INTEGER"], ["B", "INTEGER"], ["B", "INTEGER"]>>)
conjunction
type_check
add_class(A)
type_check
add_attribute("C", "D", "BOOLEAN")
equals
add_call_chain(<<e,c,c,A,a,e,D,c,c>>)
add_attribute("A", "c", "INTEGER")
add_attribute("INTEGER", "C", "BOOLEAN")
add_attribute("D", "e", "INTEGER")
add_command("d", "D", <<["INTEGER", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "BOOLEAN"]>>)
add_call_chain(<<d,d>>)
add_query("INTEGER", "D", <<["A", "B"], ["BOOLEAN", "INTEGER"], ["c", "BOOLEAN"], ["A", "A"], ["a", "INTEGER"], ["a", "BOOLEAN"], ["C", "A"]>>, "C")
conjunction
type_check
add_class(A)
type_check
add_query("b", "d", <<["D", "BOOLEAN"], ["a", "INTEGER"], ["C", "BOOLEAN"], ["c", "INTEGER"], ["B", "BOOLEAN"]>>, "d")
add_command("a", "b", <<["B", "c"], ["C", "e"], ["b", "BOOLEAN"], ["c", "b"], ["c", "D"], ["B", "b"], ["d", "INTEGER"], ["B", "INTEGER"], ["C", "BOOLEAN"]>>)
generate_java_code
bool_value (true)
disjunction
add_call_chain(<<B,a,A,INTEGER>>)
add_command("b", "c", <<["C", "A"], ["c", "INTEGER"], ["e", "BOOLEAN"]>>)
add_call_chain(<<e,B,A,C,e,e,b,C,C>>)
add_query("e", "a", <<["INTEGER", "INTEGER"], ["d", "INTEGER"], ["a", "BOOLEAN"]>>, "INTEGER")
type_check
int_value (18)
addition
subtraction
add_call_chain(<<b,C,B,c,C>>)
add_query("a", "B", <<["e", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "B"]>>, "BOOLEAN")
add_call_chain(<<b,C,e,D,INTEGER,C>>)
add_attribute("b", "BOOLEAN", "BOOLEAN")
add_call_chain(<<b,D,D,d,c,d,b>>)
add_attribute("d", "A", "BOOLEAN")
numerical_negation
add_class(d)
add_query("C", "a", <<["C", "INTEGER"], ["A", "e"]>>, "B")
subtraction
add_command("b", "a", <<["b", "INTEGER"], ["c", "INTEGER"], ["D", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["a", "c"], ["INTEGER", "e"]>>)
conjunction
type_check
bool_value (false)
add_attribute("b", "INTEGER", "BOOLEAN")
conjunction
numerical_negation
add_call_chain(<<c,B>>)
add_query("B", "e", <<["e", "BOOLEAN"], ["B", "B"]>>, "INTEGER")
bool_value (false)
add_call_chain(<<INTEGER,a>>)
greater_than
add_command("d", "A", <<["D", "BOOLEAN"], ["C", "A"]>>)
subtraction
add_class(D)
bool_value (true)
add_call_chain(<<b,B,d,e,e,C>>)
logical_negation
add_command("B", "b", <<["e", "BOOLEAN"], ["B", "B"], ["c", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "C"], ["D", "BOOLEAN"]>>)
numerical_negation
equals
bool_value (true)
add_call_chain(<<BOOLEAN,A,b>>)
add_call_chain(<<INTEGER,A>>)
add_command("B", "a", <<["A", "INTEGER"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["d", "a"]>>)
add_call_chain(<<B>>)
int_value (43)
conjunction
bool_value (false)
add_call_chain(<<e,e,e>>)
add_query("d", "c", <<["D", "C"], ["d", "INTEGER"], ["D", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>, "e")
add_attribute("c", "c", "B")
int_value (7)
numerical_negation
int_value (49)
add_call_chain(<<a,A,D,d>>)
add_query("b", "e", <<["C", "BOOLEAN"], ["b", "D"], ["d", "INTEGER"], ["d", "B"], ["C", "BOOLEAN"], ["d", "a"], ["a", "BOOLEAN"], ["e", "BOOLEAN"]>>, "e")
conjunction
add_call_chain(<<B,C,C,D,B,e,D,c,c>>)
add_query("A", "A", <<["e", "INTEGER"], ["B", "B"], ["B", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["d", "BOOLEAN"], ["d", "C"], ["D", "INTEGER"]>>, "a")
add_command("d", "B", <<["a", "INTEGER"], ["c", "INTEGER"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["c", "b"], ["a", "BOOLEAN"], ["BOOLEAN", "a"], ["d", "BOOLEAN"]>>)
add_call_chain(<<A,B,d,b,a,a,B,B>>)
bool_value (false)
add_class(B)
generate_java_code
add_attribute("B", "B", "INTEGER")
add_command("D", "b", <<["e", "BOOLEAN"], ["d", "B"], ["c", "INTEGER"], ["INTEGER", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "BOOLEAN"]>>)
generate_java_code
numerical_negation
greater_than
add_query("B", "D", <<["e", "BOOLEAN"]>>, "c")
add_class(c)
numerical_negation
add_call_chain(<<e,A,b,BOOLEAN,BOOLEAN,C,C,D,a>>)
type_check
add_call_chain(<<d,D,C,a,A>>)
add_command("A", "c", <<["b", "b"], ["D", "INTEGER"]>>)
numerical_negation
disjunction
addition
int_value (36)
add_call_chain(<<d>>)
add_command("B", "b", <<["c", "e"], ["a", "INTEGER"], ["c", "INTEGER"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["C", "INTEGER"], ["b", "B"], ["e", "INTEGER"]>>)
add_call_chain(<<C,d,A,a>>)
logical_negation
add_attribute("B", "C", "INTEGER")
greater_than
bool_value (false)
greater_than
add_attribute("C", "C", "C")
add_query("B", "A", <<["d", "BOOLEAN"]>>, "B")
bool_value (false)
bool_value (true)
logical_negation
add_class(d)
add_query("A", "A", <<["B", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["d", "INTEGER"], ["d", "INTEGER"], ["B", "e"], ["a", "INTEGER"]>>, "a")
disjunction
add_attribute("D", "c", "BOOLEAN")
type_check
disjunction
generate_java_code
int_value (20)
add_query("a", "a", <<["d", "A"]>>, "D")
add_attribute("B", "c", "BOOLEAN")
addition
add_call_chain(<<e,D,INTEGER,d,C,INTEGER,a,C>>)
add_attribute("C", "b", "INTEGER")
add_call_chain(<<a,a,e,D,d,b,C>>)
type_check
add_class(A)
numerical_negation
add_call_chain(<<a,C,D,a,C,a,e,e,D>>)
