logical_negation
add_call_chain(<<BOOLEAN,e,B,e>>)
greater_than
numerical_negation
int_value (4)
equals
conjunction
add_class(c)
add_query("B", "D", <<["a", "D"], ["B", "C"], ["b", "INTEGER"]>>, "A")
add_attribute("a", "D", "BOOLEAN")
add_call_chain(<<c,b,D,c,e,C,d>>)
modulo
add_class(B)
addition
add_class(C)
add_call_chain(<<A,B>>)
add_attribute("A", "c", "BOOLEAN")
add_command("D", "C", <<["BOOLEAN", "B"], ["a", "BOOLEAN"], ["a", "INTEGER"], ["B", "INTEGER"], ["e", "A"], ["A", "D"], ["A", "INTEGER"], ["e", "C"]>>)
add_call_chain(<<C,BOOLEAN,A>>)
type_check
bool_value (true)
add_call_chain(<<a,e,BOOLEAN,C,D,c,D>>)
add_call_chain(<<A,C,B,A,BOOLEAN,A,b,e,C>>)
bool_value (false)
add_query("BOOLEAN", "B", <<["a", "BOOLEAN"]>>, "b")
add_attribute("B", "D", "BOOLEAN")
modulo
bool_value (true)
subtraction
numerical_negation
add_query("INTEGER", "b", <<["B", "b"], ["a", "b"], ["B", "BOOLEAN"], ["B", "INTEGER"], ["a", "B"], ["B", "a"], ["C", "INTEGER"], ["c", "e"]>>, "D")
add_call_chain(<<A,C,C,A,a,C,C>>)
bool_value (true)
logical_negation
add_call_chain(<<B,INTEGER,d,C,D,INTEGER,c,BOOLEAN,D>>)
add_class(B)
numerical_negation
type_check
add_class(B)
add_call_chain(<<d,D,C,c,e,C>>)
logical_negation
modulo
add_call_chain(<<e,b,D,b,a,d,a>>)
bool_value (true)
type_check
add_command("a", "A", <<["D", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "BOOLEAN"]>>)
generate_java_code
numerical_negation
add_class(B)
logical_negation
add_query("b", "b", <<["INTEGER", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "e"], ["B", "BOOLEAN"]>>, "D")
add_attribute("INTEGER", "c", "INTEGER")
add_query("b", "A", <<["a", "INTEGER"], ["e", "D"], ["e", "INTEGER"]>>, "A")
bool_value (false)
add_call_chain(<<d,B,d,C,e,B>>)
type_check
multiplication
generate_java_code
add_command("e", "a", <<["B", "INTEGER"], ["D", "BOOLEAN"], ["A", "BOOLEAN"]>>)
add_command("D", "A", <<["B", "D"], ["C", "C"], ["a", "d"], ["a", "C"], ["d", "D"], ["INTEGER", "BOOLEAN"], ["C", "B"]>>)
logical_negation
add_call_chain(<<C,e,D,e,d,D>>)
add_query("c", "A", <<["C", "INTEGER"], ["C", "d"], ["a", "INTEGER"], ["b", "a"], ["B", "BOOLEAN"]>>, "e")
add_query("INTEGER", "d", <<["c", "INTEGER"], ["B", "BOOLEAN"], ["BOOLEAN", "A"], ["e", "INTEGER"], ["D", "INTEGER"], ["B", "d"], ["e", "BOOLEAN"], ["A", "a"], ["b", "BOOLEAN"]>>, "B")
generate_java_code
logical_negation
bool_value (true)
int_value (11)
add_class(C)
add_call_chain(<<e,D,D,a>>)
numerical_negation
numerical_negation
add_call_chain(<<D,c,A,e,D>>)
generate_java_code
add_command("INTEGER", "D", <<["D", "BOOLEAN"], ["A", "C"], ["B", "D"], ["d", "INTEGER"], ["b", "BOOLEAN"], ["A", "c"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "BOOLEAN"]>>)
logical_negation
generate_java_code
add_query("INTEGER", "c", <<["d", "C"], ["d", "INTEGER"], ["D", "BOOLEAN"], ["BOOLEAN", "A"], ["INTEGER", "INTEGER"], ["C", "BOOLEAN"], ["B", "b"], ["A", "BOOLEAN"]>>, "c")
add_attribute("e", "c", "INTEGER")
add_call_chain(<<BOOLEAN>>)
addition
add_query("C", "d", <<["e", "a"], ["d", "BOOLEAN"]>>, "A")
int_value (17)
quotient
add_class(e)
add_query("d", "D", <<["c", "C"], ["INTEGER", "BOOLEAN"]>>, "C")
bool_value (true)
quotient
int_value (25)
type_check
add_query("e", "C", <<["BOOLEAN", "b"], ["B", "INTEGER"]>>, "e")
add_command("B", "a", <<["b", "A"]>>)
add_command("b", "BOOLEAN", <<["d", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "BOOLEAN"], ["INTEGER", "INTEGER"], ["c", "INTEGER"]>>)
add_command("a", "d", <<["b", "BOOLEAN"], ["C", "e"], ["b", "d"], ["a", "INTEGER"], ["C", "BOOLEAN"], ["b", "a"], ["A", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
add_query("A", "e", <<["e", "INTEGER"], ["a", "BOOLEAN"], ["INTEGER", "INTEGER"], ["e", "B"], ["a", "D"]>>, "BOOLEAN")
add_call_chain(<<b,C,d,A,C,C,a>>)
numerical_negation
type_check
type_check
add_class(c)
add_query("INTEGER", "b", <<["d", "INTEGER"], ["b", "BOOLEAN"]>>, "b")
generate_java_code
add_attribute("A", "B", "BOOLEAN")
modulo
add_call_chain(<<C,e,INTEGER,b,a,e>>)
add_call_chain(<<d,C,b,c,D>>)
add_command("C", "D", <<["b", "a"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["BOOLEAN", "INTEGER"], ["e", "INTEGER"], ["A", "C"], ["A", "D"], ["c", "C"]>>)
bool_value (true)
add_call_chain(<<b,B,a,c,D,D,INTEGER,C,D>>)
add_class(B)
add_command("B", "D", <<["A", "INTEGER"], ["e", "BOOLEAN"], ["d", "BOOLEAN"]>>)
less_than
add_query("C", "A", <<["c", "INTEGER"], ["D", "A"], ["A", "A"], ["B", "d"]>>, "d")
numerical_negation
add_command("c", "e", <<["c", "BOOLEAN"]>>)
numerical_negation
add_query("BOOLEAN", "C", <<["e", "D"]>>, "c")
logical_negation
add_call_chain(<<A,a,INTEGER,BOOLEAN,INTEGER,C>>)
add_command("A", "a", <<["A", "INTEGER"], ["b", "BOOLEAN"], ["A", "INTEGER"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["b", "INTEGER"], ["e", "D"], ["e", "BOOLEAN"]>>)
int_value (49)
logical_negation
add_attribute("INTEGER", "e", "INTEGER")
add_attribute("INTEGER", "C", "BOOLEAN")
add_call_chain(<<INTEGER,e,b>>)
int_value (25)
add_command("INTEGER", "A", <<["D", "INTEGER"], ["C", "c"], ["C", "d"], ["b", "B"], ["A", "d"]>>)
add_call_chain(<<C,BOOLEAN,d>>)
add_call_chain(<<b>>)
generate_java_code
type_check
add_call_chain(<<d,D>>)
add_query("A", "D", <<["C", "INTEGER"], ["BOOLEAN", "INTEGER"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["a", "B"], ["d", "b"], ["B", "INTEGER"], ["d", "INTEGER"]>>, "B")
add_call_chain(<<B,B,D,C,e>>)
bool_value (true)
addition
generate_java_code
add_command("INTEGER", "BOOLEAN", <<["D", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "INTEGER"], ["A", "BOOLEAN"], ["D", "BOOLEAN"]>>)
add_attribute("INTEGER", "e", "A")
subtraction
logical_negation
bool_value (false)
add_command("B", "A", <<["INTEGER", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["c", "INTEGER"], ["b", "BOOLEAN"], ["b", "c"], ["e", "INTEGER"], ["e", "INTEGER"], ["C", "BOOLEAN"]>>)
add_attribute("b", "BOOLEAN", "d")
add_query("INTEGER", "A", <<["INTEGER", "INTEGER"], ["e", "d"], ["b", "INTEGER"]>>, "B")
add_class(D)
add_class(e)
int_value (11)
logical_negation
type_check
add_query("B", "c", <<["a", "INTEGER"], ["b", "b"], ["c", "INTEGER"], ["BOOLEAN", "INTEGER"], ["B", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "D"], ["b", "INTEGER"]>>, "a")
subtraction
add_attribute("C", "b", "BOOLEAN")
disjunction
equals
bool_value (true)
int_value (28)
add_call_chain(<<a,C,B,INTEGER,c,b,BOOLEAN,D,A>>)
add_query("e", "A", <<["d", "INTEGER"], ["B", "a"], ["C", "BOOLEAN"]>>, "b")
generate_java_code
add_command("c", "a", <<["D", "INTEGER"], ["b", "BOOLEAN"], ["e", "C"], ["d", "BOOLEAN"], ["e", "BOOLEAN"], ["c", "a"], ["C", "INTEGER"]>>)
logical_negation
add_query("A", "b", <<["A", "B"], ["INTEGER", "INTEGER"], ["e", "a"], ["D", "a"], ["A", "INTEGER"], ["A", "INTEGER"]>>, "c")
add_class(a)
less_than
numerical_negation
numerical_negation
add_call_chain(<<D,d,INTEGER,e,B,c,b,D>>)
add_call_chain(<<C,c,b,D,INTEGER>>)
add_command("INTEGER", "INTEGER", <<["A", "INTEGER"], ["c", "INTEGER"], ["INTEGER", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "INTEGER"]>>)
add_query("B", "d", <<["c", "BOOLEAN"], ["e", "BOOLEAN"]>>, "d")
add_class(e)
add_attribute("A", "B", "c")
type_check
bool_value (false)
add_attribute("D", "a", "INTEGER")
type_check
add_command("e", "B", <<["A", "BOOLEAN"], ["c", "d"], ["C", "b"], ["D", "BOOLEAN"], ["INTEGER", "INTEGER"], ["B", "INTEGER"], ["C", "BOOLEAN"], ["a", "D"]>>)
add_command("A", "C", <<["C", "BOOLEAN"], ["a", "INTEGER"], ["a", "INTEGER"]>>)
add_attribute("c", "BOOLEAN", "BOOLEAN")
add_call_chain(<<C>>)
add_attribute("BOOLEAN", "d", "INTEGER")
add_command("b", "A", <<["a", "a"], ["a", "c"], ["d", "BOOLEAN"]>>)
numerical_negation
add_query("a", "c", <<["C", "INTEGER"], ["b", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "A"], ["C", "BOOLEAN"], ["c", "BOOLEAN"]>>, "A")
logical_negation
add_query("B", "D", <<["a", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["e", "d"]>>, "C")
add_command("b", "C", <<["INTEGER", "INTEGER"], ["INTEGER", "A"], ["d", "d"], ["e", "INTEGER"]>>)
generate_java_code
add_call_chain(<<A,B,B>>)
add_command("INTEGER", "BOOLEAN", <<["a", "BOOLEAN"], ["c", "e"]>>)
int_value (18)
logical_negation
add_call_chain(<<B,d,C,d,d,d>>)
bool_value (false)
add_command("a", "c", <<["B", "INTEGER"], ["a", "INTEGER"], ["D", "INTEGER"], ["INTEGER", "INTEGER"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["B", "C"], ["a", "BOOLEAN"]>>)
equals
disjunction
add_query("c", "A", <<["a", "INTEGER"]>>, "C")
bool_value (false)
add_command("C", "D", <<["B", "C"], ["C", "b"], ["a", "A"], ["d", "c"], ["c", "B"], ["D", "BOOLEAN"]>>)
add_call_chain(<<A>>)
add_attribute("A", "BOOLEAN", "INTEGER")
type_check
add_class(c)
add_call_chain(<<A,D,A,a,D,A,a,D>>)
add_query("B", "a", <<["c", "INTEGER"], ["c", "BOOLEAN"], ["c", "INTEGER"], ["B", "INTEGER"], ["c", "a"], ["A", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "INTEGER"]>>, "b")
logical_negation
add_query("d", "d", <<["B", "INTEGER"], ["B", "BOOLEAN"], ["e", "INTEGER"], ["b", "A"], ["INTEGER", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["b", "BOOLEAN"], ["c", "b"]>>, "B")
add_call_chain(<<d,BOOLEAN,b,D,e>>)
modulo
int_value (33)
numerical_negation
numerical_negation
add_attribute("b", "D", "BOOLEAN")
add_attribute("B", "b", "BOOLEAN")
int_value (12)
bool_value (false)
add_call_chain(<<c,INTEGER,B,C,b>>)
