add_query("D", "A", <<["A", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "c"], ["C", "INTEGER"], ["D", "INTEGER"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["A", "INTEGER"]>>, "c")
generate_java_code
numerical_negation
quotient
add_class(a)
subtraction
logical_negation
bool_value (true)
add_attribute("A", "d", "BOOLEAN")
bool_value (true)
add_attribute("a", "D", "INTEGER")
add_call_chain(<<C,B,c,a,a,B,A,B,B>>)
add_attribute("d", "A", "INTEGER")
add_command("D", "BOOLEAN", <<["c", "INTEGER"], ["b", "D"]>>)
bool_value (true)
int_value (35)
add_call_chain(<<c,C,A,e,d,C,BOOLEAN,C,INTEGER>>)
int_value (35)
bool_value (true)
numerical_negation
add_query("d", "INTEGER", <<["d", "INTEGER"]>>, "c")
add_class(C)
int_value (34)
int_value (22)
add_command("B", "e", <<["BOOLEAN", "BOOLEAN"], ["b", "a"], ["c", "B"]>>)
int_value (26)
bool_value (false)
disjunction
add_call_chain(<<c,A,d,A,d,b>>)
add_call_chain(<<C>>)
type_check
numerical_negation
generate_java_code
add_attribute("A", "a", "C")
generate_java_code
addition
generate_java_code
add_attribute("C", "A", "INTEGER")
add_query("b", "b", <<["e", "d"], ["INTEGER", "BOOLEAN"], ["A", "INTEGER"], ["A", "b"], ["c", "d"], ["B", "BOOLEAN"], ["A", "BOOLEAN"]>>, "c")
add_command("C", "D", <<["c", "INTEGER"], ["e", "BOOLEAN"], ["e", "INTEGER"], ["B", "BOOLEAN"]>>)
logical_negation
logical_negation
bool_value (false)
generate_java_code
add_command("D", "BOOLEAN", <<["d", "INTEGER"], ["D", "e"], ["a", "INTEGER"], ["e", "b"], ["INTEGER", "BOOLEAN"], ["C", "b"]>>)
add_call_chain(<<c,A,a,C,b,a>>)
add_call_chain(<<c>>)
less_than
quotient
add_command("c", "BOOLEAN", <<["d", "INTEGER"], ["A", "INTEGER"], ["a", "d"], ["d", "INTEGER"], ["INTEGER", "BOOLEAN"], ["C", "BOOLEAN"]>>)
numerical_negation
add_query("b", "B", <<["c", "c"], ["C", "INTEGER"]>>, "b")
add_call_chain(<<a,A,a,D>>)
generate_java_code
add_call_chain(<<C,c,c,e>>)
int_value (15)
add_call_chain(<<D,c,e,B,b,e>>)
add_call_chain(<<e,A,A,a,BOOLEAN>>)
add_call_chain(<<d,B>>)
bool_value (false)
int_value (10)
quotient
add_query("A", "D", <<["C", "a"], ["c", "INTEGER"], ["B", "INTEGER"], ["A", "INTEGER"]>>, "b")
generate_java_code
bool_value (false)
numerical_negation
add_command("a", "C", <<["C", "B"], ["e", "INTEGER"], ["b", "BOOLEAN"]>>)
add_attribute("B", "A", "c")
add_command("B", "C", <<["C", "BOOLEAN"], ["INTEGER", "b"]>>)
add_call_chain(<<A,a,B,D>>)
disjunction
numerical_negation
bool_value (false)
bool_value (true)
type_check
type_check
logical_negation
int_value (1)
add_command("B", "B", <<["B", "INTEGER"], ["D", "INTEGER"], ["A", "INTEGER"], ["D", "INTEGER"], ["D", "a"], ["c", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "BOOLEAN"]>>)
add_class(c)
add_call_chain(<<A,c,b,A>>)
type_check
type_check
type_check
add_command("a", "a", <<["D", "d"], ["b", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "e"], ["C", "BOOLEAN"]>>)
disjunction
less_than
add_command("C", "INTEGER", <<["A", "c"], ["d", "INTEGER"], ["d", "BOOLEAN"], ["d", "BOOLEAN"], ["c", "B"], ["a", "INTEGER"], ["INTEGER", "INTEGER"], ["b", "e"]>>)
generate_java_code
add_command("INTEGER", "D", <<["a", "INTEGER"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["a", "d"], ["d", "B"], ["D", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["A", "INTEGER"], ["A", "C"]>>)
add_command("A", "D", <<["c", "INTEGER"], ["c", "e"], ["A", "A"]>>)
generate_java_code
add_query("C", "A", <<["A", "c"], ["a", "BOOLEAN"], ["e", "BOOLEAN"], ["d", "INTEGER"]>>, "c")
add_call_chain(<<C,C,C,D>>)
add_attribute("BOOLEAN", "C", "D")
add_call_chain(<<d,C>>)
logical_negation
logical_negation
add_call_chain(<<B,A,c,d,a,b>>)
disjunction
add_command("D", "C", <<["C", "BOOLEAN"], ["C", "INTEGER"], ["d", "INTEGER"], ["A", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "INTEGER"]>>)
int_value (22)
logical_negation
add_call_chain(<<C,C,B,a,c,C,a,BOOLEAN>>)
type_check
type_check
add_class(C)
add_attribute("c", "a", "A")
add_command("e", "a", <<["a", "INTEGER"]>>)
type_check
add_attribute("BOOLEAN", "C", "b")
int_value (9)
logical_negation
int_value (3)
add_call_chain(<<b,d,INTEGER>>)
greater_than
add_command("c", "A", <<["B", "INTEGER"], ["C", "BOOLEAN"], ["d", "B"]>>)
add_attribute("B", "a", "e")
add_call_chain(<<e,B,D,a,a,B,D,C,e>>)
numerical_negation
type_check
greater_than
generate_java_code
add_call_chain(<<b,D,c,C,BOOLEAN>>)
int_value (45)
bool_value (true)
add_query("c", "A", <<["A", "INTEGER"], ["c", "INTEGER"], ["A", "INTEGER"], ["C", "C"]>>, "d")
disjunction
add_command("INTEGER", "e", <<["a", "BOOLEAN"], ["D", "C"]>>)
addition
type_check
add_command("A", "A", <<["C", "A"], ["c", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>)
type_check
add_call_chain(<<D,INTEGER,b,B,c>>)
add_call_chain(<<b,d,c>>)
logical_negation
bool_value (true)
numerical_negation
conjunction
bool_value (false)
add_call_chain(<<e,d,a>>)
bool_value (false)
int_value (33)
int_value (18)
bool_value (false)
add_command("B", "c", <<["C", "BOOLEAN"]>>)
generate_java_code
add_call_chain(<<C,b,BOOLEAN>>)
addition
less_than
disjunction
greater_than
add_call_chain(<<B,c,A,C,A,BOOLEAN,D,c,A>>)
add_attribute("b", "B", "BOOLEAN")
conjunction
type_check
add_call_chain(<<e,b,BOOLEAN,D>>)
add_query("A", "A", <<["c", "BOOLEAN"], ["BOOLEAN", "B"], ["a", "b"], ["c", "INTEGER"], ["D", "INTEGER"], ["A", "a"], ["INTEGER", "INTEGER"]>>, "A")
generate_java_code
bool_value (false)
logical_negation
disjunction
bool_value (false)
add_command("INTEGER", "b", <<["BOOLEAN", "B"]>>)
logical_negation
logical_negation
add_call_chain(<<c,D,b,C,D,BOOLEAN,a>>)
add_class(B)
bool_value (true)
add_command("B", "a", <<["A", "INTEGER"], ["e", "d"], ["e", "c"], ["e", "BOOLEAN"], ["d", "BOOLEAN"], ["b", "A"], ["e", "b"]>>)
add_class(D)
add_attribute("a", "D", "BOOLEAN")
int_value (44)
add_command("A", "C", <<["C", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "INTEGER"], ["C", "INTEGER"], ["B", "INTEGER"]>>)
bool_value (false)
add_command("B", "e", <<["c", "BOOLEAN"], ["D", "INTEGER"], ["a", "c"]>>)
numerical_negation
conjunction
add_command("C", "C", <<["B", "INTEGER"], ["D", "e"], ["e", "INTEGER"], ["d", "INTEGER"]>>)
logical_negation
add_query("D", "a", <<["C", "INTEGER"], ["d", "INTEGER"], ["b", "INTEGER"], ["a", "BOOLEAN"]>>, "e")
add_query("B", "c", <<["b", "BOOLEAN"], ["A", "INTEGER"], ["e", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "BOOLEAN"]>>, "d")
add_attribute("c", "B", "C")
add_call_chain(<<b>>)
logical_negation
equals
numerical_negation
add_call_chain(<<B>>)
add_command("a", "C", <<["A", "INTEGER"], ["a", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["b", "BOOLEAN"], ["c", "e"], ["b", "BOOLEAN"]>>)
add_call_chain(<<B>>)
generate_java_code
disjunction
numerical_negation
bool_value (true)
int_value (8)
add_call_chain(<<c,BOOLEAN,BOOLEAN,b,d,INTEGER,d,c,b>>)
add_call_chain(<<D,b>>)
generate_java_code
add_attribute("c", "B", "A")
subtraction
int_value (38)
add_query("B", "d", <<["A", "e"], ["INTEGER", "INTEGER"], ["c", "BOOLEAN"]>>, "c")
conjunction
disjunction
greater_than
bool_value (true)
add_call_chain(<<BOOLEAN,e,B,B,B,c,B,c,C>>)
logical_negation
numerical_negation
type_check
add_attribute("C", "BOOLEAN", "INTEGER")
add_query("e", "A", <<["A", "d"], ["A", "BOOLEAN"], ["D", "INTEGER"]>>, "BOOLEAN")
subtraction
add_call_chain(<<A,INTEGER,A,d,B,B,a>>)
modulo
add_query("a", "d", <<["b", "c"], ["a", "INTEGER"], ["a", "b"], ["INTEGER", "INTEGER"]>>, "A")
add_query("A", "d", <<["INTEGER", "INTEGER"], ["d", "BOOLEAN"]>>, "b")
add_attribute("e", "C", "B")
type_check
type_check
add_call_chain(<<B,b,e,B,B,A,C>>)
int_value (10)
