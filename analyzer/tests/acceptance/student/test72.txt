bool_value (false)
add_call_chain(<<C,C,e>>)
bool_value (false)
add_attribute("b", "C", "INTEGER")
add_attribute("D", "B", "INTEGER")
add_query("c", "d", <<["C", "BOOLEAN"], ["c", "A"], ["d", "BOOLEAN"], ["B", "A"]>>, "D")
numerical_negation
generate_java_code
add_command("a", "A", <<["C", "B"], ["C", "INTEGER"], ["BOOLEAN", "INTEGER"], ["e", "INTEGER"], ["a", "BOOLEAN"], ["e", "INTEGER"], ["c", "INTEGER"], ["A", "INTEGER"], ["D", "INTEGER"]>>)
quotient
logical_negation
add_command("INTEGER", "b", <<["e", "INTEGER"], ["D", "c"], ["c", "BOOLEAN"], ["C", "D"], ["INTEGER", "INTEGER"]>>)
type_check
add_call_chain(<<A,e,b,a,A>>)
add_call_chain(<<D,B>>)
logical_negation
add_attribute("D", "c", "INTEGER")
disjunction
add_attribute("BOOLEAN", "D", "INTEGER")
add_call_chain(<<C,b,B,D>>)
add_query("C", "a", <<["INTEGER", "BOOLEAN"], ["d", "b"], ["e", "a"], ["c", "BOOLEAN"], ["A", "e"], ["D", "INTEGER"], ["a", "D"]>>, "e")
add_query("c", "B", <<["e", "INTEGER"], ["a", "INTEGER"], ["D", "INTEGER"]>>, "D")
numerical_negation
add_command("BOOLEAN", "c", <<["d", "a"], ["c", "b"]>>)
bool_value (false)
generate_java_code
numerical_negation
add_class(A)
greater_than
type_check
bool_value (false)
greater_than
logical_negation
bool_value (false)
add_call_chain(<<c,d,d,c,d,C,B>>)
int_value (44)
conjunction
int_value (5)
conjunction
add_call_chain(<<D>>)
add_command("D", "C", <<["b", "BOOLEAN"]>>)
add_attribute("A", "C", "INTEGER")
add_class(b)
add_call_chain(<<D,a>>)
type_check
type_check
add_attribute("d", "a", "INTEGER")
add_call_chain(<<BOOLEAN,D,D,A,e>>)
generate_java_code
int_value (46)
add_query("BOOLEAN", "A", <<["D", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "b"], ["d", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "C"], ["a", "BOOLEAN"], ["C", "BOOLEAN"]>>, "a")
add_call_chain(<<A,b,D,c,BOOLEAN,A,e>>)
add_command("c", "b", <<["a", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["d", "BOOLEAN"], ["b", "C"], ["C", "C"], ["d", "INTEGER"]>>)
logical_negation
disjunction
numerical_negation
add_class(D)
greater_than
conjunction
add_call_chain(<<D,c,d,INTEGER>>)
add_class(B)
bool_value (false)
add_command("a", "d", <<["A", "B"]>>)
add_call_chain(<<b,B,b,B,INTEGER,d,e,a>>)
bool_value (false)
add_attribute("D", "c", "BOOLEAN")
int_value (8)
type_check
add_command("B", "a", <<["e", "INTEGER"], ["D", "INTEGER"], ["c", "BOOLEAN"], ["D", "b"], ["c", "BOOLEAN"], ["C", "d"], ["A", "INTEGER"]>>)
int_value (48)
add_command("BOOLEAN", "BOOLEAN", <<["B", "BOOLEAN"], ["e", "c"], ["c", "BOOLEAN"]>>)
logical_negation
add_call_chain(<<A,INTEGER>>)
add_attribute("D", "C", "INTEGER")
greater_than
logical_negation
int_value (23)
add_class(D)
add_call_chain(<<a>>)
numerical_negation
subtraction
add_call_chain(<<A,a>>)
generate_java_code
int_value (2)
quotient
generate_java_code
int_value (18)
add_class(C)
generate_java_code
logical_negation
multiplication
type_check
bool_value (true)
conjunction
add_attribute("a", "BOOLEAN", "BOOLEAN")
add_call_chain(<<c,D,D,b,BOOLEAN,d,c,INTEGER,c>>)
add_call_chain(<<INTEGER,C,d,e,C,D,c,c>>)
conjunction
generate_java_code
add_query("b", "B", <<["A", "INTEGER"], ["b", "BOOLEAN"], ["C", "A"]>>, "C")
add_query("B", "B", <<["BOOLEAN", "BOOLEAN"]>>, "A")
bool_value (false)
conjunction
add_class(D)
add_class(a)
add_class(c)
type_check
generate_java_code
add_command("D", "B", <<["D", "INTEGER"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["A", "INTEGER"], ["B", "INTEGER"], ["C", "b"], ["b", "BOOLEAN"], ["A", "INTEGER"], ["D", "BOOLEAN"]>>)
quotient
add_class(A)
logical_negation
add_call_chain(<<B,B,INTEGER,a,INTEGER,B,D>>)
type_check
int_value (13)
add_attribute("e", "A", "d")
add_query("BOOLEAN", "A", <<["e", "BOOLEAN"], ["d", "B"], ["B", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["e", "D"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["d", "BOOLEAN"]>>, "BOOLEAN")
less_than
add_query("BOOLEAN", "a", <<["C", "INTEGER"], ["B", "INTEGER"], ["d", "INTEGER"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["a", "BOOLEAN"]>>, "d")
add_attribute("d", "D", "c")
int_value (31)
greater_than
add_command("INTEGER", "B", <<["d", "A"], ["C", "BOOLEAN"], ["d", "INTEGER"]>>)
add_command("b", "a", <<["e", "d"]>>)
add_class(B)
multiplication
greater_than
add_query("D", "A", <<["D", "BOOLEAN"], ["C", "D"], ["d", "INTEGER"], ["C", "c"], ["c", "INTEGER"], ["D", "BOOLEAN"], ["b", "C"], ["BOOLEAN", "d"], ["C", "BOOLEAN"]>>, "A")
add_call_chain(<<e,A,d,D,a,e,a,BOOLEAN,BOOLEAN>>)
type_check
add_call_chain(<<INTEGER,D,c,d>>)
bool_value (true)
add_query("a", "INTEGER", <<["e", "C"], ["D", "INTEGER"], ["a", "D"], ["b", "INTEGER"], ["INTEGER", "BOOLEAN"]>>, "C")
logical_negation
numerical_negation
add_call_chain(<<INTEGER,D,b>>)
greater_than
int_value (38)
greater_than
int_value (42)
add_command("C", "e", <<["D", "BOOLEAN"], ["D", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["INTEGER", "B"], ["A", "INTEGER"]>>)
type_check
add_query("e", "INTEGER", <<["b", "BOOLEAN"], ["A", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>, "a")
less_than
disjunction
add_command("a", "BOOLEAN", <<["c", "BOOLEAN"], ["C", "B"], ["C", "A"], ["d", "B"], ["BOOLEAN", "INTEGER"]>>)
add_call_chain(<<e,A>>)
add_class(INTEGER)
logical_negation
add_query("A", "C", <<["a", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "a"], ["D", "C"]>>, "A")
int_value (4)
bool_value (false)
add_attribute("B", "e", "BOOLEAN")
quotient
numerical_negation
add_call_chain(<<a>>)
add_call_chain(<<D,B,c,D,INTEGER,D,A,D,a>>)
equals
add_call_chain(<<B>>)
numerical_negation
add_command("B", "A", <<["e", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "D"], ["B", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "INTEGER"]>>)
logical_negation
type_check
bool_value (true)
generate_java_code
numerical_negation
add_call_chain(<<B,c,b,c,e>>)
type_check
add_attribute("B", "C", "BOOLEAN")
add_attribute("B", "C", "b")
add_query("A", "A", <<["BOOLEAN", "INTEGER"], ["d", "INTEGER"], ["e", "INTEGER"], ["e", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "B"], ["e", "INTEGER"]>>, "B")
add_call_chain(<<B,a,D>>)
add_attribute("D", "B", "INTEGER")
add_command("INTEGER", "e", <<["B", "BOOLEAN"], ["D", "INTEGER"], ["D", "A"], ["INTEGER", "a"], ["B", "b"], ["A", "d"], ["D", "A"]>>)
generate_java_code
int_value (3)
add_query("A", "INTEGER", <<["D", "B"], ["c", "INTEGER"], ["B", "INTEGER"]>>, "C")
numerical_negation
generate_java_code
disjunction
add_query("a", "b", <<["D", "INTEGER"], ["A", "e"], ["B", "INTEGER"], ["c", "BOOLEAN"]>>, "C")
type_check
disjunction
add_command("A", "C", <<["BOOLEAN", "INTEGER"], ["A", "BOOLEAN"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["a", "b"]>>)
add_attribute("d", "b", "BOOLEAN")
type_check
add_attribute("a", "C", "INTEGER")
greater_than
add_call_chain(<<A,a,D>>)
disjunction
add_call_chain(<<d,d,D>>)
add_call_chain(<<C,C,B,e,C,e,d,e>>)
int_value (4)
add_call_chain(<<d,INTEGER,d,A,C,D>>)
add_query("d", "e", <<["b", "B"], ["c", "INTEGER"], ["D", "B"], ["INTEGER", "INTEGER"], ["B", "b"]>>, "B")
generate_java_code
add_class(b)
add_call_chain(<<a>>)
add_query("INTEGER", "C", <<["C", "INTEGER"], ["INTEGER", "BOOLEAN"], ["INTEGER", "INTEGER"], ["INTEGER", "INTEGER"], ["c", "INTEGER"], ["C", "c"]>>, "A")
int_value (21)
add_query("INTEGER", "BOOLEAN", <<["A", "BOOLEAN"], ["B", "INTEGER"], ["B", "B"], ["d", "INTEGER"], ["BOOLEAN", "INTEGER"], ["e", "c"], ["c", "BOOLEAN"], ["INTEGER", "d"], ["A", "BOOLEAN"]>>, "D")
add_command("b", "D", <<["BOOLEAN", "INTEGER"], ["a", "BOOLEAN"], ["e", "INTEGER"], ["C", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "INTEGER"], ["a", "BOOLEAN"], ["A", "INTEGER"]>>)
logical_negation
