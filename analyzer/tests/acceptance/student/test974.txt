add_query("C", "a", <<["b", "A"], ["D", "INTEGER"], ["b", "INTEGER"]>>, "c")
greater_than
add_call_chain(<<b,B,a,e,BOOLEAN,a,C>>)
add_query("A", "b", <<["C", "a"], ["a", "INTEGER"], ["B", "INTEGER"], ["C", "INTEGER"], ["B", "INTEGER"], ["b", "C"], ["d", "BOOLEAN"]>>, "d")
modulo
conjunction
equals
add_query("B", "a", <<["BOOLEAN", "INTEGER"], ["A", "INTEGER"], ["a", "INTEGER"], ["e", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "BOOLEAN"]>>, "c")
add_command("D", "A", <<["c", "D"], ["D", "INTEGER"], ["B", "INTEGER"]>>)
int_value (21)
type_check
add_attribute("A", "D", "BOOLEAN")
bool_value (false)
add_command("a", "B", <<["B", "d"], ["A", "INTEGER"], ["c", "INTEGER"], ["a", "INTEGER"], ["e", "BOOLEAN"], ["a", "D"], ["d", "BOOLEAN"], ["c", "BOOLEAN"]>>)
numerical_negation
add_query("INTEGER", "C", <<["C", "INTEGER"]>>, "b")
numerical_negation
less_than
add_class(A)
less_than
add_call_chain(<<A,c,a,b,d,INTEGER,A,c,A>>)
add_attribute("a", "a", "c")
greater_than
add_call_chain(<<D,A>>)
int_value (36)
generate_java_code
add_call_chain(<<d,D,INTEGER,A>>)
add_call_chain(<<C,C,c,C,INTEGER,B>>)
add_call_chain(<<A,C,B,D,D,D,a>>)
add_class(e)
bool_value (false)
add_query("B", "A", <<["a", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "C"], ["e", "a"]>>, "A")
add_attribute("A", "D", "BOOLEAN")
conjunction
numerical_negation
add_call_chain(<<e,INTEGER,B,d,e,a>>)
numerical_negation
subtraction
add_query("e", "C", <<["D", "INTEGER"], ["A", "BOOLEAN"], ["D", "B"], ["B", "INTEGER"], ["C", "B"], ["a", "a"]>>, "C")
generate_java_code
add_call_chain(<<a>>)
multiplication
logical_negation
less_than
generate_java_code
int_value (49)
numerical_negation
type_check
quotient
int_value (37)
generate_java_code
multiplication
subtraction
add_call_chain(<<B,e,B,B,D,D,c,A>>)
add_query("D", "B", <<["B", "INTEGER"], ["d", "INTEGER"]>>, "C")
add_attribute("c", "BOOLEAN", "BOOLEAN")
add_query("A", "C", <<["C", "a"], ["C", "BOOLEAN"]>>, "A")
add_call_chain(<<D,D,C,C>>)
add_call_chain(<<e,e,d,b,B,A>>)
add_class(e)
logical_negation
add_call_chain(<<D,BOOLEAN,C,e>>)
numerical_negation
add_call_chain(<<a,a,D>>)
add_call_chain(<<INTEGER,A,INTEGER,e,BOOLEAN,a,b,d,B>>)
bool_value (false)
add_attribute("D", "B", "A")
add_command("b", "c", <<["a", "BOOLEAN"]>>)
add_query("INTEGER", "d", <<["d", "BOOLEAN"], ["B", "INTEGER"], ["b", "b"], ["b", "B"], ["A", "INTEGER"], ["b", "c"], ["BOOLEAN", "INTEGER"]>>, "a")
numerical_negation
generate_java_code
add_call_chain(<<C,BOOLEAN,b,C,c>>)
logical_negation
disjunction
add_class(A)
type_check
modulo
conjunction
add_call_chain(<<D,b,D,C,a,A,a,e>>)
add_call_chain(<<e,BOOLEAN,A,A,e,C>>)
add_class(e)
bool_value (true)
add_query("d", "BOOLEAN", <<["e", "BOOLEAN"], ["A", "INTEGER"]>>, "a")
numerical_negation
add_call_chain(<<b,D,A,c,e,B,A,D,B>>)
disjunction
bool_value (true)
quotient
add_attribute("a", "B", "BOOLEAN")
add_query("c", "c", <<["B", "BOOLEAN"], ["C", "B"], ["a", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>, "B")
multiplication
numerical_negation
add_attribute("e", "b", "d")
logical_negation
add_attribute("D", "B", "a")
add_attribute("B", "D", "INTEGER")
generate_java_code
bool_value (false)
bool_value (false)
quotient
bool_value (true)
add_call_chain(<<C,A,C,INTEGER>>)
add_call_chain(<<e,c,D,c,BOOLEAN,a,C>>)
add_call_chain(<<d,C,b>>)
greater_than
subtraction
add_command("D", "D", <<["INTEGER", "INTEGER"], ["a", "D"], ["c", "INTEGER"], ["BOOLEAN", "b"]>>)
type_check
add_command("B", "C", <<["e", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "BOOLEAN"], ["d", "c"]>>)
int_value (37)
bool_value (true)
add_class(A)
add_command("a", "e", <<["C", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "INTEGER"]>>)
add_call_chain(<<d,B,B,a,d,b,b,e,c>>)
logical_negation
add_command("A", "d", <<["b", "BOOLEAN"], ["d", "INTEGER"]>>)
greater_than
add_attribute("c", "BOOLEAN", "b")
numerical_negation
int_value (25)
less_than
add_call_chain(<<B,C,INTEGER,b,d,a,A>>)
add_call_chain(<<D,B,C,b,C,c,a,a,a>>)
add_query("c", "d", <<["a", "BOOLEAN"], ["D", "B"], ["c", "BOOLEAN"], ["c", "d"]>>, "e")
add_attribute("D", "b", "A")
add_command("A", "D", <<["A", "BOOLEAN"], ["e", "B"], ["B", "BOOLEAN"], ["c", "INTEGER"], ["C", "BOOLEAN"]>>)
add_query("d", "B", <<["A", "b"], ["C", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["b", "INTEGER"], ["D", "e"], ["a", "B"], ["a", "d"], ["e", "a"], ["C", "A"]>>, "B")
add_command("d", "c", <<["e", "BOOLEAN"], ["B", "a"], ["a", "INTEGER"], ["c", "BOOLEAN"]>>)
add_call_chain(<<BOOLEAN,D,b,INTEGER,e,a,D,BOOLEAN>>)
numerical_negation
add_query("C", "b", <<["B", "BOOLEAN"], ["B", "INTEGER"], ["A", "e"], ["C", "D"]>>, "A")
add_command("a", "INTEGER", <<["B", "INTEGER"], ["d", "BOOLEAN"], ["B", "a"]>>)
add_attribute("e", "e", "BOOLEAN")
generate_java_code
int_value (6)
add_call_chain(<<c,C>>)
equals
bool_value (true)
add_call_chain(<<A,C,A,e,B,a,D,d,C>>)
less_than
add_attribute("c", "D", "A")
generate_java_code
logical_negation
add_call_chain(<<c,c,b,e,c,D,B>>)
add_call_chain(<<c,B>>)
add_query("c", "e", <<["B", "BOOLEAN"], ["D", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["a", "BOOLEAN"], ["e", "B"]>>, "e")
greater_than
conjunction
add_call_chain(<<A,D,a>>)
generate_java_code
add_query("c", "INTEGER", <<["B", "INTEGER"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["e", "INTEGER"]>>, "A")
int_value (30)
numerical_negation
int_value (2)
add_command("BOOLEAN", "C", <<["e", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["INTEGER", "e"]>>)
add_command("A", "D", <<["B", "BOOLEAN"], ["b", "INTEGER"], ["b", "B"], ["D", "INTEGER"], ["D", "INTEGER"], ["BOOLEAN", "e"], ["b", "INTEGER"]>>)
add_attribute("b", "c", "BOOLEAN")
type_check
addition
add_call_chain(<<C,BOOLEAN,d,D,d,C,C,D>>)
conjunction
add_call_chain(<<A,INTEGER,e>>)
add_call_chain(<<B,b,e>>)
