add_attribute("D", "b", "BOOLEAN")
less_than
add_call_chain(<<INTEGER,B>>)
add_query("INTEGER", "e", <<["D", "B"], ["d", "INTEGER"], ["D", "e"], ["a", "C"], ["INTEGER", "INTEGER"], ["C", "C"]>>, "BOOLEAN")
bool_value (true)
int_value (26)
add_command("b", "A", <<["b", "a"], ["a", "BOOLEAN"], ["B", "INTEGER"], ["B", "BOOLEAN"]>>)
add_call_chain(<<C,BOOLEAN>>)
add_attribute("a", "b", "INTEGER")
add_attribute("e", "C", "B")
type_check
add_query("D", "d", <<["A", "INTEGER"], ["D", "a"], ["A", "INTEGER"]>>, "A")
addition
add_attribute("INTEGER", "BOOLEAN", "e")
logical_negation
add_attribute("D", "A", "BOOLEAN")
add_command("C", "C", <<["BOOLEAN", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
logical_negation
int_value (21)
bool_value (true)
add_query("e", "b", <<["A", "b"], ["B", "INTEGER"], ["b", "BOOLEAN"], ["a", "BOOLEAN"], ["b", "BOOLEAN"], ["INTEGER", "INTEGER"], ["D", "INTEGER"], ["e", "BOOLEAN"]>>, "C")
logical_negation
add_query("b", "d", <<["c", "b"]>>, "D")
type_check
less_than
add_query("C", "A", <<["A", "BOOLEAN"], ["A", "B"], ["BOOLEAN", "A"], ["A", "c"], ["c", "INTEGER"], ["C", "INTEGER"], ["INTEGER", "BOOLEAN"], ["d", "BOOLEAN"]>>, "C")
disjunction
modulo
add_attribute("d", "a", "d")
add_call_chain(<<B,D,BOOLEAN,B,D,INTEGER,a,BOOLEAN,d>>)
add_call_chain(<<D,d>>)
add_command("b", "A", <<["D", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["INTEGER", "INTEGER"], ["INTEGER", "INTEGER"], ["a", "b"], ["a", "INTEGER"]>>)
add_command("A", "b", <<["c", "BOOLEAN"], ["e", "INTEGER"]>>)
numerical_negation
add_call_chain(<<B,D,c,BOOLEAN,a,d,BOOLEAN,B,D>>)
int_value (38)
int_value (11)
add_command("INTEGER", "c", <<["d", "INTEGER"], ["a", "b"], ["b", "BOOLEAN"], ["e", "BOOLEAN"]>>)
int_value (35)
subtraction
numerical_negation
add_attribute("A", "A", "BOOLEAN")
logical_negation
type_check
less_than
add_call_chain(<<b,a,A>>)
add_query("e", "c", <<["e", "BOOLEAN"], ["d", "C"], ["B", "A"]>>, "B")
numerical_negation
add_call_chain(<<b,INTEGER,D>>)
add_call_chain(<<a,B,b,A,d,e,c,BOOLEAN>>)
greater_than
quotient
add_command("C", "A", <<["b", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["e", "BOOLEAN"]>>)
add_command("D", "D", <<["e", "INTEGER"], ["b", "e"]>>)
int_value (11)
bool_value (false)
add_call_chain(<<d,a>>)
add_attribute("c", "d", "BOOLEAN")
add_query("A", "A", <<["d", "c"], ["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "INTEGER"]>>, "BOOLEAN")
logical_negation
numerical_negation
add_attribute("d", "a", "BOOLEAN")
greater_than
logical_negation
bool_value (false)
bool_value (true)
add_call_chain(<<D,e,D,B,d,c>>)
int_value (41)
add_query("B", "C", <<["A", "BOOLEAN"], ["b", "BOOLEAN"]>>, "b")
type_check
add_command("e", "INTEGER", <<["a", "INTEGER"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "INTEGER"], ["c", "INTEGER"]>>)
add_command("a", "d", <<["a", "D"], ["B", "D"], ["d", "BOOLEAN"], ["d", "C"], ["c", "INTEGER"]>>)
add_call_chain(<<D,b>>)
type_check
add_call_chain(<<INTEGER,c,e>>)
multiplication
quotient
add_command("B", "BOOLEAN", <<["B", "INTEGER"], ["a", "d"], ["D", "C"], ["d", "BOOLEAN"], ["INTEGER", "INTEGER"], ["e", "BOOLEAN"]>>)
add_query("e", "a", <<["C", "INTEGER"], ["INTEGER", "BOOLEAN"], ["c", "BOOLEAN"], ["b", "INTEGER"], ["c", "A"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "INTEGER"], ["A", "INTEGER"]>>, "e")
add_class(a)
add_query("A", "D", <<["INTEGER", "C"]>>, "D")
add_call_chain(<<INTEGER,B>>)
numerical_negation
add_attribute("A", "d", "INTEGER")
add_query("a", "c", <<["a", "BOOLEAN"], ["c", "INTEGER"], ["A", "BOOLEAN"], ["c", "d"], ["B", "BOOLEAN"]>>, "c")
add_call_chain(<<B,D,BOOLEAN,d,D>>)
bool_value (false)
int_value (14)
conjunction
generate_java_code
add_command("a", "BOOLEAN", <<["d", "BOOLEAN"], ["C", "d"], ["A", "INTEGER"], ["b", "e"], ["e", "a"]>>)
bool_value (false)
add_call_chain(<<A,A,c,c,A,D,d>>)
add_attribute("B", "D", "BOOLEAN")
generate_java_code
add_attribute("D", "D", "INTEGER")
add_call_chain(<<INTEGER,a,B,c,A,C>>)
generate_java_code
conjunction
add_command("b", "D", <<["c", "BOOLEAN"], ["a", "INTEGER"], ["B", "a"]>>)
numerical_negation
add_attribute("b", "B", "B")
type_check
add_query("C", "e", <<["B", "BOOLEAN"], ["C", "INTEGER"], ["c", "A"], ["e", "e"], ["A", "BOOLEAN"], ["INTEGER", "B"]>>, "D")
conjunction
add_call_chain(<<BOOLEAN>>)
equals
conjunction
conjunction
generate_java_code
add_command("a", "B", <<["B", "D"], ["d", "c"], ["A", "INTEGER"], ["a", "INTEGER"]>>)
add_attribute("BOOLEAN", "B", "A")
add_call_chain(<<B,A,INTEGER,d,B,INTEGER>>)
add_command("c", "A", <<["INTEGER", "BOOLEAN"]>>)
add_command("C", "B", <<["B", "e"], ["C", "INTEGER"]>>)
add_call_chain(<<B,B,d,C>>)
add_attribute("e", "BOOLEAN", "c")
generate_java_code
bool_value (true)
bool_value (true)
bool_value (false)
add_call_chain(<<D,e,INTEGER>>)
generate_java_code
modulo
int_value (6)
conjunction
generate_java_code
add_attribute("BOOLEAN", "A", "INTEGER")
add_query("d", "d", <<["b", "INTEGER"], ["a", "BOOLEAN"], ["e", "B"], ["d", "BOOLEAN"], ["b", "INTEGER"], ["D", "BOOLEAN"], ["C", "a"]>>, "INTEGER")
add_attribute("B", "b", "e")
less_than
add_query("d", "a", <<["C", "BOOLEAN"], ["a", "BOOLEAN"]>>, "b")
logical_negation
add_class(c)
int_value (3)
add_call_chain(<<BOOLEAN,A,c>>)
add_call_chain(<<D,e>>)
add_attribute("c", "c", "BOOLEAN")
add_call_chain(<<a,D,c,A>>)
type_check
disjunction
add_attribute("a", "c", "BOOLEAN")
generate_java_code
int_value (6)
add_attribute("e", "INTEGER", "a")
add_class(a)
logical_negation
add_query("D", "INTEGER", <<["D", "BOOLEAN"]>>, "B")
add_query("C", "c", <<["B", "a"], ["b", "e"]>>, "a")
type_check
add_attribute("C", "e", "BOOLEAN")
bool_value (false)
equals
generate_java_code
add_call_chain(<<B,c,d>>)
int_value (3)
add_query("a", "INTEGER", <<["d", "INTEGER"], ["d", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "INTEGER"], ["a", "INTEGER"], ["a", "INTEGER"], ["A", "INTEGER"], ["B", "BOOLEAN"]>>, "a")
disjunction
int_value (26)
type_check
type_check
logical_negation
bool_value (true)
add_call_chain(<<INTEGER>>)
disjunction
add_query("D", "INTEGER", <<["D", "c"], ["C", "a"], ["D", "b"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "INTEGER"], ["INTEGER", "INTEGER"], ["a", "INTEGER"]>>, "INTEGER")
int_value (18)
add_call_chain(<<A,D,D,c,BOOLEAN,d,c,C,e>>)
add_query("b", "A", <<["c", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["C", "INTEGER"], ["c", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "C"], ["B", "INTEGER"], ["e", "INTEGER"], ["c", "INTEGER"]>>, "d")
logical_negation
int_value (28)
generate_java_code
generate_java_code
add_class(c)
conjunction
generate_java_code
add_call_chain(<<A,b,c>>)
add_class(c)
add_class(e)
equals
add_attribute("D", "A", "INTEGER")
int_value (28)
int_value (37)
type_check
conjunction
bool_value (false)
int_value (36)
add_command("D", "c", <<["B", "INTEGER"], ["e", "BOOLEAN"]>>)
add_call_chain(<<A,INTEGER,a,BOOLEAN>>)
conjunction
less_than
logical_negation
type_check
bool_value (true)
bool_value (true)
int_value (24)
add_attribute("D", "a", "INTEGER")
numerical_negation
generate_java_code
add_command("b", "a", <<["BOOLEAN", "BOOLEAN"], ["a", "INTEGER"], ["D", "C"], ["d", "D"], ["D", "B"]>>)
logical_negation
add_attribute("b", "d", "INTEGER")
add_attribute("D", "B", "a")
int_value (1)
logical_negation
add_query("c", "D", <<["INTEGER", "BOOLEAN"]>>, "INTEGER")
add_call_chain(<<A,e,C>>)
bool_value (false)
