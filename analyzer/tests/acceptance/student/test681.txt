conjunction
add_attribute("b", "e", "e")
int_value (6)
add_attribute("c", "b", "BOOLEAN")
add_call_chain(<<a,C,B,c,D,d>>)
add_call_chain(<<b,B,A,d,d,c,B,C>>)
numerical_negation
logical_negation
add_command("INTEGER", "a", <<["c", "BOOLEAN"], ["e", "INTEGER"], ["a", "INTEGER"]>>)
type_check
add_query("C", "a", <<["B", "INTEGER"], ["C", "INTEGER"], ["e", "b"]>>, "a")
equals
add_query("D", "A", <<["C", "INTEGER"], ["b", "BOOLEAN"], ["B", "d"], ["A", "INTEGER"], ["D", "B"], ["b", "INTEGER"]>>, "A")
numerical_negation
numerical_negation
disjunction
generate_java_code
bool_value (true)
bool_value (true)
int_value (22)
add_call_chain(<<C,c,b>>)
add_query("A", "INTEGER", <<["INTEGER", "D"], ["a", "BOOLEAN"], ["B", "D"], ["d", "INTEGER"], ["c", "INTEGER"], ["b", "INTEGER"]>>, "C")
int_value (35)
add_command("b", "C", <<["C", "INTEGER"], ["B", "INTEGER"], ["d", "BOOLEAN"]>>)
generate_java_code
add_call_chain(<<d>>)
add_command("A", "c", <<["B", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "INTEGER"], ["e", "A"]>>)
bool_value (false)
add_call_chain(<<B,a,b,C,D,BOOLEAN>>)
add_command("B", "b", <<["C", "INTEGER"], ["D", "D"], ["A", "B"]>>)
add_attribute("c", "e", "INTEGER")
subtraction
add_attribute("e", "C", "D")
generate_java_code
add_call_chain(<<d,b,d,b,A,A>>)
add_call_chain(<<C,A,C,C,B,A,D,INTEGER>>)
less_than
quotient
conjunction
conjunction
add_call_chain(<<B,D>>)
add_query("b", "c", <<["b", "INTEGER"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "BOOLEAN"], ["a", "INTEGER"]>>, "C")
int_value (19)
int_value (4)
add_class(A)
add_class(A)
add_call_chain(<<a,INTEGER,A>>)
add_call_chain(<<D,BOOLEAN,a,d,BOOLEAN,D,b>>)
int_value (19)
add_query("D", "b", <<["B", "C"], ["a", "INTEGER"]>>, "a")
logical_negation
add_call_chain(<<BOOLEAN,b,A,C>>)
logical_negation
add_attribute("D", "D", "INTEGER")
addition
bool_value (true)
bool_value (true)
add_class(INTEGER)
add_query("C", "e", <<["A", "INTEGER"], ["b", "INTEGER"], ["b", "BOOLEAN"], ["A", "A"], ["a", "INTEGER"], ["e", "BOOLEAN"]>>, "c")
add_call_chain(<<C,C,D,D>>)
add_call_chain(<<C,A,D,A,D,a>>)
add_call_chain(<<A,a,D,INTEGER,b,B,e,B,D>>)
type_check
numerical_negation
add_class(D)
logical_negation
generate_java_code
add_call_chain(<<A,b,INTEGER,B,a>>)
add_query("b", "D", <<["A", "BOOLEAN"], ["c", "INTEGER"], ["B", "INTEGER"], ["b", "d"], ["a", "INTEGER"], ["D", "D"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["e", "BOOLEAN"]>>, "a")
type_check
int_value (41)
add_class(b)
add_attribute("C", "A", "BOOLEAN")
add_query("a", "a", <<["D", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["a", "a"], ["a", "INTEGER"], ["A", "d"], ["b", "INTEGER"], ["c", "INTEGER"], ["D", "BOOLEAN"]>>, "A")
add_call_chain(<<INTEGER,D,b,e,d,A,b,a,C>>)
type_check
modulo
addition
int_value (24)
bool_value (false)
multiplication
int_value (2)
generate_java_code
generate_java_code
add_call_chain(<<d,D,a,A>>)
add_query("b", "A", <<["D", "INTEGER"], ["D", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "D"], ["d", "INTEGER"], ["D", "INTEGER"]>>, "d")
less_than
add_query("D", "d", <<["D", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "B"], ["C", "BOOLEAN"]>>, "A")
add_query("INTEGER", "c", <<["B", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["c", "INTEGER"], ["D", "c"]>>, "b")
add_class(B)
quotient
quotient
add_call_chain(<<A,c>>)
int_value (43)
modulo
less_than
add_query("A", "d", <<["C", "C"], ["A", "INTEGER"], ["a", "INTEGER"], ["B", "INTEGER"], ["d", "BOOLEAN"]>>, "d")
logical_negation
add_class(b)
greater_than
type_check
add_attribute("b", "B", "BOOLEAN")
bool_value (false)
add_call_chain(<<d,A,C,A,b,C,C>>)
bool_value (true)
add_call_chain(<<b,D,c>>)
type_check
add_class(C)
add_command("b", "b", <<["C", "INTEGER"], ["B", "BOOLEAN"], ["b", "BOOLEAN"]>>)
add_attribute("B", "D", "INTEGER")
add_command("C", "BOOLEAN", <<["c", "INTEGER"], ["c", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["a", "BOOLEAN"], ["d", "INTEGER"], ["e", "INTEGER"], ["e", "INTEGER"]>>)
add_command("c", "C", <<["A", "BOOLEAN"], ["A", "INTEGER"], ["c", "d"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["a", "c"]>>)
add_call_chain(<<D>>)
bool_value (true)
add_query("b", "a", <<["B", "INTEGER"], ["A", "INTEGER"], ["d", "BOOLEAN"], ["A", "e"]>>, "b")
add_attribute("C", "C", "INTEGER")
bool_value (false)
bool_value (false)
type_check
addition
greater_than
add_attribute("e", "b", "INTEGER")
add_call_chain(<<C,d,A,b,B,d>>)
numerical_negation
add_query("D", "D", <<["B", "BOOLEAN"], ["a", "D"], ["A", "BOOLEAN"], ["b", "INTEGER"]>>, "A")
add_attribute("C", "c", "INTEGER")
add_query("b", "d", <<["D", "BOOLEAN"], ["a", "C"], ["D", "d"], ["B", "BOOLEAN"], ["a", "e"]>>, "A")
bool_value (false)
bool_value (true)
equals
int_value (32)
disjunction
numerical_negation
add_call_chain(<<e,A,e,C,INTEGER>>)
int_value (26)
numerical_negation
add_attribute("C", "B", "INTEGER")
bool_value (false)
numerical_negation
add_call_chain(<<A,D,e,A,D,D,BOOLEAN,d,d>>)
add_call_chain(<<a,C,d,BOOLEAN>>)
add_call_chain(<<e,B,D,INTEGER,b,d,a,b>>)
logical_negation
add_call_chain(<<D,e,BOOLEAN,c,D,d,B,d>>)
add_attribute("D", "C", "BOOLEAN")
add_query("A", "b", <<["BOOLEAN", "b"], ["INTEGER", "INTEGER"], ["A", "BOOLEAN"], ["B", "b"]>>, "A")
add_query("A", "a", <<["A", "c"]>>, "C")
bool_value (false)
add_call_chain(<<B,d,B,C,b,c,A>>)
logical_negation
logical_negation
add_query("BOOLEAN", "d", <<["A", "c"], ["BOOLEAN", "INTEGER"], ["d", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "BOOLEAN"]>>, "A")
int_value (8)
int_value (19)
logical_negation
add_query("INTEGER", "c", <<["BOOLEAN", "BOOLEAN"], ["d", "D"], ["c", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["d", "D"], ["C", "A"], ["a", "BOOLEAN"]>>, "e")
add_command("d", "D", <<["C", "BOOLEAN"], ["BOOLEAN", "B"], ["B", "INTEGER"]>>)
logical_negation
bool_value (false)
add_call_chain(<<A,b,d,D,e>>)
type_check
int_value (29)
add_class(a)
add_attribute("D", "a", "BOOLEAN")
add_class(b)
add_command("b", "A", <<["b", "INTEGER"], ["b", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "INTEGER"]>>)
generate_java_code
add_attribute("a", "b", "BOOLEAN")
conjunction
add_command("d", "INTEGER", <<["e", "INTEGER"], ["a", "BOOLEAN"], ["e", "BOOLEAN"], ["a", "c"], ["C", "INTEGER"], ["BOOLEAN", "INTEGER"]>>)
add_call_chain(<<b,BOOLEAN,b>>)
add_call_chain(<<c,a,C,BOOLEAN,e,a,D>>)
add_command("a", "A", <<["A", "e"]>>)
int_value (10)
add_command("B", "B", <<["d", "INTEGER"], ["d", "INTEGER"]>>)
add_call_chain(<<B,D>>)
logical_negation
add_query("A", "B", <<["A", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["A", "D"]>>, "A")
add_attribute("D", "BOOLEAN", "INTEGER")
logical_negation
add_command("b", "a", <<["B", "BOOLEAN"], ["A", "INTEGER"], ["INTEGER", "BOOLEAN"], ["C", "d"], ["C", "BOOLEAN"]>>)
conjunction
add_call_chain(<<D,e,b,A,e>>)
add_command("A", "b", <<["A", "D"], ["a", "BOOLEAN"]>>)
quotient
add_command("INTEGER", "C", <<["D", "c"], ["e", "B"], ["C", "BOOLEAN"]>>)
bool_value (false)
int_value (10)
add_command("a", "A", <<["A", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "c"], ["a", "A"]>>)
add_call_chain(<<e,c,INTEGER,b,b,e>>)
add_call_chain(<<C,BOOLEAN,A,A,C>>)
type_check
multiplication
logical_negation
add_call_chain(<<e,D,c,a,b,BOOLEAN>>)
bool_value (true)
add_attribute("A", "a", "INTEGER")
add_query("d", "D", <<["B", "d"], ["D", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "A"]>>, "D")
add_attribute("a", "A", "INTEGER")
numerical_negation
add_attribute("b", "b", "BOOLEAN")
numerical_negation
int_value (16)
disjunction
add_query("c", "a", <<["INTEGER", "BOOLEAN"], ["c", "b"], ["d", "BOOLEAN"], ["d", "a"], ["e", "BOOLEAN"], ["e", "INTEGER"]>>, "a")
bool_value (true)
add_call_chain(<<A,INTEGER,B,b>>)
add_call_chain(<<C,A>>)
add_command("b", "D", <<["D", "BOOLEAN"], ["a", "D"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["INTEGER", "D"], ["a", "BOOLEAN"], ["A", "INTEGER"], ["a", "BOOLEAN"]>>)
add_class(b)
bool_value (false)
generate_java_code
add_attribute("d", "C", "BOOLEAN")
int_value (21)
add_command("A", "D", <<["a", "INTEGER"], ["c", "INTEGER"], ["a", "BOOLEAN"], ["e", "e"], ["C", "BOOLEAN"], ["INTEGER", "INTEGER"]>>)
add_query("e", "A", <<["c", "b"], ["A", "a"], ["D", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "a"]>>, "C")
equals
add_call_chain(<<D,d>>)
bool_value (true)
addition
less_than
bool_value (false)
bool_value (false)
add_attribute("A", "D", "INTEGER")
greater_than
add_command("D", "BOOLEAN", <<["b", "INTEGER"]>>)
add_class(A)
int_value (42)
add_query("A", "C", <<["e", "INTEGER"], ["A", "e"], ["d", "INTEGER"]>>, "a")
add_class(A)
int_value (44)
numerical_negation
add_call_chain(<<e,D,d,D,C,A,BOOLEAN,A>>)
add_query("BOOLEAN", "e", <<["C", "INTEGER"], ["b", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["B", "C"], ["d", "INTEGER"], ["D", "INTEGER"], ["B", "a"], ["BOOLEAN", "INTEGER"]>>, "b")
add_call_chain(<<e,D,C,A,D>>)
add_call_chain(<<A,INTEGER,a,b,d,C,e,INTEGER>>)
modulo
add_command("c", "A", <<["B", "BOOLEAN"], ["b", "BOOLEAN"], ["e", "B"], ["A", "INTEGER"], ["b", "BOOLEAN"], ["D", "INTEGER"], ["INTEGER", "A"]>>)
add_call_chain(<<e>>)
disjunction
add_attribute("e", "D", "INTEGER")
disjunction
bool_value (false)
add_command("C", "INTEGER", <<["e", "INTEGER"], ["d", "BOOLEAN"], ["A", "INTEGER"], ["A", "BOOLEAN"], ["d", "INTEGER"]>>)
add_attribute("INTEGER", "C", "BOOLEAN")
numerical_negation
generate_java_code
generate_java_code
add_command("D", "d", <<["B", "c"], ["b", "A"], ["C", "c"], ["c", "b"], ["b", "BOOLEAN"]>>)
type_check
add_command("c", "C", <<["D", "INTEGER"], ["e", "c"], ["c", "INTEGER"], ["d", "D"]>>)
add_call_chain(<<a,C,d,D,a>>)
generate_java_code
add_attribute("BOOLEAN", "A", "BOOLEAN")
add_command("c", "e", <<["d", "INTEGER"], ["b", "A"], ["INTEGER", "B"], ["C", "INTEGER"], ["a", "a"], ["D", "e"]>>)
logical_negation
bool_value (false)
multiplication
add_query("d", "B", <<["a", "BOOLEAN"], ["D", "c"]>>, "a")
bool_value (true)
add_call_chain(<<D,a>>)
add_command("A", "e", <<["d", "BOOLEAN"]>>)
type_check
