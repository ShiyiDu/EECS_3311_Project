add_class(a)
add_attribute("C", "c", "INTEGER")
logical_negation
add_query("c", "b", <<["c", "INTEGER"], ["d", "INTEGER"]>>, "d")
add_command("a", "BOOLEAN", <<["C", "BOOLEAN"], ["c", "BOOLEAN"]>>)
add_attribute("c", "B", "INTEGER")
add_query("c", "B", <<["c", "BOOLEAN"], ["b", "INTEGER"], ["e", "c"], ["b", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "D"], ["c", "BOOLEAN"]>>, "c")
bool_value (true)
type_check
add_class(d)
conjunction
add_command("INTEGER", "A", <<["D", "INTEGER"], ["b", "BOOLEAN"], ["D", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["e", "BOOLEAN"], ["c", "INTEGER"], ["c", "INTEGER"]>>)
add_call_chain(<<D,D,c,c,A,BOOLEAN,a,A>>)
numerical_negation
int_value (39)
conjunction
bool_value (true)
add_attribute("a", "B", "INTEGER")
numerical_negation
bool_value (true)
int_value (7)
add_command("d", "D", <<["A", "b"]>>)
add_call_chain(<<d,INTEGER,d,B,B>>)
logical_negation
bool_value (false)
int_value (16)
addition
int_value (13)
add_query("b", "INTEGER", <<["c", "INTEGER"], ["D", "BOOLEAN"]>>, "C")
add_call_chain(<<A,INTEGER,c,BOOLEAN>>)
conjunction
subtraction
type_check
add_query("B", "c", <<["d", "BOOLEAN"], ["c", "D"]>>, "B")
add_call_chain(<<b>>)
add_attribute("e", "d", "A")
greater_than
generate_java_code
int_value (23)
add_attribute("e", "B", "BOOLEAN")
type_check
add_attribute("D", "d", "INTEGER")
bool_value (true)
add_query("a", "B", <<["INTEGER", "BOOLEAN"], ["D", "a"], ["a", "BOOLEAN"], ["B", "d"], ["C", "C"], ["B", "BOOLEAN"]>>, "C")
int_value (14)
less_than
logical_negation
add_call_chain(<<D>>)
add_command("B", "D", <<["a", "INTEGER"], ["C", "A"]>>)
add_command("b", "B", <<["e", "BOOLEAN"], ["d", "INTEGER"], ["a", "INTEGER"]>>)
add_class(c)
add_query("d", "e", <<["A", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "INTEGER"], ["C", "c"]>>, "c")
add_command("a", "C", <<["d", "A"], ["B", "INTEGER"], ["a", "BOOLEAN"], ["C", "B"], ["C", "INTEGER"], ["C", "d"], ["BOOLEAN", "e"]>>)
add_call_chain(<<b,b,d,e,C,C,c,b>>)
conjunction
generate_java_code
int_value (26)
addition
numerical_negation
int_value (6)
disjunction
add_query("a", "c", <<["e", "C"], ["A", "d"]>>, "D")
disjunction
int_value (27)
add_command("INTEGER", "D", <<["c", "D"]>>)
generate_java_code
int_value (18)
add_class(b)
add_class(b)
generate_java_code
add_call_chain(<<B,C,D,B>>)
int_value (21)
add_command("A", "b", <<["C", "INTEGER"], ["a", "d"], ["BOOLEAN", "A"], ["c", "B"], ["a", "INTEGER"], ["A", "INTEGER"], ["c", "c"], ["D", "D"]>>)
add_class(D)
add_query("e", "e", <<["INTEGER", "D"], ["INTEGER", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "INTEGER"], ["A", "INTEGER"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["a", "BOOLEAN"]>>, "d")
bool_value (false)
add_command("e", "e", <<["D", "C"], ["a", "b"], ["C", "C"]>>)
numerical_negation
add_command("e", "d", <<["c", "BOOLEAN"], ["A", "d"], ["a", "INTEGER"], ["b", "d"], ["D", "C"], ["B", "INTEGER"], ["B", "BOOLEAN"]>>)
add_call_chain(<<A,b>>)
add_call_chain(<<B,A,D,e,BOOLEAN,c,b,c>>)
add_command("c", "d", <<["b", "BOOLEAN"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["e", "B"], ["a", "INTEGER"], ["a", "INTEGER"], ["b", "INTEGER"]>>)
add_query("INTEGER", "e", <<["A", "e"], ["B", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "b"], ["c", "b"]>>, "D")
equals
logical_negation
int_value (49)
int_value (42)
numerical_negation
add_query("A", "c", <<["A", "BOOLEAN"], ["B", "C"], ["d", "B"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["D", "INTEGER"], ["e", "a"], ["INTEGER", "INTEGER"]>>, "e")
add_query("e", "d", <<["c", "INTEGER"], ["e", "BOOLEAN"], ["B", "INTEGER"], ["e", "D"], ["d", "INTEGER"], ["e", "BOOLEAN"], ["c", "INTEGER"], ["BOOLEAN", "INTEGER"], ["A", "C"]>>, "e")
add_call_chain(<<A,A,D>>)
add_query("C", "A", <<["A", "INTEGER"], ["a", "BOOLEAN"], ["A", "C"], ["C", "A"], ["b", "INTEGER"], ["a", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["BOOLEAN", "D"], ["b", "A"]>>, "D")
add_call_chain(<<d,e,a,D,A,A>>)
disjunction
bool_value (false)
add_attribute("BOOLEAN", "C", "D")
add_command("b", "A", <<["a", "d"], ["c", "INTEGER"], ["e", "B"], ["D", "INTEGER"], ["INTEGER", "INTEGER"], ["e", "C"], ["b", "BOOLEAN"], ["D", "INTEGER"]>>)
generate_java_code
bool_value (true)
logical_negation
bool_value (false)
logical_negation
greater_than
int_value (35)
generate_java_code
less_than
numerical_negation
add_call_chain(<<c,c,c>>)
add_command("d", "C", <<["d", "INTEGER"]>>)
add_attribute("b", "A", "INTEGER")
add_query("A", "B", <<["e", "INTEGER"], ["c", "A"], ["C", "BOOLEAN"], ["BOOLEAN", "a"], ["BOOLEAN", "D"], ["d", "INTEGER"]>>, "e")
quotient
int_value (4)
add_call_chain(<<e,a>>)
conjunction
int_value (31)
add_call_chain(<<B,C,b,a,b>>)
add_attribute("e", "D", "c")
numerical_negation
add_class(c)
add_command("c", "B", <<["c", "INTEGER"], ["B", "BOOLEAN"]>>)
add_call_chain(<<B>>)
add_command("b", "D", <<["D", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "INTEGER"], ["D", "INTEGER"]>>)
add_command("b", "A", <<["a", "INTEGER"], ["a", "BOOLEAN"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["C", "D"], ["e", "c"]>>)
add_query("e", "A", <<["INTEGER", "C"], ["d", "BOOLEAN"], ["INTEGER", "INTEGER"], ["e", "BOOLEAN"], ["D", "INTEGER"], ["D", "INTEGER"], ["e", "INTEGER"]>>, "b")
type_check
logical_negation
add_query("INTEGER", "e", <<["b", "C"], ["C", "BOOLEAN"], ["A", "INTEGER"]>>, "e")
add_call_chain(<<A,e,C>>)
bool_value (true)
bool_value (true)
numerical_negation
numerical_negation
add_query("c", "D", <<["B", "A"], ["C", "INTEGER"], ["BOOLEAN", "B"], ["C", "INTEGER"], ["e", "a"], ["d", "INTEGER"], ["a", "BOOLEAN"], ["c", "INTEGER"]>>, "b")
generate_java_code
conjunction
add_attribute("a", "d", "C")
bool_value (false)
add_query("b", "INTEGER", <<["A", "INTEGER"], ["b", "c"], ["c", "INTEGER"]>>, "D")
numerical_negation
bool_value (true)
numerical_negation
int_value (26)
add_query("A", "B", <<["e", "A"], ["e", "BOOLEAN"], ["e", "INTEGER"]>>, "BOOLEAN")
greater_than
int_value (19)
int_value (21)
type_check
type_check
logical_negation
disjunction
add_command("c", "c", <<["e", "BOOLEAN"], ["a", "INTEGER"], ["A", "C"], ["INTEGER", "BOOLEAN"], ["b", "e"], ["e", "INTEGER"]>>)
add_query("INTEGER", "c", <<["a", "BOOLEAN"], ["a", "c"], ["BOOLEAN", "BOOLEAN"], ["C", "INTEGER"], ["A", "INTEGER"], ["B", "b"]>>, "D")
add_call_chain(<<e,e,e,e,C>>)
disjunction
add_call_chain(<<INTEGER,D,d,B,D,c,A,C>>)
add_class(c)
add_call_chain(<<a,b,A,c,D,d>>)
add_call_chain(<<a,INTEGER>>)
greater_than
add_command("D", "c", <<["B", "B"]>>)
add_attribute("a", "b", "INTEGER")
bool_value (true)
logical_negation
numerical_negation
quotient
numerical_negation
add_call_chain(<<C,B,INTEGER,B,C,C,D,e>>)
add_command("D", "B", <<["d", "D"], ["d", "INTEGER"], ["d", "BOOLEAN"], ["B", "c"], ["e", "c"], ["D", "INTEGER"], ["e", "INTEGER"], ["e", "BOOLEAN"], ["b", "C"]>>)
add_call_chain(<<d,C,c,C,b,C,INTEGER>>)
add_call_chain(<<B,B,a,C,e,a>>)
add_command("b", "D", <<["d", "INTEGER"], ["B", "d"], ["BOOLEAN", "C"], ["c", "BOOLEAN"]>>)
add_call_chain(<<c,b,e,A,A,D>>)
add_call_chain(<<D,B,c,e>>)
add_command("b", "b", <<["d", "INTEGER"], ["A", "INTEGER"], ["e", "BOOLEAN"]>>)
bool_value (false)
add_command("D", "D", <<["B", "BOOLEAN"], ["C", "D"], ["C", "BOOLEAN"]>>)
bool_value (false)
add_command("B", "C", <<["D", "BOOLEAN"], ["BOOLEAN", "D"], ["A", "INTEGER"], ["c", "b"], ["A", "INTEGER"], ["c", "A"], ["C", "INTEGER"], ["B", "INTEGER"]>>)
add_command("d", "D", <<["D", "INTEGER"], ["a", "A"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["c", "INTEGER"]>>)
add_attribute("a", "e", "BOOLEAN")
type_check
int_value (41)
add_query("D", "D", <<["B", "BOOLEAN"]>>, "e")
conjunction
add_call_chain(<<c,b,INTEGER,D,BOOLEAN,A,B>>)
logical_negation
add_attribute("d", "D", "BOOLEAN")
numerical_negation
add_command("B", "e", <<["D", "INTEGER"], ["D", "INTEGER"], ["INTEGER", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["D", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>)
add_call_chain(<<e,D,B,d,B,A,a,e,INTEGER>>)
int_value (17)
add_command("b", "A", <<["e", "INTEGER"], ["c", "a"], ["A", "BOOLEAN"], ["d", "B"], ["c", "INTEGER"], ["C", "INTEGER"], ["b", "BOOLEAN"], ["B", "BOOLEAN"]>>)
conjunction
