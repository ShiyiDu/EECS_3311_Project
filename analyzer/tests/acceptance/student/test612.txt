add_call_chain(<<d,e>>)
int_value (1)
logical_negation
logical_negation
logical_negation
bool_value (true)
add_attribute("C", "b", "C")
add_attribute("e", "e", "A")
add_attribute("b", "A", "INTEGER")
add_query("A", "b", <<["C", "INTEGER"], ["D", "INTEGER"]>>, "BOOLEAN")
addition
add_class(A)
add_attribute("C", "a", "INTEGER")
add_call_chain(<<D>>)
greater_than
int_value (2)
add_call_chain(<<c,INTEGER,c,e,D,C,d,A,B>>)
add_attribute("BOOLEAN", "C", "B")
type_check
add_query("D", "A", <<["B", "e"], ["e", "INTEGER"], ["INTEGER", "INTEGER"], ["d", "INTEGER"], ["D", "BOOLEAN"]>>, "B")
add_attribute("b", "a", "C")
less_than
add_command("BOOLEAN", "b", <<["d", "B"], ["a", "BOOLEAN"], ["b", "INTEGER"], ["b", "BOOLEAN"]>>)
bool_value (true)
int_value (41)
add_query("A", "c", <<["D", "A"], ["B", "BOOLEAN"], ["B", "C"], ["a", "INTEGER"], ["a", "e"]>>, "a")
add_query("a", "INTEGER", <<["c", "INTEGER"], ["A", "d"], ["D", "c"], ["a", "b"]>>, "D")
disjunction
int_value (26)
add_query("D", "B", <<["A", "b"]>>, "b")
int_value (48)
disjunction
add_query("B", "d", <<["B", "BOOLEAN"], ["INTEGER", "c"]>>, "D")
add_class(B)
conjunction
type_check
bool_value (false)
add_query("A", "c", <<["b", "INTEGER"], ["B", "INTEGER"]>>, "b")
int_value (49)
int_value (31)
add_command("B", "C", <<["A", "INTEGER"], ["D", "BOOLEAN"], ["c", "INTEGER"], ["D", "INTEGER"], ["c", "BOOLEAN"], ["B", "A"], ["a", "C"]>>)
add_attribute("A", "d", "b")
logical_negation
add_command("B", "A", <<["INTEGER", "INTEGER"], ["a", "BOOLEAN"], ["C", "B"]>>)
add_command("b", "D", <<["BOOLEAN", "INTEGER"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["e", "C"], ["c", "BOOLEAN"], ["c", "INTEGER"], ["e", "a"], ["INTEGER", "INTEGER"], ["a", "INTEGER"]>>)
generate_java_code
numerical_negation
add_command("A", "C", <<["C", "BOOLEAN"], ["a", "INTEGER"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["a", "INTEGER"], ["D", "BOOLEAN"], ["C", "BOOLEAN"]>>)
add_call_chain(<<A,e,a,B,A,c,b,B>>)
add_attribute("A", "B", "INTEGER")
add_attribute("e", "D", "BOOLEAN")
greater_than
add_query("A", "B", <<["B", "C"], ["INTEGER", "INTEGER"], ["C", "a"]>>, "b")
logical_negation
numerical_negation
logical_negation
generate_java_code
generate_java_code
numerical_negation
add_attribute("d", "D", "INTEGER")
add_call_chain(<<b,A,d,BOOLEAN,C,b,D,c>>)
generate_java_code
generate_java_code
int_value (21)
add_call_chain(<<A,C,C,D,b,B,d,C>>)
int_value (44)
add_command("b", "b", <<["d", "D"], ["a", "INTEGER"], ["INTEGER", "BOOLEAN"], ["INTEGER", "INTEGER"], ["INTEGER", "a"], ["C", "INTEGER"], ["BOOLEAN", "INTEGER"], ["B", "BOOLEAN"], ["e", "INTEGER"]>>)
generate_java_code
int_value (24)
bool_value (false)
int_value (28)
add_call_chain(<<B,c,b,a>>)
disjunction
add_call_chain(<<BOOLEAN,BOOLEAN,a,b,A,A,INTEGER,B>>)
int_value (25)
numerical_negation
add_class(b)
conjunction
type_check
add_attribute("D", "a", "B")
add_command("d", "A", <<["a", "BOOLEAN"], ["INTEGER", "INTEGER"], ["D", "e"], ["INTEGER", "BOOLEAN"], ["c", "B"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["B", "B"], ["a", "b"]>>)
add_call_chain(<<BOOLEAN,INTEGER,c,B,c>>)
add_call_chain(<<B,c,e,b,INTEGER,b,D,C>>)
generate_java_code
add_command("D", "INTEGER", <<["A", "INTEGER"], ["INTEGER", "D"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["c", "B"], ["A", "BOOLEAN"], ["b", "INTEGER"]>>)
logical_negation
add_command("B", "b", <<["c", "INTEGER"], ["a", "e"], ["A", "INTEGER"]>>)
add_class(A)
bool_value (false)
greater_than
add_query("b", "b", <<["D", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "d"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["A", "BOOLEAN"]>>, "b")
int_value (39)
add_attribute("c", "C", "BOOLEAN")
generate_java_code
add_call_chain(<<a>>)
int_value (31)
logical_negation
add_attribute("b", "b", "D")
add_command("INTEGER", "A", <<["C", "d"], ["e", "e"], ["c", "BOOLEAN"], ["a", "INTEGER"], ["d", "INTEGER"], ["b", "d"], ["d", "C"]>>)
numerical_negation
logical_negation
add_call_chain(<<B>>)
logical_negation
conjunction
add_attribute("b", "D", "b")
generate_java_code
add_call_chain(<<BOOLEAN,d,A,e>>)
add_command("C", "BOOLEAN", <<["a", "A"]>>)
add_call_chain(<<b,A,D,INTEGER,INTEGER,e,D,c,D>>)
int_value (24)
numerical_negation
bool_value (false)
add_query("A", "A", <<["BOOLEAN", "BOOLEAN"]>>, "D")
add_command("A", "C", <<["B", "INTEGER"], ["A", "A"], ["INTEGER", "BOOLEAN"], ["b", "C"], ["d", "INTEGER"], ["b", "e"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "INTEGER"]>>)
add_call_chain(<<B>>)
add_call_chain(<<D>>)
add_class(C)
generate_java_code
logical_negation
add_call_chain(<<d,D,A,a,c,D,b,e>>)
add_command("B", "e", <<["d", "C"], ["BOOLEAN", "INTEGER"], ["B", "BOOLEAN"], ["a", "INTEGER"], ["A", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "INTEGER"]>>)
add_call_chain(<<b>>)
add_query("a", "INTEGER", <<["B", "INTEGER"]>>, "C")
bool_value (true)
bool_value (true)
generate_java_code
bool_value (true)
bool_value (true)
equals
add_query("A", "C", <<["d", "BOOLEAN"], ["d", "INTEGER"]>>, "B")
add_class(INTEGER)
logical_negation
disjunction
logical_negation
numerical_negation
add_call_chain(<<D,BOOLEAN>>)
int_value (3)
bool_value (true)
less_than
add_call_chain(<<e,B,INTEGER,b,b,A>>)
add_class(B)
add_attribute("A", "e", "BOOLEAN")
add_call_chain(<<INTEGER,d,e,d,e,B>>)
add_query("A", "D", <<["BOOLEAN", "B"], ["D", "INTEGER"], ["A", "d"], ["C", "INTEGER"]>>, "a")
int_value (40)
bool_value (true)
add_command("B", "D", <<["d", "BOOLEAN"], ["INTEGER", "b"], ["d", "D"], ["C", "BOOLEAN"], ["C", "a"], ["d", "INTEGER"]>>)
add_command("D", "b", <<["c", "BOOLEAN"], ["B", "BOOLEAN"]>>)
type_check
add_attribute("C", "c", "C")
logical_negation
generate_java_code
type_check
add_query("e", "b", <<["D", "INTEGER"], ["C", "d"], ["c", "BOOLEAN"], ["INTEGER", "INTEGER"]>>, "c")
addition
int_value (21)
equals
type_check
add_query("d", "a", <<["A", "c"], ["c", "INTEGER"], ["D", "D"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["b", "BOOLEAN"]>>, "BOOLEAN")
type_check
bool_value (true)
logical_negation
logical_negation
add_call_chain(<<D>>)
quotient
generate_java_code
add_call_chain(<<b,D,C,a,a,c,D>>)
add_call_chain(<<D,B>>)
add_command("B", "d", <<["B", "INTEGER"]>>)
int_value (3)
add_attribute("B", "D", "d")
add_class(C)
add_call_chain(<<INTEGER,b,D,b,c,d>>)
type_check
numerical_negation
add_command("A", "e", <<["e", "INTEGER"], ["d", "a"], ["A", "INTEGER"], ["D", "A"], ["b", "BOOLEAN"], ["D", "INTEGER"], ["C", "BOOLEAN"]>>)
numerical_negation
int_value (15)
add_query("b", "c", <<["b", "C"], ["c", "INTEGER"], ["d", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["A", "A"]>>, "C")
add_call_chain(<<D>>)
int_value (29)
add_class(B)
add_command("C", "b", <<["C", "e"], ["a", "BOOLEAN"]>>)
type_check
greater_than
add_call_chain(<<B,A,A,e,C,BOOLEAN,C,A>>)
generate_java_code
generate_java_code
disjunction
numerical_negation
add_call_chain(<<e,c>>)
add_call_chain(<<b,d,INTEGER>>)
add_call_chain(<<e,A>>)
add_query("c", "d", <<["INTEGER", "d"], ["c", "a"], ["d", "BOOLEAN"], ["e", "c"], ["C", "e"], ["BOOLEAN", "INTEGER"], ["BOOLEAN", "e"], ["e", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>, "d")
add_command("a", "d", <<["C", "INTEGER"]>>)
conjunction
type_check
add_call_chain(<<D,B,c,d,c,d,D,C>>)
add_query("B", "A", <<["b", "INTEGER"], ["b", "a"], ["a", "a"], ["C", "B"]>>, "d")
add_query("b", "C", <<["d", "D"], ["d", "BOOLEAN"], ["a", "INTEGER"], ["C", "D"], ["a", "INTEGER"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["c", "BOOLEAN"], ["A", "BOOLEAN"]>>, "e")
bool_value (true)
add_command("c", "C", <<["A", "INTEGER"], ["B", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["b", "a"], ["e", "BOOLEAN"]>>)
add_class(B)
logical_negation
add_class(a)
generate_java_code
type_check
add_command("b", "b", <<["D", "INTEGER"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["INTEGER", "a"]>>)
add_query("B", "D", <<["D", "A"], ["D", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "INTEGER"], ["D", "BOOLEAN"], ["INTEGER", "e"], ["d", "d"], ["e", "INTEGER"], ["d", "INTEGER"]>>, "e")
add_command("BOOLEAN", "A", <<["d", "d"], ["a", "BOOLEAN"], ["INTEGER", "INTEGER"], ["BOOLEAN", "INTEGER"], ["INTEGER", "INTEGER"], ["A", "b"], ["C", "A"], ["C", "BOOLEAN"], ["D", "A"]>>)
int_value (10)
add_class(BOOLEAN)
logical_negation
int_value (32)
add_call_chain(<<C,C,A>>)
numerical_negation
add_attribute("d", "e", "BOOLEAN")
add_call_chain(<<B,e,C,b,D,b,C,e,A>>)
int_value (32)
add_attribute("e", "e", "BOOLEAN")
add_attribute("B", "D", "INTEGER")
logical_negation
add_call_chain(<<d,BOOLEAN,B,d,A,A,d,A,C>>)
logical_negation
int_value (5)
less_than
generate_java_code
add_attribute("b", "B", "BOOLEAN")
add_query("e", "C", <<["A", "BOOLEAN"], ["b", "A"]>>, "b")
add_query("c", "c", <<["d", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "c"], ["B", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "INTEGER"], ["d", "INTEGER"], ["INTEGER", "D"]>>, "a")
bool_value (true)
