greater_than
add_call_chain(<<e,D,B,d,d,a,c>>)
bool_value (true)
add_attribute("b", "D", "INTEGER")
add_command("C", "A", <<["INTEGER", "INTEGER"], ["b", "C"]>>)
bool_value (true)
conjunction
equals
type_check
add_call_chain(<<b,e>>)
logical_negation
add_class(c)
greater_than
add_attribute("B", "c", "INTEGER")
add_call_chain(<<b,a,C,A,C,e>>)
add_query("d", "INTEGER", <<["e", "A"], ["a", "c"], ["B", "C"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["d", "c"], ["A", "b"], ["B", "INTEGER"]>>, "C")
quotient
bool_value (true)
add_attribute("c", "d", "c")
numerical_negation
numerical_negation
type_check
add_query("D", "D", <<["B", "INTEGER"], ["e", "INTEGER"], ["b", "a"], ["B", "INTEGER"], ["a", "B"], ["INTEGER", "d"], ["B", "BOOLEAN"], ["d", "B"], ["d", "BOOLEAN"]>>, "d")
bool_value (true)
add_query("c", "b", <<["a", "BOOLEAN"]>>, "b")
bool_value (false)
numerical_negation
logical_negation
logical_negation
int_value (24)
type_check
logical_negation
add_attribute("BOOLEAN", "A", "a")
type_check
add_call_chain(<<D,D,D,c,e,c>>)
add_query("b", "B", <<["e", "e"], ["C", "D"], ["e", "INTEGER"], ["c", "INTEGER"], ["B", "c"]>>, "a")
add_command("B", "D", <<["B", "A"], ["A", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "c"]>>)
logical_negation
add_command("e", "BOOLEAN", <<["e", "c"], ["b", "C"], ["a", "c"], ["d", "BOOLEAN"], ["D", "INTEGER"], ["D", "INTEGER"], ["c", "INTEGER"], ["b", "BOOLEAN"], ["B", "BOOLEAN"]>>)
add_call_chain(<<b,C>>)
quotient
bool_value (false)
add_attribute("c", "c", "INTEGER")
equals
logical_negation
add_command("c", "c", <<["C", "INTEGER"], ["d", "B"], ["b", "INTEGER"], ["d", "INTEGER"], ["A", "INTEGER"]>>)
bool_value (false)
quotient
type_check
add_call_chain(<<INTEGER,d,D,c,c,B>>)
add_attribute("B", "e", "INTEGER")
add_class(d)
bool_value (false)
generate_java_code
add_command("d", "C", <<["A", "BOOLEAN"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["BOOLEAN", "B"], ["c", "BOOLEAN"], ["c", "INTEGER"]>>)
add_call_chain(<<A,a,a,D,INTEGER,b,a,b,C>>)
int_value (27)
logical_negation
add_call_chain(<<C,d,b,B,C,d,A,d>>)
add_attribute("A", "e", "INTEGER")
add_query("A", "BOOLEAN", <<["b", "INTEGER"], ["D", "INTEGER"], ["b", "A"]>>, "C")
add_query("A", "a", <<["b", "c"], ["c", "BOOLEAN"], ["d", "INTEGER"], ["INTEGER", "INTEGER"]>>, "c")
numerical_negation
generate_java_code
numerical_negation
add_query("c", "c", <<["e", "BOOLEAN"], ["d", "c"], ["a", "c"], ["d", "BOOLEAN"], ["INTEGER", "D"], ["D", "BOOLEAN"], ["e", "INTEGER"], ["C", "INTEGER"]>>, "D")
logical_negation
add_command("B", "D", <<["a", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["A", "c"], ["C", "e"], ["D", "BOOLEAN"], ["d", "INTEGER"]>>)
add_call_chain(<<B,d,e,D,b,A>>)
add_query("C", "A", <<["a", "BOOLEAN"], ["A", "INTEGER"], ["b", "INTEGER"], ["A", "INTEGER"], ["e", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["c", "C"], ["d", "BOOLEAN"]>>, "e")
add_call_chain(<<e>>)
add_command("D", "a", <<["B", "D"], ["e", "INTEGER"], ["b", "A"], ["BOOLEAN", "INTEGER"]>>)
bool_value (false)
add_attribute("B", "A", "INTEGER")
add_class(B)
numerical_negation
add_query("C", "e", <<["BOOLEAN", "INTEGER"], ["a", "A"]>>, "A")
bool_value (false)
less_than
numerical_negation
addition
int_value (22)
add_attribute("a", "e", "BOOLEAN")
add_call_chain(<<d,BOOLEAN,INTEGER,D,C,A,INTEGER,e,a>>)
add_call_chain(<<B,C,A,b,b,D,C>>)
logical_negation
add_attribute("a", "B", "INTEGER")
int_value (28)
numerical_negation
add_query("b", "D", <<["C", "INTEGER"], ["c", "BOOLEAN"]>>, "A")
add_call_chain(<<d,C,e,B,B,D,e>>)
logical_negation
add_query("c", "d", <<["b", "BOOLEAN"], ["B", "BOOLEAN"]>>, "B")
add_attribute("a", "INTEGER", "INTEGER")
numerical_negation
add_call_chain(<<B,B,a,d,INTEGER>>)
logical_negation
add_query("e", "B", <<["D", "BOOLEAN"], ["b", "c"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "B"], ["b", "BOOLEAN"], ["b", "INTEGER"], ["INTEGER", "BOOLEAN"], ["B", "INTEGER"]>>, "d")
add_class(D)
generate_java_code
add_command("d", "e", <<["C", "INTEGER"], ["A", "INTEGER"], ["B", "INTEGER"], ["A", "INTEGER"], ["d", "INTEGER"]>>)
int_value (27)
add_attribute("INTEGER", "D", "INTEGER")
bool_value (false)
generate_java_code
generate_java_code
greater_than
add_query("B", "INTEGER", <<["C", "BOOLEAN"], ["INTEGER", "b"], ["D", "INTEGER"], ["D", "A"], ["C", "BOOLEAN"], ["INTEGER", "INTEGER"], ["b", "INTEGER"], ["B", "BOOLEAN"], ["A", "BOOLEAN"]>>, "BOOLEAN")
logical_negation
add_class(B)
multiplication
add_call_chain(<<b,A,D,BOOLEAN,e,C,c>>)
add_class(a)
add_query("d", "D", <<["BOOLEAN", "INTEGER"], ["c", "e"], ["A", "B"], ["B", "INTEGER"], ["a", "D"], ["e", "INTEGER"], ["INTEGER", "BOOLEAN"], ["b", "INTEGER"]>>, "c")
add_command("D", "INTEGER", <<["e", "INTEGER"], ["e", "BOOLEAN"], ["A", "INTEGER"]>>)
add_command("C", "e", <<["C", "B"], ["b", "D"], ["BOOLEAN", "INTEGER"], ["c", "b"], ["d", "BOOLEAN"], ["B", "b"], ["D", "INTEGER"]>>)
generate_java_code
bool_value (true)
logical_negation
type_check
bool_value (false)
add_query("e", "a", <<["B", "INTEGER"], ["C", "INTEGER"], ["C", "INTEGER"], ["b", "e"], ["C", "BOOLEAN"], ["C", "INTEGER"]>>, "D")
add_call_chain(<<INTEGER,b>>)
int_value (37)
add_attribute("C", "c", "BOOLEAN")
add_query("e", "D", <<["C", "B"], ["INTEGER", "INTEGER"], ["B", "INTEGER"], ["d", "a"], ["C", "BOOLEAN"]>>, "A")
numerical_negation
multiplication
type_check
add_attribute("D", "B", "C")
equals
add_command("C", "a", <<["D", "c"], ["d", "D"], ["c", "BOOLEAN"], ["D", "INTEGER"]>>)
type_check
numerical_negation
add_call_chain(<<A,e,B,d,e,a>>)
int_value (29)
bool_value (true)
add_query("e", "B", <<["INTEGER", "C"], ["a", "INTEGER"], ["e", "INTEGER"]>>, "B")
add_call_chain(<<c,b,a,d,BOOLEAN,INTEGER,e,b>>)
generate_java_code
add_query("C", "A", <<["a", "INTEGER"], ["c", "INTEGER"], ["a", "BOOLEAN"], ["c", "d"], ["a", "c"], ["c", "e"]>>, "C")
add_class(A)
generate_java_code
bool_value (true)
add_call_chain(<<C,INTEGER,b,B>>)
add_command("a", "e", <<["e", "A"], ["c", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "A"]>>)
add_call_chain(<<e,a,C,e,e,e,B>>)
add_call_chain(<<BOOLEAN,A,d,a,e,b,C,B,e>>)
quotient
add_call_chain(<<e,b,e,INTEGER>>)
add_call_chain(<<b>>)
add_call_chain(<<D,INTEGER,D,B,D,A,a,b,D>>)
greater_than
add_call_chain(<<BOOLEAN,e,A,A,BOOLEAN>>)
add_command("c", "b", <<["b", "INTEGER"]>>)
logical_negation
conjunction
add_attribute("D", "D", "B")
add_call_chain(<<B,C,a,e,c,A,A>>)
int_value (37)
add_query("e", "C", <<["d", "BOOLEAN"], ["c", "INTEGER"], ["a", "INTEGER"], ["A", "D"], ["c", "c"], ["c", "BOOLEAN"]>>, "a")
generate_java_code
logical_negation
add_attribute("BOOLEAN", "b", "BOOLEAN")
numerical_negation
add_call_chain(<<C,a,b,B,A,A,INTEGER,BOOLEAN>>)
logical_negation
type_check
int_value (10)
add_class(b)
add_attribute("d", "B", "INTEGER")
add_attribute("D", "C", "a")
add_call_chain(<<e,d,d>>)
add_command("d", "INTEGER", <<["b", "BOOLEAN"], ["D", "INTEGER"], ["D", "INTEGER"], ["a", "BOOLEAN"], ["e", "BOOLEAN"], ["d", "INTEGER"], ["c", "c"]>>)
add_call_chain(<<C,e,e,A>>)
add_call_chain(<<B,c,B,e,e>>)
int_value (17)
add_call_chain(<<C,A,INTEGER>>)
type_check
greater_than
add_class(D)
add_query("A", "C", <<["c", "BOOLEAN"], ["c", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["c", "D"], ["a", "BOOLEAN"]>>, "C")
multiplication
disjunction
type_check
int_value (7)
logical_negation
add_query("B", "a", <<["C", "C"], ["A", "e"], ["c", "C"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["a", "INTEGER"], ["C", "BOOLEAN"], ["D", "BOOLEAN"]>>, "BOOLEAN")
add_call_chain(<<a,A,a,c>>)
bool_value (true)
int_value (29)
type_check
generate_java_code
add_call_chain(<<D,b>>)
add_class(e)
add_command("D", "e", <<["a", "e"], ["D", "BOOLEAN"], ["e", "INTEGER"], ["D", "INTEGER"], ["b", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "INTEGER"]>>)
add_call_chain(<<e,a,A,e,e,A,INTEGER>>)
multiplication
