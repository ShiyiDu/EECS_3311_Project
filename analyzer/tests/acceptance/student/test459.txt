add_command("a", "A", <<["e", "INTEGER"], ["d", "INTEGER"], ["b", "BOOLEAN"]>>)
numerical_negation
logical_negation
greater_than
add_call_chain(<<B,INTEGER>>)
bool_value (false)
less_than
add_call_chain(<<e,D,BOOLEAN,A,b,D,A,BOOLEAN>>)
add_call_chain(<<e,INTEGER,c,D,D>>)
add_query("B", "d", <<["BOOLEAN", "b"], ["BOOLEAN", "D"], ["INTEGER", "BOOLEAN"], ["C", "C"], ["D", "INTEGER"]>>, "B")
bool_value (true)
add_class(A)
add_command("A", "c", <<["c", "D"]>>)
logical_negation
int_value (11)
add_call_chain(<<C>>)
add_call_chain(<<D>>)
modulo
add_command("B", "A", <<["BOOLEAN", "BOOLEAN"], ["b", "A"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "A"], ["b", "BOOLEAN"]>>)
numerical_negation
add_call_chain(<<e,A,A,A,c,C,A>>)
multiplication
logical_negation
numerical_negation
multiplication
add_class(D)
add_class(C)
generate_java_code
add_call_chain(<<b,d,INTEGER,a>>)
bool_value (true)
add_attribute("C", "C", "BOOLEAN")
add_call_chain(<<C,a,A,b,d,D>>)
add_attribute("D", "BOOLEAN", "D")
add_call_chain(<<a,c,D,c,e,D,a,b>>)
bool_value (true)
add_call_chain(<<d,C,b,B,A,D,C>>)
logical_negation
add_call_chain(<<d,a,B,C,c,a,B,b,A>>)
add_attribute("B", "D", "BOOLEAN")
add_attribute("B", "c", "b")
add_call_chain(<<D,B,d,INTEGER,e,e>>)
add_attribute("D", "d", "BOOLEAN")
int_value (31)
logical_negation
int_value (45)
numerical_negation
add_call_chain(<<A,d,C,e,B>>)
logical_negation
add_call_chain(<<d,c,e,D,B,d>>)
int_value (3)
generate_java_code
disjunction
numerical_negation
equals
add_attribute("d", "b", "a")
add_call_chain(<<A,C,D,c,INTEGER,b,d,c>>)
multiplication
logical_negation
bool_value (false)
logical_negation
int_value (18)
bool_value (true)
add_call_chain(<<B,b,C,B,D,INTEGER,D,INTEGER,b>>)
add_attribute("c", "INTEGER", "INTEGER")
add_call_chain(<<d,D,b,b,INTEGER>>)
numerical_negation
add_call_chain(<<A,INTEGER,d,e,B,D,d,INTEGER>>)
add_call_chain(<<INTEGER,D,d,a>>)
int_value (15)
disjunction
equals
conjunction
add_query("c", "a", <<["A", "INTEGER"], ["c", "BOOLEAN"], ["A", "INTEGER"], ["BOOLEAN", "INTEGER"], ["e", "INTEGER"], ["d", "INTEGER"]>>, "d")
add_command("BOOLEAN", "A", <<["C", "D"]>>)
add_call_chain(<<BOOLEAN,B,D>>)
int_value (40)
add_query("e", "D", <<["b", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "INTEGER"]>>, "INTEGER")
disjunction
int_value (20)
add_command("b", "B", <<["b", "BOOLEAN"], ["b", "BOOLEAN"]>>)
bool_value (true)
int_value (29)
numerical_negation
add_attribute("INTEGER", "A", "a")
bool_value (false)
numerical_negation
add_call_chain(<<D,a,C>>)
numerical_negation
add_command("B", "a", <<["a", "INTEGER"], ["D", "INTEGER"]>>)
type_check
logical_negation
type_check
logical_negation
bool_value (true)
type_check
less_than
bool_value (false)
conjunction
logical_negation
add_command("A", "BOOLEAN", <<["C", "b"]>>)
type_check
type_check
add_command("A", "a", <<["C", "A"], ["e", "INTEGER"], ["INTEGER", "BOOLEAN"], ["b", "INTEGER"], ["d", "INTEGER"], ["b", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "INTEGER"]>>)
add_class(C)
add_command("b", "a", <<["b", "INTEGER"], ["C", "INTEGER"], ["A", "INTEGER"]>>)
add_command("a", "d", <<["a", "INTEGER"], ["A", "e"]>>)
int_value (1)
add_attribute("d", "a", "INTEGER")
generate_java_code
add_class(C)
add_query("D", "B", <<["B", "INTEGER"], ["b", "INTEGER"], ["B", "D"], ["B", "INTEGER"], ["D", "b"], ["INTEGER", "A"]>>, "INTEGER")
add_class(INTEGER)
generate_java_code
generate_java_code
int_value (45)
add_query("B", "D", <<["C", "BOOLEAN"], ["e", "C"], ["A", "d"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>, "a")
add_call_chain(<<B,e,B,C,b>>)
generate_java_code
int_value (40)
bool_value (true)
add_call_chain(<<C,A>>)
add_command("BOOLEAN", "b", <<["C", "INTEGER"], ["e", "INTEGER"], ["C", "INTEGER"], ["c", "D"], ["c", "c"], ["a", "D"], ["d", "BOOLEAN"], ["INTEGER", "INTEGER"], ["b", "BOOLEAN"]>>)
add_query("B", "INTEGER", <<["b", "C"], ["B", "INTEGER"], ["b", "INTEGER"], ["INTEGER", "INTEGER"], ["c", "a"]>>, "B")
disjunction
bool_value (false)
disjunction
add_query("b", "d", <<["c", "INTEGER"], ["a", "b"], ["d", "INTEGER"], ["d", "INTEGER"], ["B", "D"]>>, "INTEGER")
int_value (22)
numerical_negation
type_check
conjunction
add_call_chain(<<INTEGER,A>>)
add_attribute("d", "d", "INTEGER")
logical_negation
add_query("b", "INTEGER", <<["A", "B"], ["D", "D"], ["INTEGER", "BOOLEAN"], ["c", "A"], ["b", "INTEGER"], ["A", "D"], ["B", "d"], ["C", "e"]>>, "C")
add_query("B", "D", <<["d", "b"], ["c", "INTEGER"], ["INTEGER", "BOOLEAN"], ["d", "a"], ["INTEGER", "BOOLEAN"]>>, "A")
int_value (21)
add_call_chain(<<A,C,D,D,C,e,C>>)
int_value (31)
less_than
add_query("C", "c", <<["D", "A"], ["INTEGER", "BOOLEAN"], ["A", "BOOLEAN"], ["INTEGER", "INTEGER"], ["A", "b"], ["INTEGER", "BOOLEAN"], ["b", "BOOLEAN"]>>, "d")
equals
logical_negation
bool_value (false)
numerical_negation
add_call_chain(<<d,A,d>>)
add_attribute("e", "c", "BOOLEAN")
add_call_chain(<<a,A,C,B>>)
generate_java_code
disjunction
bool_value (false)
logical_negation
add_class(b)
add_class(d)
add_command("C", "C", <<["e", "BOOLEAN"], ["A", "b"], ["BOOLEAN", "a"], ["D", "INTEGER"], ["b", "INTEGER"], ["B", "INTEGER"], ["B", "INTEGER"], ["d", "BOOLEAN"], ["B", "INTEGER"]>>)
conjunction
add_command("A", "e", <<["d", "BOOLEAN"], ["b", "A"], ["a", "C"], ["b", "BOOLEAN"], ["A", "INTEGER"], ["d", "INTEGER"]>>)
add_query("D", "D", <<["e", "BOOLEAN"], ["D", "INTEGER"]>>, "C")
add_call_chain(<<B,c,C,A,INTEGER>>)
add_class(A)
add_attribute("A", "c", "d")
int_value (16)
add_call_chain(<<a>>)
int_value (28)
int_value (37)
add_attribute("D", "C", "BOOLEAN")
type_check
generate_java_code
int_value (6)
add_query("b", "D", <<["d", "INTEGER"], ["C", "D"], ["INTEGER", "INTEGER"], ["C", "INTEGER"], ["e", "BOOLEAN"], ["C", "INTEGER"]>>, "b")
numerical_negation
bool_value (true)
logical_negation
numerical_negation
int_value (12)
add_command("C", "c", <<["a", "BOOLEAN"]>>)
add_command("d", "D", <<["C", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "INTEGER"], ["A", "BOOLEAN"], ["a", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["B", "BOOLEAN"], ["a", "INTEGER"]>>)
int_value (22)
add_call_chain(<<e>>)
generate_java_code
add_call_chain(<<a,a,D,BOOLEAN,e,B,C,c>>)
add_class(c)
equals
logical_negation
less_than
bool_value (false)
int_value (7)
logical_negation
equals
add_class(B)
bool_value (true)
type_check
add_call_chain(<<INTEGER>>)
bool_value (true)
add_query("d", "a", <<["a", "INTEGER"]>>, "d")
add_query("A", "B", <<["B", "B"], ["A", "D"], ["A", "BOOLEAN"], ["INTEGER", "B"]>>, "C")
bool_value (true)
add_command("d", "a", <<["b", "INTEGER"]>>)
add_call_chain(<<D,C,b,b>>)
type_check
generate_java_code
int_value (31)
add_query("e", "d", <<["a", "BOOLEAN"], ["a", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["e", "BOOLEAN"], ["d", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "BOOLEAN"]>>, "B")
add_query("D", "b", <<["C", "INTEGER"], ["A", "D"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["B", "B"], ["a", "b"], ["B", "INTEGER"]>>, "INTEGER")
add_command("b", "c", <<["b", "c"], ["B", "BOOLEAN"], ["D", "BOOLEAN"]>>)
add_command("e", "e", <<["e", "INTEGER"], ["A", "BOOLEAN"], ["b", "INTEGER"], ["e", "INTEGER"], ["a", "BOOLEAN"]>>)
bool_value (true)
add_attribute("C", "d", "e")
add_call_chain(<<a,d,a,b,B,a,D,a,BOOLEAN>>)
logical_negation
add_query("e", "A", <<["D", "BOOLEAN"], ["b", "INTEGER"], ["b", "D"], ["c", "BOOLEAN"], ["D", "D"], ["c", "BOOLEAN"], ["C", "INTEGER"]>>, "e")
add_class(BOOLEAN)
bool_value (true)
numerical_negation
add_call_chain(<<INTEGER,a,B,e,A>>)
add_attribute("C", "INTEGER", "INTEGER")
less_than
add_call_chain(<<e,a,INTEGER,C,A,d,d,INTEGER,D>>)
add_call_chain(<<D,e,d,a>>)
numerical_negation
disjunction
add_attribute("e", "B", "INTEGER")
add_query("d", "c", <<["A", "INTEGER"], ["a", "INTEGER"], ["a", "BOOLEAN"], ["e", "INTEGER"], ["c", "e"], ["B", "BOOLEAN"], ["C", "INTEGER"], ["A", "BOOLEAN"]>>, "B")
logical_negation
generate_java_code
add_command("B", "A", <<["e", "BOOLEAN"], ["b", "b"], ["C", "INTEGER"]>>)
generate_java_code
add_attribute("C", "e", "INTEGER")
add_query("D", "d", <<["INTEGER", "c"], ["A", "D"]>>, "C")
add_class(INTEGER)
int_value (33)
add_call_chain(<<B,C>>)
less_than
add_class(D)
add_query("INTEGER", "B", <<["a", "BOOLEAN"]>>, "C")
add_call_chain(<<c,BOOLEAN,a>>)
add_command("B", "c", <<["BOOLEAN", "A"], ["INTEGER", "BOOLEAN"], ["C", "d"], ["e", "BOOLEAN"], ["INTEGER", "INTEGER"], ["D", "BOOLEAN"]>>)
int_value (36)
add_call_chain(<<INTEGER,A,B,BOOLEAN>>)
logical_negation
numerical_negation
add_command("a", "B", <<["B", "INTEGER"], ["a", "INTEGER"], ["b", "B"], ["B", "INTEGER"], ["d", "INTEGER"], ["D", "D"]>>)
add_class(b)
generate_java_code
conjunction
