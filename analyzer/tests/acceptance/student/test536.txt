bool_value (false)
modulo
add_call_chain(<<C,A,b,B>>)
add_call_chain(<<a,INTEGER,c,A>>)
int_value (29)
bool_value (false)
add_query("A", "C", <<["INTEGER", "INTEGER"], ["c", "INTEGER"]>>, "a")
numerical_negation
add_attribute("d", "d", "a")
disjunction
add_query("a", "e", <<["a", "INTEGER"]>>, "b")
int_value (41)
add_call_chain(<<a,INTEGER,a,b,b,BOOLEAN>>)
int_value (34)
int_value (7)
bool_value (false)
add_query("A", "D", <<["BOOLEAN", "d"]>>, "c")
add_query("INTEGER", "e", <<["b", "e"], ["A", "e"], ["c", "B"], ["c", "BOOLEAN"], ["B", "INTEGER"], ["B", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>, "B")
add_query("e", "c", <<["c", "BOOLEAN"]>>, "e")
numerical_negation
add_query("c", "D", <<["INTEGER", "b"], ["A", "INTEGER"], ["B", "BOOLEAN"]>>, "d")
add_query("A", "BOOLEAN", <<["c", "INTEGER"], ["C", "BOOLEAN"], ["d", "b"], ["e", "e"]>>, "A")
add_query("D", "A", <<["A", "BOOLEAN"], ["b", "a"], ["BOOLEAN", "INTEGER"]>>, "c")
add_query("c", "B", <<["b", "d"]>>, "a")
add_query("e", "c", <<["A", "b"], ["c", "BOOLEAN"], ["B", "INTEGER"], ["c", "a"], ["B", "INTEGER"]>>, "A")
logical_negation
numerical_negation
add_query("A", "C", <<["INTEGER", "B"], ["c", "b"]>>, "BOOLEAN")
logical_negation
type_check
bool_value (true)
add_class(b)
add_query("A", "e", <<["A", "INTEGER"], ["a", "d"], ["C", "b"], ["BOOLEAN", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["e", "BOOLEAN"], ["b", "INTEGER"]>>, "c")
add_command("INTEGER", "d", <<["B", "c"], ["a", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "c"], ["d", "BOOLEAN"], ["B", "INTEGER"], ["C", "b"], ["INTEGER", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>)
add_class(D)
add_call_chain(<<C,e,C,D,B>>)
less_than
equals
logical_negation
add_call_chain(<<B,C,B,b,A,D,d>>)
int_value (34)
int_value (15)
int_value (46)
add_call_chain(<<B,A,d,b,c,a,a,D,BOOLEAN>>)
add_call_chain(<<D,e,A,C,C,INTEGER,INTEGER,b,B>>)
disjunction
add_command("D", "B", <<["C", "INTEGER"], ["A", "INTEGER"]>>)
logical_negation
add_call_chain(<<A,a,D,e,A,C,B,BOOLEAN,C>>)
add_call_chain(<<b,b,d,e,d>>)
type_check
add_attribute("e", "d", "D")
add_call_chain(<<e,D,b,BOOLEAN,A,b,D,d>>)
greater_than
logical_negation
add_class(c)
add_command("d", "A", <<["b", "INTEGER"], ["B", "b"], ["A", "INTEGER"], ["e", "a"], ["D", "B"], ["D", "a"], ["e", "BOOLEAN"], ["a", "INTEGER"]>>)
add_class(b)
add_query("D", "C", <<["a", "BOOLEAN"], ["B", "e"], ["c", "d"], ["c", "BOOLEAN"], ["d", "BOOLEAN"], ["c", "B"], ["C", "INTEGER"], ["b", "e"], ["A", "BOOLEAN"]>>, "D")
add_attribute("B", "A", "BOOLEAN")
add_call_chain(<<A,INTEGER,c,BOOLEAN,BOOLEAN,a,a>>)
add_command("B", "e", <<["D", "INTEGER"], ["D", "BOOLEAN"], ["A", "BOOLEAN"]>>)
type_check
add_class(D)
int_value (38)
logical_negation
add_command("D", "c", <<["INTEGER", "INTEGER"], ["B", "a"], ["BOOLEAN", "BOOLEAN"]>>)
add_call_chain(<<D,B,d,INTEGER,c>>)
conjunction
add_call_chain(<<INTEGER,d,D,d,B,A,d,e,C>>)
add_attribute("B", "INTEGER", "INTEGER")
type_check
generate_java_code
add_call_chain(<<INTEGER,b,A,e,A,b>>)
add_call_chain(<<INTEGER,b,A,D,A,D>>)
add_class(B)
add_call_chain(<<A,BOOLEAN,A>>)
logical_negation
add_command("A", "B", <<["e", "INTEGER"], ["d", "D"], ["A", "B"], ["c", "BOOLEAN"], ["e", "INTEGER"], ["D", "INTEGER"], ["B", "INTEGER"], ["c", "INTEGER"]>>)
add_query("D", "A", <<["e", "b"]>>, "BOOLEAN")
add_command("d", "INTEGER", <<["D", "INTEGER"], ["a", "BOOLEAN"], ["c", "BOOLEAN"], ["d", "BOOLEAN"], ["INTEGER", "INTEGER"], ["BOOLEAN", "INTEGER"], ["D", "INTEGER"], ["B", "INTEGER"], ["d", "BOOLEAN"]>>)
conjunction
subtraction
numerical_negation
addition
bool_value (false)
add_call_chain(<<BOOLEAN,b,e,B,D,C>>)
add_call_chain(<<a,INTEGER,D,b,A,INTEGER>>)
add_call_chain(<<A,D>>)
type_check
type_check
numerical_negation
add_class(c)
modulo
add_class(e)
add_attribute("INTEGER", "D", "INTEGER")
generate_java_code
add_command("A", "b", <<["A", "INTEGER"], ["C", "BOOLEAN"], ["INTEGER", "b"], ["a", "A"], ["b", "c"], ["a", "A"], ["B", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>)
add_attribute("a", "C", "BOOLEAN")
numerical_negation
bool_value (false)
less_than
add_query("INTEGER", "INTEGER", <<["BOOLEAN", "a"], ["e", "INTEGER"], ["INTEGER", "BOOLEAN"], ["B", "INTEGER"], ["B", "a"], ["A", "INTEGER"]>>, "d")
add_query("BOOLEAN", "a", <<["C", "D"], ["B", "e"], ["B", "INTEGER"], ["d", "BOOLEAN"], ["a", "b"]>>, "INTEGER")
add_call_chain(<<b,C,D,D,b,e,D>>)
add_query("A", "a", <<["e", "d"], ["B", "BOOLEAN"], ["c", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "a"], ["c", "BOOLEAN"], ["b", "INTEGER"]>>, "a")
add_attribute("b", "D", "BOOLEAN")
add_command("A", "e", <<["B", "C"], ["A", "BOOLEAN"], ["D", "d"], ["D", "BOOLEAN"], ["a", "BOOLEAN"]>>)
int_value (17)
int_value (21)
int_value (45)
add_query("c", "A", <<["e", "INTEGER"], ["d", "c"], ["B", "INTEGER"], ["d", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "e"], ["a", "BOOLEAN"]>>, "d")
add_class(a)
type_check
generate_java_code
logical_negation
generate_java_code
numerical_negation
int_value (7)
int_value (21)
bool_value (false)
add_class(c)
add_class(INTEGER)
add_call_chain(<<C,e,e,A,BOOLEAN>>)
add_class(a)
numerical_negation
add_command("a", "A", <<["d", "INTEGER"], ["BOOLEAN", "b"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["e", "INTEGER"]>>)
numerical_negation
subtraction
add_call_chain(<<a,A,d,e,d,BOOLEAN,C,C>>)
add_command("D", "INTEGER", <<["A", "d"], ["INTEGER", "BOOLEAN"], ["d", "BOOLEAN"], ["b", "BOOLEAN"], ["INTEGER", "INTEGER"]>>)
add_command("C", "INTEGER", <<["e", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "a"], ["D", "INTEGER"], ["C", "INTEGER"], ["a", "d"], ["BOOLEAN", "e"], ["C", "C"]>>)
disjunction
add_call_chain(<<a,C>>)
conjunction
add_query("e", "B", <<["a", "INTEGER"], ["b", "BOOLEAN"], ["e", "INTEGER"], ["b", "INTEGER"], ["A", "A"], ["INTEGER", "BOOLEAN"], ["A", "INTEGER"], ["A", "INTEGER"], ["C", "BOOLEAN"]>>, "C")
add_attribute("c", "e", "INTEGER")
numerical_negation
add_attribute("C", "C", "BOOLEAN")
add_command("D", "d", <<["C", "INTEGER"], ["C", "INTEGER"]>>)
logical_negation
add_attribute("D", "C", "BOOLEAN")
add_call_chain(<<c,B,e>>)
add_call_chain(<<e,B,A,INTEGER>>)
generate_java_code
add_query("B", "D", <<["c", "BOOLEAN"], ["D", "INTEGER"], ["C", "INTEGER"], ["A", "INTEGER"], ["A", "INTEGER"]>>, "a")
add_command("b", "B", <<["d", "b"]>>)
add_call_chain(<<D,e,BOOLEAN,INTEGER,BOOLEAN,A,C,BOOLEAN,A>>)
add_query("D", "d", <<["A", "BOOLEAN"], ["b", "INTEGER"], ["b", "d"], ["b", "INTEGER"]>>, "a")
add_command("B", "D", <<["c", "c"], ["e", "INTEGER"], ["c", "INTEGER"], ["C", "BOOLEAN"], ["A", "d"]>>)
int_value (45)
disjunction
greater_than
add_call_chain(<<d,A,d,e>>)
conjunction
logical_negation
bool_value (true)
int_value (3)
int_value (36)
add_attribute("C", "d", "BOOLEAN")
add_query("c", "d", <<["c", "BOOLEAN"], ["B", "D"], ["a", "INTEGER"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "BOOLEAN"]>>, "D")
numerical_negation
add_call_chain(<<a,D,a,a,INTEGER,A,D,c,d>>)
int_value (2)
int_value (40)
equals
add_command("A", "C", <<["d", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["A", "B"]>>)
add_call_chain(<<b,B,d>>)
logical_negation
logical_negation
add_attribute("B", "b", "c")
add_class(B)
add_call_chain(<<BOOLEAN,c>>)
add_call_chain(<<C>>)
numerical_negation
generate_java_code
greater_than
int_value (2)
add_call_chain(<<D>>)
add_command("e", "d", <<["c", "B"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["D", "INTEGER"], ["C", "D"], ["e", "INTEGER"]>>)
conjunction
bool_value (false)
less_than
logical_negation
add_class(a)
add_call_chain(<<INTEGER,B,d,D,C,e,c,b,c>>)
add_attribute("e", "C", "BOOLEAN")
add_attribute("c", "d", "BOOLEAN")
add_query("a", "b", <<["b", "INTEGER"], ["a", "BOOLEAN"], ["b", "A"], ["D", "INTEGER"], ["A", "BOOLEAN"], ["b", "INTEGER"], ["c", "BOOLEAN"]>>, "D")
add_query("a", "B", <<["C", "BOOLEAN"], ["c", "BOOLEAN"], ["INTEGER", "INTEGER"], ["INTEGER", "INTEGER"], ["C", "INTEGER"], ["D", "C"]>>, "A")
bool_value (true)
conjunction
int_value (32)
bool_value (true)
bool_value (false)
add_attribute("A", "A", "D")
logical_negation
numerical_negation
bool_value (false)
add_query("A", "d", <<["e", "BOOLEAN"], ["b", "D"], ["a", "INTEGER"], ["d", "B"]>>, "C")
add_query("d", "D", <<["B", "INTEGER"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "INTEGER"], ["b", "INTEGER"], ["D", "INTEGER"]>>, "c")
quotient
add_command("A", "c", <<["A", "INTEGER"], ["c", "INTEGER"], ["e", "B"], ["A", "BOOLEAN"], ["C", "e"], ["C", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
addition
bool_value (true)
add_call_chain(<<a,BOOLEAN,e,B,B>>)
conjunction
add_call_chain(<<D,b,a>>)
add_command("d", "D", <<["B", "INTEGER"], ["C", "BOOLEAN"], ["e", "INTEGER"], ["C", "B"], ["e", "BOOLEAN"], ["a", "INTEGER"]>>)
add_call_chain(<<c>>)
add_query("e", "b", <<["A", "BOOLEAN"], ["D", "INTEGER"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "e"]>>, "INTEGER")
add_call_chain(<<B,d,A,e,C,INTEGER,d>>)
numerical_negation
type_check
add_query("B", "e", <<["b", "BOOLEAN"]>>, "d")
add_call_chain(<<e,b,e,C,a,D,BOOLEAN,B,A>>)
add_attribute("c", "b", "INTEGER")
int_value (8)
generate_java_code
add_attribute("A", "c", "e")
add_query("A", "c", <<["B", "BOOLEAN"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["c", "C"]>>, "b")
add_attribute("D", "BOOLEAN", "d")
logical_negation
