add_query("INTEGER", "a", <<["C", "D"], ["c", "INTEGER"], ["b", "INTEGER"], ["d", "INTEGER"], ["B", "a"], ["INTEGER", "B"]>>, "c")
add_command("c", "BOOLEAN", <<["A", "INTEGER"], ["c", "INTEGER"], ["c", "BOOLEAN"], ["C", "D"], ["c", "INTEGER"], ["a", "INTEGER"], ["B", "e"], ["e", "BOOLEAN"]>>)
bool_value (false)
add_call_chain(<<C,b,e,INTEGER>>)
add_attribute("d", "c", "INTEGER")
bool_value (true)
add_query("d", "A", <<["b", "BOOLEAN"], ["c", "INTEGER"], ["d", "INTEGER"], ["d", "BOOLEAN"], ["B", "B"], ["C", "e"], ["b", "INTEGER"]>>, "e")
disjunction
add_call_chain(<<C,D,e>>)
add_query("D", "c", <<["D", "C"]>>, "b")
bool_value (true)
add_call_chain(<<e,e,BOOLEAN>>)
add_command("e", "D", <<["C", "BOOLEAN"], ["e", "B"], ["A", "C"], ["D", "BOOLEAN"], ["e", "BOOLEAN"]>>)
modulo
equals
add_command("C", "C", <<["e", "INTEGER"], ["a", "INTEGER"], ["b", "INTEGER"], ["a", "INTEGER"], ["e", "INTEGER"], ["D", "INTEGER"], ["A", "d"], ["BOOLEAN", "INTEGER"]>>)
bool_value (false)
add_query("d", "c", <<["c", "INTEGER"], ["c", "BOOLEAN"], ["d", "INTEGER"], ["d", "INTEGER"]>>, "D")
numerical_negation
generate_java_code
add_call_chain(<<c,a,e,a,INTEGER,A,INTEGER,B,d>>)
generate_java_code
add_call_chain(<<B,d,C>>)
add_query("c", "b", <<["d", "INTEGER"], ["D", "C"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["a", "BOOLEAN"], ["B", "BOOLEAN"]>>, "c")
add_query("e", "A", <<["a", "INTEGER"], ["e", "INTEGER"], ["INTEGER", "a"], ["BOOLEAN", "BOOLEAN"]>>, "c")
int_value (22)
add_command("a", "BOOLEAN", <<["b", "BOOLEAN"], ["d", "INTEGER"], ["a", "INTEGER"], ["C", "a"], ["A", "a"], ["D", "INTEGER"], ["e", "INTEGER"], ["A", "BOOLEAN"], ["e", "INTEGER"]>>)
add_attribute("d", "b", "INTEGER")
add_call_chain(<<c>>)
numerical_negation
add_attribute("D", "A", "INTEGER")
add_query("D", "b", <<["b", "A"], ["C", "D"], ["b", "INTEGER"], ["A", "BOOLEAN"], ["D", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "c"]>>, "e")
add_call_chain(<<A,e,e,e,d,a,b>>)
add_attribute("C", "c", "e")
add_call_chain(<<C,e,B,B,a,a,B>>)
add_class(e)
less_than
int_value (45)
addition
numerical_negation
add_attribute("a", "a", "c")
less_than
subtraction
bool_value (true)
add_call_chain(<<e,C,C,b,B,d,B,C,a>>)
add_call_chain(<<C,C,A,C>>)
add_call_chain(<<d,D,A,d,BOOLEAN,B,A,c>>)
type_check
add_call_chain(<<a>>)
add_call_chain(<<B,a,b>>)
add_command("d", "D", <<["BOOLEAN", "A"], ["A", "A"], ["b", "BOOLEAN"], ["A", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["A", "INTEGER"]>>)
add_command("INTEGER", "e", <<["a", "INTEGER"], ["BOOLEAN", "B"], ["b", "D"], ["D", "D"], ["C", "B"]>>)
add_call_chain(<<D,C,A,C,D>>)
int_value (30)
int_value (32)
logical_negation
bool_value (false)
add_command("d", "INTEGER", <<["e", "INTEGER"], ["B", "a"], ["e", "B"], ["BOOLEAN", "BOOLEAN"], ["d", "INTEGER"], ["e", "INTEGER"]>>)
bool_value (true)
bool_value (true)
subtraction
add_attribute("D", "INTEGER", "INTEGER")
numerical_negation
add_attribute("C", "e", "INTEGER")
equals
add_attribute("a", "e", "BOOLEAN")
bool_value (false)
add_attribute("c", "D", "INTEGER")
logical_negation
numerical_negation
add_command("C", "D", <<["B", "e"], ["A", "INTEGER"], ["c", "INTEGER"]>>)
add_call_chain(<<D>>)
bool_value (false)
type_check
generate_java_code
add_attribute("c", "INTEGER", "B")
bool_value (false)
add_call_chain(<<A,A,BOOLEAN,d,B,BOOLEAN,a,B,INTEGER>>)
add_attribute("C", "D", "BOOLEAN")
less_than
bool_value (true)
add_class(B)
add_command("BOOLEAN", "c", <<["B", "BOOLEAN"], ["D", "d"]>>)
add_attribute("C", "e", "c")
subtraction
conjunction
add_class(e)
type_check
add_call_chain(<<B,C>>)
add_attribute("INTEGER", "e", "BOOLEAN")
logical_negation
numerical_negation
add_attribute("D", "c", "INTEGER")
add_call_chain(<<b,e,B,INTEGER,b,C>>)
int_value (8)
add_command("C", "e", <<["A", "INTEGER"]>>)
add_query("C", "D", <<["a", "INTEGER"], ["e", "A"], ["D", "INTEGER"], ["C", "a"]>>, "d")
conjunction
add_call_chain(<<BOOLEAN,D,C,A,D,b,A>>)
add_call_chain(<<a,b,D,A,b,c,d>>)
generate_java_code
add_query("B", "c", <<["B", "A"], ["e", "BOOLEAN"], ["d", "INTEGER"], ["D", "BOOLEAN"], ["b", "BOOLEAN"]>>, "b")
add_call_chain(<<b,c,c,C,c,C>>)
add_query("D", "a", <<["d", "INTEGER"], ["B", "INTEGER"]>>, "D")
add_attribute("a", "A", "BOOLEAN")
type_check
add_query("B", "BOOLEAN", <<["e", "INTEGER"], ["C", "C"], ["e", "BOOLEAN"], ["D", "INTEGER"], ["C", "BOOLEAN"]>>, "D")
numerical_negation
add_command("a", "e", <<["A", "A"], ["b", "BOOLEAN"], ["e", "INTEGER"], ["A", "INTEGER"], ["INTEGER", "INTEGER"], ["INTEGER", "BOOLEAN"], ["d", "INTEGER"]>>)
numerical_negation
greater_than
numerical_negation
add_call_chain(<<B>>)
add_query("a", "B", <<["B", "BOOLEAN"]>>, "A")
add_class(a)
add_call_chain(<<D,b,A,b>>)
add_attribute("D", "A", "INTEGER")
logical_negation
generate_java_code
add_call_chain(<<C,C,C,B,c,a,c>>)
type_check
add_query("C", "e", <<["c", "INTEGER"], ["D", "B"], ["BOOLEAN", "BOOLEAN"], ["b", "BOOLEAN"], ["b", "D"], ["d", "INTEGER"]>>, "e")
conjunction
bool_value (true)
logical_negation
add_call_chain(<<e,c,e,e,b,B,D>>)
generate_java_code
add_class(d)
generate_java_code
add_call_chain(<<C,c,c,d,A,C,c,e>>)
add_call_chain(<<D,C,C,INTEGER>>)
add_class(BOOLEAN)
add_query("BOOLEAN", "d", <<["a", "BOOLEAN"], ["D", "INTEGER"], ["D", "a"], ["b", "INTEGER"], ["b", "BOOLEAN"], ["d", "INTEGER"], ["c", "d"], ["a", "B"], ["A", "BOOLEAN"]>>, "C")
type_check
bool_value (true)
numerical_negation
numerical_negation
add_call_chain(<<e,D,c,C,e,A,d,C,D>>)
add_call_chain(<<c,BOOLEAN,c,A,B,INTEGER,B>>)
type_check
logical_negation
int_value (35)
add_call_chain(<<c,C,e,a,d,BOOLEAN,A>>)
add_query("e", "d", <<["B", "INTEGER"], ["e", "B"], ["C", "INTEGER"], ["b", "A"]>>, "A")
generate_java_code
add_attribute("b", "b", "INTEGER")
numerical_negation
generate_java_code
add_query("A", "D", <<["b", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "A"], ["D", "B"], ["a", "INTEGER"], ["C", "INTEGER"], ["C", "c"]>>, "C")
add_command("A", "B", <<["b", "BOOLEAN"], ["C", "INTEGER"], ["a", "INTEGER"], ["C", "INTEGER"]>>)
add_query("a", "e", <<["c", "b"], ["e", "BOOLEAN"], ["b", "INTEGER"], ["a", "INTEGER"], ["b", "e"], ["b", "INTEGER"], ["B", "B"], ["e", "INTEGER"]>>, "C")
bool_value (true)
add_query("INTEGER", "INTEGER", <<["C", "INTEGER"], ["B", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "BOOLEAN"], ["d", "INTEGER"], ["e", "D"], ["BOOLEAN", "INTEGER"]>>, "e")
add_call_chain(<<A,c,a,C,A,C,d,D,C>>)
bool_value (false)
add_call_chain(<<INTEGER,A,a>>)
addition
addition
disjunction
numerical_negation
add_call_chain(<<C>>)
add_attribute("b", "D", "A")
addition
int_value (47)
logical_negation
multiplication
bool_value (false)
int_value (25)
add_attribute("D", "c", "BOOLEAN")
add_attribute("e", "a", "BOOLEAN")
add_attribute("D", "A", "BOOLEAN")
add_query("a", "a", <<["D", "a"], ["c", "BOOLEAN"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "d"], ["c", "BOOLEAN"], ["e", "b"]>>, "a")
add_call_chain(<<C,A,B,D,B,C,D,B>>)
conjunction
add_call_chain(<<d,C>>)
modulo
add_call_chain(<<A,c,e,B,d,BOOLEAN,b>>)
bool_value (false)
int_value (41)
conjunction
less_than
logical_negation
bool_value (true)
bool_value (true)
add_query("A", "D", <<["a", "A"], ["c", "INTEGER"], ["a", "INTEGER"], ["A", "D"], ["c", "BOOLEAN"]>>, "A")
add_call_chain(<<d,D,e>>)
add_command("A", "INTEGER", <<["C", "INTEGER"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["INTEGER", "INTEGER"]>>)
bool_value (false)
add_attribute("e", "b", "BOOLEAN")
logical_negation
add_command("A", "INTEGER", <<["D", "BOOLEAN"], ["b", "b"], ["D", "BOOLEAN"]>>)
logical_negation
add_call_chain(<<INTEGER,d,D,e,c>>)
add_call_chain(<<d,d,e>>)
add_command("a", "e", <<["C", "INTEGER"], ["B", "INTEGER"], ["INTEGER", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["e", "c"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["d", "INTEGER"], ["D", "c"]>>)
int_value (9)
subtraction
bool_value (true)
subtraction
type_check
int_value (37)
add_query("A", "e", <<["b", "a"], ["a", "BOOLEAN"], ["INTEGER", "INTEGER"]>>, "c")
add_call_chain(<<b,c,INTEGER,C>>)
add_attribute("d", "e", "INTEGER")
add_command("a", "A", <<["c", "a"], ["A", "A"], ["B", "d"], ["C", "BOOLEAN"], ["C", "c"]>>)
add_attribute("b", "c", "a")
bool_value (true)
disjunction
add_command("C", "D", <<["INTEGER", "INTEGER"], ["e", "BOOLEAN"], ["B", "d"], ["B", "a"], ["A", "D"], ["B", "BOOLEAN"]>>)
numerical_negation
logical_negation
