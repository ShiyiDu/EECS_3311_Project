add_command("D", "e", <<["D", "INTEGER"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["B", "BOOLEAN"]>>)
add_call_chain(<<e,b,a,A,e,a,A,C,d>>)
equals
bool_value (false)
add_call_chain(<<D,A,A,a,C>>)
multiplication
int_value (30)
addition
add_attribute("a", "b", "a")
add_attribute("a", "e", "BOOLEAN")
logical_negation
numerical_negation
add_call_chain(<<BOOLEAN,e,BOOLEAN,c,e,a>>)
numerical_negation
greater_than
add_query("a", "A", <<["D", "INTEGER"]>>, "B")
add_call_chain(<<INTEGER,B,d,b,A,C>>)
add_attribute("b", "b", "D")
add_call_chain(<<A,a,b,A,B,A,a,A,BOOLEAN>>)
add_call_chain(<<A,A,A,INTEGER,c>>)
add_call_chain(<<b>>)
add_query("INTEGER", "d", <<["a", "INTEGER"], ["D", "BOOLEAN"]>>, "A")
numerical_negation
add_attribute("A", "C", "d")
add_command("A", "INTEGER", <<["a", "e"], ["c", "INTEGER"], ["e", "B"], ["A", "BOOLEAN"], ["D", "INTEGER"], ["D", "BOOLEAN"]>>)
conjunction
numerical_negation
add_command("C", "b", <<["d", "b"]>>)
int_value (34)
add_attribute("INTEGER", "A", "BOOLEAN")
add_call_chain(<<INTEGER,A,B,D,d,B,BOOLEAN,INTEGER>>)
bool_value (false)
add_call_chain(<<a,D,a,INTEGER,a,d,d>>)
add_attribute("B", "a", "BOOLEAN")
add_call_chain(<<C,A,BOOLEAN,A,A>>)
less_than
add_query("e", "D", <<["c", "d"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["B", "A"], ["A", "INTEGER"], ["a", "b"]>>, "C")
add_call_chain(<<b>>)
numerical_negation
type_check
disjunction
type_check
int_value (1)
add_call_chain(<<d,D>>)
generate_java_code
add_command("c", "INTEGER", <<["A", "D"], ["d", "INTEGER"], ["A", "BOOLEAN"]>>)
add_call_chain(<<c,b>>)
numerical_negation
int_value (39)
logical_negation
int_value (21)
generate_java_code
bool_value (true)
add_command("A", "d", <<["b", "INTEGER"], ["B", "INTEGER"]>>)
numerical_negation
int_value (43)
add_call_chain(<<e,c,D,e,C,a,D>>)
add_attribute("C", "c", "INTEGER")
add_command("C", "BOOLEAN", <<["BOOLEAN", "INTEGER"], ["B", "BOOLEAN"], ["a", "INTEGER"], ["D", "INTEGER"], ["d", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "INTEGER"]>>)
add_query("A", "e", <<["d", "BOOLEAN"], ["D", "BOOLEAN"], ["d", "BOOLEAN"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["B", "INTEGER"], ["b", "A"], ["B", "D"]>>, "C")
logical_negation
int_value (35)
quotient
add_query("d", "BOOLEAN", <<["D", "A"], ["D", "d"], ["a", "BOOLEAN"]>>, "e")
add_attribute("c", "B", "INTEGER")
add_class(B)
add_command("c", "B", <<["C", "INTEGER"], ["BOOLEAN", "INTEGER"]>>)
bool_value (false)
bool_value (true)
generate_java_code
add_attribute("D", "C", "INTEGER")
add_call_chain(<<C,c,c,c,INTEGER,C,C>>)
add_class(d)
less_than
add_attribute("B", "A", "INTEGER")
add_attribute("b", "A", "BOOLEAN")
add_call_chain(<<a,a,b,d,C,e,A>>)
greater_than
add_attribute("e", "BOOLEAN", "BOOLEAN")
disjunction
add_query("B", "d", <<["BOOLEAN", "BOOLEAN"], ["a", "C"], ["c", "BOOLEAN"], ["b", "INTEGER"], ["e", "D"], ["C", "BOOLEAN"]>>, "c")
generate_java_code
add_call_chain(<<d,e,C,A,c>>)
add_query("c", "d", <<["INTEGER", "BOOLEAN"], ["a", "INTEGER"], ["b", "BOOLEAN"], ["INTEGER", "e"], ["B", "A"], ["BOOLEAN", "B"], ["a", "D"]>>, "C")
int_value (1)
add_class(b)
logical_negation
add_call_chain(<<B>>)
add_command("D", "b", <<["d", "INTEGER"], ["C", "INTEGER"], ["b", "c"], ["e", "BOOLEAN"], ["C", "c"], ["B", "BOOLEAN"], ["c", "INTEGER"], ["INTEGER", "BOOLEAN"], ["d", "INTEGER"]>>)
add_call_chain(<<B,BOOLEAN,INTEGER,a,e>>)
type_check
add_class(e)
modulo
greater_than
generate_java_code
add_attribute("d", "c", "B")
add_call_chain(<<b,C>>)
logical_negation
add_attribute("c", "A", "INTEGER")
add_command("d", "a", <<["c", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["b", "e"], ["c", "INTEGER"]>>)
disjunction
add_call_chain(<<C,e,BOOLEAN>>)
add_query("A", "e", <<["e", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "b"], ["INTEGER", "INTEGER"]>>, "c")
add_call_chain(<<b,e,a,INTEGER,e,d,C,e>>)
add_query("INTEGER", "C", <<["b", "BOOLEAN"], ["a", "INTEGER"], ["e", "INTEGER"], ["B", "BOOLEAN"], ["e", "INTEGER"]>>, "e")
modulo
generate_java_code
bool_value (true)
add_command("e", "B", <<["d", "BOOLEAN"], ["D", "B"], ["e", "INTEGER"], ["A", "a"], ["D", "INTEGER"], ["D", "a"]>>)
add_call_chain(<<D,c,D>>)
logical_negation
int_value (3)
add_call_chain(<<C,a,b,a,D,d,B,D>>)
add_attribute("B", "a", "INTEGER")
conjunction
add_command("A", "A", <<["e", "BOOLEAN"]>>)
conjunction
numerical_negation
logical_negation
add_command("a", "a", <<["c", "INTEGER"], ["A", "e"], ["B", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["b", "BOOLEAN"]>>)
add_command("C", "D", <<["b", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "INTEGER"], ["B", "BOOLEAN"], ["c", "e"], ["a", "BOOLEAN"], ["c", "INTEGER"]>>)
add_query("b", "A", <<["b", "BOOLEAN"], ["C", "C"], ["INTEGER", "BOOLEAN"], ["A", "B"]>>, "A")
bool_value (true)
add_attribute("a", "a", "INTEGER")
int_value (48)
add_query("a", "B", <<["a", "INTEGER"], ["d", "BOOLEAN"], ["INTEGER", "A"], ["A", "c"], ["d", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "BOOLEAN"]>>, "a")
add_query("C", "A", <<["c", "D"], ["b", "INTEGER"], ["a", "A"], ["A", "C"]>>, "D")
add_class(d)
add_query("d", "B", <<["INTEGER", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "INTEGER"], ["INTEGER", "INTEGER"], ["a", "INTEGER"], ["e", "INTEGER"], ["a", "BOOLEAN"], ["D", "BOOLEAN"]>>, "d")
logical_negation
add_call_chain(<<C>>)
add_command("a", "C", <<["BOOLEAN", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["A", "INTEGER"]>>)
add_attribute("B", "e", "BOOLEAN")
numerical_negation
less_than
numerical_negation
add_call_chain(<<C,A,a,e,D,B>>)
add_call_chain(<<c,d,B,b,b,D,C,C>>)
add_query("d", "C", <<["C", "BOOLEAN"], ["A", "C"], ["a", "D"], ["d", "c"], ["INTEGER", "BOOLEAN"], ["D", "BOOLEAN"]>>, "BOOLEAN")
add_query("b", "d", <<["e", "INTEGER"], ["c", "D"], ["b", "BOOLEAN"], ["b", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "BOOLEAN"], ["INTEGER", "INTEGER"], ["e", "C"], ["a", "B"]>>, "b")
add_call_chain(<<B,d,A,D,a,e,BOOLEAN>>)
int_value (37)
add_query("C", "c", <<["INTEGER", "BOOLEAN"], ["A", "A"], ["c", "INTEGER"], ["A", "BOOLEAN"], ["C", "D"], ["B", "BOOLEAN"]>>, "c")
add_call_chain(<<b,INTEGER,D,B,c,B>>)
add_attribute("INTEGER", "e", "BOOLEAN")
subtraction
add_class(D)
bool_value (true)
add_command("D", "B", <<["B", "INTEGER"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["b", "INTEGER"], ["B", "BOOLEAN"], ["d", "c"]>>)
add_query("a", "e", <<["d", "D"], ["C", "e"], ["B", "B"], ["C", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["d", "INTEGER"], ["B", "e"], ["c", "INTEGER"]>>, "a")
generate_java_code
int_value (15)
greater_than
bool_value (false)
int_value (21)
bool_value (true)
greater_than
add_query("e", "INTEGER", <<["C", "b"]>>, "e")
add_class(b)
add_query("b", "INTEGER", <<["D", "D"], ["c", "INTEGER"], ["a", "BOOLEAN"], ["e", "INTEGER"], ["INTEGER", "INTEGER"], ["C", "d"], ["D", "INTEGER"]>>, "B")
type_check
int_value (49)
numerical_negation
add_attribute("a", "B", "D")
addition
add_class(e)
int_value (10)
generate_java_code
bool_value (true)
add_class(C)
generate_java_code
add_attribute("A", "c", "BOOLEAN")
multiplication
add_command("C", "a", <<["c", "INTEGER"], ["INTEGER", "INTEGER"], ["BOOLEAN", "INTEGER"], ["b", "b"], ["C", "INTEGER"], ["C", "INTEGER"]>>)
logical_negation
add_command("e", "B", <<["B", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "BOOLEAN"]>>)
bool_value (true)
add_attribute("c", "a", "INTEGER")
add_attribute("D", "C", "BOOLEAN")
add_query("B", "a", <<["B", "D"], ["D", "BOOLEAN"]>>, "B")
bool_value (true)
numerical_negation
bool_value (true)
logical_negation
type_check
type_check
add_call_chain(<<C>>)
add_attribute("d", "A", "BOOLEAN")
type_check
logical_negation
add_attribute("c", "D", "INTEGER")
numerical_negation
add_command("B", "D", <<["e", "INTEGER"], ["b", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "INTEGER"], ["b", "BOOLEAN"], ["c", "INTEGER"], ["INTEGER", "c"], ["e", "BOOLEAN"]>>)
int_value (30)
int_value (36)
int_value (48)
conjunction
add_call_chain(<<B,D,B,c,b,b,C>>)
add_query("a", "B", <<["B", "BOOLEAN"], ["c", "INTEGER"], ["A", "INTEGER"], ["C", "INTEGER"], ["D", "INTEGER"], ["A", "BOOLEAN"]>>, "a")
add_class(d)
add_attribute("D", "c", "C")
add_class(c)
less_than
int_value (30)
bool_value (true)
conjunction
logical_negation
equals
add_call_chain(<<C,e,D,A,BOOLEAN,A>>)
bool_value (true)
add_attribute("INTEGER", "c", "BOOLEAN")
bool_value (false)
generate_java_code
generate_java_code
addition
bool_value (false)
add_call_chain(<<d,C,D,d>>)
