int_value (1)
add_command("e", "d", <<["a", "INTEGER"], ["INTEGER", "BOOLEAN"], ["C", "A"], ["A", "BOOLEAN"], ["c", "BOOLEAN"], ["d", "INTEGER"], ["c", "BOOLEAN"], ["INTEGER", "INTEGER"]>>)
add_command("d", "A", <<["a", "INTEGER"], ["d", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "BOOLEAN"]>>)
bool_value (true)
bool_value (false)
type_check
add_command("C", "BOOLEAN", <<["INTEGER", "BOOLEAN"], ["d", "B"], ["BOOLEAN", "e"], ["d", "INTEGER"], ["b", "BOOLEAN"], ["B", "D"], ["e", "B"], ["C", "INTEGER"]>>)
numerical_negation
int_value (37)
add_command("B", "a", <<["D", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["c", "C"], ["d", "INTEGER"]>>)
logical_negation
add_query("a", "D", <<["e", "INTEGER"], ["D", "d"], ["a", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["b", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["e", "INTEGER"]>>, "d")
add_attribute("b", "A", "INTEGER")
add_attribute("a", "d", "B")
numerical_negation
bool_value (true)
add_attribute("D", "C", "BOOLEAN")
add_query("c", "b", <<["A", "BOOLEAN"], ["C", "INTEGER"]>>, "e")
add_call_chain(<<B,b,D>>)
bool_value (false)
greater_than
add_class(c)
logical_negation
disjunction
bool_value (true)
add_query("D", "A", <<["D", "INTEGER"], ["b", "A"], ["BOOLEAN", "BOOLEAN"], ["INTEGER", "d"], ["e", "BOOLEAN"], ["e", "INTEGER"], ["INTEGER", "BOOLEAN"]>>, "INTEGER")
quotient
add_query("a", "C", <<["e", "INTEGER"], ["C", "BOOLEAN"], ["d", "BOOLEAN"], ["b", "BOOLEAN"], ["b", "INTEGER"], ["C", "INTEGER"], ["c", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>, "D")
add_call_chain(<<B,d,A>>)
bool_value (false)
add_attribute("d", "INTEGER", "INTEGER")
add_call_chain(<<b,A,C,C,B,B,e,D>>)
disjunction
int_value (24)
type_check
add_command("e", "e", <<["a", "BOOLEAN"], ["c", "A"], ["c", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["C", "c"], ["BOOLEAN", "INTEGER"], ["C", "INTEGER"], ["a", "INTEGER"]>>)
disjunction
add_call_chain(<<INTEGER,BOOLEAN,b,e,e,c,e>>)
int_value (16)
add_query("B", "A", <<["a", "A"], ["B", "INTEGER"], ["C", "BOOLEAN"], ["A", "b"], ["A", "BOOLEAN"], ["B", "d"], ["A", "A"]>>, "b")
multiplication
add_attribute("B", "d", "INTEGER")
int_value (21)
multiplication
add_call_chain(<<c,C,B,A,d,c>>)
add_call_chain(<<D,b,b,c,B,C>>)
add_query("e", "C", <<["C", "d"]>>, "A")
add_class(c)
int_value (6)
add_call_chain(<<b,d,b,c,D>>)
disjunction
numerical_negation
int_value (1)
quotient
add_call_chain(<<B>>)
numerical_negation
add_class(B)
add_call_chain(<<A,D,a,D,A,B,e>>)
add_class(B)
add_command("C", "A", <<["C", "e"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["b", "B"], ["a", "BOOLEAN"], ["A", "b"]>>)
int_value (7)
add_query("A", "b", <<["c", "D"], ["B", "B"], ["c", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "INTEGER"], ["INTEGER", "C"], ["b", "INTEGER"], ["d", "a"], ["d", "BOOLEAN"]>>, "A")
add_attribute("c", "C", "C")
conjunction
add_class(c)
add_call_chain(<<c,b,e,e,c,INTEGER,C,B,C>>)
add_attribute("BOOLEAN", "b", "INTEGER")
quotient
logical_negation
int_value (35)
numerical_negation
add_call_chain(<<B,INTEGER,a,B,B,INTEGER>>)
add_call_chain(<<D>>)
add_call_chain(<<d,b,D,C,C,A>>)
add_query("d", "c", <<["c", "C"], ["d", "c"]>>, "INTEGER")
add_class(a)
add_call_chain(<<D,c,BOOLEAN,D,D,B>>)
add_command("a", "c", <<["B", "BOOLEAN"], ["b", "a"], ["a", "BOOLEAN"]>>)
add_command("C", "B", <<["A", "INTEGER"], ["C", "BOOLEAN"]>>)
add_class(C)
disjunction
logical_negation
add_command("BOOLEAN", "a", <<["a", "B"], ["d", "INTEGER"]>>)
add_call_chain(<<C,C,INTEGER,a>>)
bool_value (false)
add_call_chain(<<a,c,B>>)
add_attribute("C", "D", "INTEGER")
add_call_chain(<<c,c,D,b,A,a,d>>)
type_check
add_call_chain(<<C,a>>)
multiplication
add_call_chain(<<C,e,C,a>>)
add_attribute("A", "D", "INTEGER")
add_attribute("B", "c", "BOOLEAN")
int_value (34)
int_value (25)
less_than
int_value (34)
quotient
add_query("A", "D", <<["e", "c"], ["b", "D"], ["A", "INTEGER"], ["c", "d"], ["e", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "c"], ["A", "b"]>>, "e")
type_check
logical_negation
generate_java_code
bool_value (true)
add_call_chain(<<D,e,b,D>>)
bool_value (true)
add_attribute("A", "A", "INTEGER")
int_value (45)
add_command("C", "D", <<["b", "BOOLEAN"], ["C", "INTEGER"], ["B", "INTEGER"]>>)
int_value (13)
int_value (33)
add_attribute("C", "A", "b")
less_than
less_than
generate_java_code
modulo
add_call_chain(<<c,INTEGER,c,C,a,d,b,c,A>>)
generate_java_code
conjunction
add_attribute("e", "A", "BOOLEAN")
logical_negation
bool_value (true)
add_call_chain(<<A,c,B,b,C,e>>)
equals
add_call_chain(<<A,d,INTEGER,A,C,INTEGER,BOOLEAN,A,B>>)
int_value (7)
add_query("b", "a", <<["D", "BOOLEAN"], ["c", "INTEGER"], ["c", "INTEGER"], ["A", "d"], ["d", "BOOLEAN"]>>, "e")
int_value (36)
add_attribute("INTEGER", "D", "BOOLEAN")
multiplication
generate_java_code
bool_value (false)
add_command("c", "c", <<["B", "D"]>>)
bool_value (false)
addition
add_call_chain(<<e,D,D,a,B,a,D,D>>)
add_class(C)
generate_java_code
add_call_chain(<<c,B,B>>)
add_command("c", "D", <<["a", "INTEGER"], ["D", "INTEGER"], ["a", "INTEGER"], ["C", "BOOLEAN"], ["a", "INTEGER"]>>)
add_call_chain(<<D,C,C,c,D,b,a>>)
generate_java_code
add_attribute("C", "C", "BOOLEAN")
greater_than
bool_value (true)
logical_negation
conjunction
add_call_chain(<<d,C,e,b>>)
bool_value (true)
add_command("c", "B", <<["B", "BOOLEAN"], ["C", "BOOLEAN"]>>)
add_query("B", "d", <<["e", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "BOOLEAN"]>>, "D")
bool_value (false)
logical_negation
add_command("A", "B", <<["C", "INTEGER"], ["a", "INTEGER"], ["a", "INTEGER"], ["e", "INTEGER"], ["b", "C"]>>)
add_call_chain(<<b,A,c,INTEGER,c>>)
add_call_chain(<<a>>)
add_call_chain(<<c,C,a,a>>)
int_value (12)
int_value (49)
numerical_negation
type_check
add_command("A", "A", <<["e", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["D", "B"], ["BOOLEAN", "BOOLEAN"]>>)
add_command("b", "c", <<["d", "INTEGER"], ["C", "INTEGER"], ["D", "b"], ["B", "INTEGER"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["c", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "a"]>>)
int_value (22)
add_call_chain(<<B,BOOLEAN,B,C,C,B,B,C,C>>)
add_class(C)
greater_than
addition
add_attribute("A", "INTEGER", "INTEGER")
int_value (33)
bool_value (false)
add_attribute("A", "a", "INTEGER")
logical_negation
add_call_chain(<<a,b,a,b,D,D>>)
add_query("BOOLEAN", "C", <<["c", "BOOLEAN"], ["e", "b"], ["INTEGER", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "a"]>>, "B")
modulo
add_call_chain(<<d,C,b,d,c,d,A,A,b>>)
generate_java_code
numerical_negation
add_call_chain(<<c,A>>)
quotient
add_query("e", "B", <<["A", "B"], ["D", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "BOOLEAN"], ["a", "B"], ["c", "BOOLEAN"]>>, "c")
add_attribute("INTEGER", "d", "A")
bool_value (true)
generate_java_code
add_command("c", "A", <<["a", "INTEGER"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["b", "INTEGER"], ["e", "e"], ["B", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "BOOLEAN"]>>)
numerical_negation
add_attribute("b", "BOOLEAN", "c")
add_query("B", "D", <<["B", "INTEGER"], ["c", "C"], ["d", "a"]>>, "C")
logical_negation
add_attribute("C", "C", "INTEGER")
add_query("d", "A", <<["d", "INTEGER"], ["D", "INTEGER"], ["e", "c"]>>, "B")
add_query("A", "a", <<["e", "A"], ["c", "D"], ["c", "INTEGER"], ["C", "INTEGER"]>>, "D")
add_attribute("A", "B", "BOOLEAN")
bool_value (false)
type_check
int_value (13)
type_check
add_class(D)
type_check
bool_value (false)
generate_java_code
int_value (44)
add_query("INTEGER", "A", <<["d", "BOOLEAN"], ["D", "INTEGER"], ["d", "d"], ["B", "INTEGER"], ["D", "INTEGER"], ["B", "INTEGER"]>>, "A")
numerical_negation
add_call_chain(<<C,c,B,A,b>>)
add_command("c", "B", <<["d", "INTEGER"], ["C", "INTEGER"], ["a", "b"], ["e", "INTEGER"], ["D", "BOOLEAN"], ["b", "BOOLEAN"], ["e", "INTEGER"], ["A", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
conjunction
add_command("e", "c", <<["BOOLEAN", "BOOLEAN"], ["e", "D"], ["C", "INTEGER"], ["INTEGER", "INTEGER"], ["A", "B"]>>)
add_query("C", "e", <<["B", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["B", "BOOLEAN"]>>, "b")
add_attribute("d", "D", "INTEGER")
add_call_chain(<<e,A,C,INTEGER,d,e,a,e>>)
conjunction
conjunction
add_query("D", "b", <<["d", "INTEGER"], ["B", "INTEGER"]>>, "e")
logical_negation
int_value (39)
add_call_chain(<<C,e,d,C,A,a>>)
logical_negation
add_command("B", "B", <<["D", "A"], ["a", "BOOLEAN"], ["B", "INTEGER"], ["A", "BOOLEAN"]>>)
type_check
bool_value (true)
bool_value (true)
logical_negation
add_call_chain(<<B>>)
type_check
type_check
numerical_negation
generate_java_code
add_command("A", "b", <<["c", "a"], ["B", "a"], ["B", "BOOLEAN"], ["e", "a"], ["c", "b"]>>)
add_call_chain(<<A,a,A,e,INTEGER,a,C>>)
add_query("c", "b", <<["D", "A"], ["B", "B"], ["A", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["a", "a"], ["b", "d"], ["d", "A"]>>, "D")
add_attribute("D", "C", "BOOLEAN")
bool_value (false)
add_attribute("c", "d", "BOOLEAN")
add_query("B", "C", <<["c", "b"]>>, "A")
type_check
add_query("BOOLEAN", "D", <<["C", "B"], ["INTEGER", "INTEGER"], ["d", "BOOLEAN"], ["B", "D"], ["B", "A"], ["D", "INTEGER"], ["C", "b"]>>, "e")
add_attribute("d", "INTEGER", "INTEGER")
add_attribute("A", "A", "BOOLEAN")
add_call_chain(<<d,c,INTEGER>>)
