add_attribute("C", "C", "INTEGER")
add_query("INTEGER", "e", <<["d", "BOOLEAN"], ["A", "e"], ["e", "INTEGER"], ["b", "INTEGER"], ["a", "e"], ["C", "INTEGER"], ["C", "BOOLEAN"]>>, "e")
add_query("B", "e", <<["C", "BOOLEAN"], ["b", "BOOLEAN"], ["b", "BOOLEAN"], ["e", "C"], ["D", "INTEGER"], ["c", "INTEGER"], ["D", "INTEGER"], ["BOOLEAN", "b"]>>, "C")
bool_value (true)
add_command("D", "A", <<["A", "BOOLEAN"], ["C", "D"]>>)
modulo
bool_value (true)
int_value (12)
add_call_chain(<<c,d,D,C,A,b>>)
add_command("C", "A", <<["A", "A"], ["a", "INTEGER"], ["d", "b"], ["b", "c"], ["B", "BOOLEAN"], ["c", "INTEGER"], ["c", "a"], ["C", "INTEGER"]>>)
add_attribute("C", "d", "B")
numerical_negation
numerical_negation
add_call_chain(<<B,d,c>>)
type_check
add_call_chain(<<A,d,A,B>>)
add_command("e", "A", <<["a", "INTEGER"], ["c", "BOOLEAN"], ["b", "BOOLEAN"], ["INTEGER", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["c", "BOOLEAN"], ["c", "BOOLEAN"]>>)
generate_java_code
add_attribute("c", "A", "a")
add_query("C", "A", <<["b", "A"], ["B", "D"], ["b", "B"], ["A", "D"], ["d", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "c"], ["e", "BOOLEAN"], ["C", "A"]>>, "c")
add_class(BOOLEAN)
add_attribute("c", "BOOLEAN", "BOOLEAN")
int_value (17)
conjunction
conjunction
int_value (31)
bool_value (false)
add_call_chain(<<B,INTEGER>>)
int_value (17)
numerical_negation
bool_value (true)
disjunction
less_than
modulo
add_attribute("B", "A", "INTEGER")
add_command("b", "A", <<["a", "BOOLEAN"], ["a", "c"], ["e", "BOOLEAN"]>>)
add_call_chain(<<D,e,e,A,e,b,B>>)
add_command("e", "A", <<["INTEGER", "d"], ["D", "BOOLEAN"], ["c", "D"], ["INTEGER", "INTEGER"], ["e", "INTEGER"], ["e", "A"], ["INTEGER", "INTEGER"]>>)
numerical_negation
add_command("D", "C", <<["INTEGER", "B"], ["B", "INTEGER"], ["d", "BOOLEAN"], ["A", "C"], ["a", "INTEGER"], ["d", "BOOLEAN"], ["c", "INTEGER"]>>)
add_call_chain(<<D,B>>)
add_call_chain(<<a,BOOLEAN>>)
addition
add_attribute("e", "a", "INTEGER")
add_query("b", "INTEGER", <<["D", "a"], ["e", "BOOLEAN"]>>, "c")
generate_java_code
add_call_chain(<<e,C,INTEGER,b,d,INTEGER,B,A>>)
quotient
bool_value (false)
add_command("e", "c", <<["A", "INTEGER"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["b", "BOOLEAN"], ["b", "e"]>>)
add_call_chain(<<INTEGER,A,INTEGER,e,B,D,a,B>>)
add_call_chain(<<c>>)
add_query("D", "BOOLEAN", <<["e", "BOOLEAN"], ["d", "B"], ["INTEGER", "INTEGER"], ["c", "BOOLEAN"], ["B", "e"], ["B", "C"], ["B", "INTEGER"], ["BOOLEAN", "B"]>>, "D")
numerical_negation
logical_negation
int_value (25)
generate_java_code
equals
int_value (22)
add_command("d", "C", <<["B", "BOOLEAN"], ["D", "INTEGER"], ["C", "C"]>>)
add_attribute("B", "D", "e")
add_command("e", "b", <<["A", "A"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["B", "D"], ["D", "BOOLEAN"]>>)
add_command("B", "B", <<["D", "INTEGER"], ["b", "BOOLEAN"]>>)
add_attribute("d", "C", "BOOLEAN")
type_check
add_class(BOOLEAN)
add_query("B", "c", <<["a", "a"], ["D", "BOOLEAN"]>>, "B")
numerical_negation
bool_value (true)
add_call_chain(<<a>>)
bool_value (false)
add_command("B", "C", <<["D", "INTEGER"], ["A", "INTEGER"], ["d", "BOOLEAN"], ["A", "INTEGER"], ["A", "D"], ["e", "BOOLEAN"]>>)
add_query("a", "C", <<["a", "INTEGER"], ["A", "BOOLEAN"], ["d", "C"], ["b", "c"], ["INTEGER", "INTEGER"], ["a", "b"]>>, "A")
numerical_negation
numerical_negation
quotient
numerical_negation
add_attribute("a", "C", "INTEGER")
add_query("C", "B", <<["D", "BOOLEAN"], ["INTEGER", "INTEGER"], ["D", "INTEGER"], ["B", "a"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "BOOLEAN"]>>, "C")
add_call_chain(<<INTEGER,D,C,b>>)
bool_value (true)
bool_value (false)
quotient
less_than
add_query("B", "D", <<["d", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "INTEGER"], ["B", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["D", "c"]>>, "BOOLEAN")
bool_value (false)
add_command("d", "e", <<["d", "e"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["d", "a"]>>)
add_attribute("a", "C", "INTEGER")
logical_negation
int_value (48)
logical_negation
add_call_chain(<<d>>)
add_query("C", "c", <<["b", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "INTEGER"]>>, "b")
int_value (24)
add_call_chain(<<D,BOOLEAN>>)
add_command("e", "C", <<["A", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["c", "INTEGER"], ["D", "INTEGER"], ["D", "INTEGER"], ["BOOLEAN", "C"], ["b", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
bool_value (true)
add_query("b", "b", <<["C", "c"], ["b", "a"]>>, "C")
logical_negation
add_command("a", "BOOLEAN", <<["C", "INTEGER"], ["B", "INTEGER"], ["c", "INTEGER"]>>)
add_call_chain(<<D>>)
numerical_negation
disjunction
int_value (37)
add_class(a)
bool_value (true)
disjunction
numerical_negation
add_call_chain(<<b>>)
add_call_chain(<<a,b,b,D,a>>)
add_command("b", "C", <<["A", "BOOLEAN"], ["d", "a"], ["e", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "B"], ["D", "BOOLEAN"], ["C", "INTEGER"]>>)
bool_value (true)
addition
numerical_negation
greater_than
logical_negation
add_call_chain(<<a,B,D,c,c,D,e,e,d>>)
conjunction
add_command("A", "a", <<["b", "INTEGER"]>>)
numerical_negation
add_class(C)
numerical_negation
add_call_chain(<<b,INTEGER,D,a,BOOLEAN,B,c>>)
add_attribute("b", "b", "BOOLEAN")
add_attribute("e", "A", "BOOLEAN")
add_call_chain(<<e,INTEGER,A,B,d,D,B,A>>)
bool_value (true)
logical_negation
add_command("b", "INTEGER", <<["B", "INTEGER"], ["B", "INTEGER"], ["e", "e"], ["B", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>)
add_query("b", "D", <<["d", "INTEGER"], ["c", "BOOLEAN"], ["A", "INTEGER"], ["d", "INTEGER"], ["b", "BOOLEAN"]>>, "a")
type_check
bool_value (false)
int_value (45)
add_query("INTEGER", "C", <<["b", "INTEGER"], ["a", "BOOLEAN"], ["D", "d"], ["a", "A"], ["INTEGER", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "BOOLEAN"]>>, "INTEGER")
addition
add_call_chain(<<a,A,INTEGER,BOOLEAN,D,b>>)
bool_value (false)
conjunction
type_check
add_command("C", "a", <<["B", "B"], ["b", "a"], ["c", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["d", "A"], ["b", "BOOLEAN"], ["d", "INTEGER"]>>)
logical_negation
add_call_chain(<<B,C,b,e>>)
int_value (34)
add_attribute("B", "e", "a")
add_class(e)
numerical_negation
type_check
numerical_negation
add_command("B", "B", <<["A", "BOOLEAN"]>>)
add_class(B)
add_call_chain(<<INTEGER,b,C,INTEGER>>)
generate_java_code
add_call_chain(<<B,e,a,C,a>>)
add_attribute("D", "D", "C")
conjunction
add_call_chain(<<b,D,C,D,A>>)
equals
add_command("B", "d", <<["D", "BOOLEAN"]>>)
add_attribute("e", "A", "INTEGER")
add_query("INTEGER", "b", <<["D", "A"]>>, "d")
add_call_chain(<<BOOLEAN,d,B,D,b,a>>)
bool_value (true)
add_attribute("A", "C", "BOOLEAN")
add_command("INTEGER", "B", <<["BOOLEAN", "BOOLEAN"], ["A", "D"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["d", "BOOLEAN"]>>)
add_call_chain(<<D,D,INTEGER,e>>)
add_command("c", "d", <<["A", "INTEGER"], ["c", "BOOLEAN"], ["b", "b"], ["B", "INTEGER"], ["e", "INTEGER"], ["B", "INTEGER"]>>)
less_than
add_call_chain(<<D,D,B,e,BOOLEAN>>)
add_class(A)
quotient
add_query("B", "C", <<["c", "BOOLEAN"], ["BOOLEAN", "b"], ["d", "C"], ["BOOLEAN", "D"], ["a", "A"], ["b", "INTEGER"]>>, "a")
add_call_chain(<<A,e,c,d>>)
add_query("a", "a", <<["c", "INTEGER"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["d", "BOOLEAN"], ["a", "INTEGER"], ["b", "BOOLEAN"]>>, "INTEGER")
add_call_chain(<<d,D,b,INTEGER,b,B,d,b>>)
type_check
add_call_chain(<<INTEGER,A,b,d,C,a,B,D,A>>)
int_value (47)
add_class(D)
add_command("BOOLEAN", "C", <<["e", "BOOLEAN"]>>)
bool_value (false)
add_query("C", "A", <<["c", "e"], ["A", "BOOLEAN"]>>, "C")
less_than
add_command("A", "a", <<["b", "INTEGER"], ["A", "INTEGER"]>>)
bool_value (false)
logical_negation
generate_java_code
greater_than
add_command("d", "C", <<["D", "BOOLEAN"], ["e", "INTEGER"], ["e", "INTEGER"]>>)
add_attribute("b", "b", "BOOLEAN")
type_check
add_query("D", "A", <<["B", "D"]>>, "c")
add_class(b)
numerical_negation
add_command("b", "a", <<["a", "BOOLEAN"], ["c", "BOOLEAN"], ["d", "a"], ["B", "INTEGER"], ["BOOLEAN", "a"]>>)
logical_negation
add_class(c)
add_query("INTEGER", "B", <<["C", "BOOLEAN"], ["b", "INTEGER"], ["B", "D"]>>, "D")
bool_value (false)
conjunction
int_value (44)
int_value (16)
add_call_chain(<<c>>)
add_call_chain(<<INTEGER,BOOLEAN,c>>)
