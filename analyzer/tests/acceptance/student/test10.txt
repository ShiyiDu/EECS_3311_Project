disjunction
logical_negation
bool_value (false)
add_class(e)
numerical_negation
type_check
add_call_chain(<<e,C,A,C,C>>)
numerical_negation
add_class(B)
add_query("a", "D", <<["C", "INTEGER"], ["d", "INTEGER"], ["B", "INTEGER"], ["INTEGER", "INTEGER"], ["B", "BOOLEAN"], ["D", "INTEGER"], ["a", "INTEGER"], ["A", "INTEGER"]>>, "A")
add_call_chain(<<d,e,a,A,BOOLEAN,A,A,C>>)
generate_java_code
add_command("b", "a", <<["a", "BOOLEAN"], ["c", "B"], ["INTEGER", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "D"]>>)
type_check
equals
add_call_chain(<<b,e,A,D,A,B,B,c,e>>)
numerical_negation
type_check
add_call_chain(<<A,INTEGER,a,c,c,D,e,e>>)
numerical_negation
conjunction
logical_negation
int_value (30)
equals
type_check
type_check
add_class(D)
add_call_chain(<<C,e,c,e,C,e,a,B,C>>)
add_call_chain(<<c,D>>)
add_call_chain(<<e,b>>)
add_attribute("D", "C", "D")
bool_value (false)
add_command("INTEGER", "D", <<["BOOLEAN", "INTEGER"], ["b", "INTEGER"]>>)
add_query("D", "B", <<["c", "INTEGER"], ["C", "BOOLEAN"], ["e", "INTEGER"], ["d", "BOOLEAN"], ["C", "d"], ["INTEGER", "D"], ["b", "BOOLEAN"], ["A", "INTEGER"], ["INTEGER", "BOOLEAN"]>>, "C")
quotient
add_call_chain(<<b,B,b,e,a,C>>)
numerical_negation
add_call_chain(<<c,a>>)
type_check
bool_value (true)
int_value (9)
type_check
multiplication
add_class(C)
add_attribute("A", "e", "INTEGER")
bool_value (true)
add_call_chain(<<b>>)
add_command("INTEGER", "a", <<["b", "C"], ["b", "BOOLEAN"], ["D", "c"], ["d", "BOOLEAN"], ["C", "A"], ["C", "C"], ["INTEGER", "e"], ["A", "D"]>>)
add_attribute("D", "INTEGER", "INTEGER")
numerical_negation
add_attribute("C", "e", "INTEGER")
type_check
add_attribute("B", "b", "A")
logical_negation
generate_java_code
bool_value (false)
logical_negation
bool_value (false)
add_query("e", "INTEGER", <<["d", "INTEGER"], ["A", "BOOLEAN"]>>, "C")
equals
bool_value (false)
add_command("b", "A", <<["e", "d"], ["A", "D"], ["d", "d"], ["a", "D"], ["b", "D"], ["D", "C"], ["INTEGER", "BOOLEAN"], ["c", "INTEGER"]>>)
add_attribute("b", "e", "C")
int_value (3)
add_query("B", "e", <<["c", "BOOLEAN"], ["A", "BOOLEAN"]>>, "B")
quotient
add_call_chain(<<d,C>>)
numerical_negation
add_command("A", "C", <<["e", "BOOLEAN"], ["A", "a"], ["A", "INTEGER"], ["a", "BOOLEAN"]>>)
add_attribute("INTEGER", "BOOLEAN", "BOOLEAN")
type_check
numerical_negation
add_attribute("INTEGER", "c", "D")
add_call_chain(<<INTEGER,C,b,c,C,BOOLEAN>>)
add_call_chain(<<b,b>>)
int_value (44)
add_command("e", "e", <<["A", "BOOLEAN"], ["c", "INTEGER"]>>)
conjunction
add_call_chain(<<D,B,C,C,a,INTEGER,e>>)
add_call_chain(<<D,A,d,b>>)
add_class(b)
add_query("c", "B", <<["C", "d"], ["A", "INTEGER"], ["e", "INTEGER"], ["e", "a"], ["B", "INTEGER"], ["B", "INTEGER"], ["A", "BOOLEAN"]>>, "e")
add_command("e", "C", <<["e", "INTEGER"], ["B", "A"], ["D", "INTEGER"], ["A", "B"], ["a", "BOOLEAN"], ["B", "c"], ["c", "INTEGER"]>>)
bool_value (true)
add_call_chain(<<a,d,b,B,d>>)
disjunction
add_attribute("c", "b", "BOOLEAN")
add_query("A", "D", <<["e", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["b", "INTEGER"], ["B", "INTEGER"], ["b", "BOOLEAN"], ["D", "a"]>>, "BOOLEAN")
multiplication
add_class(B)
subtraction
add_command("D", "b", <<["b", "INTEGER"], ["INTEGER", "INTEGER"], ["A", "d"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["D", "INTEGER"], ["a", "INTEGER"], ["d", "INTEGER"]>>)
add_call_chain(<<BOOLEAN,B,B,c,D,e,D>>)
type_check
logical_negation
generate_java_code
add_command("a", "d", <<["e", "B"], ["A", "INTEGER"]>>)
add_command("e", "c", <<["INTEGER", "INTEGER"], ["b", "BOOLEAN"], ["INTEGER", "B"], ["C", "B"], ["a", "BOOLEAN"]>>)
int_value (22)
add_command("D", "INTEGER", <<["d", "INTEGER"], ["D", "BOOLEAN"], ["B", "c"], ["C", "e"], ["B", "BOOLEAN"]>>)
add_command("INTEGER", "C", <<["INTEGER", "INTEGER"], ["D", "B"], ["B", "d"], ["C", "a"], ["A", "BOOLEAN"], ["d", "INTEGER"], ["d", "B"], ["c", "INTEGER"]>>)
type_check
int_value (34)
int_value (20)
logical_negation
int_value (29)
add_command("e", "c", <<["D", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "b"], ["B", "e"]>>)
int_value (11)
add_command("B", "d", <<["B", "INTEGER"], ["INTEGER", "INTEGER"], ["D", "INTEGER"], ["D", "INTEGER"], ["b", "INTEGER"]>>)
numerical_negation
add_attribute("B", "d", "INTEGER")
add_call_chain(<<a,A,c,A,b,B,D>>)
int_value (25)
add_class(B)
bool_value (true)
add_query("D", "b", <<["e", "BOOLEAN"], ["c", "INTEGER"], ["INTEGER", "INTEGER"], ["B", "INTEGER"], ["A", "INTEGER"], ["INTEGER", "BOOLEAN"], ["b", "b"]>>, "e")
add_query("b", "c", <<["B", "INTEGER"], ["c", "C"]>>, "b")
numerical_negation
quotient
add_call_chain(<<d,D,B,d,A,a,e,a,B>>)
bool_value (true)
numerical_negation
int_value (17)
int_value (29)
add_class(C)
add_call_chain(<<e,a,d,B,c,C>>)
add_attribute("A", "C", "BOOLEAN")
int_value (24)
addition
equals
add_query("c", "b", <<["b", "INTEGER"]>>, "b")
add_class(a)
add_command("A", "d", <<["e", "A"], ["d", "INTEGER"]>>)
generate_java_code
add_attribute("D", "D", "INTEGER")
less_than
add_call_chain(<<C,B,e,A,C,B,INTEGER>>)
add_command("B", "c", <<["A", "INTEGER"]>>)
less_than
add_class(BOOLEAN)
add_call_chain(<<B,d,A,C,d>>)
add_command("d", "e", <<["e", "C"], ["b", "BOOLEAN"], ["INTEGER", "INTEGER"]>>)
bool_value (false)
add_attribute("D", "d", "INTEGER")
add_query("e", "e", <<["B", "BOOLEAN"], ["A", "INTEGER"], ["b", "BOOLEAN"], ["e", "B"], ["b", "BOOLEAN"]>>, "b")
add_call_chain(<<d,c>>)
int_value (31)
add_query("a", "d", <<["c", "BOOLEAN"], ["e", "D"], ["D", "INTEGER"], ["e", "INTEGER"], ["B", "INTEGER"], ["e", "INTEGER"], ["A", "b"]>>, "D")
add_call_chain(<<C,b,d,a,e>>)
add_attribute("B", "D", "BOOLEAN")
logical_negation
add_call_chain(<<b,A,A,C>>)
add_call_chain(<<C,D,BOOLEAN,A,D,C,e,a>>)
numerical_negation
quotient
int_value (23)
add_command("C", "B", <<["INTEGER", "C"], ["d", "BOOLEAN"], ["B", "INTEGER"], ["C", "BOOLEAN"], ["a", "INTEGER"]>>)
add_call_chain(<<BOOLEAN,A,d,c,D,B,e,BOOLEAN,B>>)
bool_value (true)
logical_negation
add_call_chain(<<c,d>>)
less_than
disjunction
add_command("e", "C", <<["A", "BOOLEAN"], ["INTEGER", "INTEGER"]>>)
add_call_chain(<<a>>)
add_call_chain(<<d,B>>)
logical_negation
add_call_chain(<<c>>)
add_command("e", "b", <<["D", "C"], ["b", "d"]>>)
add_call_chain(<<C,B,A,b,e,INTEGER,B>>)
numerical_negation
add_command("C", "a", <<["D", "BOOLEAN"], ["b", "INTEGER"], ["e", "INTEGER"], ["a", "BOOLEAN"], ["INTEGER", "INTEGER"], ["b", "INTEGER"]>>)
add_call_chain(<<e,A,d,c,a,d,D,e>>)
type_check
add_query("C", "A", <<["B", "INTEGER"], ["BOOLEAN", "c"], ["D", "A"]>>, "B")
logical_negation
conjunction
add_call_chain(<<A,B,A,b>>)
add_attribute("e", "e", "INTEGER")
add_attribute("e", "BOOLEAN", "a")
logical_negation
add_call_chain(<<d,e,D,a,b,c,c>>)
numerical_negation
addition
add_call_chain(<<C,d,c,b,BOOLEAN,A>>)
add_call_chain(<<A>>)
add_query("e", "BOOLEAN", <<["b", "c"], ["d", "C"], ["c", "INTEGER"], ["C", "c"]>>, "e")
add_attribute("c", "A", "INTEGER")
int_value (43)
bool_value (true)
add_attribute("b", "b", "A")
add_call_chain(<<BOOLEAN>>)
add_query("a", "C", <<["A", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "c"]>>, "A")
add_call_chain(<<B,a,b,INTEGER,b,C,b,B,a>>)
subtraction
logical_negation
add_query("e", "d", <<["C", "INTEGER"]>>, "a")
add_query("A", "A", <<["e", "INTEGER"], ["a", "A"], ["d", "INTEGER"], ["B", "INTEGER"], ["B", "BOOLEAN"], ["C", "d"]>>, "a")
add_call_chain(<<b,a,d>>)
int_value (31)
quotient
bool_value (false)
add_call_chain(<<c,B,e,A,C,b,A>>)
conjunction
less_than
numerical_negation
add_attribute("A", "B", "BOOLEAN")
generate_java_code
add_attribute("C", "INTEGER", "BOOLEAN")
add_attribute("c", "c", "C")
add_call_chain(<<e,B,C,c,b>>)
add_call_chain(<<e,b,D,D,e,e>>)
add_call_chain(<<c,c,d,B,A,b,D,b>>)
generate_java_code
int_value (14)
generate_java_code
conjunction
int_value (16)
disjunction
add_query("a", "B", <<["A", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["e", "INTEGER"], ["A", "BOOLEAN"]>>, "c")
add_call_chain(<<a,c,C,a>>)
add_query("C", "a", <<["B", "INTEGER"], ["e", "C"], ["a", "INTEGER"], ["a", "BOOLEAN"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["e", "INTEGER"], ["a", "INTEGER"]>>, "INTEGER")
add_class(B)
add_call_chain(<<a,B,C,BOOLEAN,c,B,a>>)
numerical_negation
add_query("B", "d", <<["D", "BOOLEAN"], ["a", "c"], ["D", "e"]>>, "b")
greater_than
logical_negation
bool_value (false)
add_command("INTEGER", "BOOLEAN", <<["c", "INTEGER"], ["d", "BOOLEAN"], ["c", "BOOLEAN"]>>)
add_class(d)
add_command("BOOLEAN", "A", <<["e", "C"]>>)
bool_value (false)
logical_negation
logical_negation
add_query("e", "C", <<["e", "BOOLEAN"], ["a", "INTEGER"], ["b", "BOOLEAN"], ["D", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["c", "C"], ["b", "BOOLEAN"], ["c", "B"], ["a", "INTEGER"]>>, "A")
generate_java_code
bool_value (false)
modulo
add_call_chain(<<d,a,e,D,c,d,b,C>>)
bool_value (false)
logical_negation
type_check
add_call_chain(<<C,A,e,b,e,e,d,d,C>>)
add_attribute("B", "A", "INTEGER")
bool_value (true)
conjunction
