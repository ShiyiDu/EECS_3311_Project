add_query("BOOLEAN", "d", <<["a", "BOOLEAN"], ["e", "A"]>>, "d")
int_value (40)
bool_value (false)
add_query("C", "D", <<["A", "a"], ["D", "INTEGER"], ["D", "INTEGER"]>>, "A")
add_attribute("D", "INTEGER", "BOOLEAN")
int_value (28)
addition
generate_java_code
add_class(C)
bool_value (true)
logical_negation
greater_than
type_check
bool_value (false)
numerical_negation
add_command("B", "A", <<["b", "b"], ["d", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "BOOLEAN"], ["d", "INTEGER"]>>)
numerical_negation
int_value (9)
int_value (15)
add_attribute("c", "c", "INTEGER")
add_class(C)
add_call_chain(<<d,d,c,B,c,INTEGER>>)
numerical_negation
int_value (16)
generate_java_code
generate_java_code
numerical_negation
addition
equals
int_value (43)
add_call_chain(<<C,e,B,INTEGER,d,D,B,B,c>>)
logical_negation
type_check
generate_java_code
add_call_chain(<<B>>)
add_attribute("d", "B", "BOOLEAN")
add_query("A", "B", <<["C", "c"], ["e", "BOOLEAN"], ["d", "INTEGER"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["A", "INTEGER"], ["a", "D"], ["INTEGER", "INTEGER"]>>, "e")
type_check
add_command("B", "C", <<["B", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "INTEGER"], ["a", "INTEGER"], ["e", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "C"], ["C", "INTEGER"]>>)
add_query("a", "e", <<["d", "a"], ["c", "INTEGER"]>>, "C")
add_call_chain(<<C,C,a,a,d>>)
add_command("e", "B", <<["D", "D"], ["b", "C"]>>)
bool_value (true)
add_command("B", "B", <<["a", "BOOLEAN"], ["e", "INTEGER"], ["c", "d"], ["b", "A"], ["b", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>)
add_call_chain(<<D>>)
add_call_chain(<<e,d,a,C,a,D,e,e>>)
add_call_chain(<<c,a,B,B>>)
add_command("a", "e", <<["A", "INTEGER"], ["C", "B"], ["B", "d"], ["d", "BOOLEAN"], ["A", "INTEGER"]>>)
add_call_chain(<<B,C,a,D>>)
add_query("A", "A", <<["B", "e"], ["c", "B"], ["c", "INTEGER"], ["D", "BOOLEAN"], ["BOOLEAN", "B"], ["A", "c"], ["d", "BOOLEAN"]>>, "C")
multiplication
add_call_chain(<<INTEGER>>)
disjunction
add_class(b)
add_command("a", "D", <<["C", "INTEGER"]>>)
add_command("c", "D", <<["c", "a"], ["A", "INTEGER"], ["A", "BOOLEAN"]>>)
logical_negation
add_query("A", "a", <<["D", "D"], ["a", "BOOLEAN"]>>, "B")
int_value (9)
add_call_chain(<<a,INTEGER,a,a,a>>)
add_query("A", "C", <<["d", "BOOLEAN"], ["c", "BOOLEAN"], ["e", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["INTEGER", "C"], ["c", "INTEGER"], ["b", "INTEGER"]>>, "A")
multiplication
type_check
add_command("D", "b", <<["a", "B"]>>)
bool_value (true)
add_command("e", "d", <<["e", "INTEGER"]>>)
bool_value (false)
add_query("INTEGER", "C", <<["C", "INTEGER"], ["a", "INTEGER"], ["c", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>, "D")
int_value (4)
add_query("B", "D", <<["C", "BOOLEAN"], ["A", "INTEGER"], ["BOOLEAN", "a"], ["b", "BOOLEAN"], ["e", "D"], ["e", "A"]>>, "b")
int_value (18)
add_call_chain(<<A,INTEGER,A,d,A>>)
add_class(c)
numerical_negation
add_attribute("c", "B", "BOOLEAN")
bool_value (false)
numerical_negation
multiplication
int_value (33)
bool_value (false)
generate_java_code
add_attribute("b", "C", "INTEGER")
multiplication
type_check
add_command("B", "INTEGER", <<["D", "e"], ["a", "D"], ["a", "INTEGER"], ["e", "a"], ["b", "b"]>>)
greater_than
logical_negation
int_value (41)
add_query("D", "C", <<["A", "D"], ["e", "INTEGER"], ["C", "INTEGER"], ["INTEGER", "INTEGER"], ["b", "BOOLEAN"], ["B", "BOOLEAN"]>>, "B")
add_query("D", "INTEGER", <<["B", "BOOLEAN"], ["D", "b"], ["b", "INTEGER"], ["D", "INTEGER"], ["D", "INTEGER"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["e", "INTEGER"], ["C", "INTEGER"]>>, "c")
generate_java_code
add_class(A)
add_call_chain(<<B>>)
add_call_chain(<<BOOLEAN,d,e,d,A,b,a,e,b>>)
add_class(A)
add_call_chain(<<d,D,D,b,D,c,e,b,C>>)
add_command("a", "d", <<["e", "B"], ["BOOLEAN", "BOOLEAN"], ["a", "D"], ["e", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "INTEGER"]>>)
add_class(B)
logical_negation
add_class(C)
disjunction
greater_than
generate_java_code
type_check
int_value (2)
add_class(a)
bool_value (false)
add_class(b)
numerical_negation
greater_than
add_class(A)
int_value (38)
type_check
bool_value (false)
int_value (30)
bool_value (true)
add_call_chain(<<B,A,C,C,c,INTEGER,INTEGER,D>>)
add_query("D", "BOOLEAN", <<["b", "BOOLEAN"], ["D", "INTEGER"], ["b", "BOOLEAN"], ["C", "d"], ["c", "INTEGER"], ["c", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "c"]>>, "c")
add_attribute("C", "C", "BOOLEAN")
bool_value (true)
generate_java_code
add_class(D)
add_call_chain(<<B>>)
add_command("a", "D", <<["c", "INTEGER"], ["A", "B"], ["e", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "INTEGER"], ["B", "BOOLEAN"], ["C", "BOOLEAN"]>>)
numerical_negation
add_query("A", "D", <<["c", "BOOLEAN"], ["A", "c"], ["B", "INTEGER"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "INTEGER"]>>, "A")
logical_negation
add_call_chain(<<INTEGER,BOOLEAN,b,A,c,D,BOOLEAN,d>>)
add_call_chain(<<b,d,BOOLEAN,A,D>>)
int_value (29)
logical_negation
int_value (16)
logical_negation
logical_negation
add_command("b", "d", <<["c", "INTEGER"], ["INTEGER", "INTEGER"], ["c", "INTEGER"], ["D", "D"], ["a", "d"], ["e", "INTEGER"], ["D", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>)
add_attribute("INTEGER", "b", "INTEGER")
add_call_chain(<<BOOLEAN,INTEGER,BOOLEAN>>)
add_call_chain(<<c,b,INTEGER,d,A,D,a>>)
add_command("INTEGER", "b", <<["a", "BOOLEAN"], ["INTEGER", "INTEGER"], ["a", "BOOLEAN"], ["a", "e"], ["C", "INTEGER"], ["c", "INTEGER"]>>)
add_call_chain(<<D,a>>)
bool_value (false)
add_query("B", "B", <<["c", "INTEGER"], ["D", "BOOLEAN"]>>, "c")
type_check
int_value (47)
disjunction
bool_value (true)
bool_value (true)
add_call_chain(<<e,A,INTEGER,a,d,B,C>>)
less_than
add_attribute("C", "e", "D")
numerical_negation
int_value (30)
add_command("d", "A", <<["e", "d"], ["INTEGER", "INTEGER"]>>)
add_query("e", "e", <<["A", "BOOLEAN"], ["a", "d"], ["D", "BOOLEAN"], ["a", "BOOLEAN"], ["INTEGER", "INTEGER"], ["b", "BOOLEAN"]>>, "C")
add_command("a", "BOOLEAN", <<["B", "c"], ["D", "b"], ["a", "C"], ["BOOLEAN", "BOOLEAN"]>>)
numerical_negation
generate_java_code
add_command("c", "B", <<["B", "INTEGER"], ["c", "INTEGER"], ["BOOLEAN", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>)
add_call_chain(<<a,e,A,B,e,INTEGER,B,D,A>>)
bool_value (true)
add_class(A)
add_call_chain(<<BOOLEAN,C,e,C>>)
type_check
greater_than
logical_negation
add_query("D", "a", <<["B", "INTEGER"], ["C", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["b", "D"], ["A", "INTEGER"]>>, "A")
numerical_negation
add_call_chain(<<A,c,A,e,B,c,c>>)
numerical_negation
logical_negation
quotient
add_call_chain(<<c,d,e,INTEGER,C,a,c,a>>)
add_attribute("BOOLEAN", "D", "BOOLEAN")
add_attribute("d", "C", "INTEGER")
add_call_chain(<<c,e,d>>)
add_attribute("d", "c", "INTEGER")
generate_java_code
add_command("b", "C", <<["A", "INTEGER"], ["INTEGER", "a"], ["INTEGER", "BOOLEAN"]>>)
add_call_chain(<<C,B,BOOLEAN,B,A>>)
type_check
type_check
add_attribute("A", "C", "D")
add_call_chain(<<b,e,b>>)
add_call_chain(<<e,B>>)
add_command("e", "INTEGER", <<["d", "BOOLEAN"]>>)
add_attribute("C", "B", "c")
bool_value (false)
add_command("D", "D", <<["c", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "INTEGER"], ["d", "C"], ["d", "B"], ["C", "INTEGER"], ["a", "BOOLEAN"], ["A", "INTEGER"], ["c", "INTEGER"]>>)
multiplication
less_than
add_query("A", "C", <<["b", "A"], ["D", "INTEGER"], ["A", "INTEGER"]>>, "A")
logical_negation
int_value (2)
bool_value (true)
add_query("BOOLEAN", "b", <<["c", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "INTEGER"], ["e", "INTEGER"], ["d", "INTEGER"], ["A", "BOOLEAN"], ["e", "BOOLEAN"]>>, "b")
generate_java_code
less_than
add_call_chain(<<C,c,B,C,B,b>>)
add_attribute("INTEGER", "a", "BOOLEAN")
bool_value (true)
numerical_negation
add_class(BOOLEAN)
generate_java_code
add_query("D", "INTEGER", <<["e", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["B", "INTEGER"], ["c", "INTEGER"], ["INTEGER", "BOOLEAN"], ["D", "BOOLEAN"]>>, "d")
generate_java_code
logical_negation
add_call_chain(<<D,A,d,b,B,D>>)
disjunction
int_value (41)
add_call_chain(<<D,D,e>>)
bool_value (false)
type_check
logical_negation
logical_negation
int_value (19)
add_attribute("b", "a", "BOOLEAN")
numerical_negation
add_attribute("d", "d", "BOOLEAN")
add_attribute("b", "BOOLEAN", "C")
add_attribute("C", "a", "B")
type_check
generate_java_code
add_attribute("c", "b", "B")
subtraction
bool_value (false)
int_value (25)
add_call_chain(<<INTEGER,INTEGER,C,e,c,D,b,c,B>>)
add_attribute("b", "D", "BOOLEAN")
conjunction
modulo
add_class(B)
logical_negation
generate_java_code
type_check
add_query("d", "C", <<["B", "b"], ["D", "INTEGER"], ["D", "INTEGER"], ["B", "A"], ["INTEGER", "INTEGER"], ["d", "B"], ["C", "INTEGER"], ["c", "e"]>>, "D")
add_call_chain(<<b,d,INTEGER>>)
bool_value (false)
add_query("e", "c", <<["e", "INTEGER"], ["A", "D"], ["d", "INTEGER"], ["a", "e"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["B", "BOOLEAN"]>>, "b")
add_attribute("B", "D", "C")
add_command("B", "A", <<["a", "B"], ["A", "A"], ["A", "BOOLEAN"], ["e", "D"], ["D", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "INTEGER"]>>)
add_class(d)
add_class(b)
bool_value (true)
add_query("B", "A", <<["BOOLEAN", "INTEGER"], ["D", "BOOLEAN"], ["b", "BOOLEAN"]>>, "A")
add_class(BOOLEAN)
bool_value (false)
add_query("c", "e", <<["e", "INTEGER"]>>, "d")
add_query("C", "B", <<["c", "INTEGER"], ["A", "BOOLEAN"]>>, "A")
logical_negation
logical_negation
add_query("d", "D", <<["e", "c"], ["C", "BOOLEAN"], ["a", "INTEGER"], ["A", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["c", "INTEGER"], ["d", "c"], ["INTEGER", "D"], ["c", "b"]>>, "D")
add_attribute("BOOLEAN", "e", "INTEGER")
add_command("A", "d", <<["c", "BOOLEAN"], ["A", "e"], ["D", "e"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "INTEGER"], ["C", "INTEGER"], ["c", "BOOLEAN"]>>)
numerical_negation
add_query("b", "B", <<["a", "INTEGER"], ["BOOLEAN", "INTEGER"], ["d", "D"], ["BOOLEAN", "d"], ["D", "INTEGER"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["c", "BOOLEAN"]>>, "B")
add_call_chain(<<C,c,a,d,B>>)
int_value (19)
equals
bool_value (true)
