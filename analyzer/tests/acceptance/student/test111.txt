add_attribute("d", "A", "BOOLEAN")
less_than
add_class(b)
add_query("B", "d", <<["C", "C"], ["BOOLEAN", "d"], ["B", "B"], ["B", "INTEGER"], ["D", "B"]>>, "B")
add_command("C", "C", <<["INTEGER", "INTEGER"]>>)
int_value (35)
logical_negation
generate_java_code
logical_negation
add_attribute("B", "C", "C")
add_query("d", "d", <<["a", "BOOLEAN"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "C"], ["C", "INTEGER"], ["B", "d"], ["A", "INTEGER"], ["e", "INTEGER"]>>, "a")
add_call_chain(<<D,INTEGER,C>>)
int_value (8)
add_call_chain(<<B,b,B,C>>)
disjunction
logical_negation
add_class(A)
generate_java_code
int_value (8)
int_value (21)
add_attribute("B", "B", "BOOLEAN")
equals
bool_value (true)
add_command("a", "A", <<["e", "a"]>>)
add_call_chain(<<B,c,INTEGER,D,B,c,a>>)
add_attribute("C", "c", "INTEGER")
add_command("C", "INTEGER", <<["C", "BOOLEAN"], ["a", "C"], ["e", "b"], ["B", "INTEGER"], ["e", "INTEGER"], ["b", "INTEGER"], ["a", "BOOLEAN"]>>)
add_class(c)
numerical_negation
add_query("D", "c", <<["b", "d"], ["B", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "D"], ["B", "e"], ["B", "INTEGER"], ["B", "INTEGER"], ["e", "INTEGER"], ["b", "BOOLEAN"]>>, "B")
type_check
type_check
type_check
add_call_chain(<<d,d,C>>)
numerical_negation
generate_java_code
add_class(D)
add_query("c", "C", <<["D", "INTEGER"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["e", "INTEGER"], ["B", "INTEGER"], ["c", "D"], ["d", "BOOLEAN"]>>, "A")
add_command("e", "b", <<["e", "e"]>>)
bool_value (true)
subtraction
add_attribute("a", "b", "c")
bool_value (false)
modulo
bool_value (true)
greater_than
add_call_chain(<<B,A>>)
numerical_negation
add_call_chain(<<B>>)
int_value (14)
bool_value (true)
add_attribute("INTEGER", "B", "INTEGER")
add_call_chain(<<D,C,C,D,A>>)
conjunction
numerical_negation
equals
add_command("D", "BOOLEAN", <<["b", "A"], ["b", "INTEGER"], ["A", "BOOLEAN"], ["e", "b"], ["b", "INTEGER"], ["c", "INTEGER"], ["b", "INTEGER"], ["b", "INTEGER"], ["D", "b"]>>)
greater_than
bool_value (true)
add_class(e)
add_attribute("BOOLEAN", "A", "BOOLEAN")
logical_negation
add_query("C", "A", <<["B", "INTEGER"]>>, "c")
numerical_negation
int_value (23)
conjunction
int_value (2)
add_call_chain(<<B,D,d,a,C>>)
add_command("d", "a", <<["C", "BOOLEAN"], ["A", "INTEGER"], ["b", "B"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["e", "INTEGER"], ["D", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
add_class(D)
bool_value (false)
add_query("c", "INTEGER", <<["a", "BOOLEAN"], ["D", "INTEGER"], ["D", "INTEGER"], ["D", "INTEGER"], ["B", "B"], ["a", "INTEGER"], ["BOOLEAN", "c"], ["b", "a"], ["INTEGER", "INTEGER"]>>, "B")
generate_java_code
addition
add_attribute("B", "INTEGER", "d")
generate_java_code
type_check
add_command("A", "C", <<["e", "e"], ["e", "INTEGER"], ["c", "INTEGER"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["D", "C"], ["B", "INTEGER"], ["d", "INTEGER"], ["e", "BOOLEAN"]>>)
add_query("A", "e", <<["a", "INTEGER"], ["B", "D"]>>, "C")
add_class(C)
logical_negation
conjunction
type_check
add_call_chain(<<A,B,c,c,c,A,D>>)
bool_value (false)
bool_value (false)
add_call_chain(<<D,BOOLEAN,b,c,a,e,B,C,C>>)
add_class(c)
bool_value (true)
int_value (5)
logical_negation
numerical_negation
add_call_chain(<<B,c>>)
int_value (4)
add_query("D", "A", <<["C", "BOOLEAN"], ["A", "INTEGER"], ["A", "INTEGER"], ["a", "c"], ["BOOLEAN", "BOOLEAN"], ["B", "INTEGER"], ["a", "A"]>>, "c")
type_check
logical_negation
addition
add_class(C)
add_query("e", "e", <<["c", "A"], ["A", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "INTEGER"], ["e", "INTEGER"]>>, "C")
subtraction
add_attribute("A", "b", "BOOLEAN")
add_command("D", "a", <<["D", "INTEGER"]>>)
add_query("b", "C", <<["B", "C"], ["b", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "A"], ["C", "BOOLEAN"], ["INTEGER", "INTEGER"], ["b", "BOOLEAN"], ["b", "BOOLEAN"]>>, "B")
add_call_chain(<<B,b,BOOLEAN,c,b,b,B,D>>)
int_value (35)
add_attribute("A", "e", "BOOLEAN")
numerical_negation
addition
add_class(B)
conjunction
add_command("a", "A", <<["B", "d"], ["INTEGER", "INTEGER"], ["c", "A"], ["INTEGER", "e"], ["D", "INTEGER"], ["b", "A"]>>)
disjunction
add_call_chain(<<B,B,B,D>>)
logical_negation
add_command("B", "C", <<["D", "INTEGER"], ["B", "c"], ["a", "BOOLEAN"], ["D", "INTEGER"], ["C", "B"], ["B", "BOOLEAN"], ["B", "B"], ["D", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>)
add_call_chain(<<b,B,d,c>>)
add_call_chain(<<A,d,d>>)
int_value (41)
add_command("B", "A", <<["B", "INTEGER"], ["a", "INTEGER"], ["D", "BOOLEAN"], ["b", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["B", "BOOLEAN"], ["d", "C"], ["B", "c"]>>)
logical_negation
add_call_chain(<<c,a,B,e,a,C,A>>)
int_value (2)
add_query("d", "D", <<["C", "e"]>>, "c")
logical_negation
bool_value (false)
logical_negation
add_attribute("D", "b", "BOOLEAN")
bool_value (true)
add_attribute("D", "a", "D")
bool_value (false)
logical_negation
add_query("c", "b", <<["B", "A"], ["D", "INTEGER"], ["B", "BOOLEAN"], ["a", "INTEGER"], ["b", "INTEGER"], ["D", "c"]>>, "B")
disjunction
add_call_chain(<<B,INTEGER,d,D,a,A,c,a,D>>)
add_class(a)
int_value (45)
numerical_negation
int_value (29)
add_query("BOOLEAN", "c", <<["d", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["D", "D"], ["d", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"]>>, "INTEGER")
int_value (25)
add_command("C", "d", <<["D", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "c"]>>)
numerical_negation
add_call_chain(<<d,b,C,b,D,e,D>>)
equals
logical_negation
bool_value (false)
add_attribute("D", "D", "D")
int_value (47)
logical_negation
type_check
add_attribute("a", "c", "c")
add_attribute("D", "A", "BOOLEAN")
add_attribute("A", "b", "BOOLEAN")
logical_negation
add_attribute("C", "A", "a")
add_query("d", "B", <<["d", "d"], ["D", "d"], ["a", "b"]>>, "e")
logical_negation
add_attribute("C", "C", "INTEGER")
add_attribute("c", "D", "INTEGER")
bool_value (false)
logical_negation
add_call_chain(<<B,c,d,e>>)
type_check
add_attribute("D", "a", "c")
bool_value (false)
quotient
add_class(c)
greater_than
add_call_chain(<<A,D,A,B,B,D,D,A,e>>)
modulo
add_query("B", "C", <<["a", "BOOLEAN"], ["a", "C"], ["C", "INTEGER"]>>, "B")
int_value (24)
disjunction
bool_value (true)
add_class(e)
add_attribute("B", "A", "INTEGER")
bool_value (false)
numerical_negation
equals
add_attribute("A", "d", "e")
add_attribute("c", "c", "B")
bool_value (false)
generate_java_code
add_call_chain(<<b>>)
add_query("e", "B", <<["D", "B"], ["B", "INTEGER"], ["a", "A"], ["c", "BOOLEAN"], ["A", "INTEGER"]>>, "A")
add_call_chain(<<A,INTEGER,b,BOOLEAN,D,c,B,d,a>>)
bool_value (false)
logical_negation
add_command("e", "a", <<["d", "INTEGER"], ["INTEGER", "INTEGER"], ["B", "BOOLEAN"]>>)
add_command("A", "c", <<["e", "INTEGER"], ["A", "INTEGER"], ["e", "INTEGER"], ["c", "INTEGER"], ["e", "INTEGER"], ["c", "C"], ["B", "d"], ["e", "INTEGER"], ["b", "A"]>>)
greater_than
