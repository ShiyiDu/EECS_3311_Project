addition
generate_java_code
add_query("D", "C", <<["b", "B"], ["d", "BOOLEAN"], ["e", "BOOLEAN"]>>, "a")
generate_java_code
int_value (27)
add_call_chain(<<BOOLEAN,b,b,e,b,a,A>>)
add_class(d)
addition
int_value (1)
add_attribute("B", "d", "A")
type_check
less_than
logical_negation
bool_value (false)
numerical_negation
conjunction
add_call_chain(<<e,d,INTEGER,B,d,A,e>>)
add_attribute("D", "d", "BOOLEAN")
add_command("e", "d", <<["d", "BOOLEAN"], ["a", "a"], ["b", "INTEGER"]>>)
add_query("BOOLEAN", "B", <<["d", "a"], ["e", "BOOLEAN"], ["d", "INTEGER"], ["c", "BOOLEAN"], ["a", "BOOLEAN"]>>, "B")
add_attribute("C", "C", "D")
subtraction
add_query("C", "c", <<["INTEGER", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "a"], ["d", "INTEGER"]>>, "A")
add_query("D", "a", <<["c", "INTEGER"], ["c", "INTEGER"], ["e", "BOOLEAN"], ["D", "C"], ["C", "BOOLEAN"], ["c", "A"], ["b", "INTEGER"]>>, "e")
add_attribute("C", "A", "BOOLEAN")
add_call_chain(<<a,C,d,C,D,e,e,d>>)
disjunction
add_attribute("d", "C", "C")
numerical_negation
add_command("a", "C", <<["INTEGER", "BOOLEAN"], ["C", "D"], ["b", "INTEGER"], ["a", "INTEGER"], ["B", "BOOLEAN"], ["B", "A"], ["A", "INTEGER"], ["D", "b"], ["B", "BOOLEAN"]>>)
add_command("a", "a", <<["INTEGER", "INTEGER"], ["e", "BOOLEAN"], ["B", "INTEGER"], ["e", "INTEGER"], ["a", "INTEGER"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "a"]>>)
logical_negation
add_command("BOOLEAN", "A", <<["A", "INTEGER"], ["e", "BOOLEAN"], ["d", "INTEGER"], ["A", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
disjunction
conjunction
logical_negation
add_query("A", "b", <<["D", "A"], ["d", "BOOLEAN"], ["c", "INTEGER"], ["INTEGER", "BOOLEAN"], ["a", "C"], ["d", "INTEGER"]>>, "a")
add_call_chain(<<e,C,BOOLEAN,e,C,d,b,e>>)
logical_negation
generate_java_code
add_attribute("a", "B", "INTEGER")
add_attribute("c", "INTEGER", "INTEGER")
type_check
bool_value (false)
less_than
add_call_chain(<<A,e,D>>)
add_command("a", "A", <<["a", "INTEGER"], ["A", "A"], ["c", "INTEGER"], ["c", "INTEGER"], ["D", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "INTEGER"]>>)
type_check
int_value (32)
add_call_chain(<<A,c,c>>)
add_call_chain(<<BOOLEAN,a,c,B>>)
disjunction
add_class(d)
logical_negation
add_query("c", "A", <<["a", "b"], ["D", "INTEGER"], ["A", "BOOLEAN"]>>, "A")
add_class(b)
disjunction
type_check
bool_value (true)
less_than
add_attribute("c", "D", "BOOLEAN")
logical_negation
greater_than
add_call_chain(<<b,D,c,c,c,C,C>>)
bool_value (true)
bool_value (true)
add_call_chain(<<b,BOOLEAN,e,A>>)
int_value (11)
generate_java_code
add_call_chain(<<e,d>>)
add_command("e", "B", <<["a", "INTEGER"], ["D", "INTEGER"]>>)
disjunction
numerical_negation
generate_java_code
add_query("c", "A", <<["c", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["c", "BOOLEAN"], ["B", "B"]>>, "INTEGER")
int_value (26)
add_attribute("A", "C", "INTEGER")
add_command("B", "INTEGER", <<["a", "A"], ["D", "INTEGER"], ["e", "INTEGER"], ["C", "INTEGER"], ["d", "d"], ["a", "BOOLEAN"], ["e", "INTEGER"], ["B", "INTEGER"]>>)
add_call_chain(<<a,D>>)
add_attribute("C", "e", "INTEGER")
bool_value (false)
add_call_chain(<<c,INTEGER,d,C,c,INTEGER,D,BOOLEAN>>)
add_attribute("INTEGER", "b", "BOOLEAN")
add_command("C", "D", <<["a", "BOOLEAN"], ["c", "d"], ["c", "INTEGER"], ["e", "INTEGER"], ["c", "BOOLEAN"], ["A", "INTEGER"], ["b", "INTEGER"], ["a", "b"], ["C", "INTEGER"]>>)
generate_java_code
add_query("e", "c", <<["D", "BOOLEAN"], ["B", "INTEGER"], ["a", "BOOLEAN"], ["e", "BOOLEAN"], ["a", "BOOLEAN"]>>, "A")
subtraction
numerical_negation
subtraction
less_than
add_class(e)
add_attribute("c", "d", "c")
add_call_chain(<<a,C,e,c,B>>)
addition
multiplication
int_value (47)
numerical_negation
add_call_chain(<<D,D,D,C,B,A>>)
add_query("c", "b", <<["A", "INTEGER"], ["d", "B"], ["c", "BOOLEAN"], ["c", "INTEGER"], ["B", "INTEGER"]>>, "B")
add_query("C", "c", <<["C", "BOOLEAN"]>>, "b")
type_check
add_attribute("D", "a", "BOOLEAN")
add_class(e)
modulo
add_call_chain(<<D,e,INTEGER,c,c,b,A>>)
conjunction
conjunction
int_value (36)
add_query("D", "A", <<["A", "INTEGER"], ["c", "BOOLEAN"], ["A", "INTEGER"], ["A", "BOOLEAN"], ["b", "d"], ["c", "INTEGER"], ["B", "BOOLEAN"], ["B", "INTEGER"]>>, "BOOLEAN")
add_attribute("B", "B", "BOOLEAN")
int_value (48)
add_command("c", "D", <<["D", "BOOLEAN"], ["d", "b"], ["e", "b"], ["D", "INTEGER"]>>)
add_class(c)
add_call_chain(<<B,d>>)
add_query("A", "b", <<["e", "INTEGER"], ["b", "BOOLEAN"], ["C", "B"], ["a", "B"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["e", "INTEGER"]>>, "c")
equals
generate_java_code
bool_value (true)
logical_negation
int_value (21)
numerical_negation
numerical_negation
generate_java_code
add_call_chain(<<c,D,D,d,e,D>>)
add_query("D", "B", <<["BOOLEAN", "INTEGER"], ["b", "e"], ["A", "INTEGER"], ["C", "B"]>>, "C")
add_command("b", "d", <<["c", "d"], ["b", "INTEGER"], ["INTEGER", "BOOLEAN"], ["d", "INTEGER"], ["B", "INTEGER"], ["d", "C"], ["D", "A"]>>)
bool_value (true)
add_query("c", "D", <<["A", "INTEGER"], ["c", "BOOLEAN"], ["D", "C"], ["b", "BOOLEAN"], ["A", "BOOLEAN"]>>, "e")
add_call_chain(<<c,b,e>>)
add_query("e", "C", <<["d", "INTEGER"], ["D", "BOOLEAN"]>>, "a")
numerical_negation
equals
generate_java_code
add_call_chain(<<A,C,e,c,B,b>>)
numerical_negation
int_value (32)
add_query("A", "A", <<["e", "BOOLEAN"], ["C", "INTEGER"]>>, "C")
greater_than
bool_value (false)
add_attribute("d", "a", "BOOLEAN")
logical_negation
add_attribute("A", "b", "BOOLEAN")
logical_negation
type_check
add_class(BOOLEAN)
int_value (2)
add_call_chain(<<c,C,d,b>>)
add_query("C", "c", <<["d", "BOOLEAN"]>>, "d")
add_call_chain(<<D,C,c,e,C,c,A,D,e>>)
add_attribute("a", "BOOLEAN", "INTEGER")
add_command("a", "c", <<["e", "BOOLEAN"], ["c", "B"], ["d", "INTEGER"], ["B", "INTEGER"], ["INTEGER", "BOOLEAN"], ["a", "c"], ["d", "A"], ["B", "BOOLEAN"]>>)
logical_negation
add_attribute("d", "C", "BOOLEAN")
int_value (25)
generate_java_code
conjunction
add_command("A", "C", <<["C", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["D", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["C", "INTEGER"], ["C", "INTEGER"]>>)
conjunction
type_check
add_call_chain(<<e,b,A,B,D,e,B,C>>)
int_value (44)
add_query("A", "e", <<["A", "INTEGER"], ["BOOLEAN", "a"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["b", "INTEGER"], ["C", "INTEGER"], ["D", "BOOLEAN"]>>, "e")
logical_negation
numerical_negation
bool_value (true)
add_command("d", "e", <<["C", "INTEGER"], ["a", "INTEGER"], ["b", "a"], ["b", "A"], ["INTEGER", "INTEGER"], ["D", "INTEGER"], ["B", "INTEGER"]>>)
add_call_chain(<<d,B,d>>)
add_class(C)
generate_java_code
add_class(d)
multiplication
numerical_negation
add_query("b", "A", <<["A", "INTEGER"]>>, "a")
add_call_chain(<<a>>)
add_call_chain(<<b,c,d,INTEGER>>)
add_call_chain(<<e,e>>)
conjunction
generate_java_code
add_command("A", "c", <<["C", "BOOLEAN"], ["e", "d"], ["e", "BOOLEAN"]>>)
numerical_negation
int_value (22)
bool_value (false)
add_command("a", "C", <<["e", "C"], ["a", "BOOLEAN"], ["C", "INTEGER"], ["d", "BOOLEAN"], ["D", "INTEGER"], ["b", "BOOLEAN"], ["B", "INTEGER"]>>)
add_call_chain(<<A,C,BOOLEAN,INTEGER,e,B,e,d,B>>)
add_query("a", "C", <<["INTEGER", "C"], ["b", "BOOLEAN"], ["d", "INTEGER"], ["D", "INTEGER"], ["b", "D"], ["d", "INTEGER"], ["c", "A"], ["C", "b"], ["a", "INTEGER"]>>, "D")
less_than
logical_negation
generate_java_code
logical_negation
