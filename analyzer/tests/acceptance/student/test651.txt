add_command("c", "D", <<["BOOLEAN", "BOOLEAN"], ["BOOLEAN", "D"], ["A", "BOOLEAN"], ["BOOLEAN", "B"], ["C", "BOOLEAN"], ["e", "b"], ["b", "BOOLEAN"], ["a", "BOOLEAN"]>>)
logical_negation
generate_java_code
add_attribute("c", "a", "INTEGER")
add_attribute("a", "D", "INTEGER")
generate_java_code
int_value (22)
numerical_negation
numerical_negation
less_than
equals
equals
int_value (11)
logical_negation
bool_value (false)
add_call_chain(<<a>>)
add_command("C", "b", <<["b", "d"], ["D", "INTEGER"]>>)
add_query("a", "d", <<["A", "BOOLEAN"], ["B", "b"], ["a", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "INTEGER"], ["a", "c"]>>, "A")
add_query("b", "BOOLEAN", <<["b", "c"], ["a", "BOOLEAN"], ["A", "INTEGER"], ["e", "BOOLEAN"], ["D", "d"], ["C", "BOOLEAN"]>>, "e")
type_check
generate_java_code
add_query("D", "B", <<["c", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["d", "INTEGER"], ["c", "C"], ["INTEGER", "INTEGER"], ["c", "INTEGER"]>>, "c")
int_value (23)
generate_java_code
add_call_chain(<<INTEGER,B>>)
add_attribute("INTEGER", "B", "BOOLEAN")
bool_value (false)
int_value (49)
add_attribute("C", "C", "INTEGER")
add_class(C)
add_call_chain(<<C,c,c,B,B,BOOLEAN,b,a,B>>)
modulo
logical_negation
add_call_chain(<<a,B>>)
add_call_chain(<<INTEGER,b,c,a,a,c,e,C,INTEGER>>)
generate_java_code
add_query("B", "B", <<["a", "INTEGER"], ["B", "b"], ["D", "INTEGER"], ["INTEGER", "INTEGER"], ["a", "INTEGER"], ["a", "BOOLEAN"]>>, "b")
addition
type_check
logical_negation
add_attribute("c", "INTEGER", "A")
add_attribute("e", "C", "BOOLEAN")
bool_value (true)
generate_java_code
add_call_chain(<<e,a,e,D,B,d,B,a>>)
add_call_chain(<<b,c,B,D,c,B>>)
add_call_chain(<<C>>)
add_command("e", "B", <<["c", "BOOLEAN"], ["d", "A"], ["a", "INTEGER"]>>)
add_attribute("B", "D", "INTEGER")
int_value (17)
type_check
type_check
logical_negation
modulo
logical_negation
disjunction
numerical_negation
add_call_chain(<<BOOLEAN,d>>)
int_value (12)
add_query("B", "C", <<["D", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>, "C")
add_command("B", "BOOLEAN", <<["B", "BOOLEAN"], ["e", "INTEGER"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["c", "b"], ["C", "BOOLEAN"], ["D", "BOOLEAN"]>>)
add_call_chain(<<c,B,A,e,C,D,c>>)
numerical_negation
disjunction
int_value (47)
bool_value (true)
add_attribute("B", "C", "b")
add_attribute("BOOLEAN", "b", "c")
int_value (11)
add_attribute("D", "B", "INTEGER")
logical_negation
greater_than
type_check
add_query("B", "D", <<["INTEGER", "INTEGER"], ["INTEGER", "INTEGER"], ["INTEGER", "BOOLEAN"], ["A", "a"], ["d", "C"], ["c", "A"]>>, "a")
add_attribute("B", "b", "c")
add_query("c", "c", <<["d", "INTEGER"]>>, "b")
logical_negation
add_call_chain(<<e,e,d,e,c,d>>)
int_value (18)
logical_negation
add_attribute("B", "B", "INTEGER")
bool_value (true)
add_query("c", "c", <<["a", "BOOLEAN"], ["a", "BOOLEAN"]>>, "BOOLEAN")
logical_negation
add_attribute("a", "e", "BOOLEAN")
add_query("C", "e", <<["c", "INTEGER"]>>, "B")
add_class(BOOLEAN)
add_query("D", "b", <<["BOOLEAN", "INTEGER"], ["BOOLEAN", "INTEGER"], ["A", "INTEGER"]>>, "b")
add_call_chain(<<C>>)
less_than
logical_negation
add_call_chain(<<C,B,d,a,D,D,B,C,INTEGER>>)
disjunction
logical_negation
add_call_chain(<<A,B,A,d>>)
add_query("B", "C", <<["D", "BOOLEAN"]>>, "A")
logical_negation
add_command("INTEGER", "B", <<["A", "INTEGER"]>>)
bool_value (false)
int_value (1)
add_attribute("C", "D", "INTEGER")
int_value (38)
bool_value (true)
int_value (13)
bool_value (true)
add_query("c", "D", <<["B", "D"], ["BOOLEAN", "b"]>>, "d")
logical_negation
add_call_chain(<<a,A,D,C,c>>)
add_call_chain(<<A,C,B,b,e,e>>)
add_attribute("b", "c", "INTEGER")
add_attribute("a", "A", "BOOLEAN")
add_call_chain(<<a,INTEGER,B,e,INTEGER,B,e,d>>)
numerical_negation
add_call_chain(<<a,d,a>>)
add_command("A", "c", <<["C", "INTEGER"], ["INTEGER", "BOOLEAN"], ["B", "a"], ["C", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>)
add_query("b", "A", <<["B", "INTEGER"], ["B", "INTEGER"], ["D", "c"], ["D", "INTEGER"], ["D", "BOOLEAN"]>>, "e")
equals
generate_java_code
add_command("D", "D", <<["b", "a"], ["C", "INTEGER"], ["a", "INTEGER"], ["D", "INTEGER"], ["e", "A"], ["e", "BOOLEAN"], ["a", "INTEGER"], ["A", "c"]>>)
logical_negation
greater_than
equals
add_attribute("d", "A", "BOOLEAN")
type_check
add_attribute("e", "a", "INTEGER")
add_command("b", "INTEGER", <<["b", "INTEGER"], ["c", "C"], ["d", "BOOLEAN"]>>)
add_attribute("b", "c", "BOOLEAN")
add_call_chain(<<d,C,a,b,c,INTEGER,B,C>>)
add_command("D", "C", <<["B", "INTEGER"], ["A", "INTEGER"], ["A", "b"], ["b", "BOOLEAN"], ["b", "INTEGER"], ["B", "C"]>>)
logical_negation
quotient
generate_java_code
logical_negation
int_value (14)
bool_value (true)
type_check
add_call_chain(<<c,c,e,A,b>>)
logical_negation
bool_value (true)
int_value (38)
logical_negation
type_check
bool_value (true)
add_attribute("B", "B", "INTEGER")
add_attribute("a", "a", "INTEGER")
addition
add_call_chain(<<b,b,INTEGER,BOOLEAN,C>>)
numerical_negation
bool_value (false)
bool_value (true)
add_attribute("b", "d", "INTEGER")
logical_negation
modulo
logical_negation
add_query("INTEGER", "d", <<["d", "BOOLEAN"], ["c", "BOOLEAN"]>>, "B")
bool_value (false)
type_check
add_call_chain(<<D>>)
add_attribute("B", "INTEGER", "INTEGER")
int_value (11)
add_query("c", "d", <<["B", "INTEGER"], ["d", "INTEGER"], ["d", "INTEGER"], ["c", "INTEGER"], ["d", "B"]>>, "BOOLEAN")
add_call_chain(<<D,e>>)
add_call_chain(<<INTEGER,a,b,A,d,D,b,b,b>>)
add_query("b", "c", <<["a", "b"], ["C", "BOOLEAN"], ["d", "a"], ["BOOLEAN", "INTEGER"], ["b", "a"], ["D", "a"]>>, "d")
equals
add_call_chain(<<INTEGER,D,C,e,c>>)
numerical_negation
bool_value (true)
type_check
add_command("INTEGER", "e", <<["A", "BOOLEAN"], ["c", "e"], ["B", "INTEGER"], ["A", "INTEGER"], ["e", "BOOLEAN"], ["a", "INTEGER"]>>)
bool_value (false)
logical_negation
int_value (20)
add_call_chain(<<a,b,C>>)
multiplication
logical_negation
bool_value (false)
add_command("A", "B", <<["C", "a"]>>)
type_check
bool_value (true)
numerical_negation
add_query("c", "B", <<["d", "BOOLEAN"], ["c", "A"], ["C", "B"], ["d", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["a", "BOOLEAN"]>>, "B")
bool_value (true)
add_attribute("b", "D", "A")
add_call_chain(<<BOOLEAN,D>>)
add_attribute("d", "D", "INTEGER")
add_call_chain(<<d,c>>)
numerical_negation
conjunction
add_attribute("c", "D", "B")
generate_java_code
int_value (29)
generate_java_code
equals
add_query("INTEGER", "B", <<["e", "b"], ["C", "BOOLEAN"], ["D", "BOOLEAN"]>>, "c")
logical_negation
add_call_chain(<<C,B,c,B,BOOLEAN,A,d>>)
add_attribute("A", "C", "a")
add_query("b", "b", <<["a", "C"], ["BOOLEAN", "b"]>>, "D")
less_than
logical_negation
add_call_chain(<<D>>)
generate_java_code
add_call_chain(<<e,D,a>>)
bool_value (false)
numerical_negation
int_value (10)
add_attribute("B", "b", "INTEGER")
logical_negation
multiplication
bool_value (true)
conjunction
generate_java_code
int_value (22)
add_attribute("D", "a", "D")
add_call_chain(<<BOOLEAN,a,B>>)
int_value (1)
type_check
generate_java_code
add_class(a)
add_call_chain(<<d,INTEGER,e,e,e,a>>)
bool_value (false)
numerical_negation
equals
multiplication
numerical_negation
add_command("A", "b", <<["B", "d"], ["B", "BOOLEAN"], ["C", "b"]>>)
add_call_chain(<<b,BOOLEAN,d,INTEGER,A,c,a,B>>)
add_attribute("b", "D", "BOOLEAN")
add_call_chain(<<A,C,d,c,c>>)
add_command("B", "d", <<["c", "INTEGER"], ["c", "INTEGER"], ["C", "BOOLEAN"]>>)
add_attribute("d", "C", "INTEGER")
add_query("B", "B", <<["A", "e"], ["B", "INTEGER"], ["c", "BOOLEAN"], ["D", "d"], ["B", "BOOLEAN"], ["a", "INTEGER"], ["D", "B"], ["C", "a"], ["D", "INTEGER"]>>, "B")
add_call_chain(<<e,b,d,b,e,D,a,C>>)
