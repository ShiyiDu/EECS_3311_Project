generate_java_code
add_attribute("INTEGER", "C", "BOOLEAN")
disjunction
add_query("INTEGER", "b", <<["c", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["B", "A"]>>, "C")
logical_negation
add_query("A", "a", <<["c", "C"]>>, "a")
int_value (17)
less_than
add_call_chain(<<b>>)
type_check
logical_negation
add_call_chain(<<A,c,C,C>>)
add_call_chain(<<A,c,b,C,A,b,C,c>>)
greater_than
logical_negation
type_check
type_check
add_attribute("d", "d", "D")
add_call_chain(<<BOOLEAN,B,B,D,A,INTEGER,B>>)
bool_value (true)
add_query("A", "A", <<["b", "INTEGER"], ["e", "c"], ["B", "BOOLEAN"]>>, "D")
add_command("INTEGER", "d", <<["B", "INTEGER"], ["A", "D"], ["e", "INTEGER"], ["b", "INTEGER"]>>)
int_value (25)
conjunction
conjunction
bool_value (false)
generate_java_code
numerical_negation
type_check
int_value (15)
greater_than
int_value (39)
add_call_chain(<<a,B,b,e>>)
type_check
add_query("D", "c", <<["c", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "c"], ["INTEGER", "BOOLEAN"], ["c", "c"], ["a", "BOOLEAN"], ["D", "C"], ["A", "BOOLEAN"]>>, "a")
add_attribute("b", "e", "INTEGER")
logical_negation
add_query("D", "a", <<["a", "INTEGER"], ["A", "b"], ["B", "INTEGER"], ["b", "INTEGER"], ["d", "c"]>>, "BOOLEAN")
add_call_chain(<<a,a,a,a,BOOLEAN,C>>)
disjunction
add_call_chain(<<c,B,c,D,B,c>>)
add_call_chain(<<C,C,A,d,d,B,b,C,INTEGER>>)
add_command("e", "b", <<["b", "BOOLEAN"], ["c", "d"], ["a", "BOOLEAN"], ["b", "INTEGER"], ["a", "INTEGER"], ["c", "INTEGER"]>>)
add_query("B", "INTEGER", <<["c", "A"], ["A", "A"], ["a", "BOOLEAN"], ["D", "C"], ["a", "BOOLEAN"], ["D", "INTEGER"], ["D", "INTEGER"], ["d", "a"], ["B", "b"]>>, "c")
add_query("d", "d", <<["e", "INTEGER"], ["c", "A"], ["BOOLEAN", "INTEGER"]>>, "d")
int_value (47)
modulo
add_call_chain(<<d,B,d,a,b,BOOLEAN>>)
bool_value (true)
type_check
logical_negation
int_value (9)
bool_value (false)
numerical_negation
add_call_chain(<<b,D,d,b,A,b,a,b>>)
numerical_negation
addition
less_than
add_query("C", "B", <<["B", "INTEGER"], ["c", "BOOLEAN"], ["d", "INTEGER"], ["C", "INTEGER"], ["B", "BOOLEAN"]>>, "D")
add_attribute("INTEGER", "a", "e")
add_query("INTEGER", "D", <<["D", "INTEGER"], ["e", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "INTEGER"], ["B", "INTEGER"], ["B", "INTEGER"]>>, "a")
generate_java_code
bool_value (false)
type_check
add_command("D", "B", <<["d", "BOOLEAN"], ["D", "BOOLEAN"], ["INTEGER", "D"], ["INTEGER", "INTEGER"], ["e", "A"], ["e", "BOOLEAN"]>>)
int_value (32)
less_than
add_call_chain(<<D,b,a,c,B,e>>)
bool_value (false)
quotient
add_query("a", "BOOLEAN", <<["c", "INTEGER"], ["B", "INTEGER"], ["C", "INTEGER"], ["d", "b"], ["a", "INTEGER"], ["d", "b"], ["e", "INTEGER"], ["C", "C"], ["C", "BOOLEAN"]>>, "d")
add_query("C", "e", <<["c", "BOOLEAN"]>>, "a")
modulo
add_command("a", "D", <<["BOOLEAN", "INTEGER"], ["a", "BOOLEAN"], ["B", "INTEGER"], ["c", "b"], ["BOOLEAN", "BOOLEAN"], ["b", "d"], ["A", "BOOLEAN"], ["INTEGER", "a"], ["A", "INTEGER"]>>)
add_command("e", "b", <<["b", "BOOLEAN"], ["b", "A"], ["INTEGER", "INTEGER"], ["D", "c"]>>)
add_query("A", "e", <<["INTEGER", "BOOLEAN"]>>, "A")
add_call_chain(<<e,D,D,B>>)
int_value (49)
subtraction
bool_value (true)
add_call_chain(<<e,B,c,B,A,b>>)
disjunction
less_than
add_command("C", "B", <<["e", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
add_query("b", "A", <<["a", "INTEGER"], ["d", "e"], ["A", "BOOLEAN"], ["d", "B"], ["b", "BOOLEAN"], ["e", "c"], ["c", "A"], ["e", "e"], ["d", "INTEGER"]>>, "D")
add_query("c", "a", <<["C", "INTEGER"], ["A", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "INTEGER"], ["e", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["c", "BOOLEAN"]>>, "B")
bool_value (true)
add_attribute("A", "B", "INTEGER")
add_command("B", "e", <<["c", "INTEGER"], ["INTEGER", "b"], ["c", "A"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "INTEGER"]>>)
greater_than
add_attribute("BOOLEAN", "A", "INTEGER")
bool_value (false)
greater_than
add_command("c", "a", <<["A", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "a"], ["A", "INTEGER"], ["b", "e"], ["c", "INTEGER"]>>)
logical_negation
add_class(B)
add_call_chain(<<d,B,d,d,A,A,INTEGER,e>>)
bool_value (true)
numerical_negation
add_attribute("BOOLEAN", "D", "INTEGER")
generate_java_code
add_attribute("C", "b", "d")
add_attribute("A", "D", "e")
add_call_chain(<<c,B,c,b>>)
add_call_chain(<<D>>)
logical_negation
generate_java_code
equals
add_call_chain(<<C,d,D,e,c>>)
add_command("INTEGER", "BOOLEAN", <<["b", "INTEGER"], ["A", "BOOLEAN"]>>)
disjunction
add_call_chain(<<a,D,a,INTEGER>>)
disjunction
add_call_chain(<<D,D,e,d,b,INTEGER,e,d,b>>)
add_attribute("D", "A", "B")
add_attribute("B", "C", "e")
type_check
add_attribute("C", "INTEGER", "D")
int_value (34)
int_value (26)
bool_value (true)
add_call_chain(<<A,B,b,C,INTEGER>>)
add_call_chain(<<b,e,b,e,B,c,e,d>>)
add_call_chain(<<A,c,A,D,a,c,c,d>>)
add_attribute("c", "D", "b")
add_call_chain(<<A,B,C,D,C>>)
add_class(c)
add_call_chain(<<A,b,d,INTEGER,C,d>>)
bool_value (false)
add_call_chain(<<A,D,B,B,d,INTEGER>>)
add_query("a", "D", <<["C", "D"], ["b", "BOOLEAN"], ["d", "BOOLEAN"], ["d", "INTEGER"], ["e", "INTEGER"], ["C", "A"], ["a", "BOOLEAN"]>>, "C")
add_attribute("A", "b", "BOOLEAN")
generate_java_code
int_value (44)
add_attribute("a", "B", "BOOLEAN")
logical_negation
add_command("e", "b", <<["e", "INTEGER"], ["B", "D"], ["b", "INTEGER"], ["c", "INTEGER"], ["d", "D"]>>)
generate_java_code
logical_negation
numerical_negation
add_attribute("BOOLEAN", "c", "a")
add_class(C)
logical_negation
add_class(e)
add_query("A", "B", <<["D", "INTEGER"], ["c", "A"], ["e", "BOOLEAN"], ["C", "INTEGER"]>>, "BOOLEAN")
disjunction
add_call_chain(<<d,INTEGER,c,D,A>>)
add_query("e", "C", <<["BOOLEAN", "BOOLEAN"], ["c", "a"]>>, "C")
generate_java_code
type_check
disjunction
add_attribute("c", "D", "BOOLEAN")
bool_value (true)
add_call_chain(<<B,B,e,e,e,d>>)
add_call_chain(<<D,c,b,INTEGER,d,a,C>>)
equals
add_call_chain(<<c,e,b,d,C>>)
conjunction
numerical_negation
int_value (8)
type_check
bool_value (true)
logical_negation
generate_java_code
add_call_chain(<<e,c,A,A,d,e,e,B>>)
add_command("B", "b", <<["B", "INTEGER"], ["D", "INTEGER"], ["C", "INTEGER"], ["b", "INTEGER"], ["BOOLEAN", "D"], ["A", "INTEGER"], ["e", "INTEGER"]>>)
add_command("d", "d", <<["d", "D"], ["B", "A"]>>)
add_call_chain(<<D>>)
add_query("B", "B", <<["B", "INTEGER"]>>, "B")
add_call_chain(<<A,b,a,INTEGER,c,D>>)
conjunction
add_query("C", "c", <<["e", "BOOLEAN"], ["C", "INTEGER"], ["D", "INTEGER"], ["C", "INTEGER"]>>, "B")
numerical_negation
bool_value (false)
type_check
add_attribute("a", "BOOLEAN", "INTEGER")
add_query("b", "e", <<["C", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "INTEGER"], ["B", "INTEGER"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["e", "BOOLEAN"]>>, "D")
logical_negation
add_call_chain(<<c,C,e,D,e>>)
add_query("B", "b", <<["e", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["C", "INTEGER"]>>, "c")
logical_negation
int_value (35)
add_command("b", "C", <<["d", "BOOLEAN"], ["D", "C"], ["INTEGER", "BOOLEAN"], ["e", "INTEGER"], ["a", "B"], ["BOOLEAN", "A"], ["D", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
quotient
add_class(D)
add_query("b", "e", <<["BOOLEAN", "BOOLEAN"], ["e", "INTEGER"], ["INTEGER", "INTEGER"], ["A", "c"], ["D", "INTEGER"], ["d", "INTEGER"], ["B", "B"], ["D", "INTEGER"], ["A", "BOOLEAN"]>>, "C")
logical_negation
add_call_chain(<<c,d,B,e,b,c>>)
add_query("b", "BOOLEAN", <<["BOOLEAN", "B"], ["INTEGER", "INTEGER"], ["C", "A"]>>, "C")
add_command("e", "INTEGER", <<["d", "D"], ["d", "BOOLEAN"]>>)
bool_value (false)
int_value (35)
bool_value (true)
add_class(A)
add_call_chain(<<a,B,B,C,C,BOOLEAN,c>>)
int_value (15)
bool_value (true)
add_class(a)
int_value (9)
add_attribute("a", "c", "D")
add_call_chain(<<B,D,b,C,d>>)
numerical_negation
numerical_negation
numerical_negation
add_query("C", "A", <<["C", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "BOOLEAN"], ["c", "e"], ["c", "BOOLEAN"], ["B", "BOOLEAN"]>>, "b")
addition
type_check
int_value (18)
add_call_chain(<<d,B,BOOLEAN,C,b,BOOLEAN,e>>)
addition
bool_value (false)
logical_negation
add_command("INTEGER", "D", <<["D", "INTEGER"], ["A", "BOOLEAN"]>>)
add_call_chain(<<B,c>>)
bool_value (true)
add_call_chain(<<a,a,C,INTEGER,BOOLEAN>>)
add_command("b", "A", <<["e", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "INTEGER"], ["BOOLEAN", "d"], ["A", "BOOLEAN"], ["C", "b"], ["c", "INTEGER"], ["B", "BOOLEAN"]>>)
add_call_chain(<<A,b,D,d,B,d>>)
add_command("e", "c", <<["D", "B"], ["d", "INTEGER"], ["D", "INTEGER"], ["e", "BOOLEAN"], ["C", "c"]>>)
numerical_negation
add_attribute("e", "D", "INTEGER")
type_check
add_query("a", "B", <<["B", "BOOLEAN"]>>, "a")
numerical_negation
logical_negation
add_call_chain(<<c,e,C>>)
generate_java_code
logical_negation
add_call_chain(<<B,B,D,e,a,e,D>>)
