add_command("B", "B", <<["a", "BOOLEAN"]>>)
add_command("B", "INTEGER", <<["A", "B"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "A"], ["d", "INTEGER"], ["INTEGER", "BOOLEAN"], ["e", "BOOLEAN"], ["d", "BOOLEAN"]>>)
add_attribute("D", "c", "INTEGER")
numerical_negation
bool_value (false)
logical_negation
bool_value (false)
numerical_negation
add_query("B", "d", <<["BOOLEAN", "C"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["BOOLEAN", "b"]>>, "d")
bool_value (false)
int_value (1)
add_query("B", "e", <<["C", "BOOLEAN"], ["B", "a"], ["a", "a"]>>, "D")
conjunction
conjunction
add_call_chain(<<d,B>>)
equals
add_call_chain(<<INTEGER,INTEGER,C,B,d,e,D>>)
type_check
numerical_negation
add_call_chain(<<d>>)
logical_negation
bool_value (false)
add_query("e", "a", <<["INTEGER", "INTEGER"]>>, "C")
int_value (3)
bool_value (false)
add_query("c", "BOOLEAN", <<["D", "INTEGER"], ["B", "e"]>>, "b")
numerical_negation
int_value (4)
numerical_negation
numerical_negation
add_query("e", "D", <<["C", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "C"], ["D", "C"], ["d", "INTEGER"], ["C", "INTEGER"]>>, "a")
add_call_chain(<<e,c,D,b,a,b,e,D>>)
bool_value (true)
add_call_chain(<<INTEGER,c,C,b,C,a,D,b,b>>)
add_command("B", "D", <<["A", "D"], ["c", "BOOLEAN"], ["BOOLEAN", "a"], ["INTEGER", "INTEGER"], ["d", "INTEGER"]>>)
bool_value (false)
add_query("e", "e", <<["A", "A"], ["a", "a"], ["c", "INTEGER"], ["INTEGER", "b"], ["d", "c"], ["c", "C"]>>, "d")
multiplication
numerical_negation
add_call_chain(<<a,B,BOOLEAN>>)
add_query("e", "d", <<["A", "INTEGER"], ["C", "A"]>>, "d")
greater_than
logical_negation
logical_negation
generate_java_code
type_check
add_command("D", "c", <<["A", "BOOLEAN"], ["A", "INTEGER"]>>)
add_query("C", "b", <<["e", "BOOLEAN"], ["C", "BOOLEAN"]>>, "c")
add_call_chain(<<c,B,c,c,A,B,d,D>>)
add_call_chain(<<c>>)
int_value (30)
generate_java_code
int_value (19)
bool_value (true)
add_attribute("d", "D", "BOOLEAN")
add_command("A", "A", <<["C", "INTEGER"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["a", "INTEGER"]>>)
type_check
disjunction
add_call_chain(<<D,a,b,D,A,BOOLEAN,D,A,A>>)
int_value (7)
add_attribute("e", "B", "BOOLEAN")
add_class(a)
int_value (3)
numerical_negation
subtraction
add_command("A", "D", <<["BOOLEAN", "A"], ["A", "c"], ["e", "b"], ["D", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "INTEGER"], ["c", "INTEGER"]>>)
conjunction
add_call_chain(<<A,C,d,C,D,c,BOOLEAN,c>>)
bool_value (false)
add_attribute("A", "B", "INTEGER")
add_class(e)
add_call_chain(<<INTEGER,D>>)
type_check
bool_value (true)
add_command("BOOLEAN", "e", <<["INTEGER", "BOOLEAN"], ["b", "INTEGER"], ["A", "BOOLEAN"], ["C", "BOOLEAN"]>>)
bool_value (false)
numerical_negation
add_query("B", "C", <<["d", "INTEGER"], ["c", "BOOLEAN"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["c", "BOOLEAN"], ["c", "D"], ["B", "INTEGER"], ["C", "BOOLEAN"]>>, "a")
add_command("BOOLEAN", "e", <<["b", "INTEGER"], ["A", "C"], ["b", "BOOLEAN"], ["BOOLEAN", "D"]>>)
int_value (31)
logical_negation
greater_than
add_call_chain(<<B,d,b>>)
greater_than
add_call_chain(<<C,b,C,e,b,a,e>>)
add_attribute("A", "a", "BOOLEAN")
generate_java_code
int_value (20)
numerical_negation
int_value (21)
add_query("C", "B", <<["a", "INTEGER"], ["e", "C"], ["c", "D"]>>, "BOOLEAN")
logical_negation
bool_value (true)
add_command("C", "c", <<["B", "BOOLEAN"], ["c", "BOOLEAN"]>>)
numerical_negation
add_call_chain(<<d,e,INTEGER,a,C,c,d>>)
add_call_chain(<<C,e,D,e,a,b,b,B>>)
add_command("D", "a", <<["C", "BOOLEAN"], ["c", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>)
int_value (6)
less_than
type_check
add_call_chain(<<e,b,c,A,B,B,a,a>>)
numerical_negation
int_value (19)
add_query("A", "a", <<["A", "INTEGER"], ["a", "BOOLEAN"], ["a", "INTEGER"], ["b", "e"], ["C", "c"], ["C", "B"]>>, "e")
add_query("c", "d", <<["D", "INTEGER"], ["BOOLEAN", "B"], ["A", "d"], ["c", "BOOLEAN"], ["c", "INTEGER"], ["BOOLEAN", "A"], ["e", "BOOLEAN"]>>, "a")
type_check
add_attribute("e", "D", "INTEGER")
add_attribute("BOOLEAN", "d", "INTEGER")
add_query("d", "C", <<["BOOLEAN", "BOOLEAN"], ["D", "D"], ["b", "INTEGER"], ["A", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "D"], ["a", "BOOLEAN"]>>, "B")
greater_than
add_call_chain(<<a,e,c,e,B>>)
add_attribute("c", "C", "BOOLEAN")
int_value (1)
add_call_chain(<<D,INTEGER,D>>)
add_call_chain(<<A,c>>)
add_call_chain(<<d,e,D,e,B,A,e,B,C>>)
logical_negation
add_command("B", "A", <<["A", "BOOLEAN"], ["b", "INTEGER"], ["A", "INTEGER"], ["e", "INTEGER"], ["A", "BOOLEAN"], ["INTEGER", "INTEGER"], ["D", "BOOLEAN"], ["c", "INTEGER"], ["c", "a"]>>)
add_attribute("e", "e", "b")
logical_negation
add_class(c)
add_command("e", "C", <<["e", "INTEGER"]>>)
numerical_negation
bool_value (true)
modulo
add_command("C", "b", <<["a", "INTEGER"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["INTEGER", "D"], ["b", "B"]>>)
logical_negation
add_command("A", "A", <<["D", "BOOLEAN"]>>)
add_command("C", "B", <<["B", "INTEGER"], ["A", "C"], ["C", "d"], ["D", "BOOLEAN"], ["B", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["B", "INTEGER"]>>)
add_query("A", "A", <<["C", "BOOLEAN"], ["C", "BOOLEAN"]>>, "d")
type_check
add_command("a", "b", <<["C", "BOOLEAN"], ["a", "c"], ["INTEGER", "B"], ["B", "BOOLEAN"], ["D", "d"]>>)
disjunction
add_call_chain(<<A,e>>)
greater_than
add_call_chain(<<B,B>>)
multiplication
addition
logical_negation
int_value (31)
disjunction
add_class(C)
add_call_chain(<<A,BOOLEAN,A,d,B,b,a,BOOLEAN>>)
add_attribute("C", "BOOLEAN", "INTEGER")
add_class(B)
add_call_chain(<<b,c>>)
add_call_chain(<<INTEGER,BOOLEAN,b,A,B,b>>)
int_value (29)
add_call_chain(<<A,d,C,B,c,INTEGER,b,A,D>>)
add_query("a", "D", <<["a", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "INTEGER"], ["B", "INTEGER"]>>, "e")
add_query("C", "INTEGER", <<["D", "INTEGER"], ["e", "A"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["A", "INTEGER"], ["A", "d"], ["c", "INTEGER"], ["INTEGER", "INTEGER"]>>, "B")
add_attribute("a", "D", "INTEGER")
add_command("A", "c", <<["D", "BOOLEAN"]>>)
add_call_chain(<<B>>)
add_call_chain(<<INTEGER,d,B>>)
add_query("e", "C", <<["INTEGER", "BOOLEAN"], ["c", "B"], ["d", "BOOLEAN"], ["a", "BOOLEAN"]>>, "D")
add_command("e", "D", <<["A", "D"], ["C", "INTEGER"], ["BOOLEAN", "INTEGER"], ["C", "C"], ["c", "INTEGER"]>>)
add_attribute("D", "b", "BOOLEAN")
equals
type_check
int_value (5)
modulo
generate_java_code
numerical_negation
generate_java_code
add_class(D)
add_call_chain(<<c,INTEGER,INTEGER,C,BOOLEAN,A,C>>)
add_command("a", "D", <<["B", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "INTEGER"]>>)
less_than
equals
add_command("e", "D", <<["C", "a"], ["d", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "C"]>>)
add_attribute("C", "B", "INTEGER")
conjunction
int_value (7)
bool_value (true)
disjunction
numerical_negation
add_class(e)
conjunction
add_call_chain(<<D,e,C,C,A,d,a,c>>)
int_value (30)
conjunction
add_call_chain(<<A,INTEGER,b,a,e,c>>)
add_call_chain(<<e,e,B,a,b,d,a,D,e>>)
bool_value (true)
add_command("a", "b", <<["B", "D"], ["a", "c"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["e", "INTEGER"], ["B", "INTEGER"]>>)
add_attribute("a", "A", "C")
int_value (22)
int_value (42)
add_query("d", "A", <<["D", "INTEGER"], ["A", "BOOLEAN"], ["INTEGER", "INTEGER"], ["a", "INTEGER"]>>, "a")
add_call_chain(<<d,C>>)
numerical_negation
add_call_chain(<<b,C,c,C,b,INTEGER,a>>)
add_query("A", "b", <<["A", "d"], ["INTEGER", "INTEGER"], ["d", "INTEGER"]>>, "a")
add_attribute("b", "BOOLEAN", "B")
add_call_chain(<<e,a,a,c,B>>)
subtraction
add_class(c)
numerical_negation
add_query("B", "b", <<["C", "BOOLEAN"], ["A", "e"], ["c", "BOOLEAN"]>>, "b")
add_attribute("C", "C", "C")
logical_negation
add_call_chain(<<e,e,c,e,C,d>>)
add_attribute("BOOLEAN", "a", "d")
disjunction
add_query("B", "e", <<["INTEGER", "INTEGER"]>>, "e")
bool_value (true)
add_command("BOOLEAN", "b", <<["A", "INTEGER"], ["INTEGER", "INTEGER"], ["e", "B"], ["D", "C"], ["e", "INTEGER"], ["B", "BOOLEAN"], ["a", "INTEGER"], ["b", "INTEGER"], ["B", "BOOLEAN"]>>)
int_value (39)
int_value (11)
add_call_chain(<<b,B,D,D,BOOLEAN,C,e,D>>)
int_value (41)
