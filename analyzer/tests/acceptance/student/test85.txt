add_command("B", "b", <<["C", "INTEGER"], ["A", "BOOLEAN"]>>)
add_query("a", "INTEGER", <<["d", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "b"]>>, "b")
numerical_negation
add_attribute("D", "D", "a")
addition
generate_java_code
add_call_chain(<<A,B,INTEGER,A,BOOLEAN,C,D>>)
bool_value (true)
int_value (20)
add_query("D", "INTEGER", <<["B", "A"], ["d", "BOOLEAN"], ["e", "INTEGER"], ["e", "e"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "e"], ["d", "BOOLEAN"]>>, "BOOLEAN")
generate_java_code
add_query("B", "d", <<["A", "BOOLEAN"], ["C", "BOOLEAN"]>>, "c")
disjunction
logical_negation
add_command("b", "C", <<["A", "INTEGER"], ["INTEGER", "INTEGER"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "BOOLEAN"]>>)
add_command("B", "b", <<["D", "a"], ["INTEGER", "C"], ["A", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "a"], ["INTEGER", "INTEGER"]>>)
add_attribute("e", "D", "c")
bool_value (true)
add_query("A", "a", <<["B", "INTEGER"], ["B", "D"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "A"], ["C", "b"]>>, "D")
int_value (42)
bool_value (true)
numerical_negation
add_call_chain(<<c,INTEGER,C,d,c,B,B,b>>)
int_value (33)
add_query("INTEGER", "D", <<["D", "INTEGER"], ["B", "INTEGER"], ["A", "C"], ["B", "BOOLEAN"], ["b", "INTEGER"]>>, "d")
add_call_chain(<<d,a,a,a,C>>)
numerical_negation
logical_negation
bool_value (true)
add_call_chain(<<A,d,A,b,B,e,A>>)
numerical_negation
add_query("A", "d", <<["d", "b"], ["A", "C"], ["A", "d"], ["D", "BOOLEAN"]>>, "c")
add_attribute("c", "BOOLEAN", "e")
generate_java_code
greater_than
logical_negation
add_call_chain(<<D,A,A,c,C,C,e>>)
greater_than
int_value (40)
add_call_chain(<<c,a,d,B,B,A>>)
logical_negation
logical_negation
multiplication
type_check
int_value (5)
equals
bool_value (false)
add_class(A)
add_call_chain(<<A,BOOLEAN,INTEGER,D,C>>)
add_call_chain(<<e>>)
add_attribute("INTEGER", "b", "BOOLEAN")
less_than
add_class(e)
add_call_chain(<<D,e,d,d>>)
add_command("INTEGER", "B", <<["INTEGER", "INTEGER"], ["D", "BOOLEAN"]>>)
bool_value (true)
numerical_negation
type_check
logical_negation
modulo
add_command("C", "b", <<["A", "INTEGER"]>>)
add_query("D", "B", <<["BOOLEAN", "INTEGER"], ["B", "INTEGER"], ["BOOLEAN", "c"], ["c", "BOOLEAN"], ["a", "INTEGER"], ["a", "BOOLEAN"]>>, "BOOLEAN")
bool_value (true)
add_call_chain(<<e,b,D,d,e,A>>)
add_query("B", "b", <<["b", "INTEGER"], ["c", "INTEGER"], ["B", "D"], ["BOOLEAN", "BOOLEAN"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["a", "INTEGER"]>>, "BOOLEAN")
add_class(B)
add_attribute("c", "INTEGER", "C")
add_attribute("d", "B", "INTEGER")
type_check
bool_value (true)
add_call_chain(<<c,d,c,c,C,b>>)
add_query("D", "d", <<["B", "c"], ["D", "BOOLEAN"], ["C", "D"], ["B", "b"], ["D", "INTEGER"], ["a", "BOOLEAN"]>>, "a")
add_call_chain(<<B,a,d,C,A,a>>)
add_query("D", "c", <<["BOOLEAN", "B"], ["A", "INTEGER"], ["A", "A"], ["d", "INTEGER"], ["a", "b"]>>, "a")
bool_value (true)
logical_negation
add_attribute("A", "BOOLEAN", "INTEGER")
bool_value (false)
conjunction
bool_value (false)
greater_than
add_call_chain(<<A,a,b,e,A,e,B,c,D>>)
type_check
add_command("b", "e", <<["D", "BOOLEAN"], ["C", "a"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["e", "BOOLEAN"]>>)
subtraction
generate_java_code
add_attribute("a", "C", "BOOLEAN")
modulo
numerical_negation
add_attribute("b", "A", "d")
add_attribute("BOOLEAN", "a", "INTEGER")
add_call_chain(<<A,D,a,BOOLEAN>>)
less_than
numerical_negation
int_value (38)
multiplication
add_call_chain(<<e,INTEGER>>)
int_value (4)
add_call_chain(<<D,D,A,C,C,a>>)
add_call_chain(<<D>>)
add_call_chain(<<D,e,D>>)
bool_value (false)
add_attribute("C", "C", "BOOLEAN")
add_call_chain(<<A,A,D,D,c>>)
add_attribute("e", "D", "d")
add_call_chain(<<C,c,c,a,C,C>>)
add_query("A", "A", <<["d", "b"], ["b", "BOOLEAN"]>>, "e")
bool_value (true)
int_value (39)
int_value (4)
generate_java_code
add_call_chain(<<C,D,C,D,e>>)
add_query("b", "D", <<["A", "C"], ["A", "e"], ["D", "INTEGER"], ["D", "BOOLEAN"]>>, "C")
conjunction
numerical_negation
add_call_chain(<<d,a,a,a,INTEGER,C,a>>)
logical_negation
add_attribute("D", "D", "C")
greater_than
add_query("C", "D", <<["BOOLEAN", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "BOOLEAN"]>>, "D")
conjunction
add_query("INTEGER", "INTEGER", <<["d", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "INTEGER"]>>, "b")
add_call_chain(<<C,e,B,b>>)
logical_negation
int_value (37)
numerical_negation
add_call_chain(<<B>>)
numerical_negation
add_call_chain(<<B,B,c,e>>)
add_call_chain(<<d,d,d>>)
numerical_negation
bool_value (false)
bool_value (false)
multiplication
add_query("c", "C", <<["D", "INTEGER"], ["b", "BOOLEAN"], ["C", "B"], ["A", "C"], ["D", "B"]>>, "B")
int_value (9)
add_class(BOOLEAN)
add_call_chain(<<a,d>>)
add_command("d", "A", <<["c", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["d", "INTEGER"]>>)
less_than
add_attribute("c", "c", "INTEGER")
add_call_chain(<<D,B,B,a,e,C,A>>)
add_call_chain(<<A,A,C,A,D>>)
numerical_negation
bool_value (true)
type_check
add_command("INTEGER", "c", <<["INTEGER", "INTEGER"], ["c", "BOOLEAN"], ["b", "BOOLEAN"], ["d", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>)
numerical_negation
add_command("INTEGER", "C", <<["d", "INTEGER"], ["a", "a"], ["c", "BOOLEAN"]>>)
add_command("D", "B", <<["BOOLEAN", "BOOLEAN"], ["A", "e"], ["d", "INTEGER"], ["c", "BOOLEAN"], ["BOOLEAN", "C"], ["a", "INTEGER"], ["C", "INTEGER"], ["C", "INTEGER"]>>)
add_attribute("b", "c", "BOOLEAN")
add_call_chain(<<C,b,B,B,d,d>>)
generate_java_code
greater_than
equals
add_query("B", "c", <<["INTEGER", "BOOLEAN"], ["b", "B"], ["c", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "c"]>>, "B")
add_attribute("d", "C", "BOOLEAN")
add_command("b", "INTEGER", <<["D", "C"], ["d", "INTEGER"], ["B", "BOOLEAN"], ["D", "INTEGER"], ["D", "INTEGER"], ["b", "c"]>>)
int_value (44)
equals
numerical_negation
add_attribute("D", "a", "BOOLEAN")
add_query("D", "e", <<["C", "BOOLEAN"], ["A", "e"], ["A", "INTEGER"], ["C", "B"], ["B", "D"], ["e", "d"], ["C", "c"], ["d", "BOOLEAN"], ["INTEGER", "INTEGER"]>>, "c")
add_call_chain(<<c,INTEGER,e,d,D,B,d,e,b>>)
conjunction
add_attribute("e", "b", "e")
add_attribute("A", "C", "e")
add_command("c", "e", <<["A", "B"]>>)
add_call_chain(<<D,c,A,c,D,A,c>>)
add_call_chain(<<a,C,d>>)
add_attribute("b", "BOOLEAN", "BOOLEAN")
add_query("a", "A", <<["a", "INTEGER"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "B"], ["D", "INTEGER"], ["A", "BOOLEAN"]>>, "INTEGER")
add_call_chain(<<A,BOOLEAN>>)
add_call_chain(<<D,INTEGER,D,D,A,b,INTEGER>>)
bool_value (false)
add_class(c)
add_call_chain(<<A,e,A>>)
add_class(a)
logical_negation
add_command("b", "a", <<["D", "A"], ["e", "C"], ["b", "INTEGER"], ["c", "a"], ["b", "INTEGER"], ["e", "C"]>>)
int_value (14)
add_attribute("b", "b", "D")
addition
int_value (48)
add_command("b", "d", <<["a", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["d", "INTEGER"], ["C", "BOOLEAN"], ["C", "e"], ["A", "INTEGER"], ["a", "BOOLEAN"]>>)
add_attribute("C", "e", "INTEGER")
equals
add_query("d", "BOOLEAN", <<["A", "d"], ["INTEGER", "INTEGER"]>>, "e")
add_call_chain(<<e,INTEGER,a>>)
generate_java_code
add_attribute("D", "INTEGER", "INTEGER")
disjunction
conjunction
add_attribute("e", "C", "e")
add_query("A", "C", <<["a", "A"], ["C", "c"], ["D", "INTEGER"], ["d", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "BOOLEAN"], ["INTEGER", "b"]>>, "INTEGER")
modulo
subtraction
add_query("C", "A", <<["D", "B"], ["c", "BOOLEAN"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "INTEGER"], ["e", "INTEGER"]>>, "B")
add_call_chain(<<C,INTEGER,a,BOOLEAN,a,c,B,C>>)
add_query("c", "d", <<["d", "INTEGER"], ["d", "BOOLEAN"], ["BOOLEAN", "A"], ["A", "c"], ["B", "INTEGER"], ["b", "a"]>>, "d")
generate_java_code
int_value (25)
add_attribute("d", "e", "BOOLEAN")
add_query("B", "C", <<["A", "INTEGER"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["B", "D"], ["b", "INTEGER"]>>, "BOOLEAN")
add_class(a)
add_call_chain(<<BOOLEAN,B,C,D,c,a,C>>)
type_check
add_class(A)
bool_value (true)
int_value (4)
generate_java_code
add_call_chain(<<D,a>>)
equals
add_attribute("C", "c", "INTEGER")
equals
add_attribute("e", "a", "INTEGER")
numerical_negation
less_than
add_call_chain(<<C,B,d,D>>)
int_value (2)
add_command("BOOLEAN", "B", <<["c", "BOOLEAN"], ["A", "INTEGER"], ["D", "BOOLEAN"]>>)
add_attribute("INTEGER", "INTEGER", "INTEGER")
int_value (36)
bool_value (true)
add_query("INTEGER", "INTEGER", <<["BOOLEAN", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["INTEGER", "D"], ["a", "INTEGER"], ["e", "INTEGER"], ["D", "d"], ["B", "INTEGER"]>>, "B")
bool_value (true)
add_call_chain(<<a,d,INTEGER,B,d,C>>)
subtraction
less_than
equals
type_check
add_command("D", "C", <<["c", "a"], ["B", "C"], ["INTEGER", "BOOLEAN"]>>)
int_value (1)
generate_java_code
add_command("B", "c", <<["BOOLEAN", "INTEGER"], ["c", "D"], ["INTEGER", "INTEGER"], ["c", "BOOLEAN"], ["INTEGER", "C"], ["D", "c"]>>)
numerical_negation
add_class(C)
greater_than
conjunction
logical_negation
int_value (28)
add_attribute("BOOLEAN", "A", "INTEGER")
add_call_chain(<<C,e,C,INTEGER,B>>)
int_value (32)
add_class(e)
add_command("D", "D", <<["c", "BOOLEAN"], ["e", "INTEGER"], ["A", "a"], ["C", "BOOLEAN"], ["C", "C"], ["b", "D"], ["d", "B"]>>)
int_value (9)
