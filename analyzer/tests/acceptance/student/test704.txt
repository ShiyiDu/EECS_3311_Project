type_check
add_query("C", "BOOLEAN", <<["B", "BOOLEAN"], ["INTEGER", "B"], ["e", "INTEGER"], ["c", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "d"], ["e", "BOOLEAN"], ["b", "INTEGER"]>>, "e")
add_query("e", "B", <<["d", "INTEGER"], ["A", "INTEGER"], ["C", "C"], ["c", "b"]>>, "b")
generate_java_code
quotient
add_attribute("d", "b", "BOOLEAN")
numerical_negation
numerical_negation
generate_java_code
less_than
add_attribute("D", "B", "a")
add_attribute("D", "A", "BOOLEAN")
add_query("a", "B", <<["c", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "INTEGER"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["d", "INTEGER"], ["A", "B"], ["INTEGER", "INTEGER"]>>, "e")
add_class(e)
add_call_chain(<<B,a,c,A,d,INTEGER,C,D>>)
add_call_chain(<<D,INTEGER,C,d,c>>)
bool_value (true)
add_query("D", "B", <<["C", "INTEGER"], ["e", "A"], ["D", "INTEGER"], ["a", "c"], ["C", "BOOLEAN"], ["D", "A"], ["e", "c"]>>, "D")
add_call_chain(<<e,A>>)
add_attribute("B", "INTEGER", "BOOLEAN")
add_command("A", "d", <<["e", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "BOOLEAN"], ["a", "e"], ["D", "INTEGER"], ["C", "INTEGER"], ["D", "a"], ["D", "B"], ["a", "B"]>>)
add_class(BOOLEAN)
generate_java_code
add_call_chain(<<c,b,d,B>>)
greater_than
add_attribute("d", "A", "D")
equals
logical_negation
add_call_chain(<<d,d,INTEGER,d,c>>)
logical_negation
disjunction
add_query("B", "B", <<["b", "INTEGER"], ["A", "B"], ["A", "BOOLEAN"], ["a", "BOOLEAN"], ["b", "BOOLEAN"], ["b", "INTEGER"]>>, "B")
int_value (45)
numerical_negation
int_value (16)
bool_value (true)
add_query("d", "A", <<["A", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["b", "a"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "C"]>>, "c")
add_query("a", "b", <<["e", "INTEGER"]>>, "d")
add_call_chain(<<b,B,b,A,A,B,D,B,A>>)
add_class(A)
add_class(a)
less_than
add_command("BOOLEAN", "b", <<["c", "a"]>>)
bool_value (true)
add_command("C", "B", <<["BOOLEAN", "C"]>>)
int_value (37)
bool_value (false)
logical_negation
multiplication
logical_negation
int_value (46)
add_call_chain(<<A,e,D,e,c,c>>)
addition
bool_value (true)
add_query("b", "B", <<["INTEGER", "INTEGER"], ["B", "INTEGER"], ["INTEGER", "A"], ["c", "INTEGER"], ["A", "INTEGER"], ["b", "INTEGER"], ["e", "D"], ["B", "BOOLEAN"]>>, "d")
numerical_negation
add_call_chain(<<c,b,C,C,C,INTEGER,a,c>>)
add_call_chain(<<B>>)
multiplication
add_attribute("D", "B", "e")
bool_value (false)
add_call_chain(<<b,c>>)
bool_value (false)
add_query("A", "BOOLEAN", <<["D", "BOOLEAN"]>>, "b")
equals
logical_negation
add_class(d)
add_attribute("INTEGER", "A", "INTEGER")
numerical_negation
add_call_chain(<<A>>)
add_command("A", "c", <<["D", "INTEGER"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["d", "BOOLEAN"], ["A", "BOOLEAN"]>>)
add_call_chain(<<C,A,A,BOOLEAN>>)
modulo
add_call_chain(<<A,B,c,D>>)
add_command("D", "D", <<["b", "D"], ["B", "c"], ["D", "A"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["e", "d"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["e", "INTEGER"]>>)
bool_value (true)
add_call_chain(<<INTEGER>>)
logical_negation
generate_java_code
logical_negation
add_query("e", "e", <<["C", "INTEGER"], ["d", "INTEGER"], ["C", "BOOLEAN"], ["a", "INTEGER"]>>, "C")
add_call_chain(<<C,a,B,BOOLEAN,C,c,C,b,A>>)
add_query("A", "INTEGER", <<["C", "e"], ["A", "BOOLEAN"]>>, "d")
add_attribute("b", "B", "BOOLEAN")
numerical_negation
add_query("A", "B", <<["a", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "e"], ["C", "INTEGER"], ["d", "INTEGER"], ["BOOLEAN", "A"], ["B", "A"], ["e", "c"], ["c", "b"]>>, "BOOLEAN")
add_query("d", "c", <<["B", "B"], ["d", "BOOLEAN"], ["B", "a"], ["d", "INTEGER"]>>, "A")
add_query("e", "d", <<["C", "INTEGER"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "c"], ["INTEGER", "BOOLEAN"], ["b", "INTEGER"], ["C", "INTEGER"], ["d", "BOOLEAN"], ["A", "BOOLEAN"]>>, "BOOLEAN")
add_attribute("D", "b", "INTEGER")
add_command("d", "D", <<["A", "BOOLEAN"], ["B", "b"], ["D", "d"], ["C", "BOOLEAN"]>>)
add_attribute("C", "e", "INTEGER")
logical_negation
add_attribute("INTEGER", "C", "INTEGER")
generate_java_code
type_check
greater_than
equals
logical_negation
int_value (47)
add_class(BOOLEAN)
greater_than
bool_value (false)
bool_value (true)
bool_value (true)
add_call_chain(<<c,B,C,B,c,d,e,c,d>>)
int_value (18)
bool_value (true)
add_command("e", "e", <<["B", "A"], ["c", "b"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>)
add_class(A)
add_call_chain(<<B>>)
add_command("C", "b", <<["INTEGER", "a"], ["b", "BOOLEAN"], ["e", "a"], ["BOOLEAN", "BOOLEAN"], ["c", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "a"], ["D", "INTEGER"]>>)
add_call_chain(<<d,C,D,c>>)
int_value (20)
add_call_chain(<<e,B,A,A>>)
disjunction
add_class(B)
add_call_chain(<<d,INTEGER,A>>)
add_query("INTEGER", "c", <<["c", "BOOLEAN"], ["B", "a"], ["A", "BOOLEAN"], ["d", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["b", "BOOLEAN"], ["e", "d"], ["B", "C"]>>, "A")
multiplication
logical_negation
add_call_chain(<<D,C,e,b,D,a,e,d>>)
add_call_chain(<<a,c,d,C,C,D,A>>)
add_command("B", "a", <<["B", "BOOLEAN"], ["d", "INTEGER"]>>)
numerical_negation
add_command("B", "c", <<["BOOLEAN", "BOOLEAN"]>>)
add_call_chain(<<C,B,b,B,B,A,c,c>>)
add_call_chain(<<A,BOOLEAN,b,D,a,D,A>>)
add_query("A", "A", <<["D", "C"]>>, "INTEGER")
bool_value (true)
add_command("C", "D", <<["c", "INTEGER"]>>)
add_command("INTEGER", "C", <<["a", "c"], ["D", "INTEGER"], ["B", "BOOLEAN"], ["e", "INTEGER"], ["D", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "INTEGER"]>>)
add_class(B)
conjunction
add_call_chain(<<C>>)
add_command("d", "c", <<["D", "BOOLEAN"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["B", "D"]>>)
add_query("c", "e", <<["A", "BOOLEAN"], ["D", "BOOLEAN"], ["INTEGER", "INTEGER"], ["C", "INTEGER"], ["B", "INTEGER"]>>, "b")
type_check
equals
type_check
add_call_chain(<<INTEGER,b,e,C,D>>)
add_query("a", "A", <<["a", "BOOLEAN"], ["c", "BOOLEAN"], ["d", "B"], ["c", "e"]>>, "INTEGER")
numerical_negation
add_query("B", "d", <<["C", "INTEGER"], ["c", "BOOLEAN"], ["B", "a"], ["A", "A"], ["d", "BOOLEAN"], ["a", "B"]>>, "a")
int_value (14)
numerical_negation
add_query("b", "e", <<["d", "BOOLEAN"], ["b", "C"], ["a", "D"], ["D", "BOOLEAN"], ["a", "a"]>>, "A")
equals
add_query("B", "C", <<["a", "A"], ["a", "INTEGER"], ["e", "INTEGER"], ["INTEGER", "BOOLEAN"], ["a", "INTEGER"], ["b", "a"], ["e", "a"], ["C", "a"], ["c", "d"]>>, "D")
add_attribute("INTEGER", "d", "BOOLEAN")
add_command("b", "d", <<["B", "c"], ["d", "BOOLEAN"], ["INTEGER", "INTEGER"], ["D", "INTEGER"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["c", "INTEGER"]>>)
less_than
add_command("B", "A", <<["C", "BOOLEAN"], ["d", "a"], ["d", "c"], ["b", "d"], ["A", "d"], ["BOOLEAN", "BOOLEAN"], ["c", "INTEGER"], ["INTEGER", "INTEGER"]>>)
add_class(D)
generate_java_code
add_attribute("D", "d", "B")
add_call_chain(<<B,c,B,B,a,a,B,b,b>>)
add_call_chain(<<e,A,C,d,A>>)
add_attribute("A", "D", "BOOLEAN")
bool_value (false)
bool_value (true)
int_value (33)
modulo
type_check
type_check
type_check
equals
add_attribute("c", "e", "BOOLEAN")
logical_negation
disjunction
add_command("C", "INTEGER", <<["BOOLEAN", "INTEGER"], ["B", "INTEGER"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["d", "INTEGER"], ["B", "INTEGER"], ["D", "INTEGER"]>>)
add_call_chain(<<c,C,INTEGER,b>>)
logical_negation
generate_java_code
subtraction
add_command("c", "A", <<["D", "INTEGER"], ["e", "INTEGER"], ["C", "INTEGER"], ["INTEGER", "INTEGER"], ["c", "D"], ["D", "D"], ["e", "INTEGER"]>>)
add_query("a", "C", <<["D", "INTEGER"], ["d", "INTEGER"], ["B", "INTEGER"]>>, "c")
add_command("D", "B", <<["a", "INTEGER"], ["B", "BOOLEAN"], ["a", "A"], ["D", "INTEGER"]>>)
add_command("D", "d", <<["b", "INTEGER"], ["c", "INTEGER"], ["C", "BOOLEAN"], ["B", "BOOLEAN"]>>)
add_command("c", "B", <<["c", "B"], ["A", "b"], ["b", "A"], ["c", "c"], ["A", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["C", "INTEGER"]>>)
generate_java_code
add_attribute("BOOLEAN", "C", "INTEGER")
int_value (45)
add_call_chain(<<c,D,A,c,c,D,d>>)
add_command("B", "b", <<["BOOLEAN", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "C"]>>)
add_command("INTEGER", "D", <<["INTEGER", "INTEGER"], ["B", "d"]>>)
add_command("c", "e", <<["b", "b"], ["C", "BOOLEAN"], ["c", "c"], ["c", "INTEGER"], ["B", "INTEGER"], ["b", "BOOLEAN"]>>)
type_check
bool_value (false)
add_attribute("e", "C", "INTEGER")
bool_value (true)
int_value (9)
int_value (1)
add_call_chain(<<b,e,C,A,a,D>>)
generate_java_code
add_class(e)
type_check
add_attribute("D", "D", "BOOLEAN")
conjunction
add_command("D", "INTEGER", <<["a", "INTEGER"], ["B", "INTEGER"], ["D", "c"], ["b", "BOOLEAN"], ["a", "B"], ["a", "INTEGER"], ["b", "INTEGER"], ["c", "BOOLEAN"]>>)
disjunction
add_attribute("BOOLEAN", "D", "INTEGER")
equals
add_query("C", "D", <<["C", "a"], ["D", "INTEGER"], ["c", "INTEGER"], ["B", "BOOLEAN"], ["e", "B"], ["C", "INTEGER"], ["d", "BOOLEAN"], ["A", "BOOLEAN"]>>, "A")
add_class(c)
add_call_chain(<<b,D>>)
int_value (40)
add_attribute("a", "b", "a")
add_class(e)
add_call_chain(<<c,a,B,INTEGER,a,INTEGER>>)
int_value (20)
add_query("b", "b", <<["a", "e"], ["D", "BOOLEAN"], ["c", "INTEGER"], ["D", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "BOOLEAN"], ["e", "INTEGER"], ["e", "B"], ["d", "BOOLEAN"]>>, "B")
type_check
add_call_chain(<<c,C>>)
int_value (44)
numerical_negation
add_attribute("a", "C", "INTEGER")
logical_negation
add_call_chain(<<INTEGER,d,C,B,b,A,C,b,c>>)
add_call_chain(<<a,B,a>>)
add_attribute("b", "C", "C")
add_call_chain(<<d,c,A,D,BOOLEAN,d,D>>)
add_class(INTEGER)
add_command("B", "B", <<["INTEGER", "INTEGER"], ["a", "INTEGER"], ["e", "BOOLEAN"], ["c", "INTEGER"], ["e", "e"], ["c", "INTEGER"]>>)
add_query("a", "INTEGER", <<["C", "INTEGER"]>>, "D")
logical_negation
logical_negation
add_call_chain(<<A,a,B>>)
int_value (10)
bool_value (false)
add_call_chain(<<b,D,BOOLEAN,B,D,BOOLEAN,d,c>>)
add_attribute("e", "C", "BOOLEAN")
add_call_chain(<<D,b,b,C>>)
less_than
greater_than
add_class(C)
add_attribute("d", "BOOLEAN", "c")
type_check
less_than
add_attribute("A", "C", "A")
add_query("c", "B", <<["e", "BOOLEAN"], ["B", "INTEGER"], ["e", "INTEGER"], ["b", "BOOLEAN"], ["c", "INTEGER"]>>, "B")
add_call_chain(<<d,C,c>>)
add_query("INTEGER", "B", <<["d", "INTEGER"], ["a", "C"]>>, "A")
add_attribute("A", "e", "INTEGER")
numerical_negation
subtraction
logical_negation
add_query("a", "a", <<["c", "BOOLEAN"], ["d", "INTEGER"], ["c", "BOOLEAN"], ["C", "d"], ["b", "INTEGER"], ["b", "d"]>>, "a")
add_command("d", "c", <<["c", "c"], ["D", "INTEGER"], ["B", "b"], ["A", "INTEGER"], ["b", "INTEGER"], ["d", "d"], ["c", "BOOLEAN"], ["c", "BOOLEAN"]>>)
conjunction
add_query("A", "d", <<["C", "BOOLEAN"]>>, "e")
bool_value (true)
int_value (48)
add_command("B", "A", <<["a", "BOOLEAN"], ["a", "INTEGER"], ["e", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "b"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "BOOLEAN"]>>)
type_check
add_class(D)
add_query("D", "A", <<["A", "INTEGER"], ["a", "b"], ["C", "C"], ["a", "c"], ["B", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["c", "C"]>>, "e")
add_call_chain(<<INTEGER,b,a,e,a,A,c,b>>)
add_attribute("b", "B", "INTEGER")
add_query("d", "b", <<["BOOLEAN", "A"], ["a", "INTEGER"], ["A", "B"], ["INTEGER", "A"], ["B", "BOOLEAN"]>>, "D")
add_query("c", "e", <<["b", "BOOLEAN"], ["C", "A"], ["B", "BOOLEAN"]>>, "B")
add_call_chain(<<e,d,A,e,c,d,C>>)
int_value (25)
add_class(e)
add_call_chain(<<a,b>>)
add_class(A)
type_check
add_class(B)
bool_value (false)
add_query("d", "c", <<["C", "d"], ["a", "BOOLEAN"], ["d", "BOOLEAN"]>>, "D")
add_attribute("D", "e", "C")
add_call_chain(<<b,D,d,a,a,A>>)
