logical_negation
logical_negation
bool_value (true)
add_command("B", "d", <<["B", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["INTEGER", "D"], ["INTEGER", "INTEGER"], ["C", "A"], ["c", "BOOLEAN"], ["e", "INTEGER"]>>)
add_query("a", "d", <<["c", "INTEGER"]>>, "INTEGER")
type_check
numerical_negation
add_call_chain(<<c,C,c,b,c>>)
add_command("e", "A", <<["C", "b"], ["D", "INTEGER"], ["D", "d"], ["B", "INTEGER"], ["b", "BOOLEAN"], ["c", "e"], ["INTEGER", "C"]>>)
int_value (6)
numerical_negation
equals
add_query("c", "e", <<["b", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "INTEGER"]>>, "d")
bool_value (true)
add_command("A", "d", <<["e", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "BOOLEAN"]>>)
logical_negation
disjunction
bool_value (false)
int_value (28)
numerical_negation
add_attribute("C", "B", "INTEGER")
add_query("d", "A", <<["BOOLEAN", "BOOLEAN"], ["b", "b"], ["b", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "BOOLEAN"], ["d", "A"], ["B", "BOOLEAN"]>>, "D")
add_call_chain(<<C>>)
add_query("c", "D", <<["a", "INTEGER"], ["a", "b"], ["A", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "d"]>>, "d")
add_call_chain(<<b,a,C,B,e,A,b,D,INTEGER>>)
logical_negation
int_value (22)
generate_java_code
add_call_chain(<<c,a,A,C,a>>)
generate_java_code
logical_negation
add_attribute("a", "B", "INTEGER")
add_call_chain(<<A,A,a,D,D>>)
generate_java_code
generate_java_code
add_command("D", "A", <<["B", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "BOOLEAN"]>>)
add_attribute("a", "B", "BOOLEAN")
conjunction
add_call_chain(<<c,A,e,BOOLEAN,INTEGER,C,c,b,e>>)
add_query("A", "c", <<["D", "INTEGER"], ["d", "C"], ["d", "BOOLEAN"], ["e", "B"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["D", "b"]>>, "d")
add_call_chain(<<b,BOOLEAN,BOOLEAN,D,a,a,b,d,B>>)
int_value (44)
logical_negation
add_attribute("A", "c", "INTEGER")
logical_negation
add_query("b", "INTEGER", <<["INTEGER", "BOOLEAN"], ["D", "BOOLEAN"]>>, "C")
add_call_chain(<<a,d,e,b,d,A,e>>)
numerical_negation
logical_negation
add_query("a", "A", <<["A", "INTEGER"], ["a", "A"], ["D", "INTEGER"]>>, "b")
add_attribute("c", "C", "b")
add_command("A", "e", <<["e", "BOOLEAN"], ["d", "INTEGER"], ["A", "D"]>>)
add_call_chain(<<D,e>>)
int_value (37)
type_check
bool_value (false)
add_command("d", "A", <<["BOOLEAN", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "c"], ["C", "INTEGER"]>>)
type_check
add_attribute("a", "B", "INTEGER")
add_call_chain(<<b,B,INTEGER,a,d,c,a,b,a>>)
add_call_chain(<<BOOLEAN,B,a,C>>)
add_call_chain(<<b,c>>)
numerical_negation
bool_value (false)
add_call_chain(<<c,e,D,INTEGER,C,c,B,a,C>>)
add_query("b", "D", <<["A", "INTEGER"], ["b", "INTEGER"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["a", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "C"]>>, "INTEGER")
add_call_chain(<<D,D,c>>)
bool_value (false)
bool_value (false)
add_command("INTEGER", "B", <<["e", "INTEGER"]>>)
add_call_chain(<<c,C,e,b,c>>)
add_command("a", "c", <<["D", "b"], ["c", "INTEGER"], ["C", "a"], ["BOOLEAN", "INTEGER"], ["A", "D"], ["B", "B"], ["B", "a"], ["D", "BOOLEAN"], ["e", "BOOLEAN"]>>)
add_query("B", "D", <<["D", "INTEGER"], ["c", "C"], ["a", "INTEGER"], ["B", "INTEGER"], ["A", "INTEGER"], ["INTEGER", "INTEGER"], ["a", "BOOLEAN"], ["D", "A"], ["d", "B"]>>, "D")
type_check
logical_negation
add_query("B", "A", <<["e", "INTEGER"], ["c", "INTEGER"], ["C", "BOOLEAN"]>>, "b")
type_check
generate_java_code
add_command("B", "B", <<["d", "INTEGER"]>>)
numerical_negation
numerical_negation
logical_negation
add_query("INTEGER", "D", <<["d", "C"], ["D", "INTEGER"], ["b", "C"], ["A", "INTEGER"]>>, "a")
add_command("e", "C", <<["D", "INTEGER"], ["B", "d"], ["INTEGER", "INTEGER"], ["C", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["c", "BOOLEAN"]>>)
add_command("B", "a", <<["b", "INTEGER"], ["C", "BOOLEAN"], ["B", "INTEGER"], ["C", "A"]>>)
add_call_chain(<<b,a,C,b,c,d,c,c>>)
type_check
int_value (7)
logical_negation
equals
greater_than
int_value (15)
quotient
add_attribute("C", "C", "BOOLEAN")
bool_value (false)
int_value (38)
add_attribute("C", "c", "INTEGER")
type_check
add_query("b", "C", <<["INTEGER", "e"], ["A", "b"], ["D", "b"], ["D", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["d", "BOOLEAN"], ["e", "BOOLEAN"]>>, "B")
add_command("D", "a", <<["B", "BOOLEAN"], ["a", "C"], ["INTEGER", "INTEGER"], ["A", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["d", "BOOLEAN"]>>)
quotient
generate_java_code
generate_java_code
add_query("B", "D", <<["c", "INTEGER"], ["B", "INTEGER"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["d", "BOOLEAN"], ["d", "INTEGER"], ["A", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "INTEGER"]>>, "c")
generate_java_code
add_call_chain(<<A,a,B,B,A,BOOLEAN,D>>)
add_call_chain(<<C,c,e,b,C>>)
bool_value (true)
add_call_chain(<<b,a,a>>)
add_command("C", "C", <<["B", "BOOLEAN"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["a", "INTEGER"], ["BOOLEAN", "INTEGER"]>>)
add_command("B", "e", <<["D", "e"], ["d", "C"], ["a", "BOOLEAN"], ["b", "A"], ["A", "c"], ["A", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["d", "e"], ["B", "a"]>>)
add_command("A", "d", <<["a", "BOOLEAN"], ["D", "INTEGER"], ["C", "INTEGER"]>>)
type_check
add_command("INTEGER", "D", <<["C", "BOOLEAN"], ["d", "INTEGER"]>>)
add_query("e", "e", <<["B", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "A"], ["b", "A"], ["b", "C"], ["B", "BOOLEAN"]>>, "B")
bool_value (true)
add_attribute("a", "d", "BOOLEAN")
int_value (36)
add_attribute("b", "D", "d")
add_call_chain(<<C,d,A,C,D>>)
type_check
add_command("B", "b", <<["C", "e"], ["INTEGER", "INTEGER"], ["C", "BOOLEAN"], ["B", "e"], ["c", "INTEGER"], ["d", "e"], ["b", "BOOLEAN"], ["b", "INTEGER"], ["A", "BOOLEAN"]>>)
add_query("e", "b", <<["e", "INTEGER"], ["d", "D"], ["d", "A"], ["B", "INTEGER"], ["A", "a"], ["C", "BOOLEAN"], ["C", "C"], ["C", "INTEGER"], ["c", "BOOLEAN"]>>, "c")
logical_negation
int_value (13)
add_query("BOOLEAN", "d", <<["c", "BOOLEAN"], ["C", "INTEGER"], ["INTEGER", "D"], ["e", "INTEGER"], ["INTEGER", "INTEGER"], ["A", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "BOOLEAN"]>>, "D")
logical_negation
add_call_chain(<<e,e,a,A,b,D>>)
bool_value (false)
numerical_negation
generate_java_code
generate_java_code
numerical_negation
int_value (28)
numerical_negation
add_call_chain(<<C,C,A,a,a,d>>)
generate_java_code
int_value (27)
int_value (26)
add_attribute("a", "C", "BOOLEAN")
add_command("INTEGER", "c", <<["d", "B"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["INTEGER", "C"], ["d", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
int_value (4)
generate_java_code
add_call_chain(<<INTEGER,C,d,a,B,B,e>>)
generate_java_code
add_query("INTEGER", "INTEGER", <<["A", "INTEGER"], ["e", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "D"]>>, "D")
modulo
add_call_chain(<<A,d,a,c,d,c,D>>)
bool_value (false)
add_command("D", "A", <<["a", "BOOLEAN"]>>)
type_check
add_call_chain(<<d,b>>)
bool_value (false)
int_value (32)
numerical_negation
add_command("D", "C", <<["d", "INTEGER"], ["B", "BOOLEAN"], ["e", "a"], ["INTEGER", "A"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["a", "INTEGER"]>>)
greater_than
numerical_negation
add_call_chain(<<C,a,B,c,B,c,B,D>>)
bool_value (false)
add_query("C", "D", <<["a", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "BOOLEAN"]>>, "a")
add_command("B", "e", <<["INTEGER", "INTEGER"]>>)
numerical_negation
add_command("e", "e", <<["B", "INTEGER"], ["B", "b"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["c", "BOOLEAN"], ["A", "INTEGER"], ["d", "INTEGER"], ["D", "c"]>>)
add_command("C", "BOOLEAN", <<["a", "BOOLEAN"], ["b", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
add_class(a)
logical_negation
bool_value (true)
bool_value (false)
logical_negation
bool_value (true)
disjunction
add_call_chain(<<D,B,e,D>>)
add_attribute("C", "a", "B")
add_call_chain(<<B,b,d,BOOLEAN,c,B>>)
add_command("A", "d", <<["b", "d"], ["INTEGER", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "B"], ["INTEGER", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
int_value (8)
add_command("B", "C", <<["b", "BOOLEAN"], ["d", "INTEGER"]>>)
conjunction
add_command("B", "D", <<["B", "INTEGER"], ["D", "BOOLEAN"], ["A", "c"], ["e", "INTEGER"], ["b", "INTEGER"], ["C", "A"], ["b", "INTEGER"], ["e", "INTEGER"]>>)
numerical_negation
add_query("a", "C", <<["e", "BOOLEAN"], ["d", "INTEGER"]>>, "a")
subtraction
add_command("C", "d", <<["C", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "INTEGER"]>>)
add_query("B", "A", <<["a", "INTEGER"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["a", "BOOLEAN"], ["B", "C"], ["D", "A"], ["C", "BOOLEAN"], ["A", "C"]>>, "e")
add_class(e)
generate_java_code
numerical_negation
add_call_chain(<<INTEGER,b,BOOLEAN,A,B>>)
int_value (2)
quotient
add_attribute("C", "d", "B")
greater_than
numerical_negation
generate_java_code
add_call_chain(<<D,B,c,c,d,B,C,a>>)
add_attribute("d", "d", "e")
add_query("a", "e", <<["A", "INTEGER"], ["b", "BOOLEAN"]>>, "d")
add_call_chain(<<d,A,d,a,D,c,d,A>>)
int_value (1)
add_call_chain(<<b,e,c,b>>)
add_call_chain(<<b,D,BOOLEAN,d,c,e,C>>)
int_value (10)
add_class(d)
equals
bool_value (true)
add_class(e)
bool_value (true)
conjunction
numerical_negation
add_query("d", "D", <<["D", "INTEGER"], ["b", "BOOLEAN"], ["A", "BOOLEAN"]>>, "D")
logical_negation
add_command("BOOLEAN", "d", <<["BOOLEAN", "c"]>>)
add_call_chain(<<B,b>>)
conjunction
add_query("B", "c", <<["d", "BOOLEAN"], ["C", "D"]>>, "b")
int_value (46)
add_attribute("BOOLEAN", "D", "D")
add_attribute("A", "D", "BOOLEAN")
disjunction
add_class(b)
numerical_negation
add_query("A", "C", <<["C", "INTEGER"], ["a", "c"], ["d", "INTEGER"], ["D", "INTEGER"], ["A", "b"]>>, "INTEGER")
add_attribute("BOOLEAN", "A", "BOOLEAN")
add_query("D", "b", <<["e", "INTEGER"]>>, "D")
add_query("D", "B", <<["C", "INTEGER"], ["a", "e"], ["BOOLEAN", "INTEGER"]>>, "d")
add_call_chain(<<B,c>>)
add_command("C", "B", <<["BOOLEAN", "e"], ["e", "INTEGER"], ["b", "D"], ["b", "INTEGER"], ["INTEGER", "INTEGER"], ["a", "INTEGER"], ["INTEGER", "BOOLEAN"], ["b", "INTEGER"], ["B", "d"]>>)
add_command("BOOLEAN", "A", <<["D", "INTEGER"], ["b", "INTEGER"], ["b", "INTEGER"], ["c", "d"], ["a", "INTEGER"], ["a", "BOOLEAN"], ["INTEGER", "INTEGER"]>>)
bool_value (true)
bool_value (true)
add_call_chain(<<D,d,b,A,C>>)
add_attribute("A", "B", "BOOLEAN")
bool_value (true)
bool_value (true)
add_query("d", "b", <<["a", "D"], ["B", "INTEGER"], ["B", "D"], ["A", "A"], ["b", "BOOLEAN"], ["a", "D"], ["a", "INTEGER"], ["D", "C"]>>, "INTEGER")
conjunction
addition
bool_value (false)
add_query("d", "B", <<["BOOLEAN", "INTEGER"], ["D", "C"], ["B", "d"], ["C", "INTEGER"], ["c", "INTEGER"], ["BOOLEAN", "d"], ["B", "BOOLEAN"], ["e", "BOOLEAN"], ["a", "BOOLEAN"]>>, "B")
add_class(a)
numerical_negation
add_class(a)
int_value (43)
disjunction
disjunction
add_command("B", "e", <<["A", "b"], ["D", "INTEGER"], ["B", "b"]>>)
add_command("c", "B", <<["C", "INTEGER"], ["A", "INTEGER"], ["a", "INTEGER"], ["B", "BOOLEAN"], ["D", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["B", "D"], ["B", "BOOLEAN"]>>)
add_query("a", "c", <<["A", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "BOOLEAN"]>>, "a")
add_query("e", "d", <<["BOOLEAN", "INTEGER"], ["d", "INTEGER"]>>, "A")
int_value (2)
add_call_chain(<<INTEGER,A,INTEGER,BOOLEAN,c>>)
add_call_chain(<<d,C,B,B,e,d,d>>)
logical_negation
add_class(d)
add_call_chain(<<B,A>>)
generate_java_code
logical_negation
less_than
less_than
add_query("d", "b", <<["e", "BOOLEAN"], ["e", "B"], ["d", "c"], ["d", "INTEGER"], ["d", "e"], ["C", "A"], ["b", "c"], ["c", "INTEGER"], ["b", "a"]>>, "b")
add_query("C", "b", <<["d", "INTEGER"]>>, "INTEGER")
modulo
type_check
add_command("e", "B", <<["INTEGER", "BOOLEAN"], ["c", "INTEGER"], ["a", "INTEGER"], ["C", "c"]>>)
conjunction
int_value (48)
add_call_chain(<<b,d,a,c,d,b>>)
logical_negation
logical_negation
add_command("d", "A", <<["b", "INTEGER"], ["D", "a"], ["D", "BOOLEAN"], ["A", "INTEGER"]>>)
bool_value (true)
int_value (14)
add_attribute("B", "C", "INTEGER")
add_command("BOOLEAN", "d", <<["b", "C"], ["C", "BOOLEAN"], ["d", "B"], ["C", "INTEGER"], ["c", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["c", "INTEGER"], ["C", "INTEGER"]>>)
int_value (37)
add_attribute("B", "a", "BOOLEAN")
add_attribute("B", "D", "BOOLEAN")
add_call_chain(<<A,D,a,B>>)
