add_call_chain(<<c,BOOLEAN,c,c>>)
add_call_chain(<<e,B,C,A>>)
add_call_chain(<<D,c>>)
add_command("d", "B", <<["B", "BOOLEAN"], ["D", "BOOLEAN"]>>)
add_attribute("BOOLEAN", "D", "BOOLEAN")
add_command("D", "e", <<["b", "a"], ["INTEGER", "INTEGER"], ["INTEGER", "BOOLEAN"], ["A", "D"], ["D", "INTEGER"]>>)
add_command("B", "b", <<["INTEGER", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "INTEGER"], ["b", "a"]>>)
add_query("BOOLEAN", "C", <<["d", "INTEGER"], ["B", "C"], ["C", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["B", "INTEGER"], ["D", "A"]>>, "A")
add_attribute("d", "B", "BOOLEAN")
modulo
addition
numerical_negation
int_value (22)
int_value (1)
add_query("C", "B", <<["a", "INTEGER"], ["A", "C"], ["C", "INTEGER"]>>, "D")
add_call_chain(<<INTEGER,b,b,D,D,D>>)
conjunction
logical_negation
add_command("b", "d", <<["b", "B"], ["e", "BOOLEAN"], ["c", "b"], ["B", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "C"], ["b", "BOOLEAN"]>>)
bool_value (true)
add_command("d", "C", <<["BOOLEAN", "a"], ["b", "BOOLEAN"], ["B", "c"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["C", "INTEGER"], ["BOOLEAN", "INTEGER"], ["b", "D"]>>)
numerical_negation
logical_negation
add_attribute("a", "A", "INTEGER")
equals
add_attribute("b", "A", "BOOLEAN")
int_value (26)
type_check
int_value (42)
add_call_chain(<<BOOLEAN,BOOLEAN,C,c,B,a,INTEGER,B,a>>)
equals
add_class(BOOLEAN)
greater_than
int_value (12)
add_command("c", "D", <<["c", "b"], ["e", "b"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["c", "INTEGER"], ["e", "INTEGER"], ["d", "BOOLEAN"], ["e", "b"]>>)
add_call_chain(<<A,e,D,B,D,b,B>>)
generate_java_code
add_attribute("A", "b", "d")
add_call_chain(<<BOOLEAN,d,d,b,b>>)
add_call_chain(<<INTEGER,d,a,B,c,B,c>>)
add_call_chain(<<C>>)
bool_value (true)
add_attribute("B", "B", "d")
add_query("D", "B", <<["A", "INTEGER"], ["e", "B"], ["C", "INTEGER"], ["a", "INTEGER"], ["B", "e"], ["B", "C"], ["b", "BOOLEAN"]>>, "B")
add_query("BOOLEAN", "A", <<["C", "d"], ["C", "BOOLEAN"], ["e", "BOOLEAN"]>>, "d")
add_attribute("b", "D", "BOOLEAN")
add_call_chain(<<BOOLEAN,A,d,C,D,e>>)
equals
add_query("c", "D", <<["c", "INTEGER"], ["d", "BOOLEAN"], ["e", "INTEGER"], ["A", "BOOLEAN"], ["B", "B"]>>, "D")
add_command("C", "b", <<["D", "BOOLEAN"], ["B", "D"]>>)
add_class(C)
bool_value (true)
int_value (31)
add_query("C", "D", <<["B", "d"]>>, "D")
conjunction
add_call_chain(<<A,d,d,C,BOOLEAN,INTEGER,A,a,A>>)
add_class(A)
add_query("B", "a", <<["b", "C"], ["INTEGER", "BOOLEAN"]>>, "b")
type_check
numerical_negation
bool_value (true)
int_value (43)
add_class(B)
add_call_chain(<<D,A,d,a,D,d,d,d,a>>)
generate_java_code
generate_java_code
numerical_negation
add_attribute("e", "a", "BOOLEAN")
generate_java_code
disjunction
type_check
add_attribute("a", "e", "INTEGER")
logical_negation
add_attribute("BOOLEAN", "e", "BOOLEAN")
add_command("e", "b", <<["D", "A"], ["C", "INTEGER"], ["A", "INTEGER"], ["d", "INTEGER"], ["e", "BOOLEAN"], ["a", "C"], ["a", "a"]>>)
add_attribute("b", "BOOLEAN", "b")
disjunction
type_check
bool_value (true)
add_query("C", "a", <<["C", "INTEGER"], ["C", "C"], ["c", "INTEGER"], ["b", "INTEGER"], ["C", "e"], ["INTEGER", "INTEGER"], ["c", "BOOLEAN"]>>, "A")
add_query("C", "e", <<["A", "BOOLEAN"], ["a", "c"], ["A", "INTEGER"], ["c", "b"], ["B", "BOOLEAN"], ["A", "INTEGER"]>>, "C")
conjunction
bool_value (false)
modulo
add_call_chain(<<D,a,a,d,D,D,c,INTEGER,INTEGER>>)
bool_value (false)
numerical_negation
bool_value (false)
add_call_chain(<<e>>)
add_command("A", "A", <<["e", "INTEGER"], ["c", "INTEGER"], ["d", "INTEGER"], ["d", "c"], ["e", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "INTEGER"]>>)
add_call_chain(<<B,C,D>>)
logical_negation
add_attribute("d", "c", "b")
add_command("B", "INTEGER", <<["b", "BOOLEAN"], ["b", "B"], ["a", "INTEGER"], ["d", "INTEGER"]>>)
int_value (21)
add_query("c", "a", <<["c", "BOOLEAN"]>>, "A")
generate_java_code
add_class(A)
add_command("C", "A", <<["b", "BOOLEAN"], ["a", "INTEGER"]>>)
numerical_negation
numerical_negation
add_command("b", "B", <<["A", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "b"], ["c", "INTEGER"], ["D", "INTEGER"], ["BOOLEAN", "b"], ["D", "BOOLEAN"]>>)
numerical_negation
generate_java_code
add_query("C", "b", <<["d", "BOOLEAN"], ["d", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>, "d")
add_call_chain(<<B,D,c,C,C,d,C,BOOLEAN>>)
add_query("D", "d", <<["D", "INTEGER"], ["e", "BOOLEAN"], ["D", "C"], ["a", "INTEGER"], ["A", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "A"], ["e", "INTEGER"]>>, "D")
add_call_chain(<<B,C,b,e,A,B>>)
add_command("c", "D", <<["d", "B"], ["a", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "BOOLEAN"]>>)
numerical_negation
add_query("C", "BOOLEAN", <<["d", "INTEGER"], ["a", "BOOLEAN"], ["c", "INTEGER"], ["d", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["c", "BOOLEAN"], ["B", "INTEGER"], ["D", "B"]>>, "b")
add_query("c", "a", <<["A", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["C", "BOOLEAN"], ["INTEGER", "INTEGER"], ["c", "D"], ["a", "INTEGER"]>>, "c")
subtraction
add_attribute("A", "e", "D")
add_attribute("a", "e", "INTEGER")
add_attribute("a", "A", "BOOLEAN")
add_class(B)
type_check
conjunction
equals
addition
add_call_chain(<<a,c,e,D,INTEGER,A>>)
int_value (14)
int_value (49)
int_value (41)
int_value (35)
add_query("D", "D", <<["B", "BOOLEAN"], ["c", "INTEGER"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["C", "INTEGER"], ["d", "INTEGER"]>>, "D")
add_query("e", "B", <<["b", "BOOLEAN"], ["c", "BOOLEAN"]>>, "INTEGER")
add_call_chain(<<B,e,c,INTEGER,c,a>>)
add_query("c", "INTEGER", <<["d", "INTEGER"], ["c", "BOOLEAN"], ["d", "INTEGER"], ["D", "b"], ["a", "INTEGER"], ["c", "B"]>>, "c")
bool_value (false)
bool_value (true)
bool_value (false)
bool_value (true)
add_query("A", "d", <<["A", "INTEGER"]>>, "INTEGER")
numerical_negation
equals
logical_negation
add_class(b)
add_call_chain(<<d,A,INTEGER,e>>)
logical_negation
add_command("C", "D", <<["A", "INTEGER"], ["c", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "c"], ["A", "D"], ["c", "BOOLEAN"]>>)
logical_negation
add_call_chain(<<b,D>>)
int_value (7)
int_value (5)
add_command("c", "d", <<["B", "INTEGER"], ["a", "BOOLEAN"], ["A", "INTEGER"], ["c", "INTEGER"], ["BOOLEAN", "INTEGER"]>>)
add_command("B", "e", <<["A", "INTEGER"], ["D", "INTEGER"], ["BOOLEAN", "e"], ["B", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["D", "BOOLEAN"]>>)
add_attribute("D", "INTEGER", "INTEGER")
add_command("b", "c", <<["C", "INTEGER"], ["A", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["d", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>)
equals
numerical_negation
add_command("B", "B", <<["B", "INTEGER"], ["INTEGER", "INTEGER"], ["C", "BOOLEAN"]>>)
int_value (5)
add_attribute("A", "B", "INTEGER")
add_call_chain(<<D,d,D>>)
add_class(e)
add_command("A", "D", <<["e", "INTEGER"], ["b", "BOOLEAN"], ["INTEGER", "INTEGER"], ["d", "INTEGER"], ["B", "BOOLEAN"]>>)
generate_java_code
generate_java_code
add_call_chain(<<D,B,B,c,C>>)
numerical_negation
add_attribute("C", "c", "BOOLEAN")
add_class(A)
add_query("B", "INTEGER", <<["BOOLEAN", "A"], ["B", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "INTEGER"]>>, "d")
numerical_negation
add_call_chain(<<C,d,BOOLEAN,b,B,e>>)
bool_value (true)
add_call_chain(<<C,e,INTEGER,B,C,C>>)
disjunction
add_query("d", "D", <<["c", "BOOLEAN"], ["A", "INTEGER"], ["d", "BOOLEAN"], ["b", "D"], ["BOOLEAN", "INTEGER"], ["e", "INTEGER"], ["e", "INTEGER"], ["a", "INTEGER"]>>, "D")
add_query("a", "BOOLEAN", <<["a", "INTEGER"], ["a", "BOOLEAN"], ["e", "BOOLEAN"]>>, "d")
logical_negation
modulo
int_value (19)
add_call_chain(<<B,a,a,INTEGER,c,a,BOOLEAN,BOOLEAN>>)
add_attribute("b", "a", "B")
add_attribute("e", "A", "INTEGER")
add_call_chain(<<A,b,B,D,c,B,D,BOOLEAN,b>>)
add_attribute("a", "e", "INTEGER")
add_query("d", "a", <<["d", "C"], ["INTEGER", "d"], ["D", "INTEGER"], ["b", "BOOLEAN"]>>, "c")
generate_java_code
bool_value (true)
add_command("e", "INTEGER", <<["b", "BOOLEAN"], ["b", "INTEGER"], ["B", "INTEGER"], ["C", "INTEGER"], ["b", "e"], ["d", "a"], ["a", "INTEGER"], ["a", "c"]>>)
bool_value (false)
numerical_negation
multiplication
int_value (33)
add_call_chain(<<A,C,INTEGER,c,B,C,B,A>>)
add_query("e", "b", <<["A", "e"], ["B", "BOOLEAN"], ["B", "INTEGER"], ["B", "INTEGER"], ["BOOLEAN", "C"]>>, "c")
add_attribute("BOOLEAN", "A", "INTEGER")
add_attribute("BOOLEAN", "INTEGER", "INTEGER")
add_query("b", "c", <<["INTEGER", "BOOLEAN"], ["C", "INTEGER"], ["b", "a"]>>, "D")
add_call_chain(<<D>>)
add_command("D", "c", <<["c", "INTEGER"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["C", "e"], ["e", "e"], ["a", "INTEGER"], ["a", "INTEGER"]>>)
add_query("C", "D", <<["c", "c"]>>, "C")
add_query("D", "C", <<["C", "BOOLEAN"], ["a", "BOOLEAN"]>>, "e")
bool_value (false)
add_call_chain(<<D,C,D,A,D,B>>)
quotient
less_than
add_call_chain(<<e,A,e,e>>)
add_attribute("A", "BOOLEAN", "INTEGER")
bool_value (false)
add_query("D", "b", <<["c", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "BOOLEAN"]>>, "c")
add_command("b", "e", <<["d", "d"]>>)
add_attribute("A", "c", "e")
bool_value (true)
add_class(B)
addition
numerical_negation
add_query("B", "b", <<["A", "BOOLEAN"], ["C", "BOOLEAN"], ["d", "A"]>>, "C")
add_query("e", "A", <<["B", "INTEGER"], ["C", "D"]>>, "d")
logical_negation
add_call_chain(<<c,a,c,A,A,A>>)
type_check
