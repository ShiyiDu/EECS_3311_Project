add_call_chain(<<e,d,c,a,C>>)
add_command("a", "BOOLEAN", <<["B", "BOOLEAN"], ["a", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["b", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["D", "a"]>>)
subtraction
add_attribute("B", "a", "INTEGER")
type_check
add_attribute("C", "d", "BOOLEAN")
int_value (15)
logical_negation
add_call_chain(<<A>>)
add_attribute("B", "C", "INTEGER")
add_command("INTEGER", "c", <<["c", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "BOOLEAN"]>>)
add_query("D", "e", <<["A", "BOOLEAN"], ["c", "BOOLEAN"], ["b", "INTEGER"]>>, "C")
bool_value (false)
add_call_chain(<<D,e,e,A,A>>)
add_command("a", "C", <<["B", "BOOLEAN"], ["c", "D"], ["B", "b"], ["d", "BOOLEAN"], ["D", "BOOLEAN"]>>)
add_attribute("C", "A", "BOOLEAN")
logical_negation
add_command("b", "e", <<["A", "d"], ["c", "d"], ["B", "b"], ["B", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "INTEGER"], ["C", "INTEGER"], ["B", "D"], ["b", "INTEGER"]>>)
less_than
add_call_chain(<<A,B,B,A>>)
disjunction
add_query("INTEGER", "e", <<["a", "INTEGER"], ["b", "INTEGER"], ["C", "A"], ["B", "BOOLEAN"]>>, "b")
add_call_chain(<<d,C,b,D,C>>)
type_check
bool_value (true)
add_call_chain(<<b,C,A,a,D,D,INTEGER>>)
subtraction
add_attribute("A", "D", "a")
add_call_chain(<<e,b>>)
logical_negation
logical_negation
add_call_chain(<<C,D,c,c,B,a,C,D>>)
add_call_chain(<<D>>)
logical_negation
bool_value (false)
logical_negation
add_query("A", "b", <<["INTEGER", "B"]>>, "BOOLEAN")
logical_negation
numerical_negation
type_check
quotient
bool_value (false)
bool_value (false)
add_attribute("BOOLEAN", "D", "BOOLEAN")
add_attribute("C", "c", "INTEGER")
add_call_chain(<<d,C,C,b,d,c,C>>)
bool_value (true)
add_call_chain(<<B>>)
add_command("D", "A", <<["b", "e"], ["d", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["e", "c"], ["a", "INTEGER"]>>)
conjunction
bool_value (false)
numerical_negation
add_call_chain(<<e,D,e,B,A,c,D,c>>)
type_check
int_value (26)
bool_value (true)
add_query("INTEGER", "c", <<["INTEGER", "INTEGER"]>>, "c")
add_attribute("C", "D", "INTEGER")
conjunction
add_attribute("D", "b", "BOOLEAN")
add_call_chain(<<A,B,INTEGER,B,C,e>>)
add_command("D", "D", <<["C", "BOOLEAN"], ["c", "INTEGER"], ["e", "BOOLEAN"], ["D", "C"], ["a", "e"], ["D", "INTEGER"]>>)
addition
numerical_negation
type_check
add_call_chain(<<A,D,C,C,D>>)
add_class(d)
add_call_chain(<<e,e,A,A,INTEGER>>)
add_command("C", "D", <<["BOOLEAN", "c"], ["e", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["B", "BOOLEAN"]>>)
numerical_negation
modulo
logical_negation
generate_java_code
type_check
int_value (16)
add_command("a", "d", <<["b", "c"], ["C", "INTEGER"], ["b", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["e", "INTEGER"]>>)
int_value (5)
add_call_chain(<<e,a,d,e,D,D>>)
add_query("INTEGER", "d", <<["e", "B"], ["B", "B"], ["c", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>, "d")
add_query("C", "D", <<["C", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "c"], ["BOOLEAN", "INTEGER"], ["D", "B"]>>, "C")
add_command("BOOLEAN", "c", <<["C", "BOOLEAN"], ["b", "INTEGER"], ["B", "INTEGER"], ["d", "INTEGER"], ["C", "B"], ["c", "INTEGER"]>>)
add_class(a)
logical_negation
add_command("D", "D", <<["INTEGER", "c"], ["C", "a"], ["a", "C"]>>)
numerical_negation
numerical_negation
logical_negation
add_query("BOOLEAN", "C", <<["A", "BOOLEAN"], ["A", "INTEGER"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "BOOLEAN"]>>, "a")
logical_negation
add_call_chain(<<b,d,a,B,B,C,a>>)
int_value (42)
bool_value (false)
add_call_chain(<<c,B,D,d,d,B,D,b,c>>)
add_call_chain(<<c,c,C,e,INTEGER,a,B,e,e>>)
add_query("BOOLEAN", "d", <<["b", "C"], ["A", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "D"], ["D", "INTEGER"], ["b", "c"]>>, "b")
bool_value (true)
add_command("a", "A", <<["B", "C"], ["c", "A"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["D", "A"], ["A", "INTEGER"]>>)
type_check
add_call_chain(<<c,a,A,A>>)
bool_value (true)
add_command("b", "C", <<["C", "A"], ["c", "BOOLEAN"], ["c", "INTEGER"], ["BOOLEAN", "INTEGER"], ["C", "c"]>>)
less_than
subtraction
add_call_chain(<<a,c,BOOLEAN,B,a,BOOLEAN,INTEGER>>)
add_attribute("e", "B", "C")
add_command("B", "D", <<["d", "INTEGER"], ["A", "c"], ["c", "d"], ["C", "INTEGER"], ["B", "INTEGER"], ["e", "INTEGER"], ["d", "BOOLEAN"], ["C", "BOOLEAN"]>>)
logical_negation
disjunction
numerical_negation
add_command("e", "C", <<["a", "a"], ["c", "a"], ["e", "A"], ["d", "INTEGER"], ["C", "BOOLEAN"], ["BOOLEAN", "c"]>>)
add_command("c", "e", <<["a", "BOOLEAN"], ["D", "a"], ["INTEGER", "BOOLEAN"], ["B", "D"], ["C", "INTEGER"], ["B", "INTEGER"], ["INTEGER", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "INTEGER"]>>)
add_call_chain(<<BOOLEAN,a,BOOLEAN>>)
bool_value (false)
add_command("C", "c", <<["c", "BOOLEAN"]>>)
add_query("C", "D", <<["b", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "d"]>>, "INTEGER")
add_attribute("B", "C", "B")
add_call_chain(<<c,B,c,A>>)
add_attribute("b", "c", "D")
add_command("A", "B", <<["e", "BOOLEAN"], ["a", "A"], ["C", "b"], ["e", "A"], ["B", "INTEGER"], ["D", "b"], ["b", "BOOLEAN"], ["C", "INTEGER"]>>)
add_call_chain(<<b,e,C,c>>)
add_attribute("BOOLEAN", "C", "INTEGER")
generate_java_code
int_value (47)
add_attribute("e", "A", "INTEGER")
add_command("d", "INTEGER", <<["C", "INTEGER"], ["c", "BOOLEAN"], ["e", "INTEGER"]>>)
add_attribute("D", "A", "INTEGER")
add_query("a", "e", <<["D", "INTEGER"], ["BOOLEAN", "c"]>>, "e")
int_value (24)
generate_java_code
int_value (38)
type_check
numerical_negation
bool_value (true)
add_command("d", "C", <<["A", "INTEGER"], ["c", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "C"]>>)
quotient
conjunction
add_query("A", "A", <<["C", "a"], ["INTEGER", "B"], ["B", "b"], ["C", "BOOLEAN"]>>, "B")
add_attribute("a", "A", "C")
int_value (2)
less_than
add_call_chain(<<BOOLEAN,A,A,B,e,D>>)
add_call_chain(<<c,B,C,B,D,B,d>>)
greater_than
logical_negation
add_call_chain(<<a,C,a>>)
int_value (28)
add_command("B", "INTEGER", <<["b", "a"], ["C", "D"], ["e", "D"], ["A", "INTEGER"], ["B", "B"]>>)
add_command("e", "D", <<["C", "BOOLEAN"], ["INTEGER", "A"]>>)
add_attribute("D", "C", "INTEGER")
add_call_chain(<<e>>)
add_call_chain(<<b,e,INTEGER,d,d,b,A,b,c>>)
add_call_chain(<<e,e,a,a,B,A,e,b>>)
generate_java_code
logical_negation
add_call_chain(<<C,C,BOOLEAN>>)
int_value (11)
subtraction
logical_negation
add_class(d)
logical_negation
generate_java_code
modulo
generate_java_code
numerical_negation
add_attribute("d", "D", "B")
greater_than
int_value (38)
add_command("C", "B", <<["B", "BOOLEAN"], ["C", "A"], ["INTEGER", "A"], ["a", "BOOLEAN"], ["D", "BOOLEAN"]>>)
add_command("b", "e", <<["d", "a"], ["C", "C"], ["B", "INTEGER"], ["INTEGER", "BOOLEAN"], ["C", "BOOLEAN"], ["d", "A"], ["d", "INTEGER"], ["b", "INTEGER"], ["C", "b"]>>)
int_value (26)
add_command("INTEGER", "b", <<["c", "a"], ["D", "INTEGER"], ["d", "INTEGER"]>>)
add_call_chain(<<c,D,b>>)
add_query("A", "d", <<["b", "BOOLEAN"], ["A", "INTEGER"], ["b", "INTEGER"], ["D", "INTEGER"], ["D", "INTEGER"], ["b", "BOOLEAN"], ["d", "INTEGER"], ["D", "INTEGER"]>>, "C")
add_call_chain(<<B,b,B,INTEGER,a,B,B,b,B>>)
type_check
bool_value (false)
logical_negation
conjunction
greater_than
add_command("B", "D", <<["d", "INTEGER"], ["A", "b"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["b", "A"], ["e", "INTEGER"], ["BOOLEAN", "INTEGER"], ["d", "INTEGER"], ["C", "e"]>>)
add_command("BOOLEAN", "D", <<["B", "C"]>>)
less_than
bool_value (false)
bool_value (false)
quotient
int_value (3)
numerical_negation
add_call_chain(<<a,D,B,d,D,C,b,C,D>>)
type_check
int_value (17)
add_call_chain(<<BOOLEAN,e,B>>)
bool_value (false)
add_call_chain(<<C,D,INTEGER,c>>)
logical_negation
add_call_chain(<<a,c,D,D,C,INTEGER,B,e,c>>)
add_command("C", "b", <<["c", "INTEGER"], ["a", "A"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "e"]>>)
disjunction
disjunction
add_attribute("b", "a", "BOOLEAN")
add_attribute("D", "c", "INTEGER")
bool_value (true)
add_attribute("C", "e", "BOOLEAN")
add_call_chain(<<B>>)
add_class(D)
add_attribute("c", "A", "BOOLEAN")
add_attribute("b", "e", "INTEGER")
add_query("c", "B", <<["B", "INTEGER"], ["INTEGER", "BOOLEAN"], ["a", "e"], ["D", "INTEGER"]>>, "e")
add_query("d", "d", <<["c", "A"], ["B", "D"]>>, "e")
add_call_chain(<<A,b,A,e,e,B>>)
type_check
conjunction
add_query("d", "B", <<["a", "BOOLEAN"], ["INTEGER", "INTEGER"], ["a", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "INTEGER"], ["e", "BOOLEAN"]>>, "e")
type_check
add_class(a)
add_call_chain(<<e,b,B,INTEGER,B,d,C>>)
add_attribute("c", "a", "BOOLEAN")
bool_value (true)
int_value (17)
add_call_chain(<<B,C,B,A,A>>)
generate_java_code
type_check
int_value (20)
add_call_chain(<<b,e,a,B>>)
conjunction
add_command("B", "c", <<["A", "C"], ["INTEGER", "INTEGER"], ["e", "b"], ["D", "A"]>>)
equals
add_command("D", "INTEGER", <<["INTEGER", "c"], ["B", "BOOLEAN"]>>)
logical_negation
add_command("b", "A", <<["c", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["d", "BOOLEAN"], ["d", "B"], ["D", "INTEGER"]>>)
greater_than
