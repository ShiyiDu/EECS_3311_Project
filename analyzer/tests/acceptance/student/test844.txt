logical_negation
add_call_chain(<<A>>)
add_call_chain(<<d,b>>)
add_call_chain(<<D,C>>)
add_call_chain(<<b,BOOLEAN,a,d>>)
add_call_chain(<<A,a,c,a,e,b>>)
multiplication
add_class(e)
int_value (26)
logical_negation
add_query("INTEGER", "e", <<["D", "INTEGER"], ["D", "b"], ["C", "INTEGER"], ["a", "BOOLEAN"], ["d", "INTEGER"], ["e", "BOOLEAN"]>>, "A")
add_command("B", "e", <<["A", "INTEGER"], ["a", "INTEGER"], ["b", "D"]>>)
add_attribute("c", "C", "INTEGER")
equals
numerical_negation
add_query("B", "a", <<["c", "BOOLEAN"], ["e", "A"], ["c", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "B"], ["d", "e"], ["C", "INTEGER"]>>, "A")
generate_java_code
logical_negation
add_attribute("INTEGER", "d", "INTEGER")
add_command("C", "c", <<["e", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["C", "INTEGER"], ["c", "b"], ["C", "C"], ["e", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["D", "e"]>>)
logical_negation
numerical_negation
add_command("A", "c", <<["d", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "B"], ["b", "INTEGER"], ["b", "BOOLEAN"]>>)
int_value (48)
add_attribute("B", "b", "INTEGER")
add_call_chain(<<INTEGER,D,C,d,C,b,B>>)
bool_value (false)
add_query("B", "d", <<["C", "C"], ["INTEGER", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["INTEGER", "INTEGER"]>>, "A")
bool_value (false)
modulo
logical_negation
logical_negation
add_class(C)
conjunction
add_call_chain(<<B,e,d,INTEGER,B,a>>)
add_call_chain(<<D,D>>)
less_than
int_value (37)
less_than
int_value (31)
add_call_chain(<<d,D>>)
greater_than
add_attribute("C", "C", "INTEGER")
add_call_chain(<<a,d,B>>)
add_attribute("B", "C", "c")
bool_value (false)
bool_value (false)
add_query("d", "INTEGER", <<["e", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["D", "INTEGER"]>>, "c")
add_attribute("a", "a", "INTEGER")
add_class(A)
add_query("D", "INTEGER", <<["c", "BOOLEAN"], ["b", "INTEGER"]>>, "e")
logical_negation
add_query("B", "c", <<["a", "BOOLEAN"], ["D", "b"], ["D", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["D", "e"]>>, "C")
type_check
logical_negation
numerical_negation
equals
bool_value (false)
add_attribute("c", "C", "INTEGER")
add_command("C", "a", <<["a", "BOOLEAN"], ["INTEGER", "B"], ["d", "BOOLEAN"], ["INTEGER", "C"], ["d", "INTEGER"], ["b", "c"], ["C", "INTEGER"], ["c", "BOOLEAN"], ["c", "BOOLEAN"]>>)
numerical_negation
generate_java_code
add_query("C", "b", <<["e", "a"], ["d", "BOOLEAN"]>>, "c")
generate_java_code
conjunction
multiplication
add_attribute("c", "b", "INTEGER")
add_query("C", "D", <<["D", "INTEGER"]>>, "BOOLEAN")
int_value (11)
add_attribute("D", "B", "INTEGER")
add_query("e", "d", <<["e", "INTEGER"], ["D", "A"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["d", "e"], ["B", "b"], ["d", "c"]>>, "A")
int_value (48)
add_call_chain(<<d,e,A>>)
add_query("A", "INTEGER", <<["a", "INTEGER"], ["A", "B"], ["a", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "b"], ["C", "e"], ["c", "BOOLEAN"], ["D", "INTEGER"], ["A", "INTEGER"]>>, "D")
add_attribute("A", "c", "BOOLEAN")
int_value (44)
add_command("B", "c", <<["a", "A"], ["D", "BOOLEAN"], ["c", "INTEGER"], ["a", "INTEGER"], ["b", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "BOOLEAN"]>>)
type_check
bool_value (false)
int_value (20)
numerical_negation
add_attribute("b", "D", "C")
int_value (3)
logical_negation
add_command("A", "C", <<["INTEGER", "INTEGER"], ["INTEGER", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "INTEGER"]>>)
type_check
add_command("c", "c", <<["c", "BOOLEAN"], ["C", "A"], ["A", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
add_class(C)
add_call_chain(<<D,C,D>>)
type_check
numerical_negation
conjunction
add_call_chain(<<e,C,c,a>>)
logical_negation
add_command("e", "A", <<["e", "INTEGER"], ["b", "A"], ["e", "INTEGER"], ["a", "BOOLEAN"]>>)
add_class(e)
add_command("e", "A", <<["e", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "INTEGER"], ["d", "A"], ["C", "A"], ["d", "BOOLEAN"], ["A", "BOOLEAN"]>>)
add_call_chain(<<c,A,d,D,BOOLEAN,c,C,C,B>>)
add_call_chain(<<C,e,a,d,INTEGER>>)
add_command("C", "a", <<["INTEGER", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "C"], ["e", "INTEGER"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["a", "BOOLEAN"], ["B", "INTEGER"], ["d", "INTEGER"]>>)
add_call_chain(<<a,D,A,c,A,INTEGER,d>>)
add_attribute("C", "D", "c")
numerical_negation
multiplication
add_command("D", "b", <<["BOOLEAN", "INTEGER"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "d"], ["BOOLEAN", "e"], ["b", "BOOLEAN"]>>)
add_query("D", "INTEGER", <<["D", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "BOOLEAN"]>>, "B")
generate_java_code
add_call_chain(<<c>>)
add_call_chain(<<b,c,BOOLEAN,C,A,C,b>>)
multiplication
logical_negation
add_attribute("INTEGER", "d", "B")
generate_java_code
int_value (39)
add_attribute("C", "D", "a")
add_call_chain(<<B,C,INTEGER,a,b,C,A,b>>)
int_value (41)
multiplication
add_call_chain(<<a,d,A,e,B,c,D,B,e>>)
conjunction
bool_value (true)
add_attribute("e", "e", "INTEGER")
logical_negation
numerical_negation
bool_value (true)
conjunction
less_than
add_command("D", "C", <<["BOOLEAN", "A"], ["C", "INTEGER"], ["a", "e"], ["B", "INTEGER"], ["INTEGER", "D"], ["D", "BOOLEAN"], ["D", "BOOLEAN"]>>)
conjunction
int_value (44)
add_call_chain(<<C,e,d,A,a>>)
bool_value (true)
add_attribute("e", "a", "BOOLEAN")
generate_java_code
bool_value (true)
generate_java_code
add_command("B", "e", <<["C", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "a"], ["A", "a"]>>)
bool_value (true)
add_command("d", "D", <<["D", "C"]>>)
add_query("e", "B", <<["e", "BOOLEAN"], ["e", "D"], ["C", "B"], ["D", "e"]>>, "A")
numerical_negation
bool_value (false)
addition
add_call_chain(<<A>>)
add_command("INTEGER", "d", <<["D", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "D"]>>)
numerical_negation
greater_than
add_command("D", "B", <<["C", "BOOLEAN"], ["A", "INTEGER"], ["e", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "BOOLEAN"]>>)
add_call_chain(<<e,b,A>>)
int_value (8)
add_call_chain(<<D,D>>)
bool_value (false)
add_attribute("C", "b", "d")
int_value (39)
generate_java_code
int_value (5)
add_attribute("b", "A", "c")
add_attribute("b", "b", "INTEGER")
int_value (13)
add_call_chain(<<A,A,INTEGER,A,b,e,BOOLEAN>>)
conjunction
disjunction
add_command("a", "e", <<["B", "A"], ["a", "INTEGER"], ["c", "BOOLEAN"]>>)
generate_java_code
add_attribute("b", "e", "INTEGER")
logical_negation
equals
generate_java_code
generate_java_code
generate_java_code
add_query("a", "c", <<["D", "INTEGER"], ["INTEGER", "BOOLEAN"], ["A", "INTEGER"]>>, "e")
quotient
add_command("d", "D", <<["c", "BOOLEAN"], ["D", "INTEGER"], ["B", "B"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["BOOLEAN", "c"], ["a", "INTEGER"], ["D", "BOOLEAN"]>>)
int_value (31)
add_command("A", "a", <<["b", "INTEGER"], ["A", "e"], ["A", "INTEGER"], ["e", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["INTEGER", "a"]>>)
add_query("a", "C", <<["A", "B"], ["d", "BOOLEAN"], ["e", "b"]>>, "B")
add_query("c", "c", <<["INTEGER", "a"], ["b", "b"], ["a", "INTEGER"]>>, "BOOLEAN")
generate_java_code
add_call_chain(<<b,d,A,A,C,a>>)
disjunction
add_call_chain(<<d,d,b,BOOLEAN,c>>)
logical_negation
add_attribute("c", "D", "B")
generate_java_code
add_class(d)
add_query("e", "INTEGER", <<["e", "INTEGER"], ["d", "INTEGER"], ["a", "INTEGER"], ["INTEGER", "C"], ["C", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "INTEGER"], ["D", "INTEGER"], ["b", "INTEGER"]>>, "D")
add_call_chain(<<INTEGER,a,a,b,C,b>>)
logical_negation
add_command("BOOLEAN", "d", <<["B", "INTEGER"], ["D", "BOOLEAN"], ["B", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["D", "INTEGER"], ["A", "BOOLEAN"], ["A", "INTEGER"]>>)
int_value (18)
add_command("A", "d", <<["B", "BOOLEAN"], ["e", "INTEGER"], ["C", "BOOLEAN"], ["b", "INTEGER"]>>)
int_value (21)
add_attribute("A", "D", "D")
int_value (33)
int_value (19)
conjunction
bool_value (false)
bool_value (false)
add_call_chain(<<e,A,A,b>>)
int_value (13)
numerical_negation
add_command("e", "B", <<["e", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "BOOLEAN"], ["d", "BOOLEAN"], ["c", "c"], ["a", "a"]>>)
type_check
numerical_negation
less_than
add_attribute("C", "e", "b")
quotient
add_query("A", "e", <<["d", "INTEGER"], ["D", "b"], ["B", "a"], ["C", "C"]>>, "e")
multiplication
add_call_chain(<<b,A>>)
disjunction
numerical_negation
add_call_chain(<<A,BOOLEAN,INTEGER,INTEGER>>)
add_call_chain(<<INTEGER>>)
add_call_chain(<<a,D,a>>)
add_query("A", "A", <<["c", "BOOLEAN"], ["D", "INTEGER"], ["c", "INTEGER"], ["BOOLEAN", "B"], ["C", "INTEGER"]>>, "BOOLEAN")
add_command("e", "C", <<["d", "BOOLEAN"], ["b", "C"], ["B", "BOOLEAN"], ["d", "BOOLEAN"]>>)
add_query("INTEGER", "C", <<["C", "INTEGER"], ["d", "BOOLEAN"], ["b", "BOOLEAN"], ["INTEGER", "INTEGER"], ["D", "d"]>>, "b")
add_call_chain(<<B,D,e,c,INTEGER,C>>)
add_attribute("d", "A", "BOOLEAN")
generate_java_code
add_call_chain(<<BOOLEAN,c,D,C,b,D,d,A>>)
multiplication
add_attribute("a", "A", "e")
less_than
quotient
logical_negation
less_than
add_call_chain(<<B,b,e,A>>)
add_command("D", "e", <<["D", "INTEGER"], ["c", "INTEGER"], ["B", "INTEGER"], ["BOOLEAN", "INTEGER"], ["B", "a"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["A", "A"], ["D", "BOOLEAN"]>>)
add_attribute("INTEGER", "d", "INTEGER")
bool_value (false)
add_class(C)
add_class(C)
add_call_chain(<<b>>)
add_attribute("D", "d", "D")
add_call_chain(<<D,A,D,a,e,D,A,a,D>>)
add_command("C", "BOOLEAN", <<["d", "INTEGER"], ["B", "INTEGER"], ["d", "b"], ["C", "INTEGER"]>>)
add_call_chain(<<D,A,A,B,INTEGER,a,A,a>>)
add_command("D", "c", <<["e", "INTEGER"], ["B", "BOOLEAN"], ["e", "D"], ["D", "B"], ["e", "B"], ["D", "INTEGER"]>>)
add_query("e", "A", <<["b", "INTEGER"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["e", "BOOLEAN"]>>, "e")
add_call_chain(<<a,A,c,C,C,e,BOOLEAN,c,C>>)
