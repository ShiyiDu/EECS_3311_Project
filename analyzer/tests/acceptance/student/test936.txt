add_command("D", "c", <<["b", "INTEGER"], ["D", "INTEGER"], ["BOOLEAN", "INTEGER"]>>)
add_query("a", "BOOLEAN", <<["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "INTEGER"], ["C", "b"], ["B", "INTEGER"], ["a", "BOOLEAN"]>>, "C")
add_command("A", "e", <<["d", "INTEGER"], ["INTEGER", "INTEGER"], ["D", "BOOLEAN"]>>)
add_call_chain(<<D>>)
add_attribute("A", "a", "INTEGER")
add_command("B", "C", <<["b", "INTEGER"], ["c", "BOOLEAN"], ["B", "INTEGER"], ["BOOLEAN", "INTEGER"], ["b", "A"], ["D", "BOOLEAN"], ["e", "BOOLEAN"]>>)
disjunction
bool_value (false)
less_than
disjunction
generate_java_code
add_command("B", "c", <<["b", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "a"], ["B", "BOOLEAN"], ["e", "INTEGER"]>>)
add_call_chain(<<e,D,BOOLEAN,D>>)
logical_negation
add_call_chain(<<a,C,D,A,A,B,C,a,c>>)
add_call_chain(<<b,a,C>>)
generate_java_code
add_command("c", "B", <<["C", "BOOLEAN"], ["D", "INTEGER"], ["INTEGER", "A"]>>)
equals
add_query("B", "d", <<["d", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "BOOLEAN"]>>, "A")
add_call_chain(<<c,d,a,INTEGER,d,c,D,d>>)
add_attribute("b", "BOOLEAN", "BOOLEAN")
add_call_chain(<<B,B>>)
add_call_chain(<<BOOLEAN,d>>)
logical_negation
generate_java_code
numerical_negation
disjunction
logical_negation
modulo
add_attribute("A", "C", "INTEGER")
bool_value (false)
numerical_negation
add_call_chain(<<C,C>>)
add_call_chain(<<D,INTEGER>>)
add_query("e", "e", <<["e", "INTEGER"], ["C", "a"], ["D", "BOOLEAN"], ["A", "INTEGER"]>>, "A")
add_attribute("e", "B", "BOOLEAN")
addition
bool_value (false)
add_query("B", "D", <<["c", "BOOLEAN"], ["c", "BOOLEAN"], ["INTEGER", "INTEGER"]>>, "a")
add_attribute("INTEGER", "c", "INTEGER")
type_check
add_call_chain(<<BOOLEAN,c,b,D,e,e>>)
add_call_chain(<<C,b,B,B,INTEGER,e>>)
add_command("e", "D", <<["D", "BOOLEAN"]>>)
modulo
generate_java_code
logical_negation
bool_value (false)
bool_value (true)
multiplication
bool_value (true)
add_call_chain(<<d,B,e,e,INTEGER,D,D>>)
add_query("INTEGER", "b", <<["D", "D"], ["a", "INTEGER"], ["a", "INTEGER"], ["d", "INTEGER"], ["C", "BOOLEAN"]>>, "C")
int_value (16)
add_attribute("A", "C", "C")
less_than
add_attribute("a", "e", "e")
add_command("A", "D", <<["C", "BOOLEAN"], ["INTEGER", "D"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["d", "INTEGER"], ["A", "BOOLEAN"]>>)
add_call_chain(<<e>>)
subtraction
bool_value (false)
add_command("A", "D", <<["d", "INTEGER"], ["D", "INTEGER"]>>)
bool_value (true)
add_class(C)
numerical_negation
add_call_chain(<<e,B,e,e,e,b,A>>)
disjunction
add_call_chain(<<a,B,BOOLEAN>>)
add_command("b", "C", <<["c", "INTEGER"]>>)
bool_value (true)
add_query("c", "b", <<["C", "INTEGER"], ["C", "BOOLEAN"], ["b", "BOOLEAN"]>>, "c")
greater_than
type_check
equals
bool_value (false)
disjunction
add_attribute("B", "D", "a")
add_class(D)
modulo
logical_negation
int_value (41)
add_call_chain(<<B,e,B,B,c,e,A>>)
bool_value (false)
multiplication
add_query("a", "C", <<["a", "INTEGER"], ["A", "D"], ["b", "a"], ["BOOLEAN", "C"], ["A", "INTEGER"], ["C", "INTEGER"], ["D", "BOOLEAN"]>>, "b")
type_check
add_command("e", "BOOLEAN", <<["BOOLEAN", "BOOLEAN"], ["d", "D"], ["D", "A"], ["a", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["c", "INTEGER"], ["INTEGER", "BOOLEAN"], ["INTEGER", "d"], ["e", "D"]>>)
logical_negation
equals
numerical_negation
add_attribute("C", "A", "INTEGER")
add_call_chain(<<INTEGER,BOOLEAN,B,B,D,d,e,b>>)
add_call_chain(<<B,C>>)
generate_java_code
equals
add_call_chain(<<D,e,D,e,c,d,B,INTEGER>>)
type_check
add_call_chain(<<A,C,B,B,d,d,BOOLEAN,b>>)
int_value (48)
int_value (32)
add_query("a", "d", <<["C", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "INTEGER"]>>, "B")
add_command("d", "BOOLEAN", <<["c", "e"], ["a", "C"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["e", "INTEGER"]>>)
type_check
add_class(A)
add_query("BOOLEAN", "B", <<["C", "INTEGER"], ["e", "B"], ["B", "d"]>>, "INTEGER")
add_call_chain(<<C,BOOLEAN,BOOLEAN,B,c,C,B,c,B>>)
type_check
generate_java_code
bool_value (true)
add_command("b", "B", <<["a", "BOOLEAN"], ["c", "INTEGER"], ["d", "INTEGER"], ["A", "INTEGER"], ["e", "BOOLEAN"]>>)
add_command("c", "B", <<["BOOLEAN", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "d"], ["a", "e"]>>)
bool_value (true)
equals
disjunction
type_check
add_query("C", "e", <<["C", "BOOLEAN"], ["d", "A"], ["e", "C"], ["d", "INTEGER"]>>, "C")
add_class(b)
addition
add_command("D", "BOOLEAN", <<["A", "INTEGER"], ["c", "BOOLEAN"], ["b", "INTEGER"], ["D", "INTEGER"]>>)
logical_negation
generate_java_code
add_command("D", "a", <<["A", "INTEGER"], ["C", "BOOLEAN"], ["a", "c"], ["C", "C"], ["D", "BOOLEAN"], ["D", "BOOLEAN"], ["a", "c"]>>)
add_call_chain(<<c,D,a,a>>)
disjunction
logical_negation
logical_negation
int_value (6)
int_value (3)
add_command("A", "B", <<["D", "b"], ["b", "BOOLEAN"], ["A", "INTEGER"], ["B", "INTEGER"], ["a", "B"]>>)
add_call_chain(<<A,D,d,c,D,B,e>>)
add_attribute("d", "A", "BOOLEAN")
generate_java_code
add_call_chain(<<a,d,e,D,c>>)
add_query("c", "INTEGER", <<["d", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "BOOLEAN"]>>, "B")
add_call_chain(<<b,B,C,B,BOOLEAN,C,c,D>>)
add_class(A)
add_query("a", "d", <<["A", "BOOLEAN"]>>, "B")
add_attribute("B", "b", "BOOLEAN")
int_value (35)
type_check
add_call_chain(<<e>>)
int_value (18)
add_class(e)
bool_value (true)
quotient
logical_negation
add_command("e", "D", <<["c", "a"], ["D", "c"], ["e", "INTEGER"], ["B", "BOOLEAN"]>>)
type_check
add_call_chain(<<D,A,B,d,c,d>>)
multiplication
add_class(D)
numerical_negation
conjunction
add_call_chain(<<e,A,b>>)
numerical_negation
add_call_chain(<<C,c,C,D,INTEGER,C,c,B,B>>)
int_value (15)
add_query("B", "d", <<["BOOLEAN", "C"], ["B", "INTEGER"], ["C", "INTEGER"], ["C", "d"]>>, "A")
add_query("b", "D", <<["a", "INTEGER"], ["C", "B"], ["b", "d"], ["e", "BOOLEAN"], ["c", "INTEGER"], ["B", "d"], ["B", "BOOLEAN"]>>, "e")
int_value (20)
add_call_chain(<<INTEGER>>)
add_call_chain(<<A,C,b,A,d,BOOLEAN>>)
logical_negation
bool_value (false)
multiplication
logical_negation
add_call_chain(<<BOOLEAN,C,C,c,b>>)
add_attribute("b", "a", "INTEGER")
int_value (40)
add_query("B", "b", <<["e", "BOOLEAN"], ["D", "INTEGER"], ["c", "INTEGER"], ["B", "BOOLEAN"], ["INTEGER", "INTEGER"], ["e", "INTEGER"]>>, "B")
numerical_negation
int_value (13)
equals
bool_value (false)
add_query("B", "c", <<["b", "BOOLEAN"], ["BOOLEAN", "c"], ["c", "INTEGER"], ["D", "BOOLEAN"], ["c", "C"], ["BOOLEAN", "e"], ["A", "INTEGER"], ["D", "e"]>>, "D")
add_query("B", "d", <<["a", "INTEGER"], ["A", "INTEGER"], ["D", "INTEGER"], ["BOOLEAN", "INTEGER"]>>, "D")
add_call_chain(<<c,C,C>>)
generate_java_code
add_query("e", "e", <<["a", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "c"], ["D", "INTEGER"], ["B", "INTEGER"]>>, "c")
add_query("D", "b", <<["D", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["b", "INTEGER"], ["a", "BOOLEAN"], ["BOOLEAN", "b"]>>, "B")
int_value (34)
add_command("D", "B", <<["B", "INTEGER"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["c", "A"], ["c", "INTEGER"], ["d", "INTEGER"], ["c", "D"]>>)
modulo
add_attribute("D", "e", "INTEGER")
equals
bool_value (false)
generate_java_code
type_check
bool_value (true)
int_value (14)
conjunction
add_command("d", "c", <<["A", "C"], ["a", "BOOLEAN"], ["c", "INTEGER"], ["d", "INTEGER"], ["c", "INTEGER"], ["b", "INTEGER"]>>)
add_call_chain(<<e>>)
numerical_negation
generate_java_code
add_command("C", "b", <<["BOOLEAN", "BOOLEAN"], ["d", "BOOLEAN"]>>)
add_query("c", "A", <<["e", "INTEGER"], ["C", "b"], ["d", "INTEGER"], ["C", "INTEGER"], ["C", "BOOLEAN"]>>, "B")
logical_negation
add_call_chain(<<D,d,e,BOOLEAN,INTEGER,B>>)
logical_negation
add_call_chain(<<c,B,D,D,b,B,c,a>>)
int_value (5)
bool_value (true)
add_call_chain(<<a,A,e,C,b,D,c>>)
subtraction
bool_value (true)
add_class(A)
add_query("D", "D", <<["a", "d"]>>, "C")
int_value (32)
logical_negation
greater_than
bool_value (true)
less_than
add_class(C)
add_attribute("A", "A", "BOOLEAN")
add_call_chain(<<b,a,C>>)
add_command("c", "a", <<["A", "e"], ["INTEGER", "BOOLEAN"], ["a", "a"], ["e", "BOOLEAN"], ["b", "INTEGER"], ["B", "BOOLEAN"], ["D", "e"], ["INTEGER", "INTEGER"]>>)
add_call_chain(<<e,a,B,a,d,e,D>>)
int_value (24)
add_attribute("D", "e", "BOOLEAN")
add_query("B", "B", <<["b", "INTEGER"], ["d", "a"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["b", "INTEGER"], ["C", "INTEGER"], ["b", "BOOLEAN"], ["b", "INTEGER"]>>, "B")
bool_value (true)
add_query("d", "b", <<["D", "INTEGER"]>>, "e")
add_query("d", "B", <<["BOOLEAN", "BOOLEAN"], ["d", "e"]>>, "C")
addition
logical_negation
add_class(B)
add_attribute("D", "A", "B")
type_check
bool_value (true)
add_call_chain(<<d,C,BOOLEAN,C,D,D,C>>)
add_attribute("C", "D", "e")
add_call_chain(<<a,b,C,A,a,D,C,B>>)
logical_negation
equals
int_value (36)
greater_than
type_check
add_call_chain(<<c,C,e,b,e,C,D,d,c>>)
add_call_chain(<<B,A,e,d,b,B>>)
int_value (31)
add_query("d", "B", <<["INTEGER", "INTEGER"]>>, "a")
add_command("D", "INTEGER", <<["B", "INTEGER"], ["d", "INTEGER"]>>)
add_call_chain(<<D,A,C>>)
