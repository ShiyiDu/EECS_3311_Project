add_attribute("A", "d", "c")
int_value (49)
greater_than
greater_than
numerical_negation
add_call_chain(<<B,A>>)
less_than
add_query("b", "b", <<["C", "BOOLEAN"]>>, "e")
add_call_chain(<<B,a>>)
add_attribute("C", "C", "BOOLEAN")
generate_java_code
add_command("C", "d", <<["A", "C"], ["d", "D"], ["a", "BOOLEAN"], ["C", "INTEGER"], ["d", "INTEGER"], ["C", "BOOLEAN"], ["INTEGER", "A"]>>)
int_value (35)
add_attribute("e", "C", "BOOLEAN")
add_class(c)
bool_value (false)
add_command("A", "e", <<["A", "BOOLEAN"], ["INTEGER", "INTEGER"], ["A", "INTEGER"], ["D", "INTEGER"], ["A", "d"], ["a", "A"], ["e", "D"], ["D", "a"], ["d", "BOOLEAN"]>>)
add_command("b", "d", <<["e", "BOOLEAN"], ["d", "INTEGER"], ["b", "BOOLEAN"], ["d", "BOOLEAN"]>>)
int_value (44)
add_query("D", "D", <<["a", "INTEGER"], ["a", "INTEGER"], ["B", "BOOLEAN"], ["c", "INTEGER"], ["c", "INTEGER"]>>, "c")
bool_value (true)
add_query("a", "a", <<["A", "INTEGER"], ["a", "A"], ["B", "BOOLEAN"], ["e", "BOOLEAN"], ["d", "INTEGER"], ["b", "B"], ["b", "INTEGER"]>>, "D")
generate_java_code
type_check
int_value (12)
add_command("d", "a", <<["C", "B"], ["A", "BOOLEAN"]>>)
add_attribute("a", "e", "INTEGER")
numerical_negation
bool_value (false)
disjunction
add_command("A", "c", <<["c", "C"], ["INTEGER", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "B"]>>)
generate_java_code
generate_java_code
type_check
int_value (19)
disjunction
quotient
add_query("b", "d", <<["B", "INTEGER"], ["b", "INTEGER"]>>, "D")
logical_negation
int_value (8)
type_check
int_value (47)
equals
add_command("B", "a", <<["c", "BOOLEAN"], ["A", "INTEGER"], ["d", "BOOLEAN"], ["C", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["b", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
bool_value (false)
add_query("INTEGER", "A", <<["D", "INTEGER"], ["a", "INTEGER"]>>, "e")
add_call_chain(<<A,INTEGER,b,A,A,D,B,c,e>>)
bool_value (false)
add_query("b", "BOOLEAN", <<["C", "BOOLEAN"], ["d", "INTEGER"], ["A", "B"]>>, "c")
add_attribute("a", "b", "d")
type_check
add_call_chain(<<C,b,c,B,b>>)
add_class(A)
numerical_negation
generate_java_code
add_call_chain(<<c>>)
numerical_negation
add_call_chain(<<A>>)
generate_java_code
add_command("c", "a", <<["b", "INTEGER"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "INTEGER"]>>)
generate_java_code
add_attribute("B", "d", "BOOLEAN")
add_attribute("BOOLEAN", "a", "b")
add_query("c", "C", <<["b", "INTEGER"], ["D", "INTEGER"], ["D", "INTEGER"], ["D", "INTEGER"], ["INTEGER", "d"], ["B", "INTEGER"], ["B", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "BOOLEAN"]>>, "D")
add_class(b)
add_attribute("c", "INTEGER", "INTEGER")
generate_java_code
add_command("A", "b", <<["b", "INTEGER"], ["C", "INTEGER"]>>)
bool_value (false)
quotient
generate_java_code
add_command("a", "C", <<["d", "D"], ["B", "INTEGER"], ["d", "BOOLEAN"]>>)
add_attribute("B", "C", "BOOLEAN")
int_value (5)
add_attribute("c", "B", "INTEGER")
add_call_chain(<<D,b,b,C,d,C,A,D,b>>)
numerical_negation
add_call_chain(<<B,b>>)
bool_value (true)
logical_negation
add_call_chain(<<C>>)
modulo
add_call_chain(<<B,b,e,d,a>>)
add_call_chain(<<C,a,A,A,A,c>>)
numerical_negation
type_check
add_call_chain(<<C,A,b,d>>)
generate_java_code
int_value (3)
add_call_chain(<<e,b,BOOLEAN>>)
add_attribute("B", "B", "INTEGER")
conjunction
numerical_negation
bool_value (false)
add_query("a", "e", <<["d", "INTEGER"], ["b", "INTEGER"], ["A", "INTEGER"], ["D", "d"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["D", "BOOLEAN"]>>, "e")
logical_negation
add_call_chain(<<d,a,e,c,d,a,C,A,D>>)
add_call_chain(<<d>>)
add_attribute("C", "a", "INTEGER")
quotient
add_call_chain(<<A,B,B>>)
logical_negation
add_call_chain(<<B,A,D>>)
numerical_negation
int_value (45)
add_call_chain(<<A,D,b,a,c>>)
logical_negation
add_call_chain(<<A,D,e,C,A,a,d,INTEGER,d>>)
add_class(b)
add_query("INTEGER", "D", <<["C", "BOOLEAN"], ["b", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>, "D")
int_value (33)
generate_java_code
bool_value (false)
int_value (46)
numerical_negation
numerical_negation
add_call_chain(<<d,INTEGER,e,c,d,a,A,e,e>>)
numerical_negation
conjunction
generate_java_code
greater_than
numerical_negation
int_value (14)
subtraction
add_command("b", "INTEGER", <<["c", "C"], ["b", "BOOLEAN"]>>)
add_attribute("b", "e", "BOOLEAN")
add_attribute("b", "b", "BOOLEAN")
add_class(a)
bool_value (false)
equals
less_than
disjunction
int_value (47)
add_call_chain(<<A,B,C,D,a,INTEGER>>)
add_attribute("b", "D", "b")
add_class(d)
int_value (43)
add_command("B", "B", <<["C", "BOOLEAN"], ["D", "INTEGER"], ["b", "INTEGER"]>>)
numerical_negation
add_attribute("a", "B", "BOOLEAN")
add_command("C", "b", <<["d", "BOOLEAN"], ["C", "INTEGER"], ["INTEGER", "A"]>>)
numerical_negation
add_command("d", "A", <<["c", "INTEGER"], ["b", "b"], ["c", "c"], ["INTEGER", "INTEGER"], ["D", "BOOLEAN"]>>)
equals
add_command("B", "a", <<["c", "INTEGER"], ["C", "INTEGER"], ["C", "INTEGER"], ["e", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "c"], ["C", "INTEGER"], ["a", "b"]>>)
add_call_chain(<<A,D>>)
type_check
int_value (35)
add_class(c)
bool_value (false)
subtraction
add_call_chain(<<D,b,B,D,e,B,b,D,INTEGER>>)
add_attribute("C", "BOOLEAN", "INTEGER")
logical_negation
logical_negation
add_call_chain(<<A,a,C,a,A,D>>)
numerical_negation
type_check
add_call_chain(<<A,d,C,A>>)
type_check
add_call_chain(<<d,A,B,D,B,e,BOOLEAN,c>>)
bool_value (false)
int_value (49)
modulo
bool_value (true)
bool_value (true)
add_call_chain(<<BOOLEAN>>)
add_query("e", "c", <<["BOOLEAN", "BOOLEAN"]>>, "BOOLEAN")
add_call_chain(<<c,BOOLEAN,D,D,A>>)
bool_value (true)
disjunction
add_attribute("d", "C", "INTEGER")
type_check
logical_negation
add_command("B", "B", <<["A", "BOOLEAN"], ["a", "b"]>>)
generate_java_code
generate_java_code
add_call_chain(<<a,a,d>>)
add_call_chain(<<e,A,B>>)
int_value (17)
numerical_negation
subtraction
greater_than
generate_java_code
type_check
numerical_negation
type_check
add_call_chain(<<a,e,d,BOOLEAN,D,BOOLEAN,d,D,c>>)
int_value (1)
add_query("INTEGER", "C", <<["e", "BOOLEAN"], ["C", "INTEGER"], ["b", "BOOLEAN"], ["b", "BOOLEAN"], ["d", "INTEGER"], ["C", "BOOLEAN"], ["A", "c"], ["e", "d"], ["BOOLEAN", "INTEGER"]>>, "A")
add_query("e", "d", <<["B", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "INTEGER"]>>, "D")
add_call_chain(<<D,d,b,D,b,d,A,b,a>>)
type_check
add_command("C", "B", <<["c", "INTEGER"], ["A", "INTEGER"]>>)
add_call_chain(<<A,D,b,d,B,A,B,c,D>>)
generate_java_code
add_attribute("c", "INTEGER", "INTEGER")
add_command("d", "C", <<["c", "e"], ["C", "c"], ["C", "INTEGER"], ["b", "BOOLEAN"]>>)
add_query("A", "c", <<["a", "BOOLEAN"]>>, "B")
int_value (39)
conjunction
bool_value (true)
add_command("a", "e", <<["A", "INTEGER"], ["c", "BOOLEAN"], ["B", "BOOLEAN"]>>)
generate_java_code
quotient
logical_negation
add_attribute("C", "D", "c")
add_attribute("e", "e", "INTEGER")
add_call_chain(<<C,C,B,d,INTEGER,e,D,D>>)
add_query("b", "C", <<["d", "BOOLEAN"], ["C", "D"], ["d", "e"], ["b", "BOOLEAN"], ["c", "A"], ["BOOLEAN", "a"], ["b", "BOOLEAN"]>>, "D")
conjunction
generate_java_code
int_value (23)
add_query("BOOLEAN", "B", <<["d", "d"], ["B", "BOOLEAN"], ["D", "c"]>>, "c")
equals
bool_value (true)
logical_negation
bool_value (true)
add_attribute("BOOLEAN", "e", "BOOLEAN")
logical_negation
numerical_negation
bool_value (false)
add_attribute("e", "c", "BOOLEAN")
bool_value (true)
add_call_chain(<<a,d,C,D,b,a,d,C>>)
modulo
int_value (1)
add_call_chain(<<D,C,D,d,a>>)
generate_java_code
add_query("d", "e", <<["e", "d"], ["b", "d"], ["A", "e"], ["e", "b"]>>, "B")
disjunction
add_attribute("C", "A", "BOOLEAN")
addition
generate_java_code
numerical_negation
numerical_negation
add_attribute("C", "a", "INTEGER")
numerical_negation
conjunction
disjunction
add_call_chain(<<D,e,a,c>>)
int_value (24)
add_query("BOOLEAN", "e", <<["b", "B"], ["a", "c"], ["c", "BOOLEAN"], ["c", "e"], ["A", "BOOLEAN"], ["d", "INTEGER"], ["d", "a"], ["D", "BOOLEAN"], ["a", "BOOLEAN"]>>, "c")
add_class(B)
int_value (25)
int_value (24)
add_attribute("B", "A", "BOOLEAN")
add_query("D", "B", <<["D", "BOOLEAN"], ["b", "B"], ["b", "B"], ["C", "BOOLEAN"], ["C", "a"]>>, "B")
add_query("b", "INTEGER", <<["INTEGER", "INTEGER"], ["d", "BOOLEAN"], ["D", "INTEGER"], ["A", "BOOLEAN"], ["C", "a"], ["c", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["B", "C"]>>, "e")
type_check
add_command("a", "D", <<["a", "C"], ["a", "a"], ["INTEGER", "B"], ["b", "BOOLEAN"], ["b", "BOOLEAN"], ["d", "INTEGER"]>>)
generate_java_code
add_call_chain(<<d,INTEGER,b,D,a>>)
add_query("BOOLEAN", "e", <<["A", "D"], ["INTEGER", "e"], ["b", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "INTEGER"], ["c", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["D", "BOOLEAN"]>>, "c")
generate_java_code
add_query("a", "B", <<["B", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "INTEGER"], ["e", "d"], ["B", "b"], ["d", "B"]>>, "b")
add_call_chain(<<b,BOOLEAN,A,c,d,A,b>>)
