add_attribute("B", "e", "INTEGER")
add_call_chain(<<C,INTEGER,B,e,BOOLEAN,C,a>>)
add_query("A", "D", <<["INTEGER", "INTEGER"]>>, "e")
add_command("D", "e", <<["e", "b"], ["d", "INTEGER"], ["A", "BOOLEAN"], ["INTEGER", "INTEGER"], ["e", "C"], ["a", "INTEGER"], ["A", "A"], ["e", "INTEGER"]>>)
greater_than
type_check
numerical_negation
numerical_negation
add_call_chain(<<INTEGER,b,e,A,b>>)
add_query("C", "a", <<["a", "BOOLEAN"], ["d", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "INTEGER"], ["e", "B"], ["e", "INTEGER"], ["B", "INTEGER"]>>, "B")
add_class(C)
int_value (27)
bool_value (true)
add_class(c)
add_call_chain(<<D,d>>)
add_call_chain(<<e>>)
add_call_chain(<<b,D,a,INTEGER,D,C,a>>)
bool_value (true)
multiplication
add_command("a", "B", <<["A", "INTEGER"], ["c", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "BOOLEAN"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["a", "b"], ["d", "BOOLEAN"]>>)
logical_negation
bool_value (false)
bool_value (true)
int_value (48)
logical_negation
multiplication
numerical_negation
add_query("e", "A", <<["C", "b"], ["c", "c"], ["C", "INTEGER"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["b", "A"], ["b", "BOOLEAN"], ["c", "C"], ["C", "BOOLEAN"]>>, "D")
less_than
int_value (30)
add_attribute("a", "INTEGER", "BOOLEAN")
add_query("C", "e", <<["a", "INTEGER"], ["d", "BOOLEAN"], ["e", "INTEGER"], ["a", "BOOLEAN"], ["b", "e"], ["a", "A"], ["D", "INTEGER"]>>, "B")
conjunction
add_class(c)
add_attribute("A", "C", "b")
add_call_chain(<<C,b,c,b>>)
int_value (21)
add_class(a)
add_query("b", "B", <<["a", "e"], ["B", "C"], ["b", "e"], ["D", "INTEGER"], ["b", "c"], ["B", "a"], ["a", "BOOLEAN"], ["a", "D"], ["B", "a"]>>, "a")
add_call_chain(<<A,INTEGER,C,d>>)
numerical_negation
add_command("D", "c", <<["a", "BOOLEAN"], ["d", "INTEGER"], ["a", "INTEGER"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "INTEGER"]>>)
add_query("A", "e", <<["A", "c"], ["a", "B"], ["D", "INTEGER"]>>, "d")
modulo
add_class(b)
add_command("INTEGER", "c", <<["e", "INTEGER"], ["D", "INTEGER"]>>)
bool_value (false)
conjunction
int_value (28)
add_query("A", "A", <<["D", "d"], ["b", "A"], ["B", "d"], ["D", "BOOLEAN"], ["D", "d"], ["BOOLEAN", "INTEGER"], ["D", "BOOLEAN"], ["D", "BOOLEAN"]>>, "INTEGER")
logical_negation
add_command("a", "INTEGER", <<["A", "b"], ["c", "c"], ["c", "INTEGER"], ["c", "B"], ["C", "D"], ["BOOLEAN", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["b", "BOOLEAN"]>>)
add_attribute("B", "e", "a")
numerical_negation
add_call_chain(<<B,a,D,e,d,D,a,D,b>>)
add_call_chain(<<b>>)
add_class(b)
int_value (33)
add_call_chain(<<c,BOOLEAN,d,A,A,e,C>>)
bool_value (true)
add_query("c", "e", <<["C", "INTEGER"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["a", "B"]>>, "e")
int_value (45)
generate_java_code
add_command("INTEGER", "e", <<["BOOLEAN", "BOOLEAN"], ["A", "INTEGER"], ["d", "BOOLEAN"], ["D", "INTEGER"], ["d", "BOOLEAN"], ["b", "B"], ["e", "INTEGER"], ["d", "INTEGER"], ["C", "INTEGER"]>>)
addition
numerical_negation
numerical_negation
add_attribute("INTEGER", "b", "C")
add_call_chain(<<e,D>>)
add_call_chain(<<e,d,D,B,C,c,e,b,A>>)
greater_than
type_check
add_query("A", "C", <<["e", "INTEGER"], ["D", "INTEGER"], ["BOOLEAN", "INTEGER"], ["d", "B"], ["c", "c"], ["d", "D"]>>, "D")
add_command("a", "c", <<["c", "B"], ["C", "d"]>>)
logical_negation
generate_java_code
add_command("b", "C", <<["d", "BOOLEAN"], ["B", "INTEGER"], ["e", "BOOLEAN"], ["C", "a"]>>)
add_call_chain(<<b,c,A,INTEGER,d>>)
add_call_chain(<<B,B,d,C,e>>)
type_check
int_value (42)
bool_value (false)
addition
type_check
equals
add_query("b", "e", <<["D", "BOOLEAN"], ["A", "C"], ["B", "BOOLEAN"], ["INTEGER", "D"]>>, "D")
type_check
generate_java_code
int_value (49)
disjunction
add_attribute("b", "C", "BOOLEAN")
type_check
bool_value (false)
add_call_chain(<<D,e,INTEGER,c>>)
add_query("A", "c", <<["e", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "BOOLEAN"], ["INTEGER", "INTEGER"], ["C", "INTEGER"], ["b", "A"]>>, "A")
subtraction
subtraction
add_call_chain(<<d,c,C,b,b,INTEGER,A,C,C>>)
add_call_chain(<<e,b,A,c,INTEGER,A>>)
numerical_negation
addition
add_class(INTEGER)
add_attribute("INTEGER", "C", "INTEGER")
add_call_chain(<<a,a>>)
add_call_chain(<<d,a,D,D,D,B,b,B,a>>)
add_attribute("a", "A", "BOOLEAN")
add_command("c", "a", <<["D", "A"], ["d", "b"], ["A", "BOOLEAN"]>>)
type_check
add_call_chain(<<A,B,b,A,c>>)
add_class(c)
add_command("C", "e", <<["C", "INTEGER"], ["C", "BOOLEAN"], ["e", "INTEGER"], ["B", "INTEGER"], ["A", "BOOLEAN"]>>)
add_command("INTEGER", "C", <<["c", "INTEGER"], ["c", "BOOLEAN"], ["e", "INTEGER"], ["D", "INTEGER"], ["e", "INTEGER"], ["e", "INTEGER"], ["INTEGER", "INTEGER"]>>)
add_query("b", "a", <<["D", "INTEGER"], ["d", "INTEGER"], ["d", "INTEGER"]>>, "d")
logical_negation
numerical_negation
bool_value (false)
disjunction
add_query("D", "a", <<["BOOLEAN", "INTEGER"], ["d", "INTEGER"], ["b", "D"], ["D", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "INTEGER"], ["A", "INTEGER"], ["C", "D"], ["a", "INTEGER"]>>, "b")
numerical_negation
add_attribute("b", "A", "INTEGER")
add_class(C)
add_call_chain(<<B,C>>)
add_call_chain(<<INTEGER,b,e,c,e>>)
disjunction
add_query("BOOLEAN", "D", <<["BOOLEAN", "INTEGER"], ["D", "INTEGER"], ["c", "C"], ["e", "INTEGER"], ["INTEGER", "B"], ["d", "A"], ["B", "INTEGER"]>>, "D")
add_call_chain(<<D,d,D,A,a,BOOLEAN,D,c,D>>)
add_call_chain(<<a,C,A>>)
add_call_chain(<<C,e,b,a,e,d>>)
add_call_chain(<<a,B,b,C,D,B>>)
add_query("d", "B", <<["B", "BOOLEAN"]>>, "e")
bool_value (false)
int_value (1)
add_call_chain(<<D,a,A,a,B,e>>)
add_query("e", "A", <<["d", "INTEGER"], ["B", "B"], ["A", "BOOLEAN"], ["BOOLEAN", "c"]>>, "b")
logical_negation
add_call_chain(<<C,e,a,B,C,D,D>>)
bool_value (true)
numerical_negation
add_command("e", "D", <<["a", "D"], ["D", "INTEGER"], ["c", "A"], ["c", "INTEGER"]>>)
add_call_chain(<<b,C,A,A,B,C,C>>)
logical_negation
logical_negation
bool_value (true)
add_command("c", "e", <<["d", "D"], ["a", "INTEGER"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["INTEGER", "INTEGER"], ["INTEGER", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "e"]>>)
add_attribute("C", "C", "BOOLEAN")
add_attribute("C", "A", "BOOLEAN")
add_query("d", "A", <<["B", "C"], ["BOOLEAN", "INTEGER"], ["b", "INTEGER"], ["BOOLEAN", "a"], ["b", "INTEGER"], ["c", "INTEGER"]>>, "b")
add_command("A", "A", <<["c", "BOOLEAN"], ["b", "BOOLEAN"]>>)
bool_value (true)
add_query("b", "e", <<["INTEGER", "BOOLEAN"], ["d", "INTEGER"]>>, "b")
type_check
type_check
add_call_chain(<<c,C,b>>)
int_value (22)
add_attribute("e", "b", "INTEGER")
add_query("e", "INTEGER", <<["A", "c"], ["A", "INTEGER"], ["c", "A"], ["BOOLEAN", "b"], ["d", "BOOLEAN"], ["d", "INTEGER"], ["d", "BOOLEAN"]>>, "D")
add_attribute("b", "INTEGER", "INTEGER")
add_call_chain(<<e,D,c,e,c,C,C,A,C>>)
int_value (37)
add_attribute("A", "b", "BOOLEAN")
subtraction
add_call_chain(<<a,C,C,a,B>>)
add_call_chain(<<a,D,c,B>>)
disjunction
add_query("C", "e", <<["d", "BOOLEAN"]>>, "b")
bool_value (true)
add_command("D", "A", <<["b", "BOOLEAN"], ["e", "INTEGER"], ["INTEGER", "C"], ["d", "BOOLEAN"], ["a", "INTEGER"], ["D", "C"], ["INTEGER", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
logical_negation
add_call_chain(<<a,B,c>>)
disjunction
numerical_negation
int_value (7)
add_query("C", "B", <<["b", "B"], ["B", "INTEGER"], ["B", "BOOLEAN"]>>, "c")
bool_value (true)
add_query("b", "A", <<["c", "BOOLEAN"], ["B", "A"], ["B", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "BOOLEAN"]>>, "B")
add_command("D", "B", <<["B", "INTEGER"], ["C", "D"]>>)
modulo
add_attribute("D", "c", "INTEGER")
less_than
conjunction
generate_java_code
add_call_chain(<<D,a,b,e,e,D>>)
type_check
bool_value (false)
add_command("b", "a", <<["d", "INTEGER"], ["a", "C"], ["b", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "INTEGER"], ["e", "BOOLEAN"]>>)
add_attribute("INTEGER", "b", "INTEGER")
logical_negation
add_call_chain(<<BOOLEAN,C>>)
subtraction
greater_than
add_command("INTEGER", "C", <<["e", "INTEGER"], ["C", "c"], ["b", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "BOOLEAN"], ["d", "INTEGER"], ["B", "INTEGER"], ["A", "INTEGER"], ["D", "INTEGER"]>>)
less_than
add_call_chain(<<A,INTEGER,C,a,A>>)
logical_negation
int_value (8)
add_class(c)
generate_java_code
add_call_chain(<<D,a,C,d,a>>)
int_value (22)
add_call_chain(<<a,B,b,D>>)
add_call_chain(<<D,e,a>>)
add_call_chain(<<BOOLEAN,A,A,C>>)
add_query("e", "D", <<["D", "e"]>>, "B")
add_call_chain(<<A,A>>)
add_command("C", "b", <<["A", "BOOLEAN"], ["B", "BOOLEAN"]>>)
numerical_negation
numerical_negation
int_value (24)
numerical_negation
add_call_chain(<<a>>)
logical_negation
generate_java_code
add_call_chain(<<d>>)
logical_negation
add_call_chain(<<A,A,c,B,a,A,a,A,C>>)
add_query("d", "C", <<["b", "INTEGER"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["D", "B"], ["A", "BOOLEAN"], ["e", "a"]>>, "a")
generate_java_code
add_attribute("A", "C", "b")
add_command("b", "c", <<["B", "BOOLEAN"], ["c", "A"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "A"], ["d", "BOOLEAN"]>>)
add_call_chain(<<c,B,D,D,INTEGER>>)
generate_java_code
add_attribute("e", "D", "INTEGER")
add_attribute("B", "B", "BOOLEAN")
generate_java_code
add_attribute("a", "e", "INTEGER")
int_value (22)
add_class(e)
quotient
multiplication
add_attribute("B", "e", "BOOLEAN")
disjunction
add_call_chain(<<b,B,BOOLEAN,A,B,INTEGER,a,a>>)
add_attribute("d", "d", "b")
add_command("B", "D", <<["C", "a"], ["d", "BOOLEAN"], ["d", "A"], ["c", "BOOLEAN"], ["B", "A"], ["INTEGER", "INTEGER"]>>)
add_call_chain(<<INTEGER,C,a>>)
int_value (17)
int_value (9)
bool_value (false)
add_query("B", "A", <<["B", "A"], ["BOOLEAN", "INTEGER"], ["C", "INTEGER"], ["b", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "C"], ["D", "BOOLEAN"], ["A", "d"]>>, "c")
add_call_chain(<<BOOLEAN,d,A>>)
bool_value (false)
add_call_chain(<<b,d,b>>)
add_query("b", "C", <<["A", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["a", "INTEGER"], ["D", "BOOLEAN"], ["b", "c"]>>, "INTEGER")
greater_than
add_attribute("a", "C", "INTEGER")
equals
less_than
numerical_negation
bool_value (true)
logical_negation
logical_negation
numerical_negation
add_class(A)
bool_value (false)
bool_value (false)
generate_java_code
add_query("B", "D", <<["a", "B"], ["A", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "INTEGER"], ["c", "B"], ["b", "INTEGER"], ["INTEGER", "BOOLEAN"], ["e", "BOOLEAN"]>>, "b")
add_query("BOOLEAN", "d", <<["D", "e"], ["C", "A"]>>, "e")
add_query("a", "d", <<["D", "BOOLEAN"], ["C", "INTEGER"], ["A", "b"], ["B", "c"], ["a", "BOOLEAN"]>>, "INTEGER")
add_attribute("B", "b", "a")
add_command("e", "d", <<["b", "INTEGER"], ["a", "BOOLEAN"], ["e", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>)
add_class(b)
add_call_chain(<<B,D>>)
generate_java_code
add_query("a", "c", <<["B", "BOOLEAN"], ["a", "C"], ["INTEGER", "BOOLEAN"], ["A", "BOOLEAN"]>>, "c")
bool_value (false)
int_value (49)
add_command("e", "C", <<["D", "INTEGER"], ["c", "d"], ["A", "D"], ["e", "INTEGER"], ["c", "D"]>>)
add_call_chain(<<d,B,BOOLEAN>>)
int_value (26)
conjunction
add_query("c", "C", <<["e", "C"], ["A", "BOOLEAN"], ["A", "A"], ["b", "b"], ["B", "BOOLEAN"], ["b", "D"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "BOOLEAN"]>>, "A")
type_check
numerical_negation
int_value (26)
add_query("b", "B", <<["b", "INTEGER"], ["C", "a"], ["c", "BOOLEAN"], ["a", "B"], ["BOOLEAN", "INTEGER"], ["B", "BOOLEAN"]>>, "e")
conjunction
add_command("C", "a", <<["e", "BOOLEAN"], ["d", "INTEGER"], ["B", "INTEGER"], ["C", "INTEGER"], ["a", "BOOLEAN"]>>)
add_attribute("b", "B", "BOOLEAN")
add_call_chain(<<A,A,e,D,D,e>>)
add_attribute("A", "d", "INTEGER")
add_call_chain(<<d,BOOLEAN,b,c,BOOLEAN,b,D,B>>)
