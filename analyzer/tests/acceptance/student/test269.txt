add_query("c", "b", <<["B", "B"], ["b", "C"], ["INTEGER", "B"], ["c", "INTEGER"], ["b", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "C"], ["c", "BOOLEAN"], ["a", "BOOLEAN"]>>, "d")
int_value (27)
add_command("A", "e", <<["A", "B"], ["BOOLEAN", "C"], ["d", "BOOLEAN"], ["A", "b"], ["d", "INTEGER"], ["D", "BOOLEAN"], ["c", "b"]>>)
add_command("e", "B", <<["B", "BOOLEAN"], ["b", "C"]>>)
generate_java_code
type_check
type_check
logical_negation
add_attribute("INTEGER", "C", "BOOLEAN")
type_check
numerical_negation
add_call_chain(<<c>>)
add_call_chain(<<BOOLEAN,c,B>>)
add_query("B", "a", <<["D", "INTEGER"], ["A", "INTEGER"]>>, "C")
int_value (20)
add_class(b)
add_query("A", "B", <<["b", "b"], ["b", "INTEGER"], ["c", "INTEGER"], ["c", "INTEGER"], ["b", "INTEGER"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["a", "a"]>>, "BOOLEAN")
add_class(B)
add_attribute("e", "A", "INTEGER")
logical_negation
add_command("d", "e", <<["B", "BOOLEAN"], ["C", "INTEGER"], ["c", "BOOLEAN"], ["D", "BOOLEAN"]>>)
bool_value (false)
add_call_chain(<<B,D,b,D>>)
add_query("b", "INTEGER", <<["D", "C"], ["C", "B"], ["BOOLEAN", "BOOLEAN"], ["B", "c"], ["b", "D"], ["C", "INTEGER"], ["d", "BOOLEAN"]>>, "d")
numerical_negation
generate_java_code
add_query("C", "A", <<["B", "c"], ["c", "BOOLEAN"], ["a", "INTEGER"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>, "e")
logical_negation
bool_value (false)
add_command("B", "c", <<["a", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["BOOLEAN", "c"], ["INTEGER", "INTEGER"], ["d", "a"], ["B", "INTEGER"]>>)
numerical_negation
add_command("D", "e", <<["INTEGER", "D"]>>)
add_class(A)
numerical_negation
bool_value (true)
less_than
conjunction
add_command("a", "D", <<["BOOLEAN", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "a"], ["A", "BOOLEAN"], ["B", "BOOLEAN"]>>)
int_value (3)
logical_negation
add_call_chain(<<A,e,B,BOOLEAN,D,e,C>>)
add_call_chain(<<C,D,a,B,a,D,B>>)
add_class(D)
conjunction
bool_value (true)
disjunction
add_attribute("A", "e", "B")
add_class(B)
bool_value (true)
quotient
multiplication
type_check
add_class(D)
add_command("BOOLEAN", "d", <<["C", "BOOLEAN"], ["e", "BOOLEAN"], ["d", "INTEGER"], ["c", "BOOLEAN"], ["C", "INTEGER"], ["b", "INTEGER"]>>)
add_class(A)
int_value (39)
int_value (7)
greater_than
disjunction
add_command("D", "C", <<["a", "INTEGER"], ["C", "e"], ["B", "INTEGER"], ["a", "INTEGER"], ["c", "a"], ["D", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "e"]>>)
type_check
add_query("B", "D", <<["a", "BOOLEAN"], ["a", "B"], ["c", "BOOLEAN"]>>, "D")
add_call_chain(<<c,d,b,B,e,d,c,c,C>>)
add_class(D)
bool_value (false)
add_class(a)
add_attribute("C", "D", "INTEGER")
add_call_chain(<<d,c,a,INTEGER,INTEGER>>)
add_call_chain(<<B,a,C,D,A,C,D>>)
add_attribute("a", "B", "b")
add_command("b", "e", <<["C", "B"], ["INTEGER", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "INTEGER"], ["B", "a"], ["d", "A"]>>)
addition
logical_negation
add_command("A", "A", <<["a", "INTEGER"]>>)
add_command("C", "b", <<["INTEGER", "e"], ["BOOLEAN", "A"], ["D", "c"], ["a", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "BOOLEAN"], ["BOOLEAN", "A"], ["A", "INTEGER"]>>)
add_call_chain(<<d,B,D,B,D,A,d,D>>)
add_attribute("A", "e", "B")
numerical_negation
add_command("A", "D", <<["e", "BOOLEAN"], ["D", "INTEGER"], ["e", "INTEGER"], ["d", "INTEGER"]>>)
greater_than
add_call_chain(<<D,D,d,e,d>>)
add_query("a", "A", <<["C", "BOOLEAN"], ["B", "INTEGER"], ["a", "d"], ["b", "INTEGER"], ["A", "B"], ["B", "e"], ["e", "INTEGER"], ["a", "e"], ["A", "INTEGER"]>>, "B")
addition
generate_java_code
add_attribute("D", "B", "e")
int_value (30)
logical_negation
less_than
add_attribute("c", "B", "INTEGER")
bool_value (false)
logical_negation
add_call_chain(<<C>>)
disjunction
add_query("a", "c", <<["b", "D"], ["a", "INTEGER"], ["A", "INTEGER"], ["e", "a"], ["C", "BOOLEAN"], ["d", "c"], ["D", "a"]>>, "D")
logical_negation
add_call_chain(<<C,B,b,B>>)
numerical_negation
add_class(a)
bool_value (false)
add_call_chain(<<a,A,C,d,A,D>>)
add_attribute("B", "INTEGER", "INTEGER")
add_attribute("C", "B", "INTEGER")
add_call_chain(<<A>>)
bool_value (true)
add_call_chain(<<B,e,INTEGER,INTEGER,e,A>>)
type_check
less_than
add_call_chain(<<a>>)
logical_negation
add_call_chain(<<A,c,d,d,D,A>>)
add_attribute("D", "A", "D")
add_call_chain(<<a,a,C,B,d,A,INTEGER,A>>)
add_query("D", "a", <<["a", "INTEGER"], ["A", "C"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "C"], ["B", "d"], ["C", "A"], ["B", "BOOLEAN"]>>, "INTEGER")
add_call_chain(<<d,A>>)
equals
logical_negation
add_command("b", "BOOLEAN", <<["b", "D"], ["INTEGER", "C"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["INTEGER", "c"], ["c", "BOOLEAN"], ["A", "INTEGER"], ["C", "INTEGER"]>>)
add_call_chain(<<e,D,D,C,B,a,b,INTEGER,a>>)
less_than
add_attribute("B", "D", "BOOLEAN")
less_than
add_command("c", "INTEGER", <<["B", "INTEGER"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["INTEGER", "INTEGER"], ["d", "INTEGER"], ["c", "BOOLEAN"], ["b", "INTEGER"], ["c", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
add_query("a", "BOOLEAN", <<["d", "INTEGER"], ["D", "INTEGER"], ["C", "BOOLEAN"]>>, "e")
add_attribute("A", "c", "A")
type_check
disjunction
logical_negation
logical_negation
add_query("B", "A", <<["A", "INTEGER"]>>, "a")
add_attribute("b", "B", "BOOLEAN")
logical_negation
add_command("D", "c", <<["BOOLEAN", "c"], ["d", "INTEGER"], ["BOOLEAN", "a"], ["BOOLEAN", "INTEGER"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["C", "D"], ["c", "INTEGER"]>>)
add_command("e", "d", <<["b", "INTEGER"], ["INTEGER", "INTEGER"], ["e", "INTEGER"], ["c", "INTEGER"], ["D", "BOOLEAN"], ["A", "BOOLEAN"]>>)
add_command("a", "a", <<["A", "INTEGER"], ["D", "A"], ["b", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["a", "INTEGER"], ["b", "B"], ["e", "C"]>>)
add_call_chain(<<d,C,B>>)
add_call_chain(<<A,e,INTEGER,a,c,D,INTEGER,BOOLEAN,INTEGER>>)
add_command("BOOLEAN", "D", <<["e", "C"], ["a", "BOOLEAN"]>>)
add_call_chain(<<e,c,C,e,d>>)
add_attribute("a", "C", "e")
add_query("C", "INTEGER", <<["c", "INTEGER"], ["B", "INTEGER"], ["e", "BOOLEAN"]>>, "d")
add_attribute("A", "d", "INTEGER")
type_check
int_value (3)
add_call_chain(<<B,INTEGER,INTEGER>>)
add_attribute("e", "e", "BOOLEAN")
add_command("B", "a", <<["B", "d"], ["INTEGER", "BOOLEAN"], ["C", "BOOLEAN"], ["d", "INTEGER"], ["e", "BOOLEAN"]>>)
generate_java_code
numerical_negation
add_attribute("C", "a", "BOOLEAN")
numerical_negation
bool_value (false)
add_call_chain(<<C,D,C,c,A,d,INTEGER,e,a>>)
generate_java_code
logical_negation
equals
logical_negation
bool_value (true)
type_check
add_query("C", "e", <<["c", "INTEGER"], ["e", "C"], ["D", "BOOLEAN"], ["e", "INTEGER"], ["c", "BOOLEAN"], ["c", "INTEGER"], ["A", "BOOLEAN"], ["a", "INTEGER"]>>, "A")
add_command("C", "A", <<["C", "INTEGER"], ["b", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "a"], ["b", "a"], ["b", "A"], ["a", "INTEGER"]>>)
add_attribute("d", "C", "BOOLEAN")
type_check
int_value (37)
int_value (6)
type_check
int_value (40)
add_query("a", "A", <<["c", "a"], ["B", "BOOLEAN"], ["INTEGER", "C"], ["a", "INTEGER"], ["c", "INTEGER"], ["c", "INTEGER"], ["A", "A"]>>, "INTEGER")
add_attribute("b", "B", "BOOLEAN")
conjunction
add_query("C", "e", <<["BOOLEAN", "c"], ["C", "INTEGER"], ["c", "INTEGER"], ["e", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "b"], ["b", "INTEGER"], ["INTEGER", "BOOLEAN"], ["c", "e"]>>, "a")
generate_java_code
modulo
bool_value (false)
add_call_chain(<<C,B>>)
disjunction
add_query("B", "B", <<["C", "INTEGER"], ["B", "BOOLEAN"], ["A", "B"], ["C", "d"], ["b", "INTEGER"], ["e", "b"], ["D", "BOOLEAN"]>>, "INTEGER")
bool_value (false)
add_attribute("D", "D", "INTEGER")
add_command("C", "BOOLEAN", <<["b", "INTEGER"], ["BOOLEAN", "a"], ["INTEGER", "C"], ["C", "BOOLEAN"], ["C", "INTEGER"]>>)
add_command("B", "C", <<["BOOLEAN", "INTEGER"], ["c", "BOOLEAN"], ["C", "D"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["D", "A"], ["e", "A"], ["C", "b"]>>)
bool_value (true)
add_call_chain(<<C>>)
logical_negation
add_query("d", "b", <<["A", "BOOLEAN"], ["D", "INTEGER"], ["B", "BOOLEAN"], ["c", "a"], ["e", "C"], ["A", "INTEGER"], ["c", "INTEGER"]>>, "e")
add_call_chain(<<A,B,c,c,INTEGER,d,e>>)
add_query("BOOLEAN", "d", <<["A", "b"], ["A", "INTEGER"], ["a", "e"], ["e", "INTEGER"], ["D", "INTEGER"], ["d", "b"]>>, "e")
int_value (13)
type_check
add_call_chain(<<c,B,e,C,INTEGER,b,d>>)
int_value (30)
generate_java_code
int_value (14)
add_class(B)
quotient
add_call_chain(<<C,C,BOOLEAN,e,c,b,c,b>>)
add_command("e", "d", <<["e", "a"], ["D", "BOOLEAN"], ["a", "a"]>>)
add_command("B", "b", <<["C", "INTEGER"], ["B", "BOOLEAN"], ["a", "B"], ["A", "B"], ["INTEGER", "BOOLEAN"], ["a", "INTEGER"], ["A", "INTEGER"], ["a", "INTEGER"]>>)
add_class(d)
modulo
add_query("c", "d", <<["C", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "B"], ["A", "a"], ["C", "c"], ["A", "BOOLEAN"], ["b", "INTEGER"]>>, "a")
add_command("a", "e", <<["B", "BOOLEAN"], ["c", "INTEGER"], ["d", "BOOLEAN"], ["c", "INTEGER"], ["INTEGER", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["a", "B"], ["d", "D"], ["b", "c"]>>)
logical_negation
generate_java_code
bool_value (false)
add_attribute("D", "c", "B")
bool_value (true)
logical_negation
