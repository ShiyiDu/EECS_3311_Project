add_call_chain(<<e,C>>)
add_call_chain(<<BOOLEAN,C,C,d>>)
add_call_chain(<<e,B,D,C,A,A>>)
int_value (5)
numerical_negation
type_check
logical_negation
conjunction
numerical_negation
add_query("a", "B", <<["D", "a"], ["C", "INTEGER"], ["a", "BOOLEAN"], ["C", "INTEGER"], ["D", "INTEGER"], ["C", "C"], ["e", "BOOLEAN"], ["e", "BOOLEAN"], ["a", "BOOLEAN"]>>, "BOOLEAN")
add_call_chain(<<a,b,INTEGER,B,b,c>>)
add_call_chain(<<c,d,a,C,d>>)
type_check
add_call_chain(<<d,e,B,b,d>>)
add_query("a", "c", <<["d", "BOOLEAN"], ["B", "INTEGER"], ["BOOLEAN", "d"], ["A", "D"], ["D", "BOOLEAN"], ["B", "D"], ["BOOLEAN", "INTEGER"], ["C", "A"], ["a", "BOOLEAN"]>>, "b")
add_class(A)
add_command("B", "A", <<["INTEGER", "D"], ["d", "e"], ["D", "C"], ["INTEGER", "D"]>>)
add_attribute("e", "c", "B")
add_query("BOOLEAN", "A", <<["b", "INTEGER"], ["D", "B"], ["D", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["c", "INTEGER"]>>, "e")
add_attribute("A", "C", "INTEGER")
add_attribute("e", "b", "BOOLEAN")
add_command("d", "c", <<["C", "B"], ["a", "BOOLEAN"], ["a", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "INTEGER"], ["A", "INTEGER"], ["B", "INTEGER"]>>)
bool_value (true)
add_attribute("d", "e", "BOOLEAN")
bool_value (true)
bool_value (false)
int_value (35)
bool_value (true)
add_call_chain(<<INTEGER,BOOLEAN,d,c,e,D>>)
bool_value (true)
add_call_chain(<<D,INTEGER,d,d,B,d,D,e,B>>)
add_call_chain(<<A,B,e,C>>)
less_than
generate_java_code
add_class(d)
disjunction
add_class(A)
add_query("INTEGER", "a", <<["BOOLEAN", "INTEGER"], ["a", "e"], ["D", "BOOLEAN"], ["C", "e"]>>, "B")
logical_negation
add_call_chain(<<d,d>>)
int_value (45)
add_call_chain(<<C,d,C,e,C,b,d,a>>)
logical_negation
numerical_negation
less_than
add_query("C", "a", <<["D", "INTEGER"], ["a", "BOOLEAN"], ["A", "c"], ["a", "INTEGER"], ["B", "A"]>>, "e")
add_attribute("B", "A", "BOOLEAN")
add_call_chain(<<B,d,A,C,a>>)
add_attribute("B", "B", "INTEGER")
add_query("e", "D", <<["C", "BOOLEAN"], ["C", "C"], ["b", "D"], ["A", "b"], ["e", "INTEGER"], ["b", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>, "e")
add_query("B", "d", <<["c", "BOOLEAN"], ["A", "C"], ["A", "INTEGER"], ["C", "B"]>>, "A")
conjunction
add_call_chain(<<e,C>>)
conjunction
int_value (29)
logical_negation
quotient
add_attribute("A", "C", "a")
bool_value (false)
int_value (42)
add_command("C", "a", <<["b", "BOOLEAN"]>>)
add_call_chain(<<C>>)
add_attribute("BOOLEAN", "C", "INTEGER")
int_value (44)
logical_negation
type_check
add_command("C", "c", <<["D", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["d", "e"], ["BOOLEAN", "D"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["C", "A"]>>)
addition
numerical_negation
add_call_chain(<<D,INTEGER,D,e,d,a,b>>)
type_check
bool_value (false)
type_check
quotient
generate_java_code
add_call_chain(<<e,INTEGER,C>>)
greater_than
add_attribute("b", "b", "BOOLEAN")
add_call_chain(<<b,a,B>>)
add_call_chain(<<A>>)
type_check
add_query("a", "D", <<["A", "BOOLEAN"], ["C", "INTEGER"], ["b", "B"], ["c", "BOOLEAN"], ["B", "INTEGER"], ["D", "D"], ["B", "BOOLEAN"], ["e", "d"]>>, "A")
generate_java_code
add_call_chain(<<b,A,d,b,A,C,B,INTEGER>>)
add_call_chain(<<INTEGER,B,e,e,B,C,C,D>>)
add_command("d", "d", <<["D", "c"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["D", "INTEGER"], ["e", "BOOLEAN"]>>)
add_attribute("A", "c", "a")
add_class(c)
logical_negation
modulo
add_query("D", "b", <<["B", "INTEGER"]>>, "B")
add_call_chain(<<B,a,D>>)
bool_value (true)
addition
subtraction
add_call_chain(<<A,A,c,c,D>>)
add_call_chain(<<B,a,A,e,BOOLEAN>>)
add_attribute("a", "B", "INTEGER")
type_check
type_check
add_query("C", "a", <<["d", "BOOLEAN"], ["e", "INTEGER"], ["D", "BOOLEAN"], ["C", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["c", "BOOLEAN"], ["e", "INTEGER"]>>, "D")
greater_than
add_query("e", "C", <<["A", "INTEGER"], ["D", "BOOLEAN"], ["B", "B"], ["b", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>, "a")
greater_than
add_call_chain(<<d,c,B,C>>)
add_call_chain(<<e,d>>)
numerical_negation
add_attribute("D", "d", "e")
bool_value (false)
type_check
generate_java_code
add_command("A", "d", <<["A", "D"], ["a", "BOOLEAN"], ["d", "INTEGER"]>>)
add_call_chain(<<b,B,INTEGER,B,C,B,A>>)
add_call_chain(<<d,B,A,B,C,D,D,e>>)
generate_java_code
logical_negation
numerical_negation
conjunction
add_call_chain(<<BOOLEAN,B,e,INTEGER,e>>)
bool_value (false)
type_check
add_call_chain(<<d,D,c,A,A,INTEGER,a,A>>)
generate_java_code
add_call_chain(<<B,A>>)
equals
addition
add_attribute("c", "B", "C")
subtraction
add_query("b", "a", <<["D", "c"], ["BOOLEAN", "BOOLEAN"]>>, "c")
add_query("D", "a", <<["e", "INTEGER"], ["B", "BOOLEAN"], ["INTEGER", "INTEGER"], ["D", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["a", "INTEGER"], ["D", "b"], ["b", "BOOLEAN"]>>, "e")
generate_java_code
logical_negation
add_query("C", "A", <<["A", "BOOLEAN"], ["a", "e"], ["a", "INTEGER"], ["b", "c"], ["e", "D"]>>, "e")
int_value (32)
add_command("e", "B", <<["b", "BOOLEAN"], ["c", "a"], ["D", "BOOLEAN"], ["c", "BOOLEAN"], ["c", "BOOLEAN"], ["c", "c"]>>)
add_attribute("D", "A", "INTEGER")
add_call_chain(<<c,A,C>>)
add_class(BOOLEAN)
type_check
add_call_chain(<<a,INTEGER,d,d,c,D,a,A>>)
numerical_negation
int_value (33)
addition
bool_value (true)
add_call_chain(<<B,a,c,A,BOOLEAN,b,c,D,C>>)
generate_java_code
numerical_negation
int_value (37)
bool_value (true)
add_command("A", "BOOLEAN", <<["c", "BOOLEAN"], ["C", "A"], ["B", "INTEGER"], ["A", "C"], ["BOOLEAN", "BOOLEAN"], ["a", "D"], ["B", "INTEGER"]>>)
equals
bool_value (true)
generate_java_code
add_attribute("c", "b", "INTEGER")
add_command("b", "C", <<["c", "INTEGER"], ["e", "d"], ["B", "INTEGER"], ["C", "INTEGER"], ["A", "C"], ["A", "BOOLEAN"], ["B", "BOOLEAN"]>>)
less_than
logical_negation
add_call_chain(<<A,BOOLEAN,B,D,a>>)
add_command("D", "D", <<["C", "BOOLEAN"], ["A", "INTEGER"], ["D", "INTEGER"]>>)
add_call_chain(<<INTEGER,B,e,C,d,A,D>>)
type_check
add_query("c", "INTEGER", <<["BOOLEAN", "BOOLEAN"], ["e", "BOOLEAN"], ["c", "BOOLEAN"]>>, "C")
bool_value (true)
add_query("BOOLEAN", "INTEGER", <<["A", "INTEGER"]>>, "a")
less_than
logical_negation
add_call_chain(<<b,d,d,D,B,c,e,A,d>>)
add_attribute("b", "a", "BOOLEAN")
add_attribute("D", "e", "INTEGER")
type_check
add_call_chain(<<b,A>>)
type_check
add_attribute("B", "c", "BOOLEAN")
add_command("B", "BOOLEAN", <<["D", "D"], ["c", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["B", "D"], ["d", "A"], ["D", "INTEGER"], ["C", "INTEGER"], ["A", "BOOLEAN"]>>)
type_check
bool_value (false)
add_query("C", "c", <<["B", "INTEGER"], ["b", "INTEGER"], ["a", "INTEGER"], ["c", "C"]>>, "c")
generate_java_code
add_class(a)
add_call_chain(<<D,b,b,C,c,b,INTEGER,c,C>>)
add_class(BOOLEAN)
logical_negation
