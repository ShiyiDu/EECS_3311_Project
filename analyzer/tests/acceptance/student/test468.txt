add_query("a", "C", <<["A", "a"], ["INTEGER", "INTEGER"], ["A", "INTEGER"]>>, "c")
add_command("d", "D", <<["B", "BOOLEAN"], ["d", "BOOLEAN"], ["d", "D"], ["D", "A"], ["D", "BOOLEAN"], ["b", "BOOLEAN"]>>)
add_attribute("e", "d", "INTEGER")
conjunction
add_query("e", "C", <<["c", "a"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["D", "C"], ["A", "INTEGER"], ["d", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "BOOLEAN"]>>, "INTEGER")
less_than
add_attribute("D", "D", "INTEGER")
add_query("e", "e", <<["A", "INTEGER"], ["a", "c"], ["BOOLEAN", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>, "b")
add_call_chain(<<a,D,c,b,A,e,d,C>>)
add_query("D", "a", <<["INTEGER", "BOOLEAN"], ["D", "INTEGER"]>>, "INTEGER")
numerical_negation
add_attribute("e", "C", "INTEGER")
add_call_chain(<<D,d,d,d,a>>)
add_attribute("C", "B", "INTEGER")
logical_negation
add_class(b)
add_call_chain(<<e>>)
greater_than
int_value (5)
int_value (23)
add_query("b", "d", <<["b", "INTEGER"], ["C", "INTEGER"], ["A", "a"], ["b", "BOOLEAN"], ["c", "INTEGER"], ["D", "INTEGER"], ["a", "c"]>>, "e")
add_attribute("B", "C", "D")
add_attribute("D", "A", "A")
int_value (18)
generate_java_code
logical_negation
less_than
disjunction
add_class(c)
logical_negation
add_call_chain(<<b,A,B,d,c,b,BOOLEAN>>)
equals
generate_java_code
add_attribute("a", "c", "INTEGER")
type_check
logical_negation
add_command("b", "A", <<["C", "INTEGER"], ["C", "INTEGER"], ["a", "d"], ["C", "b"], ["BOOLEAN", "B"], ["D", "INTEGER"], ["B", "BOOLEAN"], ["A", "INTEGER"]>>)
disjunction
add_query("A", "e", <<["A", "e"], ["A", "INTEGER"], ["A", "INTEGER"], ["B", "d"]>>, "b")
add_call_chain(<<A,A,D>>)
add_attribute("b", "c", "BOOLEAN")
bool_value (false)
type_check
add_attribute("b", "D", "INTEGER")
type_check
add_call_chain(<<c,B,D,B,A,a,B,b>>)
add_attribute("e", "d", "BOOLEAN")
int_value (1)
bool_value (false)
add_call_chain(<<D,b,b,A>>)
bool_value (false)
add_command("D", "A", <<["B", "BOOLEAN"], ["A", "BOOLEAN"]>>)
type_check
add_call_chain(<<b,d,a,D,C,D,D,e>>)
conjunction
add_attribute("c", "A", "BOOLEAN")
int_value (20)
disjunction
add_attribute("a", "B", "BOOLEAN")
add_query("c", "c", <<["C", "d"], ["A", "INTEGER"], ["INTEGER", "BOOLEAN"], ["e", "INTEGER"], ["a", "A"], ["A", "B"], ["C", "BOOLEAN"]>>, "A")
logical_negation
logical_negation
add_call_chain(<<BOOLEAN,b,A,d,b>>)
bool_value (true)
add_query("B", "B", <<["c", "C"], ["b", "BOOLEAN"]>>, "A")
add_command("d", "A", <<["a", "a"], ["C", "BOOLEAN"], ["e", "INTEGER"], ["C", "d"], ["a", "INTEGER"], ["C", "d"], ["c", "a"], ["A", "BOOLEAN"]>>)
add_attribute("A", "c", "BOOLEAN")
add_call_chain(<<B,c,e,c,a,a>>)
multiplication
generate_java_code
less_than
add_attribute("a", "C", "INTEGER")
logical_negation
bool_value (true)
disjunction
int_value (19)
add_call_chain(<<c,D,d,e>>)
conjunction
add_call_chain(<<B,c,c,B,b>>)
add_call_chain(<<D,c,B,D,b,A,c>>)
numerical_negation
type_check
add_query("B", "b", <<["C", "BOOLEAN"], ["b", "INTEGER"], ["D", "INTEGER"], ["B", "BOOLEAN"]>>, "d")
modulo
bool_value (true)
addition
bool_value (true)
int_value (11)
add_query("B", "C", <<["a", "e"], ["a", "INTEGER"], ["a", "BOOLEAN"], ["B", "C"], ["D", "BOOLEAN"]>>, "C")
add_query("A", "BOOLEAN", <<["e", "d"], ["c", "BOOLEAN"], ["c", "BOOLEAN"], ["e", "C"], ["D", "b"], ["c", "BOOLEAN"], ["C", "C"]>>, "e")
add_command("d", "B", <<["e", "e"], ["b", "INTEGER"], ["c", "INTEGER"], ["B", "a"]>>)
add_call_chain(<<C,C,b,b,a,c,C,A,b>>)
int_value (37)
numerical_negation
add_query("B", "C", <<["INTEGER", "A"], ["d", "INTEGER"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["e", "INTEGER"], ["e", "INTEGER"], ["B", "e"], ["d", "BOOLEAN"], ["c", "INTEGER"]>>, "b")
add_class(c)
conjunction
add_class(C)
add_command("d", "e", <<["INTEGER", "INTEGER"], ["D", "d"]>>)
add_query("e", "c", <<["e", "D"], ["C", "c"]>>, "A")
type_check
add_command("b", "C", <<["A", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "INTEGER"]>>)
add_class(b)
conjunction
add_call_chain(<<B,C>>)
less_than
bool_value (false)
add_call_chain(<<B,C,C,A,e>>)
add_attribute("d", "e", "BOOLEAN")
add_call_chain(<<d,a>>)
logical_negation
add_class(d)
equals
greater_than
int_value (4)
add_call_chain(<<A,b,d,C,b,c>>)
add_query("c", "A", <<["B", "INTEGER"], ["A", "A"], ["C", "C"], ["a", "INTEGER"]>>, "D")
int_value (28)
generate_java_code
bool_value (false)
numerical_negation
add_call_chain(<<c,B,INTEGER,B,A>>)
add_query("D", "d", <<["d", "INTEGER"], ["d", "D"], ["d", "INTEGER"], ["A", "a"], ["D", "e"]>>, "INTEGER")
add_attribute("b", "INTEGER", "INTEGER")
logical_negation
type_check
add_class(C)
bool_value (true)
generate_java_code
type_check
int_value (16)
numerical_negation
add_query("b", "d", <<["A", "INTEGER"], ["BOOLEAN", "B"], ["D", "BOOLEAN"], ["c", "e"], ["D", "c"]>>, "a")
add_query("b", "B", <<["d", "INTEGER"], ["c", "C"], ["BOOLEAN", "BOOLEAN"], ["d", "D"], ["d", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["D", "B"], ["BOOLEAN", "BOOLEAN"], ["a", "C"]>>, "A")
bool_value (false)
conjunction
add_query("B", "D", <<["C", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "BOOLEAN"], ["INTEGER", "INTEGER"], ["D", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "INTEGER"]>>, "c")
add_class(e)
numerical_negation
bool_value (true)
add_attribute("b", "a", "A")
numerical_negation
add_attribute("D", "B", "BOOLEAN")
logical_negation
add_attribute("B", "B", "INTEGER")
less_than
bool_value (true)
add_attribute("A", "a", "INTEGER")
bool_value (false)
logical_negation
add_command("D", "C", <<["b", "B"], ["B", "INTEGER"], ["e", "INTEGER"]>>)
add_query("a", "c", <<["c", "BOOLEAN"], ["D", "BOOLEAN"]>>, "b")
generate_java_code
generate_java_code
bool_value (false)
int_value (47)
add_query("D", "C", <<["d", "INTEGER"], ["INTEGER", "INTEGER"], ["A", "INTEGER"], ["d", "INTEGER"]>>, "e")
add_call_chain(<<C,A,D,a,B,D,d,A,d>>)
add_command("e", "e", <<["c", "BOOLEAN"], ["a", "INTEGER"], ["A", "BOOLEAN"], ["d", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["d", "INTEGER"], ["C", "BOOLEAN"]>>)
type_check
int_value (47)
logical_negation
int_value (22)
add_command("B", "b", <<["c", "BOOLEAN"], ["c", "INTEGER"], ["e", "BOOLEAN"], ["c", "INTEGER"], ["B", "INTEGER"], ["A", "a"]>>)
logical_negation
conjunction
add_command("b", "b", <<["C", "BOOLEAN"], ["BOOLEAN", "d"], ["b", "A"], ["d", "BOOLEAN"], ["e", "A"]>>)
add_attribute("D", "BOOLEAN", "INTEGER")
add_query("b", "D", <<["b", "BOOLEAN"]>>, "c")
add_attribute("e", "A", "B")
conjunction
add_call_chain(<<BOOLEAN,b,a,b>>)
add_query("B", "D", <<["d", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["d", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["B", "B"], ["a", "a"], ["C", "INTEGER"]>>, "b")
numerical_negation
logical_negation
add_class(INTEGER)
int_value (17)
add_class(c)
type_check
int_value (20)
bool_value (false)
generate_java_code
generate_java_code
bool_value (false)
bool_value (false)
numerical_negation
type_check
int_value (41)
add_call_chain(<<d,b,D>>)
quotient
add_call_chain(<<d,INTEGER,a,INTEGER,b>>)
add_query("c", "c", <<["D", "D"], ["INTEGER", "INTEGER"], ["D", "INTEGER"], ["B", "BOOLEAN"], ["a", "c"]>>, "A")
quotient
less_than
subtraction
numerical_negation
add_command("D", "A", <<["a", "d"], ["C", "INTEGER"], ["A", "INTEGER"], ["C", "d"], ["e", "INTEGER"], ["c", "BOOLEAN"], ["BOOLEAN", "e"], ["B", "INTEGER"], ["C", "BOOLEAN"]>>)
add_command("A", "C", <<["C", "INTEGER"], ["B", "BOOLEAN"], ["A", "e"], ["A", "A"], ["A", "e"], ["d", "INTEGER"], ["e", "BOOLEAN"]>>)
bool_value (true)
add_command("e", "e", <<["b", "INTEGER"], ["c", "A"], ["b", "A"], ["e", "BOOLEAN"], ["D", "A"], ["d", "b"]>>)
add_call_chain(<<b,BOOLEAN,b,C,BOOLEAN>>)
add_call_chain(<<d,e,b,e,A,d,d,c,D>>)
add_call_chain(<<b,b>>)
int_value (38)
add_command("D", "c", <<["b", "b"], ["d", "C"], ["D", "b"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["BOOLEAN", "e"], ["D", "BOOLEAN"], ["c", "INTEGER"]>>)
add_call_chain(<<a,D,c,b,a,B,d>>)
add_attribute("C", "C", "D")
add_query("a", "D", <<["d", "b"], ["D", "BOOLEAN"], ["d", "BOOLEAN"]>>, "c")
type_check
generate_java_code
bool_value (true)
add_command("d", "a", <<["BOOLEAN", "INTEGER"], ["c", "BOOLEAN"], ["B", "a"], ["e", "a"]>>)
add_query("d", "INTEGER", <<["B", "d"], ["BOOLEAN", "INTEGER"], ["b", "INTEGER"], ["b", "C"], ["e", "A"], ["a", "c"]>>, "C")
equals
int_value (39)
int_value (28)
bool_value (true)
bool_value (true)
int_value (11)
add_query("d", "B", <<["BOOLEAN", "BOOLEAN"]>>, "D")
numerical_negation
type_check
conjunction
add_command("b", "C", <<["d", "BOOLEAN"], ["a", "BOOLEAN"]>>)
add_command("A", "D", <<["a", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "A"], ["b", "c"], ["d", "INTEGER"], ["A", "INTEGER"], ["b", "BOOLEAN"], ["D", "c"], ["b", "INTEGER"]>>)
add_command("e", "B", <<["A", "c"], ["b", "BOOLEAN"], ["c", "a"], ["a", "BOOLEAN"], ["BOOLEAN", "c"]>>)
numerical_negation
