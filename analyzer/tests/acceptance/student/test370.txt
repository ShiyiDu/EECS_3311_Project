greater_than
add_command("A", "e", <<["D", "BOOLEAN"], ["c", "BOOLEAN"], ["INTEGER", "D"], ["C", "BOOLEAN"], ["d", "d"], ["d", "INTEGER"]>>)
multiplication
add_query("C", "d", <<["d", "INTEGER"], ["b", "INTEGER"], ["D", "c"], ["A", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["C", "d"], ["A", "BOOLEAN"]>>, "INTEGER")
add_call_chain(<<A,INTEGER,e,A,BOOLEAN>>)
add_command("D", "INTEGER", <<["C", "BOOLEAN"]>>)
generate_java_code
less_than
addition
addition
add_call_chain(<<b,C,d,D,BOOLEAN>>)
add_query("c", "D", <<["a", "BOOLEAN"]>>, "B")
add_query("B", "e", <<["A", "BOOLEAN"], ["D", "INTEGER"], ["D", "BOOLEAN"]>>, "INTEGER")
add_query("B", "b", <<["A", "e"], ["D", "C"], ["d", "BOOLEAN"]>>, "a")
add_attribute("B", "B", "B")
add_attribute("c", "b", "C")
bool_value (true)
bool_value (false)
add_attribute("e", "D", "INTEGER")
bool_value (true)
add_query("B", "c", <<["a", "INTEGER"], ["e", "BOOLEAN"]>>, "a")
add_call_chain(<<B,c,D,D,a>>)
bool_value (false)
greater_than
logical_negation
add_command("B", "A", <<["B", "b"], ["e", "INTEGER"], ["A", "INTEGER"], ["INTEGER", "BOOLEAN"], ["a", "INTEGER"], ["d", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["D", "A"], ["INTEGER", "D"]>>)
int_value (5)
add_attribute("b", "c", "BOOLEAN")
int_value (28)
add_attribute("b", "b", "D")
add_attribute("C", "INTEGER", "BOOLEAN")
greater_than
add_call_chain(<<a,b,D,D,BOOLEAN>>)
numerical_negation
add_command("a", "e", <<["A", "BOOLEAN"], ["D", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>)
less_than
add_query("c", "c", <<["a", "INTEGER"]>>, "D")
int_value (16)
add_call_chain(<<b,A,C,BOOLEAN>>)
add_query("b", "A", <<["A", "BOOLEAN"], ["b", "D"], ["A", "INTEGER"], ["D", "e"], ["b", "B"]>>, "D")
add_attribute("BOOLEAN", "A", "BOOLEAN")
add_class(d)
bool_value (true)
conjunction
bool_value (false)
add_command("C", "BOOLEAN", <<["e", "A"], ["c", "INTEGER"], ["A", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["BOOLEAN", "d"], ["BOOLEAN", "d"], ["d", "INTEGER"]>>)
add_call_chain(<<e,D,B,e,C,B,C,C>>)
less_than
logical_negation
add_call_chain(<<b,c,b,A,c,c,a,B,b>>)
add_command("C", "BOOLEAN", <<["d", "BOOLEAN"], ["a", "B"], ["D", "INTEGER"], ["B", "BOOLEAN"]>>)
add_query("A", "d", <<["d", "BOOLEAN"], ["C", "e"], ["D", "INTEGER"], ["e", "BOOLEAN"], ["A", "A"]>>, "A")
generate_java_code
disjunction
add_query("BOOLEAN", "C", <<["D", "BOOLEAN"], ["c", "INTEGER"], ["BOOLEAN", "C"], ["B", "INTEGER"], ["A", "INTEGER"], ["A", "e"], ["C", "e"], ["C", "BOOLEAN"], ["D", "BOOLEAN"]>>, "b")
add_call_chain(<<b,b,a,d,c,e>>)
add_command("INTEGER", "INTEGER", <<["D", "INTEGER"], ["a", "INTEGER"], ["d", "D"], ["A", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "INTEGER"]>>)
greater_than
generate_java_code
add_call_chain(<<b>>)
bool_value (true)
disjunction
bool_value (false)
conjunction
subtraction
add_call_chain(<<INTEGER,a,b,C,D,INTEGER,e,B,d>>)
add_call_chain(<<b,a,e,a,B,e>>)
bool_value (true)
add_command("INTEGER", "A", <<["INTEGER", "C"], ["BOOLEAN", "a"], ["e", "BOOLEAN"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["d", "INTEGER"], ["BOOLEAN", "a"]>>)
numerical_negation
logical_negation
add_command("e", "A", <<["b", "B"], ["D", "INTEGER"], ["b", "INTEGER"], ["A", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "INTEGER"]>>)
add_command("e", "e", <<["a", "INTEGER"], ["d", "BOOLEAN"], ["C", "D"]>>)
int_value (36)
logical_negation
generate_java_code
numerical_negation
add_call_chain(<<INTEGER,A,c,C,a,a,d,e,C>>)
int_value (36)
add_command("B", "B", <<["A", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "c"], ["A", "INTEGER"], ["c", "c"]>>)
disjunction
add_command("d", "C", <<["B", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["d", "INTEGER"], ["B", "BOOLEAN"], ["d", "INTEGER"]>>)
bool_value (false)
numerical_negation
add_attribute("A", "C", "a")
add_command("C", "INTEGER", <<["B", "BOOLEAN"], ["C", "C"], ["d", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["D", "B"], ["A", "INTEGER"], ["e", "BOOLEAN"], ["e", "BOOLEAN"]>>)
greater_than
add_call_chain(<<e,c,e,A,A,c,D,a,b>>)
add_attribute("B", "a", "c")
generate_java_code
add_attribute("INTEGER", "INTEGER", "INTEGER")
bool_value (true)
logical_negation
type_check
add_call_chain(<<b,D>>)
numerical_negation
add_query("A", "INTEGER", <<["e", "BOOLEAN"], ["A", "e"], ["e", "INTEGER"]>>, "b")
add_call_chain(<<D>>)
logical_negation
add_call_chain(<<a,INTEGER,B,c,b,c,A,c,d>>)
bool_value (false)
type_check
add_call_chain(<<A,C,B>>)
add_call_chain(<<D,A,D,B,a,D,INTEGER,INTEGER>>)
type_check
add_call_chain(<<a,B,A,C,c>>)
add_command("b", "INTEGER", <<["b", "INTEGER"], ["e", "BOOLEAN"]>>)
add_attribute("a", "e", "INTEGER")
conjunction
add_command("INTEGER", "A", <<["D", "BOOLEAN"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["A", "INTEGER"], ["a", "BOOLEAN"], ["d", "d"], ["BOOLEAN", "INTEGER"]>>)
add_attribute("a", "b", "INTEGER")
numerical_negation
logical_negation
add_call_chain(<<c,e,C,D,b,D,d,D,C>>)
generate_java_code
add_call_chain(<<D,C,a>>)
numerical_negation
subtraction
add_call_chain(<<A>>)
add_call_chain(<<C,d,e,e,INTEGER>>)
conjunction
numerical_negation
bool_value (false)
add_query("A", "e", <<["B", "BOOLEAN"], ["D", "INTEGER"], ["d", "BOOLEAN"], ["BOOLEAN", "C"], ["INTEGER", "INTEGER"], ["c", "BOOLEAN"], ["A", "INTEGER"], ["INTEGER", "D"]>>, "a")
add_call_chain(<<BOOLEAN,B,D,c,D,b,a,d,C>>)
int_value (35)
add_attribute("A", "b", "c")
add_command("BOOLEAN", "BOOLEAN", <<["A", "BOOLEAN"], ["d", "INTEGER"], ["c", "BOOLEAN"]>>)
add_class(D)
add_query("C", "e", <<["D", "BOOLEAN"], ["A", "A"], ["A", "INTEGER"], ["a", "C"], ["c", "INTEGER"], ["b", "A"], ["C", "B"], ["b", "INTEGER"]>>, "a")
add_attribute("BOOLEAN", "INTEGER", "INTEGER")
type_check
subtraction
generate_java_code
generate_java_code
add_command("d", "BOOLEAN", <<["a", "INTEGER"], ["a", "BOOLEAN"], ["B", "INTEGER"], ["c", "INTEGER"]>>)
conjunction
logical_negation
add_class(C)
add_command("C", "e", <<["b", "BOOLEAN"], ["B", "INTEGER"]>>)
add_query("A", "INTEGER", <<["c", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "e"], ["B", "INTEGER"], ["INTEGER", "BOOLEAN"], ["D", "A"]>>, "D")
int_value (23)
add_attribute("BOOLEAN", "b", "BOOLEAN")
add_call_chain(<<e,a,C,c,d,a,B,B,d>>)
add_class(C)
type_check
add_attribute("A", "D", "BOOLEAN")
generate_java_code
bool_value (true)
add_class(INTEGER)
add_attribute("d", "C", "C")
add_call_chain(<<D,A,a,D,B,b>>)
less_than
add_call_chain(<<e,A,B,d,a>>)
add_query("D", "D", <<["D", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "c"], ["D", "INTEGER"], ["A", "INTEGER"], ["A", "BOOLEAN"], ["A", "b"]>>, "B")
subtraction
int_value (35)
add_command("a", "a", <<["c", "BOOLEAN"], ["d", "BOOLEAN"], ["b", "BOOLEAN"]>>)
add_attribute("D", "D", "A")
bool_value (false)
add_command("a", "c", <<["C", "BOOLEAN"], ["D", "INTEGER"]>>)
add_call_chain(<<c,a,a,b,A,d,BOOLEAN,C>>)
addition
add_class(e)
conjunction
add_query("D", "C", <<["b", "b"], ["c", "BOOLEAN"]>>, "e")
numerical_negation
bool_value (false)
numerical_negation
add_call_chain(<<b,D,INTEGER,c>>)
bool_value (false)
add_query("d", "A", <<["B", "INTEGER"], ["D", "B"], ["D", "d"], ["BOOLEAN", "INTEGER"], ["e", "BOOLEAN"], ["C", "B"], ["d", "BOOLEAN"], ["D", "e"]>>, "D")
add_call_chain(<<a,INTEGER,e,c,A,D>>)
add_command("B", "BOOLEAN", <<["e", "e"], ["e", "BOOLEAN"], ["d", "d"], ["b", "INTEGER"], ["A", "D"], ["C", "b"], ["BOOLEAN", "BOOLEAN"], ["C", "INTEGER"]>>)
add_query("INTEGER", "e", <<["D", "BOOLEAN"], ["b", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "INTEGER"], ["b", "INTEGER"], ["B", "INTEGER"], ["C", "A"], ["B", "BOOLEAN"]>>, "a")
add_call_chain(<<b,b,D>>)
disjunction
modulo
add_command("D", "d", <<["c", "INTEGER"], ["INTEGER", "C"], ["e", "A"], ["INTEGER", "BOOLEAN"], ["D", "BOOLEAN"]>>)
numerical_negation
int_value (36)
add_call_chain(<<A,c,B,e,e>>)
numerical_negation
disjunction
add_class(C)
add_call_chain(<<D,e,b,A,d,B,INTEGER>>)
