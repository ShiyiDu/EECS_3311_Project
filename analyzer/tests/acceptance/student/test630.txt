add_command("C", "c", <<["C", "INTEGER"]>>)
bool_value (false)
quotient
add_attribute("D", "e", "INTEGER")
conjunction
int_value (48)
add_attribute("d", "D", "BOOLEAN")
numerical_negation
add_attribute("B", "B", "INTEGER")
add_call_chain(<<A,C,C,c,b,A>>)
bool_value (true)
bool_value (true)
add_attribute("c", "b", "INTEGER")
add_class(D)
logical_negation
bool_value (false)
multiplication
add_command("e", "a", <<["D", "C"], ["D", "BOOLEAN"], ["c", "BOOLEAN"], ["e", "INTEGER"]>>)
type_check
add_command("A", "BOOLEAN", <<["B", "BOOLEAN"], ["C", "BOOLEAN"]>>)
int_value (25)
subtraction
add_call_chain(<<B,INTEGER,e,A,C,e>>)
generate_java_code
numerical_negation
add_call_chain(<<C>>)
generate_java_code
numerical_negation
add_call_chain(<<b,B,d,A,e>>)
int_value (5)
add_call_chain(<<a,BOOLEAN,b,D,a,C,d,c,a>>)
disjunction
add_call_chain(<<c,e,e,d,A>>)
add_command("b", "a", <<["A", "BOOLEAN"], ["b", "INTEGER"]>>)
add_class(INTEGER)
int_value (42)
greater_than
add_command("b", "D", <<["BOOLEAN", "BOOLEAN"], ["c", "BOOLEAN"], ["b", "INTEGER"], ["D", "D"], ["INTEGER", "INTEGER"]>>)
bool_value (false)
add_call_chain(<<B,a,d,C>>)
less_than
add_attribute("c", "B", "INTEGER")
int_value (44)
add_query("b", "e", <<["D", "BOOLEAN"]>>, "e")
generate_java_code
logical_negation
numerical_negation
int_value (18)
add_command("B", "d", <<["d", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "C"], ["a", "b"], ["A", "BOOLEAN"], ["B", "BOOLEAN"]>>)
add_query("C", "C", <<["D", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "INTEGER"], ["d", "INTEGER"], ["A", "INTEGER"], ["BOOLEAN", "INTEGER"]>>, "A")
int_value (11)
add_call_chain(<<e>>)
add_attribute("d", "c", "d")
generate_java_code
add_call_chain(<<d,a,C,e,d,a,A,a,c>>)
add_call_chain(<<D,D,b,b,C,A,b,C,A>>)
modulo
add_attribute("d", "C", "D")
add_query("BOOLEAN", "B", <<["a", "INTEGER"], ["b", "INTEGER"], ["B", "d"], ["a", "INTEGER"], ["C", "A"]>>, "B")
logical_negation
int_value (3)
quotient
logical_negation
add_command("A", "b", <<["d", "INTEGER"], ["e", "C"], ["d", "D"], ["C", "BOOLEAN"]>>)
add_call_chain(<<B,C>>)
add_command("b", "A", <<["BOOLEAN", "INTEGER"], ["D", "BOOLEAN"], ["D", "C"], ["e", "C"], ["e", "A"]>>)
add_query("A", "B", <<["C", "INTEGER"], ["A", "e"], ["e", "BOOLEAN"], ["C", "BOOLEAN"]>>, "C")
int_value (7)
int_value (33)
logical_negation
add_call_chain(<<c,B,c,D,d,INTEGER,d,a>>)
add_call_chain(<<d,b,B>>)
type_check
numerical_negation
bool_value (true)
add_query("c", "C", <<["A", "a"], ["e", "a"]>>, "A")
int_value (4)
add_call_chain(<<b>>)
add_class(c)
numerical_negation
bool_value (false)
type_check
add_command("C", "A", <<["e", "BOOLEAN"], ["d", "INTEGER"]>>)
int_value (10)
type_check
logical_negation
bool_value (false)
add_command("BOOLEAN", "e", <<["A", "BOOLEAN"], ["d", "BOOLEAN"], ["d", "c"], ["INTEGER", "BOOLEAN"], ["b", "b"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "INTEGER"]>>)
add_command("c", "e", <<["d", "INTEGER"], ["A", "INTEGER"], ["e", "INTEGER"]>>)
bool_value (false)
add_attribute("c", "c", "BOOLEAN")
addition
generate_java_code
add_query("A", "b", <<["D", "INTEGER"], ["C", "INTEGER"], ["D", "INTEGER"], ["b", "INTEGER"], ["c", "D"]>>, "INTEGER")
bool_value (false)
modulo
add_command("a", "e", <<["D", "BOOLEAN"], ["a", "INTEGER"], ["B", "INTEGER"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["a", "INTEGER"]>>)
int_value (11)
conjunction
bool_value (true)
add_call_chain(<<e,e,B,b,INTEGER,B,B,D>>)
add_call_chain(<<B,B,a,A>>)
bool_value (false)
add_class(c)
greater_than
logical_negation
numerical_negation
logical_negation
generate_java_code
add_call_chain(<<B,BOOLEAN,B,d>>)
add_call_chain(<<b,INTEGER,C,b,b,INTEGER,c>>)
multiplication
logical_negation
add_call_chain(<<b,C,d,e,b,a,a,B,b>>)
bool_value (true)
quotient
add_call_chain(<<A,b,c,e,C>>)
numerical_negation
add_call_chain(<<d,D>>)
type_check
logical_negation
generate_java_code
add_command("C", "D", <<["C", "BOOLEAN"]>>)
int_value (14)
add_attribute("B", "d", "a")
addition
add_call_chain(<<D,e,D,a,a,BOOLEAN,c>>)
disjunction
type_check
add_class(INTEGER)
add_query("BOOLEAN", "e", <<["B", "BOOLEAN"]>>, "d")
add_call_chain(<<C,d,d,A,b,a>>)
bool_value (true)
bool_value (false)
add_command("b", "c", <<["c", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["d", "BOOLEAN"], ["e", "c"], ["B", "A"], ["A", "c"], ["e", "INTEGER"]>>)
add_class(c)
disjunction
numerical_negation
equals
add_call_chain(<<c,INTEGER,A,a>>)
numerical_negation
add_attribute("a", "D", "INTEGER")
add_call_chain(<<d,B,c,D,C,A,b>>)
add_query("d", "A", <<["e", "INTEGER"], ["A", "INTEGER"], ["INTEGER", "BOOLEAN"], ["d", "INTEGER"], ["c", "A"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["INTEGER", "INTEGER"]>>, "C")
logical_negation
bool_value (true)
add_query("a", "b", <<["D", "INTEGER"]>>, "C")
add_call_chain(<<C,a,BOOLEAN,e,B,c>>)
bool_value (true)
add_query("a", "D", <<["B", "e"], ["b", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "a"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["a", "BOOLEAN"]>>, "A")
numerical_negation
add_class(A)
add_call_chain(<<b,C>>)
add_query("a", "d", <<["INTEGER", "BOOLEAN"], ["c", "INTEGER"], ["C", "INTEGER"], ["D", "INTEGER"], ["B", "INTEGER"]>>, "a")
int_value (42)
less_than
add_attribute("e", "b", "INTEGER")
conjunction
add_call_chain(<<D>>)
quotient
modulo
add_call_chain(<<b,A,B,a>>)
add_query("e", "C", <<["B", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "D"], ["BOOLEAN", "INTEGER"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["b", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["c", "a"]>>, "b")
conjunction
add_attribute("D", "b", "INTEGER")
add_call_chain(<<a,D,C,d,A,b,A,d>>)
generate_java_code
type_check
subtraction
type_check
generate_java_code
type_check
int_value (1)
type_check
add_command("e", "BOOLEAN", <<["c", "BOOLEAN"], ["D", "INTEGER"], ["c", "INTEGER"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["b", "BOOLEAN"]>>)
add_query("b", "A", <<["e", "INTEGER"], ["B", "C"], ["A", "INTEGER"], ["INTEGER", "INTEGER"]>>, "B")
bool_value (true)
add_call_chain(<<e,B,b>>)
less_than
add_call_chain(<<A,c,b,a,d,B,e,d,e>>)
subtraction
logical_negation
