add_command("e", "b", <<["c", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["a", "b"], ["d", "B"], ["b", "c"]>>)
add_call_chain(<<D,b,INTEGER,D,B,A,INTEGER,C,B>>)
generate_java_code
modulo
bool_value (false)
bool_value (false)
numerical_negation
add_command("B", "B", <<["INTEGER", "BOOLEAN"], ["a", "e"], ["d", "BOOLEAN"], ["INTEGER", "INTEGER"], ["e", "INTEGER"], ["e", "e"]>>)
int_value (5)
type_check
add_command("c", "d", <<["A", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "a"], ["A", "INTEGER"]>>)
add_call_chain(<<C,C>>)
greater_than
logical_negation
add_call_chain(<<BOOLEAN,a,BOOLEAN,b,b,A>>)
add_command("C", "b", <<["C", "INTEGER"], ["d", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "INTEGER"], ["c", "BOOLEAN"]>>)
add_attribute("D", "C", "INTEGER")
addition
bool_value (false)
bool_value (true)
bool_value (true)
numerical_negation
less_than
bool_value (true)
add_call_chain(<<D,BOOLEAN,e,B,INTEGER,B,b,D>>)
generate_java_code
add_call_chain(<<C,d,A,A>>)
add_call_chain(<<d,b,C,B,c>>)
greater_than
logical_negation
generate_java_code
numerical_negation
add_call_chain(<<INTEGER,d,A>>)
logical_negation
less_than
bool_value (true)
add_call_chain(<<b,D,D,INTEGER,c,D>>)
logical_negation
type_check
logical_negation
numerical_negation
generate_java_code
add_call_chain(<<A,a,C,d,B,a,c>>)
add_query("a", "a", <<["BOOLEAN", "BOOLEAN"], ["INTEGER", "INTEGER"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["b", "B"]>>, "BOOLEAN")
add_query("C", "BOOLEAN", <<["A", "INTEGER"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "c"]>>, "D")
add_call_chain(<<C,B,c,A,c>>)
add_call_chain(<<c,b,A,C,B,c>>)
add_command("D", "C", <<["c", "INTEGER"], ["D", "BOOLEAN"]>>)
add_class(C)
add_call_chain(<<D>>)
add_attribute("B", "B", "C")
add_call_chain(<<C,BOOLEAN,A>>)
logical_negation
add_command("B", "D", <<["d", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["D", "b"], ["c", "d"], ["A", "BOOLEAN"]>>)
add_call_chain(<<b,B,c>>)
int_value (42)
multiplication
conjunction
int_value (29)
multiplication
numerical_negation
int_value (47)
add_command("C", "C", <<["A", "A"], ["B", "D"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "INTEGER"]>>)
logical_negation
add_call_chain(<<a,d,d,d,INTEGER,D>>)
int_value (15)
add_command("C", "b", <<["D", "INTEGER"], ["B", "B"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "C"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["d", "C"]>>)
add_command("b", "B", <<["A", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "c"], ["d", "INTEGER"], ["c", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["b", "INTEGER"], ["a", "INTEGER"]>>)
add_query("a", "D", <<["B", "BOOLEAN"], ["B", "INTEGER"], ["C", "B"]>>, "c")
add_command("D", "B", <<["d", "BOOLEAN"], ["b", "INTEGER"], ["b", "BOOLEAN"], ["B", "d"], ["C", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "e"]>>)
add_query("e", "C", <<["INTEGER", "BOOLEAN"], ["D", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["C", "b"], ["e", "A"], ["b", "INTEGER"], ["A", "BOOLEAN"]>>, "a")
add_query("a", "C", <<["INTEGER", "A"], ["B", "BOOLEAN"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>, "C")
add_attribute("A", "A", "INTEGER")
bool_value (false)
bool_value (true)
add_call_chain(<<D,D,e,D>>)
add_query("c", "A", <<["d", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["a", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "INTEGER"], ["C", "INTEGER"], ["B", "b"], ["A", "BOOLEAN"], ["a", "a"]>>, "b")
generate_java_code
type_check
int_value (29)
type_check
add_attribute("C", "C", "INTEGER")
quotient
add_attribute("b", "B", "BOOLEAN")
numerical_negation
logical_negation
logical_negation
addition
int_value (14)
numerical_negation
bool_value (false)
add_call_chain(<<C>>)
logical_negation
bool_value (false)
generate_java_code
logical_negation
conjunction
int_value (48)
disjunction
add_class(a)
numerical_negation
less_than
add_query("C", "D", <<["A", "INTEGER"], ["INTEGER", "d"], ["b", "INTEGER"]>>, "e")
int_value (22)
bool_value (true)
add_query("a", "b", <<["C", "INTEGER"], ["C", "c"], ["A", "INTEGER"], ["D", "BOOLEAN"]>>, "D")
add_call_chain(<<A>>)
add_attribute("C", "INTEGER", "INTEGER")
logical_negation
conjunction
add_call_chain(<<BOOLEAN>>)
logical_negation
add_attribute("D", "d", "a")
add_call_chain(<<B,a,BOOLEAN,C>>)
less_than
type_check
add_query("b", "A", <<["B", "B"], ["B", "d"]>>, "d")
int_value (42)
add_class(d)
int_value (27)
disjunction
add_call_chain(<<D,a,b,D,b,D,c>>)
add_call_chain(<<A,b>>)
numerical_negation
add_call_chain(<<A,A,d,a>>)
add_query("C", "C", <<["B", "INTEGER"], ["c", "INTEGER"], ["c", "BOOLEAN"]>>, "b")
add_query("e", "e", <<["b", "INTEGER"], ["e", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "D"], ["D", "INTEGER"], ["D", "INTEGER"]>>, "D")
bool_value (true)
bool_value (false)
add_command("INTEGER", "d", <<["e", "BOOLEAN"], ["c", "a"], ["b", "BOOLEAN"], ["d", "A"], ["B", "INTEGER"], ["B", "INTEGER"]>>)
conjunction
add_query("D", "D", <<["d", "BOOLEAN"], ["c", "BOOLEAN"], ["c", "D"], ["INTEGER", "INTEGER"], ["a", "BOOLEAN"], ["INTEGER", "INTEGER"], ["e", "INTEGER"], ["D", "BOOLEAN"]>>, "B")
numerical_negation
addition
bool_value (true)
int_value (4)
numerical_negation
quotient
generate_java_code
add_attribute("B", "B", "BOOLEAN")
add_call_chain(<<B,b,b,e,A,d>>)
add_command("C", "A", <<["a", "c"], ["b", "BOOLEAN"]>>)
type_check
type_check
generate_java_code
bool_value (true)
add_command("c", "B", <<["B", "A"], ["e", "D"], ["a", "BOOLEAN"], ["d", "BOOLEAN"], ["e", "INTEGER"]>>)
generate_java_code
add_command("D", "c", <<["b", "b"], ["e", "INTEGER"], ["C", "A"], ["B", "INTEGER"], ["D", "a"]>>)
add_query("B", "d", <<["BOOLEAN", "BOOLEAN"]>>, "c")
numerical_negation
numerical_negation
int_value (22)
add_call_chain(<<b,c,e,e,e,a,B,A,C>>)
equals
add_call_chain(<<d,c,a>>)
add_command("e", "B", <<["B", "BOOLEAN"], ["B", "D"], ["INTEGER", "D"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["b", "INTEGER"], ["b", "B"], ["a", "INTEGER"]>>)
logical_negation
add_call_chain(<<C,d,b,A,e,B,INTEGER,a>>)
add_query("D", "c", <<["INTEGER", "b"], ["d", "INTEGER"]>>, "b")
add_query("D", "D", <<["D", "BOOLEAN"], ["B", "INTEGER"], ["d", "INTEGER"], ["D", "INTEGER"], ["d", "A"], ["C", "INTEGER"], ["B", "BOOLEAN"]>>, "C")
logical_negation
numerical_negation
multiplication
logical_negation
add_call_chain(<<a,A,D,B,e>>)
add_call_chain(<<b,c,C,BOOLEAN,C,C,b,BOOLEAN>>)
logical_negation
greater_than
disjunction
add_command("C", "C", <<["A", "INTEGER"]>>)
add_call_chain(<<BOOLEAN,c,c>>)
bool_value (true)
add_call_chain(<<B>>)
add_call_chain(<<a,C,INTEGER,a>>)
type_check
type_check
less_than
bool_value (false)
int_value (14)
add_call_chain(<<C,c,d,C,B,A,B,A,A>>)
add_call_chain(<<B>>)
numerical_negation
add_call_chain(<<e,D,d,D>>)
add_command("b", "D", <<["A", "C"], ["b", "a"]>>)
int_value (42)
type_check
numerical_negation
add_attribute("c", "C", "BOOLEAN")
greater_than
generate_java_code
generate_java_code
add_class(C)
logical_negation
int_value (41)
add_call_chain(<<A,C,c,b,c,D>>)
add_query("c", "d", <<["b", "INTEGER"], ["d", "BOOLEAN"], ["A", "a"]>>, "e")
generate_java_code
add_command("a", "D", <<["c", "BOOLEAN"], ["c", "INTEGER"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "INTEGER"], ["C", "INTEGER"], ["BOOLEAN", "C"], ["D", "D"], ["A", "INTEGER"]>>)
add_query("D", "c", <<["c", "BOOLEAN"], ["BOOLEAN", "B"], ["b", "BOOLEAN"]>>, "a")
generate_java_code
greater_than
logical_negation
add_call_chain(<<A,A,B>>)
add_query("C", "BOOLEAN", <<["A", "D"], ["C", "INTEGER"], ["e", "INTEGER"], ["A", "INTEGER"]>>, "D")
add_call_chain(<<e,B,c,INTEGER,C,B,e>>)
int_value (19)
add_class(e)
numerical_negation
bool_value (true)
bool_value (false)
bool_value (false)
numerical_negation
add_command("B", "c", <<["B", "BOOLEAN"], ["b", "INTEGER"], ["D", "BOOLEAN"]>>)
subtraction
add_call_chain(<<INTEGER,d>>)
