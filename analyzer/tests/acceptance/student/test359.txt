greater_than
add_attribute("D", "C", "INTEGER")
addition
type_check
add_call_chain(<<B,B,C,A,e>>)
add_command("C", "A", <<["B", "e"], ["e", "d"], ["d", "BOOLEAN"]>>)
bool_value (true)
multiplication
add_query("a", "C", <<["C", "a"], ["A", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>, "BOOLEAN")
logical_negation
bool_value (true)
add_class(d)
add_command("A", "a", <<["a", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "a"], ["A", "b"], ["INTEGER", "BOOLEAN"], ["D", "BOOLEAN"]>>)
add_call_chain(<<INTEGER,A,B,B,D,D,b>>)
add_attribute("A", "B", "INTEGER")
add_query("d", "b", <<["d", "BOOLEAN"], ["C", "a"], ["d", "C"], ["A", "B"], ["D", "b"], ["C", "INTEGER"]>>, "D")
add_call_chain(<<a,d,INTEGER,C,d,a>>)
disjunction
logical_negation
greater_than
add_call_chain(<<c,a,a,c,a>>)
add_attribute("A", "INTEGER", "INTEGER")
add_command("a", "b", <<["e", "BOOLEAN"], ["B", "C"], ["C", "INTEGER"], ["d", "B"], ["B", "INTEGER"]>>)
bool_value (false)
add_call_chain(<<D,a,c,A,C,b,c,d>>)
add_call_chain(<<d,BOOLEAN,B,D,D,BOOLEAN,D,D>>)
int_value (18)
generate_java_code
add_command("D", "B", <<["B", "INTEGER"]>>)
add_attribute("a", "D", "INTEGER")
add_attribute("B", "A", "BOOLEAN")
add_query("INTEGER", "D", <<["d", "C"], ["b", "e"], ["e", "D"], ["INTEGER", "B"], ["b", "BOOLEAN"]>>, "B")
add_command("e", "c", <<["a", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["B", "b"], ["BOOLEAN", "C"], ["c", "INTEGER"], ["BOOLEAN", "INTEGER"]>>)
add_query("d", "a", <<["B", "A"], ["b", "c"], ["e", "INTEGER"], ["d", "b"]>>, "B")
add_class(C)
add_class(BOOLEAN)
bool_value (false)
add_command("C", "c", <<["d", "INTEGER"], ["B", "b"], ["B", "BOOLEAN"], ["D", "INTEGER"], ["a", "B"]>>)
add_command("c", "B", <<["C", "BOOLEAN"], ["D", "INTEGER"]>>)
add_command("e", "a", <<["b", "BOOLEAN"]>>)
add_call_chain(<<d,BOOLEAN,C,b,INTEGER,e>>)
add_call_chain(<<A>>)
add_command("b", "a", <<["D", "a"], ["D", "INTEGER"], ["B", "B"], ["d", "BOOLEAN"], ["D", "a"], ["A", "BOOLEAN"], ["A", "INTEGER"], ["d", "BOOLEAN"]>>)
add_attribute("c", "b", "INTEGER")
equals
add_attribute("C", "C", "d")
add_call_chain(<<B,D,B,d,C,D,B>>)
int_value (48)
int_value (15)
conjunction
add_call_chain(<<c,A,C,b,A,D,a,a,C>>)
logical_negation
disjunction
add_attribute("c", "B", "c")
generate_java_code
conjunction
disjunction
add_attribute("b", "A", "BOOLEAN")
bool_value (true)
add_attribute("C", "C", "BOOLEAN")
numerical_negation
add_attribute("C", "D", "BOOLEAN")
add_attribute("B", "A", "INTEGER")
int_value (11)
type_check
disjunction
bool_value (false)
add_query("BOOLEAN", "C", <<["C", "INTEGER"], ["a", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["D", "c"], ["b", "INTEGER"], ["A", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "D"]>>, "a")
disjunction
numerical_negation
modulo
generate_java_code
add_attribute("B", "D", "BOOLEAN")
add_call_chain(<<B>>)
add_call_chain(<<C,D,d,b,A,e,e>>)
add_call_chain(<<D,A,e,b,D,a>>)
add_query("d", "e", <<["C", "e"], ["e", "INTEGER"], ["A", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>, "B")
add_query("b", "D", <<["e", "BOOLEAN"], ["e", "INTEGER"], ["BOOLEAN", "INTEGER"], ["BOOLEAN", "b"], ["B", "B"], ["B", "D"], ["a", "b"], ["B", "d"]>>, "D")
add_call_chain(<<B,d,C,D,d>>)
int_value (31)
conjunction
add_call_chain(<<b,D,e,INTEGER,D,C>>)
add_call_chain(<<a>>)
add_call_chain(<<C,A,d>>)
numerical_negation
add_attribute("A", "C", "INTEGER")
add_attribute("D", "B", "BOOLEAN")
disjunction
numerical_negation
int_value (10)
disjunction
add_call_chain(<<c,d,c,INTEGER,b,e>>)
logical_negation
logical_negation
add_query("D", "c", <<["e", "INTEGER"], ["B", "c"], ["D", "INTEGER"]>>, "b")
add_command("A", "INTEGER", <<["a", "BOOLEAN"]>>)
subtraction
add_call_chain(<<B,c>>)
add_query("C", "a", <<["A", "BOOLEAN"], ["C", "d"], ["INTEGER", "BOOLEAN"], ["a", "b"], ["d", "INTEGER"]>>, "BOOLEAN")
add_call_chain(<<b,b,INTEGER,D,INTEGER,A>>)
add_attribute("B", "D", "BOOLEAN")
int_value (32)
generate_java_code
add_attribute("D", "a", "d")
bool_value (false)
less_than
add_command("c", "BOOLEAN", <<["C", "BOOLEAN"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["A", "D"], ["d", "INTEGER"], ["D", "B"], ["B", "BOOLEAN"], ["C", "INTEGER"], ["D", "d"]>>)
type_check
bool_value (true)
add_command("A", "a", <<["C", "BOOLEAN"], ["A", "INTEGER"], ["D", "INTEGER"], ["C", "B"], ["C", "A"], ["b", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["A", "INTEGER"], ["A", "BOOLEAN"]>>)
disjunction
add_attribute("b", "A", "INTEGER")
add_query("c", "BOOLEAN", <<["D", "BOOLEAN"], ["b", "c"], ["C", "INTEGER"], ["C", "c"], ["BOOLEAN", "BOOLEAN"], ["c", "INTEGER"], ["e", "b"], ["C", "INTEGER"], ["e", "INTEGER"]>>, "a")
type_check
bool_value (false)
add_class(B)
add_attribute("A", "B", "INTEGER")
add_class(d)
add_command("b", "C", <<["e", "C"], ["e", "d"], ["D", "INTEGER"], ["B", "INTEGER"]>>)
bool_value (true)
add_command("A", "A", <<["a", "INTEGER"], ["c", "c"], ["BOOLEAN", "BOOLEAN"], ["c", "INTEGER"], ["A", "BOOLEAN"]>>)
add_attribute("e", "a", "INTEGER")
add_class(B)
logical_negation
bool_value (true)
add_attribute("e", "C", "b")
add_attribute("a", "C", "BOOLEAN")
numerical_negation
generate_java_code
add_query("BOOLEAN", "c", <<["A", "B"], ["a", "BOOLEAN"], ["A", "INTEGER"], ["A", "BOOLEAN"], ["d", "BOOLEAN"], ["d", "INTEGER"], ["a", "A"], ["D", "BOOLEAN"], ["A", "INTEGER"]>>, "B")
add_class(INTEGER)
logical_negation
generate_java_code
bool_value (true)
add_query("c", "b", <<["e", "B"], ["e", "INTEGER"], ["A", "BOOLEAN"]>>, "e")
type_check
add_attribute("b", "D", "d")
add_attribute("BOOLEAN", "c", "a")
add_command("C", "C", <<["C", "BOOLEAN"], ["A", "INTEGER"], ["d", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["B", "INTEGER"], ["a", "INTEGER"], ["c", "INTEGER"], ["C", "C"]>>)
add_attribute("e", "c", "b")
add_command("a", "INTEGER", <<["d", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["e", "BOOLEAN"], ["INTEGER", "a"], ["A", "INTEGER"], ["C", "BOOLEAN"]>>)
add_attribute("D", "C", "B")
add_call_chain(<<c,B,INTEGER,A,A,D,e,INTEGER>>)
generate_java_code
add_command("C", "B", <<["BOOLEAN", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "INTEGER"], ["INTEGER", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
numerical_negation
add_call_chain(<<A,D,C,D,c,INTEGER,D,b>>)
add_call_chain(<<c,A,C,a,b,b>>)
multiplication
int_value (24)
logical_negation
add_query("D", "INTEGER", <<["c", "INTEGER"], ["B", "BOOLEAN"]>>, "e")
add_query("A", "b", <<["INTEGER", "D"]>>, "B")
add_query("c", "BOOLEAN", <<["INTEGER", "INTEGER"], ["B", "BOOLEAN"]>>, "d")
add_attribute("e", "d", "INTEGER")
add_command("A", "b", <<["C", "BOOLEAN"], ["A", "c"], ["C", "D"], ["d", "INTEGER"], ["C", "INTEGER"], ["e", "BOOLEAN"], ["B", "A"], ["c", "INTEGER"]>>)
int_value (30)
logical_negation
less_than
int_value (32)
conjunction
add_command("c", "c", <<["b", "BOOLEAN"], ["e", "BOOLEAN"]>>)
int_value (9)
add_query("B", "C", <<["B", "INTEGER"], ["c", "B"], ["e", "INTEGER"], ["C", "INTEGER"], ["C", "d"], ["e", "INTEGER"], ["C", "INTEGER"], ["C", "BOOLEAN"]>>, "e")
add_call_chain(<<B>>)
disjunction
add_attribute("c", "a", "e")
add_call_chain(<<c,a,a,C,D,A,d,a,b>>)
int_value (42)
addition
add_command("a", "B", <<["a", "C"], ["d", "INTEGER"], ["A", "BOOLEAN"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["BOOLEAN", "A"]>>)
modulo
add_class(A)
type_check
int_value (17)
numerical_negation
type_check
add_command("d", "B", <<["b", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "e"], ["d", "BOOLEAN"], ["D", "INTEGER"], ["B", "INTEGER"], ["c", "INTEGER"]>>)
int_value (33)
type_check
int_value (31)
generate_java_code
generate_java_code
add_query("b", "C", <<["B", "INTEGER"], ["b", "INTEGER"], ["d", "INTEGER"]>>, "b")
add_attribute("a", "a", "INTEGER")
int_value (16)
conjunction
add_call_chain(<<INTEGER,b,D,A,B,b,B,a,c>>)
add_call_chain(<<D,INTEGER,B,D,d,d,A>>)
add_call_chain(<<d,e,B,e>>)
equals
int_value (45)
add_command("D", "b", <<["d", "BOOLEAN"], ["B", "INTEGER"], ["C", "INTEGER"], ["A", "INTEGER"], ["e", "INTEGER"], ["a", "INTEGER"], ["c", "INTEGER"], ["e", "INTEGER"], ["d", "INTEGER"]>>)
logical_negation
add_attribute("c", "D", "BOOLEAN")
generate_java_code
greater_than
add_attribute("d", "C", "BOOLEAN")
numerical_negation
generate_java_code
bool_value (false)
