generate_java_code
int_value (16)
int_value (41)
int_value (15)
add_query("INTEGER", "B", <<["a", "C"], ["A", "D"], ["b", "C"], ["A", "BOOLEAN"], ["d", "INTEGER"], ["B", "BOOLEAN"]>>, "b")
bool_value (true)
numerical_negation
multiplication
add_attribute("b", "B", "BOOLEAN")
disjunction
add_attribute("D", "D", "INTEGER")
type_check
addition
int_value (7)
bool_value (false)
add_command("e", "D", <<["A", "c"], ["A", "BOOLEAN"], ["BOOLEAN", "c"]>>)
add_query("b", "A", <<["BOOLEAN", "D"]>>, "b")
add_attribute("a", "b", "BOOLEAN")
add_call_chain(<<d,C,A,a,a,D>>)
disjunction
add_query("D", "c", <<["A", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["B", "INTEGER"], ["b", "BOOLEAN"], ["A", "c"], ["BOOLEAN", "c"], ["c", "BOOLEAN"], ["C", "BOOLEAN"]>>, "D")
add_call_chain(<<b,d>>)
add_call_chain(<<INTEGER>>)
add_call_chain(<<D,B,d,b,c>>)
add_call_chain(<<c,a,D,d,c,D>>)
type_check
add_attribute("b", "D", "INTEGER")
subtraction
int_value (18)
add_query("INTEGER", "d", <<["b", "INTEGER"], ["A", "c"]>>, "BOOLEAN")
add_call_chain(<<a,c,D,e,c,a,b,e>>)
type_check
generate_java_code
generate_java_code
less_than
add_class(INTEGER)
less_than
add_class(e)
add_call_chain(<<d,B,A,B,a,b,D,c,INTEGER>>)
add_attribute("e", "D", "INTEGER")
add_command("c", "A", <<["D", "INTEGER"], ["a", "d"], ["D", "INTEGER"]>>)
conjunction
generate_java_code
add_attribute("a", "d", "INTEGER")
generate_java_code
logical_negation
add_query("a", "C", <<["b", "INTEGER"], ["b", "D"], ["B", "INTEGER"], ["D", "d"]>>, "D")
type_check
bool_value (true)
add_attribute("e", "C", "C")
add_query("c", "A", <<["D", "INTEGER"], ["e", "INTEGER"], ["d", "D"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "BOOLEAN"]>>, "c")
add_class(B)
add_attribute("BOOLEAN", "C", "b")
add_call_chain(<<C,D,d,INTEGER>>)
add_command("d", "d", <<["C", "BOOLEAN"], ["A", "INTEGER"], ["d", "INTEGER"], ["A", "INTEGER"], ["c", "BOOLEAN"]>>)
numerical_negation
add_query("b", "d", <<["C", "BOOLEAN"], ["B", "INTEGER"], ["d", "e"], ["d", "INTEGER"], ["B", "INTEGER"], ["B", "INTEGER"]>>, "a")
numerical_negation
bool_value (true)
add_call_chain(<<b,C,b>>)
bool_value (true)
numerical_negation
generate_java_code
add_attribute("INTEGER", "C", "INTEGER")
logical_negation
add_call_chain(<<A,B,D,c,D,e,BOOLEAN,A,B>>)
type_check
logical_negation
add_call_chain(<<b,B,a,e,a>>)
int_value (41)
add_call_chain(<<BOOLEAN,D,BOOLEAN,INTEGER,a>>)
add_query("INTEGER", "c", <<["a", "c"], ["d", "A"]>>, "C")
add_class(B)
add_attribute("D", "d", "BOOLEAN")
add_call_chain(<<b,B,e>>)
add_call_chain(<<C,d>>)
add_query("d", "A", <<["d", "c"], ["d", "B"], ["a", "INTEGER"], ["a", "B"]>>, "C")
logical_negation
type_check
numerical_negation
generate_java_code
int_value (15)
add_call_chain(<<c,b,a,B,c,a,A,b,INTEGER>>)
conjunction
logical_negation
add_attribute("C", "e", "B")
type_check
add_call_chain(<<d,d,b,C,A,D,d,D,D>>)
numerical_negation
add_call_chain(<<c,d,BOOLEAN,a,C>>)
add_query("A", "C", <<["d", "BOOLEAN"], ["A", "INTEGER"]>>, "INTEGER")
add_call_chain(<<a,D,D>>)
type_check
conjunction
add_command("e", "B", <<["INTEGER", "D"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["INTEGER", "a"], ["a", "INTEGER"], ["b", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "INTEGER"], ["d", "a"]>>)
add_command("d", "A", <<["BOOLEAN", "d"], ["a", "INTEGER"], ["e", "INTEGER"]>>)
type_check
bool_value (false)
type_check
add_query("A", "a", <<["e", "INTEGER"], ["BOOLEAN", "INTEGER"], ["b", "c"], ["c", "INTEGER"], ["c", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["B", "A"]>>, "d")
generate_java_code
add_call_chain(<<D,a,INTEGER,c,d,D,b,d,d>>)
add_call_chain(<<C,b>>)
add_class(C)
add_call_chain(<<e,C,C,a,d,D>>)
add_call_chain(<<B,b,b,a,e,a,D>>)
generate_java_code
add_query("BOOLEAN", "D", <<["B", "a"], ["d", "e"], ["D", "INTEGER"], ["d", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "BOOLEAN"], ["INTEGER", "INTEGER"], ["A", "BOOLEAN"]>>, "C")
equals
add_query("b", "a", <<["d", "a"], ["A", "BOOLEAN"], ["D", "INTEGER"], ["A", "INTEGER"], ["d", "BOOLEAN"], ["e", "BOOLEAN"], ["c", "c"]>>, "B")
add_command("b", "A", <<["d", "BOOLEAN"], ["d", "BOOLEAN"], ["d", "INTEGER"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "e"], ["B", "BOOLEAN"], ["d", "b"]>>)
add_call_chain(<<b,e,d,c,B,b,A,c,c>>)
add_command("B", "b", <<["D", "INTEGER"], ["e", "BOOLEAN"]>>)
bool_value (false)
add_query("C", "b", <<["D", "INTEGER"]>>, "e")
add_command("A", "INTEGER", <<["C", "BOOLEAN"], ["c", "BOOLEAN"], ["BOOLEAN", "c"]>>)
numerical_negation
modulo
bool_value (true)
int_value (47)
numerical_negation
add_command("D", "C", <<["e", "BOOLEAN"], ["B", "B"], ["b", "INTEGER"], ["c", "BOOLEAN"]>>)
add_command("e", "a", <<["e", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["b", "INTEGER"], ["B", "b"], ["D", "BOOLEAN"]>>)
conjunction
add_call_chain(<<b>>)
add_class(C)
modulo
disjunction
int_value (28)
bool_value (true)
add_attribute("D", "BOOLEAN", "BOOLEAN")
add_call_chain(<<A>>)
add_attribute("A", "C", "e")
add_attribute("C", "D", "C")
add_class(c)
int_value (46)
add_class(C)
add_call_chain(<<e,INTEGER>>)
add_call_chain(<<B,INTEGER,c,D>>)
int_value (39)
type_check
add_query("b", "e", <<["B", "INTEGER"], ["D", "A"], ["c", "e"], ["D", "BOOLEAN"], ["INTEGER", "D"], ["INTEGER", "INTEGER"], ["e", "BOOLEAN"], ["a", "BOOLEAN"]>>, "C")
int_value (13)
numerical_negation
generate_java_code
numerical_negation
add_query("BOOLEAN", "A", <<["e", "A"], ["d", "BOOLEAN"]>>, "B")
add_command("c", "C", <<["INTEGER", "INTEGER"], ["B", "d"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["BOOLEAN", "e"]>>)
add_command("b", "B", <<["C", "BOOLEAN"], ["c", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["a", "C"], ["b", "c"], ["BOOLEAN", "INTEGER"]>>)
bool_value (false)
add_command("b", "c", <<["D", "BOOLEAN"], ["A", "INTEGER"], ["B", "INTEGER"], ["b", "INTEGER"], ["A", "INTEGER"]>>)
add_query("D", "B", <<["c", "BOOLEAN"], ["d", "INTEGER"], ["b", "BOOLEAN"], ["c", "BOOLEAN"], ["c", "BOOLEAN"], ["d", "INTEGER"], ["d", "INTEGER"]>>, "D")
conjunction
add_call_chain(<<e,D>>)
numerical_negation
add_query("C", "INTEGER", <<["C", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "BOOLEAN"]>>, "D")
bool_value (false)
add_query("A", "c", <<["B", "b"]>>, "INTEGER")
logical_negation
add_query("A", "C", <<["b", "INTEGER"], ["b", "INTEGER"], ["d", "D"], ["C", "INTEGER"], ["c", "A"], ["C", "A"], ["A", "INTEGER"], ["c", "C"]>>, "c")
logical_negation
disjunction
int_value (8)
equals
modulo
subtraction
add_attribute("a", "C", "B")
add_call_chain(<<C,A,D>>)
add_query("INTEGER", "d", <<["B", "A"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["D", "a"], ["B", "INTEGER"], ["b", "BOOLEAN"], ["D", "A"]>>, "a")
add_call_chain(<<A,a,C,B,D,D,A,e,C>>)
bool_value (false)
add_call_chain(<<e,c,BOOLEAN>>)
add_command("BOOLEAN", "B", <<["d", "INTEGER"], ["D", "INTEGER"], ["D", "b"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["D", "A"], ["D", "BOOLEAN"], ["b", "INTEGER"], ["b", "c"]>>)
type_check
add_query("BOOLEAN", "c", <<["B", "BOOLEAN"], ["e", "B"]>>, "d")
add_attribute("c", "B", "c")
conjunction
logical_negation
logical_negation
add_query("A", "C", <<["INTEGER", "BOOLEAN"], ["INTEGER", "d"], ["a", "BOOLEAN"], ["d", "d"], ["a", "INTEGER"]>>, "C")
add_call_chain(<<c,b,A,C,e>>)
add_call_chain(<<d,b>>)
add_attribute("B", "e", "d")
bool_value (true)
bool_value (true)
add_attribute("C", "e", "INTEGER")
bool_value (false)
add_call_chain(<<d,INTEGER,b>>)
add_attribute("c", "a", "BOOLEAN")
conjunction
add_command("c", "D", <<["B", "BOOLEAN"], ["B", "C"], ["d", "C"], ["C", "INTEGER"], ["b", "INTEGER"]>>)
add_query("c", "D", <<["e", "INTEGER"], ["a", "BOOLEAN"], ["b", "INTEGER"], ["B", "c"], ["D", "INTEGER"]>>, "A")
add_attribute("A", "A", "INTEGER")
numerical_negation
bool_value (true)
logical_negation
generate_java_code
add_attribute("b", "C", "BOOLEAN")
add_call_chain(<<b,BOOLEAN,D,A,C,e>>)
add_command("INTEGER", "D", <<["B", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["INTEGER", "INTEGER"], ["B", "INTEGER"], ["a", "INTEGER"], ["D", "b"]>>)
generate_java_code
add_query("c", "BOOLEAN", <<["C", "b"], ["d", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["e", "INTEGER"]>>, "A")
bool_value (false)
logical_negation
add_query("d", "a", <<["C", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "BOOLEAN"]>>, "C")
int_value (43)
greater_than
add_call_chain(<<D,d,a>>)
numerical_negation
numerical_negation
subtraction
add_attribute("c", "INTEGER", "BOOLEAN")
int_value (40)
bool_value (true)
add_query("b", "B", <<["C", "D"], ["BOOLEAN", "A"], ["D", "INTEGER"], ["C", "a"], ["c", "BOOLEAN"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["INTEGER", "INTEGER"]>>, "A")
add_command("C", "A", <<["b", "e"], ["BOOLEAN", "e"]>>)
int_value (48)
int_value (40)
add_attribute("c", "A", "BOOLEAN")
add_class(e)
add_command("d", "B", <<["C", "D"]>>)
int_value (28)
logical_negation
logical_negation
bool_value (true)
type_check
int_value (18)
int_value (34)
bool_value (false)
multiplication
logical_negation
add_call_chain(<<C,C,C,b>>)
add_class(INTEGER)
add_command("B", "b", <<["INTEGER", "A"], ["c", "INTEGER"]>>)
disjunction
add_attribute("BOOLEAN", "b", "c")
less_than
bool_value (true)
int_value (15)
int_value (43)
bool_value (true)
add_call_chain(<<BOOLEAN,D,b,D,INTEGER,A,b,a,D>>)
type_check
add_command("A", "C", <<["e", "C"]>>)
generate_java_code
add_query("D", "a", <<["d", "INTEGER"], ["e", "BOOLEAN"], ["d", "BOOLEAN"], ["b", "BOOLEAN"]>>, "A")
type_check
equals
numerical_negation
subtraction
add_query("d", "B", <<["a", "BOOLEAN"], ["a", "INTEGER"], ["b", "INTEGER"], ["A", "INTEGER"], ["B", "D"], ["a", "BOOLEAN"], ["D", "BOOLEAN"]>>, "b")
add_command("a", "A", <<["BOOLEAN", "BOOLEAN"], ["B", "INTEGER"], ["a", "C"], ["e", "INTEGER"]>>)
multiplication
equals
add_query("D", "b", <<["b", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["d", "INTEGER"], ["e", "BOOLEAN"]>>, "B")
add_call_chain(<<b,B,B,A,B>>)
type_check
add_query("D", "a", <<["BOOLEAN", "INTEGER"], ["e", "INTEGER"], ["C", "BOOLEAN"], ["e", "BOOLEAN"], ["a", "INTEGER"]>>, "e")
add_command("B", "b", <<["A", "INTEGER"], ["B", "INTEGER"], ["C", "INTEGER"]>>)
add_query("a", "A", <<["e", "BOOLEAN"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "c"], ["a", "d"], ["c", "INTEGER"], ["D", "INTEGER"], ["A", "INTEGER"]>>, "b")
add_query("a", "A", <<["INTEGER", "INTEGER"], ["b", "BOOLEAN"], ["c", "INTEGER"], ["D", "INTEGER"], ["D", "A"]>>, "B")
add_command("A", "D", <<["B", "c"], ["a", "BOOLEAN"]>>)
add_call_chain(<<e,b,B,b,a,a>>)
add_class(BOOLEAN)
add_call_chain(<<B>>)
add_attribute("b", "c", "BOOLEAN")
int_value (35)
add_command("d", "d", <<["a", "BOOLEAN"], ["B", "INTEGER"], ["e", "a"], ["INTEGER", "INTEGER"], ["A", "BOOLEAN"], ["e", "BOOLEAN"]>>)
logical_negation
add_attribute("a", "B", "INTEGER")
add_command("c", "e", <<["c", "INTEGER"], ["a", "BOOLEAN"]>>)
add_call_chain(<<C,e,B,B,C,b,C,d>>)
