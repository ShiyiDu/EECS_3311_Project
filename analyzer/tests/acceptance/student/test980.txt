add_query("BOOLEAN", "B", <<["B", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "a"], ["C", "BOOLEAN"], ["INTEGER", "D"], ["a", "BOOLEAN"]>>, "e")
add_class(d)
bool_value (true)
add_query("B", "c", <<["a", "BOOLEAN"], ["A", "C"], ["e", "A"], ["a", "INTEGER"], ["A", "INTEGER"]>>, "e")
bool_value (false)
type_check
add_call_chain(<<B,D,b,B,c>>)
add_class(b)
add_call_chain(<<A,b,INTEGER,D,c,d,c>>)
bool_value (false)
type_check
add_attribute("b", "a", "A")
add_query("D", "a", <<["INTEGER", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "INTEGER"], ["C", "BOOLEAN"]>>, "C")
add_attribute("B", "c", "d")
add_command("A", "C", <<["a", "INTEGER"], ["B", "D"], ["b", "A"], ["b", "a"], ["B", "BOOLEAN"], ["b", "b"]>>)
equals
conjunction
conjunction
add_command("C", "C", <<["c", "BOOLEAN"], ["d", "a"], ["D", "D"], ["BOOLEAN", "BOOLEAN"], ["b", "INTEGER"], ["C", "a"], ["D", "BOOLEAN"], ["b", "INTEGER"]>>)
generate_java_code
int_value (41)
add_attribute("INTEGER", "D", "BOOLEAN")
addition
add_query("d", "BOOLEAN", <<["D", "INTEGER"], ["b", "e"], ["D", "c"], ["D", "INTEGER"], ["BOOLEAN", "d"], ["B", "INTEGER"]>>, "B")
bool_value (true)
type_check
type_check
add_class(c)
add_class(d)
conjunction
numerical_negation
type_check
bool_value (false)
int_value (14)
int_value (34)
logical_negation
int_value (15)
add_command("a", "c", <<["D", "INTEGER"], ["C", "BOOLEAN"], ["d", "INTEGER"], ["C", "INTEGER"], ["e", "INTEGER"]>>)
add_attribute("d", "C", "BOOLEAN")
add_command("a", "D", <<["B", "d"], ["a", "INTEGER"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["e", "C"], ["d", "INTEGER"]>>)
conjunction
add_query("B", "d", <<["C", "BOOLEAN"], ["d", "b"], ["c", "BOOLEAN"], ["C", "INTEGER"], ["e", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "D"], ["D", "INTEGER"], ["e", "INTEGER"]>>, "B")
add_call_chain(<<A,C,B,e,c,B>>)
add_command("C", "D", <<["c", "BOOLEAN"]>>)
add_attribute("e", "A", "BOOLEAN")
add_query("D", "B", <<["B", "B"]>>, "a")
add_command("A", "INTEGER", <<["d", "C"]>>)
int_value (24)
bool_value (false)
add_call_chain(<<D,e,b,BOOLEAN>>)
add_command("c", "d", <<["b", "a"], ["C", "INTEGER"], ["C", "INTEGER"], ["D", "B"], ["A", "d"], ["C", "BOOLEAN"], ["b", "e"], ["e", "BOOLEAN"]>>)
add_call_chain(<<e,e,c,D,e>>)
bool_value (true)
numerical_negation
int_value (11)
int_value (8)
add_command("B", "A", <<["a", "INTEGER"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["b", "INTEGER"]>>)
add_attribute("INTEGER", "a", "INTEGER")
disjunction
add_query("D", "c", <<["D", "BOOLEAN"], ["c", "e"], ["a", "a"]>>, "b")
type_check
add_attribute("a", "C", "INTEGER")
add_command("b", "a", <<["d", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "A"], ["BOOLEAN", "a"], ["e", "BOOLEAN"], ["B", "A"], ["D", "B"], ["D", "e"], ["BOOLEAN", "BOOLEAN"]>>)
numerical_negation
add_query("D", "B", <<["e", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "BOOLEAN"], ["a", "INTEGER"], ["c", "c"]>>, "B")
greater_than
add_command("C", "B", <<["c", "BOOLEAN"]>>)
addition
add_call_chain(<<B,A,d,a>>)
type_check
int_value (44)
add_command("BOOLEAN", "B", <<["B", "INTEGER"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["D", "A"], ["e", "BOOLEAN"], ["e", "BOOLEAN"], ["d", "e"]>>)
type_check
add_command("a", "d", <<["D", "BOOLEAN"], ["a", "C"], ["d", "BOOLEAN"], ["e", "BOOLEAN"], ["INTEGER", "INTEGER"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["C", "INTEGER"]>>)
add_query("A", "A", <<["B", "BOOLEAN"], ["INTEGER", "INTEGER"], ["e", "INTEGER"], ["A", "INTEGER"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["a", "INTEGER"]>>, "D")
logical_negation
numerical_negation
bool_value (true)
add_query("c", "A", <<["BOOLEAN", "INTEGER"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["C", "INTEGER"]>>, "B")
add_call_chain(<<b,d>>)
add_call_chain(<<b,b,D,D,A>>)
int_value (7)
add_attribute("B", "c", "INTEGER")
disjunction
int_value (7)
add_call_chain(<<B,d,C,d>>)
numerical_negation
add_call_chain(<<INTEGER,A,C,c,a>>)
add_query("b", "D", <<["BOOLEAN", "INTEGER"], ["INTEGER", "INTEGER"], ["a", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "b"], ["C", "BOOLEAN"]>>, "a")
numerical_negation
int_value (15)
add_query("a", "b", <<["b", "b"], ["A", "INTEGER"], ["B", "INTEGER"], ["B", "B"], ["e", "BOOLEAN"], ["b", "D"], ["B", "INTEGER"], ["b", "INTEGER"]>>, "BOOLEAN")
bool_value (true)
add_attribute("D", "b", "BOOLEAN")
greater_than
add_query("b", "e", <<["e", "C"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["BOOLEAN", "a"]>>, "A")
add_query("BOOLEAN", "D", <<["b", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "INTEGER"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "A"]>>, "A")
equals
add_class(B)
int_value (22)
int_value (13)
add_attribute("A", "a", "INTEGER")
equals
add_class(b)
add_call_chain(<<D,B,A,C,INTEGER>>)
add_call_chain(<<A,e,b,B>>)
conjunction
logical_negation
int_value (49)
add_attribute("c", "b", "INTEGER")
multiplication
add_command("c", "B", <<["d", "INTEGER"], ["C", "BOOLEAN"]>>)
add_call_chain(<<e,INTEGER,d>>)
add_class(a)
conjunction
bool_value (true)
generate_java_code
disjunction
bool_value (true)
logical_negation
add_query("e", "b", <<["e", "d"], ["a", "BOOLEAN"], ["c", "INTEGER"], ["C", "BOOLEAN"], ["B", "INTEGER"], ["e", "a"]>>, "c")
addition
add_class(B)
add_query("INTEGER", "C", <<["D", "INTEGER"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "D"], ["D", "BOOLEAN"]>>, "e")
add_call_chain(<<D,D,B,C,A,b,B,A>>)
subtraction
add_call_chain(<<c,b,e,b>>)
type_check
bool_value (false)
add_command("BOOLEAN", "BOOLEAN", <<["e", "INTEGER"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["b", "a"], ["C", "D"], ["B", "C"], ["A", "D"], ["a", "INTEGER"], ["c", "B"]>>)
add_call_chain(<<e>>)
logical_negation
int_value (48)
bool_value (true)
generate_java_code
bool_value (true)
greater_than
add_attribute("e", "a", "INTEGER")
add_query("a", "B", <<["A", "INTEGER"]>>, "e")
generate_java_code
add_attribute("b", "e", "INTEGER")
logical_negation
add_command("D", "e", <<["a", "INTEGER"], ["a", "D"], ["c", "C"], ["INTEGER", "INTEGER"], ["INTEGER", "c"], ["d", "BOOLEAN"], ["B", "INTEGER"], ["c", "BOOLEAN"]>>)
add_call_chain(<<B,INTEGER,C,b>>)
conjunction
add_call_chain(<<d>>)
add_query("d", "INTEGER", <<["c", "INTEGER"], ["d", "D"]>>, "BOOLEAN")
add_query("a", "D", <<["c", "BOOLEAN"], ["a", "INTEGER"], ["a", "BOOLEAN"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["e", "INTEGER"], ["e", "BOOLEAN"], ["e", "INTEGER"]>>, "A")
int_value (46)
add_attribute("A", "D", "BOOLEAN")
add_command("C", "D", <<["A", "c"], ["D", "C"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "INTEGER"], ["d", "d"]>>)
add_query("e", "a", <<["INTEGER", "c"], ["a", "d"]>>, "C")
add_call_chain(<<d,A,B,a,a>>)
add_command("D", "e", <<["C", "INTEGER"], ["A", "INTEGER"], ["B", "BOOLEAN"]>>)
add_call_chain(<<B,b,B>>)
type_check
add_call_chain(<<c,A,B,D,e,b>>)
numerical_negation
generate_java_code
add_attribute("a", "B", "D")
add_command("a", "b", <<["a", "BOOLEAN"], ["BOOLEAN", "e"], ["a", "BOOLEAN"], ["e", "INTEGER"], ["B", "d"], ["b", "e"], ["C", "INTEGER"], ["c", "INTEGER"]>>)
addition
subtraction
add_command("d", "B", <<["b", "A"], ["b", "INTEGER"], ["A", "INTEGER"], ["B", "INTEGER"], ["B", "b"], ["e", "D"]>>)
add_query("C", "C", <<["a", "INTEGER"], ["D", "a"], ["D", "INTEGER"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["BOOLEAN", "d"]>>, "B")
add_attribute("a", "b", "INTEGER")
add_attribute("INTEGER", "b", "BOOLEAN")
type_check
multiplication
add_command("d", "e", <<["INTEGER", "BOOLEAN"], ["D", "BOOLEAN"]>>)
numerical_negation
add_attribute("d", "c", "BOOLEAN")
add_query("a", "B", <<["D", "e"], ["C", "D"], ["C", "INTEGER"], ["a", "INTEGER"], ["B", "INTEGER"], ["c", "a"], ["B", "A"], ["c", "INTEGER"], ["B", "b"]>>, "a")
add_call_chain(<<C,b,d,e,b,A,e,D,b>>)
numerical_negation
add_call_chain(<<b,e,BOOLEAN,B,d,C,a,e,c>>)
bool_value (false)
greater_than
add_call_chain(<<C,A,BOOLEAN,D>>)
add_call_chain(<<C,b,d,a>>)
int_value (43)
add_command("C", "BOOLEAN", <<["INTEGER", "D"], ["d", "B"], ["A", "BOOLEAN"], ["D", "INTEGER"], ["b", "BOOLEAN"], ["e", "BOOLEAN"]>>)
bool_value (false)
add_attribute("e", "B", "INTEGER")
type_check
add_call_chain(<<b,A,e>>)
add_command("B", "b", <<["A", "INTEGER"], ["C", "INTEGER"], ["B", "C"]>>)
add_class(b)
add_attribute("a", "A", "A")
bool_value (true)
addition
add_call_chain(<<c,B,A,D,d,e,INTEGER,b,b>>)
type_check
bool_value (false)
generate_java_code
equals
add_query("e", "a", <<["e", "INTEGER"], ["A", "INTEGER"], ["b", "BOOLEAN"], ["b", "BOOLEAN"], ["e", "INTEGER"], ["D", "A"], ["a", "BOOLEAN"], ["D", "A"]>>, "d")
add_class(D)
type_check
type_check
add_call_chain(<<e,C>>)
add_command("d", "b", <<["d", "BOOLEAN"], ["B", "d"]>>)
quotient
add_call_chain(<<B,B,e,e,d,C,C,D,a>>)
add_command("e", "a", <<["D", "BOOLEAN"], ["B", "D"]>>)
add_class(a)
type_check
conjunction
add_call_chain(<<a,D,b,b,d,C,a,A>>)
numerical_negation
generate_java_code
bool_value (false)
type_check
numerical_negation
type_check
numerical_negation
add_attribute("C", "C", "C")
add_attribute("e", "c", "INTEGER")
int_value (2)
numerical_negation
add_attribute("d", "b", "d")
add_call_chain(<<D>>)
add_query("a", "D", <<["c", "BOOLEAN"], ["d", "B"]>>, "C")
numerical_negation
add_command("INTEGER", "e", <<["A", "BOOLEAN"], ["e", "BOOLEAN"]>>)
logical_negation
add_attribute("C", "D", "INTEGER")
add_call_chain(<<D,INTEGER,b,BOOLEAN,A,a>>)
numerical_negation
add_call_chain(<<a,C,A,B>>)
add_attribute("D", "b", "a")
multiplication
add_command("D", "e", <<["c", "INTEGER"], ["c", "INTEGER"], ["B", "BOOLEAN"]>>)
logical_negation
add_class(A)
add_attribute("C", "A", "INTEGER")
add_call_chain(<<d,d,a,D,d,INTEGER,a>>)
add_call_chain(<<e,B,b,B,a,b,INTEGER>>)
add_command("C", "D", <<["B", "INTEGER"], ["D", "INTEGER"], ["d", "A"], ["a", "C"], ["e", "BOOLEAN"], ["b", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>)
bool_value (true)
add_query("a", "D", <<["c", "b"], ["A", "BOOLEAN"], ["INTEGER", "d"], ["B", "INTEGER"]>>, "e")
generate_java_code
add_command("d", "C", <<["D", "BOOLEAN"], ["INTEGER", "A"], ["c", "INTEGER"], ["b", "INTEGER"], ["A", "c"], ["C", "D"], ["B", "INTEGER"], ["c", "c"], ["c", "INTEGER"]>>)
add_call_chain(<<C,A,BOOLEAN,e,d>>)
generate_java_code
bool_value (true)
type_check
conjunction
add_attribute("d", "D", "INTEGER")
