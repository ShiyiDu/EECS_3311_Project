add_command("B", "C", <<["D", "BOOLEAN"], ["b", "C"], ["B", "D"], ["a", "INTEGER"]>>)
add_command("c", "d", <<["e", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "e"], ["B", "BOOLEAN"], ["C", "D"]>>)
add_call_chain(<<INTEGER,d,B,A,d,INTEGER,D,e>>)
add_command("INTEGER", "BOOLEAN", <<["B", "INTEGER"], ["D", "INTEGER"], ["d", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "INTEGER"], ["B", "BOOLEAN"], ["A", "C"]>>)
add_command("C", "b", <<["a", "BOOLEAN"], ["D", "INTEGER"]>>)
type_check
add_call_chain(<<d,D>>)
int_value (19)
add_command("BOOLEAN", "b", <<["D", "BOOLEAN"], ["b", "a"], ["d", "BOOLEAN"], ["C", "d"], ["c", "B"], ["d", "B"]>>)
logical_negation
less_than
less_than
add_attribute("e", "C", "BOOLEAN")
add_call_chain(<<b,b,e,a,c,D,BOOLEAN,a,C>>)
addition
add_call_chain(<<B,b,d>>)
add_attribute("d", "b", "a")
logical_negation
add_class(C)
addition
disjunction
modulo
int_value (30)
add_attribute("D", "BOOLEAN", "B")
add_query("C", "c", <<["a", "d"], ["D", "B"], ["c", "BOOLEAN"]>>, "d")
bool_value (true)
int_value (46)
int_value (37)
numerical_negation
add_attribute("D", "BOOLEAN", "BOOLEAN")
add_call_chain(<<D,e,D,D,C>>)
add_command("INTEGER", "a", <<["D", "D"], ["D", "INTEGER"], ["A", "INTEGER"], ["d", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "BOOLEAN"], ["e", "INTEGER"], ["e", "INTEGER"], ["c", "BOOLEAN"]>>)
add_query("a", "D", <<["b", "BOOLEAN"], ["c", "b"], ["e", "INTEGER"], ["A", "B"], ["A", "INTEGER"], ["b", "BOOLEAN"], ["c", "INTEGER"]>>, "d")
bool_value (true)
add_call_chain(<<D,B,e,c,e,e>>)
add_query("c", "A", <<["A", "INTEGER"], ["e", "BOOLEAN"], ["C", "c"], ["e", "A"], ["B", "INTEGER"], ["a", "INTEGER"], ["A", "D"], ["INTEGER", "a"]>>, "d")
add_attribute("C", "d", "INTEGER")
type_check
disjunction
add_attribute("C", "d", "C")
bool_value (true)
add_call_chain(<<c,A,d,d,a,a,e,d>>)
numerical_negation
numerical_negation
add_query("C", "b", <<["C", "BOOLEAN"], ["d", "D"], ["INTEGER", "BOOLEAN"], ["a", "e"], ["C", "INTEGER"], ["e", "INTEGER"]>>, "e")
int_value (25)
generate_java_code
bool_value (false)
add_command("d", "e", <<["d", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["c", "INTEGER"], ["b", "INTEGER"], ["INTEGER", "INTEGER"], ["d", "INTEGER"]>>)
type_check
add_query("a", "A", <<["C", "INTEGER"], ["A", "INTEGER"]>>, "BOOLEAN")
add_call_chain(<<c,b,D,C,C>>)
numerical_negation
add_query("D", "c", <<["b", "INTEGER"], ["C", "D"], ["a", "BOOLEAN"], ["a", "C"]>>, "INTEGER")
add_call_chain(<<d,b,a,B,d>>)
modulo
bool_value (true)
bool_value (false)
bool_value (true)
add_call_chain(<<e,D,d,INTEGER,B,BOOLEAN,b>>)
addition
generate_java_code
equals
disjunction
numerical_negation
conjunction
add_call_chain(<<C,c,a,A,d,C,e,d,c>>)
logical_negation
add_call_chain(<<e,A,b,A,C,INTEGER>>)
add_call_chain(<<C,INTEGER,A,e,C,b,a,BOOLEAN,A>>)
less_than
add_query("d", "c", <<["a", "INTEGER"]>>, "c")
add_class(d)
add_call_chain(<<a,C,C,B>>)
add_call_chain(<<BOOLEAN,d>>)
add_class(C)
add_attribute("D", "D", "BOOLEAN")
add_call_chain(<<e,e,C,d,D,e>>)
add_query("D", "A", <<["A", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "INTEGER"]>>, "B")
add_call_chain(<<a,c,B>>)
add_class(a)
generate_java_code
numerical_negation
disjunction
add_attribute("d", "BOOLEAN", "A")
numerical_negation
add_command("e", "C", <<["e", "INTEGER"], ["BOOLEAN", "INTEGER"]>>)
logical_negation
add_call_chain(<<A>>)
add_call_chain(<<C,C,C,C,B>>)
add_command("D", "a", <<["c", "A"], ["d", "INTEGER"], ["B", "C"]>>)
disjunction
numerical_negation
int_value (9)
add_query("a", "A", <<["C", "INTEGER"], ["b", "BOOLEAN"]>>, "c")
int_value (19)
add_query("A", "e", <<["D", "INTEGER"], ["A", "INTEGER"], ["c", "B"], ["a", "INTEGER"], ["b", "INTEGER"], ["B", "BOOLEAN"], ["e", "INTEGER"]>>, "d")
numerical_negation
int_value (23)
add_call_chain(<<e,d,D,B,INTEGER,BOOLEAN,D,b,A>>)
conjunction
logical_negation
add_call_chain(<<d,B,BOOLEAN,A,C,C,b,C,C>>)
type_check
add_command("e", "d", <<["INTEGER", "INTEGER"], ["d", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["d", "INTEGER"], ["d", "BOOLEAN"], ["C", "e"], ["B", "b"], ["b", "BOOLEAN"], ["A", "INTEGER"]>>)
bool_value (false)
add_call_chain(<<C,B,e,C,e,d,INTEGER,B>>)
add_call_chain(<<BOOLEAN,e,D>>)
add_call_chain(<<d,a,b,D,INTEGER>>)
add_attribute("d", "b", "b")
add_call_chain(<<c>>)
add_query("c", "A", <<["INTEGER", "BOOLEAN"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["INTEGER", "INTEGER"], ["a", "B"]>>, "b")
numerical_negation
add_call_chain(<<C,C,D,a,BOOLEAN,e,B>>)
disjunction
add_query("a", "c", <<["e", "INTEGER"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["B", "INTEGER"], ["B", "B"], ["a", "BOOLEAN"]>>, "A")
type_check
equals
add_query("c", "a", <<["b", "BOOLEAN"], ["D", "INTEGER"], ["A", "INTEGER"], ["D", "C"], ["B", "INTEGER"], ["C", "BOOLEAN"], ["B", "BOOLEAN"]>>, "b")
conjunction
numerical_negation
generate_java_code
equals
numerical_negation
conjunction
less_than
numerical_negation
bool_value (false)
add_attribute("e", "A", "BOOLEAN")
bool_value (false)
add_call_chain(<<INTEGER,e,b>>)
add_attribute("B", "C", "INTEGER")
add_command("a", "D", <<["D", "INTEGER"], ["BOOLEAN", "B"]>>)
bool_value (true)
add_attribute("A", "C", "BOOLEAN")
add_call_chain(<<B,D,A,d>>)
add_call_chain(<<C,A,e,B,d,C,d,A,c>>)
int_value (49)
add_command("a", "B", <<["B", "B"], ["c", "d"], ["A", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "d"], ["d", "INTEGER"], ["B", "d"]>>)
add_attribute("A", "C", "BOOLEAN")
type_check
add_command("D", "c", <<["C", "INTEGER"], ["C", "D"], ["a", "BOOLEAN"], ["e", "INTEGER"]>>)
add_call_chain(<<C,C,C,d,a,B,B,a,D>>)
generate_java_code
type_check
logical_negation
int_value (46)
add_command("BOOLEAN", "C", <<["B", "b"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["c", "INTEGER"], ["B", "INTEGER"], ["B", "BOOLEAN"], ["e", "INTEGER"], ["BOOLEAN", "B"]>>)
numerical_negation
numerical_negation
int_value (48)
int_value (7)
int_value (42)
type_check
int_value (9)
add_command("e", "C", <<["b", "INTEGER"], ["C", "INTEGER"], ["e", "e"], ["A", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["A", "B"], ["e", "b"], ["C", "INTEGER"]>>)
add_query("C", "c", <<["b", "BOOLEAN"]>>, "A")
numerical_negation
add_attribute("b", "e", "A")
add_query("C", "B", <<["e", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "c"], ["a", "BOOLEAN"], ["D", "c"], ["INTEGER", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "INTEGER"]>>, "c")
add_query("b", "d", <<["A", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "INTEGER"], ["B", "INTEGER"], ["B", "BOOLEAN"]>>, "C")
bool_value (false)
conjunction
numerical_negation
logical_negation
add_call_chain(<<B>>)
logical_negation
bool_value (true)
add_call_chain(<<C,D,a,b,A,C,A>>)
int_value (1)
generate_java_code
bool_value (false)
add_attribute("A", "c", "BOOLEAN")
type_check
disjunction
subtraction
add_query("a", "e", <<["BOOLEAN", "BOOLEAN"], ["d", "INTEGER"], ["BOOLEAN", "e"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["c", "INTEGER"]>>, "c")
logical_negation
add_query("B", "A", <<["INTEGER", "D"], ["C", "a"], ["d", "BOOLEAN"], ["b", "BOOLEAN"]>>, "B")
int_value (45)
int_value (46)
add_query("D", "A", <<["c", "d"]>>, "C")
numerical_negation
add_attribute("INTEGER", "C", "D")
int_value (45)
add_attribute("c", "B", "C")
int_value (15)
add_attribute("b", "e", "a")
bool_value (true)
greater_than
add_command("B", "c", <<["e", "B"], ["c", "BOOLEAN"], ["C", "INTEGER"], ["d", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "INTEGER"]>>)
addition
add_query("d", "d", <<["c", "d"], ["e", "A"], ["e", "INTEGER"], ["d", "BOOLEAN"], ["a", "INTEGER"], ["e", "B"], ["B", "INTEGER"], ["b", "INTEGER"]>>, "C")
add_command("C", "e", <<["C", "INTEGER"], ["D", "BOOLEAN"], ["C", "A"], ["B", "INTEGER"], ["b", "BOOLEAN"]>>)
type_check
add_command("c", "B", <<["B", "INTEGER"], ["C", "INTEGER"], ["A", "BOOLEAN"]>>)
