disjunction
greater_than
bool_value (true)
int_value (42)
add_query("a", "a", <<["c", "C"], ["c", "INTEGER"]>>, "A")
numerical_negation
type_check
add_attribute("D", "e", "BOOLEAN")
add_command("e", "e", <<["C", "INTEGER"], ["d", "c"], ["a", "e"], ["b", "INTEGER"], ["d", "BOOLEAN"], ["d", "INTEGER"], ["A", "BOOLEAN"], ["a", "INTEGER"]>>)
conjunction
add_class(b)
add_query("B", "c", <<["e", "INTEGER"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["d", "a"], ["B", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "BOOLEAN"]>>, "a")
int_value (31)
less_than
int_value (8)
add_call_chain(<<A,INTEGER>>)
numerical_negation
numerical_negation
add_command("D", "D", <<["a", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "A"], ["C", "e"]>>)
add_call_chain(<<A,a>>)
int_value (34)
type_check
logical_negation
add_query("e", "C", <<["c", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "b"]>>, "d")
logical_negation
add_attribute("c", "c", "BOOLEAN")
add_query("C", "b", <<["b", "BOOLEAN"]>>, "c")
add_command("d", "C", <<["e", "INTEGER"], ["e", "BOOLEAN"]>>)
add_attribute("d", "C", "b")
add_call_chain(<<D,e,e,b,A,b>>)
numerical_negation
add_class(c)
bool_value (false)
int_value (35)
add_command("A", "INTEGER", <<["A", "INTEGER"], ["INTEGER", "d"]>>)
logical_negation
int_value (4)
add_command("A", "INTEGER", <<["A", "b"], ["a", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["BOOLEAN", "e"], ["C", "e"], ["A", "BOOLEAN"], ["A", "INTEGER"], ["D", "BOOLEAN"]>>)
numerical_negation
add_call_chain(<<e,b,d>>)
logical_negation
int_value (34)
add_command("a", "B", <<["D", "e"], ["INTEGER", "INTEGER"], ["e", "C"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["c", "INTEGER"]>>)
int_value (22)
int_value (18)
add_command("B", "A", <<["B", "a"], ["b", "BOOLEAN"], ["e", "A"], ["D", "BOOLEAN"]>>)
add_class(D)
add_attribute("B", "b", "A")
add_query("a", "c", <<["d", "BOOLEAN"], ["BOOLEAN", "e"], ["A", "BOOLEAN"], ["c", "BOOLEAN"], ["b", "INTEGER"], ["A", "A"], ["D", "b"]>>, "C")
type_check
add_class(C)
add_call_chain(<<c>>)
add_command("A", "B", <<["B", "INTEGER"], ["A", "INTEGER"]>>)
add_attribute("B", "b", "INTEGER")
conjunction
generate_java_code
add_call_chain(<<e,BOOLEAN>>)
numerical_negation
generate_java_code
logical_negation
add_query("d", "B", <<["c", "INTEGER"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["b", "BOOLEAN"], ["C", "BOOLEAN"]>>, "C")
add_call_chain(<<A,B,e,b,c,A>>)
type_check
int_value (49)
add_attribute("a", "c", "INTEGER")
numerical_negation
equals
add_class(d)
add_call_chain(<<A,e,d,D,B,c,C,C>>)
conjunction
quotient
int_value (9)
add_call_chain(<<e,b,d,e>>)
add_command("C", "D", <<["b", "INTEGER"], ["D", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["e", "d"]>>)
add_query("d", "b", <<["b", "BOOLEAN"], ["B", "b"], ["a", "INTEGER"], ["BOOLEAN", "INTEGER"], ["c", "BOOLEAN"], ["a", "D"], ["c", "INTEGER"], ["C", "BOOLEAN"]>>, "d")
add_class(INTEGER)
int_value (33)
int_value (47)
int_value (45)
add_call_chain(<<a,B>>)
type_check
add_query("BOOLEAN", "a", <<["b", "INTEGER"], ["INTEGER", "BOOLEAN"], ["a", "D"], ["B", "c"], ["A", "INTEGER"], ["A", "c"], ["c", "INTEGER"]>>, "d")
add_query("D", "d", <<["A", "INTEGER"], ["a", "b"]>>, "e")
add_call_chain(<<a,b,e,C>>)
logical_negation
greater_than
bool_value (true)
add_command("b", "D", <<["a", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["A", "b"], ["d", "BOOLEAN"]>>)
add_query("INTEGER", "BOOLEAN", <<["B", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["B", "b"], ["d", "BOOLEAN"], ["a", "INTEGER"]>>, "INTEGER")
logical_negation
add_query("a", "B", <<["d", "BOOLEAN"], ["c", "INTEGER"], ["b", "BOOLEAN"], ["C", "A"], ["b", "INTEGER"], ["D", "BOOLEAN"], ["b", "INTEGER"], ["A", "INTEGER"]>>, "d")
bool_value (false)
add_command("A", "C", <<["BOOLEAN", "B"], ["a", "BOOLEAN"], ["d", "B"], ["d", "INTEGER"], ["C", "c"], ["c", "INTEGER"], ["d", "BOOLEAN"]>>)
add_command("d", "a", <<["e", "C"], ["D", "BOOLEAN"]>>)
add_query("INTEGER", "A", <<["B", "INTEGER"], ["e", "BOOLEAN"], ["D", "INTEGER"], ["A", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["B", "A"], ["A", "BOOLEAN"]>>, "INTEGER")
add_command("D", "b", <<["C", "BOOLEAN"]>>)
type_check
add_call_chain(<<INTEGER>>)
add_call_chain(<<c,a,d,B>>)
add_attribute("B", "C", "INTEGER")
add_attribute("d", "e", "e")
add_command("A", "BOOLEAN", <<["A", "BOOLEAN"], ["INTEGER", "B"], ["C", "INTEGER"]>>)
add_query("b", "c", <<["b", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "INTEGER"], ["a", "INTEGER"]>>, "d")
add_command("B", "c", <<["e", "C"], ["e", "INTEGER"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "b"]>>)
numerical_negation
bool_value (true)
numerical_negation
bool_value (true)
less_than
conjunction
logical_negation
int_value (24)
int_value (8)
add_attribute("B", "c", "BOOLEAN")
add_command("b", "B", <<["a", "B"], ["b", "INTEGER"]>>)
numerical_negation
add_attribute("d", "d", "BOOLEAN")
add_call_chain(<<A,c,D>>)
add_command("D", "C", <<["A", "INTEGER"]>>)
generate_java_code
generate_java_code
quotient
logical_negation
int_value (3)
add_query("B", "b", <<["c", "INTEGER"], ["C", "BOOLEAN"], ["a", "INTEGER"], ["A", "BOOLEAN"], ["c", "B"], ["e", "INTEGER"], ["a", "e"]>>, "a")
add_call_chain(<<c,D,D,C,B,d,c,C,b>>)
bool_value (false)
add_attribute("C", "d", "d")
bool_value (false)
add_call_chain(<<b,c,a>>)
add_command("d", "INTEGER", <<["D", "BOOLEAN"], ["a", "INTEGER"], ["C", "BOOLEAN"], ["A", "BOOLEAN"]>>)
add_command("B", "C", <<["D", "BOOLEAN"], ["c", "INTEGER"]>>)
type_check
add_query("a", "d", <<["B", "BOOLEAN"], ["A", "e"], ["c", "c"], ["A", "INTEGER"], ["C", "D"], ["B", "c"], ["c", "BOOLEAN"]>>, "B")
subtraction
add_call_chain(<<c>>)
conjunction
int_value (45)
add_attribute("A", "C", "e")
subtraction
int_value (10)
quotient
int_value (13)
bool_value (true)
add_call_chain(<<A,D>>)
add_attribute("D", "c", "INTEGER")
add_attribute("B", "D", "A")
numerical_negation
add_attribute("B", "a", "BOOLEAN")
int_value (22)
add_query("d", "b", <<["a", "INTEGER"], ["c", "BOOLEAN"]>>, "a")
add_attribute("c", "B", "BOOLEAN")
add_class(BOOLEAN)
add_class(C)
numerical_negation
add_call_chain(<<a,INTEGER>>)
add_call_chain(<<B,e,c,b,a,C,c>>)
add_call_chain(<<INTEGER,b>>)
addition
numerical_negation
bool_value (false)
add_command("B", "c", <<["C", "BOOLEAN"], ["D", "b"], ["B", "a"], ["D", "C"], ["C", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>)
add_attribute("BOOLEAN", "e", "c")
generate_java_code
add_command("B", "d", <<["BOOLEAN", "b"], ["b", "BOOLEAN"], ["c", "INTEGER"], ["A", "B"], ["d", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "INTEGER"]>>)
numerical_negation
add_call_chain(<<D,c,e,c,B,BOOLEAN,A>>)
add_call_chain(<<B,e,D>>)
add_class(C)
less_than
logical_negation
bool_value (false)
subtraction
logical_negation
bool_value (true)
bool_value (false)
conjunction
generate_java_code
less_than
bool_value (true)
add_command("D", "D", <<["d", "INTEGER"], ["c", "a"], ["INTEGER", "INTEGER"]>>)
add_call_chain(<<d,BOOLEAN,A,d,C,b,B>>)
add_query("c", "B", <<["a", "INTEGER"], ["B", "B"], ["e", "A"], ["C", "D"]>>, "C")
add_query("C", "BOOLEAN", <<["A", "D"], ["d", "INTEGER"], ["c", "B"]>>, "A")
add_attribute("C", "B", "INTEGER")
bool_value (true)
bool_value (true)
numerical_negation
equals
add_attribute("d", "A", "INTEGER")
add_call_chain(<<b,C>>)
add_query("c", "C", <<["C", "a"], ["b", "INTEGER"], ["b", "INTEGER"], ["b", "BOOLEAN"]>>, "d")
logical_negation
add_call_chain(<<C,INTEGER,e,D>>)
numerical_negation
add_call_chain(<<C,INTEGER,b,c,B,b,a>>)
add_query("C", "A", <<["A", "INTEGER"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["INTEGER", "BOOLEAN"], ["a", "INTEGER"]>>, "c")
logical_negation
add_call_chain(<<e,D,BOOLEAN,a,a,a,D>>)
add_call_chain(<<INTEGER,A,INTEGER,b,d,A,b,B>>)
add_query("c", "A", <<["c", "INTEGER"], ["B", "BOOLEAN"]>>, "C")
add_class(B)
conjunction
add_call_chain(<<A,b,b,c,C>>)
add_call_chain(<<a,B>>)
add_call_chain(<<c,e,INTEGER,a>>)
add_call_chain(<<D,a>>)
type_check
bool_value (false)
logical_negation
add_command("B", "e", <<["c", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["A", "INTEGER"], ["d", "A"], ["C", "c"]>>)
add_call_chain(<<b>>)
add_call_chain(<<C,e>>)
generate_java_code
add_query("A", "D", <<["e", "D"]>>, "A")
add_command("A", "B", <<["C", "a"], ["B", "BOOLEAN"], ["c", "INTEGER"], ["C", "INTEGER"], ["e", "e"]>>)
generate_java_code
numerical_negation
add_attribute("D", "C", "C")
numerical_negation
logical_negation
conjunction
add_query("c", "a", <<["e", "INTEGER"], ["d", "BOOLEAN"], ["c", "BOOLEAN"]>>, "A")
bool_value (true)
add_command("C", "d", <<["C", "c"], ["D", "BOOLEAN"], ["a", "INTEGER"]>>)
add_query("D", "a", <<["C", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "INTEGER"], ["A", "C"], ["B", "D"], ["INTEGER", "BOOLEAN"], ["B", "d"], ["A", "INTEGER"], ["c", "INTEGER"]>>, "D")
bool_value (true)
add_query("d", "INTEGER", <<["B", "INTEGER"]>>, "d")
add_attribute("d", "INTEGER", "BOOLEAN")
add_query("b", "e", <<["BOOLEAN", "a"], ["D", "INTEGER"], ["BOOLEAN", "INTEGER"], ["d", "INTEGER"]>>, "C")
add_class(e)
add_call_chain(<<INTEGER,C,c,e,b,D>>)
add_attribute("D", "C", "BOOLEAN")
add_attribute("INTEGER", "b", "INTEGER")
numerical_negation
type_check
add_query("INTEGER", "c", <<["B", "INTEGER"], ["e", "A"], ["C", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "INTEGER"]>>, "c")
numerical_negation
add_call_chain(<<BOOLEAN,a>>)
add_command("a", "C", <<["A", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["a", "INTEGER"], ["A", "INTEGER"]>>)
add_attribute("c", "BOOLEAN", "INTEGER")
int_value (11)
add_attribute("B", "B", "INTEGER")
numerical_negation
modulo
add_command("d", "C", <<["A", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "BOOLEAN"]>>)
add_call_chain(<<INTEGER,D,A,c,A,B>>)
conjunction
type_check
bool_value (false)
add_query("c", "b", <<["B", "BOOLEAN"], ["C", "A"], ["INTEGER", "INTEGER"], ["b", "INTEGER"], ["B", "D"], ["d", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["c", "D"]>>, "e")
add_call_chain(<<A,e,d,D,D>>)
add_command("c", "d", <<["C", "BOOLEAN"], ["A", "INTEGER"], ["d", "c"], ["A", "c"], ["BOOLEAN", "BOOLEAN"], ["INTEGER", "INTEGER"], ["A", "INTEGER"], ["b", "INTEGER"], ["c", "BOOLEAN"]>>)
bool_value (true)
add_call_chain(<<e,D,BOOLEAN,B>>)
add_command("A", "A", <<["e", "INTEGER"], ["c", "BOOLEAN"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["C", "B"], ["D", "INTEGER"], ["b", "INTEGER"], ["c", "INTEGER"], ["C", "BOOLEAN"]>>)
disjunction
add_query("BOOLEAN", "INTEGER", <<["C", "BOOLEAN"]>>, "b")
greater_than
