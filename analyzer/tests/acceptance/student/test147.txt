type_check
numerical_negation
bool_value (false)
add_call_chain(<<c,B,B,C,e,b,b>>)
equals
addition
logical_negation
add_call_chain(<<C,a,B,B,b,C,C,C,A>>)
add_query("b", "a", <<["d", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "INTEGER"], ["d", "BOOLEAN"], ["e", "A"], ["a", "INTEGER"], ["D", "INTEGER"]>>, "d")
add_call_chain(<<B,a,e>>)
add_command("e", "d", <<["C", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "INTEGER"], ["D", "INTEGER"], ["c", "b"]>>)
type_check
type_check
add_call_chain(<<B,e,C,c,INTEGER,B,B,BOOLEAN>>)
bool_value (false)
add_call_chain(<<BOOLEAN,a>>)
add_attribute("C", "C", "INTEGER")
logical_negation
int_value (16)
int_value (8)
add_call_chain(<<B,C,C>>)
add_command("A", "C", <<["BOOLEAN", "BOOLEAN"], ["d", "C"], ["b", "BOOLEAN"]>>)
add_query("a", "B", <<["C", "BOOLEAN"], ["B", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["d", "A"], ["C", "INTEGER"], ["A", "e"]>>, "e")
add_command("b", "a", <<["D", "INTEGER"]>>)
logical_negation
numerical_negation
add_call_chain(<<B,D,d,b,B,a>>)
conjunction
conjunction
int_value (7)
bool_value (false)
add_class(INTEGER)
add_call_chain(<<C,a,B,a,d,b,B>>)
numerical_negation
add_command("D", "e", <<["A", "INTEGER"], ["A", "D"], ["c", "BOOLEAN"], ["B", "c"]>>)
bool_value (false)
generate_java_code
add_call_chain(<<b,BOOLEAN,b,B,e>>)
add_call_chain(<<C,d>>)
add_query("C", "e", <<["d", "A"], ["a", "INTEGER"], ["d", "BOOLEAN"], ["b", "C"], ["B", "BOOLEAN"], ["C", "INTEGER"]>>, "c")
add_call_chain(<<A,A>>)
logical_negation
quotient
add_command("d", "c", <<["INTEGER", "B"], ["A", "INTEGER"]>>)
add_call_chain(<<c,A,a,C,c,B,A>>)
add_class(a)
equals
add_call_chain(<<D,D,a,e,B,B,A,C,C>>)
add_attribute("c", "B", "INTEGER")
bool_value (true)
add_call_chain(<<b>>)
add_query("INTEGER", "B", <<["C", "B"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["e", "BOOLEAN"]>>, "d")
numerical_negation
add_command("D", "B", <<["B", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "B"], ["c", "B"]>>)
add_command("d", "a", <<["D", "INTEGER"], ["B", "A"], ["c", "INTEGER"], ["C", "A"], ["C", "a"], ["a", "INTEGER"]>>)
bool_value (false)
add_call_chain(<<BOOLEAN,INTEGER,B,d,A,A>>)
add_command("A", "INTEGER", <<["e", "INTEGER"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "INTEGER"]>>)
numerical_negation
add_query("C", "c", <<["D", "BOOLEAN"], ["d", "INTEGER"], ["c", "BOOLEAN"], ["INTEGER", "a"]>>, "c")
int_value (41)
add_call_chain(<<C,e,c,D>>)
add_class(b)
greater_than
conjunction
add_query("C", "b", <<["b", "e"], ["INTEGER", "D"], ["D", "b"], ["INTEGER", "INTEGER"], ["A", "INTEGER"]>>, "d")
add_call_chain(<<a,B,C>>)
add_query("D", "C", <<["d", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "BOOLEAN"]>>, "c")
int_value (44)
add_command("C", "A", <<["a", "B"], ["BOOLEAN", "c"], ["d", "BOOLEAN"]>>)
add_query("c", "c", <<["e", "BOOLEAN"], ["b", "D"], ["D", "INTEGER"], ["c", "D"], ["INTEGER", "BOOLEAN"], ["c", "INTEGER"]>>, "a")
type_check
greater_than
add_query("a", "B", <<["A", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "B"], ["a", "BOOLEAN"], ["B", "INTEGER"], ["A", "INTEGER"], ["D", "INTEGER"]>>, "e")
add_attribute("C", "B", "A")
conjunction
add_call_chain(<<e>>)
add_call_chain(<<C,B>>)
int_value (35)
equals
add_query("d", "A", <<["C", "BOOLEAN"], ["C", "BOOLEAN"], ["INTEGER", "D"]>>, "e")
add_attribute("b", "a", "C")
add_call_chain(<<c,b,a,B,C,a,b,e,A>>)
logical_negation
add_command("BOOLEAN", "e", <<["a", "INTEGER"], ["b", "b"], ["INTEGER", "INTEGER"], ["e", "C"], ["C", "A"], ["a", "BOOLEAN"], ["d", "INTEGER"], ["e", "INTEGER"]>>)
greater_than
add_call_chain(<<B>>)
add_attribute("D", "D", "INTEGER")
numerical_negation
type_check
add_attribute("b", "A", "INTEGER")
add_call_chain(<<c,A,C,e,A,D>>)
add_call_chain(<<B,C,INTEGER>>)
add_query("a", "e", <<["C", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "INTEGER"], ["c", "e"], ["e", "A"], ["B", "INTEGER"], ["B", "b"], ["D", "INTEGER"], ["D", "B"]>>, "a")
add_call_chain(<<e>>)
numerical_negation
add_call_chain(<<b,d,d,c,a,a,B>>)
add_command("c", "c", <<["A", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "INTEGER"], ["BOOLEAN", "INTEGER"], ["e", "a"], ["a", "INTEGER"], ["D", "BOOLEAN"], ["b", "BOOLEAN"]>>)
add_query("e", "c", <<["BOOLEAN", "INTEGER"], ["A", "BOOLEAN"], ["e", "c"], ["A", "INTEGER"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["b", "c"], ["b", "INTEGER"]>>, "e")
add_query("c", "e", <<["INTEGER", "INTEGER"], ["e", "A"], ["e", "a"], ["a", "BOOLEAN"], ["D", "a"], ["a", "c"]>>, "INTEGER")
add_call_chain(<<D>>)
logical_negation
add_query("A", "A", <<["A", "B"]>>, "a")
add_query("BOOLEAN", "d", <<["INTEGER", "INTEGER"], ["A", "BOOLEAN"], ["d", "INTEGER"], ["A", "INTEGER"], ["a", "BOOLEAN"], ["B", "INTEGER"], ["d", "INTEGER"]>>, "A")
add_command("a", "c", <<["C", "D"], ["C", "INTEGER"], ["a", "INTEGER"], ["D", "INTEGER"], ["a", "BOOLEAN"], ["C", "c"], ["e", "a"], ["C", "D"]>>)
conjunction
type_check
equals
logical_negation
add_command("e", "D", <<["e", "INTEGER"], ["c", "d"], ["d", "INTEGER"], ["D", "INTEGER"], ["A", "BOOLEAN"]>>)
add_query("A", "b", <<["B", "BOOLEAN"]>>, "b")
add_call_chain(<<D,INTEGER,e,D,C,BOOLEAN,B,C,a>>)
logical_negation
int_value (31)
add_class(a)
add_query("e", "B", <<["b", "BOOLEAN"], ["D", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "a"], ["d", "BOOLEAN"], ["b", "e"], ["D", "INTEGER"], ["A", "B"]>>, "D")
generate_java_code
add_query("A", "C", <<["a", "D"], ["A", "BOOLEAN"], ["D", "b"], ["B", "C"], ["e", "INTEGER"]>>, "B")
logical_negation
logical_negation
logical_negation
addition
less_than
bool_value (false)
add_command("e", "C", <<["e", "INTEGER"], ["d", "A"], ["B", "INTEGER"], ["c", "INTEGER"]>>)
add_call_chain(<<B,a,B,INTEGER,D,A,D>>)
int_value (16)
add_attribute("b", "e", "BOOLEAN")
generate_java_code
int_value (45)
disjunction
numerical_negation
logical_negation
add_query("a", "a", <<["C", "B"]>>, "A")
disjunction
add_attribute("C", "B", "c")
add_call_chain(<<D,e>>)
add_command("a", "INTEGER", <<["a", "INTEGER"], ["C", "BOOLEAN"], ["d", "INTEGER"], ["B", "INTEGER"], ["d", "BOOLEAN"], ["e", "INTEGER"], ["d", "INTEGER"], ["A", "BOOLEAN"]>>)
add_attribute("e", "B", "INTEGER")
add_call_chain(<<d,d,e,INTEGER,C,e>>)
add_class(D)
bool_value (true)
add_attribute("INTEGER", "d", "BOOLEAN")
int_value (13)
add_attribute("c", "A", "BOOLEAN")
add_call_chain(<<C,e>>)
add_query("D", "A", <<["e", "a"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "INTEGER"]>>, "c")
generate_java_code
add_query("C", "e", <<["B", "BOOLEAN"], ["c", "A"], ["c", "C"], ["c", "BOOLEAN"], ["a", "INTEGER"], ["e", "BOOLEAN"], ["A", "INTEGER"]>>, "A")
add_class(b)
bool_value (false)
add_query("b", "C", <<["D", "b"], ["d", "BOOLEAN"], ["d", "BOOLEAN"], ["b", "e"], ["INTEGER", "BOOLEAN"], ["a", "D"], ["b", "INTEGER"]>>, "e")
add_query("INTEGER", "D", <<["b", "BOOLEAN"], ["A", "B"], ["e", "C"], ["e", "INTEGER"], ["D", "INTEGER"]>>, "e")
bool_value (true)
bool_value (false)
add_call_chain(<<B,C>>)
logical_negation
generate_java_code
add_command("d", "B", <<["D", "B"], ["D", "BOOLEAN"], ["c", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "INTEGER"]>>)
add_class(a)
conjunction
numerical_negation
add_attribute("e", "A", "D")
logical_negation
add_query("D", "a", <<["C", "INTEGER"], ["INTEGER", "A"], ["BOOLEAN", "INTEGER"], ["B", "INTEGER"]>>, "A")
add_class(d)
add_call_chain(<<c,e>>)
int_value (13)
add_call_chain(<<b,C,c,B,C,c>>)
int_value (42)
add_command("c", "b", <<["b", "INTEGER"], ["a", "c"]>>)
add_call_chain(<<D,B,A,b>>)
add_query("d", "D", <<["b", "INTEGER"], ["D", "BOOLEAN"]>>, "B")
logical_negation
type_check
add_command("C", "b", <<["c", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "BOOLEAN"], ["c", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "C"], ["D", "e"]>>)
add_call_chain(<<c,b,C>>)
add_class(B)
add_attribute("d", "b", "INTEGER")
add_query("B", "A", <<["d", "d"], ["C", "BOOLEAN"], ["c", "INTEGER"], ["b", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "INTEGER"], ["b", "INTEGER"]>>, "c")
multiplication
bool_value (false)
int_value (44)
generate_java_code
add_command("c", "A", <<["a", "INTEGER"], ["C", "INTEGER"], ["A", "b"]>>)
logical_negation
add_attribute("a", "d", "BOOLEAN")
greater_than
add_command("B", "B", <<["b", "BOOLEAN"], ["B", "b"], ["B", "INTEGER"]>>)
add_call_chain(<<D,D,BOOLEAN,C,C>>)
add_command("a", "c", <<["a", "BOOLEAN"], ["a", "A"]>>)
less_than
bool_value (true)
equals
add_call_chain(<<e,d,C,C,B,INTEGER>>)
add_query("e", "C", <<["D", "INTEGER"], ["B", "INTEGER"], ["c", "BOOLEAN"]>>, "c")
add_call_chain(<<D,e,e,C,a,A,D,C>>)
generate_java_code
add_query("B", "a", <<["INTEGER", "INTEGER"], ["e", "d"], ["B", "d"], ["INTEGER", "INTEGER"]>>, "A")
numerical_negation
add_command("c", "a", <<["INTEGER", "INTEGER"], ["C", "INTEGER"], ["c", "BOOLEAN"]>>)
add_query("b", "c", <<["BOOLEAN", "a"], ["d", "A"], ["INTEGER", "e"], ["B", "INTEGER"], ["b", "D"], ["A", "D"], ["c", "B"], ["c", "INTEGER"]>>, "e")
add_query("BOOLEAN", "e", <<["a", "B"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["a", "INTEGER"], ["c", "INTEGER"]>>, "d")
add_command("INTEGER", "e", <<["C", "A"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "a"], ["e", "INTEGER"], ["a", "b"]>>)
bool_value (true)
generate_java_code
logical_negation
generate_java_code
add_call_chain(<<b,C,A,INTEGER>>)
numerical_negation
logical_negation
bool_value (true)
add_query("d", "c", <<["B", "b"], ["INTEGER", "B"], ["A", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["A", "b"], ["c", "INTEGER"], ["c", "BOOLEAN"], ["a", "a"]>>, "b")
add_command("C", "b", <<["d", "INTEGER"], ["e", "a"], ["c", "B"], ["a", "INTEGER"], ["D", "BOOLEAN"]>>)
generate_java_code
int_value (31)
add_call_chain(<<d,d,D,d,C,e,A,B>>)
add_call_chain(<<BOOLEAN,C,C>>)
add_call_chain(<<d,C>>)
bool_value (true)
modulo
numerical_negation
numerical_negation
add_command("c", "INTEGER", <<["b", "a"], ["b", "d"], ["D", "INTEGER"], ["D", "INTEGER"], ["e", "d"], ["b", "B"]>>)
add_attribute("a", "C", "e")
generate_java_code
add_command("a", "B", <<["d", "INTEGER"], ["D", "a"], ["B", "D"], ["a", "INTEGER"], ["c", "BOOLEAN"]>>)
add_query("C", "a", <<["e", "INTEGER"], ["d", "D"], ["d", "INTEGER"], ["c", "BOOLEAN"], ["c", "INTEGER"]>>, "a")
add_command("b", "d", <<["BOOLEAN", "INTEGER"], ["b", "B"], ["b", "C"], ["D", "e"]>>)
add_attribute("b", "C", "C")
add_command("A", "A", <<["c", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "e"]>>)
multiplication
conjunction
numerical_negation
add_call_chain(<<INTEGER,D,C,e,e,d,a,a>>)
generate_java_code
add_call_chain(<<b,e,D,A,D,b,C,D,c>>)
add_attribute("d", "C", "b")
bool_value (false)
add_class(INTEGER)
equals
