add_command("a", "c", <<["e", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["A", "INTEGER"]>>)
add_call_chain(<<a,a,BOOLEAN,C,A,e,D,d,e>>)
numerical_negation
add_attribute("c", "d", "BOOLEAN")
add_command("a", "e", <<["c", "INTEGER"], ["INTEGER", "BOOLEAN"], ["e", "INTEGER"], ["e", "C"], ["B", "BOOLEAN"], ["B", "a"], ["C", "INTEGER"], ["D", "BOOLEAN"]>>)
add_query("c", "A", <<["a", "e"], ["d", "BOOLEAN"]>>, "c")
logical_negation
int_value (24)
add_command("c", "e", <<["b", "BOOLEAN"], ["a", "INTEGER"]>>)
conjunction
logical_negation
generate_java_code
add_call_chain(<<D,C,c,b,a,A,e,BOOLEAN>>)
bool_value (false)
bool_value (true)
logical_negation
add_attribute("C", "B", "INTEGER")
addition
add_call_chain(<<c,C,A,C,C,c,C,c,a>>)
multiplication
bool_value (true)
greater_than
add_attribute("A", "a", "INTEGER")
add_call_chain(<<A,B>>)
type_check
add_command("D", "A", <<["c", "INTEGER"], ["c", "INTEGER"]>>)
add_attribute("C", "A", "BOOLEAN")
add_command("BOOLEAN", "c", <<["BOOLEAN", "INTEGER"], ["D", "c"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "d"], ["b", "INTEGER"], ["B", "B"], ["B", "INTEGER"], ["b", "INTEGER"]>>)
add_call_chain(<<a,C,a,e,A,C,e,D>>)
type_check
add_command("B", "BOOLEAN", <<["b", "c"]>>)
add_query("b", "D", <<["D", "BOOLEAN"], ["D", "INTEGER"], ["a", "d"]>>, "e")
int_value (13)
logical_negation
numerical_negation
add_call_chain(<<D,D>>)
add_class(a)
add_attribute("A", "a", "C")
add_query("e", "c", <<["d", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "C"], ["d", "A"], ["c", "INTEGER"], ["C", "D"], ["D", "BOOLEAN"]>>, "e")
bool_value (false)
add_class(e)
bool_value (false)
add_query("BOOLEAN", "C", <<["a", "BOOLEAN"], ["c", "INTEGER"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["B", "INTEGER"], ["b", "BOOLEAN"], ["c", "INTEGER"], ["c", "BOOLEAN"]>>, "e")
add_query("B", "d", <<["INTEGER", "BOOLEAN"], ["D", "BOOLEAN"], ["a", "e"], ["c", "BOOLEAN"], ["A", "BOOLEAN"]>>, "a")
type_check
add_class(e)
numerical_negation
add_attribute("a", "e", "BOOLEAN")
add_query("c", "a", <<["A", "C"], ["A", "INTEGER"], ["D", "INTEGER"], ["a", "INTEGER"], ["e", "B"], ["b", "A"], ["c", "INTEGER"], ["d", "INTEGER"]>>, "d")
add_command("INTEGER", "a", <<["e", "BOOLEAN"], ["c", "C"], ["INTEGER", "BOOLEAN"]>>)
add_call_chain(<<A,C,C,c,e>>)
add_attribute("a", "e", "BOOLEAN")
equals
add_attribute("A", "d", "BOOLEAN")
logical_negation
add_call_chain(<<C,D>>)
int_value (37)
add_class(B)
type_check
add_attribute("A", "b", "a")
disjunction
bool_value (true)
quotient
add_call_chain(<<a,A,C,C,A>>)
numerical_negation
add_query("b", "D", <<["d", "BOOLEAN"], ["d", "B"], ["a", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "INTEGER"], ["A", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["A", "e"], ["A", "INTEGER"]>>, "INTEGER")
bool_value (true)
greater_than
disjunction
disjunction
add_call_chain(<<e,D,D,A,c,a,BOOLEAN,C,a>>)
conjunction
bool_value (true)
add_call_chain(<<BOOLEAN,e,b,e,e,A,B,b>>)
type_check
add_call_chain(<<C,C,INTEGER>>)
add_attribute("d", "d", "B")
bool_value (true)
add_call_chain(<<e,C,e,a,e,b,b,c>>)
add_query("D", "d", <<["c", "c"], ["D", "INTEGER"], ["A", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "INTEGER"], ["d", "d"]>>, "B")
add_call_chain(<<c>>)
logical_negation
modulo
int_value (35)
add_command("a", "C", <<["C", "INTEGER"], ["c", "INTEGER"], ["C", "BOOLEAN"], ["e", "b"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["B", "b"]>>)
add_command("e", "D", <<["BOOLEAN", "INTEGER"], ["D", "INTEGER"], ["D", "INTEGER"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["d", "D"], ["D", "INTEGER"]>>)
logical_negation
add_query("c", "a", <<["A", "BOOLEAN"], ["c", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "B"], ["c", "INTEGER"], ["e", "INTEGER"], ["b", "BOOLEAN"], ["A", "BOOLEAN"], ["INTEGER", "a"]>>, "D")
disjunction
numerical_negation
add_command("A", "B", <<["B", "INTEGER"]>>)
equals
disjunction
int_value (48)
int_value (18)
add_command("C", "b", <<["a", "a"], ["C", "BOOLEAN"]>>)
int_value (35)
int_value (31)
add_attribute("d", "b", "INTEGER")
bool_value (false)
add_call_chain(<<INTEGER,BOOLEAN,BOOLEAN,D,C,A,A,a>>)
add_command("e", "INTEGER", <<["C", "BOOLEAN"], ["e", "A"], ["a", "INTEGER"], ["B", "INTEGER"], ["B", "A"], ["b", "BOOLEAN"], ["d", "BOOLEAN"]>>)
generate_java_code
add_call_chain(<<B,b,e,INTEGER,INTEGER,INTEGER>>)
equals
add_call_chain(<<c>>)
modulo
type_check
logical_negation
add_call_chain(<<C,C>>)
add_call_chain(<<INTEGER,d,d,c,d>>)
type_check
add_query("c", "d", <<["B", "A"], ["C", "INTEGER"], ["C", "BOOLEAN"]>>, "B")
bool_value (false)
add_class(B)
type_check
add_class(D)
less_than
bool_value (true)
modulo
add_call_chain(<<C,b,D,a>>)
type_check
int_value (18)
logical_negation
greater_than
modulo
add_attribute("d", "e", "INTEGER")
add_class(BOOLEAN)
int_value (21)
generate_java_code
add_attribute("c", "A", "BOOLEAN")
add_call_chain(<<D,e,B,INTEGER,B>>)
logical_negation
generate_java_code
add_query("c", "e", <<["B", "INTEGER"]>>, "B")
add_call_chain(<<C,B>>)
add_query("d", "BOOLEAN", <<["INTEGER", "INTEGER"], ["a", "INTEGER"], ["INTEGER", "BOOLEAN"], ["INTEGER", "INTEGER"]>>, "e")
logical_negation
add_attribute("BOOLEAN", "C", "C")
add_query("D", "A", <<["b", "BOOLEAN"], ["d", "d"], ["C", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["A", "INTEGER"], ["INTEGER", "e"], ["d", "BOOLEAN"]>>, "BOOLEAN")
logical_negation
add_call_chain(<<A,c,a,A,D,A,a>>)
add_class(c)
add_call_chain(<<D,c,INTEGER,B,a,d>>)
logical_negation
add_query("C", "b", <<["d", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "INTEGER"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["D", "INTEGER"]>>, "d")
add_query("C", "INTEGER", <<["c", "BOOLEAN"], ["D", "INTEGER"], ["b", "a"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["BOOLEAN", "INTEGER"]>>, "D")
add_call_chain(<<C,BOOLEAN,A,c,B,c,C>>)
add_call_chain(<<b,e,A,BOOLEAN>>)
generate_java_code
add_call_chain(<<b,D,BOOLEAN,a,a,B,d,a>>)
add_attribute("C", "INTEGER", "BOOLEAN")
add_class(e)
logical_negation
numerical_negation
addition
disjunction
add_command("b", "a", <<["C", "BOOLEAN"], ["a", "INTEGER"]>>)
add_command("b", "BOOLEAN", <<["D", "INTEGER"], ["BOOLEAN", "e"], ["C", "A"], ["b", "BOOLEAN"]>>)
addition
add_call_chain(<<d,d,b,b>>)
add_class(d)
int_value (23)
add_class(C)
add_command("B", "D", <<["A", "BOOLEAN"], ["c", "BOOLEAN"]>>)
add_command("a", "e", <<["e", "c"], ["B", "INTEGER"], ["c", "INTEGER"], ["D", "BOOLEAN"], ["c", "e"], ["INTEGER", "INTEGER"], ["d", "INTEGER"], ["B", "e"]>>)
add_attribute("A", "e", "BOOLEAN")
numerical_negation
numerical_negation
add_call_chain(<<BOOLEAN,D,INTEGER>>)
numerical_negation
add_query("e", "B", <<["B", "INTEGER"], ["a", "INTEGER"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["D", "a"], ["A", "BOOLEAN"]>>, "B")
add_class(a)
add_command("C", "d", <<["b", "INTEGER"], ["A", "e"], ["B", "BOOLEAN"], ["C", "C"], ["a", "INTEGER"], ["A", "b"], ["a", "INTEGER"], ["A", "INTEGER"], ["a", "BOOLEAN"]>>)
add_call_chain(<<a>>)
add_attribute("A", "A", "B")
add_query("A", "a", <<["A", "INTEGER"]>>, "B")
add_query("B", "a", <<["C", "INTEGER"], ["e", "INTEGER"], ["B", "a"], ["d", "INTEGER"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["D", "INTEGER"]>>, "b")
add_call_chain(<<b>>)
add_call_chain(<<b,b,D,B,B,a,C>>)
int_value (38)
add_attribute("c", "D", "BOOLEAN")
add_attribute("b", "c", "INTEGER")
add_call_chain(<<B,B>>)
numerical_negation
generate_java_code
add_call_chain(<<D,C,C,a>>)
add_call_chain(<<c,D,C>>)
add_call_chain(<<A,c,BOOLEAN,a,A,D,a,c,c>>)
add_class(A)
add_command("e", "c", <<["d", "INTEGER"]>>)
bool_value (false)
multiplication
numerical_negation
subtraction
generate_java_code
disjunction
int_value (41)
add_command("c", "B", <<["A", "INTEGER"], ["c", "BOOLEAN"], ["d", "INTEGER"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["D", "A"]>>)
add_command("C", "c", <<["C", "b"], ["A", "INTEGER"], ["d", "BOOLEAN"], ["d", "c"]>>)
add_command("a", "A", <<["D", "INTEGER"], ["INTEGER", "INTEGER"], ["b", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "BOOLEAN"], ["a", "INTEGER"], ["D", "INTEGER"], ["C", "BOOLEAN"]>>)
int_value (23)
bool_value (true)
add_call_chain(<<c,b,D,a,c,e,b,D,B>>)
logical_negation
numerical_negation
bool_value (true)
type_check
add_call_chain(<<A,A,b,b>>)
numerical_negation
logical_negation
add_call_chain(<<B,A,A,d,A,INTEGER,b>>)
generate_java_code
add_attribute("INTEGER", "D", "BOOLEAN")
logical_negation
disjunction
add_class(e)
add_command("D", "c", <<["e", "BOOLEAN"], ["B", "INTEGER"], ["a", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "d"]>>)
add_query("B", "d", <<["D", "INTEGER"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["b", "c"], ["A", "INTEGER"], ["a", "INTEGER"], ["B", "B"], ["A", "d"]>>, "d")
generate_java_code
add_command("INTEGER", "e", <<["a", "b"], ["INTEGER", "INTEGER"], ["d", "INTEGER"], ["BOOLEAN", "C"], ["A", "D"], ["c", "D"]>>)
int_value (6)
add_call_chain(<<D,D,e,a,a,BOOLEAN,e,C,A>>)
add_attribute("a", "A", "BOOLEAN")
add_attribute("A", "A", "INTEGER")
numerical_negation
numerical_negation
logical_negation
subtraction
bool_value (true)
less_than
add_call_chain(<<A,A,e,D,e,D,C,C>>)
add_command("B", "d", <<["c", "INTEGER"], ["b", "INTEGER"], ["D", "BOOLEAN"]>>)
add_class(a)
add_class(B)
generate_java_code
add_attribute("A", "INTEGER", "BOOLEAN")
bool_value (true)
add_query("d", "c", <<["BOOLEAN", "BOOLEAN"], ["B", "B"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "d"], ["A", "BOOLEAN"], ["b", "d"], ["d", "BOOLEAN"]>>, "BOOLEAN")
add_class(c)
add_command("e", "d", <<["e", "BOOLEAN"]>>)
add_query("B", "D", <<["A", "BOOLEAN"], ["d", "A"], ["INTEGER", "c"]>>, "a")
add_command("a", "b", <<["b", "INTEGER"], ["c", "INTEGER"], ["e", "BOOLEAN"], ["INTEGER", "INTEGER"]>>)
add_call_chain(<<D,c>>)
add_attribute("e", "B", "a")
add_call_chain(<<c,D,b,c,C,b,e,B,B>>)
int_value (30)
add_call_chain(<<e,b,a,C,e>>)
add_call_chain(<<e,B,A,D,B,e,B,A>>)
type_check
add_command("d", "C", <<["e", "BOOLEAN"], ["C", "INTEGER"], ["A", "INTEGER"], ["B", "INTEGER"], ["D", "INTEGER"], ["D", "A"], ["d", "e"], ["d", "D"], ["C", "BOOLEAN"]>>)
logical_negation
numerical_negation
add_call_chain(<<A,C>>)
add_call_chain(<<B,A,C>>)
logical_negation
