add_call_chain(<<d,e>>)
add_attribute("e", "c", "D")
type_check
logical_negation
add_call_chain(<<B,d,c,D,a,c,c,B,C>>)
greater_than
add_command("d", "B", <<["A", "BOOLEAN"], ["B", "b"], ["D", "C"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["b", "d"], ["e", "BOOLEAN"], ["B", "BOOLEAN"]>>)
add_call_chain(<<C,a,INTEGER,c,e,B,b,D,d>>)
numerical_negation
type_check
generate_java_code
add_query("d", "A", <<["a", "INTEGER"], ["A", "INTEGER"], ["a", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "b"], ["b", "INTEGER"], ["INTEGER", "INTEGER"], ["A", "c"]>>, "A")
add_query("B", "B", <<["c", "B"], ["b", "BOOLEAN"], ["D", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>, "c")
generate_java_code
int_value (27)
numerical_negation
add_call_chain(<<B,e>>)
add_call_chain(<<B,INTEGER,BOOLEAN,e>>)
add_query("B", "B", <<["c", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "INTEGER"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["d", "INTEGER"]>>, "b")
numerical_negation
add_class(C)
add_command("b", "B", <<["d", "D"]>>)
add_call_chain(<<BOOLEAN>>)
add_query("b", "c", <<["D", "BOOLEAN"], ["e", "INTEGER"], ["c", "BOOLEAN"], ["c", "e"], ["e", "BOOLEAN"]>>, "BOOLEAN")
add_class(B)
less_than
add_class(D)
int_value (10)
conjunction
add_attribute("INTEGER", "a", "INTEGER")
add_command("B", "a", <<["C", "INTEGER"], ["e", "BOOLEAN"]>>)
add_class(a)
add_call_chain(<<C,d,b,A,B,C,B,c,b>>)
add_query("A", "A", <<["c", "INTEGER"], ["B", "BOOLEAN"], ["D", "c"], ["A", "b"], ["C", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "BOOLEAN"]>>, "B")
int_value (8)
logical_negation
int_value (25)
int_value (41)
generate_java_code
add_query("d", "A", <<["e", "INTEGER"], ["A", "BOOLEAN"], ["a", "e"], ["D", "e"]>>, "e")
generate_java_code
bool_value (false)
logical_negation
logical_negation
numerical_negation
bool_value (false)
logical_negation
add_query("C", "e", <<["e", "INTEGER"], ["d", "d"], ["c", "c"], ["INTEGER", "B"], ["a", "D"], ["d", "BOOLEAN"]>>, "C")
add_attribute("b", "c", "INTEGER")
int_value (24)
add_call_chain(<<a,e,B,d,a,a,c,D>>)
add_attribute("BOOLEAN", "a", "INTEGER")
int_value (49)
int_value (42)
add_command("BOOLEAN", "b", <<["B", "d"], ["B", "INTEGER"], ["b", "e"]>>)
add_query("D", "A", <<["b", "e"], ["C", "d"], ["C", "a"]>>, "B")
add_command("D", "e", <<["D", "INTEGER"], ["C", "BOOLEAN"], ["C", "INTEGER"]>>)
add_query("b", "c", <<["B", "C"], ["INTEGER", "e"], ["D", "e"], ["INTEGER", "INTEGER"], ["b", "INTEGER"]>>, "e")
bool_value (false)
numerical_negation
add_call_chain(<<a,e,a,B,B,c,A,D,b>>)
add_call_chain(<<C,e,a,b,D,b>>)
logical_negation
add_class(a)
bool_value (false)
numerical_negation
add_command("e", "d", <<["c", "C"], ["d", "c"], ["INTEGER", "BOOLEAN"], ["c", "INTEGER"], ["BOOLEAN", "C"], ["e", "INTEGER"]>>)
add_call_chain(<<B,e,b,A,C,b,b>>)
bool_value (true)
add_class(d)
logical_negation
add_call_chain(<<c,D,a,e,BOOLEAN>>)
add_command("a", "a", <<["C", "INTEGER"], ["B", "INTEGER"], ["C", "INTEGER"], ["a", "BOOLEAN"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["A", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["c", "a"]>>)
add_command("C", "B", <<["INTEGER", "a"], ["D", "INTEGER"], ["b", "BOOLEAN"], ["a", "INTEGER"], ["INTEGER", "BOOLEAN"], ["C", "INTEGER"], ["d", "b"], ["A", "BOOLEAN"]>>)
multiplication
add_call_chain(<<B,e,e,a,D,BOOLEAN,C,a,D>>)
generate_java_code
add_query("D", "d", <<["D", "BOOLEAN"], ["INTEGER", "INTEGER"], ["A", "INTEGER"]>>, "INTEGER")
add_call_chain(<<a>>)
generate_java_code
add_call_chain(<<d,c,c,C,BOOLEAN,a,d,D,a>>)
numerical_negation
addition
add_query("c", "b", <<["INTEGER", "INTEGER"], ["C", "BOOLEAN"]>>, "d")
add_command("D", "BOOLEAN", <<["D", "BOOLEAN"], ["B", "BOOLEAN"], ["INTEGER", "INTEGER"], ["A", "INTEGER"], ["d", "c"], ["B", "INTEGER"]>>)
add_class(d)
add_query("c", "D", <<["b", "INTEGER"], ["a", "BOOLEAN"], ["B", "C"]>>, "D")
add_command("a", "b", <<["b", "INTEGER"], ["C", "a"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["B", "e"], ["b", "BOOLEAN"]>>)
add_command("c", "b", <<["B", "INTEGER"], ["a", "INTEGER"], ["B", "INTEGER"], ["b", "INTEGER"], ["D", "b"], ["INTEGER", "d"], ["d", "a"], ["INTEGER", "INTEGER"]>>)
add_call_chain(<<BOOLEAN,a,A,C,d>>)
numerical_negation
add_attribute("D", "e", "A")
add_call_chain(<<c,d,a,B>>)
add_call_chain(<<A,b,c,d,INTEGER,a>>)
int_value (17)
modulo
int_value (39)
add_command("e", "B", <<["C", "BOOLEAN"], ["d", "INTEGER"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["a", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["D", "d"]>>)
int_value (8)
add_command("A", "C", <<["D", "INTEGER"], ["e", "b"], ["b", "INTEGER"], ["D", "INTEGER"], ["B", "INTEGER"], ["B", "A"], ["C", "BOOLEAN"]>>)
add_query("d", "A", <<["b", "INTEGER"], ["b", "A"], ["A", "BOOLEAN"], ["d", "C"], ["c", "INTEGER"], ["a", "a"], ["A", "BOOLEAN"], ["c", "e"], ["a", "INTEGER"]>>, "C")
numerical_negation
bool_value (true)
add_attribute("B", "A", "c")
generate_java_code
generate_java_code
add_call_chain(<<INTEGER,a,D,C,e,d,e>>)
add_call_chain(<<C,BOOLEAN,d,A,BOOLEAN,c,B>>)
int_value (6)
add_call_chain(<<a,b,D,BOOLEAN,d,e>>)
type_check
add_query("c", "D", <<["c", "INTEGER"], ["d", "BOOLEAN"], ["C", "A"], ["d", "b"], ["B", "b"], ["a", "d"], ["B", "INTEGER"]>>, "b")
add_class(c)
add_command("b", "INTEGER", <<["A", "BOOLEAN"], ["c", "BOOLEAN"], ["a", "BOOLEAN"]>>)
disjunction
modulo
add_call_chain(<<C,D>>)
type_check
add_command("A", "C", <<["c", "BOOLEAN"], ["BOOLEAN", "C"], ["BOOLEAN", "BOOLEAN"], ["c", "A"]>>)
add_query("INTEGER", "A", <<["d", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "INTEGER"]>>, "c")
type_check
logical_negation
type_check
add_command("a", "c", <<["B", "BOOLEAN"], ["D", "INTEGER"], ["B", "c"], ["C", "INTEGER"], ["A", "INTEGER"]>>)
add_command("A", "d", <<["b", "e"], ["e", "INTEGER"], ["d", "b"], ["C", "b"], ["B", "INTEGER"], ["B", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "A"]>>)
subtraction
add_class(B)
modulo
numerical_negation
int_value (42)
bool_value (true)
disjunction
add_query("D", "b", <<["B", "C"], ["INTEGER", "BOOLEAN"]>>, "A")
add_command("b", "a", <<["d", "a"], ["e", "INTEGER"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["D", "INTEGER"], ["a", "INTEGER"], ["C", "BOOLEAN"], ["D", "C"]>>)
add_class(a)
bool_value (true)
conjunction
disjunction
bool_value (true)
add_call_chain(<<A,C,INTEGER,B,C,d,e,b>>)
add_call_chain(<<D>>)
add_query("d", "INTEGER", <<["C", "a"], ["INTEGER", "INTEGER"]>>, "b")
add_command("c", "C", <<["e", "BOOLEAN"]>>)
greater_than
add_query("D", "C", <<["BOOLEAN", "BOOLEAN"], ["D", "INTEGER"], ["e", "D"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["A", "b"], ["c", "INTEGER"], ["A", "BOOLEAN"]>>, "INTEGER")
type_check
modulo
type_check
add_query("C", "D", <<["c", "INTEGER"], ["B", "C"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["D", "B"], ["A", "INTEGER"], ["D", "INTEGER"], ["BOOLEAN", "b"], ["C", "BOOLEAN"]>>, "C")
add_call_chain(<<INTEGER>>)
add_call_chain(<<C,a,a,c,b,d,c,b,B>>)
add_command("C", "a", <<["c", "INTEGER"], ["A", "a"], ["c", "C"]>>)
add_call_chain(<<a,BOOLEAN>>)
bool_value (true)
numerical_negation
quotient
bool_value (false)
add_query("A", "d", <<["b", "INTEGER"], ["D", "c"], ["e", "BOOLEAN"], ["B", "INTEGER"], ["b", "INTEGER"], ["e", "INTEGER"], ["c", "BOOLEAN"], ["D", "c"], ["A", "B"]>>, "B")
disjunction
add_command("e", "D", <<["D", "INTEGER"], ["B", "INTEGER"], ["d", "b"], ["BOOLEAN", "INTEGER"]>>)
subtraction
add_command("e", "D", <<["a", "INTEGER"], ["a", "INTEGER"], ["a", "a"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["C", "a"]>>)
add_call_chain(<<B,b,b,c>>)
add_attribute("D", "A", "INTEGER")
add_call_chain(<<INTEGER,A,D,B,a,b,A>>)
less_than
add_class(C)
add_attribute("c", "BOOLEAN", "BOOLEAN")
add_attribute("B", "BOOLEAN", "BOOLEAN")
type_check
add_query("BOOLEAN", "d", <<["D", "BOOLEAN"], ["C", "INTEGER"], ["C", "b"], ["d", "BOOLEAN"], ["b", "A"], ["a", "e"], ["e", "A"], ["b", "b"], ["e", "d"]>>, "a")
bool_value (true)
less_than
greater_than
numerical_negation
int_value (25)
add_call_chain(<<b,a>>)
add_command("C", "c", <<["D", "b"], ["B", "INTEGER"], ["D", "INTEGER"], ["INTEGER", "INTEGER"], ["e", "D"], ["b", "INTEGER"], ["a", "INTEGER"]>>)
type_check
add_call_chain(<<BOOLEAN,e,A,A,INTEGER,d,e>>)
add_attribute("B", "b", "C")
add_query("B", "C", <<["c", "INTEGER"], ["b", "BOOLEAN"], ["A", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["d", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "d"]>>, "C")
add_attribute("c", "A", "INTEGER")
add_query("INTEGER", "c", <<["d", "INTEGER"], ["B", "BOOLEAN"], ["a", "INTEGER"], ["d", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "d"]>>, "d")
int_value (28)
add_attribute("C", "INTEGER", "BOOLEAN")
int_value (39)
add_command("B", "BOOLEAN", <<["e", "A"], ["C", "INTEGER"]>>)
add_query("A", "A", <<["a", "INTEGER"], ["BOOLEAN", "D"], ["d", "INTEGER"], ["e", "INTEGER"], ["A", "INTEGER"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["b", "INTEGER"], ["D", "BOOLEAN"]>>, "A")
modulo
add_class(d)
add_query("c", "b", <<["INTEGER", "BOOLEAN"], ["C", "INTEGER"], ["c", "INTEGER"], ["D", "B"], ["a", "INTEGER"], ["D", "BOOLEAN"], ["C", "INTEGER"]>>, "B")
type_check
add_call_chain(<<D,b,C,d,b,e>>)
add_command("b", "c", <<["D", "C"]>>)
logical_negation
int_value (29)
conjunction
add_command("b", "a", <<["c", "A"], ["b", "BOOLEAN"]>>)
generate_java_code
add_call_chain(<<A,e,B>>)
bool_value (true)
generate_java_code
disjunction
bool_value (true)
add_command("a", "C", <<["INTEGER", "A"], ["B", "D"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["b", "BOOLEAN"], ["a", "INTEGER"], ["C", "b"]>>)
type_check
add_call_chain(<<a>>)
numerical_negation
add_command("D", "C", <<["A", "C"], ["d", "INTEGER"], ["A", "e"], ["C", "d"], ["a", "INTEGER"], ["d", "INTEGER"], ["e", "BOOLEAN"], ["D", "B"], ["b", "d"]>>)
int_value (23)
add_call_chain(<<BOOLEAN>>)
int_value (44)
type_check
logical_negation
bool_value (true)
generate_java_code
add_call_chain(<<a>>)
add_query("b", "A", <<["C", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "A"], ["B", "INTEGER"], ["e", "INTEGER"], ["INTEGER", "BOOLEAN"]>>, "BOOLEAN")
add_query("INTEGER", "B", <<["B", "BOOLEAN"], ["A", "BOOLEAN"], ["INTEGER", "B"], ["D", "c"], ["e", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["D", "d"], ["a", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>, "B")
add_attribute("BOOLEAN", "c", "INTEGER")
logical_negation
generate_java_code
quotient
add_attribute("C", "c", "INTEGER")
add_command("c", "D", <<["C", "D"], ["e", "A"], ["c", "BOOLEAN"], ["C", "INTEGER"], ["a", "C"]>>)
disjunction
add_class(c)
add_attribute("INTEGER", "d", "BOOLEAN")
add_attribute("a", "d", "a")
add_attribute("B", "a", "C")
add_command("INTEGER", "BOOLEAN", <<["c", "c"], ["c", "C"], ["c", "BOOLEAN"]>>)
add_attribute("e", "a", "INTEGER")
add_query("b", "A", <<["BOOLEAN", "BOOLEAN"], ["e", "d"], ["d", "INTEGER"], ["C", "INTEGER"], ["a", "BOOLEAN"], ["c", "INTEGER"], ["e", "C"], ["d", "INTEGER"], ["BOOLEAN", "INTEGER"]>>, "D")
int_value (15)
