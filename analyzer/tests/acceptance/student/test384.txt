add_call_chain(<<B,b,b,C,b,d,INTEGER,INTEGER>>)
add_call_chain(<<B,D>>)
add_attribute("INTEGER", "e", "INTEGER")
add_call_chain(<<e,BOOLEAN,A,c,C,a,A>>)
add_call_chain(<<D,d,INTEGER,a,c,b,b>>)
type_check
add_attribute("BOOLEAN", "c", "a")
type_check
add_attribute("e", "d", "INTEGER")
type_check
add_call_chain(<<INTEGER,d,BOOLEAN,C,e,A,a,A,C>>)
generate_java_code
add_command("B", "A", <<["B", "INTEGER"], ["D", "INTEGER"], ["b", "d"]>>)
add_command("b", "BOOLEAN", <<["e", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "c"], ["b", "BOOLEAN"], ["B", "BOOLEAN"]>>)
add_attribute("a", "INTEGER", "A")
bool_value (false)
add_class(INTEGER)
conjunction
conjunction
add_command("a", "e", <<["d", "INTEGER"], ["C", "B"]>>)
numerical_negation
add_query("B", "c", <<["D", "B"], ["A", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "B"], ["c", "e"], ["b", "BOOLEAN"], ["C", "BOOLEAN"], ["INTEGER", "A"]>>, "b")
disjunction
bool_value (true)
add_query("B", "A", <<["A", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "INTEGER"], ["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "INTEGER"]>>, "b")
add_call_chain(<<b,a,BOOLEAN,B,A,B>>)
add_call_chain(<<BOOLEAN>>)
generate_java_code
add_class(a)
generate_java_code
add_query("D", "B", <<["d", "A"], ["C", "INTEGER"], ["d", "INTEGER"], ["C", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>, "b")
add_attribute("BOOLEAN", "b", "BOOLEAN")
add_query("d", "a", <<["B", "B"], ["C", "C"], ["BOOLEAN", "D"], ["B", "B"], ["A", "INTEGER"], ["B", "e"], ["c", "BOOLEAN"], ["D", "BOOLEAN"]>>, "C")
add_query("b", "C", <<["A", "INTEGER"], ["a", "BOOLEAN"], ["BOOLEAN", "a"], ["b", "BOOLEAN"], ["D", "INTEGER"]>>, "B")
numerical_negation
add_class(e)
int_value (1)
conjunction
add_class(a)
bool_value (false)
int_value (41)
type_check
add_class(c)
logical_negation
quotient
bool_value (true)
add_query("C", "c", <<["D", "INTEGER"], ["a", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "e"], ["B", "INTEGER"]>>, "B")
add_attribute("e", "A", "BOOLEAN")
add_attribute("C", "a", "INTEGER")
add_command("c", "C", <<["D", "INTEGER"], ["d", "INTEGER"], ["A", "D"], ["C", "e"], ["d", "INTEGER"], ["BOOLEAN", "INTEGER"], ["B", "INTEGER"], ["a", "BOOLEAN"], ["INTEGER", "INTEGER"]>>)
add_command("C", "C", <<["D", "BOOLEAN"], ["a", "C"]>>)
add_attribute("D", "b", "d")
quotient
generate_java_code
add_attribute("C", "C", "a")
add_query("a", "e", <<["B", "INTEGER"], ["B", "BOOLEAN"]>>, "BOOLEAN")
add_class(D)
generate_java_code
type_check
add_call_chain(<<e,d,d,b,BOOLEAN,D,D,C>>)
less_than
int_value (12)
disjunction
add_call_chain(<<a,c,C,INTEGER,a,c>>)
bool_value (false)
modulo
add_class(c)
add_call_chain(<<a,C,b,INTEGER,D,e,BOOLEAN>>)
add_call_chain(<<D>>)
type_check
bool_value (true)
add_class(e)
add_query("D", "a", <<["e", "c"]>>, "C")
numerical_negation
logical_negation
add_query("e", "BOOLEAN", <<["B", "e"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["C", "B"], ["c", "INTEGER"], ["D", "INTEGER"], ["a", "BOOLEAN"]>>, "A")
add_call_chain(<<C,D,d,D,e>>)
add_attribute("INTEGER", "c", "C")
greater_than
conjunction
int_value (40)
logical_negation
bool_value (true)
add_command("a", "B", <<["C", "BOOLEAN"], ["b", "D"], ["A", "BOOLEAN"]>>)
add_attribute("D", "b", "INTEGER")
bool_value (true)
add_call_chain(<<d,B,C,B,b,d,B>>)
add_query("e", "d", <<["INTEGER", "B"], ["D", "a"], ["INTEGER", "BOOLEAN"], ["e", "INTEGER"], ["b", "BOOLEAN"], ["a", "BOOLEAN"]>>, "C")
logical_negation
int_value (34)
add_attribute("A", "C", "INTEGER")
conjunction
add_attribute("d", "C", "BOOLEAN")
subtraction
add_call_chain(<<e,a>>)
logical_negation
less_than
disjunction
add_command("C", "a", <<["C", "INTEGER"], ["e", "INTEGER"], ["b", "a"]>>)
add_call_chain(<<B,e,D,d,C>>)
bool_value (true)
add_call_chain(<<e,e,D,b,a,a,B>>)
add_call_chain(<<d,B,b,C,INTEGER,C>>)
add_attribute("b", "A", "BOOLEAN")
int_value (49)
add_query("b", "A", <<["B", "BOOLEAN"], ["D", "b"], ["C", "b"], ["INTEGER", "INTEGER"], ["D", "INTEGER"], ["A", "INTEGER"], ["A", "INTEGER"], ["BOOLEAN", "B"], ["B", "A"]>>, "D")
logical_negation
multiplication
int_value (9)
equals
add_call_chain(<<d>>)
add_query("C", "d", <<["A", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["A", "INTEGER"]>>, "B")
conjunction
add_attribute("A", "e", "INTEGER")
bool_value (true)
add_call_chain(<<C,e,D>>)
disjunction
add_class(A)
add_call_chain(<<c,b,C>>)
add_command("C", "c", <<["B", "A"], ["B", "BOOLEAN"], ["e", "BOOLEAN"], ["d", "d"], ["INTEGER", "B"], ["D", "INTEGER"]>>)
add_class(d)
add_call_chain(<<INTEGER,e,D,A,a,b,INTEGER>>)
add_attribute("A", "A", "BOOLEAN")
logical_negation
greater_than
int_value (34)
bool_value (false)
add_call_chain(<<c,d,b,BOOLEAN,a>>)
add_call_chain(<<d,b,d,C,d,C,A,B,e>>)
less_than
add_call_chain(<<d,a,a,d,b,a,BOOLEAN,BOOLEAN>>)
add_attribute("D", "d", "a")
add_call_chain(<<B,B,C,C,C,B,C>>)
add_query("C", "A", <<["C", "INTEGER"], ["b", "BOOLEAN"], ["D", "BOOLEAN"], ["INTEGER", "INTEGER"]>>, "A")
add_query("INTEGER", "c", <<["a", "C"], ["BOOLEAN", "C"], ["A", "INTEGER"], ["a", "A"], ["B", "INTEGER"], ["a", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["e", "b"], ["c", "c"]>>, "e")
logical_negation
add_query("D", "C", <<["B", "BOOLEAN"], ["e", "INTEGER"], ["e", "b"], ["b", "BOOLEAN"], ["C", "INTEGER"], ["D", "INTEGER"]>>, "a")
add_class(B)
numerical_negation
bool_value (false)
add_call_chain(<<B,B,INTEGER,C>>)
add_call_chain(<<e,a,INTEGER,C,c>>)
add_call_chain(<<BOOLEAN,d,BOOLEAN>>)
bool_value (true)
logical_negation
add_query("c", "B", <<["d", "BOOLEAN"]>>, "c")
add_attribute("b", "b", "BOOLEAN")
add_call_chain(<<a,C,A>>)
generate_java_code
numerical_negation
add_attribute("a", "D", "BOOLEAN")
add_call_chain(<<BOOLEAN,BOOLEAN,A>>)
add_command("e", "b", <<["B", "INTEGER"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["c", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "INTEGER"], ["c", "BOOLEAN"]>>)
generate_java_code
add_command("INTEGER", "A", <<["B", "B"], ["B", "e"], ["C", "INTEGER"], ["a", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["B", "C"]>>)
logical_negation
add_call_chain(<<e,D,D,D,D,d,c,c>>)
int_value (29)
logical_negation
equals
add_query("B", "D", <<["A", "BOOLEAN"], ["e", "INTEGER"], ["D", "INTEGER"]>>, "b")
add_class(e)
bool_value (true)
numerical_negation
add_class(e)
less_than
add_attribute("e", "C", "BOOLEAN")
bool_value (true)
add_call_chain(<<e,D,INTEGER,a,A,c,A,A,A>>)
add_attribute("D", "e", "BOOLEAN")
add_call_chain(<<e,INTEGER,e>>)
int_value (20)
int_value (40)
add_call_chain(<<e,d,INTEGER,A,C>>)
add_attribute("e", "C", "A")
add_attribute("B", "B", "INTEGER")
disjunction
numerical_negation
generate_java_code
add_attribute("d", "d", "INTEGER")
modulo
type_check
add_query("INTEGER", "B", <<["D", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["B", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>, "b")
add_attribute("D", "c", "INTEGER")
add_query("A", "c", <<["e", "C"], ["c", "BOOLEAN"], ["BOOLEAN", "b"], ["a", "a"], ["A", "INTEGER"]>>, "C")
add_attribute("C", "D", "BOOLEAN")
multiplication
logical_negation
add_query("c", "d", <<["INTEGER", "INTEGER"], ["a", "BOOLEAN"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["D", "c"], ["BOOLEAN", "INTEGER"], ["a", "C"], ["D", "BOOLEAN"], ["A", "BOOLEAN"]>>, "A")
numerical_negation
numerical_negation
generate_java_code
bool_value (false)
type_check
int_value (21)
int_value (6)
int_value (27)
logical_negation
bool_value (false)
equals
add_command("INTEGER", "b", <<["BOOLEAN", "BOOLEAN"], ["D", "INTEGER"], ["c", "INTEGER"], ["B", "INTEGER"], ["e", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "A"]>>)
