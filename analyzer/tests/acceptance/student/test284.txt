add_call_chain(<<D,D>>)
int_value (19)
add_call_chain(<<B,e,INTEGER,a,a,B>>)
equals
multiplication
numerical_negation
generate_java_code
add_call_chain(<<D,INTEGER,b>>)
logical_negation
add_class(b)
add_query("a", "D", <<["c", "B"], ["B", "INTEGER"], ["INTEGER", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "BOOLEAN"]>>, "b")
add_class(b)
greater_than
generate_java_code
add_class(e)
bool_value (true)
int_value (16)
numerical_negation
type_check
numerical_negation
bool_value (false)
bool_value (false)
add_attribute("INTEGER", "C", "INTEGER")
logical_negation
add_query("INTEGER", "INTEGER", <<["c", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "B"], ["a", "INTEGER"], ["d", "BOOLEAN"], ["a", "BOOLEAN"], ["BOOLEAN", "d"], ["c", "INTEGER"], ["d", "BOOLEAN"]>>, "BOOLEAN")
int_value (19)
add_class(A)
add_attribute("d", "b", "D")
bool_value (true)
bool_value (false)
disjunction
numerical_negation
add_call_chain(<<BOOLEAN,D>>)
add_attribute("e", "B", "INTEGER")
int_value (15)
add_call_chain(<<C>>)
logical_negation
bool_value (true)
add_call_chain(<<INTEGER,b,B,A,a>>)
logical_negation
add_call_chain(<<C,BOOLEAN,C,e,b,BOOLEAN,b,INTEGER>>)
add_query("b", "INTEGER", <<["D", "BOOLEAN"], ["d", "BOOLEAN"], ["d", "e"]>>, "C")
generate_java_code
bool_value (true)
logical_negation
add_query("INTEGER", "b", <<["B", "a"], ["d", "INTEGER"]>>, "a")
logical_negation
add_query("C", "e", <<["C", "A"]>>, "B")
add_query("A", "C", <<["D", "b"], ["d", "BOOLEAN"], ["D", "INTEGER"], ["c", "BOOLEAN"], ["C", "a"], ["A", "b"], ["c", "C"], ["INTEGER", "b"], ["d", "BOOLEAN"]>>, "C")
add_call_chain(<<d,D,b,B>>)
add_call_chain(<<B,A,c,B,BOOLEAN,B,B>>)
int_value (24)
add_attribute("a", "INTEGER", "INTEGER")
generate_java_code
add_command("A", "C", <<["b", "INTEGER"], ["INTEGER", "B"], ["D", "b"], ["B", "INTEGER"], ["d", "INTEGER"]>>)
numerical_negation
add_call_chain(<<C,d,BOOLEAN,A,a>>)
int_value (39)
add_call_chain(<<B>>)
less_than
numerical_negation
add_attribute("A", "a", "INTEGER")
add_command("C", "e", <<["e", "BOOLEAN"], ["c", "d"]>>)
add_attribute("e", "C", "BOOLEAN")
equals
int_value (32)
less_than
bool_value (true)
add_attribute("e", "B", "INTEGER")
add_attribute("d", "a", "BOOLEAN")
add_class(B)
add_query("b", "a", <<["d", "b"], ["d", "INTEGER"], ["B", "B"], ["C", "C"], ["b", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "BOOLEAN"]>>, "a")
add_query("b", "INTEGER", <<["C", "BOOLEAN"], ["e", "INTEGER"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "BOOLEAN"]>>, "D")
logical_negation
add_query("d", "b", <<["D", "BOOLEAN"], ["e", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "BOOLEAN"], ["e", "BOOLEAN"], ["BOOLEAN", "B"], ["e", "C"]>>, "C")
add_command("BOOLEAN", "BOOLEAN", <<["INTEGER", "D"], ["a", "INTEGER"]>>)
add_call_chain(<<b>>)
type_check
add_command("a", "B", <<["B", "C"], ["A", "INTEGER"]>>)
greater_than
logical_negation
bool_value (true)
add_command("D", "A", <<["a", "INTEGER"], ["a", "INTEGER"], ["e", "INTEGER"], ["e", "A"], ["C", "BOOLEAN"], ["B", "B"], ["B", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["BOOLEAN", "D"]>>)
greater_than
add_call_chain(<<d,a,a,B,e,b,D>>)
add_call_chain(<<B,B,c,INTEGER,D,a>>)
add_attribute("a", "c", "INTEGER")
add_attribute("a", "b", "BOOLEAN")
add_call_chain(<<INTEGER,e,B>>)
add_call_chain(<<B,c,BOOLEAN,C,B,d,BOOLEAN,b>>)
subtraction
add_query("a", "A", <<["B", "A"]>>, "e")
type_check
numerical_negation
add_call_chain(<<b,C,b,INTEGER>>)
quotient
int_value (4)
add_call_chain(<<e,c>>)
int_value (17)
add_call_chain(<<d,BOOLEAN,e,B,a,BOOLEAN,a>>)
int_value (33)
logical_negation
multiplication
quotient
conjunction
logical_negation
add_attribute("d", "e", "INTEGER")
add_attribute("BOOLEAN", "INTEGER", "BOOLEAN")
add_call_chain(<<a,b,INTEGER,e>>)
add_command("BOOLEAN", "B", <<["INTEGER", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["B", "BOOLEAN"]>>)
add_call_chain(<<INTEGER,C,D,e,a>>)
add_query("e", "A", <<["d", "INTEGER"], ["d", "INTEGER"]>>, "D")
add_call_chain(<<B,A,D,INTEGER,B,e>>)
logical_negation
add_query("B", "b", <<["e", "BOOLEAN"], ["B", "C"], ["D", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["c", "BOOLEAN"], ["b", "INTEGER"], ["INTEGER", "d"], ["A", "c"]>>, "a")
numerical_negation
logical_negation
add_command("A", "B", <<["a", "BOOLEAN"], ["C", "a"], ["D", "C"], ["A", "a"], ["A", "INTEGER"], ["B", "e"]>>)
disjunction
add_query("D", "D", <<["b", "BOOLEAN"], ["D", "b"]>>, "C")
logical_negation
generate_java_code
add_command("a", "D", <<["D", "a"], ["B", "INTEGER"]>>)
add_command("B", "D", <<["B", "BOOLEAN"]>>)
add_call_chain(<<C,D,A,b,C,B,D,C,C>>)
add_call_chain(<<c,B>>)
add_query("C", "C", <<["B", "B"], ["D", "INTEGER"], ["B", "BOOLEAN"]>>, "D")
add_call_chain(<<C,e,B,c,A,a,D,e>>)
add_command("BOOLEAN", "D", <<["C", "BOOLEAN"], ["e", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "c"], ["D", "INTEGER"], ["e", "b"]>>)
bool_value (false)
add_command("INTEGER", "d", <<["d", "BOOLEAN"]>>)
add_command("B", "b", <<["C", "BOOLEAN"], ["B", "C"], ["d", "A"], ["B", "INTEGER"], ["B", "A"], ["D", "INTEGER"], ["b", "INTEGER"], ["C", "BOOLEAN"]>>)
add_query("b", "A", <<["B", "INTEGER"]>>, "D")
logical_negation
add_attribute("BOOLEAN", "b", "BOOLEAN")
add_command("c", "a", <<["D", "e"], ["B", "BOOLEAN"], ["B", "INTEGER"], ["e", "BOOLEAN"], ["BOOLEAN", "b"], ["B", "INTEGER"], ["c", "BOOLEAN"]>>)
bool_value (false)
add_call_chain(<<e,B>>)
type_check
conjunction
equals
int_value (6)
add_command("B", "a", <<["b", "BOOLEAN"]>>)
int_value (14)
logical_negation
add_command("e", "d", <<["a", "INTEGER"], ["e", "BOOLEAN"], ["d", "BOOLEAN"], ["e", "B"]>>)
less_than
type_check
addition
int_value (24)
add_attribute("D", "D", "INTEGER")
logical_negation
add_class(B)
bool_value (true)
add_call_chain(<<B,C,a,b,e,D,A,BOOLEAN>>)
add_command("C", "A", <<["a", "INTEGER"], ["B", "BOOLEAN"], ["C", "B"], ["d", "INTEGER"], ["BOOLEAN", "INTEGER"], ["c", "INTEGER"]>>)
conjunction
bool_value (false)
modulo
add_call_chain(<<C,A,C,b,e,a,c,D,C>>)
numerical_negation
add_query("A", "B", <<["b", "INTEGER"], ["d", "BOOLEAN"], ["A", "INTEGER"], ["b", "BOOLEAN"], ["e", "BOOLEAN"], ["c", "B"]>>, "D")
add_call_chain(<<a,a,A,A>>)
add_query("C", "c", <<["D", "BOOLEAN"], ["e", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "BOOLEAN"]>>, "INTEGER")
generate_java_code
add_attribute("d", "c", "INTEGER")
add_query("e", "d", <<["e", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "B"], ["a", "INTEGER"], ["A", "INTEGER"], ["C", "INTEGER"], ["d", "INTEGER"], ["a", "D"]>>, "C")
add_call_chain(<<b,C>>)
logical_negation
add_call_chain(<<c,D,INTEGER>>)
logical_negation
add_attribute("C", "A", "BOOLEAN")
generate_java_code
conjunction
add_call_chain(<<D,d,B,c>>)
numerical_negation
add_attribute("d", "c", "BOOLEAN")
add_call_chain(<<e,d,e,C,a>>)
add_command("D", "INTEGER", <<["d", "INTEGER"], ["BOOLEAN", "INTEGER"], ["a", "BOOLEAN"], ["D", "INTEGER"], ["BOOLEAN", "A"], ["B", "BOOLEAN"], ["b", "INTEGER"]>>)
logical_negation
add_call_chain(<<B,A,d,d,D,C>>)
int_value (16)
add_attribute("A", "b", "BOOLEAN")
int_value (45)
subtraction
logical_negation
numerical_negation
bool_value (false)
add_attribute("b", "B", "B")
add_attribute("b", "A", "INTEGER")
add_call_chain(<<C,D,INTEGER,B>>)
add_class(d)
less_than
add_attribute("BOOLEAN", "C", "D")
add_attribute("C", "C", "BOOLEAN")
bool_value (true)
equals
add_attribute("a", "d", "BOOLEAN")
generate_java_code
type_check
logical_negation
bool_value (true)
add_attribute("BOOLEAN", "d", "BOOLEAN")
type_check
add_call_chain(<<d,B>>)
add_command("c", "d", <<["e", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["D", "B"]>>)
generate_java_code
add_call_chain(<<INTEGER,INTEGER,a,d,c,d>>)
bool_value (true)
add_attribute("C", "d", "a")
bool_value (true)
add_query("a", "d", <<["c", "BOOLEAN"], ["c", "INTEGER"], ["c", "INTEGER"], ["a", "D"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["D", "INTEGER"], ["c", "BOOLEAN"]>>, "BOOLEAN")
conjunction
add_attribute("a", "BOOLEAN", "BOOLEAN")
generate_java_code
logical_negation
