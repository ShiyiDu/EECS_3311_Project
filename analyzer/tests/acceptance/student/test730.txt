logical_negation
add_call_chain(<<C,B>>)
quotient
add_call_chain(<<B,A,d>>)
logical_negation
int_value (4)
add_query("INTEGER", "B", <<["INTEGER", "INTEGER"]>>, "B")
add_query("A", "C", <<["C", "INTEGER"], ["D", "d"], ["C", "INTEGER"], ["e", "a"], ["A", "D"], ["c", "INTEGER"], ["B", "INTEGER"]>>, "a")
numerical_negation
type_check
add_call_chain(<<a,D,a,d,INTEGER,B,d,D,D>>)
bool_value (false)
add_class(C)
conjunction
numerical_negation
disjunction
add_call_chain(<<INTEGER,C,B>>)
bool_value (true)
conjunction
add_query("b", "a", <<["C", "INTEGER"], ["B", "BOOLEAN"], ["e", "INTEGER"], ["D", "BOOLEAN"], ["c", "D"], ["A", "INTEGER"], ["c", "b"]>>, "D")
add_class(e)
add_call_chain(<<C,d,C,A>>)
add_class(b)
logical_negation
bool_value (false)
add_command("e", "INTEGER", <<["A", "INTEGER"], ["d", "INTEGER"], ["b", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["d", "INTEGER"], ["C", "A"], ["e", "BOOLEAN"], ["A", "INTEGER"]>>)
logical_negation
add_command("e", "C", <<["A", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["B", "c"], ["INTEGER", "INTEGER"], ["a", "C"]>>)
add_query("e", "A", <<["A", "INTEGER"], ["c", "BOOLEAN"]>>, "d")
bool_value (true)
bool_value (true)
add_command("e", "c", <<["B", "BOOLEAN"], ["d", "INTEGER"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "INTEGER"], ["b", "INTEGER"], ["A", "C"]>>)
bool_value (false)
add_attribute("c", "d", "b")
add_attribute("D", "c", "e")
add_call_chain(<<a,B,b>>)
add_attribute("e", "c", "INTEGER")
bool_value (true)
bool_value (true)
add_attribute("INTEGER", "B", "BOOLEAN")
add_call_chain(<<INTEGER,D,D>>)
numerical_negation
add_query("A", "d", <<["D", "INTEGER"], ["C", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["c", "BOOLEAN"], ["c", "INTEGER"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["a", "INTEGER"], ["b", "BOOLEAN"]>>, "INTEGER")
add_call_chain(<<B,a,C,A>>)
type_check
add_query("D", "a", <<["A", "BOOLEAN"], ["C", "b"], ["C", "BOOLEAN"], ["e", "INTEGER"]>>, "d")
numerical_negation
generate_java_code
add_class(INTEGER)
add_attribute("B", "d", "BOOLEAN")
generate_java_code
bool_value (false)
conjunction
int_value (32)
numerical_negation
numerical_negation
logical_negation
add_query("e", "d", <<["B", "C"], ["e", "B"], ["d", "BOOLEAN"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "C"], ["c", "e"]>>, "C")
logical_negation
logical_negation
generate_java_code
add_attribute("b", "b", "d")
add_attribute("B", "C", "INTEGER")
bool_value (true)
add_command("B", "C", <<["e", "INTEGER"]>>)
add_command("C", "INTEGER", <<["D", "INTEGER"], ["INTEGER", "e"]>>)
add_class(A)
add_class(INTEGER)
int_value (1)
bool_value (false)
numerical_negation
int_value (15)
int_value (1)
bool_value (false)
add_command("a", "B", <<["C", "b"], ["B", "BOOLEAN"]>>)
equals
type_check
add_attribute("C", "d", "BOOLEAN")
add_command("c", "INTEGER", <<["b", "D"], ["INTEGER", "e"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "D"], ["BOOLEAN", "INTEGER"], ["b", "BOOLEAN"], ["C", "INTEGER"]>>)
add_query("BOOLEAN", "D", <<["INTEGER", "D"], ["b", "BOOLEAN"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["d", "b"], ["a", "BOOLEAN"], ["e", "INTEGER"]>>, "d")
add_attribute("INTEGER", "INTEGER", "BOOLEAN")
generate_java_code
add_attribute("C", "INTEGER", "INTEGER")
add_attribute("C", "D", "INTEGER")
less_than
generate_java_code
add_command("d", "d", <<["D", "BOOLEAN"], ["d", "BOOLEAN"], ["e", "BOOLEAN"]>>)
int_value (13)
add_class(c)
int_value (33)
int_value (27)
add_query("BOOLEAN", "D", <<["D", "BOOLEAN"], ["a", "INTEGER"], ["a", "INTEGER"], ["B", "BOOLEAN"], ["a", "B"]>>, "A")
add_command("d", "a", <<["e", "INTEGER"], ["C", "c"], ["A", "INTEGER"], ["a", "BOOLEAN"], ["C", "a"], ["C", "a"]>>)
bool_value (false)
add_command("a", "A", <<["B", "BOOLEAN"], ["B", "D"], ["a", "BOOLEAN"], ["b", "INTEGER"], ["a", "c"], ["e", "BOOLEAN"], ["d", "d"], ["A", "INTEGER"], ["e", "B"]>>)
add_call_chain(<<A>>)
add_attribute("e", "c", "BOOLEAN")
conjunction
logical_negation
add_attribute("a", "B", "INTEGER")
logical_negation
add_query("INTEGER", "a", <<["e", "BOOLEAN"], ["e", "d"], ["INTEGER", "INTEGER"], ["c", "BOOLEAN"]>>, "D")
logical_negation
conjunction
int_value (33)
add_command("e", "B", <<["b", "A"]>>)
add_call_chain(<<d,B,B>>)
type_check
numerical_negation
type_check
numerical_negation
subtraction
bool_value (false)
int_value (10)
add_call_chain(<<A,a,D,B,C,d>>)
add_command("b", "C", <<["a", "INTEGER"], ["INTEGER", "BOOLEAN"], ["a", "INTEGER"], ["D", "b"]>>)
generate_java_code
add_call_chain(<<d,INTEGER,C,B,A,e>>)
numerical_negation
type_check
int_value (44)
logical_negation
int_value (30)
add_attribute("D", "D", "BOOLEAN")
add_class(D)
int_value (9)
logical_negation
less_than
add_command("D", "c", <<["B", "c"], ["A", "INTEGER"], ["A", "INTEGER"], ["c", "BOOLEAN"]>>)
add_query("C", "c", <<["e", "C"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["B", "A"]>>, "B")
add_attribute("d", "C", "C")
int_value (3)
add_call_chain(<<D,c,B>>)
type_check
numerical_negation
int_value (18)
logical_negation
bool_value (false)
add_attribute("b", "a", "A")
numerical_negation
add_call_chain(<<e,B,A,e,a,b,e>>)
add_call_chain(<<A,b,INTEGER,c>>)
equals
less_than
add_attribute("B", "D", "BOOLEAN")
add_call_chain(<<A,a,a,A,C,C>>)
add_call_chain(<<C,BOOLEAN,a,d,e,d,c>>)
add_command("b", "a", <<["c", "b"], ["B", "B"], ["d", "INTEGER"], ["BOOLEAN", "INTEGER"], ["d", "INTEGER"]>>)
logical_negation
logical_negation
add_call_chain(<<b,C,A>>)
numerical_negation
quotient
add_call_chain(<<a,b,C,A,e>>)
add_query("A", "INTEGER", <<["e", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "d"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["D", "B"], ["a", "c"], ["C", "BOOLEAN"], ["c", "BOOLEAN"]>>, "INTEGER")
add_call_chain(<<b,e,A,d>>)
add_attribute("INTEGER", "A", "INTEGER")
add_call_chain(<<B,a,D>>)
add_command("B", "e", <<["e", "BOOLEAN"]>>)
add_command("b", "C", <<["C", "c"], ["e", "BOOLEAN"], ["B", "BOOLEAN"]>>)
add_command("A", "d", <<["b", "INTEGER"], ["A", "INTEGER"], ["d", "A"], ["B", "INTEGER"], ["e", "INTEGER"], ["c", "a"], ["e", "INTEGER"], ["e", "D"], ["d", "e"]>>)
multiplication
generate_java_code
int_value (20)
add_query("C", "d", <<["B", "a"], ["A", "A"], ["B", "INTEGER"], ["D", "INTEGER"]>>, "A")
add_call_chain(<<d,B,e,BOOLEAN,C>>)
add_attribute("a", "D", "INTEGER")
add_call_chain(<<D,e>>)
numerical_negation
add_query("B", "C", <<["C", "INTEGER"], ["d", "INTEGER"], ["a", "BOOLEAN"], ["d", "INTEGER"], ["INTEGER", "INTEGER"], ["D", "BOOLEAN"], ["C", "INTEGER"]>>, "b")
add_attribute("c", "INTEGER", "BOOLEAN")
add_attribute("B", "b", "BOOLEAN")
add_call_chain(<<B,INTEGER,a,e,C,INTEGER,c,A,e>>)
conjunction
addition
int_value (27)
add_command("c", "C", <<["c", "INTEGER"], ["C", "BOOLEAN"], ["B", "BOOLEAN"]>>)
add_query("D", "BOOLEAN", <<["C", "D"], ["b", "d"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["INTEGER", "c"], ["b", "BOOLEAN"], ["a", "INTEGER"], ["c", "b"]>>, "e")
add_query("C", "b", <<["D", "A"], ["D", "BOOLEAN"], ["A", "c"], ["D", "e"]>>, "C")
add_command("A", "b", <<["b", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "a"], ["d", "INTEGER"], ["A", "C"], ["b", "C"]>>)
add_class(B)
numerical_negation
subtraction
add_query("A", "A", <<["C", "b"], ["A", "INTEGER"]>>, "INTEGER")
bool_value (true)
type_check
add_class(e)
quotient
add_command("BOOLEAN", "d", <<["INTEGER", "BOOLEAN"], ["d", "INTEGER"]>>)
add_call_chain(<<b,d,B,b,INTEGER,D,c,e,BOOLEAN>>)
add_command("INTEGER", "C", <<["B", "BOOLEAN"], ["D", "INTEGER"], ["A", "INTEGER"], ["a", "BOOLEAN"], ["BOOLEAN", "D"], ["B", "BOOLEAN"], ["d", "A"]>>)
logical_negation
add_call_chain(<<D,C,C>>)
quotient
add_command("c", "e", <<["INTEGER", "BOOLEAN"], ["d", "C"], ["b", "c"], ["d", "INTEGER"], ["b", "INTEGER"], ["INTEGER", "BOOLEAN"], ["C", "a"], ["BOOLEAN", "INTEGER"]>>)
add_command("b", "c", <<["e", "c"], ["e", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "D"], ["e", "INTEGER"], ["b", "INTEGER"], ["e", "BOOLEAN"], ["B", "BOOLEAN"]>>)
numerical_negation
add_attribute("D", "A", "BOOLEAN")
bool_value (false)
add_call_chain(<<D,A,a,d,BOOLEAN>>)
add_call_chain(<<INTEGER,b,D,c,e,c>>)
add_call_chain(<<a,C,B,c,B,d,d,e>>)
add_query("C", "D", <<["C", "INTEGER"], ["D", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["e", "BOOLEAN"], ["d", "BOOLEAN"]>>, "b")
add_query("a", "c", <<["A", "C"], ["a", "INTEGER"], ["C", "INTEGER"], ["e", "INTEGER"], ["b", "B"], ["b", "d"], ["C", "BOOLEAN"]>>, "d")
add_call_chain(<<A,C,c,C>>)
