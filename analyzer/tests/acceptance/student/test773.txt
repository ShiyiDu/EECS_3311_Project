add_command("C", "C", <<["INTEGER", "c"], ["BOOLEAN", "BOOLEAN"], ["A", "b"], ["a", "INTEGER"], ["INTEGER", "INTEGER"]>>)
greater_than
disjunction
add_command("c", "e", <<["d", "INTEGER"], ["b", "A"], ["b", "C"], ["c", "BOOLEAN"], ["e", "INTEGER"], ["A", "INTEGER"], ["c", "d"]>>)
generate_java_code
add_call_chain(<<C>>)
int_value (28)
generate_java_code
generate_java_code
add_query("A", "C", <<["A", "INTEGER"], ["e", "BOOLEAN"], ["c", "INTEGER"], ["c", "C"]>>, "INTEGER")
disjunction
add_query("B", "INTEGER", <<["a", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "B"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "BOOLEAN"]>>, "D")
add_call_chain(<<a,b,b,BOOLEAN,c,B,e>>)
quotient
logical_negation
add_attribute("D", "B", "BOOLEAN")
add_class(C)
int_value (46)
add_class(A)
add_query("D", "INTEGER", <<["c", "a"], ["c", "A"], ["D", "INTEGER"], ["c", "C"], ["B", "a"], ["C", "INTEGER"], ["a", "C"], ["D", "INTEGER"]>>, "BOOLEAN")
bool_value (false)
int_value (3)
add_class(c)
int_value (41)
add_attribute("INTEGER", "b", "INTEGER")
add_class(e)
add_query("c", "a", <<["D", "BOOLEAN"], ["A", "INTEGER"], ["e", "INTEGER"], ["C", "INTEGER"], ["b", "BOOLEAN"], ["C", "c"], ["D", "C"], ["A", "C"], ["C", "d"]>>, "a")
add_query("e", "B", <<["d", "BOOLEAN"], ["c", "B"]>>, "e")
greater_than
add_call_chain(<<C>>)
add_attribute("e", "d", "d")
generate_java_code
add_class(a)
add_query("BOOLEAN", "B", <<["e", "BOOLEAN"]>>, "D")
add_command("D", "B", <<["d", "D"], ["INTEGER", "BOOLEAN"]>>)
numerical_negation
add_command("d", "b", <<["D", "BOOLEAN"], ["b", "INTEGER"], ["a", "BOOLEAN"]>>)
add_command("D", "d", <<["B", "INTEGER"], ["b", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["e", "INTEGER"], ["C", "INTEGER"], ["A", "INTEGER"]>>)
type_check
add_command("b", "BOOLEAN", <<["b", "INTEGER"], ["c", "A"], ["BOOLEAN", "INTEGER"], ["c", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "A"], ["d", "BOOLEAN"], ["A", "INTEGER"], ["C", "BOOLEAN"]>>)
add_call_chain(<<b,C>>)
add_query("C", "B", <<["e", "INTEGER"], ["e", "INTEGER"], ["B", "d"]>>, "A")
generate_java_code
add_attribute("BOOLEAN", "b", "d")
bool_value (true)
generate_java_code
conjunction
equals
bool_value (true)
logical_negation
equals
logical_negation
add_class(BOOLEAN)
equals
add_query("e", "d", <<["e", "BOOLEAN"], ["BOOLEAN", "D"]>>, "d")
generate_java_code
add_attribute("B", "D", "BOOLEAN")
int_value (44)
add_attribute("B", "D", "BOOLEAN")
generate_java_code
int_value (47)
add_command("C", "B", <<["C", "INTEGER"], ["e", "BOOLEAN"], ["d", "INTEGER"], ["A", "d"], ["BOOLEAN", "BOOLEAN"], ["e", "INTEGER"], ["c", "d"]>>)
add_call_chain(<<A,B>>)
int_value (40)
add_command("b", "b", <<["e", "BOOLEAN"], ["e", "INTEGER"], ["a", "BOOLEAN"], ["A", "A"], ["B", "INTEGER"]>>)
conjunction
add_attribute("a", "C", "BOOLEAN")
int_value (34)
generate_java_code
add_query("A", "C", <<["c", "INTEGER"], ["A", "INTEGER"], ["a", "c"]>>, "e")
type_check
equals
numerical_negation
generate_java_code
add_class(e)
add_attribute("a", "B", "D")
add_query("C", "B", <<["b", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["INTEGER", "a"], ["C", "BOOLEAN"], ["D", "b"], ["c", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "A"]>>, "d")
add_attribute("B", "a", "b")
add_call_chain(<<D>>)
int_value (3)
add_class(D)
add_command("d", "D", <<["A", "BOOLEAN"]>>)
int_value (41)
add_query("A", "C", <<["C", "INTEGER"], ["b", "INTEGER"]>>, "D")
add_command("C", "e", <<["INTEGER", "BOOLEAN"], ["C", "INTEGER"], ["B", "A"], ["A", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["a", "INTEGER"], ["D", "INTEGER"]>>)
add_attribute("c", "d", "BOOLEAN")
subtraction
add_command("D", "B", <<["e", "BOOLEAN"], ["c", "BOOLEAN"]>>)
bool_value (false)
numerical_negation
add_command("d", "C", <<["a", "a"], ["c", "e"], ["b", "INTEGER"]>>)
greater_than
add_call_chain(<<D,C,e,INTEGER,a>>)
int_value (49)
add_attribute("e", "a", "B")
quotient
int_value (16)
add_command("B", "d", <<["A", "d"], ["A", "BOOLEAN"], ["C", "d"], ["e", "c"], ["a", "D"], ["a", "B"], ["A", "B"]>>)
logical_negation
numerical_negation
add_call_chain(<<c,e,b>>)
add_query("a", "A", <<["B", "INTEGER"], ["d", "INTEGER"]>>, "d")
add_attribute("D", "A", "BOOLEAN")
add_call_chain(<<a,D,D,c,e,B,e,A>>)
bool_value (true)
bool_value (false)
equals
logical_negation
int_value (41)
add_class(c)
conjunction
add_call_chain(<<A,d,a,e,A,e,C>>)
bool_value (false)
disjunction
equals
add_call_chain(<<D,C>>)
numerical_negation
numerical_negation
int_value (49)
add_call_chain(<<c,e,D>>)
bool_value (true)
add_call_chain(<<INTEGER,B>>)
generate_java_code
add_call_chain(<<b>>)
add_call_chain(<<A,b,e,A,BOOLEAN>>)
add_query("B", "d", <<["D", "b"], ["c", "A"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["e", "BOOLEAN"], ["C", "b"], ["c", "A"], ["BOOLEAN", "c"]>>, "A")
add_command("d", "d", <<["D", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "a"]>>)
type_check
add_call_chain(<<D,C,b,a>>)
add_command("C", "INTEGER", <<["e", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "INTEGER"], ["a", "INTEGER"], ["INTEGER", "BOOLEAN"], ["e", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "INTEGER"]>>)
add_attribute("a", "BOOLEAN", "c")
add_query("A", "D", <<["c", "INTEGER"], ["d", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "b"], ["B", "A"], ["A", "INTEGER"], ["C", "B"]>>, "D")
addition
add_query("e", "D", <<["e", "INTEGER"], ["A", "BOOLEAN"], ["e", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["a", "D"]>>, "B")
add_call_chain(<<D,B,e,d>>)
add_call_chain(<<BOOLEAN,a>>)
int_value (14)
add_attribute("e", "A", "INTEGER")
type_check
add_command("a", "C", <<["c", "INTEGER"]>>)
logical_negation
add_call_chain(<<C,BOOLEAN,INTEGER>>)
add_class(c)
conjunction
add_command("C", "C", <<["c", "BOOLEAN"], ["d", "INTEGER"], ["c", "b"], ["d", "b"], ["C", "INTEGER"], ["C", "INTEGER"]>>)
add_call_chain(<<b,A>>)
add_query("e", "d", <<["e", "a"], ["c", "D"], ["C", "BOOLEAN"]>>, "C")
add_query("c", "BOOLEAN", <<["INTEGER", "d"], ["e", "INTEGER"], ["C", "INTEGER"], ["A", "c"], ["D", "BOOLEAN"], ["c", "INTEGER"]>>, "d")
add_attribute("C", "B", "BOOLEAN")
logical_negation
logical_negation
add_call_chain(<<e,D,e,A,d,b,A,BOOLEAN,b>>)
int_value (23)
add_call_chain(<<C>>)
less_than
add_query("B", "e", <<["D", "a"], ["a", "BOOLEAN"], ["c", "INTEGER"], ["BOOLEAN", "c"], ["C", "INTEGER"], ["C", "INTEGER"], ["b", "BOOLEAN"]>>, "b")
equals
multiplication
add_query("b", "C", <<["e", "BOOLEAN"], ["B", "d"], ["C", "INTEGER"]>>, "B")
logical_negation
add_query("D", "C", <<["B", "BOOLEAN"]>>, "B")
multiplication
add_call_chain(<<d,B,c,a,D,D,A,d,e>>)
type_check
bool_value (true)
int_value (20)
bool_value (false)
int_value (32)
logical_negation
greater_than
numerical_negation
type_check
add_query("A", "B", <<["D", "INTEGER"], ["b", "INTEGER"], ["a", "BOOLEAN"]>>, "B")
add_class(d)
type_check
int_value (30)
int_value (23)
add_call_chain(<<e,a,C,d,a>>)
add_command("D", "D", <<["e", "a"], ["INTEGER", "INTEGER"], ["b", "INTEGER"], ["A", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "BOOLEAN"], ["INTEGER", "C"], ["A", "e"], ["b", "BOOLEAN"]>>)
add_command("a", "B", <<["a", "INTEGER"]>>)
generate_java_code
add_query("d", "d", <<["d", "INTEGER"], ["b", "a"], ["e", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["c", "BOOLEAN"], ["B", "BOOLEAN"]>>, "c")
add_query("e", "e", <<["c", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["e", "INTEGER"], ["C", "a"], ["A", "INTEGER"], ["D", "INTEGER"], ["d", "A"], ["A", "INTEGER"], ["D", "e"]>>, "a")
disjunction
type_check
add_call_chain(<<d,c,A,A,A,b,B>>)
logical_negation
generate_java_code
greater_than
equals
type_check
int_value (20)
add_query("INTEGER", "e", <<["a", "BOOLEAN"], ["d", "INTEGER"]>>, "a")
add_query("c", "d", <<["b", "C"], ["a", "INTEGER"], ["d", "INTEGER"], ["A", "A"], ["a", "BOOLEAN"], ["b", "BOOLEAN"], ["INTEGER", "INTEGER"]>>, "c")
greater_than
add_command("A", "B", <<["INTEGER", "INTEGER"], ["A", "INTEGER"], ["e", "B"], ["B", "INTEGER"], ["B", "BOOLEAN"], ["e", "B"]>>)
generate_java_code
disjunction
type_check
add_command("d", "A", <<["c", "b"]>>)
add_call_chain(<<a,c,a,INTEGER,B,B,D,a,d>>)
logical_negation
add_query("b", "A", <<["c", "C"], ["b", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["b", "INTEGER"]>>, "A")
int_value (29)
generate_java_code
bool_value (false)
add_command("B", "a", <<["c", "INTEGER"], ["B", "BOOLEAN"]>>)
bool_value (false)
int_value (11)
add_query("C", "INTEGER", <<["b", "b"], ["B", "c"], ["c", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["b", "D"], ["c", "e"], ["BOOLEAN", "INTEGER"], ["A", "a"]>>, "INTEGER")
add_attribute("B", "B", "BOOLEAN")
add_call_chain(<<a,B,D,BOOLEAN,B,C,C>>)
add_call_chain(<<c,e,d>>)
