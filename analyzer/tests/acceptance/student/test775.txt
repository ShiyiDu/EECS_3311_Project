add_query("e", "B", <<["a", "INTEGER"]>>, "D")
add_class(B)
bool_value (false)
add_query("a", "c", <<["A", "c"], ["A", "A"]>>, "c")
logical_negation
subtraction
bool_value (false)
add_attribute("e", "D", "INTEGER")
numerical_negation
add_call_chain(<<d,B,b,e,b>>)
add_attribute("d", "e", "BOOLEAN")
add_call_chain(<<c,b,B,d,b,c,b>>)
numerical_negation
generate_java_code
add_attribute("INTEGER", "C", "BOOLEAN")
numerical_negation
conjunction
add_call_chain(<<INTEGER,C,A,c>>)
bool_value (false)
add_call_chain(<<A>>)
add_call_chain(<<A,B>>)
type_check
add_call_chain(<<B>>)
add_call_chain(<<a,c>>)
add_query("C", "B", <<["BOOLEAN", "b"], ["e", "BOOLEAN"], ["B", "b"], ["e", "BOOLEAN"], ["BOOLEAN", "b"]>>, "e")
int_value (3)
add_query("e", "D", <<["e", "b"], ["c", "a"], ["c", "BOOLEAN"], ["b", "INTEGER"], ["b", "e"], ["c", "BOOLEAN"], ["B", "INTEGER"], ["BOOLEAN", "INTEGER"]>>, "B")
add_query("BOOLEAN", "d", <<["BOOLEAN", "BOOLEAN"], ["D", "INTEGER"], ["INTEGER", "D"], ["c", "d"], ["d", "BOOLEAN"]>>, "a")
add_call_chain(<<d,D,C,BOOLEAN,C,BOOLEAN,a,A>>)
type_check
subtraction
int_value (3)
add_command("BOOLEAN", "A", <<["c", "e"], ["c", "BOOLEAN"], ["B", "b"], ["D", "A"], ["a", "C"]>>)
bool_value (true)
generate_java_code
logical_negation
add_call_chain(<<A,d,a,INTEGER>>)
add_call_chain(<<BOOLEAN,e,a,a,C,C,D,B>>)
add_query("D", "d", <<["e", "d"]>>, "d")
equals
generate_java_code
greater_than
int_value (29)
add_class(C)
logical_negation
add_attribute("A", "a", "INTEGER")
add_command("D", "a", <<["e", "D"], ["d", "BOOLEAN"], ["C", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["d", "INTEGER"]>>)
add_query("e", "d", <<["a", "BOOLEAN"], ["d", "B"], ["a", "INTEGER"], ["D", "INTEGER"], ["e", "BOOLEAN"], ["D", "BOOLEAN"]>>, "c")
add_call_chain(<<INTEGER,a,INTEGER,C,B,d,B>>)
add_call_chain(<<b,INTEGER,c,A,b,A,c,e>>)
add_call_chain(<<a,INTEGER,c,c>>)
int_value (28)
int_value (26)
add_class(d)
add_command("D", "c", <<["BOOLEAN", "INTEGER"]>>)
add_query("A", "C", <<["a", "INTEGER"], ["d", "INTEGER"], ["d", "BOOLEAN"]>>, "c")
logical_negation
add_query("a", "b", <<["B", "BOOLEAN"], ["d", "INTEGER"], ["C", "BOOLEAN"], ["b", "d"], ["D", "B"], ["e", "C"]>>, "c")
addition
less_than
add_call_chain(<<D,INTEGER,D,B>>)
add_call_chain(<<a,b,a,INTEGER,A,c,e,B,D>>)
multiplication
add_command("BOOLEAN", "e", <<["a", "C"], ["b", "BOOLEAN"]>>)
numerical_negation
add_call_chain(<<C,c,a,b,b>>)
logical_negation
modulo
add_class(D)
bool_value (true)
generate_java_code
type_check
bool_value (false)
type_check
add_call_chain(<<c,c,B,b,e>>)
conjunction
type_check
less_than
greater_than
add_class(d)
disjunction
bool_value (true)
add_attribute("A", "B", "INTEGER")
type_check
generate_java_code
add_attribute("d", "INTEGER", "BOOLEAN")
add_call_chain(<<INTEGER,D,e,D,D,C,D,c,c>>)
numerical_negation
add_call_chain(<<a,d,B,e,D,B,b>>)
add_call_chain(<<BOOLEAN,B,c>>)
int_value (48)
add_call_chain(<<a,B,a,INTEGER,BOOLEAN>>)
add_query("C", "A", <<["B", "C"], ["B", "BOOLEAN"], ["B", "e"], ["b", "e"], ["a", "INTEGER"]>>, "b")
add_attribute("e", "B", "INTEGER")
add_command("d", "D", <<["D", "BOOLEAN"], ["D", "d"], ["b", "a"], ["A", "A"], ["e", "c"], ["C", "BOOLEAN"], ["c", "INTEGER"], ["C", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>)
add_attribute("d", "D", "INTEGER")
logical_negation
generate_java_code
add_attribute("B", "BOOLEAN", "BOOLEAN")
int_value (14)
bool_value (true)
add_class(c)
add_query("A", "BOOLEAN", <<["B", "b"], ["C", "INTEGER"], ["b", "INTEGER"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "INTEGER"], ["D", "c"]>>, "INTEGER")
add_call_chain(<<a,A,c,B,C,INTEGER,a,B,b>>)
add_query("d", "D", <<["BOOLEAN", "a"], ["d", "D"], ["D", "a"], ["INTEGER", "INTEGER"], ["D", "d"], ["C", "INTEGER"]>>, "b")
conjunction
add_attribute("c", "e", "BOOLEAN")
add_attribute("C", "INTEGER", "D")
equals
add_attribute("a", "A", "BOOLEAN")
add_class(b)
subtraction
numerical_negation
add_call_chain(<<b,INTEGER>>)
bool_value (false)
type_check
add_command("C", "a", <<["C", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "INTEGER"], ["INTEGER", "INTEGER"], ["d", "D"], ["e", "INTEGER"], ["C", "INTEGER"]>>)
int_value (14)
add_call_chain(<<a,D,INTEGER,A,d,BOOLEAN,B,A,a>>)
bool_value (false)
add_class(A)
add_class(B)
add_query("a", "INTEGER", <<["A", "BOOLEAN"], ["INTEGER", "INTEGER"], ["C", "B"], ["d", "BOOLEAN"], ["d", "D"]>>, "C")
numerical_negation
add_command("INTEGER", "b", <<["A", "C"], ["e", "INTEGER"], ["b", "e"], ["d", "BOOLEAN"], ["D", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
type_check
add_command("B", "e", <<["c", "B"], ["C", "e"]>>)
addition
type_check
conjunction
generate_java_code
numerical_negation
modulo
logical_negation
add_command("D", "c", <<["c", "INTEGER"], ["D", "BOOLEAN"], ["d", "BOOLEAN"], ["BOOLEAN", "C"], ["B", "BOOLEAN"], ["A", "C"]>>)
logical_negation
subtraction
add_query("b", "C", <<["c", "INTEGER"], ["INTEGER", "INTEGER"]>>, "c")
int_value (24)
add_attribute("e", "e", "INTEGER")
add_call_chain(<<e,C,c,a,c,d,D,d>>)
add_attribute("a", "A", "e")
add_command("c", "B", <<["e", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "INTEGER"], ["c", "c"]>>)
generate_java_code
int_value (5)
generate_java_code
add_attribute("C", "A", "BOOLEAN")
add_query("D", "D", <<["D", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "d"], ["C", "D"]>>, "b")
bool_value (true)
add_class(d)
quotient
add_attribute("B", "b", "INTEGER")
int_value (1)
numerical_negation
add_call_chain(<<e,a,b,a,d,A,d,d,e>>)
int_value (22)
conjunction
greater_than
add_call_chain(<<A,B,d,D,d,B,B>>)
add_call_chain(<<BOOLEAN,B,BOOLEAN,a>>)
add_call_chain(<<c,d,B,a,e>>)
add_attribute("BOOLEAN", "D", "BOOLEAN")
logical_negation
numerical_negation
add_attribute("b", "c", "BOOLEAN")
add_call_chain(<<C,A,C,C>>)
logical_negation
add_attribute("BOOLEAN", "A", "BOOLEAN")
add_attribute("B", "B", "INTEGER")
multiplication
add_query("e", "d", <<["D", "BOOLEAN"], ["A", "INTEGER"], ["C", "INTEGER"], ["e", "c"], ["B", "e"], ["A", "BOOLEAN"], ["d", "INTEGER"], ["d", "b"], ["D", "BOOLEAN"]>>, "C")
add_call_chain(<<D,b,d,BOOLEAN,c,B,D,INTEGER,B>>)
type_check
add_class(A)
int_value (32)
add_attribute("B", "e", "BOOLEAN")
add_command("B", "c", <<["C", "INTEGER"], ["A", "d"]>>)
bool_value (true)
type_check
generate_java_code
add_query("a", "A", <<["e", "A"], ["d", "B"], ["a", "C"], ["b", "BOOLEAN"], ["e", "INTEGER"], ["d", "B"], ["A", "B"], ["B", "INTEGER"]>>, "b")
add_query("C", "c", <<["A", "BOOLEAN"], ["d", "C"], ["D", "INTEGER"], ["c", "INTEGER"]>>, "D")
add_attribute("C", "B", "B")
quotient
int_value (6)
add_call_chain(<<b,B,BOOLEAN,d,BOOLEAN,D>>)
conjunction
bool_value (false)
greater_than
type_check
numerical_negation
logical_negation
less_than
type_check
add_command("a", "C", <<["c", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "INTEGER"], ["D", "BOOLEAN"], ["C", "D"], ["b", "B"], ["A", "INTEGER"]>>)
add_command("A", "C", <<["BOOLEAN", "c"], ["C", "INTEGER"], ["A", "INTEGER"], ["b", "BOOLEAN"]>>)
generate_java_code
bool_value (false)
add_call_chain(<<A,A,B,b,a>>)
generate_java_code
type_check
int_value (25)
add_command("c", "a", <<["B", "INTEGER"], ["e", "INTEGER"], ["c", "BOOLEAN"], ["INTEGER", "INTEGER"], ["A", "BOOLEAN"]>>)
logical_negation
addition
bool_value (false)
add_command("A", "b", <<["C", "INTEGER"], ["a", "INTEGER"], ["INTEGER", "INTEGER"], ["e", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "a"], ["B", "BOOLEAN"], ["d", "B"], ["D", "BOOLEAN"]>>)
generate_java_code
add_call_chain(<<e,a,a,A,d,d,D>>)
numerical_negation
greater_than
add_attribute("D", "a", "a")
add_call_chain(<<C,B,c,INTEGER>>)
generate_java_code
generate_java_code
int_value (10)
add_class(a)
add_query("b", "C", <<["B", "BOOLEAN"], ["d", "INTEGER"], ["a", "C"], ["B", "C"]>>, "D")
add_call_chain(<<D,e,D,e,A,b,BOOLEAN,d>>)
add_class(A)
bool_value (true)
numerical_negation
logical_negation
int_value (3)
add_attribute("BOOLEAN", "A", "INTEGER")
add_call_chain(<<C,A,B,b,C,C,C,B>>)
bool_value (true)
add_attribute("c", "C", "INTEGER")
bool_value (false)
int_value (10)
add_query("B", "B", <<["b", "INTEGER"], ["b", "BOOLEAN"], ["D", "BOOLEAN"], ["INTEGER", "INTEGER"], ["D", "BOOLEAN"], ["A", "c"]>>, "C")
greater_than
add_call_chain(<<BOOLEAN>>)
numerical_negation
add_call_chain(<<e,c,c,e,B,D,e,d,D>>)
type_check
add_command("A", "BOOLEAN", <<["A", "INTEGER"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["C", "b"], ["b", "BOOLEAN"], ["a", "BOOLEAN"]>>)
numerical_negation
add_attribute("B", "D", "BOOLEAN")
bool_value (true)
add_command("A", "D", <<["C", "BOOLEAN"], ["A", "c"], ["B", "BOOLEAN"], ["B", "D"]>>)
add_attribute("C", "A", "INTEGER")
logical_negation
int_value (10)
bool_value (false)
add_command("d", "e", <<["c", "BOOLEAN"], ["INTEGER", "B"], ["C", "D"], ["b", "B"], ["A", "BOOLEAN"], ["e", "BOOLEAN"]>>)
add_call_chain(<<b,A,INTEGER,d,D,BOOLEAN,a,d>>)
add_command("d", "C", <<["A", "A"], ["INTEGER", "BOOLEAN"], ["B", "INTEGER"], ["c", "D"], ["a", "INTEGER"], ["D", "a"]>>)
add_attribute("c", "c", "A")
numerical_negation
conjunction
logical_negation
