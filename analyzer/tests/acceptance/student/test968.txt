add_attribute("B", "C", "INTEGER")
add_call_chain(<<A,B,D,B,d,d>>)
generate_java_code
add_call_chain(<<INTEGER,C,A>>)
add_call_chain(<<B,D,D>>)
add_query("A", "B", <<["B", "BOOLEAN"], ["A", "INTEGER"], ["a", "b"], ["a", "BOOLEAN"], ["INTEGER", "D"]>>, "d")
generate_java_code
conjunction
conjunction
add_query("c", "B", <<["d", "BOOLEAN"], ["d", "INTEGER"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>, "c")
quotient
numerical_negation
add_call_chain(<<B,A,C,A,e,C,A>>)
add_query("A", "B", <<["e", "c"], ["B", "b"], ["a", "INTEGER"]>>, "a")
add_call_chain(<<c,c,a,e,d,INTEGER,A>>)
add_class(D)
int_value (27)
generate_java_code
add_call_chain(<<d,c>>)
add_call_chain(<<C,D,B,B,A,a,B>>)
logical_negation
generate_java_code
subtraction
bool_value (true)
conjunction
add_attribute("C", "D", "INTEGER")
add_command("e", "C", <<["c", "BOOLEAN"], ["D", "BOOLEAN"]>>)
add_query("b", "a", <<["A", "D"], ["B", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["C", "INTEGER"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["D", "INTEGER"]>>, "e")
add_class(B)
add_call_chain(<<A,e,c,d,d>>)
generate_java_code
int_value (37)
add_call_chain(<<C,C>>)
add_call_chain(<<c,e,c,A,d,b,d,b>>)
add_command("A", "BOOLEAN", <<["INTEGER", "BOOLEAN"], ["a", "INTEGER"], ["D", "BOOLEAN"]>>)
bool_value (false)
add_call_chain(<<B,D>>)
add_command("A", "a", <<["BOOLEAN", "INTEGER"], ["B", "INTEGER"], ["A", "INTEGER"], ["b", "c"], ["b", "INTEGER"], ["c", "C"], ["b", "d"], ["e", "e"], ["INTEGER", "BOOLEAN"]>>)
add_call_chain(<<b,a,B,D,c,BOOLEAN>>)
type_check
logical_negation
conjunction
bool_value (true)
add_command("c", "e", <<["b", "INTEGER"], ["A", "BOOLEAN"], ["e", "a"], ["d", "INTEGER"], ["INTEGER", "A"]>>)
logical_negation
add_call_chain(<<INTEGER,B,BOOLEAN,C,a,C,A>>)
add_query("a", "C", <<["B", "B"]>>, "A")
int_value (10)
quotient
disjunction
bool_value (false)
bool_value (false)
add_call_chain(<<e,C,a,B,D,A>>)
add_call_chain(<<D,A>>)
quotient
add_class(A)
type_check
logical_negation
bool_value (false)
disjunction
add_command("D", "A", <<["A", "INTEGER"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["A", "BOOLEAN"]>>)
conjunction
add_command("B", "a", <<["BOOLEAN", "e"]>>)
add_command("d", "e", <<["d", "C"], ["B", "INTEGER"], ["c", "INTEGER"]>>)
generate_java_code
add_call_chain(<<BOOLEAN,INTEGER,b,A,a,BOOLEAN,C,D,e>>)
add_attribute("INTEGER", "A", "BOOLEAN")
add_call_chain(<<INTEGER>>)
add_query("d", "e", <<["C", "INTEGER"], ["a", "INTEGER"]>>, "a")
disjunction
add_query("a", "C", <<["A", "BOOLEAN"], ["A", "INTEGER"], ["d", "D"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "INTEGER"]>>, "d")
logical_negation
add_class(D)
generate_java_code
bool_value (true)
add_query("D", "e", <<["e", "INTEGER"], ["b", "INTEGER"], ["e", "e"], ["INTEGER", "BOOLEAN"]>>, "B")
type_check
add_command("D", "d", <<["c", "c"], ["c", "a"], ["INTEGER", "d"], ["a", "C"], ["c", "a"], ["D", "BOOLEAN"], ["d", "INTEGER"]>>)
add_query("c", "INTEGER", <<["e", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "INTEGER"]>>, "d")
conjunction
less_than
add_command("BOOLEAN", "c", <<["A", "INTEGER"]>>)
conjunction
conjunction
int_value (33)
add_attribute("d", "A", "BOOLEAN")
numerical_negation
multiplication
add_query("C", "c", <<["c", "B"], ["A", "INTEGER"], ["D", "D"], ["D", "d"], ["INTEGER", "INTEGER"]>>, "D")
add_attribute("e", "INTEGER", "INTEGER")
generate_java_code
add_attribute("C", "A", "D")
add_call_chain(<<B,C,C,C,a>>)
int_value (31)
add_command("a", "b", <<["B", "INTEGER"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["d", "e"], ["c", "B"]>>)
generate_java_code
add_call_chain(<<INTEGER,B,D,INTEGER,D,e,C,C,B>>)
add_call_chain(<<B,BOOLEAN,A>>)
generate_java_code
int_value (10)
bool_value (false)
add_call_chain(<<a,e,b>>)
add_command("D", "A", <<["b", "c"], ["A", "BOOLEAN"], ["d", "c"], ["a", "INTEGER"], ["C", "BOOLEAN"], ["D", "a"]>>)
bool_value (false)
add_call_chain(<<INTEGER,D,C,a,e,D,b,INTEGER,A>>)
logical_negation
disjunction
add_call_chain(<<d,d,a,B,C>>)
logical_negation
add_call_chain(<<D,INTEGER,A,c,B>>)
int_value (42)
disjunction
add_query("c", "e", <<["e", "A"]>>, "C")
bool_value (false)
generate_java_code
add_class(INTEGER)
add_call_chain(<<A,c,B,INTEGER,d,d>>)
addition
numerical_negation
generate_java_code
logical_negation
numerical_negation
greater_than
add_command("C", "b", <<["D", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "C"], ["d", "INTEGER"], ["d", "BOOLEAN"], ["b", "BOOLEAN"]>>)
less_than
add_command("B", "A", <<["d", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["b", "c"], ["e", "INTEGER"], ["C", "BOOLEAN"]>>)
add_command("INTEGER", "D", <<["d", "INTEGER"], ["e", "INTEGER"], ["INTEGER", "BOOLEAN"], ["INTEGER", "INTEGER"], ["C", "c"], ["BOOLEAN", "INTEGER"]>>)
int_value (32)
bool_value (false)
type_check
add_class(B)
add_call_chain(<<INTEGER,C,a,BOOLEAN,C>>)
int_value (46)
add_attribute("B", "A", "d")
add_call_chain(<<a,a,C,D,c,a,a>>)
add_call_chain(<<b,c,A,C,c,D,c>>)
generate_java_code
logical_negation
add_call_chain(<<b,b>>)
add_query("A", "A", <<["INTEGER", "BOOLEAN"], ["e", "INTEGER"], ["C", "d"]>>, "C")
add_call_chain(<<A,B,A,e>>)
logical_negation
add_call_chain(<<C,e>>)
add_call_chain(<<d>>)
logical_negation
logical_negation
type_check
add_call_chain(<<INTEGER>>)
numerical_negation
logical_negation
add_call_chain(<<c,C,b>>)
disjunction
int_value (49)
numerical_negation
type_check
add_command("b", "b", <<["b", "INTEGER"], ["C", "a"], ["a", "BOOLEAN"]>>)
generate_java_code
add_command("B", "B", <<["d", "BOOLEAN"], ["e", "c"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["C", "BOOLEAN"], ["e", "INTEGER"]>>)
add_class(INTEGER)
add_call_chain(<<B,C,D,D,D>>)
add_command("A", "c", <<["b", "INTEGER"], ["A", "BOOLEAN"]>>)
add_call_chain(<<c,A,D,A,e,c>>)
add_call_chain(<<C,BOOLEAN,B,a,INTEGER,B,d,BOOLEAN>>)
add_attribute("e", "A", "BOOLEAN")
less_than
add_call_chain(<<C,d,e,D,B,D,e,D>>)
numerical_negation
int_value (12)
add_call_chain(<<INTEGER,C>>)
add_command("e", "c", <<["C", "INTEGER"], ["a", "A"], ["C", "A"], ["b", "D"], ["a", "INTEGER"], ["d", "INTEGER"], ["C", "BOOLEAN"]>>)
logical_negation
disjunction
add_call_chain(<<D,BOOLEAN,D>>)
generate_java_code
add_command("D", "D", <<["d", "BOOLEAN"], ["INTEGER", "A"], ["b", "INTEGER"], ["D", "B"], ["c", "a"], ["b", "BOOLEAN"], ["D", "b"], ["B", "INTEGER"]>>)
numerical_negation
int_value (25)
add_command("C", "B", <<["B", "INTEGER"], ["B", "C"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["D", "INTEGER"], ["d", "BOOLEAN"], ["e", "C"]>>)
greater_than
add_command("d", "c", <<["a", "BOOLEAN"], ["D", "A"], ["D", "a"], ["b", "c"], ["a", "INTEGER"], ["e", "INTEGER"], ["D", "BOOLEAN"], ["c", "INTEGER"]>>)
equals
add_command("d", "D", <<["C", "d"], ["e", "INTEGER"], ["A", "INTEGER"], ["b", "BOOLEAN"], ["b", "INTEGER"], ["INTEGER", "INTEGER"], ["b", "INTEGER"]>>)
int_value (32)
add_attribute("D", "C", "INTEGER")
add_attribute("a", "A", "C")
bool_value (false)
conjunction
int_value (4)
less_than
numerical_negation
add_class(c)
add_query("d", "e", <<["b", "BOOLEAN"], ["e", "D"], ["d", "INTEGER"]>>, "C")
bool_value (false)
numerical_negation
add_attribute("A", "C", "BOOLEAN")
add_call_chain(<<B>>)
add_class(D)
logical_negation
add_command("A", "B", <<["C", "B"], ["D", "A"]>>)
addition
add_command("b", "a", <<["B", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>)
add_call_chain(<<A,B,D,B,C,e,d,B,A>>)
int_value (9)
add_call_chain(<<BOOLEAN,D,INTEGER,b,c,C>>)
add_query("C", "C", <<["A", "INTEGER"]>>, "C")
bool_value (true)
logical_negation
generate_java_code
