add_attribute("BOOLEAN", "a", "INTEGER")
add_command("A", "A", <<["c", "INTEGER"], ["B", "e"], ["INTEGER", "a"], ["D", "INTEGER"]>>)
add_call_chain(<<a,d,B>>)
logical_negation
conjunction
add_call_chain(<<c,a>>)
add_call_chain(<<d,B,B,d,b,b,B,INTEGER>>)
bool_value (false)
add_attribute("D", "a", "BOOLEAN")
add_command("BOOLEAN", "b", <<["d", "INTEGER"]>>)
add_query("INTEGER", "A", <<["b", "BOOLEAN"], ["a", "BOOLEAN"], ["b", "INTEGER"]>>, "c")
type_check
numerical_negation
add_query("e", "A", <<["a", "d"], ["e", "A"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["c", "INTEGER"], ["d", "INTEGER"], ["a", "INTEGER"], ["B", "BOOLEAN"]>>, "b")
add_query("BOOLEAN", "A", <<["b", "BOOLEAN"], ["A", "INTEGER"], ["B", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "INTEGER"], ["A", "INTEGER"]>>, "D")
add_class(A)
int_value (23)
generate_java_code
greater_than
add_attribute("a", "c", "BOOLEAN")
add_command("D", "A", <<["INTEGER", "INTEGER"], ["D", "INTEGER"], ["e", "c"], ["B", "BOOLEAN"], ["C", "e"], ["d", "INTEGER"], ["c", "INTEGER"], ["D", "BOOLEAN"], ["c", "INTEGER"]>>)
add_query("B", "C", <<["A", "BOOLEAN"], ["e", "INTEGER"]>>, "D")
add_command("INTEGER", "B", <<["a", "INTEGER"], ["C", "c"], ["c", "INTEGER"]>>)
quotient
conjunction
add_call_chain(<<e,D,c,d,B>>)
add_command("C", "b", <<["B", "INTEGER"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["a", "e"]>>)
add_call_chain(<<d,C>>)
type_check
add_call_chain(<<e,D>>)
logical_negation
type_check
greater_than
numerical_negation
add_call_chain(<<B,BOOLEAN,b,b,C,C,a>>)
add_call_chain(<<c,e,C,d,a,b>>)
add_call_chain(<<C,c,B>>)
add_command("A", "d", <<["b", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "D"], ["b", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["A", "INTEGER"]>>)
int_value (13)
add_call_chain(<<b,C,b>>)
bool_value (true)
int_value (44)
numerical_negation
generate_java_code
numerical_negation
subtraction
add_command("A", "b", <<["c", "INTEGER"], ["D", "C"]>>)
logical_negation
add_query("b", "B", <<["b", "d"], ["c", "INTEGER"], ["a", "INTEGER"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["B", "INTEGER"]>>, "INTEGER")
add_call_chain(<<C,D,d,e,D,e,BOOLEAN>>)
generate_java_code
numerical_negation
add_call_chain(<<d,a,d,B,C,B,b,D>>)
bool_value (true)
add_command("D", "BOOLEAN", <<["c", "INTEGER"], ["C", "A"], ["e", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["D", "INTEGER"]>>)
add_attribute("D", "INTEGER", "BOOLEAN")
add_query("B", "A", <<["A", "INTEGER"], ["e", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "INTEGER"], ["e", "INTEGER"], ["e", "BOOLEAN"], ["a", "INTEGER"], ["C", "BOOLEAN"]>>, "B")
add_call_chain(<<D,C,B,C,e,d,a,A,B>>)
add_class(B)
generate_java_code
bool_value (true)
add_query("INTEGER", "e", <<["a", "a"], ["a", "INTEGER"], ["BOOLEAN", "INTEGER"]>>, "INTEGER")
add_call_chain(<<D,c,A,d,b,d>>)
add_query("B", "A", <<["a", "INTEGER"]>>, "b")
add_class(D)
numerical_negation
conjunction
add_call_chain(<<B,e,B,a,d,a>>)
add_query("e", "a", <<["a", "BOOLEAN"], ["C", "INTEGER"], ["e", "e"], ["e", "b"], ["C", "INTEGER"]>>, "BOOLEAN")
add_query("A", "e", <<["d", "INTEGER"], ["b", "INTEGER"], ["B", "e"], ["c", "BOOLEAN"]>>, "B")
addition
disjunction
add_call_chain(<<d,B,B,d,d,d,D>>)
logical_negation
logical_negation
add_call_chain(<<e,A,b>>)
add_call_chain(<<D,C,A,d,c,d,b,d,B>>)
logical_negation
add_class(b)
add_attribute("D", "c", "A")
add_call_chain(<<d,D,C,d,INTEGER,BOOLEAN,A>>)
add_query("C", "e", <<["D", "BOOLEAN"], ["C", "BOOLEAN"]>>, "D")
int_value (4)
add_call_chain(<<A>>)
add_call_chain(<<B,INTEGER,a,b,d,c,a,A,BOOLEAN>>)
add_call_chain(<<e,C,B,BOOLEAN,D,e,C>>)
add_call_chain(<<d,d,B,INTEGER>>)
conjunction
add_command("C", "A", <<["a", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["d", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "B"], ["b", "INTEGER"], ["d", "INTEGER"]>>)
add_call_chain(<<C,B,a,c,B,INTEGER,A,c,c>>)
numerical_negation
numerical_negation
add_call_chain(<<e>>)
add_command("c", "C", <<["A", "B"], ["d", "INTEGER"], ["c", "C"], ["c", "BOOLEAN"], ["a", "INTEGER"]>>)
add_command("a", "A", <<["b", "BOOLEAN"]>>)
add_attribute("a", "D", "BOOLEAN")
int_value (39)
disjunction
generate_java_code
int_value (29)
type_check
add_command("B", "a", <<["b", "INTEGER"], ["e", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["A", "BOOLEAN"]>>)
add_query("e", "b", <<["c", "e"], ["D", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "D"], ["A", "BOOLEAN"], ["b", "INTEGER"], ["C", "C"]>>, "INTEGER")
add_call_chain(<<INTEGER,b,b,e,A,b,D>>)
bool_value (true)
add_attribute("B", "d", "INTEGER")
logical_negation
logical_negation
add_call_chain(<<a>>)
type_check
add_class(B)
add_attribute("e", "BOOLEAN", "BOOLEAN")
numerical_negation
type_check
int_value (31)
numerical_negation
logical_negation
add_call_chain(<<e,d,D>>)
add_query("A", "B", <<["D", "INTEGER"], ["B", "INTEGER"], ["b", "INTEGER"], ["A", "INTEGER"]>>, "A")
add_query("A", "e", <<["b", "BOOLEAN"], ["INTEGER", "d"], ["e", "e"], ["B", "BOOLEAN"], ["C", "INTEGER"], ["e", "BOOLEAN"]>>, "BOOLEAN")
add_call_chain(<<b,c,B,c,B,D,B,d,e>>)
add_command("a", "a", <<["C", "INTEGER"], ["INTEGER", "INTEGER"], ["e", "INTEGER"], ["B", "a"], ["C", "BOOLEAN"], ["B", "INTEGER"]>>)
add_attribute("a", "B", "BOOLEAN")
add_call_chain(<<b,C,e,B>>)
add_command("A", "A", <<["B", "BOOLEAN"], ["e", "C"], ["A", "BOOLEAN"]>>)
add_query("C", "a", <<["D", "C"], ["b", "INTEGER"], ["b", "C"], ["INTEGER", "INTEGER"], ["b", "BOOLEAN"], ["INTEGER", "INTEGER"], ["B", "BOOLEAN"], ["C", "INTEGER"]>>, "B")
add_attribute("A", "d", "a")
add_command("c", "d", <<["A", "BOOLEAN"], ["C", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["C", "INTEGER"], ["A", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
add_query("d", "B", <<["e", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "e"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["c", "INTEGER"], ["BOOLEAN", "INTEGER"], ["e", "e"]>>, "B")
generate_java_code
add_attribute("A", "c", "INTEGER")
add_query("d", "B", <<["BOOLEAN", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["B", "d"], ["C", "d"], ["C", "B"]>>, "c")
add_query("B", "A", <<["a", "INTEGER"], ["c", "INTEGER"], ["d", "BOOLEAN"], ["INTEGER", "INTEGER"], ["BOOLEAN", "c"], ["e", "INTEGER"]>>, "D")
add_class(B)
add_call_chain(<<b,c,B,C,D,C>>)
add_command("INTEGER", "a", <<["D", "BOOLEAN"], ["e", "e"], ["D", "c"], ["D", "INTEGER"], ["c", "b"], ["BOOLEAN", "INTEGER"], ["B", "INTEGER"], ["c", "a"]>>)
logical_negation
add_call_chain(<<C,a,BOOLEAN,B,c,C,c,a>>)
type_check
addition
add_call_chain(<<B,b,c,D,C,D,c,C,c>>)
type_check
add_class(a)
type_check
add_call_chain(<<a,D,C,A,BOOLEAN,a,a,B,c>>)
int_value (25)
bool_value (false)
add_query("b", "A", <<["BOOLEAN", "BOOLEAN"]>>, "A")
add_call_chain(<<e,D,D,BOOLEAN,C,D,B,INTEGER>>)
numerical_negation
numerical_negation
add_command("B", "B", <<["c", "C"], ["BOOLEAN", "BOOLEAN"], ["A", "INTEGER"]>>)
add_call_chain(<<C,b,e,d,C,c>>)
equals
add_call_chain(<<d,d,B>>)
type_check
modulo
type_check
conjunction
add_command("c", "d", <<["d", "INTEGER"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["e", "D"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["B", "A"], ["c", "b"], ["b", "INTEGER"]>>)
add_command("A", "C", <<["c", "c"], ["A", "C"], ["C", "a"], ["A", "A"]>>)
int_value (35)
add_query("BOOLEAN", "C", <<["INTEGER", "BOOLEAN"], ["b", "b"], ["D", "INTEGER"], ["a", "d"], ["d", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "INTEGER"], ["A", "BOOLEAN"]>>, "BOOLEAN")
numerical_negation
int_value (25)
bool_value (false)
type_check
logical_negation
int_value (35)
add_query("b", "D", <<["c", "INTEGER"], ["B", "INTEGER"], ["BOOLEAN", "C"]>>, "BOOLEAN")
numerical_negation
bool_value (true)
generate_java_code
logical_negation
add_call_chain(<<B,a,B,a,D,BOOLEAN>>)
type_check
int_value (39)
add_query("A", "B", <<["A", "INTEGER"]>>, "c")
add_command("A", "c", <<["D", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "INTEGER"], ["b", "BOOLEAN"]>>)
logical_negation
add_query("A", "b", <<["INTEGER", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>, "D")
conjunction
add_attribute("D", "C", "BOOLEAN")
greater_than
bool_value (true)
generate_java_code
add_query("b", "D", <<["C", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["C", "b"], ["C", "INTEGER"], ["c", "A"], ["A", "INTEGER"], ["a", "BOOLEAN"], ["A", "INTEGER"], ["c", "D"]>>, "INTEGER")
int_value (23)
bool_value (true)
add_command("c", "a", <<["a", "BOOLEAN"], ["a", "INTEGER"], ["B", "a"], ["C", "BOOLEAN"], ["d", "INTEGER"], ["d", "C"], ["d", "BOOLEAN"]>>)
add_query("D", "BOOLEAN", <<["A", "BOOLEAN"]>>, "INTEGER")
add_class(A)
add_attribute("b", "B", "c")
add_call_chain(<<INTEGER>>)
add_call_chain(<<B,B,d,A,c,d>>)
logical_negation
generate_java_code
int_value (30)
numerical_negation
bool_value (true)
add_class(a)
less_than
add_call_chain(<<A,D,a,d,A,B,D>>)
less_than
add_attribute("c", "INTEGER", "INTEGER")
int_value (46)
add_query("INTEGER", "d", <<["INTEGER", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "INTEGER"]>>, "A")
add_call_chain(<<a,e>>)
bool_value (true)
int_value (29)
bool_value (true)
logical_negation
bool_value (true)
numerical_negation
add_command("A", "a", <<["D", "BOOLEAN"]>>)
add_class(b)
add_command("A", "B", <<["c", "INTEGER"], ["b", "BOOLEAN"], ["D", "C"], ["A", "D"], ["B", "BOOLEAN"], ["a", "INTEGER"]>>)
add_call_chain(<<d,A,b>>)
add_attribute("C", "c", "BOOLEAN")
type_check
add_attribute("e", "B", "BOOLEAN")
add_query("A", "C", <<["a", "C"], ["c", "INTEGER"], ["c", "BOOLEAN"], ["b", "BOOLEAN"]>>, "B")
add_class(d)
disjunction
add_command("c", "a", <<["A", "D"], ["B", "INTEGER"]>>)
add_call_chain(<<a,e,e>>)
add_class(D)
disjunction
