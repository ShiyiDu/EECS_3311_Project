disjunction
numerical_negation
add_attribute("D", "B", "BOOLEAN")
numerical_negation
generate_java_code
disjunction
add_call_chain(<<BOOLEAN,a>>)
add_call_chain(<<C,INTEGER,b,A>>)
add_attribute("D", "d", "d")
add_call_chain(<<b>>)
logical_negation
add_call_chain(<<A,c,A,BOOLEAN,c,a,d,D>>)
add_call_chain(<<a,d,a,b,b,A,B,INTEGER>>)
modulo
type_check
logical_negation
numerical_negation
add_command("a", "c", <<["c", "b"], ["A", "BOOLEAN"], ["C", "c"], ["e", "INTEGER"]>>)
add_call_chain(<<B,a,b>>)
bool_value (false)
add_query("a", "b", <<["A", "BOOLEAN"], ["B", "INTEGER"]>>, "e")
bool_value (false)
add_attribute("d", "A", "BOOLEAN")
type_check
add_call_chain(<<D,c,A,c,c,d>>)
int_value (6)
int_value (39)
bool_value (false)
add_command("D", "d", <<["B", "BOOLEAN"], ["C", "INTEGER"], ["d", "c"], ["B", "BOOLEAN"], ["D", "BOOLEAN"]>>)
bool_value (true)
numerical_negation
bool_value (true)
logical_negation
logical_negation
numerical_negation
generate_java_code
logical_negation
add_call_chain(<<a,d,C,C,B,A,e,b>>)
int_value (7)
add_attribute("A", "b", "B")
disjunction
type_check
modulo
type_check
generate_java_code
add_call_chain(<<c,A,D,B,A,c,C,INTEGER,d>>)
numerical_negation
bool_value (true)
numerical_negation
bool_value (true)
add_call_chain(<<A,d,D,c,d,D,INTEGER>>)
type_check
disjunction
add_attribute("BOOLEAN", "C", "A")
generate_java_code
add_call_chain(<<C,B,d,e,b,A,B,c,b>>)
int_value (43)
generate_java_code
disjunction
add_call_chain(<<A,B,INTEGER,A,c>>)
conjunction
numerical_negation
numerical_negation
greater_than
bool_value (false)
add_attribute("D", "e", "BOOLEAN")
add_call_chain(<<a,e,c,B,C,D>>)
generate_java_code
bool_value (false)
numerical_negation
greater_than
bool_value (false)
add_command("C", "A", <<["C", "e"], ["B", "INTEGER"], ["e", "a"]>>)
add_attribute("INTEGER", "A", "INTEGER")
int_value (13)
bool_value (false)
logical_negation
multiplication
add_attribute("C", "B", "a")
bool_value (false)
bool_value (true)
add_query("B", "C", <<["d", "BOOLEAN"]>>, "a")
add_query("e", "e", <<["INTEGER", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["D", "e"]>>, "d")
less_than
add_call_chain(<<c,A,C,a>>)
logical_negation
generate_java_code
conjunction
type_check
disjunction
int_value (41)
bool_value (false)
generate_java_code
add_call_chain(<<d,b,c,B>>)
add_command("D", "c", <<["C", "c"], ["c", "INTEGER"]>>)
add_call_chain(<<INTEGER,INTEGER,e>>)
add_attribute("A", "C", "INTEGER")
add_call_chain(<<C,c>>)
add_call_chain(<<e,e>>)
add_query("c", "c", <<["C", "b"], ["e", "BOOLEAN"], ["D", "INTEGER"], ["A", "D"], ["c", "a"]>>, "INTEGER")
bool_value (true)
add_command("A", "d", <<["B", "INTEGER"], ["b", "INTEGER"], ["c", "BOOLEAN"]>>)
disjunction
int_value (24)
numerical_negation
add_attribute("A", "INTEGER", "BOOLEAN")
add_attribute("A", "c", "INTEGER")
multiplication
generate_java_code
add_command("C", "INTEGER", <<["C", "INTEGER"], ["b", "D"], ["c", "BOOLEAN"], ["D", "d"], ["e", "INTEGER"], ["BOOLEAN", "INTEGER"], ["c", "BOOLEAN"]>>)
add_class(c)
multiplication
add_call_chain(<<D>>)
bool_value (true)
bool_value (true)
bool_value (false)
add_call_chain(<<B,C,c,e,C,b,INTEGER,BOOLEAN>>)
add_query("D", "d", <<["e", "A"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["B", "a"], ["D", "d"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["e", "BOOLEAN"]>>, "D")
disjunction
logical_negation
generate_java_code
add_call_chain(<<a,c,C,D,a,d,B,c>>)
type_check
multiplication
add_call_chain(<<d,c,e,c,c,INTEGER,d>>)
add_command("e", "INTEGER", <<["c", "B"]>>)
bool_value (false)
add_attribute("C", "c", "a")
subtraction
bool_value (false)
numerical_negation
add_attribute("e", "D", "INTEGER")
logical_negation
add_attribute("e", "B", "INTEGER")
addition
add_query("D", "C", <<["d", "BOOLEAN"], ["e", "BOOLEAN"], ["d", "BOOLEAN"], ["b", "B"], ["INTEGER", "BOOLEAN"], ["INTEGER", "c"], ["A", "BOOLEAN"], ["b", "INTEGER"]>>, "INTEGER")
add_attribute("INTEGER", "d", "D")
bool_value (false)
bool_value (false)
logical_negation
int_value (42)
add_query("d", "b", <<["c", "BOOLEAN"], ["d", "INTEGER"], ["A", "INTEGER"]>>, "e")
add_command("INTEGER", "a", <<["d", "INTEGER"], ["B", "BOOLEAN"], ["B", "d"], ["B", "BOOLEAN"]>>)
add_command("D", "INTEGER", <<["A", "INTEGER"], ["a", "C"]>>)
bool_value (false)
add_class(d)
add_command("C", "C", <<["C", "INTEGER"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "C"], ["e", "D"], ["B", "d"], ["d", "BOOLEAN"], ["c", "INTEGER"], ["e", "INTEGER"]>>)
logical_negation
disjunction
add_call_chain(<<b,C,D,C,C>>)
add_attribute("e", "A", "D")
add_attribute("c", "D", "BOOLEAN")
modulo
bool_value (false)
int_value (12)
int_value (7)
conjunction
type_check
subtraction
greater_than
numerical_negation
add_call_chain(<<D,a,A>>)
add_command("d", "b", <<["C", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "d"], ["a", "b"], ["a", "INTEGER"], ["e", "BOOLEAN"], ["D", "d"], ["b", "BOOLEAN"], ["C", "BOOLEAN"]>>)
logical_negation
add_class(c)
add_call_chain(<<a,B,e,BOOLEAN,b,b,A>>)
add_query("C", "e", <<["a", "BOOLEAN"], ["A", "C"], ["c", "INTEGER"], ["d", "BOOLEAN"]>>, "e")
numerical_negation
numerical_negation
add_command("A", "A", <<["C", "b"], ["a", "a"]>>)
int_value (39)
add_query("D", "C", <<["B", "INTEGER"], ["D", "INTEGER"], ["A", "INTEGER"], ["b", "INTEGER"], ["d", "BOOLEAN"], ["C", "BOOLEAN"], ["d", "INTEGER"]>>, "BOOLEAN")
generate_java_code
add_call_chain(<<e,b>>)
add_call_chain(<<B,A,D,c,b,e,d,b>>)
generate_java_code
add_command("a", "A", <<["B", "a"], ["d", "BOOLEAN"], ["INTEGER", "INTEGER"], ["D", "B"], ["e", "INTEGER"], ["d", "INTEGER"]>>)
add_call_chain(<<D,D,C,BOOLEAN,b,A,BOOLEAN>>)
conjunction
add_call_chain(<<d,b,B,b,C,e,e,a,B>>)
int_value (35)
int_value (12)
int_value (7)
logical_negation
add_query("C", "C", <<["c", "INTEGER"], ["c", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "C"], ["e", "INTEGER"], ["e", "INTEGER"], ["e", "BOOLEAN"]>>, "c")
logical_negation
numerical_negation
add_call_chain(<<b,B,INTEGER,d,b,A>>)
logical_negation
add_command("C", "a", <<["c", "BOOLEAN"]>>)
logical_negation
add_command("B", "BOOLEAN", <<["D", "D"], ["a", "INTEGER"]>>)
greater_than
bool_value (true)
numerical_negation
add_attribute("e", "d", "INTEGER")
int_value (46)
bool_value (true)
add_query("B", "A", <<["e", "INTEGER"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["C", "d"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["A", "INTEGER"], ["d", "e"]>>, "BOOLEAN")
int_value (10)
add_command("e", "B", <<["D", "c"], ["C", "INTEGER"], ["e", "e"], ["B", "BOOLEAN"], ["c", "b"]>>)
add_query("INTEGER", "C", <<["C", "C"], ["BOOLEAN", "D"], ["d", "INTEGER"]>>, "B")
add_query("B", "B", <<["D", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["b", "INTEGER"], ["a", "BOOLEAN"], ["A", "e"]>>, "D")
generate_java_code
add_attribute("A", "b", "BOOLEAN")
conjunction
add_query("e", "B", <<["C", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "A"]>>, "a")
add_attribute("C", "b", "D")
add_call_chain(<<B,a>>)
type_check
add_command("A", "B", <<["A", "BOOLEAN"]>>)
numerical_negation
type_check
add_call_chain(<<a,a,B,b,d>>)
