addition
logical_negation
add_command("a", "A", <<["C", "e"], ["INTEGER", "INTEGER"], ["d", "C"], ["a", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["A", "INTEGER"], ["C", "c"], ["b", "b"]>>)
modulo
add_query("b", "e", <<["BOOLEAN", "BOOLEAN"], ["a", "BOOLEAN"]>>, "INTEGER")
bool_value (false)
add_class(C)
add_class(BOOLEAN)
add_attribute("d", "c", "c")
add_call_chain(<<b,e,b,INTEGER>>)
add_attribute("e", "D", "BOOLEAN")
add_query("b", "B", <<["D", "INTEGER"], ["A", "BOOLEAN"], ["D", "BOOLEAN"]>>, "c")
add_class(a)
add_command("c", "a", <<["d", "INTEGER"], ["C", "BOOLEAN"]>>)
add_class(d)
add_call_chain(<<D,C>>)
bool_value (false)
add_call_chain(<<B,B,B,d,d,d,D,B>>)
disjunction
numerical_negation
int_value (40)
add_call_chain(<<d,B,C,c,c,c,D,d,INTEGER>>)
numerical_negation
add_call_chain(<<a>>)
multiplication
logical_negation
multiplication
generate_java_code
add_call_chain(<<B,C,e,a,D>>)
int_value (23)
disjunction
add_query("A", "A", <<["e", "INTEGER"], ["D", "INTEGER"], ["B", "b"], ["e", "b"], ["A", "BOOLEAN"]>>, "C")
int_value (41)
add_class(c)
add_attribute("d", "c", "BOOLEAN")
conjunction
add_attribute("B", "a", "INTEGER")
add_query("D", "A", <<["d", "INTEGER"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "BOOLEAN"]>>, "b")
add_call_chain(<<B,BOOLEAN,A,b,B,d>>)
add_call_chain(<<B,a,B,d,a,b,A>>)
add_call_chain(<<INTEGER,A>>)
generate_java_code
add_call_chain(<<c,e,d,b,B>>)
add_call_chain(<<A,B,D,e,a,B,e,INTEGER,e>>)
type_check
add_call_chain(<<c,B,b,a,e>>)
logical_negation
less_than
add_class(INTEGER)
int_value (5)
add_query("e", "B", <<["a", "INTEGER"], ["B", "INTEGER"], ["INTEGER", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["A", "INTEGER"], ["d", "INTEGER"], ["C", "BOOLEAN"]>>, "e")
add_attribute("a", "A", "e")
add_query("b", "B", <<["B", "D"]>>, "e")
add_attribute("d", "a", "INTEGER")
logical_negation
add_command("C", "c", <<["D", "c"], ["D", "INTEGER"], ["b", "BOOLEAN"], ["B", "d"], ["a", "INTEGER"], ["e", "b"], ["a", "BOOLEAN"], ["c", "a"]>>)
generate_java_code
add_command("c", "C", <<["b", "BOOLEAN"], ["D", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "BOOLEAN"]>>)
add_class(e)
add_query("D", "d", <<["B", "BOOLEAN"]>>, "D")
add_attribute("e", "a", "INTEGER")
numerical_negation
bool_value (false)
less_than
bool_value (true)
logical_negation
bool_value (true)
int_value (16)
numerical_negation
logical_negation
greater_than
add_command("A", "e", <<["C", "BOOLEAN"], ["c", "e"], ["A", "BOOLEAN"]>>)
bool_value (true)
int_value (43)
generate_java_code
add_attribute("c", "d", "INTEGER")
add_call_chain(<<e>>)
bool_value (true)
add_call_chain(<<a,D,d>>)
add_call_chain(<<e>>)
bool_value (true)
numerical_negation
add_call_chain(<<e,D,C,d,e,B,b,B>>)
add_call_chain(<<C,d,a,BOOLEAN,D>>)
add_command("BOOLEAN", "INTEGER", <<["B", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["c", "INTEGER"], ["c", "b"]>>)
add_class(c)
add_attribute("e", "B", "BOOLEAN")
greater_than
less_than
add_query("C", "e", <<["INTEGER", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "A"], ["d", "B"], ["d", "INTEGER"], ["d", "INTEGER"], ["d", "BOOLEAN"]>>, "e")
add_call_chain(<<INTEGER,C>>)
bool_value (false)
multiplication
greater_than
bool_value (false)
add_attribute("D", "d", "C")
logical_negation
add_call_chain(<<a,b,D,C,BOOLEAN,C,INTEGER,e>>)
int_value (16)
add_command("c", "e", <<["b", "C"], ["B", "BOOLEAN"], ["C", "BOOLEAN"]>>)
type_check
add_call_chain(<<A,d>>)
add_attribute("A", "b", "BOOLEAN")
add_call_chain(<<INTEGER>>)
logical_negation
add_command("C", "INTEGER", <<["D", "C"], ["c", "D"], ["B", "INTEGER"], ["a", "BOOLEAN"], ["A", "c"], ["b", "BOOLEAN"], ["C", "BOOLEAN"]>>)
add_class(c)
add_class(d)
greater_than
add_call_chain(<<BOOLEAN,C,B,B,A,d>>)
add_query("b", "D", <<["D", "INTEGER"], ["INTEGER", "D"], ["BOOLEAN", "BOOLEAN"], ["D", "a"], ["A", "INTEGER"], ["e", "INTEGER"]>>, "A")
add_attribute("B", "b", "INTEGER")
numerical_negation
add_class(B)
add_command("B", "A", <<["d", "b"]>>)
add_command("C", "B", <<["D", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>)
bool_value (true)
disjunction
numerical_negation
add_call_chain(<<B,B,B,D,a,B,D,BOOLEAN,e>>)
add_query("e", "A", <<["c", "B"], ["D", "D"], ["B", "BOOLEAN"]>>, "A")
add_call_chain(<<c,C,C,INTEGER,BOOLEAN>>)
add_command("INTEGER", "A", <<["e", "INTEGER"], ["b", "C"]>>)
add_attribute("C", "c", "BOOLEAN")
generate_java_code
int_value (46)
equals
numerical_negation
add_query("C", "b", <<["a", "BOOLEAN"], ["e", "A"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["C", "b"], ["b", "BOOLEAN"]>>, "e")
add_call_chain(<<c,e,B>>)
equals
bool_value (false)
generate_java_code
add_query("D", "A", <<["e", "BOOLEAN"], ["c", "a"], ["e", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "INTEGER"], ["c", "INTEGER"], ["INTEGER", "BOOLEAN"], ["D", "c"]>>, "D")
add_class(A)
generate_java_code
add_call_chain(<<A,e,e,B,d>>)
less_than
int_value (3)
addition
equals
subtraction
bool_value (false)
logical_negation
add_attribute("C", "A", "BOOLEAN")
add_call_chain(<<INTEGER,d,A,A,A,D,INTEGER,a,A>>)
generate_java_code
int_value (6)
add_call_chain(<<b,a,C,d>>)
type_check
add_query("c", "INTEGER", <<["b", "INTEGER"]>>, "A")
add_command("C", "C", <<["C", "INTEGER"], ["e", "BOOLEAN"], ["d", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["D", "BOOLEAN"], ["INTEGER", "INTEGER"], ["B", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["C", "BOOLEAN"]>>)
add_command("A", "A", <<["e", "INTEGER"], ["c", "BOOLEAN"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["b", "A"], ["INTEGER", "INTEGER"], ["a", "BOOLEAN"], ["b", "INTEGER"], ["d", "BOOLEAN"]>>)
add_class(D)
add_call_chain(<<b,INTEGER,b>>)
logical_negation
conjunction
numerical_negation
add_attribute("D", "C", "D")
add_class(D)
add_attribute("c", "C", "C")
generate_java_code
add_query("b", "c", <<["c", "BOOLEAN"], ["d", "d"], ["B", "BOOLEAN"]>>, "d")
add_call_chain(<<d,D,A,D,A>>)
disjunction
add_attribute("D", "b", "BOOLEAN")
add_command("c", "c", <<["C", "INTEGER"], ["b", "BOOLEAN"], ["e", "INTEGER"], ["D", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["D", "e"], ["B", "A"], ["D", "BOOLEAN"]>>)
subtraction
numerical_negation
add_attribute("BOOLEAN", "D", "A")
add_query("d", "C", <<["A", "INTEGER"], ["BOOLEAN", "d"], ["A", "c"], ["A", "BOOLEAN"]>>, "a")
add_query("C", "A", <<["D", "d"], ["A", "C"], ["B", "BOOLEAN"], ["a", "BOOLEAN"]>>, "b")
add_call_chain(<<b,A,A,a,B,e,C>>)
add_attribute("c", "A", "INTEGER")
add_command("d", "c", <<["d", "INTEGER"], ["D", "INTEGER"], ["b", "D"], ["D", "D"], ["d", "BOOLEAN"], ["e", "D"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["d", "BOOLEAN"]>>)
type_check
add_call_chain(<<e,B,C>>)
add_command("d", "c", <<["D", "b"], ["e", "B"], ["B", "INTEGER"], ["d", "INTEGER"]>>)
add_query("e", "a", <<["B", "B"], ["C", "c"]>>, "D")
add_call_chain(<<a,D,C,BOOLEAN,a,a>>)
logical_negation
logical_negation
bool_value (true)
add_command("B", "D", <<["C", "BOOLEAN"], ["e", "C"], ["e", "e"], ["e", "b"], ["e", "C"], ["A", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["c", "e"]>>)
addition
type_check
add_call_chain(<<A,a,d,D>>)
add_class(e)
type_check
int_value (45)
add_command("d", "B", <<["e", "a"], ["a", "INTEGER"], ["A", "D"], ["A", "BOOLEAN"], ["b", "INTEGER"], ["C", "INTEGER"]>>)
int_value (1)
add_call_chain(<<c>>)
add_call_chain(<<A,D,D,C,c,D,c,A>>)
add_attribute("a", "B", "C")
add_command("B", "d", <<["D", "INTEGER"], ["b", "a"], ["e", "INTEGER"], ["B", "a"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["e", "BOOLEAN"]>>)
add_command("a", "a", <<["C", "BOOLEAN"], ["e", "INTEGER"], ["c", "e"], ["B", "BOOLEAN"], ["a", "B"], ["d", "C"], ["C", "D"]>>)
add_attribute("b", "B", "BOOLEAN")
add_attribute("c", "d", "D")
modulo
add_call_chain(<<INTEGER,d,d,e>>)
add_call_chain(<<B,D>>)
add_call_chain(<<INTEGER,INTEGER,D,BOOLEAN,A,D>>)
logical_negation
add_command("D", "b", <<["a", "INTEGER"], ["D", "a"]>>)
add_attribute("d", "D", "BOOLEAN")
add_attribute("B", "BOOLEAN", "INTEGER")
disjunction
add_class(C)
logical_negation
add_query("b", "C", <<["c", "D"], ["C", "BOOLEAN"]>>, "b")
add_call_chain(<<D,B,A,b,e>>)
int_value (26)
add_attribute("C", "c", "e")
add_attribute("C", "A", "BOOLEAN")
int_value (10)
bool_value (true)
logical_negation
add_attribute("BOOLEAN", "B", "INTEGER")
add_command("c", "a", <<["D", "INTEGER"], ["c", "A"]>>)
int_value (15)
add_class(B)
