add_attribute("B", "a", "INTEGER")
add_query("C", "d", <<["d", "BOOLEAN"], ["D", "a"]>>, "D")
add_call_chain(<<d,d,d,A,B,a,A,c>>)
numerical_negation
int_value (25)
disjunction
bool_value (false)
numerical_negation
add_attribute("A", "B", "INTEGER")
add_command("C", "e", <<["b", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["a", "a"]>>)
greater_than
int_value (17)
logical_negation
numerical_negation
add_command("BOOLEAN", "A", <<["BOOLEAN", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "BOOLEAN"]>>)
add_command("a", "e", <<["C", "D"], ["C", "INTEGER"], ["INTEGER", "INTEGER"], ["b", "BOOLEAN"]>>)
add_attribute("d", "a", "BOOLEAN")
add_query("c", "D", <<["A", "INTEGER"], ["D", "B"], ["B", "INTEGER"], ["BOOLEAN", "c"], ["A", "INTEGER"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["c", "INTEGER"], ["d", "INTEGER"]>>, "d")
add_call_chain(<<b,B,b,e,A>>)
add_call_chain(<<A,D,C,a,D,C,a,D>>)
logical_negation
modulo
add_attribute("D", "c", "INTEGER")
add_command("b", "D", <<["B", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["D", "INTEGER"], ["d", "INTEGER"], ["c", "d"], ["d", "INTEGER"], ["B", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "BOOLEAN"]>>)
disjunction
bool_value (false)
modulo
add_query("BOOLEAN", "D", <<["c", "BOOLEAN"], ["e", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["e", "c"]>>, "A")
bool_value (true)
numerical_negation
type_check
add_call_chain(<<e,c,c>>)
add_class(B)
add_attribute("B", "C", "BOOLEAN")
add_call_chain(<<C,A,A,D,INTEGER,a,A,c>>)
add_query("D", "B", <<["C", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "BOOLEAN"], ["d", "C"], ["B", "INTEGER"], ["B", "b"], ["A", "C"]>>, "D")
bool_value (true)
add_call_chain(<<a,INTEGER,a,D,d,BOOLEAN>>)
logical_negation
equals
numerical_negation
add_query("A", "BOOLEAN", <<["B", "INTEGER"], ["INTEGER", "INTEGER"], ["d", "INTEGER"], ["B", "C"], ["B", "e"], ["b", "INTEGER"]>>, "b")
add_attribute("d", "B", "c")
add_class(a)
type_check
add_command("a", "A", <<["B", "INTEGER"], ["c", "e"], ["B", "A"], ["a", "INTEGER"], ["D", "INTEGER"]>>)
bool_value (true)
logical_negation
add_call_chain(<<b,B,c,e,e,a,D,b,e>>)
int_value (4)
disjunction
add_call_chain(<<D,A,c,b,B,a,d,e,b>>)
add_attribute("a", "a", "c")
bool_value (false)
generate_java_code
add_call_chain(<<e,B,e,C,b,a,BOOLEAN,c>>)
generate_java_code
type_check
addition
add_command("a", "d", <<["d", "INTEGER"], ["d", "INTEGER"], ["b", "INTEGER"], ["a", "INTEGER"], ["A", "INTEGER"], ["D", "b"], ["BOOLEAN", "INTEGER"], ["e", "INTEGER"], ["D", "a"]>>)
generate_java_code
add_call_chain(<<BOOLEAN,A,e,d,B,A,a,c>>)
add_call_chain(<<INTEGER,BOOLEAN,C,B>>)
add_query("INTEGER", "INTEGER", <<["e", "INTEGER"], ["b", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["a", "INTEGER"]>>, "INTEGER")
equals
bool_value (false)
add_call_chain(<<D,A,A,C,BOOLEAN>>)
numerical_negation
add_call_chain(<<A,C,INTEGER,d,c>>)
bool_value (true)
generate_java_code
disjunction
add_call_chain(<<B>>)
numerical_negation
add_attribute("B", "B", "B")
add_query("D", "BOOLEAN", <<["d", "d"], ["A", "BOOLEAN"], ["c", "C"], ["BOOLEAN", "BOOLEAN"], ["d", "b"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["C", "b"], ["c", "INTEGER"]>>, "B")
conjunction
type_check
subtraction
generate_java_code
numerical_negation
type_check
add_class(e)
add_query("e", "d", <<["C", "INTEGER"], ["b", "BOOLEAN"], ["b", "a"], ["B", "e"], ["a", "a"], ["C", "B"]>>, "C")
add_call_chain(<<B,B,INTEGER,BOOLEAN,A,D,a>>)
add_query("d", "A", <<["b", "BOOLEAN"], ["d", "INTEGER"], ["C", "a"], ["a", "BOOLEAN"], ["d", "INTEGER"], ["d", "BOOLEAN"]>>, "e")
add_call_chain(<<B,d,C,INTEGER,C,d>>)
conjunction
generate_java_code
add_call_chain(<<BOOLEAN>>)
numerical_negation
add_command("A", "B", <<["INTEGER", "BOOLEAN"], ["A", "e"], ["e", "a"], ["A", "b"], ["B", "INTEGER"], ["d", "BOOLEAN"], ["d", "A"], ["a", "INTEGER"]>>)
conjunction
type_check
bool_value (true)
equals
generate_java_code
int_value (10)
add_command("e", "B", <<["A", "B"], ["a", "INTEGER"], ["a", "BOOLEAN"]>>)
add_call_chain(<<B,B,A,D>>)
add_query("c", "d", <<["C", "INTEGER"], ["C", "a"], ["C", "INTEGER"], ["A", "INTEGER"], ["c", "INTEGER"], ["A", "d"], ["a", "INTEGER"], ["b", "BOOLEAN"]>>, "C")
add_command("a", "B", <<["c", "INTEGER"]>>)
type_check
int_value (2)
subtraction
equals
numerical_negation
logical_negation
add_command("b", "A", <<["d", "INTEGER"], ["C", "INTEGER"]>>)
add_attribute("a", "C", "BOOLEAN")
logical_negation
bool_value (false)
type_check
add_class(a)
add_call_chain(<<d,b>>)
bool_value (false)
add_command("C", "C", <<["D", "d"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["e", "c"], ["B", "a"], ["A", "BOOLEAN"]>>)
add_attribute("e", "C", "BOOLEAN")
add_command("a", "a", <<["D", "INTEGER"], ["a", "BOOLEAN"], ["C", "BOOLEAN"]>>)
add_attribute("INTEGER", "D", "INTEGER")
int_value (35)
conjunction
int_value (23)
add_call_chain(<<c,B,C,d,INTEGER,c,BOOLEAN>>)
add_query("C", "B", <<["B", "BOOLEAN"], ["e", "INTEGER"], ["c", "C"], ["e", "BOOLEAN"], ["d", "INTEGER"]>>, "e")
numerical_negation
numerical_negation
int_value (20)
int_value (3)
add_query("B", "B", <<["c", "INTEGER"], ["a", "e"], ["C", "C"], ["d", "e"], ["b", "d"], ["BOOLEAN", "INTEGER"], ["D", "B"], ["A", "INTEGER"]>>, "c")
add_attribute("C", "A", "D")
bool_value (true)
add_query("e", "A", <<["B", "BOOLEAN"]>>, "d")
add_attribute("B", "B", "BOOLEAN")
add_command("A", "BOOLEAN", <<["b", "INTEGER"], ["c", "BOOLEAN"], ["b", "INTEGER"], ["D", "INTEGER"], ["b", "BOOLEAN"], ["a", "INTEGER"], ["B", "c"]>>)
numerical_negation
type_check
add_call_chain(<<INTEGER,b,e,c>>)
numerical_negation
numerical_negation
add_call_chain(<<c,D,A,b,b,B,c>>)
bool_value (true)
add_query("c", "e", <<["A", "BOOLEAN"], ["B", "INTEGER"], ["INTEGER", "INTEGER"]>>, "e")
add_call_chain(<<C,e,A,A,C,C>>)
add_attribute("D", "a", "A")
subtraction
add_query("D", "e", <<["C", "D"], ["BOOLEAN", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["C", "A"]>>, "INTEGER")
logical_negation
add_class(e)
add_command("a", "C", <<["b", "d"], ["d", "A"], ["INTEGER", "d"], ["A", "INTEGER"], ["e", "INTEGER"], ["C", "C"], ["d", "BOOLEAN"], ["D", "B"]>>)
logical_negation
int_value (29)
int_value (1)
logical_negation
add_class(B)
add_call_chain(<<b,d,b,c,d,c>>)
add_call_chain(<<e,D,BOOLEAN,c>>)
add_command("b", "a", <<["b", "C"], ["D", "BOOLEAN"], ["B", "C"], ["a", "INTEGER"], ["BOOLEAN", "a"]>>)
type_check
bool_value (true)
add_attribute("d", "D", "BOOLEAN")
add_attribute("d", "C", "INTEGER")
add_attribute("b", "b", "A")
add_query("d", "d", <<["A", "BOOLEAN"], ["b", "BOOLEAN"]>>, "C")
generate_java_code
add_query("BOOLEAN", "c", <<["e", "d"], ["C", "c"], ["b", "C"]>>, "B")
add_attribute("INTEGER", "c", "INTEGER")
bool_value (true)
int_value (27)
add_call_chain(<<D,BOOLEAN,BOOLEAN,a,b>>)
add_call_chain(<<b,B,A,B,a,BOOLEAN>>)
type_check
add_command("c", "d", <<["d", "BOOLEAN"], ["e", "b"], ["D", "a"], ["e", "C"], ["b", "e"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "INTEGER"]>>)
add_call_chain(<<e,d,C,C,C,D,D>>)
add_class(e)
int_value (6)
multiplication
int_value (6)
generate_java_code
less_than
generate_java_code
int_value (34)
add_query("C", "C", <<["B", "INTEGER"], ["b", "BOOLEAN"]>>, "A")
disjunction
add_query("a", "c", <<["A", "BOOLEAN"], ["c", "BOOLEAN"], ["a", "INTEGER"], ["d", "INTEGER"], ["e", "INTEGER"], ["D", "INTEGER"], ["a", "BOOLEAN"], ["C", "BOOLEAN"]>>, "D")
add_command("b", "B", <<["D", "INTEGER"], ["B", "INTEGER"], ["D", "C"], ["A", "BOOLEAN"], ["B", "INTEGER"]>>)
greater_than
type_check
add_attribute("C", "B", "BOOLEAN")
add_command("D", "e", <<["e", "c"], ["C", "INTEGER"], ["D", "c"], ["A", "A"], ["a", "b"], ["B", "BOOLEAN"]>>)
bool_value (false)
numerical_negation
disjunction
add_attribute("D", "e", "INTEGER")
int_value (30)
add_call_chain(<<e,D,A,A,d,BOOLEAN,D,c>>)
equals
add_attribute("c", "b", "BOOLEAN")
int_value (42)
add_command("c", "C", <<["C", "INTEGER"], ["D", "a"], ["d", "BOOLEAN"], ["c", "INTEGER"], ["A", "BOOLEAN"], ["b", "INTEGER"], ["C", "BOOLEAN"]>>)
add_command("a", "d", <<["D", "INTEGER"], ["e", "INTEGER"], ["e", "BOOLEAN"]>>)
numerical_negation
add_attribute("a", "c", "BOOLEAN")
numerical_negation
add_command("a", "a", <<["b", "BOOLEAN"], ["B", "b"], ["c", "INTEGER"], ["C", "INTEGER"]>>)
add_call_chain(<<e,C,b,e,D,e,d,c>>)
add_class(e)
add_command("INTEGER", "D", <<["INTEGER", "c"], ["d", "BOOLEAN"]>>)
add_command("C", "B", <<["D", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "INTEGER"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["c", "e"], ["c", "b"], ["INTEGER", "A"], ["D", "A"]>>)
bool_value (true)
add_attribute("a", "C", "INTEGER")
add_call_chain(<<c,B,B,C,A>>)
add_call_chain(<<d>>)
disjunction
quotient
add_call_chain(<<A>>)
add_call_chain(<<D,d,D,B,INTEGER,c,a>>)
logical_negation
type_check
numerical_negation
add_class(B)
subtraction
add_query("b", "B", <<["B", "BOOLEAN"]>>, "d")
int_value (24)
add_command("e", "d", <<["INTEGER", "INTEGER"], ["a", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "INTEGER"], ["d", "e"], ["b", "BOOLEAN"], ["e", "INTEGER"]>>)
add_call_chain(<<BOOLEAN,B,C,A,B,e,e,b,C>>)
add_class(C)
add_call_chain(<<d,d,BOOLEAN,c,B>>)
add_attribute("D", "c", "BOOLEAN")
add_call_chain(<<e,B,A,a,a,D>>)
add_call_chain(<<d,D>>)
add_class(BOOLEAN)
bool_value (true)
logical_negation
add_call_chain(<<e,C,B,A,B,D,A,c>>)
add_call_chain(<<A,c,a>>)
logical_negation
add_attribute("C", "d", "BOOLEAN")
add_command("A", "D", <<["e", "D"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["a", "INTEGER"], ["c", "a"], ["c", "a"]>>)
multiplication
addition
bool_value (false)
int_value (26)
bool_value (true)
bool_value (true)
