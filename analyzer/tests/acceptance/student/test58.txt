add_call_chain(<<A,B>>)
quotient
logical_negation
add_command("BOOLEAN", "B", <<["b", "b"], ["BOOLEAN", "INTEGER"], ["C", "INTEGER"], ["A", "e"], ["INTEGER", "C"], ["BOOLEAN", "INTEGER"], ["c", "BOOLEAN"]>>)
int_value (47)
bool_value (true)
conjunction
add_command("e", "c", <<["A", "INTEGER"], ["a", "e"], ["D", "A"]>>)
add_attribute("a", "D", "d")
add_command("e", "e", <<["d", "A"], ["D", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["d", "INTEGER"], ["b", "C"], ["a", "INTEGER"]>>)
add_call_chain(<<d,e,BOOLEAN,a,C,b,D,B>>)
numerical_negation
add_call_chain(<<BOOLEAN,A,b,BOOLEAN,A,A,B,b>>)
disjunction
add_query("INTEGER", "c", <<["d", "INTEGER"], ["C", "BOOLEAN"], ["B", "INTEGER"]>>, "c")
add_call_chain(<<C,C,c,d>>)
add_attribute("A", "c", "INTEGER")
add_attribute("INTEGER", "c", "INTEGER")
less_than
generate_java_code
logical_negation
bool_value (true)
add_query("d", "d", <<["C", "C"], ["B", "C"], ["D", "INTEGER"], ["a", "INTEGER"]>>, "c")
type_check
add_command("B", "c", <<["D", "b"], ["B", "A"], ["d", "INTEGER"], ["d", "B"], ["b", "INTEGER"], ["a", "BOOLEAN"], ["c", "B"], ["A", "C"], ["d", "BOOLEAN"]>>)
add_command("d", "b", <<["e", "C"], ["a", "B"], ["c", "BOOLEAN"], ["C", "b"], ["e", "INTEGER"], ["c", "INTEGER"]>>)
int_value (12)
add_query("b", "BOOLEAN", <<["D", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "INTEGER"], ["e", "INTEGER"], ["d", "INTEGER"]>>, "a")
generate_java_code
add_call_chain(<<e,D,a,e,d>>)
numerical_negation
add_query("B", "C", <<["B", "BOOLEAN"], ["c", "INTEGER"], ["c", "BOOLEAN"], ["b", "INTEGER"], ["C", "INTEGER"], ["D", "b"], ["b", "INTEGER"], ["c", "a"]>>, "A")
conjunction
conjunction
equals
add_query("d", "A", <<["a", "BOOLEAN"], ["b", "b"], ["C", "BOOLEAN"], ["C", "D"], ["b", "BOOLEAN"]>>, "c")
logical_negation
add_query("d", "b", <<["d", "c"], ["D", "BOOLEAN"], ["e", "b"], ["D", "INTEGER"], ["a", "BOOLEAN"], ["BOOLEAN", "C"], ["b", "BOOLEAN"], ["e", "d"], ["C", "INTEGER"]>>, "C")
generate_java_code
bool_value (false)
add_command("a", "C", <<["A", "INTEGER"], ["D", "a"], ["d", "BOOLEAN"], ["e", "b"], ["C", "D"], ["C", "BOOLEAN"], ["C", "D"], ["B", "a"]>>)
add_call_chain(<<c,a>>)
bool_value (false)
add_query("D", "D", <<["B", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "b"], ["BOOLEAN", "BOOLEAN"], ["A", "INTEGER"], ["d", "INTEGER"]>>, "B")
int_value (36)
generate_java_code
add_call_chain(<<A,C,C,a,D,B,d>>)
add_call_chain(<<B,d,d>>)
type_check
int_value (7)
add_command("A", "INTEGER", <<["BOOLEAN", "b"], ["A", "INTEGER"], ["e", "BOOLEAN"], ["c", "a"], ["b", "C"]>>)
int_value (46)
add_call_chain(<<BOOLEAN,d,D,A,D,A,d,B,c>>)
bool_value (true)
bool_value (false)
type_check
greater_than
numerical_negation
quotient
add_query("e", "B", <<["b", "BOOLEAN"], ["A", "c"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["A", "BOOLEAN"]>>, "b")
numerical_negation
add_call_chain(<<D,c>>)
type_check
add_attribute("C", "e", "BOOLEAN")
type_check
bool_value (true)
add_attribute("B", "e", "INTEGER")
add_attribute("a", "d", "BOOLEAN")
logical_negation
logical_negation
add_call_chain(<<A,D,B,a>>)
add_attribute("D", "C", "b")
add_class(d)
add_call_chain(<<INTEGER,a,A>>)
add_query("INTEGER", "INTEGER", <<["d", "c"], ["c", "BOOLEAN"]>>, "A")
bool_value (true)
quotient
add_call_chain(<<c,C,d,INTEGER>>)
int_value (27)
add_attribute("D", "B", "A")
type_check
add_command("e", "B", <<["e", "INTEGER"]>>)
logical_negation
logical_negation
add_attribute("B", "C", "C")
logical_negation
modulo
bool_value (false)
add_class(C)
add_call_chain(<<b,e,A,A,BOOLEAN,B,d>>)
add_class(b)
add_call_chain(<<c,B,B,B,BOOLEAN,e,e,e,D>>)
greater_than
logical_negation
conjunction
bool_value (false)
add_attribute("INTEGER", "D", "INTEGER")
add_query("B", "B", <<["C", "BOOLEAN"], ["b", "INTEGER"], ["B", "INTEGER"], ["D", "b"], ["a", "INTEGER"], ["b", "BOOLEAN"], ["c", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "d"]>>, "A")
quotient
bool_value (false)
add_class(C)
add_query("d", "B", <<["C", "BOOLEAN"], ["A", "a"], ["d", "INTEGER"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["b", "a"]>>, "d")
generate_java_code
add_query("INTEGER", "C", <<["a", "INTEGER"], ["a", "INTEGER"], ["b", "C"], ["a", "BOOLEAN"], ["c", "e"], ["A", "d"]>>, "d")
add_class(B)
add_query("B", "d", <<["D", "BOOLEAN"], ["D", "c"], ["b", "C"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["B", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "INTEGER"]>>, "c")
type_check
add_query("b", "d", <<["B", "BOOLEAN"], ["B", "INTEGER"], ["C", "INTEGER"], ["e", "BOOLEAN"], ["BOOLEAN", "B"], ["d", "B"]>>, "BOOLEAN")
generate_java_code
add_call_chain(<<b,c,b,C,e,C,INTEGER,D>>)
add_query("C", "d", <<["D", "BOOLEAN"], ["d", "INTEGER"], ["d", "e"], ["BOOLEAN", "BOOLEAN"], ["d", "INTEGER"]>>, "c")
conjunction
add_class(c)
generate_java_code
int_value (37)
add_query("B", "a", <<["b", "INTEGER"], ["c", "INTEGER"]>>, "C")
add_class(C)
generate_java_code
type_check
generate_java_code
add_call_chain(<<D,b,b,b,A,A>>)
int_value (2)
add_attribute("d", "B", "INTEGER")
addition
add_command("e", "d", <<["BOOLEAN", "INTEGER"], ["c", "BOOLEAN"], ["e", "INTEGER"], ["A", "B"], ["b", "INTEGER"]>>)
add_query("a", "c", <<["d", "INTEGER"], ["d", "INTEGER"], ["C", "INTEGER"], ["A", "A"]>>, "D")
add_call_chain(<<b,B,D,b,c,D,b>>)
numerical_negation
generate_java_code
generate_java_code
add_attribute("B", "d", "C")
add_query("a", "c", <<["B", "A"], ["BOOLEAN", "BOOLEAN"]>>, "D")
numerical_negation
generate_java_code
add_query("c", "b", <<["d", "INTEGER"]>>, "B")
less_than
equals
type_check
add_command("C", "d", <<["D", "INTEGER"], ["C", "A"]>>)
add_attribute("e", "A", "INTEGER")
add_attribute("B", "b", "BOOLEAN")
add_query("e", "e", <<["a", "INTEGER"], ["B", "INTEGER"], ["C", "INTEGER"], ["B", "INTEGER"], ["e", "INTEGER"], ["a", "d"], ["INTEGER", "INTEGER"]>>, "C")
add_query("A", "b", <<["D", "b"], ["A", "a"]>>, "d")
add_command("d", "B", <<["A", "b"]>>)
bool_value (false)
add_call_chain(<<B>>)
add_class(a)
add_query("b", "C", <<["INTEGER", "INTEGER"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["D", "BOOLEAN"]>>, "e")
add_attribute("e", "D", "INTEGER")
add_call_chain(<<c,BOOLEAN,b,a>>)
bool_value (true)
add_call_chain(<<A,b,B,BOOLEAN,e>>)
add_query("B", "C", <<["a", "c"]>>, "a")
logical_negation
add_query("C", "INTEGER", <<["A", "BOOLEAN"], ["B", "INTEGER"], ["A", "e"]>>, "C")
type_check
add_query("a", "a", <<["d", "BOOLEAN"]>>, "D")
add_query("c", "a", <<["D", "BOOLEAN"], ["d", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>, "e")
type_check
add_command("INTEGER", "D", <<["c", "INTEGER"], ["C", "b"], ["e", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "a"], ["D", "e"], ["B", "a"]>>)
add_call_chain(<<c,c,b,B,c,A,B,B,BOOLEAN>>)
conjunction
add_attribute("B", "c", "BOOLEAN")
bool_value (true)
modulo
add_call_chain(<<e,d>>)
addition
add_call_chain(<<D,d>>)
add_class(C)
numerical_negation
numerical_negation
int_value (33)
add_command("A", "b", <<["D", "INTEGER"], ["d", "C"], ["c", "B"], ["d", "BOOLEAN"], ["C", "a"], ["D", "D"], ["D", "INTEGER"], ["d", "INTEGER"]>>)
add_call_chain(<<C,A,C,A,A>>)
add_call_chain(<<d,C,D,e,e>>)
add_attribute("D", "b", "BOOLEAN")
less_than
add_query("A", "A", <<["B", "D"], ["A", "INTEGER"], ["INTEGER", "A"], ["C", "INTEGER"], ["D", "d"], ["c", "INTEGER"], ["d", "d"]>>, "e")
add_call_chain(<<a,A,A,c,BOOLEAN,D,d,d>>)
add_query("a", "C", <<["a", "INTEGER"], ["c", "d"], ["D", "BOOLEAN"]>>, "B")
add_attribute("B", "C", "c")
add_command("c", "D", <<["d", "BOOLEAN"], ["c", "BOOLEAN"], ["BOOLEAN", "A"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["B", "INTEGER"], ["C", "B"], ["b", "BOOLEAN"], ["B", "BOOLEAN"]>>)
logical_negation
add_command("BOOLEAN", "c", <<["INTEGER", "A"], ["a", "BOOLEAN"]>>)
add_call_chain(<<INTEGER,D,A>>)
logical_negation
generate_java_code
add_attribute("INTEGER", "C", "BOOLEAN")
add_call_chain(<<A,c>>)
numerical_negation
logical_negation
add_attribute("C", "BOOLEAN", "INTEGER")
add_attribute("C", "c", "a")
int_value (31)
bool_value (false)
int_value (18)
type_check
add_attribute("D", "B", "INTEGER")
int_value (12)
quotient
logical_negation
add_attribute("D", "A", "INTEGER")
int_value (19)
add_command("A", "C", <<["C", "C"], ["b", "BOOLEAN"], ["b", "d"]>>)
quotient
bool_value (false)
add_call_chain(<<A,B,e,A,BOOLEAN,C,A,D>>)
generate_java_code
add_query("A", "BOOLEAN", <<["C", "INTEGER"], ["B", "INTEGER"], ["B", "INTEGER"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["B", "c"], ["c", "BOOLEAN"]>>, "B")
bool_value (true)
numerical_negation
int_value (16)
add_attribute("D", "a", "BOOLEAN")
numerical_negation
add_command("D", "B", <<["D", "INTEGER"], ["INTEGER", "A"], ["b", "c"], ["d", "INTEGER"], ["B", "INTEGER"], ["a", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "INTEGER"]>>)
int_value (3)
add_command("d", "B", <<["D", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "INTEGER"], ["B", "B"]>>)
bool_value (false)
int_value (29)
multiplication
greater_than
add_attribute("C", "d", "A")
add_call_chain(<<B,b>>)
add_attribute("b", "b", "BOOLEAN")
add_call_chain(<<A,A,D>>)
numerical_negation
type_check
add_attribute("D", "e", "INTEGER")
bool_value (false)
numerical_negation
add_call_chain(<<e,d,B,c,c>>)
less_than
add_command("c", "A", <<["c", "INTEGER"], ["d", "BOOLEAN"], ["c", "b"], ["a", "BOOLEAN"], ["C", "INTEGER"], ["C", "c"]>>)
add_call_chain(<<C,B,C,c>>)
add_class(C)
subtraction
generate_java_code
conjunction
bool_value (true)
add_call_chain(<<INTEGER,c,c>>)
add_query("a", "D", <<["a", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["b", "INTEGER"], ["e", "INTEGER"], ["D", "BOOLEAN"]>>, "B")
add_attribute("A", "B", "BOOLEAN")
int_value (40)
add_class(BOOLEAN)
add_class(c)
conjunction
logical_negation
int_value (47)
add_call_chain(<<d,D,b,a,C>>)
