generate_java_code
disjunction
bool_value (false)
type_check
add_attribute("INTEGER", "e", "BOOLEAN")
disjunction
greater_than
type_check
add_call_chain(<<B,d>>)
int_value (47)
add_attribute("c", "e", "INTEGER")
add_call_chain(<<c,D,A,A,D,d,d,A,e>>)
add_attribute("a", "e", "INTEGER")
add_call_chain(<<B,C,BOOLEAN,INTEGER>>)
bool_value (true)
conjunction
disjunction
type_check
logical_negation
bool_value (true)
logical_negation
add_command("c", "b", <<["b", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["e", "INTEGER"], ["B", "b"], ["A", "BOOLEAN"], ["C", "BOOLEAN"]>>)
add_query("b", "c", <<["c", "INTEGER"], ["a", "INTEGER"]>>, "B")
add_call_chain(<<a,a,C,C,e,D,INTEGER,c>>)
multiplication
add_command("B", "BOOLEAN", <<["b", "INTEGER"], ["D", "INTEGER"]>>)
add_call_chain(<<a,INTEGER,a,INTEGER,INTEGER>>)
add_query("c", "A", <<["a", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "INTEGER"]>>, "d")
add_class(e)
add_class(C)
add_call_chain(<<BOOLEAN,c,BOOLEAN,b,b,B,b,B>>)
generate_java_code
add_call_chain(<<d,a,c,A,C>>)
type_check
add_query("b", "B", <<["B", "b"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["b", "INTEGER"], ["d", "INTEGER"], ["d", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "BOOLEAN"]>>, "A")
add_call_chain(<<BOOLEAN,a,C,b,BOOLEAN>>)
add_call_chain(<<B,c>>)
numerical_negation
logical_negation
conjunction
add_call_chain(<<INTEGER,C,d,e>>)
add_command("INTEGER", "b", <<["D", "INTEGER"], ["b", "INTEGER"], ["d", "C"], ["D", "BOOLEAN"], ["C", "c"], ["D", "e"], ["A", "INTEGER"], ["D", "e"], ["A", "INTEGER"]>>)
disjunction
add_call_chain(<<b,e,C,e,B>>)
add_call_chain(<<A,B,A,b,a,INTEGER,A,c>>)
logical_negation
numerical_negation
type_check
add_command("a", "D", <<["D", "INTEGER"]>>)
logical_negation
numerical_negation
logical_negation
add_attribute("A", "d", "BOOLEAN")
add_command("b", "D", <<["INTEGER", "B"], ["D", "INTEGER"], ["b", "BOOLEAN"], ["b", "INTEGER"], ["C", "d"], ["A", "INTEGER"], ["C", "d"], ["C", "BOOLEAN"], ["a", "B"]>>)
int_value (31)
generate_java_code
add_command("BOOLEAN", "e", <<["C", "BOOLEAN"], ["d", "a"]>>)
bool_value (true)
add_command("a", "A", <<["INTEGER", "INTEGER"], ["d", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "b"], ["A", "B"], ["b", "INTEGER"]>>)
bool_value (true)
add_command("BOOLEAN", "B", <<["a", "BOOLEAN"], ["b", "D"], ["D", "e"], ["b", "BOOLEAN"], ["D", "INTEGER"], ["C", "b"], ["C", "INTEGER"], ["BOOLEAN", "INTEGER"], ["d", "C"]>>)
int_value (36)
add_query("D", "A", <<["e", "a"], ["BOOLEAN", "c"], ["c", "INTEGER"], ["D", "BOOLEAN"], ["a", "C"], ["BOOLEAN", "BOOLEAN"]>>, "D")
add_call_chain(<<a,a,a,D>>)
greater_than
bool_value (false)
add_attribute("BOOLEAN", "c", "BOOLEAN")
add_command("e", "a", <<["B", "A"], ["a", "INTEGER"]>>)
add_attribute("B", "b", "D")
bool_value (false)
numerical_negation
bool_value (true)
add_command("d", "e", <<["A", "b"], ["B", "BOOLEAN"]>>)
addition
add_call_chain(<<B,A,c,D,A,INTEGER>>)
generate_java_code
add_class(A)
add_attribute("C", "D", "D")
type_check
int_value (24)
add_attribute("A", "D", "A")
equals
add_attribute("D", "a", "INTEGER")
type_check
conjunction
bool_value (false)
bool_value (true)
type_check
add_call_chain(<<BOOLEAN,C,a,B>>)
add_attribute("A", "A", "D")
logical_negation
numerical_negation
disjunction
add_call_chain(<<c,A,B,C>>)
bool_value (true)
logical_negation
add_call_chain(<<INTEGER,A,B,INTEGER,A,b,D>>)
numerical_negation
less_than
add_attribute("c", "C", "BOOLEAN")
type_check
add_class(BOOLEAN)
add_call_chain(<<d,INTEGER,A>>)
bool_value (true)
add_call_chain(<<c,d,d,a,e,A,D,B>>)
add_query("d", "INTEGER", <<["a", "BOOLEAN"], ["d", "INTEGER"], ["b", "e"], ["A", "INTEGER"], ["c", "INTEGER"], ["d", "INTEGER"], ["d", "BOOLEAN"]>>, "e")
add_command("b", "A", <<["BOOLEAN", "INTEGER"], ["BOOLEAN", "INTEGER"], ["d", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "c"], ["INTEGER", "INTEGER"], ["e", "INTEGER"]>>)
add_attribute("d", "C", "BOOLEAN")
disjunction
add_attribute("c", "b", "e")
logical_negation
modulo
add_query("b", "a", <<["INTEGER", "e"]>>, "B")
generate_java_code
add_class(e)
add_class(B)
bool_value (false)
add_call_chain(<<b,A,C,INTEGER,c,d,C,b,B>>)
int_value (32)
add_command("b", "b", <<["e", "INTEGER"], ["D", "b"], ["C", "INTEGER"], ["c", "INTEGER"]>>)
add_class(c)
bool_value (false)
add_call_chain(<<D>>)
add_query("C", "e", <<["e", "INTEGER"], ["A", "INTEGER"], ["a", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>, "INTEGER")
add_command("c", "a", <<["d", "INTEGER"], ["c", "INTEGER"]>>)
add_command("A", "C", <<["c", "INTEGER"]>>)
logical_negation
add_call_chain(<<D,C,c,a,a,d>>)
greater_than
modulo
add_call_chain(<<a,A,D,e,e,e,a,a>>)
add_call_chain(<<B,e,D,A,e,C,b>>)
add_attribute("D", "B", "A")
int_value (37)
add_call_chain(<<A>>)
logical_negation
add_call_chain(<<INTEGER,e,INTEGER>>)
bool_value (true)
type_check
disjunction
logical_negation
disjunction
add_attribute("e", "e", "INTEGER")
add_command("C", "d", <<["c", "INTEGER"], ["A", "BOOLEAN"], ["C", "BOOLEAN"]>>)
add_attribute("BOOLEAN", "a", "INTEGER")
generate_java_code
bool_value (false)
int_value (1)
generate_java_code
numerical_negation
add_attribute("C", "A", "BOOLEAN")
type_check
add_call_chain(<<INTEGER,b,e,e,a,d,e>>)
greater_than
generate_java_code
int_value (22)
add_attribute("b", "b", "b")
generate_java_code
add_call_chain(<<d,d,B>>)
add_call_chain(<<B,B,c,C,C,b,C>>)
disjunction
logical_negation
numerical_negation
numerical_negation
add_class(b)
add_query("b", "e", <<["D", "d"], ["d", "D"], ["C", "INTEGER"]>>, "C")
int_value (7)
add_command("B", "A", <<["C", "BOOLEAN"], ["b", "INTEGER"], ["A", "d"], ["B", "D"], ["BOOLEAN", "INTEGER"], ["d", "e"]>>)
numerical_negation
int_value (8)
add_class(A)
logical_negation
numerical_negation
add_query("c", "A", <<["C", "INTEGER"], ["B", "BOOLEAN"], ["D", "b"], ["a", "INTEGER"], ["d", "BOOLEAN"], ["D", "C"], ["a", "BOOLEAN"], ["D", "INTEGER"], ["B", "INTEGER"]>>, "B")
add_attribute("b", "b", "BOOLEAN")
numerical_negation
logical_negation
int_value (27)
bool_value (true)
add_class(INTEGER)
int_value (31)
int_value (40)
bool_value (true)
add_query("B", "INTEGER", <<["b", "BOOLEAN"], ["B", "b"]>>, "B")
add_call_chain(<<C,C,A,e,b>>)
add_command("d", "b", <<["D", "INTEGER"], ["C", "BOOLEAN"], ["B", "INTEGER"], ["e", "BOOLEAN"], ["d", "c"], ["d", "c"], ["a", "INTEGER"], ["D", "BOOLEAN"], ["D", "A"]>>)
add_command("B", "e", <<["BOOLEAN", "INTEGER"], ["e", "b"], ["C", "a"], ["B", "A"]>>)
type_check
generate_java_code
add_query("b", "D", <<["D", "INTEGER"], ["c", "BOOLEAN"], ["c", "a"], ["d", "BOOLEAN"]>>, "INTEGER")
type_check
add_call_chain(<<D,BOOLEAN,a>>)
add_call_chain(<<C,d,d>>)
bool_value (true)
disjunction
type_check
generate_java_code
add_attribute("e", "D", "INTEGER")
add_command("D", "b", <<["e", "INTEGER"], ["b", "BOOLEAN"], ["b", "INTEGER"], ["c", "INTEGER"], ["d", "INTEGER"], ["a", "INTEGER"], ["D", "d"], ["BOOLEAN", "INTEGER"]>>)
greater_than
multiplication
add_call_chain(<<a,e,e>>)
disjunction
bool_value (true)
add_query("C", "A", <<["b", "INTEGER"], ["e", "BOOLEAN"], ["C", "BOOLEAN"]>>, "c")
add_call_chain(<<a,a,e,A,b,e,e,c>>)
quotient
multiplication
add_query("C", "e", <<["C", "INTEGER"], ["c", "INTEGER"], ["d", "BOOLEAN"]>>, "C")
