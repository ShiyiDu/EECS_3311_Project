int_value (13)
add_call_chain(<<e,c,a,A,INTEGER,C,d,A,D>>)
add_command("BOOLEAN", "C", <<["d", "c"], ["d", "INTEGER"], ["D", "d"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["c", "INTEGER"], ["A", "INTEGER"], ["INTEGER", "d"]>>)
add_call_chain(<<e,b,BOOLEAN,B,e,c,d,b>>)
add_call_chain(<<B,BOOLEAN>>)
add_call_chain(<<d,D,B,e,d,b,C,BOOLEAN,A>>)
conjunction
logical_negation
add_query("B", "D", <<["b", "BOOLEAN"], ["a", "e"], ["D", "BOOLEAN"]>>, "e")
disjunction
addition
int_value (17)
logical_negation
numerical_negation
add_attribute("e", "a", "INTEGER")
add_call_chain(<<d,A,B,D,e,c>>)
add_call_chain(<<B>>)
int_value (42)
add_attribute("d", "c", "INTEGER")
add_command("b", "b", <<["e", "a"], ["D", "BOOLEAN"], ["e", "b"], ["C", "INTEGER"], ["B", "e"], ["b", "INTEGER"], ["A", "INTEGER"]>>)
int_value (35)
add_attribute("INTEGER", "INTEGER", "INTEGER")
add_attribute("d", "c", "INTEGER")
greater_than
add_attribute("C", "d", "INTEGER")
add_call_chain(<<b,D,c,A,A>>)
add_call_chain(<<B>>)
quotient
add_query("b", "d", <<["C", "a"], ["c", "C"], ["A", "INTEGER"], ["A", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "D"], ["d", "INTEGER"]>>, "b")
logical_negation
add_query("INTEGER", "C", <<["A", "b"], ["BOOLEAN", "BOOLEAN"], ["c", "A"]>>, "c")
add_call_chain(<<b,C,c,e,B,B,d,b,D>>)
add_class(e)
add_attribute("b", "a", "INTEGER")
add_attribute("C", "b", "INTEGER")
less_than
add_query("d", "C", <<["B", "BOOLEAN"]>>, "D")
less_than
generate_java_code
logical_negation
add_query("a", "D", <<["a", "INTEGER"], ["d", "BOOLEAN"], ["B", "INTEGER"], ["c", "B"], ["e", "INTEGER"], ["a", "INTEGER"], ["c", "D"], ["B", "INTEGER"], ["B", "INTEGER"]>>, "a")
numerical_negation
logical_negation
int_value (26)
add_call_chain(<<b,e,BOOLEAN,D>>)
type_check
int_value (37)
add_attribute("b", "c", "BOOLEAN")
equals
less_than
add_command("B", "d", <<["c", "INTEGER"]>>)
add_class(B)
numerical_negation
numerical_negation
add_class(B)
add_call_chain(<<b,a,b,B,INTEGER,D,C>>)
int_value (37)
generate_java_code
addition
add_attribute("BOOLEAN", "D", "INTEGER")
bool_value (true)
add_command("B", "D", <<["a", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "D"], ["D", "d"], ["a", "C"]>>)
type_check
add_call_chain(<<D,A,C>>)
int_value (3)
add_attribute("e", "BOOLEAN", "a")
add_call_chain(<<BOOLEAN,a,A,d,c,A,C,BOOLEAN>>)
add_command("d", "e", <<["D", "INTEGER"], ["a", "BOOLEAN"]>>)
add_attribute("D", "b", "INTEGER")
add_attribute("B", "B", "INTEGER")
type_check
bool_value (false)
int_value (8)
add_command("C", "d", <<["d", "INTEGER"], ["d", "b"], ["a", "C"], ["c", "INTEGER"], ["C", "INTEGER"], ["C", "INTEGER"]>>)
logical_negation
logical_negation
equals
add_command("c", "e", <<["B", "C"], ["c", "INTEGER"], ["a", "INTEGER"], ["b", "BOOLEAN"], ["INTEGER", "B"], ["A", "c"], ["A", "BOOLEAN"], ["D", "D"], ["c", "BOOLEAN"]>>)
add_class(D)
type_check
add_call_chain(<<D,e,d,INTEGER,b,a>>)
int_value (15)
int_value (12)
int_value (44)
add_query("a", "B", <<["D", "BOOLEAN"], ["d", "INTEGER"], ["B", "INTEGER"]>>, "A")
numerical_negation
logical_negation
add_attribute("INTEGER", "BOOLEAN", "INTEGER")
generate_java_code
type_check
add_query("C", "e", <<["BOOLEAN", "BOOLEAN"], ["d", "INTEGER"], ["e", "BOOLEAN"]>>, "d")
add_command("a", "e", <<["e", "INTEGER"], ["D", "INTEGER"], ["B", "D"]>>)
add_command("A", "c", <<["A", "d"], ["BOOLEAN", "C"]>>)
add_call_chain(<<INTEGER,A,D,INTEGER,INTEGER,c,B,C,a>>)
add_attribute("b", "C", "D")
bool_value (false)
type_check
int_value (34)
add_class(B)
add_command("c", "d", <<["d", "BOOLEAN"], ["A", "INTEGER"]>>)
less_than
add_query("A", "A", <<["A", "BOOLEAN"], ["D", "BOOLEAN"]>>, "C")
add_attribute("a", "c", "INTEGER")
numerical_negation
add_query("BOOLEAN", "c", <<["C", "c"], ["c", "BOOLEAN"], ["B", "INTEGER"], ["D", "A"], ["C", "BOOLEAN"], ["c", "c"], ["C", "BOOLEAN"], ["e", "D"]>>, "B")
add_attribute("D", "D", "BOOLEAN")
add_call_chain(<<a,D,e,B>>)
add_query("B", "d", <<["d", "BOOLEAN"], ["b", "A"], ["D", "b"], ["d", "INTEGER"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["a", "B"], ["D", "BOOLEAN"], ["a", "INTEGER"]>>, "A")
add_attribute("a", "B", "INTEGER")
add_query("b", "A", <<["INTEGER", "C"], ["D", "BOOLEAN"], ["BOOLEAN", "A"], ["c", "INTEGER"], ["D", "BOOLEAN"], ["C", "B"], ["e", "BOOLEAN"], ["D", "BOOLEAN"]>>, "C")
add_query("C", "C", <<["d", "BOOLEAN"], ["c", "INTEGER"], ["c", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "D"], ["b", "INTEGER"], ["e", "BOOLEAN"], ["A", "a"]>>, "d")
logical_negation
add_call_chain(<<C,D,e,b,D,c,D,b>>)
add_query("a", "D", <<["A", "INTEGER"], ["a", "b"], ["A", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "INTEGER"], ["B", "BOOLEAN"]>>, "c")
add_call_chain(<<a,b,D,a,d,c,e,A,B>>)
int_value (5)
modulo
add_query("C", "b", <<["b", "B"], ["a", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["C", "INTEGER"]>>, "d")
logical_negation
add_call_chain(<<B>>)
add_call_chain(<<C>>)
addition
bool_value (false)
add_class(C)
equals
add_call_chain(<<A,A,e,B,c,d>>)
numerical_negation
add_call_chain(<<c,c,BOOLEAN,A,D,d>>)
int_value (4)
add_query("D", "a", <<["B", "INTEGER"], ["e", "a"], ["a", "b"], ["A", "INTEGER"]>>, "a")
add_call_chain(<<B,C,C,b,d,B,C>>)
less_than
add_call_chain(<<B,e,e,C,C,b,B>>)
add_attribute("d", "D", "BOOLEAN")
logical_negation
add_call_chain(<<D,d,A,d,BOOLEAN,d>>)
bool_value (true)
add_attribute("c", "C", "D")
add_call_chain(<<C,a,C,c,e,A,e,a>>)
add_class(d)
numerical_negation
add_query("A", "INTEGER", <<["b", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["c", "BOOLEAN"], ["BOOLEAN", "a"], ["BOOLEAN", "BOOLEAN"], ["B", "A"]>>, "c")
logical_negation
add_command("d", "d", <<["b", "INTEGER"], ["d", "INTEGER"], ["c", "B"], ["INTEGER", "BOOLEAN"]>>)
logical_negation
add_call_chain(<<e,D,a,B>>)
numerical_negation
add_call_chain(<<B,c,A>>)
add_class(d)
add_query("c", "e", <<["D", "BOOLEAN"], ["BOOLEAN", "D"], ["D", "INTEGER"], ["INTEGER", "c"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "BOOLEAN"]>>, "d")
add_command("b", "B", <<["A", "d"], ["C", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["B", "BOOLEAN"], ["INTEGER", "e"], ["B", "BOOLEAN"]>>)
modulo
generate_java_code
add_command("C", "d", <<["BOOLEAN", "BOOLEAN"], ["D", "A"], ["BOOLEAN", "INTEGER"], ["B", "BOOLEAN"]>>)
add_attribute("D", "b", "d")
add_call_chain(<<e,b,A,A,d,b,a>>)
type_check
add_call_chain(<<e,d,c,c,BOOLEAN,d,b,D>>)
add_command("INTEGER", "d", <<["D", "INTEGER"], ["b", "BOOLEAN"]>>)
add_command("d", "C", <<["INTEGER", "INTEGER"], ["B", "BOOLEAN"], ["INTEGER", "INTEGER"], ["b", "A"], ["INTEGER", "INTEGER"]>>)
numerical_negation
less_than
numerical_negation
add_query("B", "c", <<["c", "INTEGER"], ["C", "d"]>>, "a")
quotient
add_query("C", "B", <<["C", "BOOLEAN"], ["B", "C"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["b", "BOOLEAN"], ["d", "INTEGER"]>>, "c")
generate_java_code
add_call_chain(<<D,A,C,C,a,a,BOOLEAN>>)
add_call_chain(<<d,D,B,D>>)
generate_java_code
int_value (46)
numerical_negation
conjunction
int_value (27)
add_command("A", "a", <<["INTEGER", "A"]>>)
add_class(D)
disjunction
add_call_chain(<<a,e,a,A,A,e,e,C>>)
numerical_negation
logical_negation
add_query("D", "c", <<["c", "BOOLEAN"], ["c", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["B", "INTEGER"], ["BOOLEAN", "INTEGER"], ["A", "INTEGER"], ["D", "INTEGER"]>>, "e")
type_check
generate_java_code
generate_java_code
add_call_chain(<<C,B,B,C,a,D,D,D>>)
add_attribute("INTEGER", "A", "BOOLEAN")
add_call_chain(<<e,A,INTEGER,c,D,a,INTEGER,B>>)
add_query("D", "a", <<["a", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "B"], ["e", "INTEGER"], ["C", "a"], ["D", "INTEGER"], ["D", "INTEGER"]>>, "D")
add_class(D)
add_attribute("D", "e", "INTEGER")
add_attribute("INTEGER", "B", "a")
int_value (44)
add_query("d", "A", <<["a", "BOOLEAN"], ["D", "d"], ["C", "e"], ["a", "C"], ["a", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "INTEGER"]>>, "B")
int_value (2)
add_command("a", "D", <<["C", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "e"], ["e", "BOOLEAN"]>>)
add_query("C", "A", <<["a", "B"], ["B", "INTEGER"], ["B", "INTEGER"], ["B", "INTEGER"], ["D", "INTEGER"], ["d", "INTEGER"]>>, "b")
add_attribute("d", "b", "INTEGER")
add_query("B", "B", <<["A", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["B", "BOOLEAN"]>>, "B")
add_attribute("D", "INTEGER", "d")
add_command("b", "a", <<["e", "BOOLEAN"], ["d", "B"]>>)
add_query("e", "e", <<["a", "INTEGER"], ["B", "BOOLEAN"]>>, "B")
add_query("a", "D", <<["e", "INTEGER"], ["e", "e"], ["e", "a"], ["A", "b"], ["A", "INTEGER"]>>, "BOOLEAN")
add_class(a)
add_class(b)
add_call_chain(<<A,b>>)
type_check
int_value (47)
generate_java_code
generate_java_code
bool_value (true)
add_query("A", "a", <<["d", "a"], ["e", "BOOLEAN"], ["C", "c"], ["D", "BOOLEAN"], ["e", "B"], ["d", "BOOLEAN"], ["d", "INTEGER"]>>, "BOOLEAN")
disjunction
subtraction
numerical_negation
add_call_chain(<<A,A,d>>)
add_command("INTEGER", "A", <<["D", "INTEGER"], ["INTEGER", "INTEGER"], ["e", "BOOLEAN"], ["A", "BOOLEAN"], ["BOOLEAN", "a"], ["e", "INTEGER"]>>)
int_value (38)
bool_value (false)
add_call_chain(<<c,B,BOOLEAN,c>>)
add_call_chain(<<a,B,A,INTEGER,b>>)
add_command("D", "d", <<["D", "INTEGER"], ["C", "D"], ["c", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["b", "INTEGER"], ["D", "INTEGER"], ["c", "e"], ["d", "BOOLEAN"]>>)
bool_value (false)
numerical_negation
add_call_chain(<<A,a,B,D,a>>)
type_check
add_call_chain(<<C,C,A,C,BOOLEAN,a>>)
logical_negation
modulo
add_command("b", "B", <<["c", "BOOLEAN"], ["B", "BOOLEAN"]>>)
bool_value (false)
add_call_chain(<<a,d>>)
add_attribute("a", "B", "INTEGER")
equals
numerical_negation
add_query("a", "B", <<["D", "A"]>>, "e")
add_query("C", "D", <<["b", "INTEGER"], ["B", "INTEGER"], ["B", "INTEGER"], ["a", "BOOLEAN"], ["c", "INTEGER"], ["e", "a"]>>, "e")
addition
add_command("c", "b", <<["e", "INTEGER"], ["a", "C"], ["d", "INTEGER"], ["A", "INTEGER"], ["D", "BOOLEAN"]>>)
add_call_chain(<<D,C,D,D,c,A>>)
int_value (42)
logical_negation
multiplication
logical_negation
bool_value (false)
add_attribute("D", "A", "BOOLEAN")
add_attribute("C", "A", "D")
add_query("c", "e", <<["INTEGER", "BOOLEAN"], ["a", "INTEGER"], ["b", "INTEGER"], ["d", "a"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["B", "BOOLEAN"]>>, "d")
add_query("A", "c", <<["INTEGER", "C"], ["d", "INTEGER"], ["A", "INTEGER"], ["A", "INTEGER"], ["D", "INTEGER"], ["c", "INTEGER"]>>, "D")
add_attribute("c", "b", "INTEGER")
bool_value (true)
int_value (34)
