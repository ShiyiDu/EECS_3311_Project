add_call_chain(<<a,A,C>>)
bool_value (false)
conjunction
bool_value (false)
add_call_chain(<<D>>)
type_check
conjunction
int_value (29)
bool_value (false)
int_value (35)
add_command("b", "c", <<["c", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "b"], ["a", "d"], ["d", "INTEGER"]>>)
add_attribute("B", "c", "BOOLEAN")
add_query("b", "c", <<["e", "d"], ["a", "BOOLEAN"], ["b", "D"], ["c", "INTEGER"], ["A", "INTEGER"]>>, "B")
logical_negation
add_class(INTEGER)
add_attribute("C", "a", "C")
numerical_negation
greater_than
add_class(B)
add_attribute("C", "e", "INTEGER")
add_class(A)
add_call_chain(<<A,B,INTEGER,A,A,B,c>>)
add_command("d", "B", <<["d", "INTEGER"]>>)
generate_java_code
bool_value (false)
add_query("a", "b", <<["B", "BOOLEAN"], ["D", "INTEGER"], ["C", "C"]>>, "b")
numerical_negation
add_attribute("BOOLEAN", "D", "BOOLEAN")
generate_java_code
add_attribute("A", "b", "A")
bool_value (false)
type_check
add_command("D", "b", <<["B", "a"], ["D", "BOOLEAN"], ["c", "BOOLEAN"], ["c", "BOOLEAN"], ["c", "INTEGER"], ["BOOLEAN", "INTEGER"], ["BOOLEAN", "B"]>>)
bool_value (true)
add_call_chain(<<d>>)
logical_negation
disjunction
less_than
greater_than
bool_value (true)
add_command("a", "D", <<["INTEGER", "INTEGER"], ["c", "INTEGER"], ["INTEGER", "BOOLEAN"], ["B", "INTEGER"], ["INTEGER", "BOOLEAN"], ["d", "a"], ["A", "BOOLEAN"], ["d", "b"]>>)
bool_value (true)
add_attribute("d", "INTEGER", "BOOLEAN")
add_class(b)
add_attribute("D", "c", "INTEGER")
numerical_negation
add_call_chain(<<B,D>>)
multiplication
bool_value (false)
int_value (15)
add_command("C", "d", <<["B", "D"], ["d", "INTEGER"], ["c", "INTEGER"], ["INTEGER", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "A"], ["C", "INTEGER"]>>)
equals
less_than
int_value (40)
less_than
add_call_chain(<<d>>)
logical_negation
type_check
add_attribute("c", "A", "INTEGER")
add_query("B", "d", <<["A", "BOOLEAN"], ["INTEGER", "INTEGER"], ["a", "BOOLEAN"], ["b", "a"], ["d", "a"]>>, "d")
add_command("a", "b", <<["a", "INTEGER"]>>)
add_query("d", "A", <<["B", "INTEGER"], ["b", "d"], ["C", "b"], ["B", "BOOLEAN"]>>, "d")
int_value (3)
bool_value (false)
add_attribute("c", "b", "INTEGER")
add_command("D", "C", <<["c", "INTEGER"], ["d", "D"], ["B", "BOOLEAN"], ["a", "INTEGER"], ["e", "INTEGER"], ["d", "a"], ["b", "INTEGER"], ["c", "INTEGER"], ["b", "INTEGER"]>>)
int_value (31)
bool_value (true)
add_query("a", "e", <<["D", "D"], ["c", "b"]>>, "C")
add_call_chain(<<e,A,D,D,b>>)
bool_value (false)
add_command("C", "d", <<["D", "BOOLEAN"], ["B", "INTEGER"], ["D", "c"], ["BOOLEAN", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["D", "INTEGER"]>>)
add_query("INTEGER", "e", <<["BOOLEAN", "b"], ["BOOLEAN", "B"], ["C", "BOOLEAN"], ["a", "BOOLEAN"]>>, "b")
add_command("a", "a", <<["C", "BOOLEAN"], ["e", "INTEGER"], ["d", "BOOLEAN"], ["c", "C"]>>)
add_call_chain(<<A,BOOLEAN,b,b,B>>)
bool_value (true)
numerical_negation
add_command("d", "BOOLEAN", <<["D", "INTEGER"], ["INTEGER", "e"], ["B", "INTEGER"], ["B", "e"], ["C", "INTEGER"], ["d", "BOOLEAN"], ["C", "INTEGER"]>>)
type_check
logical_negation
generate_java_code
less_than
type_check
conjunction
numerical_negation
int_value (11)
quotient
add_query("A", "c", <<["d", "INTEGER"], ["C", "D"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["a", "e"], ["a", "BOOLEAN"], ["c", "d"]>>, "a")
add_command("INTEGER", "D", <<["e", "INTEGER"], ["B", "A"], ["A", "BOOLEAN"], ["A", "a"], ["A", "INTEGER"]>>)
add_call_chain(<<a,a,C,C,b,d,D>>)
bool_value (true)
add_query("A", "c", <<["A", "BOOLEAN"], ["d", "B"], ["D", "INTEGER"]>>, "d")
conjunction
bool_value (false)
generate_java_code
add_query("c", "C", <<["B", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "INTEGER"]>>, "b")
add_command("a", "C", <<["c", "D"], ["C", "BOOLEAN"], ["a", "C"], ["a", "d"], ["BOOLEAN", "INTEGER"]>>)
add_attribute("A", "D", "D")
add_query("A", "d", <<["B", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["e", "INTEGER"], ["B", "c"], ["A", "BOOLEAN"], ["B", "BOOLEAN"]>>, "INTEGER")
add_query("d", "B", <<["a", "INTEGER"], ["b", "INTEGER"], ["D", "D"], ["b", "INTEGER"]>>, "C")
add_query("b", "C", <<["C", "C"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["INTEGER", "INTEGER"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["d", "BOOLEAN"], ["C", "C"]>>, "C")
equals
add_call_chain(<<d,B,b,c,C,D>>)
add_call_chain(<<b>>)
generate_java_code
bool_value (false)
logical_negation
add_command("d", "d", <<["B", "INTEGER"]>>)
logical_negation
less_than
add_attribute("B", "C", "D")
add_query("C", "e", <<["INTEGER", "B"], ["e", "BOOLEAN"], ["D", "INTEGER"], ["e", "INTEGER"], ["c", "INTEGER"]>>, "d")
add_attribute("d", "e", "a")
add_command("C", "b", <<["B", "C"], ["a", "D"], ["D", "INTEGER"], ["D", "B"]>>)
int_value (10)
int_value (38)
add_call_chain(<<a,a,b,b>>)
add_class(b)
int_value (45)
add_attribute("INTEGER", "d", "e")
int_value (36)
add_command("B", "A", <<["d", "INTEGER"], ["C", "INTEGER"], ["C", "C"], ["D", "BOOLEAN"], ["C", "BOOLEAN"]>>)
less_than
bool_value (true)
subtraction
add_command("B", "a", <<["c", "c"], ["BOOLEAN", "BOOLEAN"], ["d", "BOOLEAN"]>>)
bool_value (true)
equals
type_check
type_check
int_value (41)
type_check
add_command("C", "BOOLEAN", <<["D", "BOOLEAN"], ["d", "INTEGER"]>>)
add_command("e", "D", <<["D", "BOOLEAN"], ["B", "c"], ["b", "INTEGER"], ["D", "d"], ["D", "BOOLEAN"], ["INTEGER", "b"], ["C", "INTEGER"], ["d", "D"], ["d", "INTEGER"]>>)
type_check
add_class(A)
logical_negation
add_class(C)
add_call_chain(<<e,INTEGER,BOOLEAN,c,A,BOOLEAN,e,a,C>>)
add_command("b", "B", <<["A", "BOOLEAN"], ["A", "INTEGER"], ["a", "BOOLEAN"], ["B", "INTEGER"], ["d", "INTEGER"], ["D", "BOOLEAN"]>>)
int_value (16)
int_value (48)
numerical_negation
int_value (48)
add_class(BOOLEAN)
logical_negation
int_value (25)
add_call_chain(<<B,d,e,d,C>>)
add_attribute("A", "e", "INTEGER")
numerical_negation
add_query("D", "d", <<["a", "BOOLEAN"], ["C", "d"]>>, "A")
add_query("A", "A", <<["b", "INTEGER"], ["B", "INTEGER"], ["b", "BOOLEAN"], ["b", "INTEGER"], ["INTEGER", "D"], ["a", "BOOLEAN"], ["C", "BOOLEAN"]>>, "d")
add_query("D", "c", <<["d", "INTEGER"], ["c", "INTEGER"], ["INTEGER", "b"], ["c", "c"], ["INTEGER", "BOOLEAN"], ["e", "INTEGER"]>>, "B")
add_class(b)
generate_java_code
add_query("d", "B", <<["e", "INTEGER"]>>, "a")
logical_negation
add_command("c", "c", <<["INTEGER", "BOOLEAN"], ["e", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "INTEGER"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["D", "d"]>>)
subtraction
bool_value (false)
add_attribute("e", "A", "INTEGER")
generate_java_code
addition
add_attribute("B", "B", "D")
add_call_chain(<<d,C,A,B,D,a,INTEGER,D,BOOLEAN>>)
add_query("B", "A", <<["B", "c"], ["c", "e"], ["A", "INTEGER"], ["c", "INTEGER"], ["D", "B"]>>, "c")
add_call_chain(<<D,BOOLEAN,C,D,B,b>>)
add_command("A", "BOOLEAN", <<["d", "BOOLEAN"], ["D", "C"]>>)
add_attribute("a", "A", "INTEGER")
add_call_chain(<<a,D,B,d,D,C,c,D,D>>)
conjunction
add_command("d", "b", <<["B", "INTEGER"], ["a", "b"], ["C", "b"], ["B", "e"], ["C", "a"], ["d", "INTEGER"], ["b", "c"], ["A", "INTEGER"], ["C", "INTEGER"]>>)
add_query("B", "A", <<["b", "BOOLEAN"], ["C", "INTEGER"], ["A", "INTEGER"], ["d", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "INTEGER"], ["e", "BOOLEAN"]>>, "d")
disjunction
add_attribute("a", "D", "INTEGER")
disjunction
bool_value (false)
generate_java_code
add_command("A", "B", <<["d", "c"], ["a", "B"], ["c", "BOOLEAN"], ["d", "BOOLEAN"], ["c", "INTEGER"], ["A", "INTEGER"], ["INTEGER", "INTEGER"], ["a", "INTEGER"], ["b", "INTEGER"]>>)
conjunction
type_check
add_call_chain(<<a,INTEGER,b,C,c,C>>)
add_query("c", "D", <<["d", "A"]>>, "e")
int_value (8)
quotient
type_check
add_call_chain(<<D,B,D,c,A,A,A>>)
add_call_chain(<<e,c,C,e,B,c,INTEGER>>)
add_call_chain(<<D,INTEGER>>)
add_command("D", "a", <<["b", "BOOLEAN"], ["B", "e"], ["D", "INTEGER"], ["c", "BOOLEAN"], ["e", "C"]>>)
generate_java_code
add_attribute("D", "b", "b")
add_class(A)
add_command("d", "a", <<["b", "INTEGER"], ["C", "e"], ["INTEGER", "e"], ["BOOLEAN", "D"]>>)
