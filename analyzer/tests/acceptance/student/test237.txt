quotient
add_class(c)
equals
add_call_chain(<<D,C,b,B,e>>)
add_query("a", "a", <<["b", "d"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["C", "INTEGER"]>>, "b")
add_query("INTEGER", "B", <<["b", "INTEGER"], ["A", "BOOLEAN"], ["D", "c"], ["c", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "C"], ["e", "D"], ["D", "INTEGER"], ["a", "BOOLEAN"]>>, "C")
bool_value (false)
int_value (25)
logical_negation
type_check
add_query("a", "INTEGER", <<["C", "INTEGER"], ["C", "a"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["C", "INTEGER"], ["INTEGER", "INTEGER"], ["e", "BOOLEAN"]>>, "A")
add_call_chain(<<INTEGER,d,b>>)
add_command("e", "A", <<["c", "INTEGER"], ["d", "C"], ["C", "INTEGER"], ["a", "BOOLEAN"]>>)
quotient
less_than
numerical_negation
add_call_chain(<<D,a,d,a,c,d,A,D,b>>)
int_value (31)
add_attribute("B", "D", "BOOLEAN")
add_query("INTEGER", "D", <<["A", "INTEGER"], ["A", "INTEGER"], ["a", "INTEGER"], ["d", "d"], ["d", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "D"], ["INTEGER", "BOOLEAN"]>>, "C")
int_value (13)
numerical_negation
generate_java_code
add_command("D", "c", <<["C", "c"], ["D", "INTEGER"], ["c", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["INTEGER", "A"], ["b", "INTEGER"], ["b", "BOOLEAN"], ["D", "BOOLEAN"]>>)
generate_java_code
bool_value (true)
add_attribute("INTEGER", "C", "BOOLEAN")
add_query("b", "B", <<["a", "D"], ["C", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["b", "INTEGER"], ["b", "BOOLEAN"], ["b", "B"]>>, "A")
add_attribute("A", "D", "BOOLEAN")
int_value (2)
add_call_chain(<<D,b,a,c,d>>)
logical_negation
type_check
int_value (6)
add_query("b", "C", <<["B", "INTEGER"], ["B", "C"], ["D", "BOOLEAN"], ["C", "d"], ["e", "INTEGER"], ["C", "INTEGER"], ["c", "INTEGER"], ["A", "BOOLEAN"]>>, "e")
multiplication
add_attribute("D", "B", "INTEGER")
add_call_chain(<<B,D,b,B,d,A>>)
add_command("C", "INTEGER", <<["BOOLEAN", "D"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["A", "D"], ["c", "b"], ["e", "BOOLEAN"], ["b", "B"]>>)
add_command("C", "b", <<["C", "INTEGER"], ["A", "INTEGER"], ["D", "INTEGER"], ["A", "INTEGER"], ["D", "INTEGER"], ["D", "BOOLEAN"]>>)
numerical_negation
logical_negation
int_value (43)
int_value (28)
type_check
add_call_chain(<<b,c,d,D,INTEGER>>)
add_query("A", "B", <<["e", "INTEGER"], ["e", "INTEGER"], ["D", "INTEGER"]>>, "d")
add_call_chain(<<A>>)
add_query("b", "A", <<["B", "INTEGER"], ["B", "INTEGER"], ["b", "C"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["D", "BOOLEAN"]>>, "C")
generate_java_code
add_call_chain(<<D,b,BOOLEAN,C,A,e,A>>)
add_class(b)
bool_value (false)
logical_negation
bool_value (true)
add_call_chain(<<e,BOOLEAN,D,C,BOOLEAN,A,a,e,c>>)
numerical_negation
add_command("A", "C", <<["c", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["B", "INTEGER"], ["B", "INTEGER"], ["c", "INTEGER"], ["e", "INTEGER"], ["e", "BOOLEAN"], ["d", "BOOLEAN"]>>)
add_attribute("B", "c", "BOOLEAN")
add_query("C", "C", <<["D", "INTEGER"], ["D", "INTEGER"], ["C", "INTEGER"]>>, "B")
add_attribute("e", "d", "INTEGER")
add_class(B)
add_call_chain(<<a,c,d,e,A,C,b,d>>)
greater_than
add_query("BOOLEAN", "b", <<["a", "BOOLEAN"], ["a", "INTEGER"], ["B", "C"], ["D", "INTEGER"], ["a", "INTEGER"], ["a", "INTEGER"], ["C", "INTEGER"]>>, "b")
add_attribute("d", "C", "BOOLEAN")
logical_negation
add_query("A", "b", <<["a", "C"], ["c", "INTEGER"], ["d", "INTEGER"], ["A", "INTEGER"], ["a", "e"]>>, "B")
bool_value (true)
disjunction
add_call_chain(<<d>>)
numerical_negation
logical_negation
int_value (38)
add_call_chain(<<A>>)
int_value (34)
add_attribute("b", "BOOLEAN", "c")
add_call_chain(<<c,e,d,a,d,D,b>>)
int_value (37)
add_attribute("INTEGER", "A", "BOOLEAN")
add_call_chain(<<D,B,A,d,a,d,a,D,B>>)
add_query("c", "b", <<["INTEGER", "BOOLEAN"], ["e", "INTEGER"], ["A", "D"], ["B", "e"], ["A", "C"], ["e", "a"], ["d", "b"]>>, "A")
bool_value (false)
generate_java_code
add_query("c", "a", <<["e", "INTEGER"], ["C", "BOOLEAN"]>>, "B")
greater_than
int_value (23)
conjunction
numerical_negation
add_query("B", "D", <<["a", "B"], ["d", "BOOLEAN"], ["C", "BOOLEAN"]>>, "B")
add_call_chain(<<b,a,C,C,C,C>>)
add_command("A", "d", <<["c", "b"], ["c", "BOOLEAN"], ["A", "D"], ["c", "C"], ["A", "INTEGER"], ["D", "INTEGER"]>>)
modulo
add_command("d", "A", <<["b", "INTEGER"]>>)
add_call_chain(<<d,A,d,d,c>>)
add_call_chain(<<c,INTEGER>>)
bool_value (true)
generate_java_code
add_class(D)
int_value (12)
generate_java_code
add_command("B", "B", <<["a", "b"], ["a", "INTEGER"]>>)
add_attribute("d", "D", "INTEGER")
int_value (16)
add_attribute("BOOLEAN", "C", "BOOLEAN")
add_command("BOOLEAN", "BOOLEAN", <<["A", "e"], ["d", "INTEGER"], ["e", "b"]>>)
disjunction
equals
add_command("d", "INTEGER", <<["INTEGER", "BOOLEAN"], ["d", "BOOLEAN"], ["b", "BOOLEAN"]>>)
logical_negation
add_query("C", "c", <<["C", "BOOLEAN"], ["b", "e"], ["B", "BOOLEAN"], ["INTEGER", "INTEGER"], ["c", "BOOLEAN"]>>, "A")
add_query("a", "d", <<["C", "INTEGER"], ["e", "BOOLEAN"], ["d", "INTEGER"], ["D", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "d"], ["e", "BOOLEAN"]>>, "B")
logical_negation
add_class(d)
int_value (32)
add_class(c)
int_value (33)
bool_value (true)
bool_value (false)
logical_negation
disjunction
add_query("d", "D", <<["BOOLEAN", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "e"], ["B", "INTEGER"], ["d", "B"]>>, "b")
generate_java_code
add_call_chain(<<e,e>>)
add_attribute("b", "c", "INTEGER")
bool_value (false)
less_than
generate_java_code
add_call_chain(<<D,B,e,b,b>>)
add_command("INTEGER", "INTEGER", <<["d", "BOOLEAN"]>>)
add_call_chain(<<d>>)
int_value (11)
add_query("C", "INTEGER", <<["b", "INTEGER"], ["D", "B"], ["BOOLEAN", "INTEGER"], ["d", "D"], ["A", "BOOLEAN"]>>, "a")
add_class(d)
type_check
add_call_chain(<<D,D,d,B,B,A>>)
numerical_negation
addition
add_attribute("b", "c", "BOOLEAN")
int_value (40)
logical_negation
int_value (20)
add_class(c)
equals
add_call_chain(<<B>>)
less_than
add_attribute("BOOLEAN", "d", "C")
add_query("c", "c", <<["d", "INTEGER"], ["B", "INTEGER"], ["INTEGER", "INTEGER"], ["c", "BOOLEAN"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["d", "BOOLEAN"], ["e", "a"]>>, "c")
bool_value (false)
logical_negation
greater_than
add_call_chain(<<d,d,C,C,a,c,D>>)
int_value (8)
type_check
subtraction
add_query("B", "b", <<["c", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "INTEGER"], ["B", "INTEGER"], ["A", "INTEGER"], ["a", "BOOLEAN"], ["C", "b"]>>, "c")
logical_negation
numerical_negation
logical_negation
add_call_chain(<<D,d>>)
add_attribute("c", "D", "INTEGER")
less_than
add_attribute("A", "B", "INTEGER")
add_attribute("BOOLEAN", "d", "c")
add_call_chain(<<C,b,e,INTEGER,C,e>>)
add_class(e)
add_attribute("B", "D", "e")
bool_value (false)
bool_value (false)
add_attribute("d", "d", "INTEGER")
int_value (6)
numerical_negation
greater_than
type_check
add_command("a", "A", <<["C", "INTEGER"], ["C", "C"], ["d", "A"], ["d", "BOOLEAN"]>>)
bool_value (false)
type_check
type_check
int_value (36)
add_attribute("D", "c", "d")
add_attribute("A", "a", "INTEGER")
add_attribute("A", "b", "INTEGER")
multiplication
generate_java_code
add_attribute("a", "e", "c")
add_command("C", "D", <<["b", "BOOLEAN"], ["e", "INTEGER"], ["a", "INTEGER"], ["INTEGER", "BOOLEAN"], ["A", "d"], ["d", "BOOLEAN"], ["D", "INTEGER"]>>)
generate_java_code
int_value (30)
add_attribute("B", "e", "INTEGER")
add_command("C", "a", <<["a", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "INTEGER"], ["d", "BOOLEAN"], ["c", "INTEGER"], ["BOOLEAN", "INTEGER"], ["B", "INTEGER"]>>)
generate_java_code
bool_value (false)
less_than
addition
add_class(b)
int_value (47)
add_command("D", "d", <<["D", "BOOLEAN"], ["INTEGER", "INTEGER"], ["BOOLEAN", "INTEGER"], ["e", "BOOLEAN"], ["c", "A"], ["b", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["C", "INTEGER"], ["C", "INTEGER"]>>)
add_call_chain(<<D,B,A,a,a,a,D,e,BOOLEAN>>)
add_call_chain(<<A,d,c,C,e,b,BOOLEAN,a>>)
add_attribute("INTEGER", "a", "e")
add_attribute("b", "BOOLEAN", "d")
add_class(BOOLEAN)
addition
logical_negation
logical_negation
add_call_chain(<<d,D,D>>)
add_attribute("B", "b", "a")
add_command("a", "A", <<["BOOLEAN", "BOOLEAN"], ["B", "c"], ["d", "D"], ["C", "BOOLEAN"], ["d", "e"], ["e", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "B"], ["b", "BOOLEAN"]>>)
add_command("B", "INTEGER", <<["A", "INTEGER"], ["D", "B"], ["b", "C"], ["C", "INTEGER"], ["B", "BOOLEAN"]>>)
generate_java_code
add_query("a", "b", <<["e", "D"], ["B", "BOOLEAN"]>>, "C")
add_attribute("e", "B", "INTEGER")
add_attribute("b", "B", "BOOLEAN")
add_query("A", "B", <<["D", "BOOLEAN"], ["A", "e"], ["INTEGER", "INTEGER"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "INTEGER"], ["e", "B"], ["e", "INTEGER"]>>, "a")
modulo
add_query("A", "e", <<["b", "a"], ["C", "INTEGER"], ["d", "BOOLEAN"], ["d", "INTEGER"]>>, "BOOLEAN")
numerical_negation
bool_value (true)
bool_value (true)
bool_value (false)
multiplication
