add_call_chain(<<A,BOOLEAN,c>>)
type_check
add_query("b", "c", <<["C", "INTEGER"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["b", "INTEGER"], ["C", "INTEGER"], ["BOOLEAN", "INTEGER"]>>, "e")
conjunction
add_command("BOOLEAN", "D", <<["A", "BOOLEAN"], ["B", "B"], ["c", "BOOLEAN"], ["d", "INTEGER"]>>)
bool_value (false)
add_call_chain(<<e,d,D,a,INTEGER,d,d,INTEGER,B>>)
modulo
logical_negation
add_class(c)
type_check
add_attribute("d", "B", "B")
generate_java_code
add_call_chain(<<BOOLEAN,d>>)
disjunction
logical_negation
numerical_negation
add_call_chain(<<A,e>>)
add_attribute("a", "a", "INTEGER")
add_call_chain(<<e,e,c,A>>)
int_value (7)
add_call_chain(<<A,A,C>>)
add_query("C", "C", <<["b", "BOOLEAN"], ["A", "INTEGER"], ["A", "BOOLEAN"], ["B", "BOOLEAN"]>>, "a")
multiplication
add_query("A", "C", <<["C", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "INTEGER"]>>, "c")
add_query("B", "C", <<["e", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["B", "BOOLEAN"], ["b", "C"], ["e", "INTEGER"], ["B", "BOOLEAN"], ["c", "D"]>>, "d")
add_attribute("INTEGER", "b", "BOOLEAN")
add_query("d", "BOOLEAN", <<["C", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "INTEGER"], ["C", "B"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["INTEGER", "BOOLEAN"], ["d", "INTEGER"], ["A", "INTEGER"]>>, "a")
numerical_negation
modulo
less_than
add_attribute("D", "BOOLEAN", "INTEGER")
add_call_chain(<<INTEGER,BOOLEAN,BOOLEAN,c,D>>)
add_call_chain(<<BOOLEAN,e,B>>)
add_command("e", "INTEGER", <<["A", "INTEGER"], ["e", "INTEGER"], ["b", "BOOLEAN"], ["a", "d"], ["e", "INTEGER"]>>)
logical_negation
add_command("C", "b", <<["a", "BOOLEAN"], ["a", "INTEGER"]>>)
add_attribute("b", "D", "c")
add_query("B", "C", <<["c", "INTEGER"], ["c", "INTEGER"], ["BOOLEAN", "A"], ["c", "BOOLEAN"], ["C", "INTEGER"]>>, "c")
add_call_chain(<<c,b,a>>)
generate_java_code
type_check
add_call_chain(<<C,B,c,c,a,D,c,INTEGER>>)
bool_value (true)
add_query("A", "B", <<["B", "INTEGER"], ["INTEGER", "e"], ["D", "C"], ["A", "BOOLEAN"]>>, "D")
bool_value (true)
logical_negation
numerical_negation
add_call_chain(<<A,D,b,D,D,D,e,BOOLEAN,a>>)
add_query("D", "INTEGER", <<["a", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["d", "INTEGER"], ["INTEGER", "b"], ["A", "BOOLEAN"], ["BOOLEAN", "C"]>>, "B")
bool_value (true)
equals
numerical_negation
bool_value (false)
add_call_chain(<<C,C,b>>)
int_value (33)
numerical_negation
add_attribute("BOOLEAN", "C", "INTEGER")
int_value (42)
multiplication
add_call_chain(<<b,C,B,INTEGER,c,d,C,a,INTEGER>>)
generate_java_code
bool_value (false)
add_class(INTEGER)
logical_negation
logical_negation
add_call_chain(<<D,A,A,a,e,e,e,a>>)
add_query("A", "a", <<["b", "B"], ["D", "BOOLEAN"], ["c", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "e"], ["D", "INTEGER"], ["A", "e"], ["D", "INTEGER"], ["D", "INTEGER"]>>, "a")
numerical_negation
add_call_chain(<<BOOLEAN,D,c,A,C>>)
add_command("B", "D", <<["A", "BOOLEAN"]>>)
logical_negation
int_value (20)
greater_than
bool_value (true)
add_call_chain(<<BOOLEAN,c,C,c>>)
add_query("B", "BOOLEAN", <<["e", "INTEGER"], ["c", "BOOLEAN"]>>, "C")
logical_negation
conjunction
add_call_chain(<<d>>)
int_value (25)
add_class(b)
numerical_negation
generate_java_code
add_call_chain(<<d,e,d,d,INTEGER,B,A>>)
add_call_chain(<<d>>)
logical_negation
logical_negation
add_class(INTEGER)
add_attribute("A", "d", "INTEGER")
numerical_negation
int_value (15)
type_check
add_class(B)
add_query("b", "C", <<["A", "INTEGER"], ["A", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "C"], ["D", "BOOLEAN"], ["a", "B"], ["D", "INTEGER"], ["e", "b"], ["a", "INTEGER"]>>, "e")
add_call_chain(<<c,B,C,A,C,B,d,c>>)
numerical_negation
numerical_negation
add_call_chain(<<d>>)
add_call_chain(<<B,INTEGER,A,c,C,C,a,d>>)
numerical_negation
add_call_chain(<<e,D,e,D,A,A>>)
numerical_negation
add_command("a", "D", <<["b", "BOOLEAN"]>>)
add_attribute("B", "e", "INTEGER")
add_query("C", "e", <<["c", "C"], ["c", "BOOLEAN"], ["C", "BOOLEAN"]>>, "d")
add_attribute("A", "INTEGER", "BOOLEAN")
add_query("d", "INTEGER", <<["d", "INTEGER"], ["BOOLEAN", "INTEGER"], ["B", "d"], ["A", "BOOLEAN"], ["b", "INTEGER"], ["c", "BOOLEAN"]>>, "B")
type_check
generate_java_code
add_call_chain(<<d,a,c,B,A,INTEGER,A,e>>)
bool_value (false)
add_query("A", "BOOLEAN", <<["BOOLEAN", "BOOLEAN"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["d", "d"]>>, "C")
add_call_chain(<<B,d,C>>)
bool_value (true)
conjunction
generate_java_code
quotient
add_query("a", "D", <<["C", "C"], ["a", "e"], ["A", "BOOLEAN"], ["b", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["b", "B"], ["A", "BOOLEAN"]>>, "c")
add_call_chain(<<b,C,INTEGER>>)
numerical_negation
bool_value (true)
disjunction
add_call_chain(<<b,A,INTEGER,a,d,C,e,B>>)
add_class(C)
add_call_chain(<<A,a,C,a,B,B>>)
type_check
int_value (8)
add_query("e", "B", <<["d", "INTEGER"], ["a", "BOOLEAN"], ["D", "INTEGER"], ["e", "BOOLEAN"]>>, "A")
bool_value (true)
add_query("a", "b", <<["e", "BOOLEAN"], ["d", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["D", "BOOLEAN"]>>, "c")
add_query("C", "A", <<["A", "INTEGER"], ["D", "INTEGER"], ["B", "BOOLEAN"], ["C", "INTEGER"]>>, "c")
numerical_negation
bool_value (true)
add_command("A", "BOOLEAN", <<["d", "INTEGER"], ["b", "INTEGER"], ["D", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "INTEGER"], ["a", "BOOLEAN"], ["b", "BOOLEAN"]>>)
add_command("e", "b", <<["d", "INTEGER"], ["C", "INTEGER"], ["c", "INTEGER"], ["C", "BOOLEAN"], ["d", "INTEGER"]>>)
add_call_chain(<<D>>)
add_attribute("c", "a", "BOOLEAN")
type_check
bool_value (true)
subtraction
bool_value (false)
add_query("b", "A", <<["d", "D"], ["e", "INTEGER"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["INTEGER", "INTEGER"]>>, "e")
add_call_chain(<<A,D,e,A,d,C>>)
add_call_chain(<<a,B>>)
int_value (1)
logical_negation
less_than
add_attribute("c", "B", "BOOLEAN")
add_attribute("b", "d", "INTEGER")
conjunction
generate_java_code
generate_java_code
add_call_chain(<<c,C,C,a,c,c,D,D>>)
add_query("c", "e", <<["B", "INTEGER"], ["e", "d"]>>, "INTEGER")
add_query("A", "C", <<["A", "B"], ["BOOLEAN", "a"], ["d", "c"], ["b", "d"], ["B", "D"], ["C", "A"]>>, "INTEGER")
int_value (35)
int_value (25)
numerical_negation
add_class(A)
multiplication
modulo
int_value (40)
add_attribute("c", "INTEGER", "INTEGER")
add_call_chain(<<a,D,INTEGER,b,C,INTEGER,B>>)
less_than
add_call_chain(<<INTEGER,B,BOOLEAN,B,C,A,C,e,B>>)
add_command("C", "B", <<["B", "C"], ["e", "a"], ["d", "INTEGER"], ["A", "INTEGER"], ["c", "INTEGER"]>>)
add_command("B", "d", <<["e", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "a"]>>)
add_class(d)
add_call_chain(<<A,d,a,d,e>>)
bool_value (true)
add_query("B", "BOOLEAN", <<["b", "BOOLEAN"], ["b", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "INTEGER"], ["d", "a"], ["A", "a"], ["B", "d"], ["INTEGER", "BOOLEAN"], ["INTEGER", "INTEGER"]>>, "B")
numerical_negation
quotient
bool_value (false)
conjunction
logical_negation
add_call_chain(<<C,c,INTEGER,B,C,b>>)
disjunction
add_call_chain(<<B,B,a,c,b>>)
add_query("A", "D", <<["A", "BOOLEAN"], ["B", "e"]>>, "D")
add_call_chain(<<C,C,d,A>>)
int_value (3)
add_attribute("A", "B", "c")
bool_value (false)
add_query("C", "C", <<["a", "a"], ["a", "B"], ["b", "INTEGER"]>>, "b")
bool_value (true)
add_attribute("b", "A", "INTEGER")
conjunction
add_attribute("BOOLEAN", "B", "BOOLEAN")
bool_value (true)
add_call_chain(<<D,B,a,c>>)
bool_value (true)
add_attribute("BOOLEAN", "c", "INTEGER")
disjunction
add_call_chain(<<e,A,b,d,C,INTEGER,d>>)
less_than
add_query("e", "B", <<["C", "A"]>>, "B")
add_attribute("B", "a", "A")
add_class(a)
generate_java_code
add_call_chain(<<C,INTEGER,c,C,c>>)
greater_than
type_check
int_value (36)
add_query("d", "B", <<["C", "a"], ["D", "D"], ["C", "C"], ["e", "INTEGER"], ["B", "INTEGER"]>>, "c")
numerical_negation
logical_negation
add_attribute("d", "b", "BOOLEAN")
type_check
bool_value (false)
bool_value (true)
add_call_chain(<<B,B,BOOLEAN,A,c,a>>)
modulo
greater_than
add_query("C", "c", <<["D", "INTEGER"], ["b", "C"]>>, "C")
int_value (30)
add_attribute("d", "D", "INTEGER")
numerical_negation
numerical_negation
add_command("B", "A", <<["D", "INTEGER"], ["C", "INTEGER"]>>)
add_command("e", "C", <<["D", "a"], ["B", "INTEGER"], ["e", "BOOLEAN"], ["A", "d"]>>)
disjunction
add_class(D)
logical_negation
add_attribute("INTEGER", "b", "INTEGER")
add_class(D)
add_call_chain(<<C,D,e,c,A,D,e,e,d>>)
bool_value (true)
add_call_chain(<<INTEGER,B>>)
add_call_chain(<<D,D,INTEGER,BOOLEAN,d,D,B,B,D>>)
generate_java_code
add_call_chain(<<C,D>>)
generate_java_code
int_value (31)
add_command("BOOLEAN", "D", <<["d", "B"], ["B", "B"]>>)
type_check
add_call_chain(<<c>>)
add_attribute("A", "A", "BOOLEAN")
add_attribute("a", "B", "b")
add_call_chain(<<C,A,C>>)
add_command("b", "B", <<["BOOLEAN", "INTEGER"], ["d", "BOOLEAN"], ["e", "c"], ["d", "BOOLEAN"]>>)
multiplication
add_query("A", "d", <<["e", "c"], ["d", "INTEGER"], ["a", "INTEGER"], ["BOOLEAN", "INTEGER"], ["INTEGER", "BOOLEAN"], ["D", "c"], ["C", "BOOLEAN"], ["C", "a"]>>, "c")
type_check
add_call_chain(<<b>>)
quotient
conjunction
conjunction
int_value (13)
add_command("a", "A", <<["C", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "C"], ["A", "INTEGER"], ["e", "INTEGER"], ["BOOLEAN", "INTEGER"], ["C", "BOOLEAN"], ["e", "INTEGER"], ["a", "b"]>>)
addition
int_value (21)
int_value (22)
int_value (23)
disjunction
