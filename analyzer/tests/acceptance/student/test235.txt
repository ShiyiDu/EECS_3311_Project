numerical_negation
generate_java_code
modulo
numerical_negation
add_attribute("e", "e", "INTEGER")
numerical_negation
add_class(d)
add_class(c)
add_call_chain(<<INTEGER,D,A,A,C,A,b,C,d>>)
add_attribute("A", "d", "BOOLEAN")
add_call_chain(<<INTEGER,c>>)
add_call_chain(<<c,d>>)
conjunction
add_class(b)
add_attribute("INTEGER", "d", "BOOLEAN")
generate_java_code
add_class(B)
int_value (43)
generate_java_code
bool_value (true)
add_call_chain(<<c,e,e,D,e,e,e,a,INTEGER>>)
add_query("a", "A", <<["A", "B"], ["INTEGER", "BOOLEAN"], ["b", "BOOLEAN"], ["e", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "BOOLEAN"], ["BOOLEAN", "a"]>>, "b")
add_command("d", "c", <<["e", "BOOLEAN"], ["D", "INTEGER"]>>)
add_call_chain(<<c,a,A,D,d,D,b,e>>)
int_value (12)
add_command("d", "C", <<["e", "INTEGER"]>>)
generate_java_code
add_call_chain(<<D,e,B,e,BOOLEAN>>)
type_check
add_attribute("A", "c", "INTEGER")
add_attribute("B", "A", "BOOLEAN")
logical_negation
numerical_negation
add_call_chain(<<C>>)
add_attribute("A", "d", "BOOLEAN")
int_value (32)
bool_value (false)
add_attribute("D", "a", "INTEGER")
multiplication
int_value (9)
add_call_chain(<<B,C,b>>)
generate_java_code
disjunction
add_class(C)
add_call_chain(<<A,d,d,d,A,BOOLEAN,A,A>>)
add_call_chain(<<A,D,a,D,C>>)
add_attribute("D", "C", "B")
add_command("B", "c", <<["INTEGER", "BOOLEAN"], ["b", "INTEGER"], ["B", "INTEGER"]>>)
int_value (2)
equals
add_command("c", "a", <<["c", "b"], ["d", "BOOLEAN"], ["c", "INTEGER"]>>)
numerical_negation
numerical_negation
generate_java_code
add_call_chain(<<a,B,A,INTEGER,e,e>>)
add_query("e", "D", <<["c", "INTEGER"], ["D", "INTEGER"], ["C", "e"], ["e", "e"]>>, "d")
quotient
int_value (14)
bool_value (false)
int_value (31)
numerical_negation
add_call_chain(<<C,B,A>>)
generate_java_code
subtraction
add_attribute("a", "B", "B")
add_query("INTEGER", "BOOLEAN", <<["C", "INTEGER"], ["B", "BOOLEAN"], ["e", "INTEGER"], ["C", "A"], ["C", "INTEGER"], ["a", "e"], ["a", "BOOLEAN"]>>, "A")
add_attribute("C", "a", "BOOLEAN")
greater_than
add_command("D", "INTEGER", <<["BOOLEAN", "BOOLEAN"], ["c", "BOOLEAN"], ["e", "D"], ["B", "BOOLEAN"]>>)
int_value (43)
less_than
add_call_chain(<<INTEGER,e,e,B,BOOLEAN,C,A>>)
modulo
add_command("b", "c", <<["A", "b"], ["a", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["D", "INTEGER"]>>)
addition
logical_negation
conjunction
generate_java_code
add_command("B", "c", <<["A", "INTEGER"], ["INTEGER", "d"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "INTEGER"], ["c", "A"], ["b", "B"], ["c", "INTEGER"]>>)
add_command("INTEGER", "D", <<["A", "D"], ["D", "INTEGER"], ["e", "INTEGER"], ["B", "INTEGER"], ["C", "INTEGER"], ["A", "d"], ["d", "BOOLEAN"], ["A", "BOOLEAN"]>>)
int_value (48)
generate_java_code
bool_value (true)
add_query("e", "D", <<["a", "BOOLEAN"], ["D", "INTEGER"], ["A", "BOOLEAN"]>>, "c")
logical_negation
add_query("D", "D", <<["C", "INTEGER"], ["d", "B"], ["INTEGER", "BOOLEAN"], ["e", "BOOLEAN"], ["d", "INTEGER"]>>, "e")
quotient
add_attribute("b", "e", "B")
generate_java_code
bool_value (true)
bool_value (true)
add_command("a", "b", <<["C", "BOOLEAN"]>>)
add_call_chain(<<a>>)
conjunction
logical_negation
add_query("A", "d", <<["e", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "INTEGER"]>>, "C")
less_than
int_value (1)
add_attribute("c", "C", "INTEGER")
int_value (45)
type_check
conjunction
type_check
add_call_chain(<<b,b,a>>)
add_command("B", "D", <<["e", "BOOLEAN"], ["A", "b"], ["b", "INTEGER"]>>)
add_call_chain(<<D,D,C,A,INTEGER,e,a>>)
add_class(b)
add_call_chain(<<a,D,d,C,A,c,BOOLEAN>>)
disjunction
numerical_negation
less_than
int_value (33)
add_call_chain(<<C>>)
type_check
conjunction
add_attribute("c", "B", "BOOLEAN")
logical_negation
add_attribute("D", "d", "INTEGER")
add_call_chain(<<A,C,c,a,INTEGER>>)
generate_java_code
add_attribute("C", "e", "a")
add_call_chain(<<BOOLEAN,d,BOOLEAN,d,c>>)
add_command("c", "e", <<["e", "BOOLEAN"]>>)
add_query("B", "B", <<["d", "a"], ["c", "A"]>>, "e")
add_command("b", "INTEGER", <<["B", "c"], ["a", "INTEGER"], ["c", "INTEGER"]>>)
type_check
add_command("c", "C", <<["A", "INTEGER"], ["A", "INTEGER"]>>)
int_value (24)
add_call_chain(<<d,B,a,e,a,b>>)
add_query("B", "a", <<["INTEGER", "BOOLEAN"], ["B", "BOOLEAN"], ["BOOLEAN", "C"], ["d", "C"], ["C", "B"], ["b", "BOOLEAN"], ["C", "d"], ["D", "INTEGER"]>>, "b")
add_call_chain(<<b,INTEGER,d>>)
add_call_chain(<<D,INTEGER,INTEGER,d,d,c,D>>)
add_class(C)
disjunction
disjunction
less_than
int_value (36)
add_class(D)
add_query("b", "C", <<["A", "BOOLEAN"], ["A", "BOOLEAN"], ["INTEGER", "INTEGER"], ["C", "B"], ["a", "A"], ["B", "INTEGER"]>>, "e")
add_command("C", "BOOLEAN", <<["a", "B"], ["c", "BOOLEAN"], ["c", "INTEGER"], ["B", "BOOLEAN"], ["INTEGER", "INTEGER"]>>)
add_call_chain(<<B,b,c,INTEGER,A,e,c,d>>)
int_value (33)
numerical_negation
add_call_chain(<<A>>)
add_attribute("A", "c", "BOOLEAN")
add_attribute("D", "B", "BOOLEAN")
logical_negation
generate_java_code
generate_java_code
bool_value (true)
numerical_negation
add_call_chain(<<a,D,D,d,B,C,B,c,d>>)
add_call_chain(<<A,e,a,b,d,C>>)
add_call_chain(<<INTEGER,B,a,d,C,C,a,d>>)
bool_value (false)
bool_value (true)
add_query("D", "c", <<["A", "BOOLEAN"], ["a", "INTEGER"], ["a", "e"], ["d", "C"], ["b", "a"], ["e", "BOOLEAN"], ["c", "A"]>>, "b")
addition
numerical_negation
generate_java_code
logical_negation
add_attribute("D", "c", "INTEGER")
less_than
add_call_chain(<<a>>)
bool_value (false)
type_check
greater_than
type_check
generate_java_code
add_query("d", "B", <<["INTEGER", "e"], ["B", "BOOLEAN"], ["a", "d"], ["INTEGER", "d"], ["BOOLEAN", "INTEGER"], ["c", "a"], ["e", "BOOLEAN"], ["INTEGER", "INTEGER"], ["c", "a"]>>, "e")
add_call_chain(<<e,b,a,e,C>>)
generate_java_code
bool_value (true)
logical_negation
numerical_negation
add_call_chain(<<b,INTEGER,a,a,INTEGER,c>>)
add_attribute("c", "e", "A")
add_call_chain(<<a,B,D,c>>)
add_command("INTEGER", "D", <<["a", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["b", "c"], ["b", "c"], ["b", "B"], ["e", "c"], ["a", "BOOLEAN"], ["d", "INTEGER"], ["B", "A"]>>)
int_value (46)
less_than
int_value (13)
greater_than
int_value (3)
type_check
add_query("C", "BOOLEAN", <<["e", "BOOLEAN"], ["a", "INTEGER"]>>, "e")
numerical_negation
add_command("c", "C", <<["INTEGER", "INTEGER"]>>)
add_call_chain(<<d,a,D,B,A,e,a>>)
add_query("d", "INTEGER", <<["D", "INTEGER"], ["a", "BOOLEAN"], ["a", "B"], ["D", "c"], ["D", "B"], ["INTEGER", "C"], ["a", "BOOLEAN"]>>, "B")
add_call_chain(<<d,B,D>>)
disjunction
logical_negation
numerical_negation
add_call_chain(<<D>>)
add_query("A", "a", <<["e", "BOOLEAN"], ["A", "INTEGER"], ["C", "INTEGER"], ["C", "INTEGER"], ["C", "INTEGER"]>>, "a")
int_value (36)
add_query("B", "e", <<["b", "INTEGER"], ["a", "A"]>>, "INTEGER")
add_command("INTEGER", "a", <<["b", "BOOLEAN"], ["D", "D"], ["a", "INTEGER"]>>)
add_attribute("BOOLEAN", "D", "b")
add_call_chain(<<d,B,B,c,C,e,BOOLEAN,e>>)
add_command("b", "e", <<["a", "A"], ["b", "INTEGER"], ["d", "A"], ["C", "INTEGER"], ["c", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>)
generate_java_code
add_command("d", "c", <<["INTEGER", "INTEGER"], ["c", "A"], ["B", "C"], ["e", "INTEGER"]>>)
add_call_chain(<<BOOLEAN,b,B,a,INTEGER,d,BOOLEAN,C,INTEGER>>)
numerical_negation
add_query("b", "a", <<["A", "A"], ["b", "BOOLEAN"], ["c", "INTEGER"], ["C", "BOOLEAN"], ["c", "B"], ["c", "INTEGER"]>>, "d")
less_than
