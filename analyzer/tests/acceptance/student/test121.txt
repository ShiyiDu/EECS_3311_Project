numerical_negation
generate_java_code
add_call_chain(<<c,D,b>>)
add_class(a)
numerical_negation
logical_negation
add_query("C", "d", <<["B", "b"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["e", "d"], ["c", "BOOLEAN"]>>, "C")
bool_value (false)
type_check
generate_java_code
add_query("d", "B", <<["c", "INTEGER"]>>, "d")
add_call_chain(<<D,INTEGER,D>>)
add_class(A)
int_value (21)
add_call_chain(<<INTEGER,e,B,C,BOOLEAN,C>>)
logical_negation
numerical_negation
int_value (36)
add_call_chain(<<B>>)
bool_value (false)
generate_java_code
subtraction
type_check
add_attribute("a", "D", "BOOLEAN")
add_class(D)
modulo
numerical_negation
add_query("INTEGER", "A", <<["b", "BOOLEAN"], ["d", "INTEGER"], ["B", "D"], ["C", "INTEGER"], ["c", "INTEGER"], ["C", "BOOLEAN"]>>, "C")
add_call_chain(<<a,B>>)
disjunction
add_call_chain(<<d>>)
int_value (25)
add_command("e", "BOOLEAN", <<["D", "INTEGER"], ["e", "INTEGER"], ["a", "BOOLEAN"], ["D", "BOOLEAN"]>>)
logical_negation
add_attribute("e", "A", "BOOLEAN")
subtraction
add_command("INTEGER", "A", <<["e", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "e"], ["B", "BOOLEAN"], ["e", "INTEGER"], ["D", "INTEGER"]>>)
conjunction
conjunction
less_than
numerical_negation
generate_java_code
numerical_negation
int_value (24)
multiplication
type_check
type_check
bool_value (true)
add_call_chain(<<D,c,b,INTEGER,e,a,D>>)
add_attribute("b", "c", "C")
bool_value (true)
int_value (33)
add_attribute("d", "A", "D")
add_command("c", "BOOLEAN", <<["c", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["d", "b"], ["b", "BOOLEAN"], ["b", "INTEGER"]>>)
add_call_chain(<<BOOLEAN,b,B,B,d>>)
add_attribute("a", "e", "INTEGER")
add_class(d)
add_attribute("BOOLEAN", "A", "c")
int_value (26)
add_call_chain(<<b,A,C,A>>)
numerical_negation
add_query("D", "A", <<["A", "b"]>>, "a")
add_command("d", "B", <<["a", "INTEGER"], ["A", "INTEGER"], ["e", "INTEGER"], ["A", "INTEGER"], ["a", "BOOLEAN"], ["A", "INTEGER"], ["A", "BOOLEAN"], ["A", "e"]>>)
add_attribute("B", "d", "INTEGER")
conjunction
type_check
add_call_chain(<<c,C,D,d,B,INTEGER,B>>)
add_attribute("C", "D", "BOOLEAN")
add_call_chain(<<A>>)
conjunction
bool_value (true)
generate_java_code
add_command("C", "d", <<["a", "B"], ["b", "A"], ["B", "a"], ["d", "c"], ["b", "INTEGER"], ["e", "BOOLEAN"], ["b", "BOOLEAN"], ["d", "D"]>>)
disjunction
disjunction
logical_negation
add_command("INTEGER", "C", <<["D", "A"], ["a", "INTEGER"], ["INTEGER", "INTEGER"], ["D", "INTEGER"], ["a", "INTEGER"], ["INTEGER", "BOOLEAN"], ["a", "B"], ["INTEGER", "INTEGER"], ["e", "INTEGER"]>>)
int_value (13)
add_command("B", "C", <<["D", "D"], ["C", "INTEGER"], ["c", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "INTEGER"], ["BOOLEAN", "c"], ["a", "A"]>>)
add_class(C)
int_value (27)
add_attribute("c", "C", "c")
bool_value (false)
type_check
numerical_negation
bool_value (false)
addition
add_call_chain(<<D,B,e,a,D,C,INTEGER,d>>)
add_command("e", "D", <<["INTEGER", "C"], ["c", "BOOLEAN"], ["INTEGER", "INTEGER"], ["e", "INTEGER"], ["e", "BOOLEAN"], ["B", "INTEGER"], ["C", "INTEGER"], ["a", "INTEGER"]>>)
add_call_chain(<<e,C,A>>)
logical_negation
bool_value (false)
add_attribute("b", "B", "BOOLEAN")
type_check
add_call_chain(<<c,b>>)
add_call_chain(<<C,e,C>>)
addition
logical_negation
add_query("c", "a", <<["INTEGER", "c"], ["c", "BOOLEAN"], ["a", "e"], ["B", "D"]>>, "e")
add_query("B", "d", <<["B", "c"], ["B", "INTEGER"], ["c", "B"], ["BOOLEAN", "b"], ["C", "INTEGER"], ["A", "INTEGER"], ["BOOLEAN", "INTEGER"], ["D", "INTEGER"]>>, "INTEGER")
disjunction
multiplication
add_call_chain(<<C,c>>)
add_command("d", "D", <<["e", "C"], ["a", "e"], ["INTEGER", "BOOLEAN"], ["e", "INTEGER"]>>)
type_check
type_check
generate_java_code
int_value (40)
add_call_chain(<<c>>)
add_attribute("B", "BOOLEAN", "INTEGER")
add_query("a", "INTEGER", <<["d", "INTEGER"], ["d", "INTEGER"], ["B", "INTEGER"], ["D", "BOOLEAN"]>>, "d")
bool_value (true)
add_call_chain(<<A,D,A>>)
add_call_chain(<<c>>)
add_call_chain(<<B>>)
disjunction
int_value (41)
add_command("A", "C", <<["a", "C"], ["C", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "INTEGER"], ["A", "INTEGER"]>>)
logical_negation
add_query("D", "C", <<["A", "INTEGER"], ["d", "INTEGER"], ["B", "BOOLEAN"], ["C", "D"], ["b", "BOOLEAN"], ["C", "INTEGER"], ["d", "INTEGER"], ["B", "A"]>>, "a")
logical_negation
greater_than
quotient
subtraction
add_command("INTEGER", "A", <<["d", "INTEGER"], ["a", "INTEGER"], ["c", "INTEGER"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "INTEGER"], ["D", "INTEGER"]>>)
add_attribute("D", "e", "BOOLEAN")
add_query("D", "c", <<["B", "a"], ["c", "INTEGER"], ["BOOLEAN", "C"]>>, "D")
add_call_chain(<<A>>)
subtraction
conjunction
int_value (36)
generate_java_code
add_attribute("c", "D", "b")
add_query("B", "B", <<["e", "INTEGER"], ["a", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "INTEGER"], ["B", "B"], ["c", "BOOLEAN"], ["b", "INTEGER"]>>, "a")
int_value (19)
generate_java_code
add_attribute("e", "b", "BOOLEAN")
addition
logical_negation
numerical_negation
bool_value (true)
add_call_chain(<<D,c,d,c>>)
add_command("c", "a", <<["C", "BOOLEAN"], ["INTEGER", "C"], ["b", "d"], ["D", "BOOLEAN"]>>)
add_attribute("b", "C", "INTEGER")
add_call_chain(<<e>>)
add_call_chain(<<C,B,b,C,D,b,INTEGER,c>>)
add_class(d)
equals
add_call_chain(<<a,B,B>>)
bool_value (false)
logical_negation
disjunction
add_attribute("c", "D", "BOOLEAN")
numerical_negation
add_call_chain(<<A,INTEGER>>)
bool_value (false)
disjunction
type_check
generate_java_code
equals
logical_negation
add_call_chain(<<e>>)
logical_negation
add_class(d)
add_class(e)
add_call_chain(<<D,A,a,c,A>>)
int_value (19)
bool_value (true)
add_call_chain(<<a,c,B,c,b,b,A,BOOLEAN>>)
add_class(BOOLEAN)
add_call_chain(<<d,D,A,d,A,b,C,c,b>>)
int_value (28)
add_attribute("B", "A", "C")
bool_value (true)
int_value (11)
multiplication
subtraction
equals
add_query("C", "D", <<["B", "INTEGER"]>>, "c")
add_command("D", "a", <<["b", "BOOLEAN"], ["e", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "INTEGER"], ["c", "c"]>>)
add_query("B", "C", <<["e", "b"], ["A", "BOOLEAN"], ["c", "INTEGER"]>>, "e")
add_attribute("a", "A", "INTEGER")
generate_java_code
type_check
add_class(c)
add_call_chain(<<A,d>>)
generate_java_code
numerical_negation
add_attribute("d", "C", "BOOLEAN")
add_query("a", "D", <<["d", "D"], ["BOOLEAN", "INTEGER"], ["BOOLEAN", "INTEGER"], ["d", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "C"]>>, "a")
add_call_chain(<<C,A>>)
add_call_chain(<<B,INTEGER,INTEGER>>)
add_class(a)
add_query("A", "a", <<["a", "INTEGER"], ["D", "INTEGER"], ["e", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "INTEGER"], ["D", "BOOLEAN"]>>, "INTEGER")
generate_java_code
add_command("C", "B", <<["A", "INTEGER"], ["d", "BOOLEAN"], ["a", "INTEGER"], ["b", "D"], ["A", "INTEGER"], ["D", "BOOLEAN"]>>)
add_class(B)
add_command("A", "INTEGER", <<["C", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "c"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["b", "D"]>>)
addition
add_query("A", "INTEGER", <<["D", "INTEGER"], ["e", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["d", "INTEGER"], ["D", "BOOLEAN"], ["D", "c"]>>, "C")
bool_value (false)
generate_java_code
numerical_negation
add_call_chain(<<C,A,INTEGER>>)
add_call_chain(<<C,a,D,BOOLEAN,a,BOOLEAN,a>>)
numerical_negation
greater_than
int_value (34)
add_call_chain(<<e,A,A,d,a>>)
add_attribute("BOOLEAN", "B", "INTEGER")
type_check
logical_negation
add_attribute("e", "c", "INTEGER")
numerical_negation
equals
int_value (13)
add_command("B", "c", <<["B", "c"]>>)
add_attribute("BOOLEAN", "BOOLEAN", "BOOLEAN")
logical_negation
add_attribute("BOOLEAN", "D", "a")
int_value (34)
add_call_chain(<<INTEGER,B,c,D,A>>)
logical_negation
add_attribute("INTEGER", "a", "BOOLEAN")
bool_value (false)
logical_negation
