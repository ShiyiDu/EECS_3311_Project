bool_value (true)
disjunction
add_attribute("B", "A", "INTEGER")
add_command("INTEGER", "b", <<["e", "a"], ["b", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>)
add_attribute("B", "e", "BOOLEAN")
add_call_chain(<<c,e,C,B,B,c,C,b,e>>)
numerical_negation
bool_value (false)
add_call_chain(<<d,d>>)
add_query("a", "C", <<["C", "INTEGER"], ["C", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "INTEGER"], ["A", "INTEGER"], ["c", "BOOLEAN"]>>, "B")
add_command("D", "D", <<["a", "INTEGER"], ["a", "INTEGER"], ["d", "INTEGER"], ["B", "d"], ["D", "C"], ["D", "C"]>>)
numerical_negation
logical_negation
disjunction
add_call_chain(<<c>>)
add_command("e", "B", <<["B", "A"], ["a", "INTEGER"], ["D", "INTEGER"], ["C", "INTEGER"], ["e", "BOOLEAN"], ["B", "d"], ["D", "BOOLEAN"], ["A", "D"], ["INTEGER", "BOOLEAN"]>>)
type_check
add_command("e", "e", <<["INTEGER", "INTEGER"], ["B", "BOOLEAN"], ["INTEGER", "INTEGER"], ["d", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "c"], ["e", "BOOLEAN"], ["C", "BOOLEAN"]>>)
int_value (25)
add_call_chain(<<d,B,a,c,a>>)
add_call_chain(<<C,d,d,INTEGER>>)
numerical_negation
type_check
add_query("b", "c", <<["e", "INTEGER"]>>, "b")
logical_negation
add_command("e", "A", <<["c", "INTEGER"], ["B", "INTEGER"]>>)
add_call_chain(<<INTEGER>>)
type_check
bool_value (true)
add_class(a)
add_call_chain(<<a,b,c,a,C>>)
add_call_chain(<<C,A,B,INTEGER>>)
add_query("a", "b", <<["B", "BOOLEAN"]>>, "C")
type_check
add_attribute("c", "A", "INTEGER")
int_value (21)
greater_than
add_query("a", "c", <<["A", "C"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["a", "BOOLEAN"], ["INTEGER", "INTEGER"]>>, "c")
add_command("c", "c", <<["C", "INTEGER"], ["b", "BOOLEAN"]>>)
numerical_negation
equals
int_value (13)
logical_negation
generate_java_code
generate_java_code
numerical_negation
int_value (4)
add_query("B", "e", <<["D", "d"], ["B", "INTEGER"]>>, "C")
add_command("INTEGER", "INTEGER", <<["c", "INTEGER"], ["C", "e"], ["d", "e"], ["b", "B"], ["B", "BOOLEAN"], ["C", "b"], ["C", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["A", "C"]>>)
bool_value (true)
add_attribute("d", "D", "BOOLEAN")
numerical_negation
add_command("c", "B", <<["c", "BOOLEAN"], ["e", "INTEGER"], ["C", "b"], ["A", "B"], ["A", "INTEGER"], ["A", "INTEGER"], ["a", "b"]>>)
multiplication
add_attribute("a", "e", "e")
quotient
add_call_chain(<<INTEGER,b>>)
add_call_chain(<<B,D,BOOLEAN,D,D,d,A,B>>)
add_call_chain(<<A,A,b,b,D,e,B>>)
add_attribute("e", "A", "c")
bool_value (true)
bool_value (true)
numerical_negation
add_query("BOOLEAN", "c", <<["e", "B"], ["A", "INTEGER"], ["a", "INTEGER"]>>, "B")
greater_than
add_call_chain(<<D,d,B>>)
add_query("e", "a", <<["B", "INTEGER"], ["A", "A"], ["BOOLEAN", "e"], ["BOOLEAN", "BOOLEAN"], ["C", "INTEGER"], ["D", "INTEGER"]>>, "B")
logical_negation
add_call_chain(<<c,A>>)
add_command("d", "A", <<["B", "A"], ["c", "INTEGER"], ["c", "INTEGER"], ["A", "b"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "INTEGER"]>>)
add_call_chain(<<d,B,d,B,C,e,B,D,B>>)
generate_java_code
add_call_chain(<<c,INTEGER,C,b,b,c,C>>)
numerical_negation
numerical_negation
add_query("B", "INTEGER", <<["d", "BOOLEAN"], ["c", "e"], ["B", "INTEGER"], ["INTEGER", "INTEGER"], ["a", "BOOLEAN"]>>, "c")
add_attribute("D", "A", "BOOLEAN")
bool_value (true)
add_command("D", "a", <<["d", "INTEGER"], ["D", "BOOLEAN"], ["A", "C"], ["D", "INTEGER"], ["INTEGER", "INTEGER"]>>)
add_command("a", "C", <<["D", "B"], ["C", "BOOLEAN"], ["C", "B"], ["INTEGER", "D"], ["D", "INTEGER"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["e", "INTEGER"]>>)
bool_value (false)
bool_value (false)
add_call_chain(<<INTEGER,A,c,a,A,D,d,a>>)
add_class(D)
subtraction
add_attribute("c", "c", "INTEGER")
add_query("C", "A", <<["INTEGER", "e"], ["a", "INTEGER"], ["INTEGER", "e"], ["d", "BOOLEAN"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["A", "INTEGER"], ["e", "BOOLEAN"]>>, "e")
multiplication
multiplication
bool_value (true)
add_class(A)
add_attribute("c", "B", "INTEGER")
disjunction
subtraction
bool_value (true)
greater_than
add_class(C)
numerical_negation
add_command("a", "C", <<["e", "INTEGER"], ["c", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "a"], ["d", "INTEGER"], ["A", "a"]>>)
add_attribute("c", "C", "INTEGER")
int_value (39)
add_class(C)
bool_value (false)
add_call_chain(<<INTEGER,b>>)
addition
add_command("b", "a", <<["e", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["e", "INTEGER"], ["b", "BOOLEAN"]>>)
int_value (34)
bool_value (false)
add_query("A", "a", <<["A", "INTEGER"], ["b", "BOOLEAN"], ["D", "INTEGER"], ["c", "BOOLEAN"], ["B", "INTEGER"]>>, "d")
logical_negation
equals
int_value (38)
add_call_chain(<<A,C,b,d,B,b,A>>)
int_value (48)
add_class(C)
type_check
add_attribute("e", "d", "BOOLEAN")
add_class(B)
add_attribute("D", "A", "BOOLEAN")
add_call_chain(<<a,D,C,B,c,d,c,A>>)
add_command("b", "d", <<["A", "INTEGER"], ["e", "BOOLEAN"], ["D", "D"], ["B", "INTEGER"], ["c", "b"], ["A", "INTEGER"]>>)
add_call_chain(<<B,d,D,a>>)
add_call_chain(<<d,INTEGER,d,BOOLEAN,d>>)
add_call_chain(<<e,D,A,d,e,BOOLEAN,B,B>>)
add_call_chain(<<BOOLEAN,C,D,c,D,A,e,D>>)
generate_java_code
add_call_chain(<<D,B,d,e,INTEGER,d,B,B,c>>)
add_class(e)
logical_negation
add_query("B", "B", <<["c", "BOOLEAN"], ["B", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["A", "D"], ["A", "A"], ["e", "INTEGER"]>>, "A")
disjunction
add_query("B", "a", <<["e", "BOOLEAN"], ["a", "INTEGER"], ["c", "c"], ["c", "d"], ["e", "d"], ["c", "e"], ["D", "c"], ["b", "INTEGER"], ["a", "BOOLEAN"]>>, "BOOLEAN")
add_class(B)
add_command("BOOLEAN", "c", <<["B", "INTEGER"], ["c", "INTEGER"], ["e", "INTEGER"], ["D", "BOOLEAN"], ["C", "C"], ["b", "BOOLEAN"]>>)
conjunction
multiplication
bool_value (true)
numerical_negation
add_query("A", "C", <<["D", "B"], ["e", "D"]>>, "d")
add_attribute("A", "INTEGER", "BOOLEAN")
bool_value (false)
add_attribute("c", "a", "a")
add_call_chain(<<b,e,A>>)
logical_negation
numerical_negation
add_query("INTEGER", "a", <<["A", "INTEGER"], ["A", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["c", "C"]>>, "D")
add_command("c", "e", <<["b", "BOOLEAN"], ["B", "INTEGER"], ["a", "INTEGER"], ["A", "e"], ["A", "BOOLEAN"], ["D", "D"], ["b", "BOOLEAN"]>>)
add_class(d)
equals
numerical_negation
int_value (41)
add_query("c", "D", <<["b", "C"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["e", "INTEGER"], ["C", "C"], ["B", "e"], ["INTEGER", "b"]>>, "b")
add_command("a", "B", <<["INTEGER", "BOOLEAN"], ["b", "INTEGER"], ["A", "e"], ["C", "BOOLEAN"], ["c", "A"], ["c", "BOOLEAN"], ["B", "a"], ["e", "BOOLEAN"]>>)
add_command("B", "A", <<["c", "BOOLEAN"]>>)
bool_value (true)
add_call_chain(<<a,A,C,C,a>>)
add_command("e", "A", <<["D", "A"], ["a", "A"], ["B", "INTEGER"], ["d", "INTEGER"], ["A", "BOOLEAN"], ["B", "b"], ["a", "BOOLEAN"]>>)
add_command("A", "b", <<["A", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "b"]>>)
add_call_chain(<<B,D,a,D,a,INTEGER,B>>)
add_query("B", "a", <<["A", "INTEGER"], ["b", "INTEGER"], ["c", "INTEGER"], ["c", "C"], ["a", "BOOLEAN"], ["BOOLEAN", "a"], ["INTEGER", "A"], ["C", "C"], ["D", "INTEGER"]>>, "INTEGER")
add_attribute("b", "a", "BOOLEAN")
conjunction
add_query("e", "d", <<["e", "B"], ["c", "BOOLEAN"], ["C", "INTEGER"], ["C", "C"]>>, "INTEGER")
generate_java_code
generate_java_code
add_call_chain(<<e,d,C,e,INTEGER,BOOLEAN,e,A>>)
int_value (33)
add_attribute("D", "B", "c")
add_attribute("C", "a", "INTEGER")
add_call_chain(<<INTEGER,A,b,INTEGER,b,c,a>>)
conjunction
add_query("A", "D", <<["BOOLEAN", "INTEGER"], ["A", "INTEGER"], ["e", "c"], ["A", "d"], ["C", "D"]>>, "a")
numerical_negation
addition
add_attribute("d", "a", "INTEGER")
add_attribute("B", "B", "INTEGER")
add_query("A", "a", <<["C", "INTEGER"], ["e", "BOOLEAN"], ["B", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>, "INTEGER")
int_value (49)
numerical_negation
add_command("C", "a", <<["D", "INTEGER"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["C", "c"], ["b", "INTEGER"], ["d", "BOOLEAN"], ["a", "BOOLEAN"]>>)
add_query("D", "INTEGER", <<["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "BOOLEAN"]>>, "BOOLEAN")
generate_java_code
bool_value (true)
int_value (23)
add_query("C", "C", <<["B", "BOOLEAN"], ["d", "BOOLEAN"]>>, "d")
int_value (36)
add_attribute("C", "e", "BOOLEAN")
add_command("e", "B", <<["b", "a"], ["c", "b"]>>)
add_call_chain(<<A,INTEGER,b>>)
less_than
add_attribute("a", "BOOLEAN", "d")
less_than
add_attribute("A", "a", "INTEGER")
add_query("a", "C", <<["INTEGER", "INTEGER"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["B", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "BOOLEAN"], ["a", "INTEGER"]>>, "a")
logical_negation
generate_java_code
add_query("BOOLEAN", "B", <<["c", "BOOLEAN"], ["c", "a"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["a", "BOOLEAN"], ["A", "INTEGER"], ["C", "B"], ["D", "INTEGER"]>>, "C")
add_command("b", "C", <<["C", "BOOLEAN"], ["B", "INTEGER"], ["b", "A"], ["D", "INTEGER"], ["e", "BOOLEAN"]>>)
bool_value (false)
numerical_negation
int_value (49)
add_query("c", "B", <<["a", "INTEGER"], ["BOOLEAN", "INTEGER"], ["e", "d"], ["B", "D"], ["B", "B"], ["B", "D"], ["C", "BOOLEAN"]>>, "a")
add_class(INTEGER)
quotient
add_query("a", "A", <<["b", "C"], ["d", "INTEGER"], ["B", "d"], ["e", "INTEGER"], ["D", "INTEGER"], ["B", "BOOLEAN"]>>, "c")
add_call_chain(<<B>>)
add_call_chain(<<C,a,INTEGER,c>>)
numerical_negation
generate_java_code
add_command("B", "C", <<["A", "d"]>>)
addition
add_query("D", "C", <<["A", "INTEGER"], ["BOOLEAN", "INTEGER"], ["INTEGER", "INTEGER"], ["b", "INTEGER"], ["e", "INTEGER"], ["b", "BOOLEAN"]>>, "A")
