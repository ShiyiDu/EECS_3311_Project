add_command("D", "b", <<["C", "BOOLEAN"], ["B", "INTEGER"], ["b", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "INTEGER"]>>)
add_query("e", "B", <<["d", "INTEGER"], ["C", "b"], ["a", "BOOLEAN"], ["c", "A"], ["d", "c"], ["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "d"], ["BOOLEAN", "INTEGER"]>>, "d")
int_value (37)
add_query("C", "b", <<["B", "c"], ["b", "INTEGER"], ["d", "INTEGER"], ["B", "INTEGER"], ["BOOLEAN", "INTEGER"]>>, "a")
int_value (21)
numerical_negation
add_query("C", "C", <<["e", "INTEGER"], ["d", "INTEGER"], ["a", "e"]>>, "C")
add_call_chain(<<b,BOOLEAN,e,A,C,e,e>>)
conjunction
bool_value (true)
bool_value (true)
add_query("C", "C", <<["B", "C"], ["c", "C"]>>, "e")
add_class(C)
multiplication
add_attribute("e", "b", "INTEGER")
logical_negation
generate_java_code
add_command("d", "B", <<["d", "INTEGER"], ["C", "A"], ["C", "B"], ["d", "INTEGER"], ["C", "b"], ["c", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "A"]>>)
equals
add_query("c", "d", <<["A", "C"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["c", "INTEGER"], ["d", "INTEGER"], ["c", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["c", "d"], ["d", "C"]>>, "C")
logical_negation
add_call_chain(<<c,A,D,B,e,B,c,b>>)
int_value (2)
logical_negation
logical_negation
less_than
add_command("D", "a", <<["a", "B"], ["B", "INTEGER"], ["e", "INTEGER"], ["A", "INTEGER"]>>)
disjunction
numerical_negation
disjunction
bool_value (false)
add_command("A", "B", <<["BOOLEAN", "INTEGER"], ["e", "INTEGER"], ["B", "INTEGER"], ["BOOLEAN", "e"]>>)
add_command("INTEGER", "BOOLEAN", <<["d", "INTEGER"], ["A", "BOOLEAN"], ["C", "INTEGER"]>>)
add_call_chain(<<A,BOOLEAN,d,e,a,INTEGER,a,C,d>>)
add_query("d", "c", <<["C", "BOOLEAN"], ["b", "INTEGER"], ["e", "BOOLEAN"], ["c", "INTEGER"], ["d", "e"], ["D", "INTEGER"]>>, "C")
add_command("a", "BOOLEAN", <<["INTEGER", "d"], ["e", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "INTEGER"], ["a", "a"], ["d", "INTEGER"], ["INTEGER", "c"]>>)
int_value (1)
add_call_chain(<<D>>)
add_query("c", "D", <<["d", "INTEGER"], ["D", "INTEGER"], ["B", "b"], ["c", "INTEGER"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["d", "C"]>>, "b")
add_attribute("BOOLEAN", "A", "BOOLEAN")
equals
int_value (5)
numerical_negation
add_call_chain(<<BOOLEAN,d>>)
generate_java_code
bool_value (false)
logical_negation
add_query("B", "A", <<["C", "INTEGER"], ["B", "INTEGER"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["c", "BOOLEAN"]>>, "B")
int_value (11)
add_class(BOOLEAN)
numerical_negation
int_value (38)
add_class(A)
add_attribute("INTEGER", "A", "BOOLEAN")
add_query("BOOLEAN", "a", <<["a", "BOOLEAN"], ["b", "BOOLEAN"], ["d", "INTEGER"], ["c", "D"], ["b", "BOOLEAN"], ["c", "C"], ["e", "INTEGER"], ["D", "BOOLEAN"]>>, "A")
add_query("B", "B", <<["d", "INTEGER"], ["b", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "a"], ["b", "c"]>>, "c")
add_attribute("e", "a", "INTEGER")
logical_negation
bool_value (true)
add_attribute("D", "b", "A")
less_than
numerical_negation
type_check
type_check
add_attribute("e", "d", "BOOLEAN")
subtraction
add_query("b", "C", <<["d", "INTEGER"]>>, "C")
generate_java_code
add_command("D", "BOOLEAN", <<["c", "INTEGER"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["INTEGER", "INTEGER"], ["D", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>)
int_value (7)
multiplication
bool_value (true)
bool_value (true)
disjunction
bool_value (false)
disjunction
generate_java_code
add_call_chain(<<A,a,C,e,c,a>>)
add_call_chain(<<INTEGER,a,b,a,e,c,C>>)
add_command("C", "a", <<["e", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>)
int_value (34)
logical_negation
int_value (35)
int_value (8)
add_command("C", "BOOLEAN", <<["b", "C"], ["B", "BOOLEAN"]>>)
add_command("e", "e", <<["b", "BOOLEAN"], ["C", "INTEGER"], ["a", "C"], ["B", "BOOLEAN"], ["a", "INTEGER"], ["b", "INTEGER"], ["BOOLEAN", "a"], ["b", "INTEGER"]>>)
generate_java_code
add_call_chain(<<d,e,e,a,a,b>>)
int_value (25)
add_command("a", "d", <<["d", "INTEGER"], ["b", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "A"]>>)
add_query("a", "d", <<["e", "BOOLEAN"]>>, "e")
conjunction
numerical_negation
logical_negation
add_call_chain(<<A,INTEGER,d>>)
add_call_chain(<<C,d,e,D,b,A,INTEGER,d>>)
add_query("d", "B", <<["a", "BOOLEAN"], ["D", "BOOLEAN"]>>, "A")
add_attribute("c", "D", "INTEGER")
int_value (5)
logical_negation
generate_java_code
add_query("D", "BOOLEAN", <<["BOOLEAN", "INTEGER"], ["C", "C"], ["e", "a"], ["a", "BOOLEAN"], ["B", "BOOLEAN"]>>, "a")
bool_value (false)
add_command("BOOLEAN", "A", <<["INTEGER", "C"]>>)
add_attribute("c", "A", "INTEGER")
add_query("e", "a", <<["B", "BOOLEAN"], ["c", "e"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["c", "INTEGER"]>>, "e")
quotient
type_check
numerical_negation
add_call_chain(<<b,INTEGER,C,INTEGER>>)
add_command("e", "e", <<["d", "b"], ["B", "INTEGER"], ["C", "d"], ["a", "a"], ["B", "INTEGER"], ["d", "BOOLEAN"]>>)
int_value (1)
add_call_chain(<<d,BOOLEAN,B,B>>)
add_query("A", "B", <<["BOOLEAN", "INTEGER"], ["A", "INTEGER"], ["a", "INTEGER"], ["b", "C"], ["BOOLEAN", "D"], ["c", "INTEGER"], ["d", "INTEGER"]>>, "c")
multiplication
add_call_chain(<<D,d,d,C,d,B,e,A,BOOLEAN>>)
add_class(b)
add_command("C", "B", <<["C", "BOOLEAN"], ["D", "BOOLEAN"]>>)
addition
add_query("B", "e", <<["D", "BOOLEAN"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["B", "INTEGER"], ["C", "BOOLEAN"], ["C", "e"]>>, "d")
add_call_chain(<<BOOLEAN,B,B,BOOLEAN,A,e>>)
add_command("A", "c", <<["e", "BOOLEAN"], ["B", "a"], ["d", "INTEGER"]>>)
int_value (46)
add_attribute("D", "b", "c")
add_call_chain(<<D,INTEGER,c,D,INTEGER,INTEGER,B,d>>)
add_query("b", "e", <<["A", "INTEGER"], ["C", "b"], ["INTEGER", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "INTEGER"], ["e", "e"], ["B", "INTEGER"], ["a", "INTEGER"], ["e", "BOOLEAN"]>>, "A")
add_attribute("D", "INTEGER", "BOOLEAN")
less_than
int_value (20)
generate_java_code
bool_value (false)
add_call_chain(<<BOOLEAN,c,c,C,A>>)
disjunction
numerical_negation
add_attribute("d", "D", "BOOLEAN")
add_attribute("b", "C", "C")
equals
add_call_chain(<<INTEGER,INTEGER,a,e,A,INTEGER>>)
conjunction
numerical_negation
bool_value (true)
quotient
add_attribute("c", "a", "BOOLEAN")
logical_negation
logical_negation
add_call_chain(<<C,B,c,e,a,b>>)
add_class(INTEGER)
add_call_chain(<<a,B,BOOLEAN>>)
add_query("C", "BOOLEAN", <<["A", "INTEGER"]>>, "INTEGER")
add_class(BOOLEAN)
bool_value (false)
add_command("A", "e", <<["c", "INTEGER"], ["B", "c"], ["e", "C"]>>)
generate_java_code
add_call_chain(<<d>>)
add_command("D", "B", <<["c", "INTEGER"], ["C", "BOOLEAN"], ["a", "INTEGER"]>>)
add_command("A", "A", <<["B", "d"]>>)
add_call_chain(<<C,D,INTEGER,e>>)
add_attribute("D", "b", "b")
add_query("BOOLEAN", "a", <<["B", "INTEGER"], ["C", "BOOLEAN"], ["a", "INTEGER"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "b"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "INTEGER"]>>, "B")
add_call_chain(<<B,B,INTEGER,e,a,B,D,b,d>>)
add_command("D", "C", <<["C", "BOOLEAN"], ["D", "e"], ["INTEGER", "e"], ["INTEGER", "BOOLEAN"], ["B", "INTEGER"], ["A", "BOOLEAN"]>>)
add_call_chain(<<B,c>>)
less_than
add_attribute("A", "c", "BOOLEAN")
numerical_negation
numerical_negation
add_call_chain(<<C,A,C>>)
add_command("BOOLEAN", "a", <<["D", "BOOLEAN"], ["d", "INTEGER"], ["C", "D"]>>)
modulo
bool_value (false)
int_value (12)
less_than
add_query("A", "C", <<["d", "BOOLEAN"], ["INTEGER", "INTEGER"], ["b", "d"], ["A", "a"], ["b", "BOOLEAN"]>>, "B")
disjunction
add_call_chain(<<D,C,d,c,d,B,D>>)
add_attribute("a", "C", "INTEGER")
add_call_chain(<<BOOLEAN,A,A>>)
int_value (1)
quotient
equals
generate_java_code
equals
logical_negation
