generate_java_code
add_command("C", "e", <<["b", "INTEGER"], ["D", "INTEGER"], ["e", "BOOLEAN"], ["D", "B"]>>)
add_class(B)
multiplication
bool_value (false)
add_command("a", "B", <<["a", "BOOLEAN"], ["C", "C"], ["B", "BOOLEAN"], ["BOOLEAN", "d"]>>)
add_command("d", "C", <<["C", "INTEGER"], ["A", "C"], ["A", "BOOLEAN"], ["e", "INTEGER"], ["D", "BOOLEAN"]>>)
int_value (48)
greater_than
add_command("D", "BOOLEAN", <<["C", "BOOLEAN"], ["C", "INTEGER"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "INTEGER"]>>)
numerical_negation
add_call_chain(<<d,c,d>>)
type_check
add_class(b)
add_call_chain(<<B,C,C,A,e>>)
add_attribute("A", "c", "BOOLEAN")
numerical_negation
add_command("D", "a", <<["e", "INTEGER"], ["D", "INTEGER"], ["D", "BOOLEAN"]>>)
bool_value (true)
add_attribute("c", "C", "BOOLEAN")
logical_negation
generate_java_code
add_command("A", "D", <<["BOOLEAN", "BOOLEAN"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["a", "INTEGER"], ["c", "D"], ["c", "a"], ["B", "BOOLEAN"]>>)
numerical_negation
less_than
bool_value (false)
type_check
add_call_chain(<<D,B,BOOLEAN,A,D,C,C>>)
int_value (28)
int_value (26)
disjunction
add_command("A", "d", <<["BOOLEAN", "e"], ["b", "BOOLEAN"]>>)
add_call_chain(<<B,INTEGER>>)
add_call_chain(<<a,A,e,B>>)
add_class(D)
add_attribute("a", "b", "C")
generate_java_code
add_class(A)
numerical_negation
numerical_negation
int_value (21)
generate_java_code
bool_value (true)
bool_value (true)
logical_negation
add_command("A", "a", <<["d", "BOOLEAN"], ["A", "D"]>>)
add_command("A", "B", <<["c", "a"]>>)
add_attribute("INTEGER", "A", "BOOLEAN")
add_attribute("B", "c", "BOOLEAN")
logical_negation
generate_java_code
bool_value (true)
add_query("e", "b", <<["e", "BOOLEAN"]>>, "C")
logical_negation
bool_value (true)
add_query("C", "D", <<["A", "A"], ["BOOLEAN", "INTEGER"], ["b", "BOOLEAN"], ["B", "c"], ["e", "d"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["B", "d"]>>, "INTEGER")
logical_negation
add_call_chain(<<a,D,B,B,A,A,e,e,A>>)
int_value (36)
add_call_chain(<<a,INTEGER,b,c,c,d>>)
add_query("b", "INTEGER", <<["e", "INTEGER"], ["e", "BOOLEAN"], ["d", "BOOLEAN"], ["e", "INTEGER"]>>, "C")
add_query("B", "c", <<["B", "INTEGER"], ["b", "INTEGER"], ["B", "INTEGER"]>>, "A")
subtraction
add_command("BOOLEAN", "a", <<["e", "D"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["c", "INTEGER"], ["b", "INTEGER"], ["a", "BOOLEAN"], ["B", "INTEGER"], ["BOOLEAN", "a"], ["c", "d"]>>)
numerical_negation
logical_negation
addition
greater_than
disjunction
numerical_negation
add_query("b", "c", <<["D", "INTEGER"], ["B", "B"], ["c", "INTEGER"], ["b", "INTEGER"], ["d", "A"], ["D", "INTEGER"]>>, "d")
bool_value (false)
add_call_chain(<<D,b,b,B>>)
int_value (8)
add_call_chain(<<a,c,B,INTEGER,B,C,b,C,D>>)
add_call_chain(<<D,a>>)
add_call_chain(<<c>>)
logical_negation
add_call_chain(<<B,C,b>>)
type_check
numerical_negation
type_check
add_query("C", "C", <<["D", "BOOLEAN"]>>, "C")
generate_java_code
logical_negation
generate_java_code
add_call_chain(<<INTEGER,e,D,C,INTEGER,D,a,D>>)
numerical_negation
add_class(b)
int_value (32)
int_value (16)
add_attribute("a", "A", "INTEGER")
add_attribute("C", "D", "BOOLEAN")
add_query("INTEGER", "a", <<["d", "INTEGER"], ["D", "BOOLEAN"], ["B", "INTEGER"]>>, "A")
quotient
add_call_chain(<<a>>)
generate_java_code
add_command("INTEGER", "c", <<["e", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "BOOLEAN"], ["BOOLEAN", "C"], ["INTEGER", "a"]>>)
numerical_negation
type_check
add_call_chain(<<e,D,a,a>>)
logical_negation
numerical_negation
less_than
logical_negation
numerical_negation
add_call_chain(<<a,a,d,c,C,D,c>>)
int_value (27)
add_call_chain(<<e,c,c,D,A,e,d,A>>)
add_query("d", "a", <<["D", "INTEGER"], ["B", "B"], ["b", "INTEGER"], ["D", "D"], ["BOOLEAN", "INTEGER"], ["a", "BOOLEAN"], ["INTEGER", "INTEGER"], ["c", "a"]>>, "B")
add_query("c", "INTEGER", <<["c", "B"], ["INTEGER", "INTEGER"], ["D", "C"]>>, "INTEGER")
add_call_chain(<<A,C,c,INTEGER,b,INTEGER,B,B,d>>)
logical_negation
conjunction
disjunction
add_command("a", "A", <<["e", "INTEGER"], ["b", "BOOLEAN"], ["c", "D"], ["B", "BOOLEAN"], ["BOOLEAN", "c"], ["BOOLEAN", "c"]>>)
add_class(a)
add_call_chain(<<a>>)
add_command("d", "d", <<["C", "b"], ["C", "INTEGER"], ["B", "a"]>>)
add_query("BOOLEAN", "d", <<["B", "A"], ["b", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "d"], ["A", "D"], ["B", "BOOLEAN"], ["A", "BOOLEAN"]>>, "d")
quotient
add_query("d", "A", <<["A", "c"], ["A", "INTEGER"], ["b", "b"]>>, "D")
add_call_chain(<<B,b,B,A,A,A,e>>)
numerical_negation
add_command("b", "INTEGER", <<["B", "INTEGER"], ["b", "BOOLEAN"], ["a", "BOOLEAN"]>>)
add_call_chain(<<D,A,b,a,c,c,A,D,C>>)
add_query("BOOLEAN", "a", <<["D", "BOOLEAN"], ["C", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["B", "c"], ["D", "BOOLEAN"]>>, "c")
less_than
numerical_negation
add_attribute("A", "B", "BOOLEAN")
numerical_negation
add_attribute("A", "BOOLEAN", "c")
disjunction
int_value (10)
add_command("D", "B", <<["INTEGER", "b"]>>)
int_value (37)
add_call_chain(<<A,D,B,C>>)
add_call_chain(<<INTEGER,B,a>>)
add_call_chain(<<INTEGER,B,D,d>>)
quotient
numerical_negation
add_attribute("A", "BOOLEAN", "BOOLEAN")
logical_negation
add_call_chain(<<BOOLEAN,B,e,e,B,e,e>>)
generate_java_code
add_call_chain(<<D,A,D,A,c,e>>)
add_query("C", "B", <<["A", "b"], ["B", "d"], ["d", "BOOLEAN"], ["c", "INTEGER"], ["a", "c"], ["BOOLEAN", "b"], ["e", "INTEGER"], ["D", "A"]>>, "e")
add_class(BOOLEAN)
int_value (23)
add_class(C)
less_than
int_value (19)
less_than
logical_negation
logical_negation
numerical_negation
numerical_negation
add_attribute("d", "a", "INTEGER")
add_command("A", "A", <<["A", "A"], ["b", "INTEGER"], ["B", "C"], ["B", "B"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["A", "a"], ["d", "INTEGER"]>>)
generate_java_code
add_attribute("c", "D", "BOOLEAN")
bool_value (true)
add_class(B)
add_call_chain(<<A,d,e,d,A>>)
add_call_chain(<<B>>)
bool_value (false)
generate_java_code
add_query("C", "b", <<["e", "INTEGER"]>>, "D")
add_call_chain(<<B>>)
bool_value (true)
int_value (45)
int_value (40)
add_call_chain(<<B,A,c,c,d,A,c>>)
multiplication
add_call_chain(<<c,d,D,b,C,e,B>>)
add_query("BOOLEAN", "A", <<["d", "C"], ["a", "C"], ["INTEGER", "d"], ["c", "INTEGER"]>>, "B")
type_check
bool_value (true)
add_attribute("C", "a", "BOOLEAN")
add_call_chain(<<c,c,d,INTEGER,INTEGER,e,b,D,INTEGER>>)
add_query("b", "A", <<["B", "INTEGER"], ["d", "BOOLEAN"], ["B", "a"], ["C", "BOOLEAN"], ["C", "a"], ["b", "B"], ["D", "INTEGER"], ["INTEGER", "BOOLEAN"]>>, "C")
disjunction
add_call_chain(<<A,A>>)
add_query("A", "B", <<["B", "BOOLEAN"], ["e", "BOOLEAN"], ["INTEGER", "e"], ["INTEGER", "BOOLEAN"], ["a", "A"], ["D", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "BOOLEAN"]>>, "D")
disjunction
numerical_negation
add_query("D", "INTEGER", <<["d", "c"]>>, "e")
bool_value (true)
add_attribute("D", "c", "INTEGER")
disjunction
add_call_chain(<<a>>)
conjunction
add_call_chain(<<A,B,c,b,C,e,d,C>>)
numerical_negation
less_than
quotient
add_class(A)
numerical_negation
int_value (28)
add_class(e)
add_attribute("c", "b", "BOOLEAN")
add_class(C)
add_command("a", "c", <<["e", "BOOLEAN"], ["C", "INTEGER"], ["d", "BOOLEAN"]>>)
add_class(C)
add_call_chain(<<INTEGER,D,c,B,C>>)
add_call_chain(<<a,A,a,B>>)
bool_value (true)
