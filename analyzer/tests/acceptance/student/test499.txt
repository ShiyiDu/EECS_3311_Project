bool_value (true)
add_call_chain(<<INTEGER>>)
int_value (9)
conjunction
generate_java_code
multiplication
generate_java_code
type_check
type_check
int_value (40)
numerical_negation
generate_java_code
add_query("b", "c", <<["C", "INTEGER"], ["b", "B"], ["D", "BOOLEAN"], ["INTEGER", "a"], ["c", "BOOLEAN"], ["A", "e"], ["e", "BOOLEAN"], ["C", "A"]>>, "e")
int_value (12)
numerical_negation
add_attribute("D", "D", "BOOLEAN")
add_call_chain(<<A,d,B,b,C>>)
numerical_negation
add_query("C", "C", <<["B", "e"], ["b", "INTEGER"], ["A", "D"], ["b", "INTEGER"]>>, "A")
numerical_negation
add_call_chain(<<D,INTEGER,e,C>>)
add_call_chain(<<c,A>>)
add_query("B", "BOOLEAN", <<["e", "d"], ["d", "INTEGER"], ["b", "A"], ["e", "INTEGER"], ["C", "a"], ["e", "BOOLEAN"], ["BOOLEAN", "b"]>>, "D")
addition
add_command("A", "e", <<["C", "BOOLEAN"], ["a", "INTEGER"], ["d", "BOOLEAN"], ["D", "B"], ["A", "BOOLEAN"], ["b", "INTEGER"], ["B", "BOOLEAN"], ["a", "c"], ["D", "A"]>>)
type_check
add_attribute("C", "B", "c")
add_command("d", "e", <<["d", "b"], ["b", "B"], ["c", "INTEGER"], ["B", "BOOLEAN"]>>)
modulo
int_value (13)
add_call_chain(<<b,b,e,D,b>>)
add_command("c", "INTEGER", <<["b", "B"]>>)
logical_negation
add_query("e", "D", <<["A", "BOOLEAN"], ["C", "BOOLEAN"]>>, "B")
add_query("B", "B", <<["B", "INTEGER"], ["D", "INTEGER"], ["C", "A"], ["e", "D"], ["d", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["d", "BOOLEAN"], ["C", "INTEGER"]>>, "e")
numerical_negation
add_call_chain(<<C,d,A,BOOLEAN,C>>)
add_attribute("d", "D", "c")
type_check
disjunction
numerical_negation
numerical_negation
add_call_chain(<<e>>)
add_query("e", "C", <<["e", "BOOLEAN"], ["C", "INTEGER"], ["b", "INTEGER"], ["e", "INTEGER"], ["B", "e"], ["C", "BOOLEAN"], ["B", "A"]>>, "B")
bool_value (false)
bool_value (false)
add_call_chain(<<a,A,c,e,e,B,a>>)
add_class(D)
add_call_chain(<<D,BOOLEAN,A,B,c>>)
add_call_chain(<<C,D,c,B,d,BOOLEAN,C>>)
numerical_negation
generate_java_code
addition
add_class(c)
int_value (36)
add_command("d", "A", <<["D", "a"], ["INTEGER", "INTEGER"]>>)
greater_than
disjunction
generate_java_code
less_than
add_command("A", "BOOLEAN", <<["A", "INTEGER"], ["b", "INTEGER"], ["D", "INTEGER"], ["e", "d"], ["A", "INTEGER"]>>)
add_class(a)
add_call_chain(<<e,a>>)
add_attribute("e", "A", "c")
add_call_chain(<<e,B,a,c>>)
add_call_chain(<<d,c,A,e,C,B,BOOLEAN,e,D>>)
multiplication
numerical_negation
add_call_chain(<<D,d,C,e>>)
bool_value (false)
add_call_chain(<<d,b,e,A,D,c,e,c>>)
bool_value (true)
logical_negation
logical_negation
type_check
bool_value (true)
add_call_chain(<<e,d,c,e,BOOLEAN,e,C,a,D>>)
add_command("INTEGER", "e", <<["c", "INTEGER"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "A"], ["d", "BOOLEAN"], ["C", "BOOLEAN"]>>)
disjunction
type_check
add_command("INTEGER", "A", <<["D", "BOOLEAN"]>>)
add_call_chain(<<C,c,e,b>>)
bool_value (true)
add_call_chain(<<a,INTEGER,e,a,B,B>>)
add_call_chain(<<e,d,e,B,d>>)
add_query("B", "D", <<["A", "INTEGER"], ["D", "e"]>>, "c")
add_query("a", "d", <<["b", "INTEGER"], ["B", "b"], ["A", "BOOLEAN"]>>, "B")
add_class(D)
conjunction
logical_negation
addition
bool_value (false)
add_class(D)
logical_negation
type_check
add_command("a", "e", <<["A", "INTEGER"], ["a", "INTEGER"], ["b", "B"], ["b", "BOOLEAN"], ["a", "INTEGER"], ["A", "INTEGER"]>>)
int_value (15)
logical_negation
add_call_chain(<<B,D,BOOLEAN,d,a,D>>)
bool_value (true)
less_than
subtraction
add_call_chain(<<C,A,B,D,B>>)
add_query("A", "C", <<["INTEGER", "C"], ["B", "e"], ["B", "c"], ["c", "c"], ["b", "B"], ["C", "A"], ["B", "BOOLEAN"], ["e", "BOOLEAN"]>>, "d")
disjunction
add_query("d", "C", <<["c", "INTEGER"], ["D", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["D", "C"], ["A", "BOOLEAN"]>>, "A")
type_check
add_call_chain(<<B,e,A,b>>)
add_call_chain(<<e,C,a,INTEGER,b,B,b>>)
logical_negation
add_command("D", "BOOLEAN", <<["A", "INTEGER"], ["b", "B"]>>)
add_command("A", "d", <<["d", "a"], ["c", "C"], ["D", "B"], ["d", "BOOLEAN"]>>)
add_call_chain(<<B,B,e,A,d,d>>)
bool_value (true)
add_class(b)
disjunction
quotient
add_attribute("D", "e", "BOOLEAN")
add_call_chain(<<C,b,C,b,b,INTEGER,d,A>>)
int_value (7)
addition
bool_value (true)
conjunction
add_query("d", "b", <<["D", "B"], ["D", "INTEGER"], ["C", "D"], ["A", "BOOLEAN"], ["C", "B"], ["B", "C"]>>, "C")
numerical_negation
type_check
generate_java_code
add_command("d", "INTEGER", <<["e", "INTEGER"], ["c", "BOOLEAN"], ["e", "BOOLEAN"], ["c", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["A", "BOOLEAN"], ["A", "BOOLEAN"]>>)
add_attribute("D", "B", "BOOLEAN")
bool_value (true)
add_attribute("a", "BOOLEAN", "INTEGER")
add_command("B", "INTEGER", <<["e", "INTEGER"], ["a", "INTEGER"], ["a", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>)
add_attribute("D", "A", "INTEGER")
add_call_chain(<<INTEGER,b,D,INTEGER,INTEGER,d>>)
int_value (17)
add_call_chain(<<C,A,e,d,b>>)
add_query("C", "a", <<["B", "INTEGER"], ["C", "D"]>>, "INTEGER")
add_attribute("B", "b", "BOOLEAN")
add_class(b)
bool_value (false)
equals
add_command("e", "D", <<["b", "INTEGER"], ["d", "b"], ["a", "INTEGER"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["INTEGER", "d"], ["e", "B"], ["INTEGER", "INTEGER"], ["A", "INTEGER"]>>)
add_command("c", "d", <<["a", "C"], ["C", "BOOLEAN"], ["D", "C"], ["c", "INTEGER"], ["A", "INTEGER"], ["a", "INTEGER"]>>)
add_command("e", "b", <<["d", "A"], ["a", "BOOLEAN"], ["A", "A"], ["a", "INTEGER"], ["d", "INTEGER"], ["D", "BOOLEAN"]>>)
bool_value (true)
numerical_negation
add_attribute("A", "B", "INTEGER")
generate_java_code
generate_java_code
generate_java_code
less_than
add_command("B", "INTEGER", <<["D", "INTEGER"], ["C", "D"], ["e", "INTEGER"], ["C", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "C"], ["b", "BOOLEAN"]>>)
generate_java_code
int_value (39)
int_value (18)
add_class(A)
add_query("A", "b", <<["e", "INTEGER"]>>, "B")
add_command("e", "c", <<["D", "e"], ["b", "BOOLEAN"], ["A", "BOOLEAN"]>>)
modulo
numerical_negation
int_value (5)
add_command("C", "INTEGER", <<["d", "BOOLEAN"], ["INTEGER", "INTEGER"], ["a", "INTEGER"], ["BOOLEAN", "INTEGER"], ["B", "INTEGER"], ["a", "INTEGER"]>>)
add_query("a", "B", <<["d", "BOOLEAN"], ["C", "b"], ["B", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "INTEGER"], ["C", "BOOLEAN"]>>, "c")
logical_negation
bool_value (true)
addition
add_call_chain(<<d,INTEGER,b,BOOLEAN,A>>)
int_value (12)
less_than
type_check
int_value (11)
add_attribute("e", "d", "INTEGER")
add_call_chain(<<C,B,b,a,INTEGER,C>>)
add_query("D", "D", <<["c", "BOOLEAN"], ["BOOLEAN", "C"], ["INTEGER", "B"], ["D", "b"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "INTEGER"], ["c", "D"], ["B", "A"]>>, "INTEGER")
numerical_negation
add_command("a", "D", <<["C", "INTEGER"], ["a", "a"], ["B", "d"], ["C", "c"], ["A", "BOOLEAN"], ["e", "c"], ["D", "INTEGER"], ["A", "A"]>>)
logical_negation
int_value (47)
int_value (48)
numerical_negation
equals
numerical_negation
add_call_chain(<<d,a,B,D,c,b>>)
add_call_chain(<<BOOLEAN,b,B,A,A,D,e>>)
add_call_chain(<<BOOLEAN,B,D,B,e,A>>)
disjunction
disjunction
generate_java_code
numerical_negation
bool_value (false)
bool_value (false)
add_call_chain(<<d,D,B,C,C,b,B,B>>)
add_call_chain(<<B,B,B>>)
add_attribute("A", "INTEGER", "INTEGER")
numerical_negation
logical_negation
add_call_chain(<<B,a,d,a>>)
numerical_negation
numerical_negation
bool_value (false)
disjunction
int_value (44)
add_call_chain(<<c,B,a,BOOLEAN,B,c>>)
equals
add_query("b", "a", <<["D", "BOOLEAN"]>>, "e")
logical_negation
bool_value (true)
type_check
add_call_chain(<<e,c,D,e,BOOLEAN,e>>)
add_query("B", "d", <<["e", "BOOLEAN"], ["B", "C"], ["B", "C"], ["d", "b"], ["a", "A"]>>, "d")
add_attribute("D", "A", "BOOLEAN")
add_command("a", "B", <<["a", "INTEGER"], ["d", "BOOLEAN"], ["d", "B"], ["B", "INTEGER"], ["a", "INTEGER"]>>)
add_call_chain(<<BOOLEAN,A,BOOLEAN,INTEGER,D,A,e>>)
logical_negation
