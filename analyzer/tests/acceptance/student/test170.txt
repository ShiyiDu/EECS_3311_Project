bool_value (true)
bool_value (false)
add_command("e", "A", <<["D", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["A", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "C"], ["B", "C"]>>)
logical_negation
conjunction
greater_than
add_query("D", "b", <<["INTEGER", "INTEGER"], ["c", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "c"], ["e", "A"], ["a", "INTEGER"], ["B", "INTEGER"]>>, "D")
generate_java_code
int_value (9)
bool_value (false)
numerical_negation
numerical_negation
bool_value (true)
add_attribute("a", "b", "D")
add_attribute("C", "B", "A")
add_query("b", "B", <<["b", "D"], ["d", "A"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["B", "INTEGER"], ["A", "BOOLEAN"]>>, "C")
subtraction
add_command("A", "d", <<["D", "BOOLEAN"], ["e", "A"], ["A", "INTEGER"], ["INTEGER", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["C", "B"], ["d", "INTEGER"], ["A", "INTEGER"]>>)
add_command("b", "INTEGER", <<["BOOLEAN", "c"], ["d", "INTEGER"], ["A", "b"], ["a", "BOOLEAN"], ["a", "INTEGER"], ["e", "a"], ["INTEGER", "INTEGER"], ["d", "a"]>>)
add_command("B", "a", <<["A", "c"]>>)
greater_than
logical_negation
add_call_chain(<<A,e,B,c,C,B>>)
numerical_negation
add_attribute("A", "A", "d")
equals
add_attribute("BOOLEAN", "A", "a")
type_check
int_value (38)
bool_value (false)
less_than
int_value (48)
add_call_chain(<<c,C,B,BOOLEAN,b,d,d,B>>)
conjunction
add_attribute("b", "b", "INTEGER")
logical_negation
generate_java_code
add_class(INTEGER)
add_attribute("BOOLEAN", "c", "BOOLEAN")
add_class(D)
numerical_negation
add_attribute("c", "d", "INTEGER")
add_query("A", "a", <<["a", "BOOLEAN"], ["d", "INTEGER"], ["c", "BOOLEAN"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "a"]>>, "d")
add_call_chain(<<b,b,c,BOOLEAN,A,D,d,c>>)
add_call_chain(<<b,c,b,INTEGER,D>>)
conjunction
numerical_negation
int_value (11)
equals
bool_value (false)
type_check
add_command("a", "b", <<["A", "INTEGER"], ["e", "C"], ["a", "INTEGER"], ["d", "INTEGER"], ["D", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "BOOLEAN"], ["INTEGER", "INTEGER"], ["INTEGER", "INTEGER"]>>)
type_check
add_class(a)
add_attribute("C", "INTEGER", "BOOLEAN")
conjunction
type_check
int_value (46)
disjunction
type_check
greater_than
add_query("c", "a", <<["e", "d"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["B", "BOOLEAN"]>>, "e")
add_command("A", "a", <<["A", "INTEGER"], ["b", "INTEGER"], ["A", "a"], ["A", "INTEGER"], ["A", "e"]>>)
add_call_chain(<<a,B,A,a,c,a,A,e,D>>)
add_query("a", "D", <<["e", "B"], ["c", "INTEGER"], ["C", "BOOLEAN"], ["BOOLEAN", "C"], ["e", "INTEGER"], ["C", "d"], ["c", "INTEGER"], ["A", "INTEGER"]>>, "C")
add_command("B", "C", <<["b", "INTEGER"], ["INTEGER", "INTEGER"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["a", "INTEGER"], ["a", "BOOLEAN"], ["BOOLEAN", "A"]>>)
add_command("D", "c", <<["BOOLEAN", "BOOLEAN"], ["c", "c"], ["B", "BOOLEAN"], ["b", "d"], ["BOOLEAN", "BOOLEAN"], ["B", "INTEGER"], ["e", "B"], ["e", "INTEGER"]>>)
add_attribute("b", "c", "BOOLEAN")
logical_negation
int_value (43)
int_value (18)
add_class(A)
add_class(A)
add_attribute("d", "e", "c")
add_command("C", "BOOLEAN", <<["B", "INTEGER"], ["e", "INTEGER"], ["B", "INTEGER"], ["c", "e"], ["C", "C"], ["C", "BOOLEAN"], ["e", "BOOLEAN"], ["a", "c"], ["e", "BOOLEAN"]>>)
numerical_negation
disjunction
int_value (45)
add_call_chain(<<B,B,b,b>>)
add_call_chain(<<A,C,B,INTEGER,a,BOOLEAN,C,c,b>>)
multiplication
int_value (18)
int_value (45)
conjunction
add_call_chain(<<B,D,c,BOOLEAN,C,C,BOOLEAN>>)
greater_than
generate_java_code
add_attribute("e", "b", "INTEGER")
type_check
int_value (31)
add_call_chain(<<b,B,A,INTEGER,b,b,D>>)
type_check
less_than
disjunction
type_check
conjunction
type_check
add_attribute("d", "B", "c")
generate_java_code
add_query("INTEGER", "B", <<["A", "B"], ["D", "c"], ["A", "c"], ["e", "D"], ["BOOLEAN", "d"], ["B", "A"], ["C", "BOOLEAN"]>>, "C")
add_command("D", "b", <<["INTEGER", "B"], ["A", "BOOLEAN"], ["A", "b"], ["a", "INTEGER"], ["d", "BOOLEAN"], ["a", "BOOLEAN"]>>)
add_call_chain(<<C>>)
add_call_chain(<<D,A>>)
add_query("b", "e", <<["C", "a"], ["a", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "INTEGER"]>>, "A")
int_value (42)
logical_negation
bool_value (true)
add_call_chain(<<D,B,B,BOOLEAN>>)
conjunction
add_call_chain(<<a,INTEGER,b,d,C,B,d,D,B>>)
add_query("a", "C", <<["B", "b"], ["A", "B"], ["e", "INTEGER"], ["e", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["D", "INTEGER"], ["c", "INTEGER"], ["a", "INTEGER"], ["B", "INTEGER"]>>, "B")
conjunction
type_check
add_class(C)
logical_negation
add_command("B", "C", <<["D", "D"], ["d", "BOOLEAN"], ["B", "INTEGER"], ["d", "b"], ["D", "INTEGER"], ["D", "e"], ["BOOLEAN", "INTEGER"], ["A", "BOOLEAN"]>>)
greater_than
int_value (13)
add_call_chain(<<c,e,c,D,c,A>>)
generate_java_code
add_query("d", "c", <<["e", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "INTEGER"], ["c", "BOOLEAN"], ["c", "B"], ["BOOLEAN", "INTEGER"]>>, "B")
add_call_chain(<<INTEGER,e,e>>)
quotient
add_class(C)
add_command("BOOLEAN", "D", <<["BOOLEAN", "BOOLEAN"], ["B", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["A", "BOOLEAN"]>>)
conjunction
add_call_chain(<<B,D,C,a,C,a,d>>)
add_attribute("A", "c", "BOOLEAN")
add_call_chain(<<INTEGER,C,D,B,A,INTEGER,B>>)
bool_value (true)
disjunction
logical_negation
int_value (45)
generate_java_code
add_command("C", "D", <<["d", "c"], ["b", "INTEGER"], ["A", "D"]>>)
type_check
add_query("b", "A", <<["D", "INTEGER"], ["B", "D"], ["BOOLEAN", "BOOLEAN"], ["INTEGER", "d"], ["b", "BOOLEAN"], ["A", "A"]>>, "D")
logical_negation
numerical_negation
bool_value (true)
numerical_negation
add_query("BOOLEAN", "C", <<["BOOLEAN", "INTEGER"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["A", "INTEGER"]>>, "A")
add_command("c", "b", <<["C", "c"], ["c", "D"], ["a", "BOOLEAN"], ["B", "e"], ["D", "INTEGER"], ["BOOLEAN", "b"], ["A", "INTEGER"], ["D", "INTEGER"]>>)
add_query("A", "B", <<["B", "d"], ["B", "BOOLEAN"], ["B", "INTEGER"], ["D", "D"], ["BOOLEAN", "BOOLEAN"]>>, "INTEGER")
numerical_negation
int_value (47)
add_command("B", "A", <<["D", "INTEGER"]>>)
int_value (47)
logical_negation
numerical_negation
int_value (48)
less_than
add_query("d", "A", <<["A", "C"]>>, "BOOLEAN")
bool_value (true)
int_value (15)
subtraction
add_attribute("a", "B", "BOOLEAN")
add_attribute("c", "c", "INTEGER")
add_call_chain(<<B,c,A,B,C,B,C,b>>)
logical_negation
add_class(C)
int_value (4)
generate_java_code
add_attribute("BOOLEAN", "INTEGER", "BOOLEAN")
add_call_chain(<<A,A,A,d>>)
logical_negation
add_call_chain(<<a,c,A,a,b,D,e,B>>)
add_call_chain(<<e,A,d,d,d,INTEGER,D,C,B>>)
less_than
bool_value (true)
greater_than
bool_value (false)
add_query("d", "A", <<["A", "INTEGER"]>>, "D")
less_than
numerical_negation
add_call_chain(<<d,C,a,C,B,A,D>>)
