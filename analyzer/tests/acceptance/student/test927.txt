type_check
add_command("B", "a", <<["D", "a"], ["BOOLEAN", "B"], ["A", "INTEGER"]>>)
add_query("c", "D", <<["c", "BOOLEAN"], ["C", "b"], ["D", "BOOLEAN"], ["A", "D"], ["d", "BOOLEAN"]>>, "INTEGER")
add_class(d)
add_call_chain(<<b>>)
bool_value (false)
add_class(e)
equals
bool_value (false)
int_value (1)
add_class(d)
add_command("e", "B", <<["D", "D"], ["B", "A"], ["INTEGER", "e"], ["B", "BOOLEAN"]>>)
numerical_negation
logical_negation
add_call_chain(<<c,D,A,BOOLEAN,d,e,C>>)
numerical_negation
logical_negation
equals
add_class(C)
add_attribute("e", "A", "INTEGER")
bool_value (false)
greater_than
addition
bool_value (true)
add_call_chain(<<B,B,d,B,e,b,D>>)
add_class(b)
logical_negation
subtraction
add_query("A", "C", <<["c", "d"], ["INTEGER", "INTEGER"], ["A", "A"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["d", "C"]>>, "b")
add_call_chain(<<c,c,b,b,B,d,d,C,D>>)
add_attribute("a", "a", "BOOLEAN")
int_value (34)
add_command("C", "e", <<["B", "INTEGER"], ["b", "BOOLEAN"], ["D", "B"], ["e", "BOOLEAN"], ["A", "INTEGER"]>>)
less_than
add_class(a)
add_query("d", "INTEGER", <<["e", "INTEGER"], ["b", "D"], ["B", "e"], ["A", "INTEGER"], ["C", "INTEGER"], ["d", "B"], ["B", "C"], ["b", "INTEGER"]>>, "C")
bool_value (false)
disjunction
add_call_chain(<<a,b,b,c,B,d,c,c,C>>)
type_check
add_query("D", "D", <<["d", "INTEGER"], ["INTEGER", "D"], ["B", "D"]>>, "b")
bool_value (true)
logical_negation
type_check
type_check
int_value (33)
greater_than
disjunction
add_call_chain(<<B,A,INTEGER,D,c,a>>)
bool_value (false)
int_value (35)
bool_value (false)
bool_value (true)
add_attribute("D", "C", "BOOLEAN")
addition
add_call_chain(<<BOOLEAN,D,e>>)
logical_negation
add_query("d", "B", <<["B", "INTEGER"], ["c", "INTEGER"], ["B", "A"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["A", "D"], ["a", "B"], ["D", "BOOLEAN"]>>, "a")
bool_value (false)
add_command("a", "a", <<["C", "INTEGER"], ["D", "INTEGER"]>>)
add_query("c", "d", <<["BOOLEAN", "D"], ["d", "D"], ["A", "d"], ["d", "BOOLEAN"], ["A", "b"], ["c", "INTEGER"], ["A", "A"], ["A", "C"], ["C", "c"]>>, "e")
add_command("e", "C", <<["C", "INTEGER"], ["B", "A"], ["BOOLEAN", "D"], ["INTEGER", "INTEGER"], ["BOOLEAN", "INTEGER"], ["e", "INTEGER"], ["C", "BOOLEAN"], ["D", "a"]>>)
bool_value (false)
add_call_chain(<<INTEGER,c,d,B,B,D>>)
numerical_negation
numerical_negation
add_query("D", "d", <<["d", "a"], ["D", "BOOLEAN"], ["a", "a"], ["B", "BOOLEAN"]>>, "BOOLEAN")
greater_than
add_command("C", "e", <<["D", "INTEGER"], ["D", "INTEGER"], ["D", "INTEGER"], ["b", "INTEGER"]>>)
add_call_chain(<<B,c,B,c,C,B,A>>)
add_query("D", "C", <<["BOOLEAN", "INTEGER"], ["b", "INTEGER"], ["A", "BOOLEAN"]>>, "C")
add_query("B", "A", <<["D", "INTEGER"], ["c", "BOOLEAN"], ["b", "BOOLEAN"], ["b", "BOOLEAN"], ["d", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["C", "A"], ["A", "BOOLEAN"]>>, "C")
add_call_chain(<<c,INTEGER,d,BOOLEAN,e,D,c,D,B>>)
add_call_chain(<<D,B,A,C,C>>)
modulo
add_query("D", "A", <<["e", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>, "B")
logical_negation
add_attribute("b", "B", "B")
int_value (48)
subtraction
add_call_chain(<<D>>)
add_attribute("B", "D", "INTEGER")
bool_value (false)
numerical_negation
add_attribute("D", "d", "e")
generate_java_code
add_command("D", "C", <<["c", "BOOLEAN"], ["c", "INTEGER"], ["A", "BOOLEAN"]>>)
add_call_chain(<<B,e,A,B,b,B,D,b>>)
add_call_chain(<<D,A,BOOLEAN,INTEGER,B,INTEGER,b,D,d>>)
add_call_chain(<<e,C,B>>)
add_command("c", "A", <<["A", "C"], ["B", "BOOLEAN"], ["d", "c"], ["B", "BOOLEAN"]>>)
logical_negation
logical_negation
conjunction
type_check
logical_negation
logical_negation
add_attribute("C", "d", "BOOLEAN")
type_check
add_command("e", "d", <<["B", "BOOLEAN"], ["c", "D"], ["C", "INTEGER"], ["D", "D"], ["c", "A"]>>)
add_command("e", "a", <<["INTEGER", "INTEGER"], ["b", "BOOLEAN"], ["b", "INTEGER"], ["e", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "INTEGER"]>>)
add_call_chain(<<d,c,B>>)
bool_value (true)
add_call_chain(<<D,BOOLEAN,c,C,b>>)
bool_value (false)
generate_java_code
generate_java_code
type_check
equals
bool_value (true)
add_query("a", "D", <<["D", "a"], ["a", "B"], ["INTEGER", "e"], ["d", "BOOLEAN"], ["e", "INTEGER"], ["d", "BOOLEAN"]>>, "C")
numerical_negation
type_check
add_query("D", "b", <<["c", "INTEGER"]>>, "B")
add_call_chain(<<D,A,b,e,a,a,BOOLEAN,C>>)
add_call_chain(<<INTEGER,B,C,e,a,C,b,e,C>>)
type_check
add_call_chain(<<A>>)
greater_than
int_value (3)
int_value (43)
logical_negation
generate_java_code
add_attribute("BOOLEAN", "e", "BOOLEAN")
equals
add_call_chain(<<a,D>>)
numerical_negation
add_call_chain(<<A,D,b,A,A,D,D>>)
add_call_chain(<<e,b,c,C,C,e,D>>)
add_attribute("INTEGER", "C", "INTEGER")
greater_than
disjunction
add_command("a", "B", <<["c", "b"], ["B", "c"], ["e", "A"], ["BOOLEAN", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "d"], ["C", "BOOLEAN"], ["D", "BOOLEAN"]>>)
int_value (38)
add_attribute("b", "C", "B")
bool_value (false)
bool_value (false)
add_query("A", "B", <<["D", "BOOLEAN"]>>, "B")
bool_value (true)
add_attribute("d", "e", "INTEGER")
add_call_chain(<<c>>)
int_value (11)
logical_negation
subtraction
int_value (49)
add_attribute("C", "B", "BOOLEAN")
add_query("D", "C", <<["d", "c"], ["b", "INTEGER"], ["B", "c"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["a", "BOOLEAN"], ["e", "C"]>>, "b")
conjunction
add_call_chain(<<e,b,C,B,D,c,c>>)
add_command("D", "c", <<["d", "b"], ["c", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "c"], ["BOOLEAN", "BOOLEAN"]>>)
int_value (13)
add_command("D", "C", <<["B", "BOOLEAN"], ["d", "a"], ["e", "INTEGER"], ["c", "INTEGER"], ["C", "BOOLEAN"], ["c", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "INTEGER"]>>)
int_value (23)
bool_value (true)
disjunction
disjunction
numerical_negation
bool_value (true)
add_command("b", "C", <<["B", "INTEGER"], ["b", "INTEGER"], ["B", "INTEGER"], ["d", "b"], ["a", "BOOLEAN"], ["a", "INTEGER"], ["e", "INTEGER"], ["B", "BOOLEAN"], ["D", "INTEGER"]>>)
add_query("D", "e", <<["a", "INTEGER"], ["c", "INTEGER"], ["B", "c"], ["c", "INTEGER"], ["e", "BOOLEAN"]>>, "INTEGER")
add_query("e", "a", <<["D", "BOOLEAN"]>>, "C")
add_call_chain(<<e,D,c,b,A,B,INTEGER,B>>)
type_check
numerical_negation
add_query("c", "e", <<["D", "INTEGER"], ["A", "c"], ["B", "A"]>>, "b")
logical_negation
logical_negation
add_call_chain(<<e,C,b,INTEGER,a,d,b>>)
type_check
add_command("D", "BOOLEAN", <<["A", "INTEGER"], ["d", "INTEGER"], ["A", "C"], ["B", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "e"]>>)
logical_negation
add_attribute("b", "BOOLEAN", "B")
generate_java_code
int_value (4)
add_attribute("BOOLEAN", "D", "INTEGER")
add_call_chain(<<D>>)
add_query("B", "e", <<["BOOLEAN", "B"], ["D", "e"], ["BOOLEAN", "INTEGER"]>>, "e")
bool_value (false)
bool_value (true)
disjunction
int_value (3)
add_call_chain(<<e,a,a,C,B,c,d>>)
bool_value (true)
type_check
add_call_chain(<<D,a,D,D,C,d,D>>)
equals
add_class(d)
numerical_negation
logical_negation
multiplication
add_class(d)
add_attribute("A", "b", "INTEGER")
greater_than
bool_value (true)
add_call_chain(<<c,C,B,A,e,C>>)
numerical_negation
subtraction
generate_java_code
add_command("B", "B", <<["C", "INTEGER"]>>)
add_call_chain(<<d,b,c,C,B,D,b>>)
generate_java_code
numerical_negation
add_query("e", "b", <<["INTEGER", "c"], ["d", "INTEGER"], ["c", "BOOLEAN"], ["e", "B"]>>, "b")
bool_value (true)
add_attribute("A", "C", "INTEGER")
add_class(d)
numerical_negation
numerical_negation
add_class(A)
add_command("b", "BOOLEAN", <<["c", "INTEGER"]>>)
add_call_chain(<<D,A,B,b,D,c,BOOLEAN,D>>)
