type_check
quotient
generate_java_code
add_command("A", "B", <<["D", "INTEGER"], ["c", "d"], ["b", "D"], ["b", "INTEGER"], ["d", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "INTEGER"], ["D", "INTEGER"]>>)
add_query("INTEGER", "B", <<["D", "BOOLEAN"]>>, "C")
quotient
add_command("INTEGER", "C", <<["e", "BOOLEAN"], ["d", "b"], ["c", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
type_check
add_query("a", "INTEGER", <<["C", "D"], ["e", "INTEGER"]>>, "e")
add_call_chain(<<B,e,a>>)
int_value (17)
add_query("B", "C", <<["b", "b"], ["b", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["A", "INTEGER"], ["B", "d"], ["A", "INTEGER"]>>, "D")
add_attribute("a", "B", "BOOLEAN")
add_class(b)
add_query("b", "e", <<["D", "INTEGER"]>>, "c")
numerical_negation
add_call_chain(<<A,c,D,c,A,BOOLEAN,INTEGER,a>>)
int_value (43)
logical_negation
type_check
logical_negation
add_attribute("b", "C", "c")
add_call_chain(<<d,D,c,e,c,BOOLEAN,e,B>>)
numerical_negation
add_command("A", "BOOLEAN", <<["B", "INTEGER"], ["d", "a"], ["C", "INTEGER"], ["BOOLEAN", "INTEGER"], ["c", "BOOLEAN"]>>)
int_value (30)
generate_java_code
generate_java_code
generate_java_code
disjunction
generate_java_code
add_call_chain(<<D>>)
logical_negation
add_attribute("a", "C", "e")
add_attribute("e", "d", "BOOLEAN")
add_call_chain(<<A,D,a,a,e,b>>)
quotient
numerical_negation
add_query("c", "BOOLEAN", <<["d", "INTEGER"], ["INTEGER", "INTEGER"], ["C", "INTEGER"]>>, "B")
add_command("e", "A", <<["a", "d"], ["a", "D"], ["C", "BOOLEAN"], ["c", "BOOLEAN"]>>)
add_call_chain(<<B,C,b,c,a,C,C>>)
add_command("B", "c", <<["b", "INTEGER"], ["C", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["c", "INTEGER"], ["c", "INTEGER"], ["B", "BOOLEAN"]>>)
bool_value (true)
add_query("b", "B", <<["C", "INTEGER"], ["D", "INTEGER"], ["e", "INTEGER"], ["BOOLEAN", "C"], ["a", "BOOLEAN"], ["b", "INTEGER"], ["C", "INTEGER"], ["C", "BOOLEAN"]>>, "B")
add_call_chain(<<BOOLEAN,INTEGER,D>>)
int_value (22)
add_attribute("A", "B", "INTEGER")
add_class(D)
add_command("D", "BOOLEAN", <<["b", "BOOLEAN"]>>)
int_value (7)
numerical_negation
add_attribute("a", "BOOLEAN", "BOOLEAN")
disjunction
greater_than
add_command("b", "b", <<["b", "e"], ["B", "BOOLEAN"], ["c", "b"]>>)
add_call_chain(<<D,C,A,a,b>>)
add_call_chain(<<e,B,D,B,A>>)
quotient
type_check
add_query("INTEGER", "C", <<["b", "C"], ["A", "INTEGER"], ["b", "INTEGER"], ["C", "INTEGER"]>>, "b")
bool_value (true)
type_check
add_attribute("B", "a", "b")
add_attribute("b", "d", "A")
type_check
bool_value (true)
int_value (6)
numerical_negation
numerical_negation
int_value (32)
add_call_chain(<<c,B,c,b,a,D,D>>)
bool_value (false)
add_call_chain(<<d,b,c,INTEGER>>)
add_query("INTEGER", "b", <<["e", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "D"], ["e", "BOOLEAN"]>>, "D")
disjunction
add_command("a", "A", <<["d", "BOOLEAN"], ["C", "e"], ["a", "D"], ["B", "BOOLEAN"]>>)
add_command("B", "D", <<["a", "INTEGER"], ["BOOLEAN", "c"], ["B", "BOOLEAN"], ["B", "B"]>>)
numerical_negation
conjunction
generate_java_code
bool_value (false)
bool_value (false)
add_attribute("C", "b", "INTEGER")
less_than
disjunction
add_call_chain(<<D,B>>)
add_attribute("C", "e", "INTEGER")
type_check
conjunction
add_command("c", "B", <<["C", "A"]>>)
add_call_chain(<<C,C,A,B>>)
equals
numerical_negation
generate_java_code
int_value (4)
numerical_negation
logical_negation
modulo
bool_value (true)
int_value (17)
add_call_chain(<<C,B,B,a,B>>)
add_query("B", "D", <<["B", "BOOLEAN"]>>, "a")
add_call_chain(<<A,D,B,BOOLEAN,A,INTEGER,D,B,b>>)
add_attribute("C", "B", "BOOLEAN")
add_class(C)
int_value (11)
add_query("A", "a", <<["a", "INTEGER"], ["e", "D"], ["a", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "INTEGER"], ["d", "INTEGER"], ["c", "INTEGER"], ["INTEGER", "B"]>>, "A")
int_value (7)
generate_java_code
type_check
add_command("BOOLEAN", "e", <<["b", "d"], ["e", "BOOLEAN"], ["D", "BOOLEAN"], ["d", "c"], ["C", "INTEGER"]>>)
add_attribute("BOOLEAN", "d", "INTEGER")
add_attribute("C", "e", "C")
generate_java_code
add_attribute("INTEGER", "A", "c")
add_query("D", "C", <<["INTEGER", "a"], ["A", "INTEGER"], ["a", "BOOLEAN"], ["C", "b"], ["d", "b"]>>, "e")
add_call_chain(<<b,e,A,A,C>>)
add_call_chain(<<D,b,c,c>>)
add_query("e", "D", <<["C", "INTEGER"], ["BOOLEAN", "INTEGER"]>>, "d")
bool_value (true)
add_call_chain(<<b,A,A,INTEGER,c>>)
int_value (47)
add_query("D", "e", <<["B", "c"], ["B", "d"]>>, "a")
greater_than
conjunction
add_call_chain(<<d,B,B,INTEGER,D,D,INTEGER,D,D>>)
bool_value (false)
numerical_negation
subtraction
logical_negation
add_call_chain(<<INTEGER,a,e,A,B,a,d>>)
bool_value (false)
int_value (12)
add_attribute("B", "INTEGER", "BOOLEAN")
int_value (1)
logical_negation
add_query("e", "A", <<["A", "B"], ["B", "BOOLEAN"]>>, "A")
bool_value (true)
numerical_negation
add_command("D", "e", <<["c", "BOOLEAN"], ["A", "C"], ["A", "A"], ["B", "INTEGER"], ["d", "c"]>>)
add_call_chain(<<A,e,e,c,d,C,d>>)
add_call_chain(<<B,e,C,A,C,D>>)
add_command("A", "BOOLEAN", <<["e", "INTEGER"], ["d", "INTEGER"], ["e", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["C", "BOOLEAN"]>>)
add_command("a", "e", <<["a", "INTEGER"], ["d", "INTEGER"], ["d", "BOOLEAN"], ["D", "e"], ["c", "a"]>>)
generate_java_code
add_attribute("B", "C", "BOOLEAN")
logical_negation
add_attribute("A", "a", "INTEGER")
add_command("e", "B", <<["d", "INTEGER"]>>)
generate_java_code
int_value (11)
add_class(A)
type_check
int_value (29)
logical_negation
add_class(C)
add_query("c", "BOOLEAN", <<["B", "BOOLEAN"], ["e", "BOOLEAN"], ["d", "C"]>>, "D")
numerical_negation
greater_than
add_query("b", "A", <<["C", "BOOLEAN"], ["A", "INTEGER"], ["C", "a"], ["a", "BOOLEAN"], ["D", "B"]>>, "e")
add_call_chain(<<C>>)
add_query("INTEGER", "e", <<["A", "BOOLEAN"], ["C", "INTEGER"]>>, "a")
add_command("c", "C", <<["D", "INTEGER"], ["BOOLEAN", "b"], ["B", "B"], ["INTEGER", "INTEGER"], ["d", "INTEGER"], ["c", "BOOLEAN"]>>)
add_query("A", "D", <<["b", "BOOLEAN"], ["b", "a"]>>, "B")
add_call_chain(<<A,a,A,b,c,BOOLEAN,D>>)
generate_java_code
int_value (42)
add_command("A", "C", <<["C", "BOOLEAN"], ["D", "a"], ["e", "INTEGER"], ["A", "BOOLEAN"], ["A", "D"], ["c", "INTEGER"], ["c", "BOOLEAN"], ["e", "BOOLEAN"]>>)
add_call_chain(<<a,a,a,b,c>>)
numerical_negation
add_attribute("c", "D", "INTEGER")
add_call_chain(<<B,b,C,e,D,B,D,d,C>>)
add_call_chain(<<c,b,c,a,D,a>>)
add_call_chain(<<BOOLEAN,d,INTEGER,e,B,a,d>>)
numerical_negation
less_than
add_query("a", "D", <<["B", "INTEGER"], ["INTEGER", "B"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["c", "BOOLEAN"], ["d", "a"]>>, "c")
int_value (23)
numerical_negation
generate_java_code
bool_value (true)
bool_value (false)
add_call_chain(<<D,D,e,D,D>>)
add_command("D", "A", <<["INTEGER", "BOOLEAN"], ["BOOLEAN", "a"], ["BOOLEAN", "d"], ["A", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "C"], ["a", "INTEGER"]>>)
add_command("e", "B", <<["e", "BOOLEAN"]>>)
int_value (12)
bool_value (false)
numerical_negation
add_call_chain(<<A,BOOLEAN,D,B,a,e,C>>)
logical_negation
add_command("a", "e", <<["b", "INTEGER"]>>)
disjunction
less_than
add_query("A", "B", <<["D", "B"], ["B", "BOOLEAN"], ["B", "INTEGER"], ["B", "INTEGER"], ["C", "b"], ["A", "BOOLEAN"]>>, "C")
add_query("b", "INTEGER", <<["B", "a"]>>, "d")
add_attribute("C", "c", "BOOLEAN")
logical_negation
int_value (44)
conjunction
conjunction
int_value (36)
add_command("D", "d", <<["c", "D"], ["B", "C"], ["B", "INTEGER"], ["d", "BOOLEAN"], ["d", "a"], ["a", "d"], ["b", "B"], ["c", "c"]>>)
bool_value (true)
