add_call_chain(<<a,B,a>>)
add_query("c", "A", <<["b", "INTEGER"], ["C", "INTEGER"], ["A", "INTEGER"], ["a", "BOOLEAN"]>>, "A")
multiplication
int_value (12)
add_call_chain(<<INTEGER,b,c,e,C,e,c,D>>)
greater_than
add_command("e", "C", <<["c", "BOOLEAN"], ["c", "c"], ["c", "INTEGER"], ["a", "INTEGER"], ["C", "INTEGER"], ["A", "INTEGER"], ["D", "BOOLEAN"]>>)
add_call_chain(<<A,e>>)
subtraction
logical_negation
add_call_chain(<<d,INTEGER>>)
less_than
numerical_negation
add_command("B", "c", <<["b", "BOOLEAN"], ["C", "A"], ["D", "e"], ["D", "INTEGER"]>>)
add_attribute("INTEGER", "e", "D")
generate_java_code
add_command("B", "b", <<["b", "c"], ["INTEGER", "INTEGER"], ["c", "B"], ["c", "INTEGER"]>>)
add_call_chain(<<d,c,INTEGER,A,b,c,B,C>>)
int_value (6)
bool_value (false)
add_query("b", "b", <<["C", "BOOLEAN"], ["b", "BOOLEAN"], ["BOOLEAN", "d"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["B", "C"]>>, "C")
add_call_chain(<<b>>)
add_class(c)
add_attribute("C", "C", "INTEGER")
add_command("B", "B", <<["INTEGER", "e"], ["INTEGER", "B"], ["A", "BOOLEAN"], ["d", "INTEGER"], ["c", "a"], ["B", "C"], ["C", "B"]>>)
int_value (39)
bool_value (true)
logical_negation
int_value (48)
int_value (12)
add_command("d", "b", <<["C", "INTEGER"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["e", "B"], ["e", "D"], ["a", "INTEGER"], ["a", "INTEGER"]>>)
quotient
numerical_negation
less_than
add_command("e", "b", <<["c", "BOOLEAN"], ["B", "d"]>>)
add_command("B", "C", <<["c", "INTEGER"], ["B", "BOOLEAN"]>>)
add_class(a)
int_value (7)
add_query("C", "B", <<["A", "INTEGER"], ["D", "INTEGER"], ["B", "BOOLEAN"], ["INTEGER", "B"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["a", "BOOLEAN"]>>, "d")
int_value (3)
numerical_negation
int_value (15)
greater_than
equals
numerical_negation
add_call_chain(<<A,B>>)
add_command("e", "C", <<["C", "INTEGER"], ["A", "INTEGER"]>>)
add_query("BOOLEAN", "b", <<["b", "BOOLEAN"], ["C", "d"], ["d", "c"], ["C", "BOOLEAN"], ["INTEGER", "INTEGER"]>>, "d")
add_call_chain(<<D,b,A,d,D,e,A,B,B>>)
type_check
add_query("B", "D", <<["d", "BOOLEAN"], ["b", "B"], ["a", "e"], ["b", "INTEGER"], ["e", "a"], ["d", "B"], ["c", "c"], ["INTEGER", "BOOLEAN"]>>, "A")
bool_value (true)
add_call_chain(<<C,A,B,B>>)
add_class(BOOLEAN)
bool_value (true)
add_call_chain(<<A>>)
numerical_negation
add_command("B", "B", <<["B", "BOOLEAN"], ["b", "c"], ["e", "B"], ["d", "INTEGER"], ["INTEGER", "INTEGER"], ["c", "C"], ["d", "e"], ["A", "INTEGER"]>>)
add_command("BOOLEAN", "e", <<["BOOLEAN", "INTEGER"], ["c", "C"], ["INTEGER", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "B"], ["C", "C"]>>)
add_command("B", "d", <<["b", "INTEGER"], ["A", "BOOLEAN"]>>)
add_call_chain(<<B,e,b>>)
add_class(B)
bool_value (false)
add_attribute("BOOLEAN", "C", "INTEGER")
logical_negation
add_attribute("C", "b", "d")
add_call_chain(<<c,A,INTEGER,A,e,a,A,C>>)
numerical_negation
conjunction
logical_negation
int_value (39)
add_call_chain(<<b,BOOLEAN,B,a,b>>)
add_call_chain(<<B,B,D,B>>)
add_attribute("c", "B", "C")
logical_negation
add_attribute("d", "A", "INTEGER")
add_call_chain(<<a,e,A,e>>)
bool_value (true)
add_call_chain(<<A,A>>)
bool_value (true)
add_command("a", "C", <<["b", "BOOLEAN"], ["D", "a"], ["A", "B"], ["INTEGER", "A"], ["A", "BOOLEAN"], ["C", "D"], ["B", "BOOLEAN"], ["INTEGER", "A"], ["e", "INTEGER"]>>)
generate_java_code
subtraction
logical_negation
add_class(D)
logical_negation
add_attribute("D", "b", "d")
add_call_chain(<<e,C>>)
int_value (20)
bool_value (true)
logical_negation
int_value (46)
type_check
subtraction
logical_negation
disjunction
add_attribute("c", "C", "B")
numerical_negation
bool_value (true)
add_attribute("b", "b", "BOOLEAN")
add_call_chain(<<B,a,a,a,c,d,B,a,BOOLEAN>>)
add_call_chain(<<A>>)
type_check
add_query("A", "C", <<["C", "D"], ["C", "INTEGER"], ["C", "A"], ["A", "e"], ["a", "BOOLEAN"]>>, "A")
bool_value (false)
add_call_chain(<<BOOLEAN,BOOLEAN,b>>)
bool_value (false)
numerical_negation
add_command("A", "A", <<["BOOLEAN", "INTEGER"], ["e", "A"], ["d", "e"]>>)
logical_negation
type_check
type_check
bool_value (true)
logical_negation
add_class(A)
add_call_chain(<<A,D,d,C,a,D,C,BOOLEAN,D>>)
add_command("d", "BOOLEAN", <<["e", "INTEGER"], ["a", "BOOLEAN"]>>)
add_command("e", "A", <<["A", "B"], ["c", "a"], ["D", "b"], ["c", "INTEGER"], ["BOOLEAN", "INTEGER"], ["A", "INTEGER"], ["c", "e"], ["B", "INTEGER"]>>)
add_command("b", "B", <<["B", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "INTEGER"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["e", "INTEGER"], ["C", "BOOLEAN"]>>)
add_attribute("D", "B", "BOOLEAN")
add_query("B", "B", <<["e", "INTEGER"], ["C", "INTEGER"], ["b", "C"]>>, "a")
add_query("A", "D", <<["INTEGER", "a"], ["D", "INTEGER"], ["d", "BOOLEAN"], ["e", "INTEGER"], ["a", "d"], ["e", "INTEGER"]>>, "C")
add_attribute("b", "INTEGER", "BOOLEAN")
greater_than
add_class(b)
numerical_negation
disjunction
add_call_chain(<<c,C,B,A>>)
bool_value (true)
type_check
add_call_chain(<<D,d,B,A>>)
type_check
add_query("D", "B", <<["A", "A"], ["d", "INTEGER"], ["BOOLEAN", "C"], ["INTEGER", "INTEGER"], ["a", "BOOLEAN"], ["B", "D"]>>, "e")
add_command("A", "B", <<["C", "INTEGER"], ["A", "C"], ["A", "INTEGER"], ["a", "D"], ["C", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["B", "INTEGER"]>>)
logical_negation
addition
int_value (41)
bool_value (false)
add_query("a", "e", <<["D", "C"], ["b", "BOOLEAN"], ["d", "INTEGER"], ["d", "INTEGER"], ["e", "b"], ["C", "A"], ["C", "INTEGER"], ["A", "INTEGER"]>>, "D")
add_query("B", "d", <<["D", "INTEGER"], ["e", "INTEGER"], ["B", "e"], ["b", "BOOLEAN"]>>, "A")
add_call_chain(<<A,B,a,a>>)
int_value (7)
add_command("e", "e", <<["C", "BOOLEAN"]>>)
add_call_chain(<<A>>)
add_call_chain(<<c,C,D,B,INTEGER>>)
add_attribute("D", "B", "BOOLEAN")
logical_negation
bool_value (false)
add_call_chain(<<D,D,d,e,e>>)
disjunction
add_call_chain(<<d,a,A,B,B,B,d,C,d>>)
numerical_negation
add_call_chain(<<D,A,d,A,b,A>>)
disjunction
equals
logical_negation
numerical_negation
add_call_chain(<<d,C,e,B>>)
numerical_negation
type_check
add_query("d", "a", <<["e", "INTEGER"], ["e", "a"], ["C", "A"]>>, "C")
add_query("a", "D", <<["B", "INTEGER"], ["b", "INTEGER"], ["B", "INTEGER"], ["e", "BOOLEAN"], ["A", "b"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["e", "C"]>>, "d")
add_call_chain(<<C,c,A,e,C,d,C>>)
generate_java_code
add_query("BOOLEAN", "BOOLEAN", <<["A", "INTEGER"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "a"]>>, "A")
add_command("A", "c", <<["D", "BOOLEAN"]>>)
add_call_chain(<<BOOLEAN,A,c,INTEGER,a,C,d,B,e>>)
add_class(b)
multiplication
add_attribute("B", "INTEGER", "a")
add_call_chain(<<A,C,a,B,b,e,D,a>>)
add_attribute("d", "B", "BOOLEAN")
logical_negation
type_check
add_call_chain(<<c,A,b,INTEGER,A,INTEGER,a,D>>)
numerical_negation
add_command("c", "c", <<["BOOLEAN", "BOOLEAN"]>>)
logical_negation
bool_value (true)
add_query("c", "e", <<["a", "BOOLEAN"], ["d", "C"], ["a", "INTEGER"], ["b", "A"], ["d", "INTEGER"], ["INTEGER", "INTEGER"], ["e", "INTEGER"], ["c", "BOOLEAN"]>>, "BOOLEAN")
add_attribute("C", "b", "BOOLEAN")
modulo
add_attribute("C", "D", "BOOLEAN")
add_call_chain(<<BOOLEAN,d,c,B,BOOLEAN,d>>)
add_call_chain(<<d,b,A,b,BOOLEAN,BOOLEAN,e,B,INTEGER>>)
generate_java_code
add_attribute("c", "A", "INTEGER")
add_class(B)
logical_negation
bool_value (false)
add_call_chain(<<e,b,B,B,B,D>>)
bool_value (false)
add_class(c)
disjunction
add_call_chain(<<INTEGER,A,d,d>>)
add_attribute("D", "D", "INTEGER")
subtraction
add_query("e", "B", <<["A", "A"], ["A", "INTEGER"]>>, "e")
conjunction
add_attribute("b", "D", "B")
add_call_chain(<<BOOLEAN,BOOLEAN,B,BOOLEAN,c,B>>)
bool_value (false)
add_call_chain(<<D,e,B,B,c,a,BOOLEAN,INTEGER>>)
less_than
add_call_chain(<<e>>)
add_attribute("c", "A", "INTEGER")
add_attribute("a", "B", "D")
add_call_chain(<<d,B,B,c,B,a,D,a,b>>)
logical_negation
int_value (6)
bool_value (true)
bool_value (false)
numerical_negation
numerical_negation
type_check
bool_value (false)
add_query("BOOLEAN", "BOOLEAN", <<["D", "BOOLEAN"], ["d", "BOOLEAN"], ["c", "d"]>>, "b")
generate_java_code
generate_java_code
add_attribute("e", "d", "A")
numerical_negation
add_class(c)
add_call_chain(<<C>>)
add_query("e", "a", <<["BOOLEAN", "BOOLEAN"], ["c", "INTEGER"]>>, "C")
add_query("d", "a", <<["b", "d"]>>, "BOOLEAN")
numerical_negation
disjunction
add_call_chain(<<e,B,BOOLEAN,A,A,D,BOOLEAN,a>>)
bool_value (false)
add_call_chain(<<C,INTEGER,B>>)
conjunction
