logical_negation
logical_negation
bool_value (true)
add_class(D)
numerical_negation
add_call_chain(<<INTEGER,c,A,c,d,b,b>>)
bool_value (true)
numerical_negation
logical_negation
type_check
add_command("b", "BOOLEAN", <<["c", "INTEGER"], ["d", "BOOLEAN"], ["e", "INTEGER"], ["c", "e"]>>)
add_command("C", "e", <<["A", "INTEGER"]>>)
add_call_chain(<<INTEGER,C,B,C,C,C,b,C,A>>)
type_check
add_query("e", "D", <<["b", "BOOLEAN"], ["A", "b"], ["A", "b"], ["BOOLEAN", "INTEGER"], ["b", "BOOLEAN"], ["c", "BOOLEAN"], ["INTEGER", "INTEGER"]>>, "BOOLEAN")
add_attribute("e", "B", "BOOLEAN")
int_value (7)
type_check
add_call_chain(<<a>>)
int_value (42)
bool_value (false)
bool_value (true)
add_command("B", "C", <<["C", "INTEGER"], ["A", "BOOLEAN"], ["a", "D"]>>)
add_query("C", "c", <<["c", "BOOLEAN"], ["B", "INTEGER"], ["a", "d"], ["b", "b"], ["e", "INTEGER"], ["e", "INTEGER"], ["C", "INTEGER"]>>, "D")
add_query("a", "BOOLEAN", <<["A", "INTEGER"], ["a", "INTEGER"], ["C", "INTEGER"], ["c", "BOOLEAN"], ["c", "INTEGER"], ["e", "INTEGER"]>>, "e")
int_value (41)
add_query("d", "c", <<["B", "INTEGER"], ["e", "D"]>>, "C")
add_command("D", "C", <<["INTEGER", "INTEGER"], ["b", "INTEGER"], ["b", "BOOLEAN"], ["e", "b"], ["C", "B"], ["e", "INTEGER"], ["B", "INTEGER"]>>)
bool_value (false)
add_call_chain(<<B,A,INTEGER,B,a,D>>)
add_attribute("d", "A", "BOOLEAN")
add_call_chain(<<e>>)
bool_value (false)
generate_java_code
add_call_chain(<<INTEGER>>)
quotient
add_command("A", "D", <<["d", "c"], ["c", "BOOLEAN"], ["B", "d"]>>)
logical_negation
numerical_negation
numerical_negation
generate_java_code
add_query("INTEGER", "e", <<["C", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "c"], ["A", "INTEGER"], ["b", "b"], ["c", "A"], ["e", "BOOLEAN"]>>, "D")
int_value (28)
bool_value (false)
conjunction
numerical_negation
subtraction
bool_value (false)
add_attribute("b", "c", "D")
add_call_chain(<<d,B,e>>)
int_value (2)
int_value (31)
disjunction
add_attribute("D", "A", "A")
add_command("C", "D", <<["B", "BOOLEAN"], ["e", "INTEGER"], ["C", "B"], ["a", "A"], ["d", "a"], ["b", "BOOLEAN"], ["a", "e"], ["D", "BOOLEAN"]>>)
add_call_chain(<<INTEGER,A,d>>)
generate_java_code
add_attribute("b", "B", "BOOLEAN")
addition
add_attribute("INTEGER", "a", "BOOLEAN")
add_command("a", "b", <<["C", "A"], ["d", "INTEGER"]>>)
add_attribute("a", "BOOLEAN", "BOOLEAN")
add_query("INTEGER", "A", <<["INTEGER", "BOOLEAN"]>>, "C")
numerical_negation
bool_value (false)
add_call_chain(<<a,b,B,B>>)
equals
add_call_chain(<<d,B,b,c,B,B>>)
multiplication
add_call_chain(<<A,A,c,B,A>>)
add_attribute("b", "C", "D")
add_command("A", "b", <<["D", "BOOLEAN"], ["A", "INTEGER"], ["d", "D"], ["c", "BOOLEAN"]>>)
int_value (6)
int_value (14)
logical_negation
disjunction
numerical_negation
add_class(d)
add_call_chain(<<e,e,B,A,b,a,d,A>>)
bool_value (true)
generate_java_code
add_query("D", "a", <<["A", "INTEGER"], ["A", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "B"], ["B", "INTEGER"], ["a", "BOOLEAN"]>>, "a")
int_value (25)
add_call_chain(<<D,d,e>>)
add_query("D", "B", <<["BOOLEAN", "D"], ["e", "c"], ["C", "BOOLEAN"], ["b", "e"], ["c", "INTEGER"], ["C", "BOOLEAN"], ["a", "INTEGER"], ["A", "INTEGER"], ["C", "INTEGER"]>>, "c")
add_call_chain(<<e,a,e,b>>)
add_call_chain(<<e,a,c,C,a,D>>)
subtraction
logical_negation
add_attribute("A", "A", "INTEGER")
add_class(c)
type_check
conjunction
add_class(a)
add_command("D", "C", <<["BOOLEAN", "BOOLEAN"]>>)
add_call_chain(<<d>>)
bool_value (true)
less_than
add_command("a", "b", <<["d", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "INTEGER"], ["b", "a"], ["d", "B"], ["b", "BOOLEAN"], ["A", "INTEGER"], ["a", "BOOLEAN"], ["b", "INTEGER"]>>)
add_attribute("c", "a", "BOOLEAN")
type_check
add_query("C", "BOOLEAN", <<["a", "A"], ["B", "BOOLEAN"]>>, "b")
bool_value (false)
greater_than
add_query("B", "e", <<["c", "INTEGER"], ["e", "e"], ["c", "INTEGER"], ["c", "BOOLEAN"], ["d", "C"], ["D", "BOOLEAN"], ["b", "INTEGER"], ["a", "INTEGER"], ["A", "BOOLEAN"]>>, "D")
add_query("b", "B", <<["e", "D"], ["a", "BOOLEAN"], ["B", "INTEGER"], ["D", "D"], ["e", "INTEGER"]>>, "B")
int_value (45)
add_query("D", "C", <<["B", "INTEGER"], ["b", "BOOLEAN"], ["a", "d"], ["c", "A"], ["B", "INTEGER"]>>, "c")
add_query("B", "e", <<["A", "B"], ["b", "INTEGER"]>>, "b")
add_attribute("C", "C", "BOOLEAN")
bool_value (false)
add_command("B", "INTEGER", <<["b", "INTEGER"], ["D", "D"], ["D", "c"], ["b", "c"]>>)
add_attribute("BOOLEAN", "c", "b")
add_attribute("b", "b", "BOOLEAN")
add_attribute("a", "D", "BOOLEAN")
bool_value (true)
type_check
add_query("B", "e", <<["e", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "INTEGER"], ["BOOLEAN", "c"]>>, "C")
generate_java_code
numerical_negation
generate_java_code
bool_value (false)
numerical_negation
add_command("B", "a", <<["c", "b"], ["d", "BOOLEAN"], ["INTEGER", "INTEGER"], ["A", "INTEGER"], ["c", "A"], ["a", "INTEGER"], ["B", "C"], ["a", "A"]>>)
less_than
conjunction
add_attribute("d", "A", "INTEGER")
add_command("c", "b", <<["C", "BOOLEAN"], ["D", "BOOLEAN"]>>)
add_call_chain(<<c,C,D,b>>)
add_call_chain(<<B,a,d,C>>)
int_value (16)
add_call_chain(<<e,BOOLEAN,BOOLEAN,B,B,c,C,b>>)
int_value (44)
generate_java_code
add_attribute("B", "B", "D")
add_command("C", "A", <<["C", "BOOLEAN"], ["d", "D"], ["C", "e"], ["c", "C"]>>)
add_query("b", "e", <<["B", "BOOLEAN"], ["C", "d"], ["B", "INTEGER"], ["C", "INTEGER"], ["c", "INTEGER"]>>, "C")
add_command("A", "C", <<["e", "BOOLEAN"], ["A", "c"], ["BOOLEAN", "INTEGER"], ["d", "INTEGER"], ["d", "BOOLEAN"], ["b", "INTEGER"]>>)
add_command("BOOLEAN", "C", <<["D", "a"], ["b", "INTEGER"], ["d", "BOOLEAN"], ["e", "INTEGER"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["A", "INTEGER"], ["c", "INTEGER"], ["d", "C"]>>)
addition
add_attribute("A", "e", "INTEGER")
bool_value (true)
generate_java_code
add_query("A", "B", <<["a", "b"], ["e", "INTEGER"], ["BOOLEAN", "INTEGER"], ["e", "BOOLEAN"], ["b", "INTEGER"]>>, "INTEGER")
add_attribute("c", "A", "BOOLEAN")
add_call_chain(<<a,A,d,d,B,A,A,D>>)
add_call_chain(<<c,C,A>>)
add_call_chain(<<a,c,C,e,e,D,b,B>>)
logical_negation
generate_java_code
logical_negation
int_value (6)
less_than
bool_value (true)
logical_negation
generate_java_code
less_than
bool_value (true)
add_call_chain(<<e,a,e,e,C,B,D>>)
add_call_chain(<<c,b,B>>)
bool_value (true)
add_query("a", "D", <<["B", "INTEGER"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["D", "D"], ["A", "a"], ["B", "C"]>>, "D")
add_call_chain(<<A,D,c>>)
add_attribute("D", "b", "BOOLEAN")
add_command("c", "e", <<["d", "INTEGER"]>>)
addition
add_query("a", "e", <<["D", "INTEGER"], ["C", "INTEGER"], ["A", "D"], ["D", "INTEGER"], ["e", "INTEGER"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["D", "BOOLEAN"]>>, "BOOLEAN")
add_query("d", "e", <<["a", "BOOLEAN"], ["D", "a"]>>, "A")
generate_java_code
int_value (24)
add_call_chain(<<b,D>>)
addition
add_attribute("e", "C", "BOOLEAN")
disjunction
numerical_negation
add_attribute("INTEGER", "B", "d")
add_call_chain(<<A,D,c>>)
bool_value (true)
equals
add_query("D", "D", <<["c", "BOOLEAN"], ["c", "INTEGER"], ["C", "c"]>>, "c")
add_command("b", "D", <<["D", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "C"], ["c", "B"], ["B", "BOOLEAN"]>>)
add_call_chain(<<d,d,INTEGER,e>>)
add_attribute("D", "A", "BOOLEAN")
numerical_negation
add_command("INTEGER", "D", <<["INTEGER", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "INTEGER"], ["b", "BOOLEAN"], ["d", "e"], ["b", "BOOLEAN"], ["D", "BOOLEAN"]>>)
add_attribute("c", "a", "BOOLEAN")
add_query("C", "D", <<["D", "INTEGER"], ["INTEGER", "B"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["e", "BOOLEAN"], ["e", "BOOLEAN"]>>, "d")
conjunction
numerical_negation
bool_value (true)
bool_value (true)
numerical_negation
bool_value (false)
int_value (40)
add_query("INTEGER", "INTEGER", <<["B", "INTEGER"]>>, "A")
disjunction
add_class(BOOLEAN)
add_query("B", "B", <<["A", "A"], ["A", "INTEGER"], ["B", "C"], ["B", "INTEGER"]>>, "b")
add_query("BOOLEAN", "e", <<["INTEGER", "BOOLEAN"]>>, "C")
numerical_negation
add_attribute("e", "b", "C")
add_call_chain(<<A,INTEGER,C,B,B,INTEGER,B>>)
add_attribute("b", "INTEGER", "c")
greater_than
add_call_chain(<<D,b,C,B,C,B,b,C>>)
add_call_chain(<<C,INTEGER,A,C,A,B,e>>)
add_command("e", "B", <<["d", "INTEGER"], ["e", "BOOLEAN"], ["c", "INTEGER"], ["e", "BOOLEAN"], ["a", "INTEGER"], ["d", "INTEGER"], ["B", "BOOLEAN"], ["a", "INTEGER"]>>)
add_attribute("d", "e", "INTEGER")
less_than
greater_than
logical_negation
add_query("A", "B", <<["B", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["a", "BOOLEAN"], ["e", "INTEGER"], ["d", "BOOLEAN"], ["A", "a"]>>, "a")
add_command("B", "a", <<["C", "c"], ["A", "INTEGER"], ["BOOLEAN", "INTEGER"]>>)
logical_negation
add_attribute("BOOLEAN", "D", "INTEGER")
add_command("e", "a", <<["d", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["A", "INTEGER"], ["b", "c"]>>)
add_command("a", "D", <<["a", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "D"], ["A", "INTEGER"], ["a", "BOOLEAN"], ["C", "C"]>>)
type_check
add_query("C", "e", <<["INTEGER", "INTEGER"], ["b", "D"]>>, "BOOLEAN")
generate_java_code
add_attribute("c", "b", "C")
int_value (39)
add_query("B", "e", <<["A", "c"], ["B", "INTEGER"], ["INTEGER", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "BOOLEAN"], ["d", "D"], ["B", "BOOLEAN"]>>, "B")
type_check
numerical_negation
add_attribute("e", "b", "BOOLEAN")
add_command("A", "c", <<["C", "c"], ["D", "INTEGER"], ["b", "INTEGER"], ["INTEGER", "INTEGER"], ["D", "INTEGER"]>>)
greater_than
add_command("b", "d", <<["b", "INTEGER"], ["e", "BOOLEAN"], ["a", "INTEGER"]>>)
add_call_chain(<<a,e,INTEGER,B,B,D,BOOLEAN>>)
bool_value (true)
add_call_chain(<<B,c>>)
add_query("d", "e", <<["C", "INTEGER"], ["D", "INTEGER"], ["b", "b"], ["a", "INTEGER"], ["D", "d"], ["d", "A"], ["D", "BOOLEAN"], ["c", "INTEGER"]>>, "B")
add_attribute("INTEGER", "B", "INTEGER")
add_query("INTEGER", "INTEGER", <<["INTEGER", "BOOLEAN"], ["a", "INTEGER"], ["a", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["C", "BOOLEAN"]>>, "c")
int_value (37)
add_query("e", "INTEGER", <<["D", "INTEGER"], ["C", "A"], ["BOOLEAN", "d"]>>, "e")
logical_negation
add_call_chain(<<D,BOOLEAN,e,C,INTEGER>>)
addition
bool_value (false)
add_call_chain(<<C,b,d,C,B>>)
type_check
logical_negation
bool_value (true)
add_query("e", "b", <<["BOOLEAN", "INTEGER"], ["C", "e"]>>, "a")
int_value (30)
modulo
add_attribute("D", "C", "INTEGER")
disjunction
logical_negation
add_call_chain(<<c,e>>)
add_class(a)
quotient
add_command("A", "BOOLEAN", <<["c", "INTEGER"], ["C", "D"], ["BOOLEAN", "BOOLEAN"], ["D", "e"], ["d", "INTEGER"], ["e", "BOOLEAN"], ["d", "e"]>>)
bool_value (false)
add_call_chain(<<c,d,D,b,d,d,C,INTEGER,c>>)
bool_value (true)
bool_value (false)
numerical_negation
