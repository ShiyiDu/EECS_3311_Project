logical_negation
less_than
generate_java_code
numerical_negation
add_call_chain(<<C,C,a,b,B,A,c,BOOLEAN,B>>)
bool_value (false)
add_query("C", "c", <<["d", "BOOLEAN"], ["INTEGER", "C"], ["d", "INTEGER"], ["A", "BOOLEAN"], ["A", "INTEGER"], ["c", "BOOLEAN"]>>, "e")
numerical_negation
add_command("C", "A", <<["b", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "INTEGER"], ["c", "A"]>>)
add_call_chain(<<c,a,a,a,b,A,INTEGER,c>>)
logical_negation
add_attribute("D", "C", "INTEGER")
conjunction
logical_negation
int_value (37)
add_call_chain(<<e,C>>)
add_attribute("A", "e", "INTEGER")
equals
numerical_negation
int_value (21)
add_class(D)
add_call_chain(<<B,D,D,A,c>>)
add_command("INTEGER", "e", <<["D", "BOOLEAN"], ["c", "c"], ["e", "INTEGER"], ["a", "C"], ["d", "c"], ["B", "BOOLEAN"], ["d", "C"]>>)
int_value (37)
add_attribute("C", "d", "B")
add_query("b", "INTEGER", <<["B", "BOOLEAN"], ["A", "INTEGER"], ["d", "BOOLEAN"]>>, "b")
conjunction
add_query("a", "D", <<["D", "INTEGER"]>>, "C")
add_call_chain(<<B,d,C>>)
numerical_negation
int_value (23)
add_command("c", "c", <<["c", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "C"], ["B", "BOOLEAN"], ["B", "A"], ["d", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["B", "INTEGER"]>>)
bool_value (true)
disjunction
bool_value (true)
generate_java_code
add_attribute("D", "B", "INTEGER")
add_attribute("A", "b", "INTEGER")
type_check
int_value (29)
numerical_negation
int_value (40)
less_than
int_value (19)
less_than
add_query("INTEGER", "C", <<["B", "INTEGER"], ["A", "D"], ["c", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "INTEGER"]>>, "d")
add_attribute("INTEGER", "B", "INTEGER")
add_call_chain(<<d,INTEGER>>)
add_call_chain(<<d,d,C,BOOLEAN,D,A,A,BOOLEAN,d>>)
greater_than
int_value (31)
greater_than
generate_java_code
add_call_chain(<<B>>)
logical_negation
generate_java_code
add_command("D", "e", <<["A", "BOOLEAN"], ["b", "A"], ["c", "BOOLEAN"]>>)
bool_value (false)
add_query("e", "d", <<["c", "BOOLEAN"], ["d", "INTEGER"], ["A", "C"], ["d", "INTEGER"], ["D", "BOOLEAN"], ["D", "BOOLEAN"], ["a", "A"], ["INTEGER", "D"]>>, "D")
add_call_chain(<<INTEGER,d,B,BOOLEAN,e,C,e,c,a>>)
add_query("e", "D", <<["D", "BOOLEAN"], ["c", "INTEGER"], ["d", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "D"], ["d", "e"], ["A", "BOOLEAN"], ["e", "c"]>>, "C")
add_call_chain(<<d>>)
multiplication
add_class(a)
logical_negation
disjunction
add_class(d)
add_call_chain(<<c,D,b,B,A>>)
add_attribute("d", "A", "INTEGER")
type_check
add_call_chain(<<a>>)
numerical_negation
logical_negation
add_class(A)
add_command("D", "C", <<["b", "A"], ["a", "INTEGER"], ["d", "INTEGER"], ["c", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
add_query("A", "d", <<["D", "BOOLEAN"], ["d", "INTEGER"], ["d", "BOOLEAN"], ["A", "INTEGER"]>>, "BOOLEAN")
int_value (23)
logical_negation
add_attribute("a", "a", "C")
logical_negation
add_attribute("D", "c", "BOOLEAN")
add_attribute("A", "B", "BOOLEAN")
add_query("c", "b", <<["c", "INTEGER"], ["INTEGER", "INTEGER"], ["C", "C"], ["d", "B"], ["d", "d"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "B"]>>, "BOOLEAN")
add_attribute("c", "D", "INTEGER")
type_check
generate_java_code
generate_java_code
int_value (16)
add_command("d", "B", <<["e", "INTEGER"], ["e", "BOOLEAN"], ["d", "BOOLEAN"], ["b", "BOOLEAN"], ["d", "INTEGER"]>>)
type_check
add_call_chain(<<b,C,b,A,b,D,d,BOOLEAN>>)
int_value (41)
add_query("c", "d", <<["e", "BOOLEAN"], ["c", "INTEGER"], ["c", "BOOLEAN"], ["BOOLEAN", "C"], ["c", "BOOLEAN"]>>, "BOOLEAN")
bool_value (false)
add_class(C)
bool_value (true)
add_call_chain(<<D,INTEGER,c,b,C,c>>)
add_attribute("c", "C", "INTEGER")
conjunction
logical_negation
int_value (14)
add_command("B", "d", <<["C", "BOOLEAN"], ["C", "b"], ["e", "INTEGER"], ["INTEGER", "BOOLEAN"], ["e", "d"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "INTEGER"]>>)
add_call_chain(<<B,INTEGER,c,BOOLEAN>>)
bool_value (true)
add_call_chain(<<C,B,a,B,C,b,d,BOOLEAN,D>>)
type_check
bool_value (false)
add_query("e", "C", <<["D", "BOOLEAN"], ["BOOLEAN", "A"], ["c", "INTEGER"], ["e", "BOOLEAN"], ["c", "C"], ["e", "A"], ["B", "INTEGER"]>>, "A")
add_command("B", "C", <<["b", "INTEGER"], ["D", "BOOLEAN"], ["e", "C"], ["BOOLEAN", "INTEGER"], ["b", "C"]>>)
add_call_chain(<<C>>)
logical_negation
add_command("b", "B", <<["b", "BOOLEAN"], ["c", "INTEGER"], ["d", "BOOLEAN"], ["a", "d"]>>)
modulo
add_class(b)
add_command("C", "B", <<["d", "BOOLEAN"], ["C", "INTEGER"], ["C", "INTEGER"], ["b", "BOOLEAN"]>>)
type_check
add_attribute("C", "A", "INTEGER")
add_query("c", "a", <<["D", "BOOLEAN"], ["c", "INTEGER"]>>, "b")
numerical_negation
add_query("c", "D", <<["A", "BOOLEAN"], ["B", "INTEGER"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["d", "A"], ["e", "BOOLEAN"]>>, "e")
generate_java_code
add_attribute("BOOLEAN", "A", "INTEGER")
bool_value (true)
generate_java_code
add_call_chain(<<c,a>>)
subtraction
add_call_chain(<<d,d,c,A,D>>)
type_check
int_value (24)
logical_negation
less_than
quotient
logical_negation
numerical_negation
generate_java_code
add_call_chain(<<A,BOOLEAN,C,C,D,a,C,c,c>>)
bool_value (true)
int_value (32)
add_attribute("B", "A", "INTEGER")
add_call_chain(<<c,b>>)
int_value (27)
add_call_chain(<<e,c,C,e,INTEGER,e,A>>)
less_than
add_class(B)
logical_negation
add_command("BOOLEAN", "A", <<["e", "INTEGER"], ["B", "INTEGER"]>>)
int_value (25)
add_call_chain(<<b>>)
int_value (12)
add_command("a", "c", <<["C", "INTEGER"], ["c", "INTEGER"], ["b", "INTEGER"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["D", "B"], ["C", "BOOLEAN"], ["d", "INTEGER"]>>)
add_call_chain(<<D,D,d>>)
add_call_chain(<<c,A,D,d,C,b>>)
add_attribute("A", "d", "BOOLEAN")
numerical_negation
add_command("C", "c", <<["D", "INTEGER"], ["C", "BOOLEAN"], ["B", "B"], ["e", "INTEGER"], ["b", "INTEGER"], ["D", "INTEGER"], ["a", "INTEGER"], ["B", "INTEGER"], ["d", "BOOLEAN"]>>)
add_query("B", "e", <<["BOOLEAN", "INTEGER"], ["d", "INTEGER"], ["INTEGER", "BOOLEAN"]>>, "e")
numerical_negation
add_command("a", "d", <<["B", "INTEGER"], ["b", "BOOLEAN"], ["BOOLEAN", "d"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "C"], ["D", "B"]>>)
add_call_chain(<<D,b,D,BOOLEAN,C,d>>)
numerical_negation
int_value (34)
type_check
equals
add_call_chain(<<B,INTEGER>>)
addition
int_value (20)
conjunction
add_attribute("C", "D", "a")
add_call_chain(<<C,INTEGER,A,b,e,e,BOOLEAN>>)
add_query("c", "D", <<["d", "BOOLEAN"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["b", "B"]>>, "b")
add_call_chain(<<b,D,d,C,INTEGER,A,A>>)
add_command("B", "a", <<["d", "INTEGER"]>>)
numerical_negation
add_query("b", "INTEGER", <<["c", "e"], ["c", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["C", "BOOLEAN"]>>, "b")
add_call_chain(<<a,d>>)
int_value (19)
numerical_negation
add_attribute("a", "B", "INTEGER")
add_command("D", "C", <<["b", "INTEGER"], ["b", "BOOLEAN"], ["d", "B"], ["A", "e"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["INTEGER", "d"], ["BOOLEAN", "INTEGER"], ["INTEGER", "INTEGER"]>>)
add_call_chain(<<A,B,A,a,INTEGER,C,B>>)
generate_java_code
add_command("a", "B", <<["D", "BOOLEAN"], ["b", "d"], ["INTEGER", "BOOLEAN"], ["b", "B"], ["b", "BOOLEAN"], ["c", "A"]>>)
add_attribute("INTEGER", "C", "e")
bool_value (false)
logical_negation
conjunction
add_query("BOOLEAN", "C", <<["B", "A"], ["INTEGER", "INTEGER"], ["c", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "INTEGER"]>>, "B")
add_call_chain(<<D,b,C,e>>)
add_query("b", "d", <<["B", "INTEGER"]>>, "d")
add_command("BOOLEAN", "B", <<["c", "B"], ["B", "INTEGER"], ["B", "INTEGER"], ["A", "e"]>>)
bool_value (false)
add_attribute("d", "b", "BOOLEAN")
add_call_chain(<<B,INTEGER,b,C,D>>)
add_call_chain(<<A,d,B,INTEGER,A,B,INTEGER,D>>)
add_class(B)
addition
numerical_negation
bool_value (false)
numerical_negation
subtraction
add_attribute("A", "a", "BOOLEAN")
bool_value (false)
disjunction
add_query("c", "D", <<["INTEGER", "BOOLEAN"], ["b", "INTEGER"], ["B", "INTEGER"]>>, "e")
numerical_negation
numerical_negation
add_call_chain(<<b,D,A,INTEGER,C,d>>)
type_check
add_command("C", "D", <<["d", "BOOLEAN"]>>)
bool_value (true)
type_check
add_query("A", "d", <<["a", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "BOOLEAN"]>>, "D")
add_call_chain(<<e,d,A>>)
add_call_chain(<<b,C,d,d,A,A,B,BOOLEAN,B>>)
int_value (28)
int_value (29)
conjunction
