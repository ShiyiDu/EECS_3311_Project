add_class(A)
add_query("C", "a", <<["b", "BOOLEAN"], ["a", "e"], ["D", "INTEGER"], ["D", "b"]>>, "b")
add_call_chain(<<e>>)
generate_java_code
add_query("C", "e", <<["c", "INTEGER"], ["C", "INTEGER"], ["INTEGER", "BOOLEAN"], ["b", "INTEGER"], ["b", "BOOLEAN"]>>, "B")
quotient
add_class(INTEGER)
add_query("B", "a", <<["A", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "D"], ["D", "INTEGER"], ["c", "BOOLEAN"]>>, "B")
add_call_chain(<<b,e,c,C,a,e,e,e,e>>)
add_call_chain(<<C,D,D,a,A,b>>)
add_class(A)
numerical_negation
generate_java_code
less_than
add_class(BOOLEAN)
add_attribute("D", "e", "B")
add_query("INTEGER", "D", <<["a", "INTEGER"], ["C", "INTEGER"], ["e", "BOOLEAN"], ["b", "INTEGER"], ["d", "d"], ["e", "c"]>>, "INTEGER")
add_query("B", "A", <<["C", "INTEGER"]>>, "D")
add_class(C)
greater_than
less_than
add_attribute("e", "D", "INTEGER")
numerical_negation
equals
add_query("B", "D", <<["D", "c"], ["A", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "a"], ["A", "c"], ["B", "d"], ["A", "INTEGER"]>>, "A")
generate_java_code
numerical_negation
bool_value (true)
logical_negation
numerical_negation
add_query("d", "b", <<["d", "b"], ["B", "C"], ["C", "INTEGER"], ["c", "a"]>>, "a")
type_check
disjunction
add_attribute("b", "c", "BOOLEAN")
add_query("C", "c", <<["A", "A"]>>, "A")
add_query("B", "b", <<["a", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["e", "INTEGER"], ["C", "BOOLEAN"], ["c", "INTEGER"], ["D", "INTEGER"]>>, "c")
int_value (25)
int_value (25)
add_query("A", "D", <<["D", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "e"], ["e", "INTEGER"]>>, "e")
add_command("B", "e", <<["C", "INTEGER"], ["C", "d"], ["c", "INTEGER"]>>)
subtraction
add_call_chain(<<C,e,b,BOOLEAN,e,INTEGER>>)
bool_value (true)
generate_java_code
conjunction
bool_value (false)
conjunction
add_class(a)
add_query("e", "C", <<["d", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>, "a")
add_command("BOOLEAN", "b", <<["B", "BOOLEAN"], ["D", "A"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["d", "INTEGER"], ["c", "BOOLEAN"], ["b", "D"]>>)
add_attribute("C", "BOOLEAN", "d")
logical_negation
add_call_chain(<<c,A,B,b,e,e,A,A>>)
type_check
type_check
bool_value (true)
bool_value (true)
conjunction
numerical_negation
logical_negation
bool_value (true)
add_call_chain(<<b,B,D,c>>)
logical_negation
multiplication
bool_value (true)
add_command("b", "e", <<["A", "d"], ["a", "A"]>>)
generate_java_code
type_check
add_class(INTEGER)
add_attribute("B", "A", "INTEGER")
int_value (5)
add_class(b)
bool_value (false)
add_attribute("a", "d", "INTEGER")
int_value (32)
add_query("a", "B", <<["c", "d"], ["a", "INTEGER"], ["C", "INTEGER"], ["a", "BOOLEAN"], ["d", "INTEGER"], ["e", "D"]>>, "c")
add_query("d", "a", <<["A", "BOOLEAN"], ["e", "INTEGER"], ["c", "BOOLEAN"], ["e", "INTEGER"], ["D", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>, "d")
bool_value (false)
add_query("BOOLEAN", "e", <<["B", "INTEGER"], ["e", "INTEGER"], ["A", "INTEGER"], ["C", "INTEGER"], ["B", "BOOLEAN"]>>, "b")
conjunction
add_command("e", "C", <<["a", "INTEGER"], ["B", "C"], ["D", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["BOOLEAN", "INTEGER"], ["d", "BOOLEAN"], ["A", "d"], ["A", "BOOLEAN"]>>)
add_call_chain(<<e,A,A,c>>)
add_attribute("C", "INTEGER", "INTEGER")
logical_negation
add_call_chain(<<D,c,A,c>>)
bool_value (true)
add_call_chain(<<C,B,c,c>>)
logical_negation
subtraction
quotient
generate_java_code
add_attribute("B", "D", "a")
int_value (16)
numerical_negation
multiplication
conjunction
add_query("D", "e", <<["D", "BOOLEAN"], ["C", "INTEGER"], ["b", "A"], ["b", "BOOLEAN"], ["D", "INTEGER"], ["D", "BOOLEAN"]>>, "B")
add_query("b", "C", <<["e", "INTEGER"], ["e", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "INTEGER"]>>, "d")
int_value (47)
add_call_chain(<<a,BOOLEAN,b,b,c,B>>)
add_attribute("e", "D", "C")
add_call_chain(<<D,INTEGER,B,c>>)
add_call_chain(<<BOOLEAN,A,C,B,INTEGER,D>>)
add_attribute("C", "e", "c")
bool_value (false)
logical_negation
add_attribute("d", "B", "INTEGER")
add_command("c", "a", <<["e", "BOOLEAN"], ["c", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "INTEGER"]>>)
add_call_chain(<<B,d,d,D,d,D,B,b,d>>)
subtraction
add_call_chain(<<A,d,b>>)
logical_negation
logical_negation
add_call_chain(<<D,d,e,d,e>>)
int_value (9)
add_query("b", "BOOLEAN", <<["INTEGER", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "BOOLEAN"]>>, "A")
add_call_chain(<<B,C,c,C,d>>)
add_attribute("a", "C", "BOOLEAN")
modulo
numerical_negation
add_attribute("a", "C", "BOOLEAN")
disjunction
int_value (2)
add_query("a", "d", <<["b", "d"]>>, "e")
add_attribute("BOOLEAN", "B", "BOOLEAN")
add_attribute("d", "B", "c")
type_check
add_class(D)
add_command("B", "C", <<["e", "INTEGER"], ["D", "INTEGER"], ["e", "BOOLEAN"], ["B", "A"], ["B", "INTEGER"], ["A", "INTEGER"], ["B", "BOOLEAN"]>>)
int_value (28)
subtraction
less_than
type_check
add_call_chain(<<a,BOOLEAN>>)
int_value (18)
modulo
add_attribute("d", "BOOLEAN", "BOOLEAN")
add_call_chain(<<A>>)
numerical_negation
add_class(b)
logical_negation
bool_value (true)
add_call_chain(<<D>>)
conjunction
add_query("BOOLEAN", "C", <<["b", "A"], ["D", "INTEGER"], ["c", "e"], ["c", "BOOLEAN"], ["d", "B"], ["a", "BOOLEAN"]>>, "d")
numerical_negation
generate_java_code
add_call_chain(<<a,d,e,e>>)
add_call_chain(<<D,D,a,e,a,D,b>>)
numerical_negation
numerical_negation
add_query("A", "D", <<["A", "c"]>>, "d")
bool_value (false)
add_query("c", "D", <<["INTEGER", "INTEGER"], ["d", "BOOLEAN"], ["A", "INTEGER"], ["C", "INTEGER"]>>, "B")
equals
int_value (30)
less_than
int_value (48)
add_attribute("D", "BOOLEAN", "BOOLEAN")
int_value (43)
int_value (20)
add_query("e", "B", <<["a", "e"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["c", "C"]>>, "A")
add_call_chain(<<b,INTEGER,B,c,b>>)
add_command("B", "a", <<["A", "INTEGER"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "INTEGER"], ["D", "BOOLEAN"]>>)
generate_java_code
int_value (24)
add_query("C", "e", <<["B", "BOOLEAN"], ["a", "INTEGER"], ["C", "INTEGER"], ["D", "d"], ["c", "A"], ["A", "a"]>>, "e")
logical_negation
logical_negation
add_query("C", "A", <<["a", "BOOLEAN"], ["A", "e"]>>, "d")
generate_java_code
add_query("D", "c", <<["C", "A"], ["INTEGER", "B"], ["e", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["B", "INTEGER"]>>, "B")
add_command("c", "a", <<["d", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["A", "BOOLEAN"]>>)
less_than
add_call_chain(<<d,B,b,d,A,D,d>>)
int_value (33)
less_than
add_call_chain(<<d,D,D,INTEGER>>)
type_check
add_class(D)
add_command("c", "D", <<["BOOLEAN", "BOOLEAN"], ["e", "c"], ["D", "INTEGER"], ["D", "INTEGER"]>>)
add_call_chain(<<C>>)
add_command("D", "B", <<["A", "INTEGER"], ["A", "a"], ["b", "BOOLEAN"], ["c", "b"]>>)
add_command("d", "C", <<["C", "BOOLEAN"]>>)
add_class(D)
add_query("BOOLEAN", "C", <<["C", "INTEGER"], ["d", "INTEGER"]>>, "b")
int_value (24)
add_call_chain(<<d,B,b,c,BOOLEAN,B,BOOLEAN,A>>)
add_class(A)
add_class(c)
multiplication
add_attribute("A", "A", "INTEGER")
add_call_chain(<<e,C,B,A,C,e,B>>)
add_class(C)
add_command("A", "D", <<["a", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["C", "D"], ["e", "BOOLEAN"]>>)
numerical_negation
add_query("d", "a", <<["A", "INTEGER"], ["a", "BOOLEAN"], ["e", "BOOLEAN"]>>, "e")
bool_value (true)
numerical_negation
add_call_chain(<<d,B,c,BOOLEAN,A,C,d,B>>)
numerical_negation
add_call_chain(<<d,b,C,c,b>>)
add_attribute("A", "A", "INTEGER")
add_call_chain(<<B,INTEGER,BOOLEAN>>)
disjunction
add_query("c", "D", <<["a", "A"], ["d", "INTEGER"], ["C", "C"], ["b", "INTEGER"], ["e", "BOOLEAN"], ["INTEGER", "INTEGER"]>>, "a")
bool_value (false)
add_query("C", "a", <<["A", "a"], ["a", "D"], ["a", "b"]>>, "A")
int_value (3)
add_command("d", "A", <<["BOOLEAN", "B"], ["INTEGER", "a"], ["e", "BOOLEAN"]>>)
logical_negation
