int_value (43)
add_call_chain(<<c,d,BOOLEAN>>)
conjunction
add_query("D", "B", <<["C", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "a"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "BOOLEAN"]>>, "d")
add_call_chain(<<C,B,e,A,b,C,B,D>>)
logical_negation
int_value (40)
add_attribute("d", "d", "BOOLEAN")
disjunction
add_command("B", "C", <<["b", "BOOLEAN"], ["C", "c"]>>)
logical_negation
add_command("e", "C", <<["D", "B"], ["A", "INTEGER"], ["c", "d"], ["a", "BOOLEAN"]>>)
disjunction
less_than
subtraction
bool_value (false)
add_attribute("D", "C", "BOOLEAN")
add_query("b", "BOOLEAN", <<["e", "e"], ["b", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "D"]>>, "A")
add_class(A)
add_command("INTEGER", "a", <<["A", "BOOLEAN"], ["A", "b"], ["C", "BOOLEAN"], ["INTEGER", "INTEGER"], ["d", "INTEGER"], ["b", "BOOLEAN"]>>)
add_attribute("D", "B", "INTEGER")
int_value (18)
bool_value (false)
type_check
add_call_chain(<<INTEGER,c,B,b,b>>)
add_call_chain(<<BOOLEAN,A,c,e,C,c>>)
bool_value (true)
add_query("D", "C", <<["D", "INTEGER"], ["a", "BOOLEAN"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["d", "INTEGER"]>>, "d")
add_call_chain(<<A,a,c,INTEGER,C,e,C,BOOLEAN,C>>)
int_value (26)
add_class(b)
add_call_chain(<<B,A,D,c,B,a,c>>)
numerical_negation
bool_value (true)
generate_java_code
type_check
logical_negation
add_call_chain(<<C,d,INTEGER,a,a>>)
numerical_negation
quotient
disjunction
bool_value (false)
add_command("B", "C", <<["A", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>)
add_call_chain(<<c,c,INTEGER,BOOLEAN>>)
add_call_chain(<<e,b,INTEGER,C,e,c,B>>)
add_command("c", "A", <<["INTEGER", "INTEGER"], ["B", "c"], ["e", "INTEGER"], ["b", "A"]>>)
type_check
int_value (11)
add_command("c", "D", <<["e", "B"], ["A", "D"]>>)
logical_negation
add_class(a)
addition
int_value (47)
add_class(BOOLEAN)
numerical_negation
numerical_negation
type_check
bool_value (true)
add_attribute("A", "C", "BOOLEAN")
add_command("a", "d", <<["D", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "INTEGER"]>>)
add_call_chain(<<C,BOOLEAN,a,INTEGER,c>>)
add_call_chain(<<A,a>>)
bool_value (false)
add_query("A", "A", <<["A", "INTEGER"], ["INTEGER", "a"], ["a", "BOOLEAN"], ["d", "INTEGER"], ["d", "A"], ["e", "INTEGER"], ["a", "BOOLEAN"], ["D", "A"], ["d", "BOOLEAN"]>>, "B")
add_command("d", "BOOLEAN", <<["b", "BOOLEAN"], ["a", "INTEGER"], ["D", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["BOOLEAN", "b"]>>)
logical_negation
disjunction
add_command("B", "INTEGER", <<["b", "INTEGER"], ["c", "BOOLEAN"], ["INTEGER", "C"], ["BOOLEAN", "C"], ["B", "INTEGER"]>>)
int_value (18)
add_command("B", "B", <<["BOOLEAN", "INTEGER"], ["A", "BOOLEAN"], ["C", "A"], ["A", "INTEGER"], ["c", "B"], ["b", "INTEGER"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["c", "b"]>>)
add_call_chain(<<A,C,d,B,a,c,C>>)
int_value (48)
add_attribute("b", "c", "INTEGER")
bool_value (false)
add_command("d", "C", <<["D", "BOOLEAN"], ["d", "B"]>>)
int_value (27)
disjunction
add_call_chain(<<D,b,D,e,C,b,D>>)
logical_negation
less_than
add_call_chain(<<d,b,c>>)
numerical_negation
add_call_chain(<<A,B,D,D,c,b>>)
add_call_chain(<<INTEGER,B,INTEGER>>)
add_call_chain(<<b,c,C,D,c,D>>)
numerical_negation
logical_negation
add_attribute("e", "e", "A")
add_command("B", "A", <<["B", "D"], ["e", "b"], ["B", "INTEGER"], ["d", "INTEGER"], ["c", "INTEGER"], ["D", "d"], ["D", "BOOLEAN"], ["A", "BOOLEAN"]>>)
conjunction
greater_than
addition
int_value (36)
add_attribute("BOOLEAN", "e", "INTEGER")
add_query("A", "d", <<["A", "c"], ["b", "BOOLEAN"], ["d", "INTEGER"], ["B", "B"]>>, "c")
add_call_chain(<<B>>)
add_query("B", "A", <<["INTEGER", "BOOLEAN"], ["B", "INTEGER"], ["C", "BOOLEAN"], ["A", "b"]>>, "a")
int_value (44)
add_class(C)
greater_than
modulo
add_attribute("a", "A", "INTEGER")
add_attribute("B", "B", "D")
add_call_chain(<<BOOLEAN,b,d>>)
add_attribute("c", "C", "b")
bool_value (true)
quotient
conjunction
add_call_chain(<<b>>)
int_value (43)
add_query("A", "A", <<["A", "INTEGER"], ["INTEGER", "INTEGER"], ["e", "BOOLEAN"], ["b", "b"], ["B", "c"]>>, "c")
add_query("d", "a", <<["B", "D"], ["C", "INTEGER"], ["a", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "B"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["b", "INTEGER"]>>, "e")
numerical_negation
add_attribute("c", "b", "c")
bool_value (false)
bool_value (true)
int_value (20)
bool_value (false)
type_check
type_check
add_query("C", "A", <<["a", "INTEGER"], ["A", "b"], ["b", "INTEGER"], ["c", "INTEGER"], ["b", "A"], ["BOOLEAN", "A"], ["d", "BOOLEAN"], ["c", "BOOLEAN"]>>, "c")
generate_java_code
logical_negation
addition
add_attribute("A", "B", "INTEGER")
add_class(A)
add_class(INTEGER)
subtraction
conjunction
bool_value (true)
add_call_chain(<<d,b,B>>)
add_class(D)
add_class(d)
add_call_chain(<<e,B,D,c>>)
bool_value (true)
add_call_chain(<<A,e,A,B,A>>)
add_query("d", "A", <<["A", "INTEGER"], ["d", "INTEGER"], ["b", "BOOLEAN"], ["INTEGER", "a"], ["BOOLEAN", "c"], ["C", "c"], ["a", "BOOLEAN"], ["c", "a"]>>, "B")
add_attribute("B", "C", "D")
add_query("C", "e", <<["D", "BOOLEAN"], ["d", "a"], ["d", "BOOLEAN"], ["d", "C"], ["A", "D"], ["A", "B"], ["B", "INTEGER"]>>, "B")
bool_value (true)
add_call_chain(<<INTEGER,INTEGER,b,C,INTEGER,INTEGER,A>>)
add_call_chain(<<e,e,e,INTEGER,A,D,b>>)
add_query("BOOLEAN", "d", <<["b", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "C"], ["e", "INTEGER"], ["a", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "INTEGER"]>>, "C")
generate_java_code
logical_negation
equals
disjunction
greater_than
add_attribute("D", "B", "a")
generate_java_code
quotient
bool_value (false)
add_call_chain(<<b>>)
logical_negation
generate_java_code
add_call_chain(<<B,e>>)
add_attribute("INTEGER", "B", "BOOLEAN")
less_than
generate_java_code
bool_value (false)
add_command("d", "INTEGER", <<["A", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "d"], ["c", "INTEGER"], ["D", "B"]>>)
add_call_chain(<<c,e,A,C,B,c,INTEGER,b,d>>)
numerical_negation
equals
numerical_negation
add_attribute("d", "a", "B")
add_call_chain(<<A,e,D,b>>)
equals
logical_negation
numerical_negation
add_call_chain(<<a,b,C,B,a,D>>)
equals
add_query("c", "d", <<["a", "d"], ["e", "INTEGER"], ["D", "BOOLEAN"], ["C", "INTEGER"]>>, "INTEGER")
add_query("c", "a", <<["B", "B"]>>, "B")
add_call_chain(<<c,D,C>>)
int_value (4)
bool_value (false)
numerical_negation
bool_value (false)
add_class(B)
add_query("A", "D", <<["B", "A"]>>, "c")
add_attribute("D", "B", "BOOLEAN")
add_call_chain(<<C,A,A,c>>)
add_call_chain(<<BOOLEAN,A,c,A,C>>)
add_call_chain(<<B,e,C,B,d,B,BOOLEAN>>)
add_attribute("c", "d", "INTEGER")
type_check
add_call_chain(<<c,b,e,B>>)
multiplication
add_query("d", "b", <<["a", "INTEGER"], ["a", "INTEGER"], ["B", "A"], ["C", "INTEGER"], ["B", "C"], ["A", "A"], ["D", "BOOLEAN"], ["c", "BOOLEAN"], ["c", "b"]>>, "B")
type_check
add_query("A", "B", <<["D", "a"], ["A", "BOOLEAN"], ["e", "D"], ["C", "BOOLEAN"], ["C", "BOOLEAN"]>>, "D")
numerical_negation
greater_than
less_than
add_query("d", "a", <<["A", "a"], ["a", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["d", "BOOLEAN"]>>, "c")
generate_java_code
add_call_chain(<<D>>)
int_value (20)
add_attribute("C", "a", "B")
generate_java_code
less_than
add_command("BOOLEAN", "B", <<["e", "INTEGER"], ["b", "BOOLEAN"], ["b", "d"], ["A", "INTEGER"], ["a", "INTEGER"], ["B", "INTEGER"], ["BOOLEAN", "INTEGER"], ["C", "INTEGER"]>>)
add_call_chain(<<B,d,e,b,A>>)
less_than
conjunction
generate_java_code
modulo
generate_java_code
conjunction
add_query("a", "b", <<["c", "BOOLEAN"], ["a", "A"], ["b", "INTEGER"]>>, "e")
int_value (42)
bool_value (true)
add_query("BOOLEAN", "BOOLEAN", <<["b", "BOOLEAN"], ["a", "a"], ["C", "INTEGER"], ["a", "INTEGER"], ["INTEGER", "INTEGER"], ["C", "e"], ["D", "BOOLEAN"]>>, "C")
add_query("B", "e", <<["d", "BOOLEAN"], ["c", "INTEGER"], ["b", "A"]>>, "B")
add_call_chain(<<INTEGER,c,C>>)
bool_value (true)
