add_query("e", "d", <<["B", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["INTEGER", "INTEGER"], ["A", "BOOLEAN"]>>, "C")
add_call_chain(<<C,b,e,e,D,C,d>>)
generate_java_code
disjunction
numerical_negation
generate_java_code
int_value (19)
add_call_chain(<<c,d,A,e,D,BOOLEAN,a,a,e>>)
quotient
logical_negation
int_value (6)
conjunction
generate_java_code
greater_than
type_check
multiplication
add_command("b", "d", <<["A", "D"]>>)
bool_value (false)
int_value (5)
generate_java_code
type_check
add_attribute("A", "D", "INTEGER")
add_call_chain(<<a,C>>)
type_check
add_call_chain(<<c,a,e,b,d,B,A>>)
conjunction
add_query("A", "C", <<["e", "BOOLEAN"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["B", "b"], ["a", "INTEGER"], ["b", "BOOLEAN"], ["b", "INTEGER"]>>, "D")
add_call_chain(<<a,A,b,D,C,c,C,A,INTEGER>>)
conjunction
conjunction
bool_value (true)
add_command("B", "BOOLEAN", <<["d", "INTEGER"], ["d", "BOOLEAN"], ["D", "a"], ["B", "A"], ["INTEGER", "a"]>>)
add_call_chain(<<B,A,c>>)
add_command("A", "A", <<["d", "d"], ["d", "D"], ["B", "d"], ["c", "a"], ["A", "INTEGER"], ["C", "INTEGER"], ["e", "BOOLEAN"], ["D", "INTEGER"]>>)
add_class(e)
add_query("A", "BOOLEAN", <<["A", "INTEGER"], ["B", "BOOLEAN"]>>, "c")
add_call_chain(<<d,D,A,C,c,e,b,C>>)
logical_negation
add_command("BOOLEAN", "C", <<["e", "INTEGER"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["a", "INTEGER"], ["B", "B"]>>)
bool_value (false)
add_attribute("c", "a", "d")
numerical_negation
add_command("c", "C", <<["BOOLEAN", "C"], ["B", "b"], ["b", "BOOLEAN"], ["b", "INTEGER"], ["D", "A"], ["e", "BOOLEAN"], ["D", "e"]>>)
conjunction
numerical_negation
add_call_chain(<<d,B,e,c,A,A,D,b>>)
bool_value (false)
bool_value (false)
add_call_chain(<<c,A,D,a,A,B,D,b,INTEGER>>)
type_check
add_attribute("B", "e", "c")
bool_value (true)
int_value (23)
type_check
subtraction
numerical_negation
int_value (8)
greater_than
add_query("b", "D", <<["a", "c"], ["A", "INTEGER"], ["B", "B"], ["b", "BOOLEAN"], ["c", "d"]>>, "c")
add_command("d", "d", <<["INTEGER", "INTEGER"], ["a", "INTEGER"], ["INTEGER", "BOOLEAN"], ["A", "BOOLEAN"], ["INTEGER", "e"], ["A", "INTEGER"]>>)
type_check
numerical_negation
add_attribute("c", "e", "INTEGER")
add_call_chain(<<C,INTEGER,B,d,c>>)
add_attribute("D", "c", "d")
add_query("C", "B", <<["D", "A"], ["a", "BOOLEAN"], ["e", "INTEGER"], ["B", "INTEGER"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["D", "c"], ["a", "A"]>>, "e")
bool_value (false)
add_attribute("BOOLEAN", "B", "BOOLEAN")
add_class(c)
multiplication
conjunction
bool_value (true)
add_call_chain(<<e,d,e,D,d,e,D,C,A>>)
add_query("C", "A", <<["BOOLEAN", "BOOLEAN"], ["d", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"], ["b", "INTEGER"]>>, "A")
type_check
int_value (48)
add_class(A)
add_query("b", "a", <<["A", "INTEGER"], ["e", "INTEGER"], ["c", "c"], ["BOOLEAN", "BOOLEAN"], ["INTEGER", "INTEGER"], ["D", "D"], ["C", "INTEGER"], ["B", "BOOLEAN"]>>, "A")
modulo
bool_value (true)
add_query("a", "C", <<["b", "BOOLEAN"], ["B", "INTEGER"], ["D", "INTEGER"], ["INTEGER", "INTEGER"], ["D", "INTEGER"], ["D", "e"]>>, "b")
add_attribute("a", "A", "INTEGER")
add_class(B)
add_call_chain(<<INTEGER,INTEGER,B,a,B,D,c>>)
add_call_chain(<<b,B,C,d>>)
generate_java_code
add_call_chain(<<BOOLEAN,C,D,e>>)
add_call_chain(<<C>>)
numerical_negation
add_attribute("b", "INTEGER", "INTEGER")
generate_java_code
type_check
add_call_chain(<<C,A,B,b,B,A>>)
add_query("e", "e", <<["D", "A"], ["b", "INTEGER"]>>, "A")
equals
add_attribute("INTEGER", "b", "c")
add_query("D", "C", <<["e", "C"], ["C", "D"], ["b", "c"], ["INTEGER", "BOOLEAN"], ["e", "BOOLEAN"]>>, "B")
int_value (3)
add_attribute("c", "c", "d")
numerical_negation
bool_value (true)
add_call_chain(<<C,INTEGER,c,d,c,e>>)
generate_java_code
add_command("B", "a", <<["e", "INTEGER"], ["A", "BOOLEAN"], ["b", "INTEGER"], ["A", "C"], ["C", "BOOLEAN"], ["d", "d"], ["D", "C"], ["D", "BOOLEAN"], ["d", "D"]>>)
add_attribute("BOOLEAN", "d", "BOOLEAN")
bool_value (false)
add_call_chain(<<a,b>>)
add_call_chain(<<a>>)
add_call_chain(<<C,BOOLEAN,c,D,A,B,C,INTEGER>>)
bool_value (false)
add_class(D)
equals
add_command("b", "b", <<["INTEGER", "BOOLEAN"], ["b", "INTEGER"]>>)
add_query("A", "B", <<["c", "INTEGER"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["D", "INTEGER"], ["C", "a"], ["B", "b"], ["d", "INTEGER"], ["c", "INTEGER"]>>, "C")
add_command("B", "C", <<["B", "BOOLEAN"]>>)
logical_negation
modulo
add_attribute("d", "e", "BOOLEAN")
add_class(e)
equals
add_query("B", "B", <<["INTEGER", "BOOLEAN"], ["D", "BOOLEAN"]>>, "d")
generate_java_code
add_query("A", "c", <<["b", "BOOLEAN"], ["b", "C"], ["e", "BOOLEAN"], ["e", "BOOLEAN"], ["INTEGER", "INTEGER"], ["b", "BOOLEAN"], ["C", "BOOLEAN"]>>, "a")
modulo
disjunction
add_attribute("c", "D", "BOOLEAN")
add_call_chain(<<e,A>>)
add_query("D", "e", <<["e", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "BOOLEAN"]>>, "D")
add_call_chain(<<C,INTEGER,C>>)
add_query("INTEGER", "b", <<["BOOLEAN", "BOOLEAN"], ["a", "A"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["A", "BOOLEAN"]>>, "a")
add_call_chain(<<D,d,b,A,D,A,C>>)
add_command("A", "c", <<["e", "BOOLEAN"]>>)
numerical_negation
logical_negation
bool_value (true)
greater_than
modulo
less_than
type_check
type_check
add_class(c)
add_call_chain(<<A,C,d,D,A,e,B,c>>)
generate_java_code
generate_java_code
bool_value (true)
generate_java_code
add_call_chain(<<A,BOOLEAN,B,c,A,b,A,b>>)
logical_negation
int_value (41)
add_query("A", "a", <<["d", "BOOLEAN"], ["D", "A"], ["e", "BOOLEAN"], ["b", "c"], ["d", "c"], ["B", "BOOLEAN"]>>, "C")
less_than
add_attribute("e", "d", "a")
add_call_chain(<<a,A>>)
add_command("A", "c", <<["BOOLEAN", "D"], ["b", "INTEGER"], ["INTEGER", "INTEGER"], ["BOOLEAN", "INTEGER"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["INTEGER", "B"], ["c", "BOOLEAN"]>>)
numerical_negation
add_attribute("c", "INTEGER", "BOOLEAN")
add_call_chain(<<C,c,D,D,C,b,e>>)
add_call_chain(<<e,BOOLEAN,c,B,B,b>>)
add_command("d", "D", <<["d", "BOOLEAN"], ["b", "INTEGER"], ["B", "BOOLEAN"], ["BOOLEAN", "C"], ["B", "BOOLEAN"], ["c", "INTEGER"], ["d", "INTEGER"], ["B", "INTEGER"], ["D", "C"]>>)
numerical_negation
disjunction
add_call_chain(<<BOOLEAN,C,INTEGER,b>>)
add_class(a)
add_call_chain(<<D,c,B,D,a>>)
add_call_chain(<<A,INTEGER,d,e,BOOLEAN>>)
add_call_chain(<<e,e,INTEGER,C,c,a,e>>)
int_value (3)
greater_than
numerical_negation
add_query("C", "D", <<["B", "C"], ["e", "INTEGER"], ["c", "b"], ["A", "C"], ["BOOLEAN", "BOOLEAN"]>>, "C")
add_command("A", "C", <<["c", "INTEGER"], ["C", "e"], ["a", "BOOLEAN"], ["A", "BOOLEAN"]>>)
equals
add_query("INTEGER", "b", <<["A", "A"], ["d", "a"], ["e", "c"], ["INTEGER", "INTEGER"], ["B", "BOOLEAN"], ["B", "A"], ["B", "a"]>>, "BOOLEAN")
int_value (38)
add_command("B", "a", <<["e", "B"]>>)
logical_negation
equals
add_call_chain(<<b>>)
add_attribute("C", "c", "INTEGER")
logical_negation
add_command("d", "BOOLEAN", <<["BOOLEAN", "BOOLEAN"], ["a", "INTEGER"], ["a", "BOOLEAN"], ["c", "INTEGER"], ["C", "INTEGER"]>>)
add_call_chain(<<D,A,D,b,e,C>>)
numerical_negation
type_check
add_command("C", "d", <<["e", "INTEGER"], ["A", "b"], ["A", "A"], ["B", "INTEGER"], ["e", "b"], ["B", "INTEGER"], ["B", "BOOLEAN"]>>)
add_call_chain(<<c,b,b,D,a,d>>)
generate_java_code
generate_java_code
add_query("BOOLEAN", "e", <<["c", "INTEGER"], ["b", "BOOLEAN"], ["b", "INTEGER"], ["d", "INTEGER"], ["a", "INTEGER"], ["c", "C"], ["c", "INTEGER"], ["BOOLEAN", "a"], ["B", "e"]>>, "a")
int_value (24)
generate_java_code
add_attribute("B", "D", "BOOLEAN")
type_check
add_call_chain(<<a,D,D,BOOLEAN>>)
generate_java_code
add_attribute("C", "e", "D")
add_call_chain(<<b>>)
bool_value (false)
bool_value (false)
add_attribute("b", "e", "C")
add_class(e)
add_query("c", "B", <<["d", "BOOLEAN"], ["C", "D"], ["A", "INTEGER"], ["BOOLEAN", "A"], ["D", "C"], ["b", "BOOLEAN"], ["A", "INTEGER"], ["e", "INTEGER"], ["A", "BOOLEAN"]>>, "INTEGER")
generate_java_code
bool_value (true)
type_check
add_command("D", "e", <<["e", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["c", "BOOLEAN"], ["a", "BOOLEAN"]>>)
int_value (38)
int_value (44)
bool_value (true)
add_command("A", "A", <<["C", "BOOLEAN"], ["A", "BOOLEAN"]>>)
bool_value (true)
add_attribute("BOOLEAN", "A", "BOOLEAN")
add_query("d", "A", <<["A", "INTEGER"], ["D", "BOOLEAN"], ["D", "D"], ["D", "BOOLEAN"], ["D", "BOOLEAN"]>>, "C")
add_call_chain(<<A,b>>)
type_check
add_attribute("INTEGER", "BOOLEAN", "INTEGER")
generate_java_code
add_class(a)
numerical_negation
add_command("a", "a", <<["B", "INTEGER"], ["d", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
add_query("A", "A", <<["b", "D"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "BOOLEAN"], ["a", "D"], ["D", "BOOLEAN"], ["e", "D"]>>, "BOOLEAN")
add_class(c)
subtraction
type_check
numerical_negation
generate_java_code
add_attribute("A", "d", "e")
logical_negation
addition
multiplication
add_call_chain(<<b,d,d,D>>)
add_class(A)
int_value (15)
multiplication
subtraction
conjunction
add_query("e", "B", <<["A", "BOOLEAN"], ["c", "INTEGER"], ["D", "BOOLEAN"], ["c", "c"], ["C", "BOOLEAN"]>>, "c")
add_command("b", "a", <<["INTEGER", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "INTEGER"], ["d", "BOOLEAN"]>>)
add_query("A", "D", <<["a", "A"], ["c", "BOOLEAN"], ["B", "INTEGER"]>>, "B")
equals
add_query("C", "BOOLEAN", <<["B", "INTEGER"], ["b", "C"], ["d", "INTEGER"], ["B", "INTEGER"]>>, "A")
add_query("B", "B", <<["C", "INTEGER"], ["D", "BOOLEAN"], ["B", "A"]>>, "d")
int_value (16)
bool_value (false)
generate_java_code
add_call_chain(<<BOOLEAN,INTEGER,c>>)
conjunction
add_call_chain(<<C,a,A,c,B>>)
bool_value (true)
generate_java_code
numerical_negation
