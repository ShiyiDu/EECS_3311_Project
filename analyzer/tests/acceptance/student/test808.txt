add_attribute("B", "c", "BOOLEAN")
add_command("INTEGER", "d", <<["b", "C"], ["D", "BOOLEAN"]>>)
numerical_negation
add_query("BOOLEAN", "C", <<["D", "INTEGER"], ["C", "BOOLEAN"]>>, "b")
bool_value (true)
add_call_chain(<<a,D,b>>)
add_attribute("D", "d", "INTEGER")
generate_java_code
logical_negation
disjunction
logical_negation
numerical_negation
int_value (7)
add_call_chain(<<D,b>>)
type_check
add_command("b", "c", <<["d", "BOOLEAN"], ["C", "C"], ["D", "BOOLEAN"], ["D", "a"], ["a", "D"], ["INTEGER", "e"], ["C", "d"], ["D", "BOOLEAN"], ["A", "BOOLEAN"]>>)
add_query("b", "C", <<["a", "INTEGER"], ["C", "INTEGER"], ["D", "INTEGER"], ["B", "BOOLEAN"]>>, "e")
add_command("BOOLEAN", "B", <<["c", "b"], ["c", "INTEGER"], ["INTEGER", "INTEGER"], ["C", "BOOLEAN"], ["B", "e"], ["B", "BOOLEAN"], ["a", "INTEGER"]>>)
add_attribute("INTEGER", "D", "INTEGER")
add_attribute("C", "C", "INTEGER")
add_call_chain(<<B,a,d,C,b,B,C,C>>)
add_attribute("D", "c", "BOOLEAN")
add_attribute("b", "a", "INTEGER")
add_query("INTEGER", "BOOLEAN", <<["B", "BOOLEAN"], ["BOOLEAN", "C"], ["D", "INTEGER"], ["C", "BOOLEAN"]>>, "b")
int_value (4)
numerical_negation
less_than
add_attribute("INTEGER", "B", "e")
add_attribute("B", "c", "INTEGER")
subtraction
int_value (41)
type_check
equals
add_class(b)
add_command("D", "a", <<["e", "BOOLEAN"]>>)
add_call_chain(<<D,BOOLEAN,C,B,e,c,D,d,b>>)
int_value (40)
generate_java_code
numerical_negation
modulo
generate_java_code
add_query("C", "A", <<["b", "BOOLEAN"]>>, "c")
disjunction
add_call_chain(<<d,a,B,INTEGER,d,a,B>>)
logical_negation
add_class(e)
int_value (20)
add_query("BOOLEAN", "b", <<["e", "BOOLEAN"]>>, "a")
greater_than
numerical_negation
numerical_negation
add_command("B", "a", <<["D", "a"], ["d", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["A", "b"], ["INTEGER", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "BOOLEAN"]>>)
multiplication
int_value (44)
add_call_chain(<<D,D>>)
bool_value (true)
add_query("C", "C", <<["B", "C"], ["a", "INTEGER"], ["D", "D"], ["A", "INTEGER"]>>, "a")
add_call_chain(<<B,D,d>>)
add_call_chain(<<D,D>>)
bool_value (false)
add_query("b", "D", <<["B", "B"]>>, "c")
add_query("C", "d", <<["BOOLEAN", "INTEGER"], ["BOOLEAN", "INTEGER"], ["e", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "C"]>>, "C")
add_call_chain(<<C>>)
less_than
add_call_chain(<<A,INTEGER,a,c,d,e>>)
add_call_chain(<<D,d,a,D,e,D,e>>)
add_call_chain(<<C,D,a>>)
add_attribute("c", "c", "BOOLEAN")
int_value (45)
int_value (14)
type_check
add_query("D", "INTEGER", <<["a", "A"], ["C", "c"], ["B", "BOOLEAN"], ["c", "b"], ["B", "INTEGER"], ["C", "INTEGER"], ["B", "INTEGER"]>>, "B")
disjunction
add_attribute("A", "c", "BOOLEAN")
int_value (32)
add_attribute("e", "A", "INTEGER")
bool_value (false)
add_command("C", "B", <<["a", "BOOLEAN"], ["B", "INTEGER"], ["B", "b"]>>)
add_query("b", "BOOLEAN", <<["d", "B"], ["C", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["B", "INTEGER"]>>, "C")
logical_negation
greater_than
add_call_chain(<<INTEGER,b,C,b>>)
add_call_chain(<<BOOLEAN,INTEGER,A,d,D,D>>)
logical_negation
add_attribute("b", "D", "BOOLEAN")
add_call_chain(<<c,c,A>>)
add_call_chain(<<d,A,d,b,C,a,INTEGER,d,b>>)
generate_java_code
type_check
add_call_chain(<<A,BOOLEAN,A,C>>)
add_class(a)
add_attribute("D", "b", "BOOLEAN")
add_call_chain(<<INTEGER,A,B,B>>)
int_value (9)
generate_java_code
add_class(BOOLEAN)
add_command("b", "a", <<["c", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["b", "D"], ["C", "INTEGER"]>>)
generate_java_code
add_query("a", "INTEGER", <<["INTEGER", "A"], ["e", "INTEGER"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["e", "c"]>>, "C")
logical_negation
logical_negation
modulo
add_command("b", "C", <<["b", "b"], ["b", "BOOLEAN"], ["c", "INTEGER"], ["c", "BOOLEAN"], ["a", "BOOLEAN"]>>)
add_query("A", "b", <<["e", "INTEGER"], ["d", "INTEGER"], ["d", "INTEGER"], ["c", "BOOLEAN"], ["D", "INTEGER"]>>, "A")
type_check
add_attribute("a", "b", "INTEGER")
add_attribute("b", "d", "INTEGER")
add_class(c)
subtraction
add_call_chain(<<A,D,c,c,B>>)
add_query("D", "b", <<["d", "BOOLEAN"]>>, "e")
add_command("a", "BOOLEAN", <<["b", "BOOLEAN"], ["B", "D"], ["C", "C"], ["B", "INTEGER"]>>)
type_check
add_attribute("A", "C", "d")
add_attribute("d", "d", "BOOLEAN")
add_call_chain(<<C,INTEGER,A,C,D,e,D,e,C>>)
numerical_negation
logical_negation
multiplication
int_value (49)
int_value (7)
add_attribute("BOOLEAN", "b", "INTEGER")
add_call_chain(<<e,C,A,B,D,B,b,B>>)
bool_value (false)
int_value (30)
add_class(e)
add_call_chain(<<b,b,BOOLEAN,d,b,C,D,c>>)
add_call_chain(<<B,D,B,c,b,INTEGER,e>>)
add_attribute("e", "b", "INTEGER")
add_attribute("b", "C", "INTEGER")
add_call_chain(<<C,A,BOOLEAN,D,INTEGER,b,B>>)
add_query("d", "d", <<["c", "D"], ["c", "d"], ["D", "BOOLEAN"], ["e", "INTEGER"], ["b", "d"]>>, "a")
add_call_chain(<<D,c,A,A,B,d,b>>)
add_class(A)
add_class(C)
add_command("d", "c", <<["B", "INTEGER"], ["c", "INTEGER"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["D", "INTEGER"]>>)
type_check
numerical_negation
add_query("C", "A", <<["e", "INTEGER"], ["C", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "D"]>>, "C")
conjunction
generate_java_code
add_command("C", "INTEGER", <<["C", "INTEGER"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["A", "d"], ["A", "INTEGER"], ["d", "c"]>>)
add_query("D", "a", <<["D", "INTEGER"], ["B", "A"], ["INTEGER", "BOOLEAN"], ["D", "INTEGER"], ["c", "a"], ["C", "INTEGER"], ["a", "BOOLEAN"], ["e", "INTEGER"]>>, "A")
generate_java_code
numerical_negation
add_attribute("B", "c", "A")
add_attribute("INTEGER", "D", "INTEGER")
add_command("b", "d", <<["D", "BOOLEAN"]>>)
add_call_chain(<<D,A>>)
numerical_negation
conjunction
add_call_chain(<<C,c,e,C,c>>)
multiplication
int_value (38)
int_value (43)
greater_than
add_attribute("b", "e", "c")
add_call_chain(<<c,INTEGER,C,c,d>>)
bool_value (false)
add_class(B)
bool_value (true)
type_check
add_command("a", "a", <<["a", "e"], ["A", "BOOLEAN"], ["D", "INTEGER"], ["BOOLEAN", "INTEGER"], ["a", "BOOLEAN"], ["b", "INTEGER"], ["D", "c"], ["D", "INTEGER"], ["c", "C"]>>)
generate_java_code
greater_than
numerical_negation
add_call_chain(<<B,D,d,a,D>>)
add_command("e", "C", <<["INTEGER", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
add_class(A)
quotient
add_call_chain(<<a,B>>)
add_call_chain(<<C,b,e>>)
numerical_negation
numerical_negation
add_query("c", "B", <<["e", "INTEGER"], ["c", "INTEGER"], ["D", "INTEGER"], ["e", "BOOLEAN"], ["B", "e"], ["c", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["a", "INTEGER"], ["d", "c"]>>, "C")
int_value (5)
type_check
add_command("c", "D", <<["e", "D"], ["BOOLEAN", "A"], ["INTEGER", "BOOLEAN"]>>)
add_call_chain(<<A,b,D>>)
int_value (45)
logical_negation
generate_java_code
disjunction
logical_negation
bool_value (true)
add_call_chain(<<d,A,A,D,a,c>>)
type_check
add_command("d", "c", <<["c", "INTEGER"], ["e", "INTEGER"], ["c", "INTEGER"], ["e", "INTEGER"], ["a", "BOOLEAN"], ["e", "D"]>>)
int_value (47)
add_attribute("e", "B", "BOOLEAN")
add_call_chain(<<d>>)
type_check
bool_value (false)
