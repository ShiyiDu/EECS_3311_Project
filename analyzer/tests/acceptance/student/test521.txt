generate_java_code
add_attribute("A", "C", "BOOLEAN")
add_command("D", "C", <<["e", "BOOLEAN"], ["B", "C"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "b"], ["c", "d"], ["C", "c"], ["e", "BOOLEAN"]>>)
int_value (36)
add_attribute("a", "e", "INTEGER")
add_call_chain(<<d,d,B,D>>)
add_command("D", "c", <<["A", "INTEGER"], ["c", "INTEGER"], ["C", "INTEGER"], ["a", "a"], ["e", "INTEGER"], ["B", "b"]>>)
add_attribute("B", "INTEGER", "INTEGER")
less_than
int_value (16)
generate_java_code
add_call_chain(<<c,D,d,d,INTEGER,e,A>>)
bool_value (true)
add_attribute("D", "d", "b")
add_call_chain(<<A,e,A,C,c,C,A,D>>)
bool_value (true)
numerical_negation
subtraction
add_call_chain(<<c,C,a,D,C,a,c>>)
disjunction
int_value (38)
add_query("c", "a", <<["BOOLEAN", "BOOLEAN"], ["a", "D"], ["A", "D"], ["b", "e"], ["D", "BOOLEAN"], ["c", "e"], ["b", "B"], ["D", "INTEGER"]>>, "e")
numerical_negation
add_call_chain(<<a,a,A>>)
add_command("C", "d", <<["C", "BOOLEAN"], ["c", "INTEGER"], ["c", "d"], ["D", "INTEGER"], ["e", "A"], ["B", "BOOLEAN"], ["B", "e"], ["INTEGER", "BOOLEAN"], ["B", "BOOLEAN"]>>)
int_value (8)
add_command("C", "C", <<["A", "a"], ["C", "BOOLEAN"], ["B", "A"], ["C", "INTEGER"], ["b", "BOOLEAN"], ["C", "A"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
logical_negation
addition
add_attribute("D", "d", "INTEGER")
add_command("A", "B", <<["a", "C"], ["e", "B"], ["B", "C"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["b", "c"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["B", "INTEGER"]>>)
add_call_chain(<<c,e,c,D>>)
numerical_negation
int_value (14)
add_command("b", "B", <<["e", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "INTEGER"], ["d", "INTEGER"], ["C", "c"], ["b", "INTEGER"], ["D", "e"], ["B", "INTEGER"]>>)
int_value (29)
add_call_chain(<<e>>)
add_call_chain(<<a,d,C,A>>)
add_call_chain(<<e,b,A,e,C,D,c,a>>)
add_attribute("BOOLEAN", "c", "INTEGER")
add_query("A", "A", <<["INTEGER", "c"], ["A", "BOOLEAN"], ["e", "BOOLEAN"], ["c", "D"], ["d", "B"], ["BOOLEAN", "c"], ["e", "C"], ["C", "D"], ["BOOLEAN", "INTEGER"]>>, "c")
addition
bool_value (true)
add_call_chain(<<d,C,a>>)
add_class(D)
add_call_chain(<<INTEGER,INTEGER,C,A,a,c>>)
add_class(b)
type_check
add_query("d", "INTEGER", <<["e", "e"]>>, "c")
numerical_negation
less_than
int_value (46)
add_attribute("e", "b", "INTEGER")
add_call_chain(<<a,A,C,d,A,A,D>>)
numerical_negation
type_check
type_check
generate_java_code
add_command("C", "B", <<["d", "INTEGER"], ["A", "c"], ["d", "b"], ["A", "BOOLEAN"], ["A", "BOOLEAN"]>>)
subtraction
bool_value (true)
less_than
generate_java_code
int_value (49)
bool_value (false)
add_call_chain(<<C,B,C,B,e,a,A>>)
generate_java_code
add_call_chain(<<D>>)
add_command("C", "D", <<["C", "b"], ["b", "INTEGER"], ["a", "INTEGER"]>>)
bool_value (false)
conjunction
add_call_chain(<<c,D,e,a,d,INTEGER,C,A>>)
int_value (13)
equals
add_command("d", "e", <<["c", "INTEGER"], ["B", "BOOLEAN"], ["A", "D"], ["A", "INTEGER"], ["d", "c"], ["B", "BOOLEAN"]>>)
logical_negation
modulo
logical_negation
generate_java_code
add_attribute("A", "e", "INTEGER")
bool_value (true)
add_call_chain(<<d,C,INTEGER,C,b,c,D,A>>)
add_call_chain(<<d,a,B,b,INTEGER,D,B>>)
add_call_chain(<<A>>)
greater_than
logical_negation
add_command("D", "C", <<["d", "BOOLEAN"], ["b", "INTEGER"], ["A", "INTEGER"], ["A", "B"], ["C", "INTEGER"], ["BOOLEAN", "B"]>>)
add_query("D", "d", <<["A", "INTEGER"], ["a", "INTEGER"], ["C", "INTEGER"], ["c", "INTEGER"], ["e", "BOOLEAN"], ["b", "INTEGER"], ["c", "INTEGER"]>>, "b")
add_class(C)
int_value (18)
add_attribute("A", "BOOLEAN", "INTEGER")
add_command("e", "d", <<["BOOLEAN", "INTEGER"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "d"], ["b", "B"], ["c", "b"], ["INTEGER", "e"]>>)
add_class(D)
add_class(A)
disjunction
addition
add_command("INTEGER", "d", <<["b", "BOOLEAN"], ["b", "C"], ["BOOLEAN", "INTEGER"], ["d", "B"], ["c", "a"]>>)
add_call_chain(<<c,D,B,a,BOOLEAN>>)
bool_value (false)
bool_value (false)
bool_value (false)
logical_negation
conjunction
numerical_negation
add_attribute("A", "BOOLEAN", "INTEGER")
add_query("b", "A", <<["b", "INTEGER"], ["A", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "d"]>>, "C")
add_call_chain(<<D,A,C,C,e>>)
add_command("A", "c", <<["BOOLEAN", "INTEGER"], ["D", "INTEGER"]>>)
int_value (41)
add_call_chain(<<C,A,C,d,C>>)
int_value (14)
add_call_chain(<<d,A,A,A,C,b,c,e>>)
generate_java_code
add_call_chain(<<d>>)
add_command("A", "D", <<["b", "BOOLEAN"], ["a", "A"], ["B", "B"], ["c", "d"], ["d", "INTEGER"], ["e", "BOOLEAN"], ["d", "BOOLEAN"]>>)
logical_negation
add_attribute("INTEGER", "d", "e")
type_check
add_attribute("D", "BOOLEAN", "e")
add_query("d", "e", <<["c", "B"], ["b", "INTEGER"], ["c", "d"], ["BOOLEAN", "INTEGER"], ["B", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "INTEGER"]>>, "B")
add_attribute("d", "a", "BOOLEAN")
add_attribute("C", "c", "c")
add_call_chain(<<A,b,INTEGER,d,B,C,BOOLEAN,C,INTEGER>>)
logical_negation
int_value (26)
add_command("INTEGER", "c", <<["C", "d"], ["D", "INTEGER"], ["d", "B"], ["d", "BOOLEAN"], ["a", "INTEGER"], ["B", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "B"]>>)
add_call_chain(<<b,BOOLEAN,c,d,BOOLEAN,c,b,e>>)
numerical_negation
add_class(b)
logical_negation
type_check
bool_value (true)
generate_java_code
modulo
equals
add_call_chain(<<C,e,D,A,D,e,c,BOOLEAN,D>>)
int_value (46)
generate_java_code
int_value (36)
bool_value (false)
add_query("D", "D", <<["e", "B"], ["c", "INTEGER"], ["B", "BOOLEAN"]>>, "B")
quotient
add_query("b", "e", <<["a", "B"], ["B", "INTEGER"], ["b", "BOOLEAN"], ["D", "BOOLEAN"]>>, "c")
add_query("B", "D", <<["e", "INTEGER"], ["A", "B"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["a", "BOOLEAN"]>>, "C")
bool_value (true)
numerical_negation
add_query("e", "D", <<["INTEGER", "INTEGER"]>>, "d")
int_value (22)
add_attribute("d", "A", "INTEGER")
add_class(INTEGER)
conjunction
numerical_negation
equals
add_call_chain(<<a,A,C,C,C,d,B,d,INTEGER>>)
add_call_chain(<<b,B,b,d,INTEGER,B>>)
add_attribute("d", "b", "d")
add_query("C", "e", <<["D", "INTEGER"], ["b", "BOOLEAN"], ["c", "BOOLEAN"]>>, "C")
numerical_negation
equals
numerical_negation
add_call_chain(<<C,B>>)
int_value (30)
int_value (37)
add_query("a", "C", <<["C", "BOOLEAN"], ["a", "e"], ["INTEGER", "A"]>>, "C")
add_call_chain(<<d,B,A,D>>)
add_attribute("A", "D", "INTEGER")
add_command("d", "c", <<["D", "INTEGER"], ["c", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "INTEGER"], ["a", "C"], ["C", "BOOLEAN"]>>)
int_value (45)
add_call_chain(<<a,b,BOOLEAN,A,c,d>>)
add_attribute("e", "B", "BOOLEAN")
generate_java_code
modulo
modulo
generate_java_code
add_query("e", "a", <<["b", "D"], ["B", "BOOLEAN"], ["B", "INTEGER"], ["D", "INTEGER"], ["A", "BOOLEAN"]>>, "d")
add_attribute("C", "INTEGER", "a")
add_call_chain(<<d,c,e>>)
generate_java_code
add_attribute("D", "C", "e")
int_value (4)
type_check
add_call_chain(<<BOOLEAN,D,c,BOOLEAN>>)
add_call_chain(<<B>>)
add_query("D", "INTEGER", <<["A", "b"], ["A", "A"], ["e", "INTEGER"]>>, "b")
disjunction
add_call_chain(<<A,C,e,BOOLEAN,d,A,D,A,A>>)
add_call_chain(<<C,a,D,d,D,b,D,a,A>>)
add_attribute("BOOLEAN", "d", "INTEGER")
bool_value (false)
add_call_chain(<<B,a>>)
add_class(a)
numerical_negation
int_value (31)
disjunction
logical_negation
logical_negation
add_class(c)
add_attribute("B", "C", "BOOLEAN")
int_value (12)
numerical_negation
add_command("A", "e", <<["D", "BOOLEAN"], ["A", "INTEGER"], ["a", "C"], ["d", "BOOLEAN"], ["B", "a"], ["d", "BOOLEAN"], ["c", "BOOLEAN"], ["b", "INTEGER"], ["D", "BOOLEAN"]>>)
greater_than
bool_value (false)
type_check
bool_value (true)
numerical_negation
add_call_chain(<<b>>)
add_command("INTEGER", "d", <<["A", "BOOLEAN"], ["d", "C"], ["C", "a"], ["b", "e"], ["D", "INTEGER"]>>)
add_attribute("D", "A", "BOOLEAN")
disjunction
int_value (35)
add_class(a)
add_query("a", "D", <<["C", "INTEGER"], ["C", "BOOLEAN"], ["C", "C"]>>, "d")
greater_than
conjunction
logical_negation
subtraction
add_call_chain(<<a,C,BOOLEAN>>)
modulo
generate_java_code
add_call_chain(<<D,BOOLEAN,b,b,d>>)
int_value (8)
add_call_chain(<<D,d,d,b>>)
add_call_chain(<<C,d,A,C>>)
int_value (23)
add_command("a", "D", <<["A", "BOOLEAN"], ["B", "INTEGER"], ["C", "BOOLEAN"], ["a", "INTEGER"], ["c", "INTEGER"], ["e", "BOOLEAN"], ["B", "INTEGER"], ["C", "INTEGER"]>>)
add_attribute("C", "a", "B")
add_call_chain(<<BOOLEAN>>)
add_call_chain(<<B,b,C,INTEGER,C>>)
add_call_chain(<<D,BOOLEAN,d,c,b,B,A,c,d>>)
numerical_negation
add_query("d", "A", <<["D", "INTEGER"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["C", "INTEGER"], ["D", "a"]>>, "D")
int_value (11)
add_class(BOOLEAN)
add_call_chain(<<B,d>>)
subtraction
type_check
add_call_chain(<<a,e,b,D,A,B,e,BOOLEAN,b>>)
add_call_chain(<<a,e,BOOLEAN>>)
add_call_chain(<<c,e,A>>)
add_call_chain(<<A,D,BOOLEAN>>)
add_command("BOOLEAN", "C", <<["c", "A"], ["A", "BOOLEAN"], ["a", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>)
bool_value (false)
add_query("c", "B", <<["a", "C"], ["B", "INTEGER"], ["C", "INTEGER"], ["C", "D"], ["c", "D"], ["B", "INTEGER"], ["D", "c"], ["B", "BOOLEAN"]>>, "BOOLEAN")
logical_negation
add_command("c", "D", <<["A", "BOOLEAN"]>>)
add_query("A", "e", <<["INTEGER", "D"], ["a", "INTEGER"], ["e", "INTEGER"], ["b", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["C", "d"]>>, "a")
quotient
add_command("C", "c", <<["c", "INTEGER"], ["A", "BOOLEAN"], ["b", "a"], ["d", "BOOLEAN"], ["c", "BOOLEAN"], ["e", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["INTEGER", "d"], ["d", "A"]>>)
numerical_negation
add_attribute("d", "a", "d")
add_query("BOOLEAN", "D", <<["A", "INTEGER"], ["e", "INTEGER"], ["C", "INTEGER"], ["B", "C"]>>, "D")
quotient
