int_value (16)
add_attribute("D", "c", "BOOLEAN")
bool_value (false)
add_attribute("c", "b", "BOOLEAN")
quotient
add_attribute("INTEGER", "d", "b")
add_call_chain(<<C>>)
add_command("c", "b", <<["b", "d"]>>)
generate_java_code
add_attribute("A", "B", "INTEGER")
logical_negation
add_attribute("C", "e", "BOOLEAN")
add_class(d)
disjunction
add_call_chain(<<C,B,BOOLEAN>>)
int_value (44)
add_command("e", "a", <<["INTEGER", "INTEGER"], ["a", "INTEGER"], ["INTEGER", "INTEGER"], ["B", "INTEGER"]>>)
generate_java_code
numerical_negation
add_query("A", "C", <<["a", "D"], ["C", "e"], ["a", "BOOLEAN"], ["b", "A"], ["c", "C"], ["A", "INTEGER"], ["INTEGER", "INTEGER"], ["A", "INTEGER"]>>, "B")
logical_negation
add_query("BOOLEAN", "e", <<["c", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["a", "INTEGER"], ["B", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>, "BOOLEAN")
add_command("a", "A", <<["d", "BOOLEAN"], ["C", "INTEGER"], ["d", "BOOLEAN"], ["a", "D"], ["C", "INTEGER"], ["A", "INTEGER"]>>)
generate_java_code
equals
add_call_chain(<<B,A,C>>)
bool_value (false)
add_query("c", "BOOLEAN", <<["D", "INTEGER"], ["C", "BOOLEAN"], ["e", "d"], ["BOOLEAN", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "INTEGER"], ["B", "D"]>>, "e")
type_check
add_call_chain(<<c,D,A,C>>)
add_call_chain(<<a,A,C,a>>)
add_attribute("a", "B", "BOOLEAN")
add_attribute("a", "D", "B")
conjunction
add_call_chain(<<A,A,e,A,c>>)
bool_value (false)
greater_than
add_call_chain(<<C,B,e,D,C,c,B,d>>)
equals
add_call_chain(<<INTEGER,A>>)
disjunction
less_than
add_class(B)
add_command("c", "B", <<["c", "INTEGER"], ["b", "INTEGER"]>>)
type_check
add_call_chain(<<D,C,B>>)
add_query("a", "b", <<["d", "INTEGER"], ["d", "B"], ["c", "BOOLEAN"], ["d", "C"], ["b", "BOOLEAN"], ["D", "A"], ["d", "INTEGER"], ["A", "INTEGER"]>>, "B")
add_query("e", "BOOLEAN", <<["C", "INTEGER"], ["e", "INTEGER"], ["D", "INTEGER"], ["b", "INTEGER"], ["B", "INTEGER"]>>, "c")
add_command("D", "D", <<["C", "a"]>>)
add_attribute("a", "D", "C")
int_value (14)
add_command("C", "e", <<["D", "B"], ["C", "e"], ["b", "BOOLEAN"], ["b", "BOOLEAN"], ["e", "b"], ["e", "INTEGER"]>>)
add_attribute("e", "b", "D")
numerical_negation
add_attribute("d", "B", "B")
disjunction
add_query("b", "B", <<["C", "INTEGER"], ["B", "c"], ["b", "INTEGER"]>>, "d")
add_call_chain(<<A,A,d,a,B,b,e>>)
add_attribute("D", "D", "BOOLEAN")
logical_negation
add_class(B)
int_value (23)
add_class(BOOLEAN)
disjunction
add_command("b", "e", <<["BOOLEAN", "INTEGER"], ["D", "INTEGER"], ["c", "BOOLEAN"], ["a", "BOOLEAN"]>>)
logical_negation
bool_value (false)
add_command("B", "D", <<["a", "e"], ["C", "INTEGER"], ["d", "BOOLEAN"], ["INTEGER", "INTEGER"], ["D", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["b", "BOOLEAN"]>>)
add_call_chain(<<C,B,A,BOOLEAN,B>>)
add_command("b", "C", <<["BOOLEAN", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "d"], ["d", "INTEGER"], ["d", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "b"], ["B", "INTEGER"]>>)
add_class(e)
numerical_negation
multiplication
int_value (16)
type_check
int_value (20)
bool_value (true)
add_attribute("e", "B", "a")
add_call_chain(<<D,D,BOOLEAN,e>>)
add_call_chain(<<B>>)
numerical_negation
add_call_chain(<<C,a>>)
int_value (9)
add_call_chain(<<INTEGER,A,C,B,A,e,c,B,a>>)
add_attribute("d", "e", "BOOLEAN")
logical_negation
int_value (5)
add_call_chain(<<a>>)
int_value (20)
add_attribute("C", "a", "INTEGER")
generate_java_code
add_call_chain(<<C,A,e,A,b,a,D,INTEGER>>)
disjunction
add_query("D", "d", <<["D", "d"], ["INTEGER", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["B", "b"], ["A", "INTEGER"], ["e", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>, "B")
quotient
add_attribute("b", "BOOLEAN", "BOOLEAN")
add_query("d", "e", <<["BOOLEAN", "b"], ["B", "INTEGER"], ["e", "INTEGER"], ["e", "INTEGER"]>>, "INTEGER")
add_command("b", "e", <<["D", "BOOLEAN"], ["A", "INTEGER"]>>)
bool_value (true)
logical_negation
logical_negation
less_than
add_command("b", "b", <<["B", "INTEGER"], ["C", "INTEGER"], ["b", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["A", "INTEGER"]>>)
bool_value (false)
bool_value (false)
type_check
add_call_chain(<<A>>)
add_call_chain(<<INTEGER,d,b,A,c,c,B>>)
add_command("A", "INTEGER", <<["A", "BOOLEAN"], ["A", "B"], ["e", "INTEGER"]>>)
logical_negation
disjunction
add_command("D", "c", <<["B", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "INTEGER"], ["B", "c"], ["INTEGER", "INTEGER"], ["e", "C"]>>)
logical_negation
add_call_chain(<<d,C,A,INTEGER,a,A,a>>)
add_call_chain(<<a,e,a,D,a,A,a,INTEGER,D>>)
add_command("A", "b", <<["D", "INTEGER"], ["a", "INTEGER"], ["d", "B"]>>)
int_value (25)
int_value (44)
add_command("D", "e", <<["A", "BOOLEAN"], ["c", "d"], ["BOOLEAN", "INTEGER"], ["b", "INTEGER"]>>)
int_value (44)
add_attribute("d", "b", "INTEGER")
add_class(A)
type_check
numerical_negation
type_check
add_query("a", "a", <<["d", "INTEGER"]>>, "D")
add_call_chain(<<e,A,d,D,B,INTEGER>>)
numerical_negation
bool_value (true)
type_check
add_command("e", "D", <<["BOOLEAN", "D"], ["d", "INTEGER"], ["b", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["b", "a"]>>)
numerical_negation
type_check
type_check
disjunction
logical_negation
add_class(INTEGER)
bool_value (true)
add_attribute("D", "b", "b")
add_command("b", "e", <<["A", "BOOLEAN"], ["A", "b"], ["A", "INTEGER"], ["b", "INTEGER"], ["e", "INTEGER"], ["B", "INTEGER"], ["e", "b"]>>)
int_value (39)
add_command("D", "A", <<["e", "A"]>>)
generate_java_code
add_call_chain(<<C,e,b,B,BOOLEAN,INTEGER,BOOLEAN,b>>)
subtraction
int_value (34)
int_value (49)
bool_value (true)
add_call_chain(<<a,B,C,b,B>>)
add_call_chain(<<C,A,b>>)
numerical_negation
numerical_negation
disjunction
add_attribute("A", "c", "BOOLEAN")
int_value (12)
addition
disjunction
add_query("C", "e", <<["D", "BOOLEAN"], ["B", "INTEGER"], ["INTEGER", "e"], ["b", "BOOLEAN"], ["A", "B"], ["C", "D"], ["D", "C"], ["D", "INTEGER"], ["D", "BOOLEAN"]>>, "c")
add_query("A", "d", <<["b", "BOOLEAN"], ["b", "INTEGER"], ["e", "BOOLEAN"]>>, "B")
type_check
add_query("D", "D", <<["A", "e"], ["A", "BOOLEAN"], ["C", "D"], ["A", "INTEGER"], ["b", "INTEGER"], ["B", "BOOLEAN"]>>, "D")
add_call_chain(<<d>>)
add_query("A", "e", <<["a", "BOOLEAN"], ["e", "C"]>>, "BOOLEAN")
int_value (14)
add_query("d", "c", <<["C", "C"], ["b", "INTEGER"], ["b", "INTEGER"], ["e", "INTEGER"]>>, "B")
int_value (13)
add_query("a", "D", <<["A", "BOOLEAN"], ["C", "e"], ["D", "b"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["d", "INTEGER"], ["a", "BOOLEAN"]>>, "c")
int_value (11)
logical_negation
type_check
generate_java_code
multiplication
conjunction
bool_value (false)
add_call_chain(<<b>>)
add_call_chain(<<BOOLEAN,B,A,e,A,d>>)
add_call_chain(<<A,a,INTEGER,INTEGER,B>>)
add_call_chain(<<e,c,C,d,d,a>>)
add_query("c", "A", <<["A", "BOOLEAN"]>>, "C")
add_class(BOOLEAN)
addition
int_value (28)
add_command("D", "BOOLEAN", <<["b", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "INTEGER"], ["a", "BOOLEAN"]>>)
add_attribute("INTEGER", "C", "BOOLEAN")
int_value (40)
numerical_negation
numerical_negation
add_call_chain(<<C,b>>)
logical_negation
add_call_chain(<<a,c>>)
add_query("d", "e", <<["D", "e"], ["A", "INTEGER"], ["b", "A"], ["B", "D"], ["c", "BOOLEAN"], ["D", "INTEGER"], ["e", "c"]>>, "c")
numerical_negation
bool_value (false)
numerical_negation
int_value (5)
add_command("C", "D", <<["c", "BOOLEAN"], ["C", "b"], ["INTEGER", "INTEGER"], ["C", "D"], ["B", "d"]>>)
numerical_negation
add_command("e", "A", <<["A", "INTEGER"], ["C", "BOOLEAN"]>>)
add_command("a", "INTEGER", <<["D", "BOOLEAN"], ["b", "BOOLEAN"]>>)
add_command("e", "e", <<["e", "BOOLEAN"], ["c", "INTEGER"], ["c", "B"], ["B", "A"], ["c", "INTEGER"], ["A", "B"], ["d", "INTEGER"]>>)
type_check
add_call_chain(<<b,B,BOOLEAN,B,A,C>>)
add_attribute("A", "b", "BOOLEAN")
add_call_chain(<<c,BOOLEAN>>)
add_query("C", "A", <<["C", "INTEGER"], ["d", "BOOLEAN"]>>, "BOOLEAN")
bool_value (true)
add_attribute("C", "a", "BOOLEAN")
add_class(B)
add_class(a)
add_call_chain(<<B,C,D,A,a,B>>)
add_command("d", "D", <<["INTEGER", "INTEGER"], ["INTEGER", "BOOLEAN"], ["D", "e"], ["C", "INTEGER"]>>)
add_attribute("A", "d", "BOOLEAN")
add_query("b", "b", <<["b", "BOOLEAN"]>>, "d")
add_call_chain(<<e>>)
add_class(e)
type_check
int_value (38)
logical_negation
add_attribute("C", "A", "A")
disjunction
int_value (11)
add_class(A)
logical_negation
conjunction
logical_negation
add_query("C", "A", <<["INTEGER", "BOOLEAN"], ["c", "d"], ["e", "c"], ["B", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["c", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "A"]>>, "B")
add_attribute("A", "c", "A")
add_call_chain(<<C,a,b,A,e,e,A>>)
bool_value (true)
greater_than
add_call_chain(<<D,e,A,A,A>>)
add_call_chain(<<a>>)
add_query("d", "b", <<["e", "BOOLEAN"], ["A", "INTEGER"], ["e", "BOOLEAN"], ["B", "INTEGER"], ["d", "BOOLEAN"], ["b", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "b"]>>, "a")
bool_value (true)
equals
add_attribute("C", "D", "INTEGER")
add_attribute("a", "A", "BOOLEAN")
add_call_chain(<<c,BOOLEAN,B,C,c,C,a,a,d>>)
disjunction
