add_attribute("c", "b", "INTEGER")
add_attribute("e", "B", "d")
add_attribute("b", "b", "e")
add_command("c", "A", <<["D", "BOOLEAN"], ["C", "INTEGER"], ["b", "BOOLEAN"], ["A", "INTEGER"], ["B", "e"], ["a", "BOOLEAN"], ["b", "e"], ["D", "INTEGER"]>>)
add_class(c)
add_call_chain(<<A,D,A,A,D,A,b,e>>)
add_attribute("D", "e", "INTEGER")
add_command("a", "d", <<["A", "BOOLEAN"], ["A", "INTEGER"]>>)
add_query("BOOLEAN", "b", <<["C", "BOOLEAN"]>>, "D")
add_class(A)
add_command("a", "c", <<["b", "BOOLEAN"], ["C", "e"], ["BOOLEAN", "BOOLEAN"], ["a", "d"], ["d", "INTEGER"], ["d", "INTEGER"], ["D", "BOOLEAN"], ["C", "INTEGER"]>>)
add_class(C)
type_check
add_class(INTEGER)
numerical_negation
add_call_chain(<<c,d,e,a,A,a>>)
add_query("INTEGER", "B", <<["C", "INTEGER"], ["B", "INTEGER"], ["b", "e"], ["b", "INTEGER"], ["d", "INTEGER"], ["a", "BOOLEAN"], ["C", "INTEGER"], ["D", "INTEGER"]>>, "c")
add_attribute("D", "e", "C")
add_query("D", "B", <<["INTEGER", "C"], ["b", "BOOLEAN"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "BOOLEAN"]>>, "b")
bool_value (false)
add_query("e", "b", <<["e", "BOOLEAN"], ["B", "b"], ["C", "INTEGER"]>>, "BOOLEAN")
logical_negation
addition
logical_negation
add_attribute("D", "d", "C")
logical_negation
add_command("A", "a", <<["B", "b"]>>)
bool_value (false)
add_attribute("D", "A", "BOOLEAN")
equals
add_command("C", "A", <<["c", "c"], ["e", "BOOLEAN"], ["B", "B"]>>)
int_value (30)
disjunction
add_query("b", "D", <<["A", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "INTEGER"], ["c", "INTEGER"], ["D", "BOOLEAN"]>>, "e")
add_call_chain(<<A,c,c>>)
equals
logical_negation
type_check
numerical_negation
generate_java_code
add_call_chain(<<D,B,D,C>>)
int_value (37)
add_call_chain(<<a,a>>)
int_value (25)
subtraction
add_command("c", "D", <<["B", "e"]>>)
conjunction
int_value (26)
type_check
logical_negation
add_command("d", "INTEGER", <<["D", "INTEGER"], ["B", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["D", "D"]>>)
numerical_negation
int_value (18)
logical_negation
add_call_chain(<<e>>)
less_than
add_query("BOOLEAN", "a", <<["e", "INTEGER"], ["A", "INTEGER"], ["C", "INTEGER"], ["a", "INTEGER"]>>, "C")
add_command("d", "D", <<["b", "d"], ["A", "e"], ["D", "BOOLEAN"]>>)
type_check
quotient
add_call_chain(<<e,B,c,B,d,b,b,B>>)
logical_negation
add_call_chain(<<e,A>>)
logical_negation
add_command("d", "A", <<["d", "C"], ["C", "e"]>>)
bool_value (false)
add_call_chain(<<C>>)
int_value (9)
bool_value (false)
generate_java_code
add_call_chain(<<e,b,INTEGER>>)
add_command("D", "C", <<["D", "INTEGER"], ["B", "BOOLEAN"], ["b", "D"], ["a", "c"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["e", "BOOLEAN"]>>)
conjunction
type_check
logical_negation
logical_negation
add_command("c", "B", <<["a", "b"], ["e", "b"], ["a", "INTEGER"], ["d", "BOOLEAN"], ["a", "INTEGER"]>>)
less_than
add_call_chain(<<A,d>>)
add_call_chain(<<C,a,C,e,B,C,d,a,e>>)
add_attribute("D", "c", "BOOLEAN")
add_call_chain(<<d,D,d,B,d,b,b,e,c>>)
add_command("D", "B", <<["c", "INTEGER"], ["a", "d"], ["b", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "INTEGER"], ["C", "C"], ["b", "e"]>>)
add_attribute("d", "B", "BOOLEAN")
numerical_negation
equals
numerical_negation
bool_value (true)
type_check
add_attribute("e", "b", "BOOLEAN")
add_class(b)
add_call_chain(<<D,C,b>>)
add_attribute("A", "a", "BOOLEAN")
add_call_chain(<<e,e,e,C>>)
numerical_negation
logical_negation
multiplication
add_attribute("B", "c", "BOOLEAN")
less_than
logical_negation
int_value (49)
add_call_chain(<<C,C,c>>)
bool_value (true)
add_call_chain(<<B,C,d,B,A,BOOLEAN,BOOLEAN,B,D>>)
generate_java_code
add_query("A", "C", <<["c", "BOOLEAN"], ["c", "BOOLEAN"], ["e", "A"], ["B", "A"]>>, "A")
less_than
multiplication
numerical_negation
int_value (2)
add_command("INTEGER", "D", <<["e", "BOOLEAN"], ["B", "D"], ["D", "d"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["A", "a"], ["B", "BOOLEAN"]>>)
add_call_chain(<<BOOLEAN>>)
logical_negation
add_call_chain(<<a,D,D,A,C,a,a>>)
add_attribute("e", "C", "BOOLEAN")
add_query("B", "a", <<["B", "BOOLEAN"], ["D", "D"]>>, "A")
add_command("B", "b", <<["BOOLEAN", "D"], ["a", "b"], ["b", "INTEGER"]>>)
generate_java_code
add_query("A", "b", <<["B", "INTEGER"]>>, "A")
add_attribute("c", "a", "INTEGER")
int_value (14)
bool_value (true)
generate_java_code
add_query("b", "e", <<["B", "BOOLEAN"]>>, "BOOLEAN")
type_check
bool_value (false)
int_value (26)
add_call_chain(<<d,B,A,d,D,d,C>>)
add_call_chain(<<BOOLEAN,c,C,e,INTEGER,A,c,A,B>>)
subtraction
numerical_negation
numerical_negation
add_query("C", "c", <<["A", "c"], ["b", "INTEGER"], ["e", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "C"], ["c", "INTEGER"], ["d", "INTEGER"], ["B", "a"]>>, "C")
add_call_chain(<<a,a,INTEGER,B,c,BOOLEAN>>)
logical_negation
add_query("d", "B", <<["INTEGER", "A"], ["d", "INTEGER"], ["B", "A"], ["BOOLEAN", "INTEGER"], ["D", "BOOLEAN"], ["A", "INTEGER"]>>, "A")
add_command("C", "BOOLEAN", <<["A", "BOOLEAN"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["C", "A"], ["B", "B"], ["e", "BOOLEAN"], ["c", "INTEGER"], ["C", "BOOLEAN"]>>)
int_value (17)
add_attribute("INTEGER", "C", "INTEGER")
add_call_chain(<<C,BOOLEAN,B,D,c,INTEGER,A,B>>)
add_command("d", "C", <<["a", "INTEGER"], ["d", "BOOLEAN"]>>)
add_command("b", "d", <<["a", "BOOLEAN"], ["d", "BOOLEAN"]>>)
add_attribute("e", "a", "BOOLEAN")
add_attribute("d", "C", "INTEGER")
numerical_negation
bool_value (false)
bool_value (false)
numerical_negation
generate_java_code
generate_java_code
add_class(C)
add_attribute("b", "e", "INTEGER")
add_query("A", "a", <<["C", "INTEGER"], ["d", "A"], ["BOOLEAN", "e"]>>, "B")
add_query("e", "D", <<["B", "a"], ["c", "INTEGER"], ["A", "INTEGER"], ["INTEGER", "d"], ["a", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["b", "INTEGER"], ["b", "BOOLEAN"]>>, "e")
logical_negation
add_command("A", "BOOLEAN", <<["a", "INTEGER"], ["b", "BOOLEAN"], ["a", "d"], ["INTEGER", "INTEGER"], ["B", "d"], ["d", "BOOLEAN"], ["d", "INTEGER"]>>)
type_check
add_call_chain(<<c,a,a,a,e,b,b,D>>)
int_value (49)
generate_java_code
add_call_chain(<<e,BOOLEAN,C,B,c,e>>)
bool_value (true)
generate_java_code
add_call_chain(<<d,INTEGER,D,a,A,D>>)
logical_negation
conjunction
logical_negation
add_call_chain(<<a,D,b>>)
generate_java_code
add_command("B", "c", <<["C", "INTEGER"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "INTEGER"]>>)
add_call_chain(<<b,A,C,A,D,A,b,a,c>>)
disjunction
add_attribute("e", "A", "INTEGER")
generate_java_code
add_call_chain(<<d>>)
add_command("B", "D", <<["b", "INTEGER"], ["e", "d"], ["c", "BOOLEAN"], ["C", "BOOLEAN"], ["INTEGER", "B"], ["a", "e"]>>)
add_attribute("e", "D", "D")
less_than
bool_value (true)
equals
multiplication
int_value (25)
add_call_chain(<<c,C,D,BOOLEAN,D,b,D,e>>)
add_attribute("a", "a", "BOOLEAN")
numerical_negation
add_query("a", "b", <<["A", "INTEGER"], ["B", "BOOLEAN"], ["C", "B"], ["B", "D"], ["c", "INTEGER"], ["e", "INTEGER"], ["A", "INTEGER"], ["b", "BOOLEAN"]>>, "A")
type_check
add_class(B)
add_call_chain(<<e,e,c,INTEGER,a>>)
logical_negation
numerical_negation
bool_value (false)
add_call_chain(<<A,C,d,B,e,B>>)
logical_negation
int_value (43)
logical_negation
disjunction
add_call_chain(<<d,e>>)
type_check
add_command("b", "B", <<["b", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "d"]>>)
type_check
generate_java_code
add_class(A)
int_value (39)
add_query("B", "e", <<["b", "INTEGER"], ["d", "INTEGER"]>>, "BOOLEAN")
add_attribute("A", "C", "INTEGER")
int_value (9)
add_call_chain(<<D>>)
