disjunction
add_attribute("d", "C", "BOOLEAN")
generate_java_code
generate_java_code
type_check
logical_negation
int_value (15)
int_value (40)
bool_value (false)
add_call_chain(<<c,D>>)
conjunction
numerical_negation
add_query("b", "d", <<["b", "BOOLEAN"]>>, "e")
add_command("B", "d", <<["d", "c"], ["a", "INTEGER"], ["d", "b"], ["c", "B"], ["A", "BOOLEAN"], ["c", "BOOLEAN"]>>)
generate_java_code
less_than
disjunction
logical_negation
add_attribute("e", "a", "BOOLEAN")
logical_negation
numerical_negation
int_value (49)
add_call_chain(<<B,A,a,D,C,d,b>>)
add_query("D", "a", <<["b", "c"], ["A", "INTEGER"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["C", "INTEGER"], ["c", "d"]>>, "C")
add_query("e", "C", <<["e", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["D", "BOOLEAN"]>>, "b")
add_query("e", "b", <<["D", "A"], ["B", "INTEGER"], ["D", "b"], ["e", "B"]>>, "D")
add_query("c", "B", <<["B", "BOOLEAN"], ["C", "INTEGER"], ["A", "INTEGER"]>>, "D")
add_query("c", "a", <<["a", "INTEGER"], ["INTEGER", "INTEGER"]>>, "A")
add_call_chain(<<B,B,B>>)
add_command("c", "d", <<["A", "INTEGER"], ["b", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["d", "INTEGER"], ["C", "c"]>>)
generate_java_code
add_attribute("e", "D", "BOOLEAN")
quotient
add_command("D", "D", <<["B", "INTEGER"], ["a", "BOOLEAN"], ["BOOLEAN", "B"], ["c", "e"], ["C", "A"], ["A", "BOOLEAN"]>>)
add_call_chain(<<A,d>>)
int_value (14)
logical_negation
int_value (24)
multiplication
numerical_negation
type_check
multiplication
generate_java_code
add_attribute("A", "B", "b")
add_query("a", "INTEGER", <<["d", "BOOLEAN"], ["e", "b"], ["D", "B"]>>, "b")
add_call_chain(<<d,e>>)
add_call_chain(<<A,a,B>>)
type_check
int_value (43)
add_class(D)
add_query("B", "C", <<["e", "BOOLEAN"], ["b", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["C", "c"], ["e", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "c"], ["INTEGER", "INTEGER"]>>, "d")
add_query("A", "INTEGER", <<["C", "BOOLEAN"], ["b", "INTEGER"], ["d", "INTEGER"], ["e", "BOOLEAN"], ["b", "INTEGER"], ["c", "a"], ["A", "BOOLEAN"], ["c", "B"]>>, "A")
int_value (49)
add_call_chain(<<b,b,A,d,c>>)
add_attribute("A", "B", "c")
logical_negation
add_query("b", "INTEGER", <<["d", "INTEGER"], ["d", "INTEGER"], ["A", "INTEGER"]>>, "D")
logical_negation
bool_value (true)
add_command("B", "A", <<["B", "INTEGER"], ["A", "BOOLEAN"]>>)
numerical_negation
type_check
add_call_chain(<<D,d>>)
add_attribute("A", "B", "d")
add_command("a", "B", <<["BOOLEAN", "D"], ["b", "INTEGER"], ["c", "B"], ["d", "d"], ["e", "BOOLEAN"], ["B", "INTEGER"]>>)
add_attribute("A", "B", "BOOLEAN")
logical_negation
add_attribute("c", "BOOLEAN", "BOOLEAN")
add_query("C", "a", <<["BOOLEAN", "INTEGER"], ["BOOLEAN", "INTEGER"], ["e", "BOOLEAN"], ["BOOLEAN", "e"], ["b", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "INTEGER"]>>, "b")
conjunction
add_query("e", "b", <<["B", "BOOLEAN"], ["D", "INTEGER"], ["e", "INTEGER"], ["e", "INTEGER"], ["b", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "INTEGER"], ["b", "BOOLEAN"], ["D", "BOOLEAN"]>>, "b")
add_call_chain(<<b>>)
add_attribute("A", "INTEGER", "INTEGER")
type_check
add_command("a", "INTEGER", <<["b", "C"], ["C", "INTEGER"], ["b", "BOOLEAN"]>>)
type_check
add_attribute("A", "B", "D")
bool_value (false)
bool_value (false)
add_class(c)
greater_than
add_command("C", "b", <<["D", "INTEGER"], ["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "BOOLEAN"]>>)
add_call_chain(<<A,BOOLEAN,c,D,a,b>>)
conjunction
add_call_chain(<<A,c>>)
type_check
multiplication
add_query("d", "b", <<["B", "INTEGER"], ["c", "INTEGER"], ["d", "d"], ["B", "c"], ["b", "INTEGER"]>>, "D")
add_class(c)
subtraction
add_call_chain(<<b,d,B>>)
generate_java_code
multiplication
add_attribute("d", "INTEGER", "INTEGER")
add_query("a", "INTEGER", <<["a", "e"], ["INTEGER", "INTEGER"], ["d", "INTEGER"], ["C", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["e", "INTEGER"]>>, "d")
add_class(e)
add_class(B)
add_command("e", "d", <<["d", "A"], ["e", "BOOLEAN"], ["e", "BOOLEAN"], ["INTEGER", "c"], ["b", "INTEGER"]>>)
bool_value (false)
numerical_negation
bool_value (false)
numerical_negation
generate_java_code
add_call_chain(<<b,A,BOOLEAN,BOOLEAN,B,C,B,b>>)
logical_negation
add_attribute("D", "a", "C")
disjunction
add_call_chain(<<C,C,B,B,d>>)
logical_negation
add_class(B)
generate_java_code
logical_negation
add_query("d", "D", <<["e", "BOOLEAN"], ["A", "A"]>>, "e")
int_value (42)
bool_value (true)
bool_value (false)
add_command("a", "b", <<["A", "INTEGER"], ["D", "b"], ["d", "BOOLEAN"], ["d", "INTEGER"], ["D", "c"]>>)
generate_java_code
add_call_chain(<<c,D,A,e,C,B,D,b>>)
add_query("d", "B", <<["b", "BOOLEAN"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["e", "INTEGER"], ["B", "d"], ["a", "INTEGER"], ["BOOLEAN", "c"], ["D", "e"]>>, "D")
add_call_chain(<<d,D,B,d,INTEGER,B>>)
add_command("A", "INTEGER", <<["c", "a"], ["b", "BOOLEAN"], ["d", "INTEGER"], ["c", "INTEGER"]>>)
bool_value (true)
add_call_chain(<<d,d,INTEGER,b,e,a,INTEGER>>)
int_value (27)
logical_negation
add_query("a", "B", <<["a", "INTEGER"], ["C", "D"], ["c", "BOOLEAN"], ["C", "d"], ["e", "BOOLEAN"], ["C", "INTEGER"]>>, "C")
disjunction
bool_value (false)
quotient
add_attribute("B", "B", "d")
numerical_negation
add_command("e", "A", <<["A", "e"], ["A", "b"], ["b", "BOOLEAN"], ["b", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "e"], ["a", "a"]>>)
numerical_negation
add_query("c", "B", <<["d", "c"], ["C", "d"]>>, "B")
add_command("a", "e", <<["e", "INTEGER"], ["a", "d"], ["b", "BOOLEAN"]>>)
add_command("C", "C", <<["a", "BOOLEAN"], ["e", "INTEGER"], ["D", "e"], ["d", "INTEGER"], ["C", "INTEGER"], ["b", "b"]>>)
int_value (13)
add_class(B)
add_call_chain(<<b,D,b,a,b,C>>)
add_query("b", "C", <<["B", "b"], ["a", "INTEGER"], ["C", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["c", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "a"], ["B", "c"], ["BOOLEAN", "e"]>>, "B")
add_class(d)
add_call_chain(<<d,a,a,b,e>>)
bool_value (true)
add_query("A", "e", <<["c", "BOOLEAN"], ["d", "BOOLEAN"]>>, "BOOLEAN")
type_check
bool_value (true)
int_value (11)
bool_value (true)
add_call_chain(<<BOOLEAN,A,D,b>>)
bool_value (true)
add_call_chain(<<A,B,A,b>>)
add_call_chain(<<A,d,a>>)
conjunction
multiplication
generate_java_code
greater_than
equals
add_command("e", "C", <<["b", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "e"], ["a", "INTEGER"], ["B", "a"], ["INTEGER", "d"], ["c", "BOOLEAN"]>>)
add_query("C", "B", <<["C", "INTEGER"], ["D", "BOOLEAN"], ["d", "c"], ["A", "INTEGER"], ["BOOLEAN", "INTEGER"], ["d", "d"], ["a", "BOOLEAN"], ["d", "INTEGER"], ["C", "INTEGER"]>>, "a")
logical_negation
add_call_chain(<<b,b,d,C>>)
add_query("A", "C", <<["BOOLEAN", "B"]>>, "b")
modulo
add_call_chain(<<D,a,INTEGER,INTEGER,b,A,D,c>>)
add_call_chain(<<C,c,D,A,C,b,B>>)
conjunction
add_command("A", "b", <<["B", "BOOLEAN"], ["C", "INTEGER"], ["d", "BOOLEAN"], ["D", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "INTEGER"], ["c", "D"], ["c", "INTEGER"]>>)
logical_negation
add_call_chain(<<a,e,c,e>>)
add_query("b", "a", <<["e", "c"], ["A", "INTEGER"], ["INTEGER", "INTEGER"], ["e", "INTEGER"], ["BOOLEAN", "A"], ["d", "BOOLEAN"]>>, "c")
add_query("c", "B", <<["D", "BOOLEAN"], ["A", "INTEGER"], ["d", "d"], ["D", "INTEGER"], ["A", "INTEGER"]>>, "D")
disjunction
add_call_chain(<<D>>)
type_check
add_call_chain(<<C,INTEGER,B,D,b>>)
greater_than
add_call_chain(<<a,C,A,C,A,D,C,b,a>>)
addition
generate_java_code
multiplication
bool_value (false)
add_call_chain(<<A,INTEGER,A,c,c,INTEGER,d>>)
bool_value (true)
add_attribute("c", "d", "BOOLEAN")
add_class(d)
add_attribute("D", "C", "BOOLEAN")
logical_negation
add_attribute("d", "D", "INTEGER")
bool_value (true)
add_command("C", "C", <<["BOOLEAN", "D"], ["B", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["e", "BOOLEAN"], ["d", "INTEGER"], ["D", "BOOLEAN"]>>)
add_command("a", "b", <<["B", "INTEGER"], ["D", "BOOLEAN"], ["b", "INTEGER"], ["c", "B"], ["A", "e"], ["e", "BOOLEAN"], ["e", "b"], ["D", "BOOLEAN"], ["e", "BOOLEAN"]>>)
add_command("C", "D", <<["BOOLEAN", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "INTEGER"]>>)
int_value (5)
less_than
add_call_chain(<<c,BOOLEAN,c,d,d,b>>)
add_query("D", "b", <<["b", "BOOLEAN"], ["C", "BOOLEAN"]>>, "d")
logical_negation
add_class(B)
generate_java_code
bool_value (false)
add_attribute("D", "a", "BOOLEAN")
add_attribute("C", "A", "BOOLEAN")
add_attribute("c", "A", "BOOLEAN")
add_attribute("c", "d", "INTEGER")
bool_value (false)
