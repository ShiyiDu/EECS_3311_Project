bool_value (false)
bool_value (true)
add_attribute("INTEGER", "A", "INTEGER")
add_query("b", "B", <<["c", "INTEGER"], ["A", "A"], ["C", "INTEGER"], ["b", "BOOLEAN"], ["C", "INTEGER"], ["a", "INTEGER"]>>, "C")
bool_value (true)
logical_negation
numerical_negation
bool_value (false)
add_call_chain(<<d,A,b,C,a>>)
add_command("c", "c", <<["INTEGER", "INTEGER"]>>)
less_than
add_class(INTEGER)
add_query("c", "d", <<["d", "BOOLEAN"], ["b", "C"], ["A", "c"]>>, "e")
type_check
add_call_chain(<<C,B>>)
add_call_chain(<<e,C>>)
add_query("D", "b", <<["C", "INTEGER"], ["d", "BOOLEAN"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["e", "INTEGER"]>>, "a")
add_command("b", "c", <<["e", "INTEGER"]>>)
generate_java_code
logical_negation
add_attribute("d", "B", "d")
add_attribute("B", "a", "BOOLEAN")
logical_negation
bool_value (true)
subtraction
equals
type_check
add_command("d", "C", <<["a", "BOOLEAN"], ["d", "INTEGER"], ["D", "BOOLEAN"]>>)
add_call_chain(<<e,B,e,D>>)
type_check
add_attribute("D", "c", "INTEGER")
generate_java_code
int_value (13)
generate_java_code
add_call_chain(<<d,d,e,d,c>>)
int_value (3)
add_command("D", "B", <<["D", "INTEGER"], ["C", "B"], ["c", "e"], ["b", "D"], ["a", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "BOOLEAN"]>>)
generate_java_code
add_command("B", "a", <<["B", "d"], ["d", "d"], ["d", "INTEGER"], ["b", "INTEGER"], ["b", "BOOLEAN"]>>)
add_attribute("B", "C", "C")
int_value (6)
greater_than
add_query("b", "c", <<["BOOLEAN", "A"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["D", "INTEGER"], ["D", "INTEGER"], ["C", "BOOLEAN"]>>, "c")
int_value (3)
numerical_negation
bool_value (true)
logical_negation
add_attribute("d", "d", "BOOLEAN")
int_value (15)
add_call_chain(<<b,B>>)
quotient
greater_than
less_than
bool_value (false)
int_value (11)
type_check
bool_value (true)
add_call_chain(<<C,D,d,b>>)
add_command("a", "a", <<["a", "d"], ["c", "INTEGER"], ["B", "D"], ["C", "INTEGER"]>>)
logical_negation
add_attribute("d", "c", "C")
add_query("A", "C", <<["C", "INTEGER"], ["A", "INTEGER"]>>, "B")
bool_value (true)
less_than
add_query("B", "BOOLEAN", <<["d", "INTEGER"], ["C", "BOOLEAN"]>>, "b")
numerical_negation
type_check
add_command("INTEGER", "C", <<["INTEGER", "BOOLEAN"], ["d", "INTEGER"], ["d", "d"], ["c", "BOOLEAN"]>>)
add_attribute("a", "d", "INTEGER")
int_value (33)
bool_value (true)
add_call_chain(<<e,b,e,a,a,b,a,B>>)
bool_value (true)
add_call_chain(<<A,B,d,a>>)
bool_value (true)
logical_negation
logical_negation
generate_java_code
logical_negation
int_value (28)
add_call_chain(<<b>>)
add_query("e", "b", <<["e", "A"]>>, "b")
add_query("d", "A", <<["b", "B"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["C", "D"]>>, "b")
generate_java_code
add_call_chain(<<C,a,d,A,c>>)
add_attribute("C", "D", "e")
add_attribute("d", "A", "BOOLEAN")
logical_negation
add_attribute("B", "D", "B")
bool_value (false)
int_value (23)
logical_negation
add_query("A", "A", <<["d", "INTEGER"], ["b", "INTEGER"], ["e", "d"], ["d", "INTEGER"], ["a", "INTEGER"]>>, "c")
add_command("A", "c", <<["C", "INTEGER"], ["e", "BOOLEAN"], ["D", "INTEGER"]>>)
add_attribute("d", "a", "INTEGER")
add_call_chain(<<INTEGER,e,INTEGER,e>>)
add_call_chain(<<B,C,C>>)
logical_negation
disjunction
int_value (32)
add_command("B", "D", <<["D", "BOOLEAN"], ["d", "e"], ["d", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "INTEGER"], ["C", "INTEGER"], ["b", "D"], ["d", "b"]>>)
add_command("a", "c", <<["C", "D"], ["e", "D"], ["D", "c"]>>)
type_check
add_call_chain(<<INTEGER,B,INTEGER,B>>)
add_query("C", "B", <<["D", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>, "C")
bool_value (false)
numerical_negation
add_call_chain(<<INTEGER,b>>)
greater_than
generate_java_code
add_call_chain(<<c,BOOLEAN,a,c,D,BOOLEAN>>)
bool_value (false)
add_class(A)
disjunction
greater_than
equals
type_check
add_attribute("A", "B", "BOOLEAN")
add_call_chain(<<d,d,A,d>>)
add_query("e", "e", <<["D", "BOOLEAN"], ["C", "c"]>>, "A")
add_command("b", "INTEGER", <<["INTEGER", "INTEGER"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["e", "B"], ["A", "BOOLEAN"], ["a", "d"], ["a", "INTEGER"], ["BOOLEAN", "B"]>>)
add_call_chain(<<e>>)
generate_java_code
add_command("e", "B", <<["c", "INTEGER"], ["a", "BOOLEAN"], ["A", "INTEGER"]>>)
add_query("A", "C", <<["e", "INTEGER"], ["A", "INTEGER"], ["c", "b"], ["c", "INTEGER"]>>, "B")
less_than
add_query("C", "c", <<["a", "INTEGER"], ["C", "c"], ["e", "A"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "INTEGER"]>>, "BOOLEAN")
int_value (34)
add_call_chain(<<a,B,d,D,e,e,c>>)
add_attribute("A", "b", "BOOLEAN")
generate_java_code
add_command("D", "a", <<["D", "INTEGER"], ["A", "A"], ["e", "INTEGER"], ["INTEGER", "INTEGER"], ["A", "BOOLEAN"], ["B", "B"], ["BOOLEAN", "BOOLEAN"]>>)
numerical_negation
numerical_negation
add_call_chain(<<B,d,B,a,A,A>>)
quotient
generate_java_code
add_command("BOOLEAN", "e", <<["C", "b"]>>)
add_call_chain(<<D,c,e,B,BOOLEAN>>)
add_query("B", "B", <<["b", "C"], ["A", "INTEGER"], ["D", "INTEGER"], ["D", "a"], ["INTEGER", "INTEGER"]>>, "D")
add_call_chain(<<d,a,b,d,a,c,B>>)
multiplication
add_call_chain(<<a>>)
add_attribute("b", "e", "D")
add_query("e", "c", <<["c", "D"], ["D", "BOOLEAN"], ["c", "A"], ["B", "d"], ["e", "INTEGER"], ["B", "b"]>>, "c")
generate_java_code
logical_negation
add_call_chain(<<BOOLEAN,A,INTEGER,D,BOOLEAN,B,b,e,c>>)
bool_value (true)
numerical_negation
add_call_chain(<<D,A,a,c,D,A,b,e>>)
add_class(BOOLEAN)
add_command("INTEGER", "B", <<["C", "INTEGER"], ["A", "b"], ["BOOLEAN", "INTEGER"], ["A", "c"]>>)
add_class(B)
equals
numerical_negation
generate_java_code
bool_value (false)
add_call_chain(<<d,C,D>>)
conjunction
add_query("C", "a", <<["a", "a"], ["B", "BOOLEAN"], ["C", "INTEGER"], ["D", "BOOLEAN"]>>, "D")
generate_java_code
add_call_chain(<<e,c,c,A,d,a>>)
add_command("INTEGER", "a", <<["INTEGER", "a"], ["c", "a"], ["D", "a"], ["a", "a"], ["a", "INTEGER"], ["d", "INTEGER"], ["a", "INTEGER"]>>)
add_command("A", "e", <<["d", "e"], ["b", "INTEGER"], ["c", "c"], ["BOOLEAN", "BOOLEAN"]>>)
add_command("c", "c", <<["D", "C"], ["d", "BOOLEAN"], ["a", "b"]>>)
numerical_negation
add_call_chain(<<BOOLEAN,BOOLEAN,B,b>>)
add_call_chain(<<INTEGER,A,a,e,b,A,INTEGER,B,D>>)
add_attribute("d", "D", "BOOLEAN")
add_class(c)
logical_negation
logical_negation
add_attribute("B", "D", "A")
add_query("c", "b", <<["e", "D"], ["BOOLEAN", "BOOLEAN"], ["B", "D"], ["b", "INTEGER"], ["INTEGER", "C"], ["e", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "BOOLEAN"]>>, "B")
add_class(e)
numerical_negation
numerical_negation
add_command("d", "INTEGER", <<["B", "INTEGER"], ["b", "INTEGER"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "INTEGER"], ["e", "INTEGER"], ["e", "D"], ["b", "BOOLEAN"], ["c", "b"]>>)
add_class(A)
bool_value (true)
multiplication
disjunction
int_value (22)
bool_value (false)
modulo
type_check
add_attribute("d", "b", "BOOLEAN")
int_value (13)
add_command("C", "C", <<["B", "c"], ["d", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["D", "INTEGER"], ["e", "BOOLEAN"], ["a", "A"], ["c", "INTEGER"], ["A", "BOOLEAN"]>>)
add_call_chain(<<b,c,INTEGER,B,c,d,b,C>>)
add_command("BOOLEAN", "D", <<["B", "INTEGER"], ["D", "D"], ["a", "INTEGER"]>>)
bool_value (true)
type_check
add_attribute("e", "d", "a")
add_command("INTEGER", "INTEGER", <<["INTEGER", "d"]>>)
add_call_chain(<<e,C,INTEGER,C,BOOLEAN,A,a>>)
add_command("INTEGER", "c", <<["D", "c"], ["A", "D"], ["e", "INTEGER"], ["d", "BOOLEAN"], ["b", "INTEGER"], ["c", "INTEGER"], ["d", "INTEGER"]>>)
add_query("b", "b", <<["D", "BOOLEAN"], ["d", "BOOLEAN"], ["d", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["C", "INTEGER"], ["d", "BOOLEAN"], ["D", "BOOLEAN"]>>, "C")
logical_negation
add_class(B)
add_class(BOOLEAN)
generate_java_code
bool_value (true)
logical_negation
addition
add_call_chain(<<D,D,a,a,B,D>>)
multiplication
add_command("B", "c", <<["d", "INTEGER"], ["A", "b"], ["e", "b"], ["B", "BOOLEAN"]>>)
greater_than
generate_java_code
add_call_chain(<<a,a,B,e,d,C,C,d,d>>)
type_check
add_call_chain(<<c,C,A,d,a,a,c,D,d>>)
