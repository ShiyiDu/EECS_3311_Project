add_attribute("BOOLEAN", "a", "INTEGER")
numerical_negation
add_call_chain(<<B,B,C,B,B,A,D>>)
numerical_negation
add_call_chain(<<C,D,d,B,INTEGER>>)
add_call_chain(<<B,b,a,A,d,BOOLEAN,D,C,a>>)
add_command("d", "e", <<["C", "INTEGER"], ["d", "BOOLEAN"], ["d", "BOOLEAN"]>>)
logical_negation
add_call_chain(<<c,c,d,c>>)
add_query("A", "d", <<["c", "INTEGER"], ["INTEGER", "C"], ["c", "a"], ["B", "BOOLEAN"], ["a", "INTEGER"], ["e", "BOOLEAN"], ["B", "INTEGER"], ["A", "BOOLEAN"]>>, "c")
numerical_negation
bool_value (true)
bool_value (true)
numerical_negation
add_attribute("a", "c", "INTEGER")
equals
add_query("c", "B", <<["e", "INTEGER"]>>, "D")
int_value (23)
modulo
add_call_chain(<<b,B,b,d,A,INTEGER,D,INTEGER,a>>)
logical_negation
add_command("b", "B", <<["C", "b"], ["d", "INTEGER"], ["C", "INTEGER"], ["a", "INTEGER"], ["b", "B"], ["b", "INTEGER"]>>)
numerical_negation
type_check
add_call_chain(<<d,e,D,d,B,D,e>>)
bool_value (false)
int_value (16)
add_command("D", "B", <<["A", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "A"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "INTEGER"]>>)
add_call_chain(<<INTEGER,BOOLEAN,e,e,C,D,C,a,BOOLEAN>>)
generate_java_code
bool_value (true)
add_attribute("C", "C", "BOOLEAN")
int_value (30)
add_call_chain(<<B,D,b,d,b,c,A,b,a>>)
add_command("C", "c", <<["a", "INTEGER"], ["D", "BOOLEAN"]>>)
equals
add_class(b)
logical_negation
add_attribute("D", "A", "INTEGER")
logical_negation
bool_value (true)
add_command("b", "c", <<["D", "BOOLEAN"], ["c", "INTEGER"], ["b", "BOOLEAN"], ["d", "INTEGER"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["D", "INTEGER"], ["C", "BOOLEAN"]>>)
generate_java_code
add_attribute("D", "d", "BOOLEAN")
bool_value (false)
type_check
bool_value (true)
add_attribute("c", "a", "BOOLEAN")
logical_negation
conjunction
add_call_chain(<<C,A,e,b>>)
add_call_chain(<<D,b,D,A,A,c,A,A,a>>)
type_check
int_value (21)
generate_java_code
add_command("BOOLEAN", "C", <<["D", "INTEGER"]>>)
add_query("INTEGER", "D", <<["B", "BOOLEAN"], ["a", "INTEGER"], ["INTEGER", "BOOLEAN"], ["e", "INTEGER"], ["B", "BOOLEAN"], ["A", "BOOLEAN"]>>, "b")
int_value (43)
add_attribute("INTEGER", "INTEGER", "a")
add_command("D", "d", <<["B", "BOOLEAN"], ["e", "D"]>>)
add_command("B", "A", <<["b", "INTEGER"]>>)
add_query("B", "C", <<["d", "INTEGER"], ["INTEGER", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "INTEGER"], ["C", "INTEGER"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["b", "d"], ["b", "INTEGER"]>>, "b")
greater_than
add_call_chain(<<INTEGER,B,b,e>>)
add_attribute("a", "c", "INTEGER")
logical_negation
type_check
add_call_chain(<<A,a,D,A>>)
bool_value (true)
add_call_chain(<<INTEGER,d>>)
add_query("BOOLEAN", "A", <<["b", "INTEGER"], ["A", "BOOLEAN"], ["d", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["e", "d"], ["B", "INTEGER"]>>, "C")
numerical_negation
bool_value (false)
numerical_negation
add_call_chain(<<e,e,B>>)
add_class(b)
add_command("C", "b", <<["a", "A"], ["D", "BOOLEAN"], ["c", "BOOLEAN"]>>)
generate_java_code
numerical_negation
numerical_negation
bool_value (true)
int_value (5)
numerical_negation
add_class(A)
less_than
add_call_chain(<<INTEGER,B,B,c,d,C,c,C>>)
int_value (14)
add_call_chain(<<B,D,d,D,a>>)
int_value (29)
add_attribute("A", "C", "A")
generate_java_code
generate_java_code
bool_value (false)
add_call_chain(<<C,b,C>>)
numerical_negation
bool_value (false)
add_call_chain(<<c,B,D,d>>)
bool_value (false)
add_attribute("a", "a", "a")
generate_java_code
logical_negation
numerical_negation
logical_negation
int_value (5)
logical_negation
add_call_chain(<<D>>)
generate_java_code
add_call_chain(<<B,A,e,a>>)
add_attribute("C", "c", "C")
logical_negation
add_query("b", "c", <<["e", "BOOLEAN"], ["a", "INTEGER"], ["B", "B"], ["A", "INTEGER"]>>, "B")
add_attribute("C", "C", "BOOLEAN")
add_attribute("B", "INTEGER", "INTEGER")
add_attribute("C", "D", "d")
add_class(B)
bool_value (true)
numerical_negation
int_value (36)
greater_than
add_call_chain(<<D,C,e,B,A,e>>)
add_call_chain(<<A,d,B,D,b,C,e,a,C>>)
bool_value (false)
less_than
add_attribute("d", "d", "d")
add_query("C", "b", <<["D", "B"]>>, "B")
bool_value (true)
logical_negation
add_call_chain(<<BOOLEAN,e,C,c,d,A>>)
subtraction
add_attribute("e", "A", "D")
greater_than
quotient
add_command("A", "B", <<["b", "A"], ["B", "BOOLEAN"], ["B", "INTEGER"]>>)
numerical_negation
add_call_chain(<<A>>)
add_call_chain(<<e,A,B,BOOLEAN,b>>)
int_value (17)
add_attribute("B", "C", "BOOLEAN")
add_call_chain(<<d,C,D,D,e,d,A>>)
generate_java_code
add_command("BOOLEAN", "C", <<["A", "INTEGER"], ["B", "INTEGER"], ["c", "d"]>>)
bool_value (true)
add_attribute("c", "C", "BOOLEAN")
less_than
add_call_chain(<<d,d,B,c,C>>)
add_call_chain(<<A,b,A>>)
disjunction
add_attribute("INTEGER", "INTEGER", "BOOLEAN")
int_value (10)
add_attribute("B", "B", "INTEGER")
add_query("e", "D", <<["INTEGER", "BOOLEAN"]>>, "C")
add_class(C)
greater_than
greater_than
subtraction
add_query("b", "c", <<["A", "a"], ["a", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "BOOLEAN"], ["d", "B"], ["INTEGER", "B"], ["e", "BOOLEAN"]>>, "C")
numerical_negation
add_command("b", "B", <<["C", "BOOLEAN"], ["d", "a"], ["C", "INTEGER"], ["c", "BOOLEAN"]>>)
int_value (2)
add_query("BOOLEAN", "C", <<["a", "INTEGER"], ["C", "INTEGER"], ["e", "INTEGER"], ["b", "INTEGER"], ["e", "INTEGER"], ["e", "INTEGER"], ["a", "INTEGER"]>>, "a")
add_call_chain(<<D,a,c,B,e,D,e,B,e>>)
add_query("d", "D", <<["D", "BOOLEAN"], ["INTEGER", "INTEGER"], ["a", "D"]>>, "d")
add_command("A", "c", <<["B", "b"], ["b", "INTEGER"], ["C", "d"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["C", "INTEGER"]>>)
type_check
bool_value (true)
int_value (23)
bool_value (false)
logical_negation
add_call_chain(<<b,D>>)
int_value (43)
conjunction
add_call_chain(<<B,B,BOOLEAN,B,C,d,INTEGER,c,a>>)
add_call_chain(<<a,c,b,INTEGER>>)
disjunction
add_attribute("a", "B", "BOOLEAN")
logical_negation
add_call_chain(<<B,A,B,b,C,A>>)
subtraction
add_command("B", "a", <<["d", "BOOLEAN"], ["C", "INTEGER"], ["D", "BOOLEAN"]>>)
add_query("b", "A", <<["D", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["A", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "INTEGER"]>>, "d")
logical_negation
add_attribute("C", "d", "BOOLEAN")
generate_java_code
add_command("a", "D", <<["B", "INTEGER"], ["b", "BOOLEAN"]>>)
disjunction
numerical_negation
add_attribute("B", "e", "BOOLEAN")
bool_value (false)
type_check
int_value (9)
add_command("d", "C", <<["D", "B"], ["INTEGER", "BOOLEAN"]>>)
bool_value (true)
add_class(A)
add_call_chain(<<a,b,a>>)
numerical_negation
logical_negation
add_call_chain(<<INTEGER,a,BOOLEAN,D,BOOLEAN,B,C>>)
bool_value (false)
bool_value (false)
add_call_chain(<<D,d,a,A,b,BOOLEAN,C>>)
modulo
add_class(e)
add_attribute("b", "a", "A")
numerical_negation
add_attribute("D", "BOOLEAN", "INTEGER")
add_call_chain(<<A,D,b,e,D,D,e,e,BOOLEAN>>)
add_command("D", "d", <<["B", "INTEGER"]>>)
generate_java_code
add_call_chain(<<a,d,c,A,B,D>>)
int_value (8)
add_command("D", "b", <<["b", "a"], ["A", "d"], ["B", "INTEGER"]>>)
add_attribute("c", "c", "INTEGER")
add_call_chain(<<d>>)
multiplication
logical_negation
add_class(C)
conjunction
int_value (18)
int_value (6)
add_attribute("e", "B", "INTEGER")
add_query("d", "b", <<["C", "INTEGER"], ["e", "e"], ["a", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "e"]>>, "D")
add_query("a", "D", <<["C", "e"], ["D", "INTEGER"], ["B", "b"], ["b", "INTEGER"], ["e", "e"], ["D", "c"]>>, "D")
bool_value (true)
type_check
add_call_chain(<<a,BOOLEAN>>)
add_class(C)
bool_value (false)
numerical_negation
add_call_chain(<<d,INTEGER,B>>)
add_command("D", "C", <<["e", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
type_check
add_call_chain(<<INTEGER,B,e,BOOLEAN,e>>)
add_query("c", "D", <<["d", "BOOLEAN"]>>, "A")
numerical_negation
add_command("C", "d", <<["b", "C"], ["e", "INTEGER"], ["c", "BOOLEAN"], ["b", "BOOLEAN"]>>)
int_value (9)
less_than
add_call_chain(<<A,c,A,INTEGER>>)
add_class(d)
generate_java_code
add_class(b)
add_call_chain(<<C,d,c,b,BOOLEAN,C,a>>)
numerical_negation
