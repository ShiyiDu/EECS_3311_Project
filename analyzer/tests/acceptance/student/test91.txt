add_attribute("A", "d", "BOOLEAN")
multiplication
add_command("D", "C", <<["d", "INTEGER"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["D", "INTEGER"], ["d", "BOOLEAN"], ["c", "D"], ["A", "INTEGER"]>>)
bool_value (false)
modulo
int_value (49)
add_query("C", "C", <<["a", "INTEGER"], ["INTEGER", "D"], ["C", "e"], ["d", "BOOLEAN"], ["e", "c"], ["C", "BOOLEAN"], ["C", "BOOLEAN"]>>, "c")
numerical_negation
add_attribute("B", "D", "INTEGER")
type_check
equals
add_attribute("e", "a", "BOOLEAN")
type_check
numerical_negation
generate_java_code
bool_value (false)
type_check
add_attribute("C", "C", "a")
int_value (14)
add_command("d", "D", <<["b", "B"], ["c", "INTEGER"], ["INTEGER", "INTEGER"], ["d", "d"], ["a", "BOOLEAN"]>>)
add_query("D", "b", <<["e", "d"], ["d", "INTEGER"], ["BOOLEAN", "INTEGER"], ["c", "INTEGER"]>>, "B")
type_check
type_check
int_value (30)
add_class(b)
bool_value (false)
add_command("a", "a", <<["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "B"], ["b", "INTEGER"]>>)
add_attribute("C", "INTEGER", "c")
int_value (19)
bool_value (true)
modulo
bool_value (true)
add_class(e)
int_value (8)
add_command("A", "B", <<["C", "BOOLEAN"]>>)
add_command("B", "d", <<["B", "INTEGER"], ["D", "a"], ["b", "b"], ["A", "b"]>>)
add_attribute("a", "C", "BOOLEAN")
less_than
add_call_chain(<<B,D,d,C,d>>)
bool_value (false)
add_command("e", "A", <<["D", "BOOLEAN"], ["D", "C"], ["d", "INTEGER"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "b"], ["D", "INTEGER"], ["d", "A"]>>)
logical_negation
add_command("C", "C", <<["A", "BOOLEAN"]>>)
multiplication
disjunction
add_command("B", "D", <<["b", "A"], ["A", "C"], ["e", "b"], ["a", "a"], ["D", "D"], ["A", "D"], ["a", "INTEGER"]>>)
add_call_chain(<<a,BOOLEAN,d,d>>)
logical_negation
add_attribute("e", "A", "e")
add_command("e", "B", <<["a", "INTEGER"]>>)
bool_value (true)
add_call_chain(<<D>>)
add_command("d", "C", <<["c", "INTEGER"], ["a", "BOOLEAN"], ["C", "INTEGER"]>>)
numerical_negation
add_command("A", "D", <<["D", "INTEGER"], ["e", "BOOLEAN"], ["INTEGER", "INTEGER"]>>)
add_call_chain(<<a>>)
bool_value (true)
add_call_chain(<<b,d>>)
numerical_negation
add_command("a", "c", <<["BOOLEAN", "INTEGER"], ["A", "BOOLEAN"], ["C", "d"], ["a", "INTEGER"], ["a", "e"]>>)
add_attribute("c", "A", "INTEGER")
add_command("D", "INTEGER", <<["d", "A"], ["d", "d"], ["a", "BOOLEAN"], ["e", "e"], ["e", "BOOLEAN"]>>)
add_attribute("B", "B", "BOOLEAN")
add_call_chain(<<C,B,e,B,e,B>>)
add_command("B", "c", <<["D", "INTEGER"], ["c", "BOOLEAN"], ["D", "INTEGER"], ["e", "INTEGER"], ["a", "INTEGER"], ["B", "BOOLEAN"], ["e", "INTEGER"], ["C", "d"], ["A", "BOOLEAN"]>>)
add_attribute("BOOLEAN", "C", "INTEGER")
add_call_chain(<<a,e,D,d,D,INTEGER,a,C,c>>)
conjunction
numerical_negation
add_command("C", "C", <<["A", "a"], ["BOOLEAN", "INTEGER"], ["d", "INTEGER"], ["INTEGER", "INTEGER"], ["c", "INTEGER"], ["a", "c"]>>)
add_call_chain(<<d,C,a,D>>)
bool_value (false)
add_attribute("C", "b", "BOOLEAN")
add_class(a)
int_value (15)
add_command("e", "D", <<["c", "INTEGER"], ["INTEGER", "A"]>>)
add_attribute("B", "BOOLEAN", "INTEGER")
bool_value (true)
numerical_negation
add_query("C", "a", <<["c", "e"], ["BOOLEAN", "BOOLEAN"], ["a", "INTEGER"], ["c", "A"], ["c", "BOOLEAN"], ["A", "BOOLEAN"]>>, "INTEGER")
bool_value (true)
generate_java_code
add_query("e", "D", <<["D", "INTEGER"], ["A", "A"], ["BOOLEAN", "INTEGER"], ["C", "INTEGER"]>>, "C")
add_call_chain(<<C,d,e,c,A,INTEGER,B>>)
add_call_chain(<<d,c,e,d,A>>)
add_query("C", "b", <<["D", "INTEGER"]>>, "D")
add_attribute("c", "c", "INTEGER")
add_attribute("d", "C", "INTEGER")
add_call_chain(<<D,C,b,c,a,b,e>>)
numerical_negation
int_value (7)
logical_negation
less_than
add_command("b", "C", <<["INTEGER", "BOOLEAN"], ["D", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>)
add_call_chain(<<a,a,d,A,A,c>>)
bool_value (true)
type_check
equals
int_value (37)
add_query("C", "d", <<["C", "C"], ["e", "INTEGER"], ["B", "INTEGER"], ["a", "e"], ["C", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["B", "INTEGER"]>>, "c")
less_than
add_attribute("a", "d", "INTEGER")
add_query("b", "b", <<["a", "INTEGER"], ["a", "d"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["e", "INTEGER"], ["C", "INTEGER"], ["c", "INTEGER"], ["B", "INTEGER"]>>, "A")
add_call_chain(<<D,B,b,c>>)
add_call_chain(<<B,b,a,b>>)
numerical_negation
numerical_negation
add_call_chain(<<A,C,C>>)
int_value (9)
addition
add_query("C", "A", <<["D", "BOOLEAN"], ["a", "A"], ["c", "INTEGER"]>>, "b")
numerical_negation
add_class(b)
add_query("BOOLEAN", "INTEGER", <<["B", "INTEGER"]>>, "a")
add_query("INTEGER", "b", <<["e", "INTEGER"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "INTEGER"], ["d", "d"], ["A", "INTEGER"], ["a", "INTEGER"]>>, "A")
add_call_chain(<<d,D,BOOLEAN,C,B,C>>)
add_command("BOOLEAN", "c", <<["C", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "C"], ["d", "INTEGER"], ["C", "d"], ["BOOLEAN", "D"], ["A", "b"], ["b", "BOOLEAN"]>>)
type_check
add_command("INTEGER", "D", <<["c", "BOOLEAN"], ["b", "INTEGER"]>>)
add_attribute("c", "D", "INTEGER")
logical_negation
add_class(INTEGER)
add_attribute("c", "BOOLEAN", "BOOLEAN")
type_check
add_attribute("D", "INTEGER", "BOOLEAN")
add_command("e", "D", <<["D", "BOOLEAN"], ["a", "A"], ["B", "B"]>>)
disjunction
add_class(e)
add_call_chain(<<B>>)
conjunction
add_call_chain(<<d,D,a>>)
add_query("c", "C", <<["b", "B"]>>, "a")
add_call_chain(<<e,c,a,d,D,A,B,D,D>>)
disjunction
add_class(c)
add_call_chain(<<a,C,e,B>>)
bool_value (true)
disjunction
generate_java_code
numerical_negation
addition
add_command("B", "A", <<["A", "INTEGER"]>>)
add_call_chain(<<B,D,B,B,d,d>>)
add_attribute("b", "A", "BOOLEAN")
add_call_chain(<<e,A,D,D,D,a,C,B,c>>)
add_call_chain(<<A>>)
logical_negation
multiplication
generate_java_code
int_value (39)
bool_value (false)
add_attribute("B", "a", "C")
add_call_chain(<<D,A,C>>)
add_attribute("d", "B", "INTEGER")
add_query("INTEGER", "a", <<["d", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "A"], ["b", "INTEGER"], ["A", "e"]>>, "D")
conjunction
type_check
logical_negation
add_call_chain(<<e,a,A,A,a,b>>)
add_query("b", "a", <<["C", "INTEGER"], ["D", "INTEGER"], ["d", "d"], ["A", "INTEGER"], ["e", "BOOLEAN"], ["A", "B"], ["b", "INTEGER"]>>, "A")
bool_value (true)
add_attribute("e", "A", "B")
add_command("c", "e", <<["c", "c"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "e"], ["D", "d"], ["C", "INTEGER"]>>)
less_than
add_query("C", "e", <<["b", "INTEGER"], ["b", "BOOLEAN"], ["c", "b"], ["a", "BOOLEAN"]>>, "D")
add_command("A", "c", <<["a", "BOOLEAN"], ["C", "BOOLEAN"]>>)
add_call_chain(<<a,A,e,c,c,BOOLEAN,B>>)
quotient
add_command("b", "INTEGER", <<["C", "BOOLEAN"], ["a", "INTEGER"], ["C", "BOOLEAN"], ["c", "INTEGER"], ["B", "BOOLEAN"]>>)
subtraction
logical_negation
add_call_chain(<<A,C,A,D,BOOLEAN>>)
type_check
disjunction
quotient
generate_java_code
add_class(a)
add_command("B", "A", <<["D", "BOOLEAN"], ["C", "INTEGER"], ["e", "INTEGER"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["c", "INTEGER"], ["B", "INTEGER"]>>)
bool_value (true)
add_command("C", "e", <<["d", "BOOLEAN"], ["A", "INTEGER"], ["A", "BOOLEAN"], ["A", "INTEGER"], ["C", "INTEGER"], ["BOOLEAN", "INTEGER"]>>)
add_query("INTEGER", "a", <<["a", "INTEGER"]>>, "a")
logical_negation
add_query("INTEGER", "d", <<["B", "BOOLEAN"], ["C", "C"], ["A", "INTEGER"], ["e", "BOOLEAN"], ["D", "INTEGER"], ["A", "D"], ["a", "INTEGER"], ["d", "INTEGER"], ["D", "d"]>>, "e")
add_attribute("C", "BOOLEAN", "BOOLEAN")
bool_value (true)
add_query("d", "c", <<["c", "A"]>>, "D")
add_command("B", "D", <<["B", "BOOLEAN"], ["B", "INTEGER"]>>)
add_command("A", "C", <<["A", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["A", "INTEGER"], ["A", "BOOLEAN"], ["c", "B"], ["b", "INTEGER"], ["e", "BOOLEAN"]>>)
generate_java_code
int_value (8)
numerical_negation
add_command("INTEGER", "B", <<["D", "a"], ["B", "INTEGER"], ["A", "INTEGER"]>>)
numerical_negation
add_call_chain(<<a>>)
numerical_negation
add_command("A", "A", <<["A", "BOOLEAN"], ["B", "a"], ["C", "INTEGER"]>>)
numerical_negation
add_command("c", "a", <<["A", "BOOLEAN"], ["D", "INTEGER"], ["a", "BOOLEAN"], ["A", "BOOLEAN"]>>)
add_call_chain(<<A,a,B>>)
add_call_chain(<<A,d,D,D,c,BOOLEAN>>)
add_query("a", "e", <<["b", "BOOLEAN"], ["e", "INTEGER"], ["D", "b"], ["a", "BOOLEAN"], ["e", "INTEGER"], ["B", "D"]>>, "D")
add_call_chain(<<b,e,D,D,D,D,c,e,B>>)
add_attribute("e", "A", "BOOLEAN")
subtraction
add_command("D", "a", <<["B", "INTEGER"], ["A", "A"], ["B", "d"]>>)
int_value (25)
int_value (14)
logical_negation
logical_negation
int_value (33)
int_value (29)
bool_value (true)
add_command("B", "a", <<["B", "INTEGER"], ["d", "C"], ["a", "BOOLEAN"], ["e", "A"], ["A", "BOOLEAN"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["a", "INTEGER"]>>)
quotient
logical_negation
add_class(A)
bool_value (false)
add_attribute("A", "D", "B")
int_value (11)
bool_value (true)
add_command("b", "C", <<["b", "C"], ["e", "BOOLEAN"], ["e", "BOOLEAN"]>>)
add_command("c", "B", <<["B", "BOOLEAN"], ["e", "INTEGER"], ["INTEGER", "b"], ["D", "INTEGER"], ["b", "e"], ["INTEGER", "BOOLEAN"]>>)
add_query("d", "INTEGER", <<["A", "BOOLEAN"], ["d", "INTEGER"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["c", "b"]>>, "C")
add_class(d)
type_check
conjunction
add_class(C)
quotient
