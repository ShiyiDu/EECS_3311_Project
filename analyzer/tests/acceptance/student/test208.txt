add_attribute("INTEGER", "D", "BOOLEAN")
numerical_negation
add_attribute("a", "BOOLEAN", "INTEGER")
add_attribute("A", "e", "BOOLEAN")
add_attribute("b", "A", "INTEGER")
add_query("e", "b", <<["INTEGER", "INTEGER"], ["D", "b"], ["INTEGER", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "INTEGER"], ["e", "BOOLEAN"], ["D", "BOOLEAN"]>>, "D")
numerical_negation
bool_value (true)
bool_value (true)
bool_value (false)
addition
add_command("C", "BOOLEAN", <<["D", "INTEGER"], ["INTEGER", "a"], ["D", "BOOLEAN"], ["A", "BOOLEAN"]>>)
add_query("INTEGER", "C", <<["B", "BOOLEAN"]>>, "D")
less_than
add_call_chain(<<C,C,A,a,b,B,b,D>>)
add_query("BOOLEAN", "D", <<["D", "b"], ["d", "A"], ["a", "INTEGER"], ["B", "C"], ["e", "BOOLEAN"]>>, "c")
conjunction
add_call_chain(<<A>>)
type_check
int_value (16)
add_attribute("b", "c", "BOOLEAN")
add_call_chain(<<C,D,c,C,b,C,D,D>>)
add_call_chain(<<c>>)
add_class(INTEGER)
add_call_chain(<<B,c,B,A,BOOLEAN,e>>)
generate_java_code
modulo
add_class(b)
disjunction
add_call_chain(<<c,e,INTEGER>>)
add_command("e", "A", <<["B", "BOOLEAN"], ["C", "INTEGER"], ["a", "INTEGER"], ["d", "INTEGER"], ["C", "e"], ["INTEGER", "a"], ["e", "BOOLEAN"], ["a", "INTEGER"]>>)
add_query("D", "c", <<["a", "c"]>>, "A")
type_check
numerical_negation
disjunction
add_call_chain(<<D,C,C,C,a,b,A>>)
add_attribute("c", "A", "A")
add_class(b)
add_attribute("a", "b", "D")
add_query("B", "e", <<["e", "C"], ["b", "A"]>>, "D")
add_query("d", "c", <<["D", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>, "A")
add_query("c", "c", <<["A", "c"], ["c", "C"], ["BOOLEAN", "d"]>>, "B")
add_query("B", "B", <<["C", "INTEGER"], ["c", "e"], ["A", "c"], ["C", "INTEGER"], ["A", "INTEGER"], ["e", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "C"], ["D", "BOOLEAN"]>>, "C")
add_class(C)
generate_java_code
bool_value (true)
add_call_chain(<<A>>)
generate_java_code
add_call_chain(<<B,e>>)
add_class(INTEGER)
add_attribute("c", "a", "INTEGER")
add_command("B", "BOOLEAN", <<["b", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "INTEGER"], ["C", "a"], ["a", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["a", "e"], ["B", "BOOLEAN"]>>)
bool_value (false)
add_call_chain(<<INTEGER,b,C,a,A,BOOLEAN>>)
modulo
numerical_negation
bool_value (false)
logical_negation
int_value (11)
add_call_chain(<<B>>)
equals
type_check
bool_value (true)
add_call_chain(<<BOOLEAN,C>>)
logical_negation
generate_java_code
int_value (44)
add_class(A)
multiplication
bool_value (true)
add_attribute("b", "INTEGER", "INTEGER")
add_query("c", "C", <<["e", "D"]>>, "b")
subtraction
add_call_chain(<<e,B,a,d,C,B,B,e,B>>)
logical_negation
add_command("a", "D", <<["C", "BOOLEAN"]>>)
add_call_chain(<<c,c,d,b,C,a,D,a,c>>)
bool_value (true)
add_command("c", "a", <<["INTEGER", "INTEGER"], ["e", "A"], ["D", "A"], ["c", "BOOLEAN"], ["d", "C"], ["d", "BOOLEAN"]>>)
bool_value (false)
add_command("C", "INTEGER", <<["c", "BOOLEAN"], ["c", "c"], ["BOOLEAN", "A"], ["C", "BOOLEAN"], ["b", "A"], ["d", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "INTEGER"], ["b", "INTEGER"]>>)
int_value (16)
generate_java_code
generate_java_code
quotient
int_value (28)
logical_negation
add_call_chain(<<A,b,a>>)
int_value (6)
greater_than
add_class(C)
generate_java_code
add_call_chain(<<A,INTEGER,e>>)
disjunction
add_call_chain(<<d,C,A,b>>)
add_attribute("B", "INTEGER", "BOOLEAN")
disjunction
add_attribute("INTEGER", "B", "BOOLEAN")
add_call_chain(<<B,e,C,BOOLEAN,BOOLEAN,b>>)
type_check
logical_negation
equals
add_call_chain(<<e,c,b,d,BOOLEAN,A,a>>)
add_call_chain(<<D,a,INTEGER,A,A,D,A,A,D>>)
greater_than
add_command("d", "B", <<["B", "INTEGER"], ["a", "INTEGER"], ["INTEGER", "BOOLEAN"], ["c", "BOOLEAN"]>>)
add_call_chain(<<D,e,c,C,d>>)
conjunction
generate_java_code
less_than
logical_negation
add_query("C", "B", <<["a", "BOOLEAN"], ["A", "INTEGER"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["C", "D"], ["e", "B"], ["B", "INTEGER"]>>, "A")
add_command("e", "C", <<["b", "BOOLEAN"], ["D", "c"], ["A", "c"], ["B", "D"], ["a", "INTEGER"]>>)
add_command("c", "B", <<["a", "b"], ["B", "BOOLEAN"], ["c", "INTEGER"], ["d", "BOOLEAN"], ["D", "BOOLEAN"], ["INTEGER", "b"], ["BOOLEAN", "INTEGER"], ["B", "d"], ["A", "BOOLEAN"]>>)
add_call_chain(<<b,c,e>>)
add_call_chain(<<d,e,C>>)
add_command("e", "C", <<["e", "d"], ["B", "B"]>>)
add_attribute("a", "C", "BOOLEAN")
type_check
int_value (7)
add_command("c", "a", <<["D", "c"], ["B", "d"], ["c", "BOOLEAN"], ["c", "INTEGER"], ["B", "BOOLEAN"]>>)
add_call_chain(<<a>>)
add_call_chain(<<BOOLEAN,c,B,d,D,b,B,A,b>>)
add_command("e", "BOOLEAN", <<["A", "INTEGER"], ["a", "B"], ["a", "BOOLEAN"], ["D", "B"], ["D", "INTEGER"], ["C", "b"]>>)
numerical_negation
addition
subtraction
add_call_chain(<<B,C,d,c,C,e,e,e,c>>)
bool_value (false)
add_class(d)
add_attribute("c", "e", "BOOLEAN")
add_command("C", "C", <<["C", "INTEGER"], ["c", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["INTEGER", "INTEGER"], ["e", "BOOLEAN"]>>)
add_call_chain(<<e>>)
add_call_chain(<<C,c,A,A,INTEGER,a,b>>)
generate_java_code
quotient
addition
add_call_chain(<<A,A,B,d,BOOLEAN,A,d,a,C>>)
int_value (46)
disjunction
numerical_negation
add_call_chain(<<b,B,e,A,BOOLEAN,a,INTEGER,A,BOOLEAN>>)
conjunction
greater_than
add_call_chain(<<c>>)
generate_java_code
numerical_negation
bool_value (false)
less_than
generate_java_code
type_check
bool_value (true)
add_attribute("c", "c", "C")
numerical_negation
int_value (42)
add_call_chain(<<a,b,b,a>>)
logical_negation
logical_negation
type_check
add_command("C", "a", <<["D", "C"], ["B", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["e", "BOOLEAN"], ["c", "d"], ["D", "c"], ["B", "A"], ["d", "c"], ["e", "INTEGER"]>>)
add_query("BOOLEAN", "D", <<["B", "INTEGER"], ["D", "INTEGER"]>>, "D")
add_query("d", "c", <<["B", "INTEGER"], ["a", "BOOLEAN"], ["A", "INTEGER"], ["c", "INTEGER"], ["D", "INTEGER"], ["A", "BOOLEAN"]>>, "B")
add_command("B", "D", <<["e", "INTEGER"], ["B", "b"], ["A", "e"], ["B", "BOOLEAN"]>>)
add_query("BOOLEAN", "d", <<["C", "INTEGER"], ["B", "BOOLEAN"], ["D", "BOOLEAN"]>>, "c")
numerical_negation
bool_value (true)
int_value (32)
add_call_chain(<<D,c,e,INTEGER,BOOLEAN,d,A,b>>)
quotient
add_call_chain(<<e,a,A>>)
add_query("a", "A", <<["D", "INTEGER"], ["B", "INTEGER"], ["c", "e"], ["b", "A"], ["D", "BOOLEAN"], ["B", "D"], ["INTEGER", "INTEGER"], ["B", "INTEGER"]>>, "c")
add_command("D", "e", <<["b", "A"], ["d", "BOOLEAN"], ["d", "C"]>>)
add_query("e", "d", <<["B", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "INTEGER"]>>, "D")
logical_negation
generate_java_code
logical_negation
add_call_chain(<<b>>)
logical_negation
int_value (22)
add_command("e", "C", <<["b", "INTEGER"], ["e", "BOOLEAN"], ["c", "BOOLEAN"], ["d", "BOOLEAN"], ["INTEGER", "INTEGER"], ["D", "INTEGER"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "INTEGER"]>>)
type_check
quotient
bool_value (true)
subtraction
numerical_negation
int_value (44)
int_value (24)
greater_than
generate_java_code
less_than
add_command("D", "INTEGER", <<["d", "INTEGER"], ["D", "INTEGER"]>>)
numerical_negation
add_query("A", "b", <<["D", "BOOLEAN"], ["INTEGER", "D"], ["BOOLEAN", "INTEGER"], ["INTEGER", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["A", "INTEGER"], ["A", "INTEGER"], ["a", "b"], ["B", "C"]>>, "A")
add_query("a", "A", <<["B", "BOOLEAN"], ["e", "e"], ["C", "INTEGER"], ["b", "BOOLEAN"], ["e", "INTEGER"], ["B", "BOOLEAN"]>>, "c")
add_attribute("b", "b", "INTEGER")
conjunction
add_call_chain(<<d,A,BOOLEAN,e,INTEGER>>)
add_query("A", "b", <<["c", "BOOLEAN"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["e", "BOOLEAN"], ["c", "BOOLEAN"]>>, "D")
add_class(c)
int_value (37)
addition
modulo
bool_value (false)
