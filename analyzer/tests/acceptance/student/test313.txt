add_command("D", "A", <<["D", "BOOLEAN"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "BOOLEAN"]>>)
bool_value (true)
numerical_negation
add_call_chain(<<d,b,INTEGER,d,e,d,d,d,b>>)
add_query("D", "D", <<["B", "d"], ["B", "BOOLEAN"], ["c", "INTEGER"]>>, "B")
add_query("d", "D", <<["B", "INTEGER"], ["D", "a"], ["e", "INTEGER"], ["b", "BOOLEAN"]>>, "BOOLEAN")
bool_value (false)
add_command("D", "A", <<["C", "BOOLEAN"], ["a", "c"], ["D", "INTEGER"], ["B", "INTEGER"], ["d", "BOOLEAN"], ["b", "b"]>>)
add_command("C", "c", <<["d", "d"], ["e", "INTEGER"], ["C", "d"], ["e", "INTEGER"], ["d", "BOOLEAN"], ["D", "INTEGER"], ["B", "INTEGER"], ["d", "INTEGER"], ["A", "a"]>>)
add_attribute("A", "A", "BOOLEAN")
logical_negation
conjunction
addition
add_call_chain(<<INTEGER,c>>)
add_class(c)
quotient
add_call_chain(<<A,a,a>>)
quotient
disjunction
int_value (22)
add_class(b)
int_value (35)
add_attribute("C", "a", "INTEGER")
add_command("e", "C", <<["A", "A"], ["A", "BOOLEAN"]>>)
add_attribute("INTEGER", "b", "D")
add_call_chain(<<c,b,b,c,b,C,c,A>>)
add_command("c", "B", <<["c", "c"], ["e", "d"], ["C", "A"], ["b", "INTEGER"], ["d", "BOOLEAN"], ["D", "BOOLEAN"]>>)
int_value (9)
type_check
bool_value (true)
bool_value (true)
add_attribute("a", "D", "BOOLEAN")
conjunction
add_command("D", "INTEGER", <<["D", "INTEGER"], ["C", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>)
add_call_chain(<<INTEGER,c>>)
numerical_negation
logical_negation
add_attribute("C", "B", "C")
add_attribute("a", "D", "INTEGER")
logical_negation
add_call_chain(<<c,INTEGER,A,b>>)
bool_value (true)
add_query("C", "a", <<["b", "INTEGER"], ["a", "INTEGER"], ["d", "INTEGER"], ["a", "INTEGER"], ["A", "INTEGER"], ["INTEGER", "INTEGER"], ["D", "A"]>>, "A")
add_query("b", "D", <<["d", "INTEGER"], ["d", "BOOLEAN"], ["A", "BOOLEAN"]>>, "B")
subtraction
logical_negation
logical_negation
int_value (14)
add_class(d)
add_call_chain(<<d>>)
add_call_chain(<<e,C,B,D,d,d,b>>)
add_query("C", "A", <<["INTEGER", "INTEGER"]>>, "C")
add_attribute("c", "BOOLEAN", "A")
add_call_chain(<<e,e,B,a,A,e,b,BOOLEAN>>)
add_call_chain(<<C,D,A,D,d,D,INTEGER>>)
add_attribute("C", "c", "BOOLEAN")
add_command("INTEGER", "BOOLEAN", <<["INTEGER", "BOOLEAN"], ["c", "D"]>>)
logical_negation
multiplication
bool_value (true)
type_check
bool_value (false)
logical_negation
logical_negation
add_attribute("b", "C", "A")
add_attribute("d", "D", "D")
addition
add_call_chain(<<c,C,C,B,a,D,d>>)
int_value (8)
logical_negation
logical_negation
add_class(D)
greater_than
generate_java_code
bool_value (true)
int_value (39)
add_attribute("B", "b", "INTEGER")
int_value (13)
add_call_chain(<<B,D,INTEGER,b,D,D,D,C>>)
add_query("D", "BOOLEAN", <<["A", "BOOLEAN"]>>, "e")
equals
add_call_chain(<<INTEGER,e>>)
add_attribute("e", "B", "BOOLEAN")
logical_negation
disjunction
add_call_chain(<<C>>)
add_call_chain(<<D,D,d,b,B,e,e>>)
add_command("b", "D", <<["INTEGER", "c"], ["B", "BOOLEAN"], ["D", "BOOLEAN"]>>)
add_command("C", "D", <<["INTEGER", "INTEGER"], ["C", "INTEGER"], ["A", "INTEGER"], ["e", "C"], ["D", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "INTEGER"]>>)
add_attribute("INTEGER", "d", "BOOLEAN")
disjunction
quotient
int_value (26)
add_call_chain(<<b>>)
add_attribute("D", "d", "INTEGER")
generate_java_code
int_value (21)
add_attribute("c", "c", "A")
add_call_chain(<<d,C,c,C,c,b,C,D,c>>)
add_class(C)
add_command("A", "c", <<["B", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "C"], ["C", "BOOLEAN"], ["c", "A"], ["B", "d"]>>)
add_call_chain(<<BOOLEAN,B,b,INTEGER,A,a,d,a,d>>)
add_command("A", "b", <<["B", "e"], ["e", "INTEGER"], ["A", "B"], ["c", "BOOLEAN"], ["INTEGER", "a"]>>)
add_command("A", "a", <<["INTEGER", "INTEGER"], ["BOOLEAN", "D"]>>)
logical_negation
numerical_negation
bool_value (false)
bool_value (false)
type_check
add_command("a", "a", <<["d", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["b", "e"], ["a", "C"], ["e", "BOOLEAN"], ["a", "c"], ["INTEGER", "BOOLEAN"]>>)
logical_negation
generate_java_code
subtraction
add_attribute("A", "e", "BOOLEAN")
add_attribute("a", "D", "A")
add_command("D", "INTEGER", <<["B", "INTEGER"], ["b", "INTEGER"]>>)
int_value (36)
add_call_chain(<<c,e,A,e>>)
add_call_chain(<<b,e,C,C,c,C>>)
add_query("c", "B", <<["C", "BOOLEAN"], ["BOOLEAN", "b"], ["INTEGER", "BOOLEAN"], ["A", "d"], ["d", "BOOLEAN"], ["b", "a"], ["e", "BOOLEAN"], ["D", "a"], ["D", "INTEGER"]>>, "b")
logical_negation
add_call_chain(<<B,BOOLEAN>>)
add_class(C)
add_command("D", "a", <<["A", "INTEGER"], ["a", "INTEGER"], ["C", "b"], ["BOOLEAN", "BOOLEAN"], ["b", "e"], ["c", "BOOLEAN"], ["a", "b"], ["A", "BOOLEAN"]>>)
add_class(D)
subtraction
add_call_chain(<<b,a,D,c,B>>)
generate_java_code
numerical_negation
add_call_chain(<<a,C,BOOLEAN,B,b,B,a>>)
add_attribute("D", "C", "BOOLEAN")
bool_value (false)
conjunction
bool_value (false)
add_call_chain(<<c,b>>)
add_command("INTEGER", "e", <<["BOOLEAN", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "INTEGER"], ["INTEGER", "INTEGER"]>>)
add_attribute("e", "D", "INTEGER")
add_query("C", "INTEGER", <<["B", "INTEGER"], ["BOOLEAN", "INTEGER"], ["a", "INTEGER"], ["b", "B"], ["B", "INTEGER"], ["c", "INTEGER"]>>, "B")
add_query("c", "A", <<["B", "INTEGER"], ["INTEGER", "b"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["C", "C"], ["d", "INTEGER"], ["c", "INTEGER"], ["D", "BOOLEAN"]>>, "B")
subtraction
add_call_chain(<<B,c>>)
disjunction
add_command("b", "e", <<["BOOLEAN", "BOOLEAN"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["D", "B"], ["a", "INTEGER"], ["c", "INTEGER"], ["e", "BOOLEAN"], ["a", "INTEGER"], ["D", "BOOLEAN"]>>)
add_call_chain(<<c,B,c,b,A,C,INTEGER,c,a>>)
add_call_chain(<<e,B,BOOLEAN,d,c,D>>)
add_call_chain(<<d,C,D,C,A>>)
conjunction
int_value (24)
add_class(d)
bool_value (false)
type_check
numerical_negation
add_attribute("d", "a", "INTEGER")
add_call_chain(<<b,c,a,a>>)
add_attribute("B", "d", "BOOLEAN")
add_attribute("e", "BOOLEAN", "INTEGER")
greater_than
numerical_negation
equals
add_command("C", "A", <<["a", "BOOLEAN"], ["C", "BOOLEAN"], ["d", "C"], ["d", "a"], ["b", "BOOLEAN"], ["e", "BOOLEAN"], ["c", "INTEGER"], ["C", "BOOLEAN"], ["D", "BOOLEAN"]>>)
type_check
disjunction
conjunction
add_command("C", "A", <<["C", "INTEGER"], ["d", "INTEGER"], ["BOOLEAN", "INTEGER"], ["C", "d"], ["c", "INTEGER"]>>)
add_call_chain(<<c,d,b,a,e,b,e,B>>)
add_call_chain(<<e,b>>)
add_attribute("b", "C", "INTEGER")
int_value (16)
generate_java_code
logical_negation
add_query("A", "BOOLEAN", <<["d", "BOOLEAN"], ["A", "INTEGER"], ["d", "a"], ["b", "INTEGER"], ["B", "INTEGER"]>>, "C")
generate_java_code
add_call_chain(<<b,c,C,d,B,a,b,a,a>>)
disjunction
logical_negation
add_command("a", "C", <<["c", "INTEGER"], ["b", "BOOLEAN"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["B", "D"]>>)
add_query("BOOLEAN", "e", <<["b", "BOOLEAN"], ["e", "INTEGER"], ["A", "C"], ["b", "C"], ["c", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "INTEGER"]>>, "d")
logical_negation
add_query("a", "D", <<["BOOLEAN", "D"], ["D", "C"], ["a", "e"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["a", "INTEGER"]>>, "B")
quotient
quotient
conjunction
bool_value (true)
add_call_chain(<<d,B,a,BOOLEAN>>)
multiplication
int_value (31)
type_check
int_value (27)
int_value (32)
add_command("b", "c", <<["C", "INTEGER"], ["D", "INTEGER"], ["C", "INTEGER"], ["B", "INTEGER"], ["d", "e"], ["a", "BOOLEAN"], ["A", "C"], ["B", "b"], ["A", "BOOLEAN"]>>)
int_value (26)
add_call_chain(<<D,D,INTEGER,B,B,INTEGER,c>>)
logical_negation
add_call_chain(<<INTEGER,A,b,A,B,B,c,D>>)
add_call_chain(<<c,a,B,a,c,e>>)
logical_negation
less_than
add_query("C", "d", <<["b", "BOOLEAN"], ["INTEGER", "INTEGER"], ["a", "D"]>>, "c")
multiplication
add_query("b", "A", <<["b", "INTEGER"], ["C", "BOOLEAN"], ["INTEGER", "INTEGER"], ["b", "BOOLEAN"], ["c", "INTEGER"], ["INTEGER", "INTEGER"]>>, "b")
type_check
logical_negation
add_query("a", "INTEGER", <<["c", "B"], ["e", "c"], ["B", "INTEGER"], ["C", "e"], ["b", "INTEGER"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "A"]>>, "b")
int_value (46)
add_call_chain(<<INTEGER>>)
multiplication
add_class(INTEGER)
add_call_chain(<<A,b,e>>)
add_query("C", "D", <<["A", "B"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["d", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "BOOLEAN"]>>, "d")
numerical_negation
type_check
type_check
add_attribute("A", "D", "INTEGER")
less_than
add_call_chain(<<D,e,a,b,D,D,B,A,A>>)
greater_than
add_command("BOOLEAN", "e", <<["c", "BOOLEAN"], ["d", "BOOLEAN"], ["b", "D"], ["a", "BOOLEAN"], ["d", "INTEGER"]>>)
add_call_chain(<<d,d,c,D>>)
add_attribute("D", "INTEGER", "BOOLEAN")
bool_value (true)
add_call_chain(<<C,A,B,C>>)
int_value (26)
bool_value (true)
add_command("B", "A", <<["b", "a"], ["d", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "BOOLEAN"]>>)
add_query("A", "INTEGER", <<["C", "d"], ["BOOLEAN", "INTEGER"], ["c", "INTEGER"], ["D", "INTEGER"], ["A", "INTEGER"]>>, "A")
add_call_chain(<<C,C,B,d,C,B,C,c>>)
disjunction
add_query("C", "b", <<["C", "BOOLEAN"], ["d", "INTEGER"], ["d", "B"], ["INTEGER", "INTEGER"], ["d", "BOOLEAN"], ["a", "c"]>>, "A")
less_than
add_call_chain(<<A,d,e,BOOLEAN,D,c>>)
add_attribute("e", "C", "INTEGER")
logical_negation
logical_negation
