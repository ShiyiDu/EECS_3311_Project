add_query("D", "c", <<["d", "BOOLEAN"], ["INTEGER", "e"], ["c", "INTEGER"], ["C", "INTEGER"], ["B", "B"], ["d", "INTEGER"]>>, "B")
add_command("d", "B", <<["A", "B"], ["D", "BOOLEAN"], ["e", "e"], ["c", "D"]>>)
disjunction
generate_java_code
logical_negation
add_query("a", "C", <<["B", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["d", "INTEGER"]>>, "C")
multiplication
numerical_negation
bool_value (false)
logical_negation
add_query("c", "A", <<["D", "D"], ["b", "INTEGER"], ["e", "BOOLEAN"], ["d", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["b", "INTEGER"], ["a", "INTEGER"], ["B", "BOOLEAN"]>>, "C")
add_query("c", "C", <<["B", "BOOLEAN"]>>, "a")
add_call_chain(<<c,c,B,BOOLEAN,d,INTEGER,D>>)
add_query("a", "d", <<["c", "INTEGER"], ["c", "INTEGER"], ["a", "INTEGER"], ["e", "BOOLEAN"]>>, "d")
add_call_chain(<<a,C,e,c,e>>)
add_attribute("A", "b", "c")
add_command("B", "e", <<["A", "e"], ["B", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "e"], ["C", "BOOLEAN"], ["b", "A"]>>)
add_attribute("C", "a", "INTEGER")
bool_value (false)
add_call_chain(<<c,C,a,INTEGER,BOOLEAN,C,d,b,BOOLEAN>>)
subtraction
bool_value (true)
add_query("e", "d", <<["C", "C"], ["e", "BOOLEAN"], ["b", "INTEGER"], ["d", "BOOLEAN"], ["INTEGER", "e"]>>, "C")
int_value (17)
add_query("c", "D", <<["b", "INTEGER"]>>, "A")
generate_java_code
bool_value (true)
bool_value (false)
generate_java_code
add_query("B", "INTEGER", <<["B", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "INTEGER"], ["INTEGER", "INTEGER"], ["C", "INTEGER"], ["B", "D"], ["BOOLEAN", "INTEGER"], ["B", "b"]>>, "d")
bool_value (true)
int_value (46)
add_attribute("c", "a", "INTEGER")
logical_negation
multiplication
add_call_chain(<<c,D,b,b,C,INTEGER,B>>)
generate_java_code
logical_negation
numerical_negation
add_class(C)
add_class(B)
add_command("b", "B", <<["c", "D"], ["A", "d"], ["c", "BOOLEAN"]>>)
add_call_chain(<<d,C,a,C,a>>)
add_call_chain(<<a,c,b,e,b,B,A>>)
bool_value (false)
add_call_chain(<<b,a,a,C,b,D>>)
logical_negation
numerical_negation
type_check
numerical_negation
add_command("A", "C", <<["B", "BOOLEAN"], ["d", "INTEGER"], ["b", "B"], ["a", "INTEGER"], ["D", "INTEGER"], ["D", "e"], ["C", "BOOLEAN"]>>)
int_value (48)
add_command("D", "C", <<["C", "INTEGER"], ["A", "INTEGER"], ["a", "INTEGER"], ["B", "D"], ["a", "INTEGER"]>>)
add_command("C", "c", <<["c", "b"], ["d", "c"], ["D", "INTEGER"], ["d", "INTEGER"], ["BOOLEAN", "A"], ["C", "c"]>>)
int_value (30)
add_query("A", "b", <<["B", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "BOOLEAN"], ["a", "D"], ["a", "BOOLEAN"]>>, "e")
conjunction
logical_negation
type_check
quotient
bool_value (false)
add_query("A", "D", <<["a", "INTEGER"], ["B", "INTEGER"], ["a", "b"], ["INTEGER", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["d", "e"], ["INTEGER", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>, "c")
int_value (17)
add_call_chain(<<a,C,D>>)
conjunction
add_query("e", "c", <<["A", "C"]>>, "d")
add_attribute("C", "e", "BOOLEAN")
int_value (6)
less_than
add_call_chain(<<d,b,D,BOOLEAN,A,d,INTEGER>>)
add_call_chain(<<e,c,A,d,e,B,c,e>>)
conjunction
generate_java_code
add_attribute("a", "C", "INTEGER")
add_attribute("A", "A", "BOOLEAN")
add_command("D", "b", <<["A", "d"], ["INTEGER", "BOOLEAN"], ["D", "INTEGER"], ["e", "A"], ["D", "INTEGER"], ["C", "a"], ["b", "BOOLEAN"], ["e", "b"]>>)
add_attribute("B", "D", "INTEGER")
add_command("D", "b", <<["B", "INTEGER"], ["d", "B"], ["B", "a"], ["A", "INTEGER"], ["a", "BOOLEAN"]>>)
add_command("d", "D", <<["e", "BOOLEAN"], ["C", "A"], ["a", "INTEGER"], ["C", "INTEGER"], ["c", "INTEGER"]>>)
logical_negation
add_call_chain(<<c,A,d,C,b,e>>)
numerical_negation
add_query("e", "c", <<["c", "INTEGER"], ["e", "c"], ["C", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "a"], ["a", "BOOLEAN"], ["C", "BOOLEAN"], ["d", "INTEGER"], ["a", "INTEGER"]>>, "e")
conjunction
add_query("BOOLEAN", "D", <<["D", "b"], ["B", "INTEGER"], ["b", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "INTEGER"], ["e", "C"], ["e", "e"], ["B", "INTEGER"], ["c", "A"]>>, "e")
int_value (38)
add_command("B", "a", <<["e", "INTEGER"], ["d", "INTEGER"], ["C", "a"]>>)
disjunction
add_call_chain(<<C,a,A>>)
add_call_chain(<<D,A,A,D,B,e>>)
subtraction
add_call_chain(<<e>>)
add_call_chain(<<B,d,c>>)
logical_negation
logical_negation
add_command("e", "B", <<["d", "C"], ["C", "INTEGER"], ["B", "c"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["D", "INTEGER"], ["A", "INTEGER"], ["INTEGER", "INTEGER"]>>)
multiplication
add_class(D)
add_command("a", "B", <<["a", "BOOLEAN"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "C"]>>)
type_check
add_class(B)
int_value (47)
int_value (8)
add_attribute("d", "d", "INTEGER")
add_command("d", "e", <<["d", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "D"], ["C", "a"], ["B", "BOOLEAN"], ["e", "C"], ["B", "BOOLEAN"], ["C", "BOOLEAN"]>>)
add_call_chain(<<B,b>>)
type_check
add_query("C", "a", <<["d", "INTEGER"], ["C", "INTEGER"], ["a", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "BOOLEAN"]>>, "BOOLEAN")
numerical_negation
add_call_chain(<<BOOLEAN>>)
add_attribute("BOOLEAN", "a", "BOOLEAN")
add_call_chain(<<D,b>>)
add_class(B)
add_command("D", "e", <<["e", "c"], ["a", "BOOLEAN"], ["C", "b"], ["a", "INTEGER"]>>)
conjunction
int_value (15)
add_query("e", "B", <<["a", "INTEGER"], ["d", "INTEGER"], ["d", "c"], ["C", "INTEGER"]>>, "a")
less_than
add_query("D", "BOOLEAN", <<["b", "INTEGER"], ["D", "BOOLEAN"], ["D", "C"], ["c", "INTEGER"]>>, "a")
bool_value (false)
add_query("a", "c", <<["d", "INTEGER"], ["C", "INTEGER"], ["d", "INTEGER"], ["e", "INTEGER"], ["b", "BOOLEAN"], ["d", "INTEGER"], ["BOOLEAN", "B"]>>, "INTEGER")
type_check
int_value (20)
bool_value (false)
add_query("C", "b", <<["c", "INTEGER"], ["d", "C"]>>, "e")
subtraction
type_check
numerical_negation
add_attribute("B", "D", "D")
numerical_negation
bool_value (false)
add_call_chain(<<c>>)
add_call_chain(<<A,e,BOOLEAN,C,e>>)
add_call_chain(<<A,e,c,e,c,D,D>>)
add_class(B)
generate_java_code
logical_negation
add_query("d", "a", <<["b", "INTEGER"], ["A", "INTEGER"], ["e", "BOOLEAN"]>>, "A")
conjunction
greater_than
bool_value (false)
add_attribute("A", "b", "INTEGER")
logical_negation
add_call_chain(<<a,D,D,C,c,D,A,a>>)
add_call_chain(<<A,D,a,D,D,C,d,a,B>>)
equals
generate_java_code
add_command("INTEGER", "INTEGER", <<["B", "INTEGER"], ["C", "INTEGER"], ["a", "INTEGER"], ["C", "C"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "B"]>>)
add_query("e", "C", <<["BOOLEAN", "INTEGER"]>>, "a")
add_command("B", "BOOLEAN", <<["d", "BOOLEAN"], ["c", "INTEGER"], ["A", "INTEGER"], ["INTEGER", "D"], ["B", "INTEGER"], ["c", "INTEGER"], ["A", "INTEGER"], ["B", "BOOLEAN"]>>)
int_value (27)
add_attribute("D", "C", "BOOLEAN")
add_call_chain(<<B,D>>)
add_attribute("B", "e", "BOOLEAN")
generate_java_code
add_query("BOOLEAN", "D", <<["C", "b"], ["c", "BOOLEAN"], ["a", "INTEGER"]>>, "C")
modulo
greater_than
int_value (17)
generate_java_code
int_value (47)
add_attribute("b", "b", "BOOLEAN")
subtraction
add_call_chain(<<a,INTEGER,c,b,e,D,d>>)
add_call_chain(<<B,b,e,C,C,A,e>>)
type_check
greater_than
add_command("C", "c", <<["C", "BOOLEAN"], ["C", "INTEGER"]>>)
add_attribute("D", "A", "BOOLEAN")
disjunction
add_query("D", "B", <<["a", "c"]>>, "C")
addition
bool_value (false)
add_attribute("C", "A", "INTEGER")
add_command("c", "B", <<["INTEGER", "BOOLEAN"], ["c", "e"], ["B", "INTEGER"], ["INTEGER", "BOOLEAN"], ["b", "e"]>>)
add_attribute("C", "A", "d")
generate_java_code
int_value (19)
add_class(c)
add_call_chain(<<e,D,d,B>>)
generate_java_code
add_call_chain(<<B,A,e,a>>)
add_call_chain(<<D,d,C>>)
type_check
equals
add_class(e)
int_value (27)
bool_value (true)
logical_negation
type_check
add_command("e", "b", <<["b", "BOOLEAN"], ["B", "INTEGER"], ["a", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["D", "INTEGER"], ["e", "c"], ["c", "BOOLEAN"], ["A", "e"], ["A", "INTEGER"]>>)
multiplication
add_query("a", "b", <<["A", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "INTEGER"]>>, "A")
numerical_negation
