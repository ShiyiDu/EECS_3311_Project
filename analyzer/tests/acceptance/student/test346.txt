generate_java_code
greater_than
less_than
int_value (17)
add_class(c)
add_query("a", "b", <<["d", "BOOLEAN"], ["c", "INTEGER"], ["d", "BOOLEAN"], ["C", "b"], ["e", "BOOLEAN"], ["a", "BOOLEAN"]>>, "A")
add_query("B", "C", <<["C", "BOOLEAN"], ["D", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["A", "C"], ["c", "INTEGER"], ["a", "d"]>>, "C")
type_check
add_query("D", "b", <<["BOOLEAN", "BOOLEAN"], ["C", "INTEGER"], ["B", "D"], ["c", "INTEGER"], ["D", "d"], ["D", "BOOLEAN"], ["c", "c"], ["d", "INTEGER"]>>, "BOOLEAN")
add_attribute("b", "e", "a")
add_attribute("b", "B", "c")
numerical_negation
add_attribute("B", "D", "INTEGER")
add_query("A", "B", <<["C", "INTEGER"]>>, "A")
add_attribute("C", "A", "BOOLEAN")
add_call_chain(<<A>>)
logical_negation
less_than
add_command("A", "b", <<["A", "INTEGER"], ["D", "INTEGER"], ["d", "INTEGER"], ["e", "A"], ["c", "C"], ["D", "B"], ["c", "INTEGER"]>>)
add_class(C)
add_query("C", "INTEGER", <<["A", "BOOLEAN"]>>, "B")
bool_value (true)
numerical_negation
disjunction
numerical_negation
add_query("B", "e", <<["D", "INTEGER"], ["D", "BOOLEAN"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["c", "BOOLEAN"]>>, "d")
add_query("A", "b", <<["D", "INTEGER"], ["D", "D"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["b", "D"], ["D", "BOOLEAN"], ["d", "e"]>>, "B")
add_call_chain(<<e>>)
add_class(C)
multiplication
generate_java_code
add_query("A", "INTEGER", <<["b", "A"], ["b", "INTEGER"], ["BOOLEAN", "INTEGER"], ["a", "b"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "c"], ["A", "INTEGER"]>>, "e")
add_query("e", "d", <<["BOOLEAN", "A"], ["D", "INTEGER"]>>, "A")
add_class(C)
add_call_chain(<<B,A,B,INTEGER,A,D,C,c>>)
add_attribute("c", "c", "d")
add_command("C", "C", <<["a", "INTEGER"], ["D", "BOOLEAN"], ["C", "b"], ["BOOLEAN", "BOOLEAN"], ["e", "INTEGER"], ["B", "INTEGER"], ["c", "B"], ["d", "INTEGER"], ["c", "INTEGER"]>>)
add_attribute("BOOLEAN", "C", "BOOLEAN")
add_call_chain(<<C,A,a,e>>)
generate_java_code
int_value (5)
add_command("b", "a", <<["C", "INTEGER"], ["B", "INTEGER"], ["B", "c"], ["D", "C"], ["D", "INTEGER"]>>)
add_query("B", "d", <<["BOOLEAN", "INTEGER"], ["INTEGER", "INTEGER"], ["b", "BOOLEAN"]>>, "A")
add_attribute("b", "c", "INTEGER")
add_query("e", "D", <<["c", "BOOLEAN"], ["d", "BOOLEAN"], ["e", "INTEGER"], ["B", "b"], ["D", "D"], ["A", "INTEGER"], ["B", "BOOLEAN"]>>, "B")
disjunction
bool_value (false)
generate_java_code
add_query("c", "BOOLEAN", <<["A", "BOOLEAN"]>>, "B")
int_value (25)
bool_value (true)
numerical_negation
add_call_chain(<<A,e,e,D>>)
add_attribute("a", "b", "BOOLEAN")
logical_negation
numerical_negation
equals
int_value (11)
multiplication
logical_negation
numerical_negation
add_call_chain(<<c,e,c,D>>)
less_than
int_value (34)
type_check
add_call_chain(<<A>>)
add_class(d)
disjunction
numerical_negation
bool_value (true)
numerical_negation
bool_value (true)
add_call_chain(<<c,c,c,b,b,A>>)
add_attribute("e", "a", "BOOLEAN")
generate_java_code
generate_java_code
add_attribute("c", "C", "A")
type_check
add_call_chain(<<A,A,e,D,c,A,e,b>>)
add_call_chain(<<b,C>>)
numerical_negation
add_class(C)
add_query("D", "A", <<["c", "INTEGER"], ["d", "BOOLEAN"], ["a", "D"], ["A", "INTEGER"]>>, "A")
type_check
logical_negation
generate_java_code
bool_value (true)
numerical_negation
add_command("INTEGER", "b", <<["A", "D"], ["e", "BOOLEAN"]>>)
logical_negation
add_attribute("c", "C", "B")
add_query("B", "d", <<["B", "B"], ["c", "BOOLEAN"], ["d", "INTEGER"], ["c", "INTEGER"], ["C", "INTEGER"], ["A", "INTEGER"], ["b", "BOOLEAN"]>>, "d")
add_class(A)
add_query("b", "d", <<["A", "BOOLEAN"], ["b", "a"], ["a", "B"], ["BOOLEAN", "BOOLEAN"], ["A", "INTEGER"], ["A", "INTEGER"]>>, "e")
numerical_negation
bool_value (true)
add_call_chain(<<a,c,c,b,e,a,B,B,d>>)
quotient
add_call_chain(<<d,C,B,e>>)
int_value (28)
add_attribute("a", "d", "INTEGER")
greater_than
logical_negation
numerical_negation
add_call_chain(<<D,e>>)
add_command("e", "c", <<["e", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "BOOLEAN"]>>)
int_value (37)
add_call_chain(<<b,BOOLEAN,c,a>>)
add_command("A", "A", <<["C", "b"], ["B", "INTEGER"], ["b", "BOOLEAN"], ["A", "A"], ["A", "INTEGER"]>>)
add_call_chain(<<BOOLEAN,A,b,D,B,b,D>>)
add_command("A", "BOOLEAN", <<["c", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "c"], ["INTEGER", "BOOLEAN"], ["B", "c"], ["B", "INTEGER"], ["C", "INTEGER"]>>)
add_command("c", "A", <<["a", "BOOLEAN"], ["A", "BOOLEAN"]>>)
bool_value (true)
add_command("INTEGER", "b", <<["b", "e"], ["B", "e"], ["A", "INTEGER"], ["e", "INTEGER"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["C", "c"], ["a", "INTEGER"]>>)
int_value (43)
add_attribute("C", "D", "D")
add_attribute("B", "D", "BOOLEAN")
add_call_chain(<<C,C,B>>)
bool_value (true)
quotient
logical_negation
addition
add_command("A", "b", <<["INTEGER", "INTEGER"]>>)
add_command("C", "B", <<["a", "a"], ["A", "c"], ["BOOLEAN", "INTEGER"]>>)
add_query("A", "e", <<["C", "INTEGER"], ["C", "C"], ["C", "D"]>>, "A")
add_call_chain(<<d,B,B,c,C,BOOLEAN,c>>)
add_command("d", "b", <<["d", "c"], ["A", "D"], ["d", "INTEGER"], ["d", "D"]>>)
bool_value (false)
add_query("C", "B", <<["BOOLEAN", "BOOLEAN"]>>, "BOOLEAN")
add_call_chain(<<b>>)
greater_than
add_query("D", "INTEGER", <<["B", "BOOLEAN"], ["C", "d"], ["D", "INTEGER"], ["A", "C"], ["c", "C"], ["d", "a"], ["c", "INTEGER"], ["c", "D"], ["INTEGER", "INTEGER"]>>, "c")
type_check
numerical_negation
numerical_negation
subtraction
type_check
add_query("d", "C", <<["b", "INTEGER"], ["d", "D"], ["BOOLEAN", "INTEGER"], ["d", "INTEGER"], ["B", "c"], ["d", "c"]>>, "A")
add_call_chain(<<d>>)
add_query("D", "c", <<["c", "INTEGER"], ["D", "A"]>>, "A")
add_class(A)
disjunction
add_query("A", "INTEGER", <<["D", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "e"], ["B", "BOOLEAN"]>>, "A")
numerical_negation
add_call_chain(<<e,b,a,a,e,B,D,D>>)
add_query("C", "INTEGER", <<["INTEGER", "a"], ["C", "INTEGER"]>>, "b")
int_value (10)
add_attribute("B", "d", "e")
add_call_chain(<<b,BOOLEAN>>)
add_call_chain(<<A,b>>)
conjunction
conjunction
add_call_chain(<<D>>)
generate_java_code
add_class(BOOLEAN)
addition
add_call_chain(<<C,c,D,D>>)
add_call_chain(<<A,D,INTEGER,C,C,d,d>>)
add_call_chain(<<a,d,C,d>>)
type_check
add_call_chain(<<B,B,A,B>>)
add_call_chain(<<B,B,c,A,e,BOOLEAN>>)
bool_value (true)
int_value (27)
disjunction
add_command("C", "A", <<["BOOLEAN", "BOOLEAN"], ["b", "c"], ["b", "INTEGER"], ["A", "C"], ["c", "d"], ["D", "INTEGER"], ["c", "INTEGER"], ["D", "INTEGER"], ["b", "BOOLEAN"]>>)
numerical_negation
add_query("INTEGER", "e", <<["b", "D"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["e", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "A"], ["C", "INTEGER"], ["c", "BOOLEAN"]>>, "d")
type_check
type_check
add_query("A", "c", <<["e", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "INTEGER"], ["d", "BOOLEAN"], ["a", "D"]>>, "BOOLEAN")
numerical_negation
int_value (35)
add_call_chain(<<e,d,C,INTEGER,BOOLEAN,d>>)
generate_java_code
add_attribute("INTEGER", "d", "BOOLEAN")
disjunction
logical_negation
add_call_chain(<<A,c>>)
