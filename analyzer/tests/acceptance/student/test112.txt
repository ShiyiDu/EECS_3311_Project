add_command("a", "e", <<["b", "B"]>>)
conjunction
logical_negation
add_call_chain(<<D,b,D,c,A,a,e>>)
add_attribute("B", "e", "BOOLEAN")
logical_negation
add_attribute("c", "B", "B")
add_attribute("d", "A", "INTEGER")
disjunction
add_call_chain(<<A,c,A,B,e,BOOLEAN,INTEGER,B,A>>)
add_call_chain(<<A,a,d,a,B,c,a,C>>)
logical_negation
add_call_chain(<<c,D,A,B,c>>)
add_command("e", "C", <<["D", "INTEGER"], ["c", "BOOLEAN"], ["D", "INTEGER"], ["a", "d"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["d", "d"]>>)
type_check
add_call_chain(<<D,b,A,b,A>>)
logical_negation
numerical_negation
int_value (32)
int_value (13)
logical_negation
add_command("a", "e", <<["b", "C"], ["A", "A"], ["a", "e"], ["b", "d"], ["BOOLEAN", "a"], ["B", "B"]>>)
add_command("b", "A", <<["C", "BOOLEAN"], ["a", "D"], ["A", "INTEGER"], ["b", "e"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "INTEGER"]>>)
add_call_chain(<<c,a,D,b,c,C,INTEGER,a>>)
add_query("e", "BOOLEAN", <<["c", "b"], ["c", "c"], ["B", "INTEGER"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["D", "BOOLEAN"]>>, "C")
add_command("d", "c", <<["D", "B"], ["D", "INTEGER"], ["D", "INTEGER"], ["d", "BOOLEAN"], ["b", "INTEGER"], ["B", "INTEGER"], ["B", "INTEGER"], ["b", "INTEGER"], ["A", "INTEGER"]>>)
add_query("a", "A", <<["b", "BOOLEAN"]>>, "b")
add_call_chain(<<c,a>>)
add_call_chain(<<C,a,e,D,c,c>>)
bool_value (true)
add_attribute("b", "B", "BOOLEAN")
bool_value (false)
add_command("a", "B", <<["a", "INTEGER"], ["C", "a"], ["a", "A"], ["e", "INTEGER"], ["A", "C"], ["A", "INTEGER"], ["a", "INTEGER"], ["e", "C"], ["D", "B"]>>)
logical_negation
add_call_chain(<<A,c>>)
add_command("B", "C", <<["b", "INTEGER"], ["D", "a"], ["B", "d"]>>)
add_query("A", "d", <<["c", "INTEGER"], ["b", "BOOLEAN"], ["b", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["C", "e"], ["A", "INTEGER"], ["INTEGER", "INTEGER"]>>, "a")
bool_value (false)
generate_java_code
conjunction
generate_java_code
conjunction
add_attribute("A", "B", "INTEGER")
logical_negation
add_call_chain(<<B,D,C,B,a,e,A,A,A>>)
add_attribute("C", "B", "INTEGER")
add_class(A)
disjunction
int_value (34)
add_call_chain(<<C,B,c>>)
add_attribute("C", "BOOLEAN", "INTEGER")
add_class(C)
add_query("BOOLEAN", "A", <<["INTEGER", "A"], ["B", "BOOLEAN"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "a"]>>, "b")
quotient
add_call_chain(<<B>>)
add_class(B)
add_attribute("c", "d", "a")
add_call_chain(<<C,b,A,d,A,B,A,INTEGER,c>>)
add_command("C", "A", <<["A", "INTEGER"], ["d", "c"]>>)
add_class(a)
add_query("e", "c", <<["A", "B"], ["c", "BOOLEAN"], ["A", "A"], ["D", "INTEGER"], ["b", "INTEGER"], ["B", "b"], ["C", "a"]>>, "b")
int_value (38)
add_command("b", "INTEGER", <<["d", "INTEGER"]>>)
add_query("c", "b", <<["d", "BOOLEAN"], ["a", "A"], ["B", "A"], ["C", "INTEGER"], ["b", "a"], ["b", "D"], ["b", "INTEGER"], ["c", "B"], ["c", "BOOLEAN"]>>, "b")
logical_negation
generate_java_code
type_check
conjunction
add_call_chain(<<a,a>>)
add_class(A)
add_query("D", "b", <<["B", "BOOLEAN"], ["d", "BOOLEAN"]>>, "b")
generate_java_code
add_attribute("a", "a", "INTEGER")
numerical_negation
add_command("INTEGER", "D", <<["BOOLEAN", "BOOLEAN"], ["d", "INTEGER"], ["e", "INTEGER"]>>)
greater_than
bool_value (false)
add_attribute("d", "A", "BOOLEAN")
logical_negation
int_value (12)
int_value (22)
add_attribute("BOOLEAN", "B", "e")
disjunction
int_value (10)
add_call_chain(<<d,d>>)
logical_negation
logical_negation
add_query("INTEGER", "d", <<["b", "C"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["c", "BOOLEAN"]>>, "e")
add_attribute("B", "e", "INTEGER")
numerical_negation
int_value (18)
int_value (44)
int_value (27)
add_command("A", "c", <<["A", "INTEGER"], ["B", "INTEGER"], ["e", "BOOLEAN"], ["b", "C"], ["INTEGER", "BOOLEAN"]>>)
numerical_negation
add_call_chain(<<D,B,d,A,a,c,D>>)
add_attribute("a", "c", "e")
add_class(C)
less_than
add_call_chain(<<A,D,e,b,b,A,A,a,a>>)
add_call_chain(<<A,D,c>>)
logical_negation
numerical_negation
bool_value (false)
numerical_negation
add_command("BOOLEAN", "a", <<["c", "A"], ["b", "C"]>>)
add_class(b)
bool_value (false)
add_call_chain(<<e,D,a,a,c,INTEGER,d>>)
type_check
generate_java_code
bool_value (false)
add_query("B", "D", <<["D", "BOOLEAN"]>>, "d")
subtraction
add_command("D", "B", <<["B", "INTEGER"], ["A", "BOOLEAN"], ["D", "INTEGER"]>>)
add_command("B", "B", <<["c", "BOOLEAN"], ["C", "BOOLEAN"], ["BOOLEAN", "e"]>>)
logical_negation
add_class(D)
add_command("INTEGER", "a", <<["C", "B"], ["d", "INTEGER"], ["e", "BOOLEAN"], ["D", "A"]>>)
add_class(c)
add_call_chain(<<c>>)
generate_java_code
disjunction
equals
greater_than
add_call_chain(<<c,c,B,C,C,a,e>>)
logical_negation
add_class(d)
quotient
generate_java_code
bool_value (false)
int_value (31)
add_class(e)
int_value (43)
add_command("c", "B", <<["A", "INTEGER"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["INTEGER", "INTEGER"], ["D", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "INTEGER"], ["D", "INTEGER"], ["b", "INTEGER"]>>)
generate_java_code
type_check
generate_java_code
bool_value (true)
add_call_chain(<<C,C>>)
logical_negation
numerical_negation
add_attribute("A", "b", "BOOLEAN")
modulo
bool_value (false)
add_call_chain(<<B>>)
less_than
type_check
addition
add_class(INTEGER)
conjunction
add_attribute("c", "e", "INTEGER")
int_value (38)
numerical_negation
add_call_chain(<<A>>)
numerical_negation
multiplication
conjunction
add_class(c)
add_call_chain(<<b>>)
add_call_chain(<<BOOLEAN,C,e,D,A,D,a,b>>)
bool_value (false)
add_call_chain(<<B,b,d,B>>)
add_query("A", "A", <<["INTEGER", "INTEGER"]>>, "e")
add_call_chain(<<c,C,c,D,A,BOOLEAN,e,B,D>>)
add_call_chain(<<BOOLEAN>>)
add_command("B", "BOOLEAN", <<["BOOLEAN", "C"], ["C", "C"], ["b", "BOOLEAN"]>>)
disjunction
equals
add_query("C", "a", <<["A", "B"], ["C", "BOOLEAN"], ["A", "a"], ["B", "BOOLEAN"]>>, "B")
numerical_negation
int_value (25)
