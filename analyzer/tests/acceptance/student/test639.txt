add_command("A", "e", <<["b", "INTEGER"], ["e", "d"], ["d", "BOOLEAN"], ["A", "INTEGER"], ["c", "INTEGER"]>>)
add_class(D)
add_query("a", "b", <<["b", "D"], ["D", "e"]>>, "D")
add_query("D", "a", <<["c", "BOOLEAN"], ["A", "INTEGER"], ["A", "e"], ["b", "BOOLEAN"], ["D", "INTEGER"], ["a", "BOOLEAN"]>>, "C")
int_value (39)
bool_value (false)
logical_negation
generate_java_code
add_command("e", "INTEGER", <<["d", "BOOLEAN"], ["INTEGER", "INTEGER"], ["d", "BOOLEAN"], ["c", "d"], ["b", "INTEGER"], ["C", "e"]>>)
numerical_negation
add_call_chain(<<b>>)
modulo
add_call_chain(<<A,a>>)
generate_java_code
add_attribute("A", "c", "d")
bool_value (false)
numerical_negation
add_query("a", "d", <<["C", "d"], ["c", "INTEGER"], ["D", "BOOLEAN"]>>, "A")
type_check
bool_value (true)
numerical_negation
add_call_chain(<<INTEGER,A>>)
add_class(c)
int_value (20)
bool_value (true)
numerical_negation
type_check
add_call_chain(<<d,c,B>>)
numerical_negation
add_command("d", "d", <<["B", "BOOLEAN"], ["e", "c"], ["D", "C"], ["a", "b"], ["d", "INTEGER"], ["c", "C"], ["INTEGER", "B"], ["D", "BOOLEAN"]>>)
less_than
add_attribute("c", "B", "d")
int_value (20)
add_query("B", "A", <<["c", "e"], ["D", "D"], ["e", "INTEGER"]>>, "D")
add_class(D)
add_command("A", "D", <<["A", "BOOLEAN"], ["B", "b"], ["a", "C"], ["C", "INTEGER"], ["a", "INTEGER"], ["D", "BOOLEAN"], ["d", "INTEGER"]>>)
int_value (38)
add_call_chain(<<e,C,D,c,a,b,BOOLEAN>>)
bool_value (false)
logical_negation
add_command("BOOLEAN", "B", <<["D", "INTEGER"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["D", "BOOLEAN"]>>)
add_attribute("b", "A", "INTEGER")
conjunction
type_check
add_call_chain(<<C,C,B,a,a,D>>)
bool_value (true)
logical_negation
logical_negation
add_command("e", "A", <<["b", "INTEGER"], ["C", "C"], ["D", "B"], ["C", "BOOLEAN"], ["BOOLEAN", "b"], ["B", "INTEGER"]>>)
add_command("C", "C", <<["A", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "b"], ["A", "INTEGER"], ["a", "INTEGER"], ["d", "BOOLEAN"]>>)
add_call_chain(<<D,a,a,C,a,b,D>>)
add_attribute("d", "D", "A")
add_command("e", "INTEGER", <<["A", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["c", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "b"], ["b", "C"], ["B", "INTEGER"]>>)
add_command("c", "C", <<["B", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "INTEGER"]>>)
add_command("c", "c", <<["c", "INTEGER"], ["A", "BOOLEAN"], ["D", "INTEGER"], ["d", "INTEGER"], ["b", "b"], ["B", "C"], ["e", "INTEGER"], ["C", "BOOLEAN"]>>)
bool_value (true)
add_call_chain(<<A,a,d,D,A>>)
bool_value (true)
conjunction
generate_java_code
add_command("B", "e", <<["b", "BOOLEAN"], ["D", "INTEGER"], ["B", "A"], ["a", "BOOLEAN"], ["d", "INTEGER"], ["c", "INTEGER"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["D", "d"]>>)
add_call_chain(<<D,c,C,a,A,D>>)
add_call_chain(<<INTEGER,c,D,D,BOOLEAN>>)
add_call_chain(<<A,A,d,b,C,D,D,d>>)
numerical_negation
int_value (4)
add_query("B", "d", <<["A", "INTEGER"], ["d", "e"], ["D", "INTEGER"]>>, "B")
generate_java_code
add_attribute("B", "c", "BOOLEAN")
generate_java_code
logical_negation
conjunction
add_call_chain(<<D,B>>)
quotient
type_check
add_command("e", "a", <<["BOOLEAN", "INTEGER"], ["a", "BOOLEAN"], ["B", "a"], ["B", "D"]>>)
int_value (26)
add_call_chain(<<B,A,BOOLEAN>>)
generate_java_code
int_value (6)
generate_java_code
type_check
add_call_chain(<<C,a,A,D,D,INTEGER,C,a>>)
add_query("c", "C", <<["d", "INTEGER"], ["b", "BOOLEAN"]>>, "d")
logical_negation
type_check
add_class(d)
type_check
type_check
bool_value (false)
add_query("d", "A", <<["b", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "A"], ["d", "BOOLEAN"], ["e", "b"], ["e", "INTEGER"], ["b", "d"]>>, "A")
generate_java_code
conjunction
add_query("b", "D", <<["C", "INTEGER"], ["a", "INTEGER"]>>, "e")
generate_java_code
add_attribute("e", "D", "BOOLEAN")
add_command("b", "d", <<["a", "D"], ["e", "INTEGER"], ["c", "a"], ["A", "B"], ["D", "BOOLEAN"], ["b", "INTEGER"], ["B", "A"], ["b", "INTEGER"], ["a", "BOOLEAN"]>>)
type_check
add_command("b", "INTEGER", <<["BOOLEAN", "INTEGER"], ["C", "BOOLEAN"], ["e", "INTEGER"], ["e", "c"], ["C", "BOOLEAN"]>>)
int_value (37)
generate_java_code
numerical_negation
logical_negation
int_value (32)
generate_java_code
type_check
generate_java_code
less_than
add_call_chain(<<d,c,D,e,B,c,e,c,C>>)
numerical_negation
bool_value (true)
add_call_chain(<<BOOLEAN,b,a>>)
add_query("c", "C", <<["B", "INTEGER"], ["D", "BOOLEAN"], ["C", "a"], ["c", "INTEGER"], ["B", "BOOLEAN"], ["D", "INTEGER"], ["a", "INTEGER"], ["c", "BOOLEAN"]>>, "D")
multiplication
int_value (6)
add_command("B", "D", <<["A", "INTEGER"], ["BOOLEAN", "INTEGER"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["D", "INTEGER"]>>)
add_attribute("e", "B", "b")
add_command("C", "C", <<["B", "c"]>>)
add_attribute("d", "B", "BOOLEAN")
multiplication
logical_negation
multiplication
add_attribute("a", "INTEGER", "BOOLEAN")
add_class(A)
int_value (11)
add_command("D", "C", <<["B", "C"], ["b", "BOOLEAN"], ["c", "INTEGER"], ["C", "a"], ["A", "BOOLEAN"], ["BOOLEAN", "B"], ["e", "BOOLEAN"], ["B", "INTEGER"], ["b", "BOOLEAN"]>>)
bool_value (false)
add_query("c", "d", <<["c", "d"], ["b", "INTEGER"], ["d", "INTEGER"], ["A", "D"], ["d", "d"], ["BOOLEAN", "INTEGER"], ["e", "A"]>>, "A")
add_command("B", "BOOLEAN", <<["c", "c"]>>)
subtraction
add_command("d", "A", <<["e", "INTEGER"], ["C", "BOOLEAN"], ["b", "a"], ["e", "INTEGER"], ["d", "INTEGER"], ["b", "c"], ["B", "BOOLEAN"], ["e", "C"], ["c", "INTEGER"]>>)
bool_value (true)
add_class(c)
add_attribute("c", "A", "D")
add_command("A", "e", <<["C", "C"], ["C", "D"], ["INTEGER", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "a"], ["C", "d"], ["A", "B"]>>)
add_attribute("e", "c", "INTEGER")
bool_value (true)
add_command("c", "A", <<["C", "BOOLEAN"], ["e", "e"], ["D", "a"], ["b", "D"], ["B", "INTEGER"], ["B", "INTEGER"], ["C", "C"]>>)
add_call_chain(<<a,INTEGER,C,d,D>>)
bool_value (false)
numerical_negation
add_query("D", "INTEGER", <<["c", "b"], ["C", "BOOLEAN"], ["A", "BOOLEAN"]>>, "D")
add_attribute("A", "b", "BOOLEAN")
type_check
less_than
conjunction
logical_negation
add_call_chain(<<d,BOOLEAN,b>>)
modulo
add_call_chain(<<C,C>>)
equals
generate_java_code
add_query("e", "d", <<["C", "a"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["c", "d"]>>, "A")
int_value (9)
int_value (14)
add_class(c)
add_call_chain(<<INTEGER,c,B,c,e,c,B,b,c>>)
conjunction
add_attribute("BOOLEAN", "D", "BOOLEAN")
add_command("e", "B", <<["e", "BOOLEAN"]>>)
int_value (9)
add_class(B)
add_query("d", "c", <<["B", "BOOLEAN"], ["B", "a"], ["A", "d"], ["D", "INTEGER"], ["d", "B"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["b", "INTEGER"], ["e", "INTEGER"]>>, "D")
bool_value (true)
add_command("B", "B", <<["b", "INTEGER"], ["c", "e"], ["D", "b"], ["D", "INTEGER"], ["C", "INTEGER"], ["d", "d"], ["c", "BOOLEAN"], ["e", "c"], ["BOOLEAN", "INTEGER"]>>)
int_value (40)
int_value (22)
add_attribute("d", "D", "BOOLEAN")
int_value (26)
greater_than
add_command("B", "e", <<["b", "BOOLEAN"], ["A", "INTEGER"], ["d", "A"], ["BOOLEAN", "INTEGER"], ["d", "BOOLEAN"], ["b", "C"], ["e", "BOOLEAN"]>>)
add_class(c)
bool_value (false)
disjunction
add_call_chain(<<D,C,A,B,A,D,b>>)
addition
add_call_chain(<<B,b,d,d>>)
add_command("C", "C", <<["b", "INTEGER"], ["D", "BOOLEAN"], ["D", "INTEGER"]>>)
numerical_negation
bool_value (true)
add_command("c", "c", <<["D", "INTEGER"], ["D", "BOOLEAN"], ["A", "BOOLEAN"]>>)
add_call_chain(<<INTEGER,C>>)
disjunction
add_call_chain(<<d,BOOLEAN,e,D,BOOLEAN,C,D,c>>)
multiplication
add_command("A", "d", <<["e", "BOOLEAN"], ["a", "INTEGER"], ["A", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "d"]>>)
add_attribute("C", "D", "INTEGER")
numerical_negation
bool_value (true)
add_class(e)
add_command("BOOLEAN", "A", <<["c", "C"], ["C", "BOOLEAN"]>>)
add_query("B", "c", <<["d", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "d"], ["d", "BOOLEAN"], ["B", "INTEGER"]>>, "B")
numerical_negation
add_command("B", "B", <<["a", "INTEGER"], ["a", "b"], ["D", "a"], ["C", "INTEGER"], ["a", "BOOLEAN"], ["B", "BOOLEAN"]>>)
less_than
type_check
int_value (6)
bool_value (false)
add_command("d", "d", <<["A", "C"], ["INTEGER", "e"], ["b", "INTEGER"], ["B", "INTEGER"], ["B", "INTEGER"], ["B", "INTEGER"], ["e", "BOOLEAN"], ["e", "INTEGER"], ["D", "INTEGER"]>>)
add_attribute("C", "B", "INTEGER")
numerical_negation
add_attribute("b", "e", "a")
add_query("a", "b", <<["A", "BOOLEAN"]>>, "D")
numerical_negation
disjunction
add_attribute("D", "c", "BOOLEAN")
bool_value (true)
add_command("C", "C", <<["a", "BOOLEAN"], ["d", "C"], ["A", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "BOOLEAN"]>>)
bool_value (false)
add_command("d", "B", <<["A", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["C", "INTEGER"], ["c", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "INTEGER"]>>)
add_call_chain(<<INTEGER,D,c,d,e,D,A,d>>)
add_call_chain(<<B,b,C,a,b,INTEGER,INTEGER,e,INTEGER>>)
add_call_chain(<<e,d,b,A,INTEGER>>)
add_query("A", "B", <<["e", "BOOLEAN"], ["d", "BOOLEAN"], ["INTEGER", "INTEGER"], ["c", "B"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "BOOLEAN"]>>, "A")
add_attribute("c", "b", "INTEGER")
type_check
add_call_chain(<<C,b,BOOLEAN,a,D,D>>)
