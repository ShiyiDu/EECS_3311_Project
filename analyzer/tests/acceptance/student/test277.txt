bool_value (true)
add_attribute("BOOLEAN", "e", "BOOLEAN")
bool_value (false)
add_command("A", "a", <<["BOOLEAN", "BOOLEAN"], ["A", "INTEGER"], ["c", "INTEGER"], ["D", "BOOLEAN"], ["A", "B"], ["b", "c"]>>)
add_query("c", "a", <<["d", "INTEGER"], ["C", "BOOLEAN"], ["a", "B"], ["b", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "INTEGER"]>>, "INTEGER")
disjunction
add_query("d", "B", <<["A", "BOOLEAN"], ["e", "e"]>>, "a")
add_class(B)
generate_java_code
type_check
type_check
add_query("A", "C", <<["d", "INTEGER"], ["b", "e"], ["d", "BOOLEAN"]>>, "INTEGER")
numerical_negation
add_call_chain(<<b>>)
numerical_negation
add_call_chain(<<d,c>>)
add_call_chain(<<D,e,BOOLEAN,b,B,e>>)
add_call_chain(<<BOOLEAN,a>>)
add_attribute("A", "C", "BOOLEAN")
conjunction
generate_java_code
type_check
numerical_negation
bool_value (false)
subtraction
numerical_negation
add_query("a", "c", <<["D", "B"]>>, "b")
add_attribute("C", "D", "C")
int_value (11)
equals
add_attribute("a", "B", "c")
add_call_chain(<<a,B,C,B,c,a,e>>)
generate_java_code
add_attribute("C", "c", "INTEGER")
int_value (6)
bool_value (false)
add_query("D", "D", <<["C", "INTEGER"], ["a", "e"], ["A", "d"], ["b", "C"]>>, "INTEGER")
generate_java_code
add_command("C", "BOOLEAN", <<["A", "INTEGER"], ["e", "INTEGER"], ["b", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["INTEGER", "B"], ["d", "BOOLEAN"]>>)
add_attribute("C", "A", "d")
numerical_negation
add_query("A", "INTEGER", <<["A", "INTEGER"], ["INTEGER", "e"], ["A", "b"], ["d", "c"], ["A", "BOOLEAN"], ["c", "B"], ["B", "d"], ["c", "D"], ["C", "INTEGER"]>>, "D")
add_query("D", "C", <<["d", "INTEGER"], ["A", "B"], ["e", "INTEGER"]>>, "B")
numerical_negation
add_call_chain(<<c,c,e,B,A,c,b,B,b>>)
add_command("d", "e", <<["D", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "D"], ["e", "BOOLEAN"], ["B", "B"], ["e", "b"], ["D", "BOOLEAN"], ["c", "C"]>>)
int_value (28)
add_command("B", "b", <<["a", "BOOLEAN"], ["INTEGER", "INTEGER"], ["c", "BOOLEAN"], ["C", "C"], ["B", "INTEGER"], ["A", "B"], ["d", "INTEGER"], ["b", "D"]>>)
logical_negation
disjunction
add_call_chain(<<d,d,C,D,D,a,a>>)
less_than
numerical_negation
add_query("b", "c", <<["c", "BOOLEAN"]>>, "INTEGER")
add_call_chain(<<a,C,A,C,b,A,A>>)
logical_negation
add_call_chain(<<b,a,D,c,d,e,a>>)
type_check
add_command("a", "c", <<["e", "INTEGER"], ["C", "INTEGER"], ["a", "BOOLEAN"], ["A", "INTEGER"], ["B", "INTEGER"], ["B", "INTEGER"], ["INTEGER", "A"], ["D", "A"], ["c", "BOOLEAN"]>>)
add_call_chain(<<C>>)
add_attribute("B", "BOOLEAN", "D")
add_attribute("C", "B", "C")
generate_java_code
modulo
add_call_chain(<<D,D,C,d,B>>)
add_call_chain(<<b,e,D,a,a,INTEGER,A,d,D>>)
add_attribute("D", "A", "INTEGER")
logical_negation
add_command("e", "e", <<["INTEGER", "e"]>>)
logical_negation
add_command("c", "a", <<["e", "d"], ["C", "B"], ["C", "BOOLEAN"], ["A", "D"]>>)
generate_java_code
int_value (12)
add_attribute("B", "C", "BOOLEAN")
logical_negation
add_call_chain(<<d,b,D,INTEGER,c,B,B,e>>)
add_call_chain(<<c,a,INTEGER>>)
bool_value (false)
disjunction
add_call_chain(<<d,c,D,D,B,B>>)
int_value (20)
subtraction
numerical_negation
add_class(B)
disjunction
greater_than
add_call_chain(<<c,C,C,C,BOOLEAN>>)
add_attribute("B", "B", "B")
int_value (12)
logical_negation
int_value (22)
add_query("A", "C", <<["e", "INTEGER"], ["a", "C"], ["c", "INTEGER"], ["d", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["c", "INTEGER"], ["d", "INTEGER"]>>, "D")
less_than
add_query("BOOLEAN", "a", <<["e", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "INTEGER"], ["C", "INTEGER"], ["a", "e"], ["D", "e"], ["C", "INTEGER"], ["B", "A"]>>, "b")
int_value (41)
add_call_chain(<<D>>)
bool_value (true)
int_value (8)
add_call_chain(<<a,d,B,C,c,D,b,D>>)
add_command("a", "BOOLEAN", <<["C", "BOOLEAN"], ["INTEGER", "B"], ["c", "BOOLEAN"], ["A", "INTEGER"]>>)
int_value (30)
add_class(BOOLEAN)
generate_java_code
add_call_chain(<<C,c,c,b,e,b,b,D>>)
add_class(d)
add_query("a", "B", <<["e", "C"], ["D", "INTEGER"], ["c", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "INTEGER"], ["d", "INTEGER"], ["d", "INTEGER"], ["e", "BOOLEAN"], ["C", "BOOLEAN"]>>, "d")
numerical_negation
numerical_negation
disjunction
int_value (23)
less_than
add_class(C)
int_value (25)
add_query("B", "b", <<["c", "INTEGER"], ["e", "INTEGER"], ["BOOLEAN", "b"]>>, "c")
add_attribute("e", "INTEGER", "a")
add_call_chain(<<e,A,B,e,D>>)
numerical_negation
type_check
bool_value (false)
add_query("C", "C", <<["C", "BOOLEAN"], ["INTEGER", "INTEGER"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "d"], ["B", "BOOLEAN"], ["e", "B"], ["e", "C"]>>, "D")
add_attribute("b", "a", "INTEGER")
numerical_negation
add_command("BOOLEAN", "b", <<["D", "INTEGER"], ["D", "INTEGER"], ["B", "BOOLEAN"], ["A", "BOOLEAN"]>>)
add_call_chain(<<a,a,D,d,e,a,D>>)
bool_value (false)
numerical_negation
bool_value (false)
bool_value (false)
numerical_negation
bool_value (true)
add_call_chain(<<b,C,D,c,a,C>>)
logical_negation
add_call_chain(<<INTEGER,a,a,C,c>>)
add_command("C", "e", <<["A", "e"], ["e", "INTEGER"], ["a", "BOOLEAN"], ["B", "INTEGER"], ["A", "BOOLEAN"]>>)
type_check
add_call_chain(<<D>>)
add_attribute("BOOLEAN", "C", "B")
equals
logical_negation
int_value (15)
add_query("D", "e", <<["C", "BOOLEAN"], ["d", "e"], ["D", "INTEGER"], ["INTEGER", "e"], ["D", "b"], ["D", "b"], ["BOOLEAN", "INTEGER"], ["e", "INTEGER"]>>, "C")
add_attribute("D", "C", "BOOLEAN")
add_class(INTEGER)
add_call_chain(<<INTEGER,B,D>>)
type_check
int_value (4)
add_attribute("C", "b", "BOOLEAN")
numerical_negation
add_call_chain(<<a,B,b>>)
add_attribute("A", "a", "B")
conjunction
add_call_chain(<<C,e,e,C,D,c>>)
disjunction
bool_value (false)
numerical_negation
numerical_negation
add_call_chain(<<A,BOOLEAN,a,b,INTEGER,B,D,a>>)
equals
add_query("A", "d", <<["C", "BOOLEAN"], ["D", "INTEGER"], ["d", "BOOLEAN"]>>, "INTEGER")
add_call_chain(<<a,INTEGER,D>>)
logical_negation
add_attribute("d", "INTEGER", "INTEGER")
add_attribute("D", "e", "INTEGER")
add_attribute("a", "C", "c")
add_command("B", "D", <<["b", "INTEGER"], ["d", "BOOLEAN"], ["d", "INTEGER"], ["d", "INTEGER"], ["e", "INTEGER"], ["A", "D"]>>)
add_call_chain(<<c,D,D>>)
add_query("c", "C", <<["B", "A"], ["C", "INTEGER"], ["C", "INTEGER"], ["d", "INTEGER"], ["B", "INTEGER"], ["A", "INTEGER"], ["a", "BOOLEAN"], ["B", "INTEGER"], ["D", "INTEGER"]>>, "BOOLEAN")
add_query("d", "D", <<["e", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "INTEGER"]>>, "d")
add_attribute("c", "e", "BOOLEAN")
add_call_chain(<<D>>)
bool_value (true)
add_call_chain(<<A,BOOLEAN,B,INTEGER,e,a,b,B,C>>)
add_call_chain(<<D,c,c,B,D>>)
addition
equals
modulo
add_query("c", "C", <<["D", "BOOLEAN"]>>, "e")
add_query("C", "C", <<["INTEGER", "c"], ["d", "INTEGER"], ["A", "D"], ["a", "INTEGER"], ["d", "d"], ["C", "INTEGER"], ["b", "e"]>>, "A")
numerical_negation
int_value (19)
add_attribute("D", "c", "BOOLEAN")
add_command("A", "B", <<["B", "INTEGER"], ["C", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["d", "INTEGER"]>>)
generate_java_code
add_command("b", "A", <<["d", "BOOLEAN"], ["d", "BOOLEAN"], ["d", "c"], ["b", "INTEGER"], ["d", "e"], ["c", "BOOLEAN"]>>)
add_call_chain(<<c,C,C,INTEGER,b,a,C,A>>)
add_query("D", "B", <<["e", "BOOLEAN"], ["C", "B"], ["B", "C"], ["INTEGER", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "INTEGER"]>>, "d")
add_attribute("BOOLEAN", "c", "C")
add_call_chain(<<D,A,c,b,A,BOOLEAN>>)
generate_java_code
add_command("INTEGER", "d", <<["d", "b"], ["BOOLEAN", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "d"], ["B", "A"]>>)
add_attribute("d", "C", "BOOLEAN")
add_query("a", "d", <<["C", "C"], ["INTEGER", "INTEGER"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["d", "A"], ["C", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "INTEGER"], ["INTEGER", "BOOLEAN"]>>, "B")
int_value (22)
add_call_chain(<<B,C,b,B,A,a,B,D,d>>)
int_value (28)
add_attribute("C", "C", "c")
add_call_chain(<<A,A,C,b,D>>)
add_query("c", "a", <<["BOOLEAN", "B"], ["B", "INTEGER"], ["D", "INTEGER"]>>, "b")
add_query("e", "A", <<["A", "INTEGER"], ["a", "INTEGER"], ["d", "BOOLEAN"], ["b", "BOOLEAN"]>>, "a")
quotient
add_query("c", "B", <<["b", "INTEGER"], ["d", "INTEGER"], ["b", "INTEGER"], ["A", "INTEGER"], ["c", "INTEGER"], ["d", "INTEGER"]>>, "C")
disjunction
generate_java_code
multiplication
bool_value (true)
add_query("D", "C", <<["d", "B"]>>, "e")
add_call_chain(<<a>>)
int_value (37)
numerical_negation
add_call_chain(<<D,c,B,D,C>>)
conjunction
bool_value (true)
add_call_chain(<<c,C,INTEGER,B,C,e,d,D>>)
add_query("e", "e", <<["A", "INTEGER"], ["e", "INTEGER"], ["d", "BOOLEAN"], ["d", "INTEGER"], ["d", "INTEGER"]>>, "c")
add_call_chain(<<b,BOOLEAN,BOOLEAN,A,B,A,a,d,BOOLEAN>>)
logical_negation
add_call_chain(<<c,c,c,INTEGER,e,B>>)
add_query("c", "c", <<["c", "D"], ["B", "BOOLEAN"], ["A", "D"]>>, "b")
numerical_negation
add_attribute("D", "c", "INTEGER")
add_attribute("D", "a", "C")
type_check
add_call_chain(<<B,C>>)
bool_value (false)
add_call_chain(<<c,c,C,a>>)
quotient
add_attribute("D", "A", "c")
add_query("c", "INTEGER", <<["b", "BOOLEAN"], ["e", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "d"]>>, "e")
add_command("e", "C", <<["e", "INTEGER"], ["a", "INTEGER"]>>)
conjunction
generate_java_code
disjunction
add_attribute("c", "C", "A")
logical_negation
type_check
type_check
add_attribute("B", "D", "B")
add_command("B", "C", <<["e", "INTEGER"], ["e", "BOOLEAN"], ["d", "INTEGER"], ["b", "BOOLEAN"], ["A", "INTEGER"], ["a", "BOOLEAN"]>>)
type_check
add_attribute("D", "INTEGER", "BOOLEAN")
add_attribute("C", "B", "BOOLEAN")
int_value (5)
add_call_chain(<<B,D,C,A,B,c,BOOLEAN,INTEGER,D>>)
int_value (25)
add_call_chain(<<a,A,D>>)
numerical_negation
add_command("A", "A", <<["B", "BOOLEAN"]>>)
int_value (37)
add_attribute("c", "b", "BOOLEAN")
add_command("b", "a", <<["d", "D"], ["e", "INTEGER"], ["B", "INTEGER"], ["e", "BOOLEAN"], ["INTEGER", "INTEGER"], ["D", "A"], ["a", "D"], ["d", "INTEGER"], ["C", "BOOLEAN"]>>)
add_attribute("B", "BOOLEAN", "B")
type_check
equals
add_query("b", "d", <<["d", "BOOLEAN"], ["e", "INTEGER"], ["a", "INTEGER"], ["D", "INTEGER"], ["D", "INTEGER"], ["e", "C"], ["D", "INTEGER"], ["d", "INTEGER"], ["INTEGER", "INTEGER"]>>, "B")
add_call_chain(<<A>>)
add_call_chain(<<d,e,A,C>>)
int_value (47)
numerical_negation
disjunction
int_value (32)
