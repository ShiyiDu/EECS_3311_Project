int_value (47)
conjunction
add_call_chain(<<D,A,BOOLEAN>>)
add_call_chain(<<a>>)
add_call_chain(<<e,c,a,C,b,a,d,b>>)
numerical_negation
add_query("INTEGER", "e", <<["BOOLEAN", "BOOLEAN"], ["d", "INTEGER"], ["A", "B"], ["b", "INTEGER"]>>, "INTEGER")
add_call_chain(<<b,D,D,C,c,INTEGER,a,D>>)
add_command("a", "B", <<["a", "e"], ["INTEGER", "INTEGER"], ["D", "INTEGER"], ["c", "INTEGER"], ["INTEGER", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["B", "D"], ["B", "BOOLEAN"], ["D", "d"]>>)
generate_java_code
bool_value (true)
int_value (45)
add_query("c", "B", <<["e", "c"], ["D", "INTEGER"], ["D", "BOOLEAN"]>>, "BOOLEAN")
multiplication
add_call_chain(<<e,B,a,b>>)
numerical_negation
logical_negation
less_than
bool_value (false)
add_call_chain(<<A,e,e,C,c>>)
add_attribute("BOOLEAN", "D", "INTEGER")
add_command("D", "d", <<["B", "BOOLEAN"], ["b", "INTEGER"], ["a", "INTEGER"], ["C", "BOOLEAN"], ["a", "BOOLEAN"]>>)
add_query("d", "b", <<["e", "INTEGER"], ["b", "INTEGER"], ["A", "BOOLEAN"], ["A", "a"], ["B", "B"], ["c", "B"], ["e", "INTEGER"], ["c", "BOOLEAN"]>>, "a")
add_query("A", "C", <<["B", "BOOLEAN"], ["B", "D"]>>, "D")
add_call_chain(<<b,C,B,B,d,C,A>>)
add_query("c", "B", <<["a", "INTEGER"], ["e", "C"], ["c", "e"], ["D", "C"]>>, "b")
add_query("d", "A", <<["b", "d"], ["d", "INTEGER"], ["C", "INTEGER"], ["a", "BOOLEAN"]>>, "A")
logical_negation
add_call_chain(<<B,INTEGER,B,C,c,C>>)
modulo
generate_java_code
logical_negation
add_call_chain(<<A,C,b,e,A,b,A>>)
bool_value (false)
add_call_chain(<<C,B,D,D,B,C,d>>)
add_call_chain(<<a>>)
type_check
type_check
logical_negation
add_attribute("INTEGER", "C", "B")
add_call_chain(<<A,A,d,INTEGER,D,d,C,c,A>>)
add_call_chain(<<a,c,d,A,c,c,B,d>>)
modulo
add_call_chain(<<BOOLEAN,A,INTEGER,D>>)
type_check
add_call_chain(<<c,A,D,c,A,C,e,D>>)
numerical_negation
logical_negation
int_value (27)
add_call_chain(<<D,b,e,B>>)
add_class(c)
multiplication
add_class(a)
generate_java_code
add_class(D)
add_attribute("B", "b", "BOOLEAN")
bool_value (true)
add_call_chain(<<a,BOOLEAN>>)
conjunction
add_call_chain(<<INTEGER,b,e>>)
add_query("c", "D", <<["a", "INTEGER"], ["C", "INTEGER"], ["A", "INTEGER"], ["c", "INTEGER"], ["a", "C"], ["B", "B"], ["a", "BOOLEAN"], ["B", "c"], ["e", "INTEGER"]>>, "b")
numerical_negation
quotient
add_call_chain(<<B,b,B,C,A,B,c>>)
conjunction
bool_value (true)
type_check
numerical_negation
numerical_negation
type_check
logical_negation
add_call_chain(<<A,c>>)
add_query("C", "b", <<["d", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "BOOLEAN"], ["b", "d"], ["D", "A"]>>, "e")
bool_value (false)
int_value (4)
add_call_chain(<<C,B,D,D,BOOLEAN,D,B>>)
generate_java_code
logical_negation
numerical_negation
generate_java_code
less_than
add_command("D", "e", <<["e", "INTEGER"], ["c", "INTEGER"], ["c", "a"], ["e", "e"], ["A", "D"], ["B", "BOOLEAN"], ["e", "d"], ["a", "e"], ["INTEGER", "BOOLEAN"]>>)
numerical_negation
bool_value (true)
add_attribute("BOOLEAN", "A", "INTEGER")
add_call_chain(<<INTEGER,e,B,b,d,A,B>>)
add_call_chain(<<c,b>>)
addition
conjunction
logical_negation
conjunction
bool_value (false)
bool_value (true)
generate_java_code
disjunction
type_check
conjunction
add_query("a", "B", <<["C", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["e", "INTEGER"], ["d", "D"], ["B", "BOOLEAN"], ["BOOLEAN", "C"]>>, "D")
add_class(A)
logical_negation
add_attribute("c", "B", "BOOLEAN")
add_class(e)
generate_java_code
add_call_chain(<<D,A>>)
int_value (17)
add_command("d", "D", <<["b", "C"], ["BOOLEAN", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["D", "INTEGER"], ["A", "INTEGER"], ["B", "D"]>>)
bool_value (true)
add_call_chain(<<B,d,B,D>>)
add_class(A)
int_value (16)
conjunction
add_query("C", "c", <<["e", "INTEGER"], ["B", "BOOLEAN"], ["b", "C"], ["a", "INTEGER"], ["A", "BOOLEAN"], ["d", "INTEGER"], ["BOOLEAN", "B"], ["a", "INTEGER"], ["d", "INTEGER"]>>, "C")
conjunction
int_value (44)
add_attribute("D", "d", "BOOLEAN")
numerical_negation
add_class(c)
add_call_chain(<<a>>)
add_call_chain(<<e,B,c,e,A,BOOLEAN,a,d,D>>)
less_than
conjunction
add_attribute("c", "b", "BOOLEAN")
bool_value (true)
int_value (40)
bool_value (false)
numerical_negation
disjunction
type_check
add_command("d", "A", <<["A", "INTEGER"], ["B", "INTEGER"], ["e", "c"], ["C", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["A", "INTEGER"]>>)
add_query("B", "d", <<["C", "A"], ["C", "C"], ["d", "INTEGER"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["c", "INTEGER"], ["C", "BOOLEAN"], ["b", "INTEGER"]>>, "D")
logical_negation
add_attribute("d", "A", "BOOLEAN")
add_call_chain(<<A,B,D>>)
type_check
add_command("D", "e", <<["e", "INTEGER"], ["C", "BOOLEAN"], ["d", "A"]>>)
add_command("c", "D", <<["C", "INTEGER"], ["D", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "A"], ["e", "INTEGER"], ["D", "INTEGER"], ["A", "C"]>>)
add_call_chain(<<e,A>>)
add_call_chain(<<a,c,d,e,BOOLEAN>>)
int_value (36)
add_query("a", "d", <<["c", "e"], ["b", "BOOLEAN"], ["d", "INTEGER"], ["c", "A"], ["INTEGER", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "INTEGER"]>>, "e")
add_attribute("b", "A", "D")
int_value (43)
add_call_chain(<<A,A,C,b,d,INTEGER,d,d,D>>)
add_query("c", "BOOLEAN", <<["C", "BOOLEAN"], ["D", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "INTEGER"], ["c", "C"], ["C", "BOOLEAN"], ["C", "BOOLEAN"]>>, "c")
numerical_negation
add_call_chain(<<D,d>>)
int_value (2)
equals
type_check
int_value (48)
add_attribute("d", "B", "D")
generate_java_code
add_class(B)
add_call_chain(<<A,C,b,d,d>>)
numerical_negation
bool_value (false)
greater_than
bool_value (true)
equals
add_command("C", "d", <<["c", "BOOLEAN"], ["A", "c"], ["c", "A"], ["e", "INTEGER"], ["C", "BOOLEAN"], ["e", "INTEGER"], ["b", "BOOLEAN"], ["C", "D"], ["e", "BOOLEAN"]>>)
generate_java_code
int_value (49)
add_attribute("C", "C", "a")
int_value (38)
add_call_chain(<<BOOLEAN,b,D,B,D,c,a,A,e>>)
generate_java_code
int_value (18)
conjunction
int_value (7)
add_attribute("C", "c", "c")
numerical_negation
disjunction
conjunction
add_attribute("C", "B", "INTEGER")
int_value (4)
add_command("e", "d", <<["a", "INTEGER"], ["B", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["a", "INTEGER"], ["A", "INTEGER"]>>)
int_value (15)
add_call_chain(<<B,C,B,C,B,INTEGER,c,B,a>>)
add_attribute("a", "c", "BOOLEAN")
disjunction
add_query("B", "A", <<["INTEGER", "INTEGER"], ["A", "A"], ["c", "a"], ["B", "INTEGER"], ["c", "BOOLEAN"]>>, "B")
add_query("A", "C", <<["INTEGER", "e"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["B", "INTEGER"], ["A", "a"], ["A", "c"], ["B", "BOOLEAN"], ["A", "D"]>>, "A")
add_command("a", "D", <<["a", "a"], ["d", "D"], ["c", "INTEGER"]>>)
numerical_negation
add_query("D", "b", <<["d", "INTEGER"], ["a", "INTEGER"], ["a", "d"], ["BOOLEAN", "BOOLEAN"], ["D", "INTEGER"], ["c", "B"], ["a", "b"], ["d", "INTEGER"]>>, "C")
modulo
conjunction
add_call_chain(<<a,D,A,B,BOOLEAN,INTEGER,d,C>>)
logical_negation
int_value (25)
type_check
bool_value (true)
numerical_negation
int_value (5)
add_attribute("a", "d", "INTEGER")
add_call_chain(<<A,c,c,e,B>>)
add_attribute("A", "D", "C")
add_call_chain(<<B,B,b,B,D,C,D>>)
add_command("A", "B", <<["BOOLEAN", "BOOLEAN"], ["e", "INTEGER"], ["e", "INTEGER"]>>)
add_call_chain(<<C,BOOLEAN,d,C>>)
add_call_chain(<<d,BOOLEAN,b,d>>)
add_query("b", "D", <<["B", "a"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["e", "A"], ["INTEGER", "BOOLEAN"], ["C", "a"]>>, "a")
modulo
add_call_chain(<<b,INTEGER,a,a,c,d,c,d,b>>)
add_command("d", "D", <<["e", "INTEGER"]>>)
add_query("d", "B", <<["C", "d"], ["C", "INTEGER"], ["A", "A"], ["D", "e"], ["D", "c"], ["b", "INTEGER"]>>, "B")
add_class(A)
add_attribute("C", "C", "BOOLEAN")
int_value (11)
generate_java_code
add_command("c", "b", <<["a", "D"]>>)
quotient
add_attribute("B", "C", "b")
bool_value (true)
add_call_chain(<<A,BOOLEAN,C,A,C>>)
add_call_chain(<<C,d>>)
numerical_negation
numerical_negation
greater_than
numerical_negation
add_query("C", "A", <<["d", "INTEGER"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["A", "BOOLEAN"]>>, "A")
add_command("C", "B", <<["a", "e"]>>)
bool_value (true)
add_call_chain(<<A,b,D,b,d,A,D,a,a>>)
bool_value (true)
generate_java_code
add_attribute("b", "B", "BOOLEAN")
add_query("a", "A", <<["INTEGER", "BOOLEAN"], ["b", "B"], ["INTEGER", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "d"]>>, "e")
add_call_chain(<<INTEGER,b,C,D,b,D>>)
logical_negation
add_call_chain(<<c,a,a,C,INTEGER>>)
bool_value (false)
bool_value (false)
add_class(D)
generate_java_code
type_check
add_call_chain(<<c>>)
less_than
add_call_chain(<<d,d,b,a,D,D,C,BOOLEAN,a>>)
add_attribute("C", "b", "BOOLEAN")
subtraction
disjunction
subtraction
logical_negation
