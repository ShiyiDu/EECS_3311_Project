add_class(D)
add_attribute("C", "C", "BOOLEAN")
add_query("A", "C", <<["A", "INTEGER"], ["a", "BOOLEAN"], ["a", "D"], ["C", "BOOLEAN"], ["A", "A"]>>, "C")
add_call_chain(<<C,D,e,b,b,BOOLEAN,a,D>>)
less_than
type_check
equals
add_command("A", "B", <<["b", "B"], ["b", "BOOLEAN"], ["D", "INTEGER"], ["e", "C"], ["A", "BOOLEAN"], ["C", "INTEGER"]>>)
add_call_chain(<<c,d,BOOLEAN,b,B,A,b,B>>)
add_attribute("D", "e", "a")
conjunction
add_command("e", "e", <<["C", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "c"], ["b", "a"]>>)
bool_value (true)
subtraction
bool_value (true)
add_query("B", "B", <<["B", "BOOLEAN"], ["e", "INTEGER"]>>, "a")
conjunction
type_check
add_attribute("A", "B", "BOOLEAN")
bool_value (true)
add_call_chain(<<A,b,e,BOOLEAN,c,d>>)
int_value (32)
add_call_chain(<<e,e,INTEGER,D,b,c,C>>)
logical_negation
add_query("B", "c", <<["d", "C"], ["A", "INTEGER"], ["BOOLEAN", "c"]>>, "D")
add_call_chain(<<c,D,c,A,e,C>>)
add_attribute("a", "a", "e")
add_query("A", "c", <<["B", "a"], ["d", "INTEGER"]>>, "B")
int_value (4)
modulo
type_check
type_check
bool_value (true)
add_query("b", "a", <<["a", "INTEGER"]>>, "D")
add_call_chain(<<a,e,C,c,A,B>>)
add_query("B", "c", <<["e", "INTEGER"], ["c", "C"], ["A", "BOOLEAN"], ["d", "a"], ["C", "BOOLEAN"], ["b", "e"], ["BOOLEAN", "BOOLEAN"], ["c", "d"]>>, "d")
add_command("c", "e", <<["C", "B"], ["b", "BOOLEAN"], ["B", "BOOLEAN"]>>)
add_call_chain(<<c,d,e,a,B>>)
modulo
add_call_chain(<<INTEGER,INTEGER,e,B>>)
add_attribute("b", "D", "C")
add_query("A", "D", <<["A", "d"], ["D", "INTEGER"], ["B", "INTEGER"], ["D", "B"]>>, "C")
numerical_negation
add_command("B", "A", <<["D", "c"], ["e", "INTEGER"], ["A", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["C", "INTEGER"], ["D", "INTEGER"], ["C", "BOOLEAN"]>>)
add_class(D)
numerical_negation
add_query("INTEGER", "B", <<["C", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["d", "INTEGER"], ["e", "B"]>>, "C")
add_attribute("d", "e", "INTEGER")
type_check
add_command("C", "d", <<["b", "b"], ["A", "BOOLEAN"], ["a", "INTEGER"]>>)
generate_java_code
add_call_chain(<<C,BOOLEAN,A,INTEGER,d,A>>)
add_command("e", "c", <<["a", "INTEGER"], ["a", "INTEGER"], ["e", "b"], ["c", "INTEGER"], ["INTEGER", "INTEGER"], ["D", "d"], ["D", "BOOLEAN"], ["b", "INTEGER"]>>)
int_value (13)
bool_value (false)
add_class(a)
numerical_negation
add_call_chain(<<a,D,BOOLEAN,d,B,a,c,C>>)
add_query("C", "d", <<["B", "A"], ["D", "BOOLEAN"], ["INTEGER", "c"], ["e", "INTEGER"], ["D", "B"], ["INTEGER", "INTEGER"], ["A", "BOOLEAN"]>>, "A")
add_call_chain(<<c,d,b,d,D>>)
subtraction
add_query("d", "c", <<["BOOLEAN", "B"], ["D", "INTEGER"], ["BOOLEAN", "A"], ["c", "b"], ["INTEGER", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "C"], ["A", "BOOLEAN"]>>, "e")
add_query("C", "B", <<["e", "BOOLEAN"], ["d", "B"], ["D", "INTEGER"]>>, "A")
add_call_chain(<<D,B,A>>)
add_query("B", "BOOLEAN", <<["A", "BOOLEAN"], ["B", "INTEGER"], ["C", "BOOLEAN"], ["a", "INTEGER"], ["INTEGER", "INTEGER"], ["c", "INTEGER"], ["A", "INTEGER"], ["B", "c"], ["b", "D"]>>, "d")
numerical_negation
type_check
add_call_chain(<<C,INTEGER,b,D,c,A,D>>)
add_call_chain(<<e,e,C,INTEGER,c,b,C,C>>)
equals
add_call_chain(<<D,INTEGER>>)
generate_java_code
addition
add_call_chain(<<BOOLEAN,C,A>>)
type_check
add_call_chain(<<c,d,a>>)
add_attribute("b", "c", "INTEGER")
add_call_chain(<<e,B>>)
add_command("B", "INTEGER", <<["e", "BOOLEAN"]>>)
logical_negation
numerical_negation
logical_negation
numerical_negation
greater_than
add_query("c", "e", <<["B", "a"], ["d", "INTEGER"], ["c", "a"], ["D", "D"], ["B", "a"], ["e", "A"], ["e", "INTEGER"], ["d", "d"], ["C", "INTEGER"]>>, "e")
add_call_chain(<<D,A,A,a,d,d,INTEGER>>)
int_value (14)
add_call_chain(<<a,b,D,d,b,INTEGER,D,a,C>>)
conjunction
add_attribute("D", "C", "INTEGER")
add_query("BOOLEAN", "C", <<["a", "INTEGER"]>>, "c")
less_than
subtraction
int_value (21)
quotient
add_command("C", "e", <<["c", "BOOLEAN"], ["a", "a"], ["INTEGER", "a"]>>)
add_query("A", "C", <<["d", "BOOLEAN"], ["D", "INTEGER"], ["b", "INTEGER"], ["b", "INTEGER"], ["A", "BOOLEAN"]>>, "A")
add_call_chain(<<e,BOOLEAN,C>>)
conjunction
add_call_chain(<<b,a,e>>)
add_query("A", "B", <<["C", "INTEGER"], ["BOOLEAN", "C"], ["B", "BOOLEAN"]>>, "C")
addition
int_value (40)
add_call_chain(<<A,b,a,B>>)
generate_java_code
type_check
disjunction
add_call_chain(<<C,C,e,b,e,B,A,INTEGER>>)
add_call_chain(<<A,b,a,D,INTEGER,a>>)
addition
add_call_chain(<<b,D,e,INTEGER,D>>)
add_query("d", "BOOLEAN", <<["C", "INTEGER"], ["a", "INTEGER"], ["A", "INTEGER"], ["c", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["c", "BOOLEAN"]>>, "e")
add_query("D", "B", <<["D", "INTEGER"], ["b", "INTEGER"], ["A", "INTEGER"], ["B", "C"], ["e", "A"], ["d", "INTEGER"], ["B", "BOOLEAN"], ["d", "C"], ["B", "INTEGER"]>>, "B")
greater_than
disjunction
bool_value (false)
add_command("BOOLEAN", "a", <<["D", "INTEGER"], ["D", "BOOLEAN"]>>)
int_value (29)
add_attribute("BOOLEAN", "D", "BOOLEAN")
add_query("D", "C", <<["A", "INTEGER"], ["B", "BOOLEAN"], ["c", "B"], ["b", "c"], ["a", "BOOLEAN"], ["D", "INTEGER"], ["a", "BOOLEAN"], ["A", "BOOLEAN"]>>, "BOOLEAN")
less_than
numerical_negation
add_attribute("b", "C", "b")
add_attribute("B", "a", "BOOLEAN")
add_command("d", "B", <<["c", "D"], ["D", "INTEGER"], ["C", "A"], ["B", "INTEGER"], ["B", "INTEGER"], ["e", "INTEGER"]>>)
add_attribute("D", "a", "BOOLEAN")
add_command("D", "B", <<["c", "INTEGER"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["D", "a"], ["e", "INTEGER"], ["a", "INTEGER"]>>)
add_call_chain(<<B,c,C,e>>)
add_call_chain(<<C,b,D>>)
add_attribute("d", "B", "INTEGER")
add_call_chain(<<c,d,D,b,INTEGER,C>>)
add_command("B", "c", <<["c", "INTEGER"], ["INTEGER", "BOOLEAN"], ["C", "BOOLEAN"], ["d", "INTEGER"]>>)
add_call_chain(<<b,b,c>>)
logical_negation
conjunction
add_attribute("e", "e", "INTEGER")
conjunction
type_check
add_call_chain(<<A,e>>)
logical_negation
add_query("e", "D", <<["B", "INTEGER"], ["b", "INTEGER"], ["BOOLEAN", "D"]>>, "e")
numerical_negation
type_check
add_call_chain(<<B>>)
add_attribute("c", "b", "d")
add_command("d", "a", <<["C", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
type_check
add_class(A)
bool_value (false)
add_call_chain(<<d,C,C,C,e,a,A,b>>)
logical_negation
generate_java_code
add_call_chain(<<e,a,A>>)
logical_negation
multiplication
add_call_chain(<<C,a,B,C,C,b,e,d>>)
add_attribute("c", "B", "D")
add_command("B", "b", <<["A", "BOOLEAN"], ["b", "INTEGER"], ["b", "INTEGER"], ["B", "d"], ["b", "INTEGER"], ["c", "c"], ["b", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "INTEGER"]>>)
add_query("c", "e", <<["e", "INTEGER"], ["D", "INTEGER"], ["D", "INTEGER"], ["b", "INTEGER"], ["a", "e"], ["c", "INTEGER"], ["INTEGER", "BOOLEAN"], ["D", "BOOLEAN"]>>, "B")
add_query("B", "b", <<["A", "INTEGER"], ["D", "INTEGER"]>>, "b")
conjunction
add_attribute("b", "D", "BOOLEAN")
add_call_chain(<<BOOLEAN,e,a,a,a>>)
add_call_chain(<<A,c,a,INTEGER,A,C,b,c,e>>)
add_call_chain(<<A,D,B,C>>)
numerical_negation
int_value (48)
numerical_negation
numerical_negation
int_value (21)
add_call_chain(<<A,C>>)
add_command("A", "D", <<["B", "INTEGER"], ["D", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
add_call_chain(<<B,b,b,D,b>>)
add_attribute("a", "b", "BOOLEAN")
conjunction
generate_java_code
disjunction
add_class(B)
add_call_chain(<<c,c,D,e,e,D>>)
add_call_chain(<<B,C,INTEGER,b,c,B,BOOLEAN,A,c>>)
bool_value (false)
add_call_chain(<<e,d,c,b>>)
generate_java_code
add_query("b", "D", <<["a", "B"], ["d", "B"], ["c", "INTEGER"], ["C", "C"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["A", "INTEGER"], ["c", "BOOLEAN"]>>, "a")
add_attribute("C", "BOOLEAN", "INTEGER")
add_class(a)
type_check
add_command("e", "a", <<["D", "INTEGER"], ["C", "INTEGER"], ["D", "b"], ["e", "BOOLEAN"], ["a", "INTEGER"]>>)
add_query("B", "d", <<["A", "INTEGER"], ["C", "INTEGER"], ["c", "INTEGER"], ["A", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["INTEGER", "D"], ["A", "a"]>>, "B")
add_command("D", "D", <<["a", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
less_than
add_command("d", "C", <<["d", "BOOLEAN"]>>)
add_query("C", "B", <<["D", "INTEGER"], ["c", "C"], ["INTEGER", "BOOLEAN"], ["d", "INTEGER"]>>, "d")
add_query("b", "e", <<["D", "e"]>>, "A")
greater_than
logical_negation
add_call_chain(<<A,d,e,a,b,a,C>>)
bool_value (true)
add_command("e", "D", <<["B", "C"]>>)
logical_negation
add_query("D", "c", <<["C", "B"], ["e", "INTEGER"], ["c", "a"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["INTEGER", "INTEGER"]>>, "b")
logical_negation
add_call_chain(<<BOOLEAN,D,C,C,a,a,BOOLEAN>>)
type_check
less_than
logical_negation
less_than
int_value (38)
add_attribute("e", "D", "BOOLEAN")
add_command("d", "BOOLEAN", <<["B", "d"], ["b", "BOOLEAN"], ["INTEGER", "INTEGER"], ["c", "BOOLEAN"], ["b", "BOOLEAN"]>>)
add_query("B", "c", <<["BOOLEAN", "BOOLEAN"], ["e", "INTEGER"], ["D", "D"], ["D", "a"], ["a", "e"]>>, "a")
add_command("D", "e", <<["A", "A"], ["c", "BOOLEAN"], ["D", "INTEGER"], ["D", "INTEGER"], ["D", "D"], ["A", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "BOOLEAN"]>>)
generate_java_code
add_call_chain(<<a,e>>)
int_value (21)
int_value (6)
