int_value (19)
bool_value (true)
generate_java_code
add_query("e", "c", <<["INTEGER", "INTEGER"], ["d", "b"], ["D", "INTEGER"], ["B", "INTEGER"], ["C", "b"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["d", "d"], ["a", "INTEGER"]>>, "B")
numerical_negation
conjunction
type_check
add_call_chain(<<C,D,b,A,INTEGER,b>>)
add_command("e", "a", <<["A", "B"], ["B", "BOOLEAN"], ["b", "a"], ["d", "C"], ["A", "BOOLEAN"], ["d", "BOOLEAN"]>>)
int_value (1)
add_class(C)
add_command("B", "a", <<["d", "BOOLEAN"], ["b", "b"], ["b", "B"]>>)
numerical_negation
add_class(A)
quotient
int_value (40)
logical_negation
logical_negation
numerical_negation
int_value (39)
add_call_chain(<<a,B,D,B,D,b,b,B>>)
int_value (32)
generate_java_code
add_query("c", "B", <<["e", "BOOLEAN"], ["A", "INTEGER"], ["B", "INTEGER"]>>, "B")
add_class(BOOLEAN)
add_class(e)
add_attribute("e", "BOOLEAN", "e")
bool_value (false)
add_call_chain(<<A,BOOLEAN,B>>)
bool_value (false)
add_command("a", "a", <<["a", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "C"], ["d", "e"], ["A", "a"], ["D", "A"]>>)
generate_java_code
add_call_chain(<<A,e,a,c>>)
disjunction
disjunction
add_attribute("d", "A", "INTEGER")
add_attribute("a", "A", "D")
add_call_chain(<<C,B,A,b>>)
bool_value (false)
add_call_chain(<<b,C,A,d,C,b,e>>)
type_check
add_command("b", "b", <<["d", "INTEGER"]>>)
conjunction
add_query("d", "C", <<["D", "BOOLEAN"], ["c", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["d", "INTEGER"], ["d", "BOOLEAN"], ["C", "BOOLEAN"]>>, "e")
int_value (49)
add_call_chain(<<D,B,a,C,INTEGER>>)
greater_than
logical_negation
greater_than
bool_value (true)
add_call_chain(<<c,a,B,D,C,A>>)
equals
add_call_chain(<<C,C,e,B,D,BOOLEAN,C,A>>)
add_command("D", "d", <<["a", "INTEGER"], ["e", "BOOLEAN"], ["a", "a"], ["e", "a"], ["C", "INTEGER"], ["d", "BOOLEAN"], ["B", "BOOLEAN"], ["INTEGER", "INTEGER"], ["d", "BOOLEAN"]>>)
add_attribute("A", "C", "BOOLEAN")
generate_java_code
bool_value (true)
add_command("A", "c", <<["A", "BOOLEAN"], ["d", "b"], ["b", "INTEGER"], ["a", "B"]>>)
subtraction
add_call_chain(<<BOOLEAN>>)
logical_negation
numerical_negation
int_value (34)
add_class(e)
add_command("B", "B", <<["e", "INTEGER"], ["d", "INTEGER"], ["BOOLEAN", "D"], ["A", "C"], ["B", "INTEGER"]>>)
add_call_chain(<<b,e,c,D>>)
generate_java_code
bool_value (true)
logical_negation
numerical_negation
add_query("a", "e", <<["b", "BOOLEAN"], ["A", "INTEGER"], ["d", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "B"]>>, "a")
add_query("A", "A", <<["e", "e"], ["b", "b"], ["d", "INTEGER"]>>, "A")
add_attribute("B", "B", "a")
bool_value (true)
add_call_chain(<<BOOLEAN,c>>)
add_attribute("b", "B", "a")
add_command("c", "b", <<["C", "D"], ["a", "INTEGER"], ["INTEGER", "a"], ["A", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["a", "d"], ["e", "INTEGER"], ["D", "c"]>>)
int_value (47)
int_value (41)
add_call_chain(<<A,d,B,BOOLEAN,a,D,d,B,A>>)
add_call_chain(<<e,e,BOOLEAN,a,C>>)
int_value (41)
add_attribute("e", "a", "a")
add_call_chain(<<D,D>>)
numerical_negation
add_query("a", "C", <<["BOOLEAN", "BOOLEAN"], ["b", "INTEGER"], ["A", "INTEGER"], ["c", "INTEGER"], ["d", "INTEGER"], ["c", "b"], ["C", "BOOLEAN"], ["C", "INTEGER"]>>, "A")
int_value (11)
numerical_negation
int_value (40)
numerical_negation
add_command("a", "b", <<["c", "A"], ["BOOLEAN", "INTEGER"], ["C", "A"], ["b", "INTEGER"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["A", "INTEGER"], ["C", "INTEGER"]>>)
numerical_negation
add_query("a", "BOOLEAN", <<["C", "e"]>>, "a")
add_attribute("B", "b", "INTEGER")
int_value (33)
conjunction
generate_java_code
type_check
add_class(INTEGER)
add_query("d", "a", <<["d", "D"], ["a", "INTEGER"], ["D", "b"], ["c", "INTEGER"], ["B", "BOOLEAN"], ["B", "INTEGER"], ["D", "BOOLEAN"]>>, "B")
add_call_chain(<<e,e,C,d>>)
conjunction
add_command("d", "B", <<["c", "BOOLEAN"], ["D", "C"]>>)
add_attribute("c", "B", "INTEGER")
bool_value (true)
add_call_chain(<<a,b,d>>)
type_check
int_value (25)
add_query("D", "b", <<["e", "d"]>>, "D")
modulo
logical_negation
add_call_chain(<<b,c,D,D,a>>)
add_query("B", "INTEGER", <<["b", "INTEGER"], ["C", "BOOLEAN"], ["D", "INTEGER"]>>, "e")
subtraction
bool_value (true)
multiplication
add_call_chain(<<C,e,A,C,a>>)
add_attribute("a", "B", "BOOLEAN")
logical_negation
add_call_chain(<<D,b,d,C,c,c,b>>)
type_check
add_call_chain(<<b>>)
generate_java_code
add_attribute("INTEGER", "d", "INTEGER")
generate_java_code
add_call_chain(<<c,B,e,d,e,a,A>>)
bool_value (true)
logical_negation
add_command("d", "d", <<["e", "A"], ["a", "d"], ["a", "BOOLEAN"], ["d", "BOOLEAN"], ["b", "d"], ["BOOLEAN", "B"]>>)
bool_value (true)
add_call_chain(<<c,c,INTEGER,d,INTEGER,b,A,d>>)
add_query("a", "A", <<["e", "INTEGER"], ["A", "INTEGER"], ["a", "C"], ["A", "INTEGER"], ["C", "a"], ["A", "BOOLEAN"]>>, "INTEGER")
add_command("INTEGER", "e", <<["e", "BOOLEAN"]>>)
equals
add_command("D", "A", <<["D", "BOOLEAN"]>>)
add_attribute("a", "b", "c")
conjunction
generate_java_code
disjunction
equals
conjunction
add_command("e", "D", <<["BOOLEAN", "INTEGER"], ["e", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "INTEGER"], ["a", "INTEGER"], ["b", "BOOLEAN"], ["c", "INTEGER"], ["A", "INTEGER"]>>)
int_value (30)
add_call_chain(<<c>>)
numerical_negation
add_call_chain(<<C,C,b,D,b>>)
add_query("A", "d", <<["D", "A"], ["A", "d"], ["A", "INTEGER"], ["INTEGER", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "A"], ["C", "BOOLEAN"], ["C", "e"]>>, "INTEGER")
bool_value (false)
logical_negation
logical_negation
numerical_negation
equals
multiplication
int_value (45)
add_attribute("C", "a", "INTEGER")
add_command("b", "a", <<["e", "A"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "BOOLEAN"]>>)
add_query("B", "A", <<["C", "BOOLEAN"], ["b", "INTEGER"], ["D", "INTEGER"], ["B", "INTEGER"], ["B", "INTEGER"]>>, "A")
add_query("c", "A", <<["b", "INTEGER"], ["B", "c"], ["c", "BOOLEAN"], ["b", "B"]>>, "C")
bool_value (false)
type_check
int_value (3)
add_call_chain(<<d,b>>)
type_check
add_attribute("A", "A", "INTEGER")
add_call_chain(<<c,C,A,A,C,INTEGER,B,c>>)
add_attribute("e", "D", "BOOLEAN")
add_call_chain(<<B,A,A,A>>)
add_query("D", "B", <<["C", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["e", "C"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "INTEGER"]>>, "B")
numerical_negation
add_attribute("e", "a", "INTEGER")
add_attribute("BOOLEAN", "b", "INTEGER")
add_call_chain(<<C,C>>)
generate_java_code
add_command("e", "c", <<["D", "BOOLEAN"], ["d", "BOOLEAN"], ["c", "A"]>>)
less_than
add_call_chain(<<INTEGER>>)
bool_value (true)
add_command("D", "d", <<["c", "c"], ["d", "BOOLEAN"], ["e", "a"], ["d", "INTEGER"], ["e", "INTEGER"]>>)
multiplication
add_class(e)
generate_java_code
quotient
add_call_chain(<<a,b,a,INTEGER,A,d,B,D>>)
add_command("D", "D", <<["A", "BOOLEAN"], ["INTEGER", "b"]>>)
add_command("c", "D", <<["D", "BOOLEAN"]>>)
add_call_chain(<<a,c>>)
disjunction
type_check
bool_value (false)
logical_negation
add_call_chain(<<D,c,INTEGER>>)
numerical_negation
logical_negation
bool_value (false)
add_attribute("b", "A", "BOOLEAN")
add_call_chain(<<c,b,C,A,c,b>>)
type_check
modulo
add_attribute("A", "A", "INTEGER")
type_check
add_call_chain(<<D,D>>)
type_check
add_call_chain(<<D>>)
bool_value (false)
numerical_negation
int_value (31)
add_query("A", "D", <<["C", "B"], ["c", "INTEGER"], ["A", "d"], ["C", "INTEGER"], ["c", "BOOLEAN"], ["c", "INTEGER"], ["A", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["b", "b"]>>, "e")
conjunction
numerical_negation
numerical_negation
multiplication
int_value (12)
add_call_chain(<<D>>)
add_call_chain(<<e,c,d,INTEGER,INTEGER,c,c>>)
add_command("b", "D", <<["d", "INTEGER"]>>)
add_class(D)
add_call_chain(<<a,B,INTEGER,B,B,a>>)
int_value (10)
add_attribute("c", "c", "C")
generate_java_code
add_call_chain(<<D,D,INTEGER,a,A,A,a,B,D>>)
add_command("D", "a", <<["A", "e"], ["B", "c"], ["A", "INTEGER"], ["a", "a"]>>)
add_call_chain(<<A,INTEGER,B,b,B>>)
logical_negation
numerical_negation
quotient
add_call_chain(<<D,e,C,e,INTEGER,d>>)
