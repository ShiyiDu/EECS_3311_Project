add_call_chain(<<a>>)
add_class(C)
add_attribute("C", "INTEGER", "b")
logical_negation
int_value (39)
equals
bool_value (false)
add_attribute("B", "A", "B")
add_query("D", "D", <<["A", "INTEGER"], ["D", "INTEGER"], ["C", "INTEGER"], ["d", "INTEGER"], ["D", "INTEGER"], ["D", "INTEGER"], ["a", "BOOLEAN"], ["C", "INTEGER"], ["d", "BOOLEAN"]>>, "a")
add_call_chain(<<a,A,D,B,b,c,C,b,C>>)
logical_negation
add_attribute("B", "A", "A")
add_call_chain(<<INTEGER,INTEGER,D,D,b,D,B>>)
add_command("C", "b", <<["D", "INTEGER"], ["c", "INTEGER"], ["e", "INTEGER"]>>)
add_attribute("c", "a", "INTEGER")
logical_negation
add_class(d)
logical_negation
add_query("C", "b", <<["e", "INTEGER"], ["e", "BOOLEAN"]>>, "c")
add_attribute("b", "b", "BOOLEAN")
add_attribute("B", "C", "D")
add_attribute("D", "c", "INTEGER")
numerical_negation
add_command("D", "C", <<["A", "INTEGER"], ["B", "d"], ["B", "d"], ["B", "C"]>>)
bool_value (true)
add_query("INTEGER", "b", <<["INTEGER", "INTEGER"], ["c", "d"], ["b", "INTEGER"], ["e", "e"], ["B", "d"], ["a", "C"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["C", "BOOLEAN"]>>, "A")
bool_value (true)
greater_than
add_query("INTEGER", "D", <<["e", "c"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["B", "C"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>, "b")
add_query("B", "c", <<["c", "INTEGER"], ["b", "INTEGER"], ["B", "a"], ["c", "d"], ["BOOLEAN", "b"], ["c", "BOOLEAN"], ["e", "INTEGER"], ["D", "B"], ["BOOLEAN", "BOOLEAN"]>>, "BOOLEAN")
add_query("a", "B", <<["INTEGER", "BOOLEAN"], ["B", "A"], ["B", "BOOLEAN"], ["D", "c"], ["a", "B"], ["a", "BOOLEAN"], ["c", "BOOLEAN"]>>, "a")
add_query("e", "d", <<["d", "c"], ["A", "b"]>>, "C")
add_call_chain(<<b,B,C,B,c,c>>)
quotient
int_value (40)
bool_value (false)
logical_negation
bool_value (true)
add_query("C", "BOOLEAN", <<["c", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "INTEGER"], ["b", "INTEGER"]>>, "A")
add_command("C", "C", <<["b", "e"], ["a", "BOOLEAN"], ["A", "A"]>>)
add_call_chain(<<A,b,a,a,d,D,c>>)
add_attribute("D", "e", "BOOLEAN")
add_query("b", "BOOLEAN", <<["B", "INTEGER"], ["a", "A"], ["D", "BOOLEAN"], ["e", "INTEGER"]>>, "D")
add_class(A)
add_call_chain(<<e,A,a,B,A>>)
add_call_chain(<<e,B,c,c,D,INTEGER,a,c,B>>)
generate_java_code
add_query("BOOLEAN", "c", <<["D", "INTEGER"], ["B", "INTEGER"], ["b", "B"], ["d", "b"]>>, "d")
numerical_negation
add_query("A", "b", <<["e", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "C"], ["b", "INTEGER"]>>, "D")
addition
type_check
disjunction
add_call_chain(<<c,A,c,b,a,a>>)
bool_value (false)
add_attribute("c", "B", "e")
add_call_chain(<<D,BOOLEAN,a>>)
add_call_chain(<<e,INTEGER,B>>)
subtraction
bool_value (false)
disjunction
add_command("c", "b", <<["d", "C"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["b", "INTEGER"], ["C", "C"], ["D", "BOOLEAN"]>>)
add_query("a", "D", <<["A", "INTEGER"], ["A", "c"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["D", "BOOLEAN"]>>, "a")
add_query("A", "D", <<["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "A"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["b", "INTEGER"]>>, "D")
add_command("B", "A", <<["a", "INTEGER"], ["d", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
numerical_negation
add_attribute("BOOLEAN", "INTEGER", "INTEGER")
bool_value (false)
add_attribute("INTEGER", "C", "INTEGER")
add_query("d", "B", <<["C", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "INTEGER"], ["INTEGER", "INTEGER"], ["d", "A"], ["B", "d"], ["b", "BOOLEAN"], ["D", "BOOLEAN"], ["d", "INTEGER"]>>, "BOOLEAN")
add_call_chain(<<b,d,b,a,D,C,A,D>>)
add_call_chain(<<B,D,a>>)
add_class(A)
add_call_chain(<<a,B,a,e>>)
equals
bool_value (true)
add_attribute("D", "A", "d")
type_check
conjunction
numerical_negation
add_command("e", "B", <<["B", "INTEGER"], ["B", "INTEGER"], ["a", "C"], ["e", "INTEGER"], ["d", "INTEGER"]>>)
generate_java_code
int_value (8)
bool_value (true)
add_class(a)
add_class(C)
add_call_chain(<<c,C,B,a,b,e,BOOLEAN,a>>)
add_attribute("e", "D", "INTEGER")
logical_negation
numerical_negation
add_command("A", "c", <<["d", "BOOLEAN"], ["d", "a"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["b", "INTEGER"]>>)
add_attribute("BOOLEAN", "D", "e")
add_attribute("D", "B", "C")
add_command("D", "d", <<["a", "INTEGER"], ["d", "INTEGER"]>>)
add_attribute("b", "INTEGER", "INTEGER")
bool_value (false)
int_value (4)
add_class(c)
add_call_chain(<<D,A,a,a,A>>)
numerical_negation
logical_negation
add_attribute("C", "B", "INTEGER")
logical_negation
add_attribute("BOOLEAN", "a", "e")
bool_value (true)
bool_value (false)
quotient
int_value (9)
add_call_chain(<<INTEGER,e,D,b,c,e,INTEGER,d,c>>)
numerical_negation
greater_than
numerical_negation
int_value (42)
type_check
bool_value (false)
logical_negation
add_query("d", "C", <<["C", "INTEGER"], ["D", "c"], ["BOOLEAN", "BOOLEAN"], ["b", "INTEGER"], ["B", "INTEGER"]>>, "d")
numerical_negation
add_query("A", "e", <<["A", "INTEGER"], ["C", "A"], ["C", "INTEGER"], ["C", "e"], ["b", "b"]>>, "b")
int_value (10)
add_call_chain(<<a,e,c,e,d,e,b>>)
type_check
subtraction
bool_value (false)
numerical_negation
generate_java_code
numerical_negation
add_attribute("a", "B", "BOOLEAN")
bool_value (true)
add_query("D", "INTEGER", <<["d", "e"], ["D", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["D", "e"], ["C", "BOOLEAN"], ["BOOLEAN", "D"], ["BOOLEAN", "BOOLEAN"]>>, "b")
add_query("b", "C", <<["D", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "C"], ["C", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["d", "BOOLEAN"]>>, "BOOLEAN")
add_call_chain(<<INTEGER,a,B,c,D>>)
numerical_negation
bool_value (true)
generate_java_code
add_command("D", "a", <<["A", "BOOLEAN"], ["C", "INTEGER"], ["c", "BOOLEAN"]>>)
add_call_chain(<<A,A>>)
logical_negation
numerical_negation
add_command("C", "d", <<["C", "BOOLEAN"], ["B", "INTEGER"]>>)
int_value (37)
logical_negation
bool_value (true)
add_call_chain(<<d,B,INTEGER,a,BOOLEAN,c,e>>)
bool_value (false)
modulo
generate_java_code
add_call_chain(<<A>>)
add_query("D", "e", <<["INTEGER", "INTEGER"]>>, "BOOLEAN")
generate_java_code
add_attribute("e", "D", "B")
add_call_chain(<<c,A,e,e,c,d>>)
generate_java_code
greater_than
add_call_chain(<<b,e>>)
bool_value (false)
type_check
add_class(B)
add_command("c", "d", <<["b", "a"], ["D", "INTEGER"], ["c", "c"]>>)
numerical_negation
greater_than
bool_value (false)
bool_value (true)
add_query("a", "d", <<["d", "INTEGER"], ["d", "INTEGER"], ["d", "INTEGER"], ["d", "INTEGER"], ["D", "BOOLEAN"], ["d", "BOOLEAN"]>>, "B")
numerical_negation
add_call_chain(<<c,d,d,C,e,D,C>>)
logical_negation
add_class(e)
add_command("c", "INTEGER", <<["D", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["B", "INTEGER"], ["A", "d"], ["c", "BOOLEAN"]>>)
add_class(D)
add_command("B", "A", <<["d", "BOOLEAN"], ["A", "INTEGER"], ["e", "INTEGER"], ["D", "BOOLEAN"]>>)
add_class(D)
add_call_chain(<<INTEGER,B,a,BOOLEAN,C,D,A,C,a>>)
int_value (5)
add_command("e", "A", <<["e", "a"], ["B", "INTEGER"], ["A", "BOOLEAN"]>>)
add_command("C", "INTEGER", <<["a", "INTEGER"], ["B", "BOOLEAN"], ["C", "INTEGER"], ["a", "BOOLEAN"], ["INTEGER", "e"], ["d", "b"], ["B", "INTEGER"]>>)
bool_value (true)
generate_java_code
subtraction
numerical_negation
bool_value (true)
add_call_chain(<<B,INTEGER,A,B,a,d,d,B,C>>)
add_command("BOOLEAN", "d", <<["B", "INTEGER"], ["A", "e"], ["BOOLEAN", "INTEGER"], ["A", "BOOLEAN"], ["C", "B"]>>)
add_query("B", "INTEGER", <<["C", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "BOOLEAN"], ["INTEGER", "INTEGER"]>>, "INTEGER")
int_value (16)
bool_value (false)
add_call_chain(<<e,BOOLEAN,d,c,A,C,a>>)
logical_negation
disjunction
add_call_chain(<<a,C,a,e,INTEGER,B,A,a,d>>)
numerical_negation
add_call_chain(<<B>>)
logical_negation
add_call_chain(<<B,C,b,B,A,a>>)
add_attribute("C", "D", "INTEGER")
bool_value (true)
