generate_java_code
add_attribute("d", "C", "INTEGER")
add_query("a", "A", <<["A", "C"], ["A", "b"], ["b", "c"], ["c", "INTEGER"], ["d", "INTEGER"], ["c", "INTEGER"], ["C", "INTEGER"], ["e", "A"]>>, "D")
add_call_chain(<<B>>)
add_command("e", "b", <<["A", "d"], ["c", "INTEGER"], ["e", "c"]>>)
logical_negation
add_attribute("C", "d", "BOOLEAN")
type_check
add_command("BOOLEAN", "B", <<["D", "INTEGER"], ["c", "c"]>>)
add_attribute("B", "e", "BOOLEAN")
add_call_chain(<<a,BOOLEAN>>)
add_call_chain(<<B,d,BOOLEAN,a,D,INTEGER,B>>)
modulo
add_command("C", "A", <<["c", "c"], ["B", "a"], ["d", "INTEGER"], ["c", "B"]>>)
add_command("B", "A", <<["D", "C"], ["B", "INTEGER"]>>)
add_query("BOOLEAN", "BOOLEAN", <<["D", "BOOLEAN"], ["B", "c"]>>, "B")
add_attribute("B", "B", "BOOLEAN")
numerical_negation
numerical_negation
multiplication
add_call_chain(<<C,e,c,c>>)
add_query("D", "B", <<["B", "C"], ["c", "INTEGER"], ["INTEGER", "BOOLEAN"], ["c", "b"], ["a", "INTEGER"], ["C", "A"], ["A", "a"]>>, "C")
conjunction
add_call_chain(<<B,A,e,B>>)
add_call_chain(<<c,e,B>>)
add_call_chain(<<e,d>>)
add_command("BOOLEAN", "e", <<["BOOLEAN", "INTEGER"], ["C", "INTEGER"]>>)
generate_java_code
bool_value (true)
add_class(A)
numerical_negation
add_command("A", "BOOLEAN", <<["a", "BOOLEAN"], ["A", "INTEGER"], ["D", "D"], ["b", "INTEGER"], ["a", "BOOLEAN"], ["a", "BOOLEAN"], ["INTEGER", "INTEGER"], ["C", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
numerical_negation
add_command("d", "c", <<["b", "INTEGER"], ["A", "INTEGER"], ["A", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "INTEGER"], ["a", "INTEGER"], ["A", "INTEGER"]>>)
add_query("B", "A", <<["A", "BOOLEAN"], ["C", "d"], ["A", "INTEGER"], ["b", "BOOLEAN"], ["d", "INTEGER"], ["B", "INTEGER"], ["a", "BOOLEAN"]>>, "INTEGER")
add_call_chain(<<A,b,c,D,b,BOOLEAN>>)
type_check
add_attribute("e", "C", "BOOLEAN")
add_query("B", "b", <<["a", "BOOLEAN"], ["B", "INTEGER"], ["e", "INTEGER"], ["C", "BOOLEAN"], ["D", "BOOLEAN"]>>, "A")
add_call_chain(<<BOOLEAN,INTEGER>>)
bool_value (true)
disjunction
add_call_chain(<<B,c,a,e,C>>)
logical_negation
generate_java_code
bool_value (false)
disjunction
multiplication
equals
multiplication
add_query("A", "C", <<["A", "a"], ["e", "b"], ["B", "D"], ["d", "INTEGER"], ["A", "INTEGER"], ["d", "e"], ["a", "c"], ["A", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>, "B")
add_command("c", "a", <<["b", "INTEGER"], ["C", "INTEGER"], ["d", "INTEGER"], ["B", "BOOLEAN"]>>)
logical_negation
bool_value (false)
greater_than
add_call_chain(<<BOOLEAN,b,b>>)
add_command("c", "C", <<["B", "a"], ["d", "BOOLEAN"]>>)
add_call_chain(<<B,D,e,C,a,a,B,A>>)
add_attribute("b", "c", "INTEGER")
type_check
generate_java_code
add_query("C", "BOOLEAN", <<["c", "B"], ["B", "e"], ["B", "BOOLEAN"], ["e", "INTEGER"], ["BOOLEAN", "INTEGER"], ["c", "a"], ["C", "INTEGER"], ["A", "c"], ["C", "C"]>>, "b")
int_value (38)
bool_value (false)
add_call_chain(<<C,c,B,c,a,D,b,a,D>>)
add_call_chain(<<A,B,A,d,B,b,C,D>>)
int_value (38)
add_call_chain(<<C,d>>)
add_attribute("d", "B", "BOOLEAN")
bool_value (true)
add_query("BOOLEAN", "b", <<["A", "INTEGER"], ["e", "a"], ["B", "INTEGER"], ["B", "INTEGER"]>>, "b")
numerical_negation
add_query("c", "D", <<["B", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>, "C")
generate_java_code
add_call_chain(<<b,A>>)
add_attribute("INTEGER", "INTEGER", "b")
bool_value (false)
type_check
add_command("b", "a", <<["B", "d"]>>)
numerical_negation
add_attribute("c", "C", "BOOLEAN")
disjunction
add_command("B", "c", <<["C", "a"], ["C", "BOOLEAN"]>>)
logical_negation
int_value (18)
add_call_chain(<<e,e,B,D,BOOLEAN,a,a,d,INTEGER>>)
add_attribute("d", "C", "BOOLEAN")
modulo
add_call_chain(<<D>>)
add_command("BOOLEAN", "C", <<["D", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "A"], ["D", "INTEGER"], ["b", "BOOLEAN"]>>)
bool_value (true)
add_call_chain(<<A,BOOLEAN>>)
add_query("c", "b", <<["b", "C"]>>, "C")
less_than
add_class(a)
add_call_chain(<<B,C,a,C,d,A,b>>)
quotient
int_value (29)
add_query("d", "a", <<["d", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "INTEGER"], ["INTEGER", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "B"], ["e", "D"]>>, "d")
add_class(D)
greater_than
add_class(c)
conjunction
add_command("a", "D", <<["BOOLEAN", "INTEGER"]>>)
add_query("BOOLEAN", "c", <<["e", "BOOLEAN"], ["a", "B"], ["A", "B"], ["c", "BOOLEAN"], ["INTEGER", "A"]>>, "b")
add_attribute("INTEGER", "C", "BOOLEAN")
add_call_chain(<<BOOLEAN,d,a,e,e,D,a>>)
logical_negation
add_call_chain(<<BOOLEAN,c,D,a,D>>)
generate_java_code
add_call_chain(<<a,C>>)
bool_value (false)
numerical_negation
add_query("BOOLEAN", "B", <<["a", "BOOLEAN"], ["BOOLEAN", "c"], ["d", "INTEGER"], ["d", "B"], ["INTEGER", "INTEGER"]>>, "A")
add_command("C", "B", <<["BOOLEAN", "BOOLEAN"], ["A", "D"]>>)
numerical_negation
add_attribute("INTEGER", "D", "BOOLEAN")
bool_value (true)
numerical_negation
add_call_chain(<<d,c,D,e,B,b,a>>)
bool_value (false)
greater_than
add_class(C)
add_call_chain(<<C,B,d,a,b,B,BOOLEAN,d,D>>)
type_check
add_class(C)
int_value (37)
numerical_negation
add_query("B", "c", <<["e", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["D", "BOOLEAN"], ["B", "BOOLEAN"]>>, "INTEGER")
int_value (7)
add_call_chain(<<a,e,d,b,INTEGER,c,D,D,e>>)
type_check
bool_value (false)
int_value (18)
add_query("d", "D", <<["d", "BOOLEAN"], ["e", "INTEGER"], ["c", "INTEGER"], ["d", "C"], ["b", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "BOOLEAN"]>>, "a")
add_attribute("b", "D", "INTEGER")
bool_value (true)
add_call_chain(<<a,d,D,INTEGER,D,C,D,INTEGER>>)
add_attribute("e", "a", "BOOLEAN")
disjunction
add_query("A", "c", <<["c", "INTEGER"], ["C", "INTEGER"], ["c", "INTEGER"], ["INTEGER", "BOOLEAN"], ["C", "B"], ["A", "BOOLEAN"]>>, "C")
addition
type_check
logical_negation
equals
bool_value (false)
add_class(a)
add_query("D", "A", <<["B", "INTEGER"]>>, "C")
type_check
type_check
add_attribute("b", "d", "INTEGER")
greater_than
add_call_chain(<<c,e,e>>)
type_check
add_class(INTEGER)
add_query("e", "d", <<["c", "BOOLEAN"], ["a", "INTEGER"]>>, "B")
add_command("A", "C", <<["A", "A"], ["D", "BOOLEAN"], ["A", "D"], ["C", "D"], ["INTEGER", "d"], ["e", "INTEGER"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["D", "INTEGER"]>>)
logical_negation
add_call_chain(<<C,e,b,D,A,e,d,D>>)
type_check
conjunction
add_call_chain(<<C,a,C,B,d>>)
add_call_chain(<<b,C>>)
logical_negation
add_query("C", "d", <<["B", "d"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["INTEGER", "INTEGER"], ["c", "d"], ["c", "INTEGER"], ["B", "BOOLEAN"], ["C", "D"], ["a", "BOOLEAN"]>>, "D")
equals
equals
add_command("e", "a", <<["c", "d"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["d", "BOOLEAN"], ["b", "INTEGER"]>>)
add_query("b", "A", <<["a", "BOOLEAN"]>>, "a")
numerical_negation
less_than
greater_than
modulo
add_command("a", "B", <<["b", "INTEGER"]>>)
add_command("c", "a", <<["d", "INTEGER"], ["A", "B"], ["c", "INTEGER"], ["D", "c"], ["c", "c"]>>)
generate_java_code
add_attribute("d", "b", "BOOLEAN")
int_value (6)
int_value (20)
add_attribute("C", "e", "BOOLEAN")
int_value (43)
add_class(C)
add_call_chain(<<c,A,b,B,B>>)
add_call_chain(<<BOOLEAN,B,D,c,D,b>>)
logical_negation
bool_value (false)
bool_value (true)
generate_java_code
add_call_chain(<<e,a>>)
add_command("B", "a", <<["B", "BOOLEAN"], ["D", "D"], ["INTEGER", "d"], ["BOOLEAN", "BOOLEAN"], ["a", "D"]>>)
add_query("e", "A", <<["BOOLEAN", "c"], ["D", "b"], ["C", "INTEGER"], ["a", "INTEGER"], ["d", "BOOLEAN"], ["b", "BOOLEAN"]>>, "c")
greater_than
add_query("A", "d", <<["c", "c"], ["D", "C"], ["c", "INTEGER"], ["A", "BOOLEAN"], ["c", "INTEGER"]>>, "A")
equals
int_value (18)
add_call_chain(<<C,b,D,a,C,A,a,A>>)
greater_than
multiplication
add_class(c)
add_query("e", "d", <<["a", "BOOLEAN"], ["b", "INTEGER"], ["A", "BOOLEAN"], ["e", "BOOLEAN"], ["d", "e"]>>, "C")
type_check
greater_than
numerical_negation
bool_value (true)
add_class(b)
multiplication
int_value (1)
add_call_chain(<<d,A,INTEGER,c,C,BOOLEAN,d>>)
add_attribute("C", "d", "INTEGER")
add_command("c", "b", <<["d", "D"]>>)
add_attribute("A", "e", "BOOLEAN")
modulo
add_query("e", "A", <<["D", "BOOLEAN"]>>, "c")
add_query("C", "INTEGER", <<["C", "BOOLEAN"], ["b", "INTEGER"], ["b", "INTEGER"], ["D", "b"]>>, "a")
int_value (6)
add_command("a", "B", <<["D", "INTEGER"], ["BOOLEAN", "INTEGER"]>>)
add_call_chain(<<D,A,D,a,e,A,A>>)
type_check
add_call_chain(<<C,B,A,A>>)
int_value (37)
logical_negation
logical_negation
add_command("B", "b", <<["A", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "BOOLEAN"]>>)
add_command("d", "B", <<["a", "d"], ["A", "INTEGER"], ["INTEGER", "BOOLEAN"], ["d", "b"], ["a", "A"], ["C", "INTEGER"]>>)
add_command("b", "B", <<["A", "BOOLEAN"], ["B", "d"], ["C", "d"], ["b", "INTEGER"], ["b", "BOOLEAN"], ["c", "B"], ["c", "INTEGER"]>>)
add_call_chain(<<a,b,b,C>>)
add_attribute("c", "INTEGER", "c")
type_check
add_call_chain(<<b>>)
generate_java_code
equals
add_call_chain(<<B,INTEGER,B,INTEGER>>)
add_call_chain(<<d,BOOLEAN,D,b,b,d,C,b,B>>)
add_attribute("C", "d", "D")
add_query("c", "a", <<["e", "INTEGER"], ["b", "b"]>>, "INTEGER")
int_value (6)
add_call_chain(<<D,c,A,D,C,a,e,D,B>>)
bool_value (false)
add_class(A)
logical_negation
less_than
add_query("BOOLEAN", "D", <<["INTEGER", "C"], ["A", "BOOLEAN"], ["e", "e"]>>, "B")
add_attribute("b", "e", "B")
generate_java_code
logical_negation
