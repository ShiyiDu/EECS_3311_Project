add_class(e)
add_command("C", "C", <<["A", "INTEGER"]>>)
bool_value (false)
int_value (17)
add_query("INTEGER", "A", <<["e", "BOOLEAN"], ["C", "C"], ["c", "B"], ["D", "BOOLEAN"], ["B", "INTEGER"]>>, "d")
conjunction
subtraction
add_attribute("a", "C", "BOOLEAN")
conjunction
numerical_negation
type_check
generate_java_code
add_call_chain(<<a,A,a,C,e,C,e,c>>)
add_attribute("INTEGER", "C", "BOOLEAN")
logical_negation
add_query("C", "B", <<["A", "BOOLEAN"]>>, "c")
int_value (3)
bool_value (false)
add_command("B", "c", <<["B", "BOOLEAN"], ["a", "INTEGER"], ["d", "BOOLEAN"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "INTEGER"], ["C", "INTEGER"]>>)
bool_value (false)
int_value (1)
add_attribute("B", "B", "B")
add_class(A)
add_command("A", "b", <<["A", "c"], ["d", "INTEGER"], ["e", "a"], ["D", "d"], ["BOOLEAN", "INTEGER"], ["e", "b"], ["c", "INTEGER"]>>)
add_command("e", "e", <<["e", "B"], ["C", "B"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["INTEGER", "INTEGER"], ["B", "c"]>>)
add_query("b", "B", <<["INTEGER", "INTEGER"]>>, "e")
add_command("C", "BOOLEAN", <<["c", "INTEGER"], ["c", "INTEGER"], ["c", "B"], ["c", "BOOLEAN"], ["C", "e"]>>)
add_query("A", "D", <<["a", "B"], ["D", "BOOLEAN"], ["D", "B"], ["a", "INTEGER"], ["B", "INTEGER"], ["c", "BOOLEAN"], ["D", "a"], ["INTEGER", "BOOLEAN"]>>, "b")
add_call_chain(<<D,BOOLEAN,B,c,D,d,A,e,C>>)
bool_value (true)
add_call_chain(<<INTEGER,C,b,d,e,B,c>>)
generate_java_code
add_attribute("b", "A", "BOOLEAN")
add_call_chain(<<c,D,e,c,e,B,c,a>>)
disjunction
add_command("c", "D", <<["d", "INTEGER"], ["d", "BOOLEAN"]>>)
add_attribute("B", "D", "INTEGER")
add_command("e", "INTEGER", <<["A", "INTEGER"], ["D", "INTEGER"], ["d", "a"], ["B", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>)
add_class(C)
add_query("BOOLEAN", "d", <<["D", "e"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["e", "C"], ["B", "INTEGER"]>>, "INTEGER")
add_call_chain(<<d,e,B,C,b,D,D,C>>)
logical_negation
add_query("c", "B", <<["a", "INTEGER"], ["C", "INTEGER"], ["e", "e"], ["a", "BOOLEAN"], ["b", "BOOLEAN"], ["b", "e"], ["b", "BOOLEAN"], ["d", "INTEGER"]>>, "a")
generate_java_code
type_check
add_call_chain(<<B,b,e,a,D,b,e,e>>)
conjunction
add_query("e", "B", <<["e", "INTEGER"], ["d", "INTEGER"], ["a", "BOOLEAN"]>>, "BOOLEAN")
add_call_chain(<<B,D,A,d,C>>)
logical_negation
add_query("b", "D", <<["C", "a"], ["d", "c"], ["C", "INTEGER"], ["d", "BOOLEAN"], ["c", "INTEGER"]>>, "C")
generate_java_code
add_attribute("A", "d", "A")
add_call_chain(<<B,a>>)
logical_negation
add_command("c", "D", <<["c", "INTEGER"], ["d", "a"], ["e", "BOOLEAN"], ["c", "BOOLEAN"]>>)
add_command("e", "A", <<["a", "BOOLEAN"], ["C", "BOOLEAN"], ["d", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "INTEGER"], ["D", "INTEGER"], ["A", "BOOLEAN"]>>)
numerical_negation
numerical_negation
add_call_chain(<<c,B,A,INTEGER,A,B>>)
add_call_chain(<<BOOLEAN,a,b,b,C>>)
add_command("A", "D", <<["a", "BOOLEAN"], ["a", "INTEGER"], ["e", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "INTEGER"], ["A", "INTEGER"]>>)
add_call_chain(<<a,B,c,a,b>>)
type_check
type_check
type_check
add_attribute("D", "e", "BOOLEAN")
add_attribute("D", "a", "B")
generate_java_code
multiplication
add_call_chain(<<d,C,a,C,A,a>>)
greater_than
add_call_chain(<<A,c,BOOLEAN,C,b,C>>)
disjunction
int_value (38)
greater_than
add_attribute("d", "c", "INTEGER")
type_check
equals
add_query("C", "d", <<["e", "C"], ["BOOLEAN", "d"]>>, "B")
numerical_negation
add_attribute("INTEGER", "c", "a")
add_call_chain(<<A,b,A,d,D,a,D>>)
int_value (4)
add_query("c", "C", <<["D", "c"], ["d", "INTEGER"], ["e", "BOOLEAN"], ["B", "d"], ["D", "INTEGER"]>>, "A")
add_call_chain(<<BOOLEAN,D,b,D,d,B,C,B>>)
numerical_negation
logical_negation
add_query("d", "b", <<["A", "A"], ["D", "BOOLEAN"]>>, "b")
add_attribute("b", "b", "BOOLEAN")
add_command("b", "c", <<["a", "C"], ["D", "A"]>>)
generate_java_code
int_value (34)
add_query("a", "C", <<["B", "c"], ["e", "INTEGER"], ["INTEGER", "c"]>>, "A")
add_call_chain(<<D,D,D,a,c,e>>)
int_value (47)
bool_value (false)
add_class(a)
add_query("B", "b", <<["B", "BOOLEAN"], ["D", "INTEGER"], ["B", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["D", "INTEGER"], ["C", "b"]>>, "B")
add_attribute("e", "b", "BOOLEAN")
add_attribute("b", "e", "INTEGER")
type_check
bool_value (true)
numerical_negation
generate_java_code
add_call_chain(<<B,B,INTEGER>>)
disjunction
logical_negation
add_command("C", "e", <<["C", "INTEGER"], ["b", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "BOOLEAN"], ["b", "BOOLEAN"], ["d", "INTEGER"]>>)
int_value (13)
add_call_chain(<<e,e,e,A,A,INTEGER,e,e>>)
type_check
add_command("c", "D", <<["A", "INTEGER"], ["c", "INTEGER"], ["D", "INTEGER"], ["B", "c"], ["D", "b"], ["a", "INTEGER"], ["c", "INTEGER"], ["b", "e"]>>)
add_attribute("d", "D", "A")
add_command("a", "C", <<["e", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "INTEGER"], ["A", "BOOLEAN"], ["D", "INTEGER"]>>)
numerical_negation
logical_negation
numerical_negation
logical_negation
type_check
add_command("C", "A", <<["INTEGER", "B"], ["a", "INTEGER"], ["D", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "BOOLEAN"]>>)
type_check
bool_value (true)
logical_negation
int_value (34)
numerical_negation
logical_negation
add_call_chain(<<B,BOOLEAN,C,e,C,B>>)
add_query("BOOLEAN", "BOOLEAN", <<["INTEGER", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "e"], ["b", "INTEGER"], ["a", "BOOLEAN"]>>, "C")
add_attribute("INTEGER", "a", "BOOLEAN")
type_check
add_command("e", "a", <<["B", "BOOLEAN"], ["D", "INTEGER"], ["D", "INTEGER"], ["D", "INTEGER"], ["B", "INTEGER"], ["A", "INTEGER"], ["A", "b"]>>)
add_query("D", "d", <<["A", "INTEGER"], ["c", "INTEGER"], ["e", "BOOLEAN"], ["A", "INTEGER"]>>, "BOOLEAN")
add_query("b", "e", <<["c", "BOOLEAN"]>>, "A")
add_attribute("c", "A", "a")
add_call_chain(<<d,c,D,C,B,C,a,b>>)
add_attribute("c", "A", "d")
generate_java_code
add_call_chain(<<B,d,a>>)
int_value (6)
bool_value (true)
add_attribute("c", "c", "INTEGER")
add_call_chain(<<b,d,BOOLEAN,B,c,a>>)
int_value (45)
add_attribute("b", "d", "d")
add_query("d", "D", <<["A", "INTEGER"], ["A", "c"], ["e", "INTEGER"], ["a", "BOOLEAN"]>>, "BOOLEAN")
add_call_chain(<<C,D,BOOLEAN,C,d,D,A,A>>)
add_command("a", "c", <<["c", "INTEGER"], ["D", "BOOLEAN"], ["e", "A"], ["c", "BOOLEAN"], ["INTEGER", "A"], ["d", "BOOLEAN"], ["A", "BOOLEAN"]>>)
add_attribute("INTEGER", "A", "C")
int_value (36)
add_call_chain(<<A,A,e,INTEGER>>)
add_command("A", "D", <<["e", "BOOLEAN"], ["C", "BOOLEAN"], ["d", "INTEGER"]>>)
bool_value (true)
add_attribute("b", "D", "a")
conjunction
type_check
add_attribute("A", "c", "BOOLEAN")
type_check
numerical_negation
add_attribute("INTEGER", "b", "BOOLEAN")
numerical_negation
type_check
add_command("INTEGER", "e", <<["c", "INTEGER"], ["A", "BOOLEAN"], ["b", "INTEGER"], ["B", "A"], ["a", "BOOLEAN"]>>)
logical_negation
logical_negation
add_command("d", "C", <<["b", "BOOLEAN"], ["d", "BOOLEAN"]>>)
add_query("d", "C", <<["d", "INTEGER"], ["b", "BOOLEAN"], ["D", "c"], ["A", "BOOLEAN"], ["B", "d"], ["c", "B"]>>, "BOOLEAN")
logical_negation
numerical_negation
add_attribute("a", "A", "BOOLEAN")
add_class(a)
bool_value (false)
add_attribute("a", "c", "C")
type_check
less_than
add_query("c", "b", <<["b", "INTEGER"], ["b", "A"], ["e", "BOOLEAN"], ["D", "INTEGER"], ["b", "INTEGER"], ["D", "C"]>>, "e")
bool_value (true)
add_call_chain(<<C,b,D>>)
bool_value (true)
add_attribute("B", "D", "BOOLEAN")
disjunction
logical_negation
add_attribute("D", "C", "BOOLEAN")
disjunction
numerical_negation
int_value (17)
add_call_chain(<<c,D,a,D,a,e,d,A>>)
add_command("A", "B", <<["e", "BOOLEAN"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["d", "INTEGER"], ["A", "INTEGER"], ["C", "B"], ["a", "BOOLEAN"], ["c", "INTEGER"]>>)
int_value (21)
add_query("B", "d", <<["c", "INTEGER"], ["INTEGER", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "BOOLEAN"], ["b", "D"]>>, "e")
add_command("e", "d", <<["A", "BOOLEAN"], ["c", "INTEGER"], ["d", "INTEGER"], ["d", "c"], ["INTEGER", "b"], ["d", "BOOLEAN"], ["D", "INTEGER"], ["C", "d"], ["B", "C"]>>)
add_call_chain(<<INTEGER,INTEGER>>)
add_command("a", "a", <<["A", "BOOLEAN"], ["BOOLEAN", "a"], ["B", "b"], ["D", "INTEGER"], ["b", "BOOLEAN"]>>)
add_call_chain(<<c,e,d,INTEGER,c>>)
add_command("d", "e", <<["INTEGER", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "BOOLEAN"]>>)
bool_value (false)
greater_than
logical_negation
int_value (6)
generate_java_code
numerical_negation
int_value (10)
int_value (21)
add_command("B", "b", <<["c", "B"], ["INTEGER", "INTEGER"], ["b", "INTEGER"], ["d", "BOOLEAN"], ["D", "e"], ["B", "INTEGER"]>>)
add_attribute("d", "a", "BOOLEAN")
logical_negation
add_attribute("e", "A", "d")
add_call_chain(<<C>>)
numerical_negation
add_call_chain(<<e,A,B,e,D,c,C,d>>)
numerical_negation
add_call_chain(<<D,c,b,c,C,a,c,b,b>>)
addition
type_check
generate_java_code
bool_value (false)
add_command("C", "e", <<["A", "BOOLEAN"], ["A", "INTEGER"], ["b", "INTEGER"], ["B", "BOOLEAN"]>>)
add_call_chain(<<c,b,e>>)
add_call_chain(<<D,d,BOOLEAN,B,b,A,a,C,D>>)
less_than
multiplication
add_query("B", "C", <<["a", "INTEGER"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["e", "INTEGER"], ["e", "BOOLEAN"], ["D", "A"], ["e", "BOOLEAN"]>>, "d")
type_check
addition
disjunction
int_value (35)
add_call_chain(<<B,A>>)
int_value (17)
int_value (20)
add_call_chain(<<B>>)
add_command("a", "INTEGER", <<["b", "e"], ["a", "a"], ["B", "INTEGER"], ["C", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "D"]>>)
add_query("b", "D", <<["c", "INTEGER"], ["INTEGER", "INTEGER"], ["A", "INTEGER"], ["B", "INTEGER"], ["B", "INTEGER"]>>, "b")
add_command("C", "c", <<["C", "D"], ["C", "A"], ["C", "c"], ["b", "BOOLEAN"], ["e", "d"], ["c", "BOOLEAN"]>>)
generate_java_code
numerical_negation
add_attribute("a", "C", "BOOLEAN")
bool_value (true)
add_query("C", "D", <<["A", "BOOLEAN"]>>, "A")
add_attribute("a", "D", "BOOLEAN")
numerical_negation
add_query("b", "A", <<["c", "BOOLEAN"], ["INTEGER", "INTEGER"], ["c", "INTEGER"], ["d", "BOOLEAN"], ["a", "BOOLEAN"]>>, "a")
type_check
add_call_chain(<<a,d,A,D,a>>)
logical_negation
conjunction
add_command("e", "e", <<["D", "INTEGER"], ["d", "INTEGER"], ["A", "A"], ["d", "INTEGER"], ["d", "INTEGER"], ["b", "INTEGER"], ["a", "INTEGER"]>>)
bool_value (true)
