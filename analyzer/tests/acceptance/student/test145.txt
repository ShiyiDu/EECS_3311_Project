generate_java_code
greater_than
modulo
subtraction
generate_java_code
add_query("BOOLEAN", "a", <<["A", "BOOLEAN"], ["b", "BOOLEAN"]>>, "D")
logical_negation
numerical_negation
add_attribute("d", "c", "BOOLEAN")
bool_value (true)
add_call_chain(<<B,c,B,C,a,e>>)
add_call_chain(<<D,C,b,D,D,A,b,B,C>>)
int_value (15)
type_check
add_query("e", "a", <<["D", "INTEGER"], ["d", "c"], ["BOOLEAN", "INTEGER"], ["C", "INTEGER"]>>, "b")
int_value (4)
add_command("b", "a", <<["a", "BOOLEAN"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["C", "INTEGER"], ["c", "BOOLEAN"], ["c", "c"], ["e", "BOOLEAN"], ["D", "BOOLEAN"]>>)
equals
add_call_chain(<<b,C,B,e,D,D>>)
numerical_negation
add_command("C", "a", <<["D", "BOOLEAN"], ["D", "b"], ["B", "BOOLEAN"], ["C", "c"], ["b", "A"]>>)
bool_value (true)
less_than
add_command("d", "C", <<["INTEGER", "C"]>>)
add_attribute("D", "d", "INTEGER")
add_call_chain(<<b,c,C,D,D,INTEGER>>)
equals
logical_negation
logical_negation
add_call_chain(<<a,a,B,e,a,A,D,A>>)
numerical_negation
equals
int_value (6)
add_call_chain(<<INTEGER,BOOLEAN,C,C>>)
add_query("A", "BOOLEAN", <<["D", "a"], ["D", "B"], ["D", "INTEGER"], ["A", "BOOLEAN"], ["B", "BOOLEAN"]>>, "A")
generate_java_code
int_value (7)
add_query("a", "d", <<["e", "BOOLEAN"], ["A", "b"], ["A", "BOOLEAN"]>>, "C")
add_attribute("d", "b", "INTEGER")
int_value (39)
add_call_chain(<<A,b,c,e,D,C,c,d>>)
generate_java_code
add_attribute("C", "b", "b")
int_value (27)
add_command("INTEGER", "e", <<["a", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["b", "c"]>>)
add_call_chain(<<d,d,d,C,A>>)
add_query("e", "c", <<["c", "BOOLEAN"], ["C", "B"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["B", "INTEGER"], ["c", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>, "e")
numerical_negation
logical_negation
addition
add_call_chain(<<C>>)
logical_negation
add_command("a", "b", <<["a", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "BOOLEAN"], ["INTEGER", "d"]>>)
add_call_chain(<<B>>)
add_class(b)
type_check
int_value (26)
type_check
generate_java_code
addition
add_class(BOOLEAN)
bool_value (true)
add_command("B", "B", <<["B", "BOOLEAN"], ["B", "INTEGER"], ["d", "INTEGER"]>>)
add_call_chain(<<B,B,C,b,A>>)
type_check
add_call_chain(<<a,b,C,D,a,e,c,D>>)
add_attribute("D", "A", "BOOLEAN")
bool_value (false)
generate_java_code
generate_java_code
type_check
int_value (39)
logical_negation
logical_negation
greater_than
type_check
numerical_negation
int_value (42)
add_class(A)
subtraction
int_value (12)
int_value (25)
add_command("d", "a", <<["d", "B"], ["D", "INTEGER"], ["d", "BOOLEAN"], ["B", "BOOLEAN"]>>)
add_attribute("D", "c", "BOOLEAN")
type_check
add_attribute("e", "D", "d")
multiplication
add_call_chain(<<c,b>>)
add_call_chain(<<d,a,d,b,B>>)
add_call_chain(<<d,D,BOOLEAN,D,b,A,A,a,e>>)
add_command("B", "B", <<["D", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["C", "b"], ["B", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>)
add_query("C", "c", <<["D", "INTEGER"], ["c", "C"], ["C", "INTEGER"], ["d", "BOOLEAN"], ["A", "c"], ["a", "BOOLEAN"], ["B", "D"]>>, "D")
add_attribute("A", "e", "BOOLEAN")
add_query("B", "B", <<["B", "INTEGER"], ["A", "INTEGER"], ["C", "e"]>>, "C")
add_call_chain(<<A>>)
modulo
add_class(INTEGER)
disjunction
int_value (6)
add_call_chain(<<D,c>>)
generate_java_code
add_attribute("c", "e", "INTEGER")
numerical_negation
addition
add_attribute("b", "c", "BOOLEAN")
add_call_chain(<<b,b,B,B,a,D>>)
add_call_chain(<<C,C,D,B,a,C>>)
bool_value (false)
type_check
bool_value (false)
add_class(D)
add_call_chain(<<c,C,BOOLEAN,A,c>>)
generate_java_code
add_call_chain(<<c,b>>)
less_than
add_call_chain(<<C,B,B,d,a,INTEGER>>)
add_attribute("C", "A", "INTEGER")
numerical_negation
add_class(d)
add_call_chain(<<C,d>>)
numerical_negation
add_class(d)
logical_negation
logical_negation
add_call_chain(<<d,INTEGER,B,a,d,c,D>>)
quotient
modulo
add_attribute("INTEGER", "a", "B")
generate_java_code
generate_java_code
add_call_chain(<<b,A,INTEGER,d>>)
add_query("d", "e", <<["D", "BOOLEAN"], ["C", "b"], ["a", "BOOLEAN"]>>, "b")
add_call_chain(<<A,D,e,a,C,e,INTEGER>>)
add_attribute("b", "A", "INTEGER")
add_command("D", "C", <<["b", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "e"], ["B", "INTEGER"], ["a", "INTEGER"], ["a", "e"], ["a", "INTEGER"], ["B", "INTEGER"]>>)
add_class(C)
int_value (26)
add_query("D", "A", <<["B", "INTEGER"], ["D", "A"], ["D", "d"]>>, "d")
add_call_chain(<<A,d,D,a,d>>)
add_call_chain(<<b,a,a,D,B,A,e,D>>)
add_query("e", "c", <<["C", "INTEGER"]>>, "e")
generate_java_code
add_call_chain(<<INTEGER,b,B,b>>)
equals
add_command("C", "b", <<["A", "INTEGER"], ["D", "INTEGER"], ["d", "BOOLEAN"], ["e", "d"]>>)
add_call_chain(<<c,D>>)
numerical_negation
add_command("a", "C", <<["INTEGER", "A"], ["c", "c"], ["c", "INTEGER"], ["D", "INTEGER"], ["a", "INTEGER"], ["A", "BOOLEAN"]>>)
subtraction
int_value (18)
add_call_chain(<<B,A,e,b>>)
add_command("b", "c", <<["b", "A"], ["a", "INTEGER"], ["BOOLEAN", "b"], ["A", "INTEGER"], ["B", "INTEGER"], ["INTEGER", "INTEGER"], ["a", "INTEGER"], ["B", "e"]>>)
logical_negation
add_command("b", "a", <<["D", "BOOLEAN"], ["b", "B"], ["A", "INTEGER"], ["C", "b"], ["D", "INTEGER"], ["e", "INTEGER"], ["d", "BOOLEAN"]>>)
add_command("e", "D", <<["D", "c"], ["D", "a"], ["d", "a"], ["C", "INTEGER"]>>)
numerical_negation
bool_value (true)
int_value (39)
add_command("c", "b", <<["e", "BOOLEAN"], ["A", "INTEGER"], ["d", "c"], ["INTEGER", "INTEGER"]>>)
add_attribute("BOOLEAN", "D", "INTEGER")
logical_negation
type_check
add_query("A", "c", <<["c", "INTEGER"], ["b", "BOOLEAN"], ["A", "BOOLEAN"], ["BOOLEAN", "d"], ["d", "INTEGER"], ["d", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "BOOLEAN"]>>, "BOOLEAN")
add_attribute("d", "INTEGER", "INTEGER")
add_attribute("BOOLEAN", "d", "BOOLEAN")
bool_value (false)
add_command("A", "c", <<["C", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["c", "BOOLEAN"]>>)
add_attribute("A", "B", "INTEGER")
int_value (3)
add_attribute("c", "c", "INTEGER")
bool_value (false)
add_query("B", "BOOLEAN", <<["D", "C"], ["a", "B"], ["B", "BOOLEAN"], ["C", "INTEGER"], ["e", "INTEGER"], ["INTEGER", "INTEGER"], ["c", "INTEGER"]>>, "B")
disjunction
add_call_chain(<<INTEGER,b,c,BOOLEAN,D,a,c,D,d>>)
add_command("C", "D", <<["c", "BOOLEAN"]>>)
disjunction
generate_java_code
numerical_negation
add_call_chain(<<e,b>>)
add_class(A)
add_call_chain(<<b,b,c,B,BOOLEAN>>)
numerical_negation
add_call_chain(<<a,c,D,D,c>>)
numerical_negation
int_value (1)
generate_java_code
bool_value (false)
add_query("C", "BOOLEAN", <<["D", "BOOLEAN"], ["d", "D"], ["C", "D"], ["e", "INTEGER"], ["BOOLEAN", "A"]>>, "b")
add_attribute("A", "A", "INTEGER")
add_call_chain(<<e,C,C,C,b,a,d,A,b>>)
add_call_chain(<<c>>)
numerical_negation
logical_negation
type_check
logical_negation
add_call_chain(<<BOOLEAN,e,B,A,b,A,c,C>>)
numerical_negation
add_query("A", "a", <<["e", "BOOLEAN"], ["B", "INTEGER"], ["e", "INTEGER"]>>, "a")
add_call_chain(<<d,d,BOOLEAN>>)
numerical_negation
add_call_chain(<<A,A,D,BOOLEAN,A,B,c,b,c>>)
add_query("B", "D", <<["d", "c"], ["d", "INTEGER"], ["e", "INTEGER"], ["C", "INTEGER"], ["C", "D"], ["c", "INTEGER"], ["A", "d"]>>, "d")
