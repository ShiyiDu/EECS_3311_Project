add_query("c", "B", <<["C", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "INTEGER"], ["e", "INTEGER"], ["D", "INTEGER"], ["C", "INTEGER"], ["B", "INTEGER"], ["b", "INTEGER"], ["C", "B"]>>, "b")
generate_java_code
conjunction
add_command("b", "a", <<["A", "B"], ["d", "B"]>>)
add_query("B", "e", <<["A", "INTEGER"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["D", "D"], ["B", "BOOLEAN"]>>, "a")
add_command("A", "a", <<["a", "C"], ["B", "c"]>>)
add_call_chain(<<e,b,a,a,d>>)
add_command("c", "a", <<["B", "BOOLEAN"], ["e", "INTEGER"], ["d", "INTEGER"], ["d", "D"], ["a", "INTEGER"], ["c", "B"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["e", "c"]>>)
type_check
add_command("B", "C", <<["a", "b"], ["INTEGER", "INTEGER"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["INTEGER", "c"], ["e", "BOOLEAN"]>>)
add_command("A", "b", <<["a", "INTEGER"], ["a", "BOOLEAN"], ["C", "B"], ["B", "D"], ["A", "BOOLEAN"], ["INTEGER", "INTEGER"], ["e", "A"], ["B", "e"], ["INTEGER", "BOOLEAN"]>>)
generate_java_code
int_value (4)
numerical_negation
add_attribute("A", "D", "C")
bool_value (true)
generate_java_code
add_attribute("B", "d", "INTEGER")
add_command("b", "B", <<["D", "BOOLEAN"], ["A", "b"], ["A", "INTEGER"], ["A", "C"], ["a", "BOOLEAN"], ["d", "BOOLEAN"], ["e", "BOOLEAN"]>>)
greater_than
modulo
add_query("B", "b", <<["BOOLEAN", "BOOLEAN"], ["B", "INTEGER"], ["b", "B"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["c", "BOOLEAN"], ["d", "INTEGER"], ["B", "BOOLEAN"], ["c", "B"]>>, "a")
add_command("a", "d", <<["b", "INTEGER"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "D"], ["b", "A"], ["b", "INTEGER"], ["B", "d"]>>)
add_call_chain(<<D,A>>)
add_query("INTEGER", "B", <<["b", "BOOLEAN"], ["e", "INTEGER"], ["b", "A"]>>, "c")
logical_negation
logical_negation
bool_value (false)
add_query("b", "B", <<["e", "INTEGER"], ["c", "INTEGER"]>>, "B")
add_call_chain(<<c,A,D,b,A,c,b,C>>)
add_command("a", "INTEGER", <<["a", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["d", "INTEGER"], ["d", "BOOLEAN"]>>)
add_query("B", "a", <<["INTEGER", "INTEGER"], ["C", "BOOLEAN"], ["c", "B"], ["INTEGER", "INTEGER"], ["c", "INTEGER"]>>, "A")
add_attribute("B", "b", "BOOLEAN")
int_value (1)
add_class(B)
add_query("C", "e", <<["b", "INTEGER"]>>, "b")
add_attribute("C", "c", "BOOLEAN")
add_attribute("a", "A", "INTEGER")
add_class(A)
logical_negation
bool_value (false)
bool_value (true)
add_call_chain(<<a,B>>)
logical_negation
add_query("B", "C", <<["e", "INTEGER"], ["c", "INTEGER"], ["a", "C"], ["c", "BOOLEAN"], ["A", "D"], ["a", "A"], ["D", "D"], ["a", "BOOLEAN"]>>, "D")
add_call_chain(<<a,b>>)
conjunction
add_query("d", "b", <<["c", "INTEGER"], ["A", "INTEGER"]>>, "b")
add_attribute("A", "A", "BOOLEAN")
add_command("D", "c", <<["e", "INTEGER"], ["b", "b"], ["B", "BOOLEAN"]>>)
bool_value (true)
add_command("D", "C", <<["A", "BOOLEAN"], ["D", "INTEGER"], ["INTEGER", "B"]>>)
generate_java_code
add_query("b", "A", <<["e", "c"], ["A", "C"], ["d", "C"], ["c", "BOOLEAN"]>>, "d")
greater_than
type_check
add_command("d", "a", <<["d", "BOOLEAN"], ["A", "D"], ["D", "INTEGER"], ["c", "INTEGER"], ["INTEGER", "B"], ["b", "INTEGER"]>>)
int_value (19)
numerical_negation
logical_negation
conjunction
add_call_chain(<<A,d,A,INTEGER,e,a,BOOLEAN,e>>)
logical_negation
quotient
add_class(b)
add_command("b", "D", <<["D", "INTEGER"], ["D", "INTEGER"], ["e", "B"], ["c", "a"], ["B", "d"], ["D", "c"]>>)
add_call_chain(<<C>>)
generate_java_code
add_call_chain(<<D,C,D,BOOLEAN,c,a>>)
type_check
add_class(b)
add_command("e", "a", <<["A", "d"]>>)
bool_value (false)
add_call_chain(<<D,e,B,A>>)
int_value (6)
add_call_chain(<<A,a,e,D,A>>)
int_value (37)
add_command("d", "D", <<["a", "A"], ["D", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["a", "A"], ["e", "d"], ["d", "INTEGER"], ["a", "BOOLEAN"], ["BOOLEAN", "D"]>>)
int_value (31)
add_command("e", "C", <<["d", "D"], ["B", "BOOLEAN"], ["e", "INTEGER"], ["INTEGER", "D"], ["A", "D"], ["B", "B"], ["b", "c"], ["a", "INTEGER"]>>)
add_query("e", "BOOLEAN", <<["D", "INTEGER"], ["INTEGER", "INTEGER"], ["B", "INTEGER"]>>, "INTEGER")
logical_negation
add_attribute("A", "C", "BOOLEAN")
bool_value (true)
add_query("D", "b", <<["e", "C"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["INTEGER", "INTEGER"], ["D", "INTEGER"], ["e", "BOOLEAN"], ["b", "BOOLEAN"]>>, "e")
int_value (49)
add_command("C", "D", <<["B", "a"]>>)
logical_negation
numerical_negation
bool_value (true)
logical_negation
numerical_negation
logical_negation
bool_value (false)
generate_java_code
add_query("BOOLEAN", "INTEGER", <<["C", "A"], ["c", "BOOLEAN"], ["d", "BOOLEAN"], ["BOOLEAN", "d"]>>, "C")
type_check
add_query("A", "B", <<["C", "INTEGER"], ["b", "BOOLEAN"], ["A", "B"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["C", "A"], ["C", "INTEGER"]>>, "b")
int_value (7)
bool_value (true)
type_check
add_call_chain(<<C,d,INTEGER,b,a,a>>)
add_class(C)
type_check
modulo
logical_negation
numerical_negation
quotient
add_command("B", "A", <<["c", "INTEGER"], ["d", "BOOLEAN"], ["B", "b"], ["e", "BOOLEAN"], ["c", "BOOLEAN"], ["e", "INTEGER"]>>)
int_value (29)
numerical_negation
int_value (12)
add_call_chain(<<a,d,a,b,c,A,C,D,INTEGER>>)
add_call_chain(<<C,C,a>>)
bool_value (true)
add_attribute("INTEGER", "d", "INTEGER")
add_call_chain(<<c,B,C,D>>)
bool_value (true)
numerical_negation
disjunction
add_class(INTEGER)
add_command("B", "B", <<["INTEGER", "d"], ["a", "BOOLEAN"], ["A", "INTEGER"], ["a", "BOOLEAN"], ["d", "BOOLEAN"]>>)
logical_negation
generate_java_code
numerical_negation
int_value (5)
add_command("b", "C", <<["a", "D"], ["d", "BOOLEAN"], ["d", "INTEGER"], ["c", "c"]>>)
add_call_chain(<<A>>)
add_query("D", "a", <<["INTEGER", "BOOLEAN"]>>, "a")
logical_negation
int_value (16)
add_attribute("e", "d", "BOOLEAN")
bool_value (false)
add_command("B", "C", <<["B", "INTEGER"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "e"]>>)
add_class(b)
add_command("INTEGER", "C", <<["c", "INTEGER"], ["d", "INTEGER"], ["B", "INTEGER"], ["BOOLEAN", "e"], ["e", "INTEGER"], ["e", "INTEGER"], ["e", "INTEGER"], ["INTEGER", "INTEGER"], ["d", "B"]>>)
add_command("c", "D", <<["e", "BOOLEAN"], ["A", "d"], ["b", "D"], ["A", "BOOLEAN"], ["D", "a"], ["C", "BOOLEAN"], ["D", "BOOLEAN"]>>)
int_value (20)
add_attribute("e", "D", "BOOLEAN")
generate_java_code
add_call_chain(<<D,b,b>>)
generate_java_code
type_check
disjunction
add_call_chain(<<e,e,c>>)
add_command("a", "e", <<["INTEGER", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "BOOLEAN"], ["INTEGER", "A"], ["A", "BOOLEAN"], ["e", "INTEGER"], ["C", "B"], ["a", "BOOLEAN"]>>)
bool_value (true)
numerical_negation
add_attribute("c", "B", "INTEGER")
add_attribute("a", "e", "INTEGER")
add_query("A", "B", <<["C", "BOOLEAN"], ["D", "INTEGER"], ["B", "INTEGER"], ["A", "INTEGER"], ["BOOLEAN", "C"], ["c", "D"], ["D", "BOOLEAN"], ["A", "BOOLEAN"]>>, "b")
add_command("a", "B", <<["B", "INTEGER"], ["e", "BOOLEAN"], ["b", "INTEGER"], ["B", "BOOLEAN"], ["c", "INTEGER"], ["b", "e"], ["c", "INTEGER"], ["d", "BOOLEAN"], ["a", "D"]>>)
int_value (17)
add_call_chain(<<d,e>>)
add_query("d", "b", <<["B", "INTEGER"], ["e", "INTEGER"]>>, "BOOLEAN")
bool_value (true)
add_command("A", "c", <<["C", "INTEGER"], ["d", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "INTEGER"]>>)
add_class(INTEGER)
add_command("c", "C", <<["B", "INTEGER"], ["c", "INTEGER"], ["e", "a"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["C", "e"], ["A", "BOOLEAN"], ["A", "A"]>>)
disjunction
add_call_chain(<<INTEGER,B,B,a,INTEGER,c,B>>)
add_command("A", "A", <<["A", "INTEGER"], ["b", "INTEGER"], ["A", "INTEGER"], ["A", "c"], ["D", "INTEGER"], ["A", "INTEGER"], ["BOOLEAN", "b"], ["e", "D"], ["D", "a"]>>)
equals
logical_negation
numerical_negation
multiplication
int_value (19)
add_class(c)
add_command("B", "D", <<["C", "BOOLEAN"]>>)
bool_value (false)
add_call_chain(<<B,A,d,d,c,b,B,b,a>>)
add_command("C", "c", <<["a", "BOOLEAN"]>>)
add_call_chain(<<d,B,B,BOOLEAN>>)
int_value (35)
bool_value (true)
add_query("c", "A", <<["b", "D"], ["d", "BOOLEAN"], ["D", "e"], ["e", "INTEGER"], ["D", "INTEGER"], ["d", "a"], ["b", "INTEGER"], ["e", "BOOLEAN"]>>, "b")
conjunction
bool_value (false)
add_call_chain(<<D,BOOLEAN,D,c,A,A,INTEGER,b,e>>)
disjunction
add_query("D", "INTEGER", <<["D", "INTEGER"], ["e", "BOOLEAN"], ["b", "INTEGER"], ["d", "C"], ["A", "A"]>>, "A")
type_check
add_attribute("A", "A", "BOOLEAN")
type_check
numerical_negation
add_attribute("B", "a", "BOOLEAN")
add_call_chain(<<A,e>>)
equals
add_call_chain(<<D,B,B>>)
logical_negation
bool_value (false)
logical_negation
int_value (49)
add_call_chain(<<D,B,D,a,a,d,c,C>>)
numerical_negation
add_attribute("B", "B", "a")
int_value (9)
logical_negation
add_call_chain(<<e,a,D,BOOLEAN,BOOLEAN>>)
bool_value (true)
add_attribute("C", "BOOLEAN", "INTEGER")
add_attribute("c", "C", "B")
add_call_chain(<<A,INTEGER,d,a,d,a,A,e,e>>)
numerical_negation
numerical_negation
bool_value (false)
addition
add_call_chain(<<e>>)
conjunction
add_command("c", "b", <<["INTEGER", "B"], ["e", "INTEGER"], ["e", "d"], ["C", "BOOLEAN"], ["a", "INTEGER"], ["D", "BOOLEAN"]>>)
add_class(a)
int_value (5)
logical_negation
add_call_chain(<<c,C>>)
type_check
add_attribute("c", "BOOLEAN", "BOOLEAN")
bool_value (false)
subtraction
int_value (17)
bool_value (true)
add_command("d", "INTEGER", <<["C", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "BOOLEAN"]>>)
type_check
add_command("b", "B", <<["BOOLEAN", "INTEGER"]>>)
add_call_chain(<<b,e,e,a,D,e,c>>)
equals
logical_negation
type_check
equals
add_command("A", "c", <<["c", "INTEGER"], ["D", "B"], ["INTEGER", "INTEGER"], ["c", "INTEGER"], ["d", "B"], ["e", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "INTEGER"]>>)
disjunction
logical_negation
add_call_chain(<<D,d,a,e,A,c,B,A>>)
add_query("d", "c", <<["d", "a"], ["b", "INTEGER"], ["b", "INTEGER"], ["b", "BOOLEAN"]>>, "d")
bool_value (true)
generate_java_code
logical_negation
type_check
less_than
add_class(B)
add_call_chain(<<A,d,c,a,b>>)
add_command("BOOLEAN", "c", <<["b", "INTEGER"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["B", "INTEGER"]>>)
add_call_chain(<<INTEGER,D,d,B,b>>)
bool_value (true)
add_call_chain(<<B,e,c,d,B>>)
generate_java_code
int_value (45)
type_check
disjunction
bool_value (false)
add_attribute("c", "B", "INTEGER")
add_call_chain(<<D,c,b,A>>)
bool_value (false)
add_command("a", "D", <<["e", "INTEGER"], ["b", "BOOLEAN"], ["b", "INTEGER"]>>)
add_call_chain(<<A,INTEGER,D>>)
add_query("A", "c", <<["BOOLEAN", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "INTEGER"], ["C", "INTEGER"], ["A", "B"]>>, "b")
add_class(e)
add_class(B)
add_command("d", "b", <<["C", "INTEGER"], ["BOOLEAN", "INTEGER"]>>)
add_attribute("A", "D", "INTEGER")
disjunction
numerical_negation
type_check
add_query("b", "d", <<["C", "INTEGER"], ["B", "BOOLEAN"], ["A", "D"], ["e", "a"], ["e", "INTEGER"]>>, "d")
numerical_negation
multiplication
int_value (33)
numerical_negation
add_attribute("A", "a", "e")
logical_negation
add_class(D)
add_attribute("D", "D", "INTEGER")
int_value (9)
bool_value (false)
equals
numerical_negation
bool_value (true)
bool_value (false)
bool_value (false)
add_call_chain(<<B,e,D,A,d,B,d>>)
