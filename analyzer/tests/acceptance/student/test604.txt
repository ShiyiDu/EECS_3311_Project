bool_value (true)
add_query("B", "BOOLEAN", <<["INTEGER", "a"], ["d", "D"], ["A", "BOOLEAN"]>>, "c")
numerical_negation
generate_java_code
logical_negation
logical_negation
add_call_chain(<<INTEGER,BOOLEAN,A,D,A,b,b>>)
add_call_chain(<<INTEGER>>)
add_query("A", "BOOLEAN", <<["a", "INTEGER"], ["C", "BOOLEAN"], ["INTEGER", "INTEGER"], ["A", "d"], ["e", "d"], ["C", "BOOLEAN"], ["e", "INTEGER"], ["D", "a"]>>, "INTEGER")
logical_negation
add_attribute("c", "C", "BOOLEAN")
add_class(d)
disjunction
add_command("C", "d", <<["c", "INTEGER"], ["e", "INTEGER"], ["d", "BOOLEAN"], ["C", "e"], ["C", "a"], ["c", "INTEGER"], ["D", "D"], ["BOOLEAN", "BOOLEAN"], ["b", "c"]>>)
add_call_chain(<<INTEGER,e,a,d,d>>)
int_value (16)
add_attribute("BOOLEAN", "D", "BOOLEAN")
bool_value (false)
int_value (36)
add_attribute("c", "B", "BOOLEAN")
quotient
int_value (36)
addition
add_query("C", "c", <<["a", "INTEGER"], ["B", "BOOLEAN"], ["INTEGER", "INTEGER"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["b", "INTEGER"], ["b", "BOOLEAN"]>>, "D")
add_attribute("d", "e", "INTEGER")
add_class(e)
generate_java_code
add_command("e", "D", <<["C", "BOOLEAN"], ["a", "INTEGER"], ["BOOLEAN", "c"], ["a", "BOOLEAN"], ["e", "INTEGER"], ["C", "INTEGER"]>>)
bool_value (true)
generate_java_code
type_check
numerical_negation
subtraction
add_query("a", "D", <<["B", "INTEGER"], ["e", "b"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["D", "INTEGER"], ["BOOLEAN", "B"], ["b", "INTEGER"], ["d", "INTEGER"]>>, "B")
add_query("D", "d", <<["INTEGER", "INTEGER"], ["d", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "BOOLEAN"]>>, "C")
add_attribute("B", "A", "INTEGER")
add_call_chain(<<A,C,d,c,A>>)
logical_negation
addition
add_call_chain(<<C,C,BOOLEAN>>)
add_query("e", "A", <<["e", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["a", "INTEGER"], ["c", "INTEGER"]>>, "c")
quotient
add_call_chain(<<b,A,B,A,D,d>>)
logical_negation
equals
int_value (23)
add_attribute("D", "B", "INTEGER")
add_attribute("BOOLEAN", "e", "C")
add_query("d", "d", <<["d", "BOOLEAN"], ["B", "INTEGER"], ["e", "INTEGER"], ["c", "INTEGER"], ["a", "BOOLEAN"], ["e", "a"], ["B", "INTEGER"]>>, "e")
add_attribute("e", "a", "INTEGER")
add_call_chain(<<C,B,b,D>>)
add_attribute("A", "A", "INTEGER")
add_command("c", "d", <<["INTEGER", "A"], ["D", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>)
add_query("A", "D", <<["D", "b"], ["B", "INTEGER"], ["e", "b"], ["b", "INTEGER"], ["d", "INTEGER"], ["C", "INTEGER"], ["INTEGER", "INTEGER"], ["D", "BOOLEAN"], ["C", "A"]>>, "BOOLEAN")
add_call_chain(<<e,e,A,e,a,a,c,C,d>>)
add_command("A", "e", <<["A", "d"], ["a", "BOOLEAN"], ["INTEGER", "INTEGER"], ["c", "INTEGER"], ["B", "INTEGER"]>>)
bool_value (true)
int_value (23)
add_query("e", "A", <<["a", "a"], ["e", "BOOLEAN"]>>, "b")
add_command("B", "C", <<["d", "INTEGER"]>>)
add_call_chain(<<C>>)
type_check
logical_negation
numerical_negation
conjunction
add_command("D", "BOOLEAN", <<["C", "INTEGER"], ["C", "BOOLEAN"], ["c", "INTEGER"], ["C", "b"], ["c", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "B"]>>)
add_class(BOOLEAN)
numerical_negation
int_value (37)
add_call_chain(<<B>>)
numerical_negation
add_query("B", "d", <<["e", "INTEGER"], ["c", "D"], ["d", "INTEGER"], ["e", "BOOLEAN"], ["D", "d"], ["C", "A"], ["B", "D"]>>, "c")
type_check
add_command("a", "C", <<["C", "INTEGER"], ["B", "INTEGER"], ["D", "C"], ["d", "BOOLEAN"], ["d", "INTEGER"], ["b", "c"], ["b", "INTEGER"], ["e", "BOOLEAN"]>>)
bool_value (true)
add_call_chain(<<d,A,A,c,B,a>>)
add_call_chain(<<D,a,c,B,B>>)
add_attribute("B", "C", "C")
add_attribute("B", "B", "INTEGER")
conjunction
add_query("c", "C", <<["B", "C"]>>, "D")
bool_value (true)
add_attribute("A", "C", "BOOLEAN")
add_class(a)
add_attribute("C", "C", "INTEGER")
add_class(a)
add_command("d", "C", <<["d", "A"], ["C", "BOOLEAN"], ["A", "d"]>>)
type_check
add_call_chain(<<e,A>>)
logical_negation
add_call_chain(<<c,C,B>>)
bool_value (false)
add_query("e", "d", <<["d", "BOOLEAN"], ["C", "INTEGER"], ["b", "D"], ["C", "INTEGER"], ["C", "e"], ["A", "a"], ["B", "INTEGER"], ["e", "BOOLEAN"]>>, "B")
bool_value (true)
add_query("C", "C", <<["e", "C"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["A", "INTEGER"], ["c", "a"], ["a", "INTEGER"], ["b", "BOOLEAN"]>>, "A")
multiplication
logical_negation
type_check
add_command("e", "B", <<["A", "d"], ["A", "A"], ["e", "BOOLEAN"], ["c", "e"], ["b", "INTEGER"], ["BOOLEAN", "INTEGER"], ["e", "D"]>>)
bool_value (false)
bool_value (false)
add_command("a", "A", <<["D", "d"], ["a", "BOOLEAN"], ["e", "INTEGER"], ["BOOLEAN", "c"]>>)
logical_negation
conjunction
add_attribute("D", "D", "INTEGER")
add_query("e", "c", <<["d", "INTEGER"], ["BOOLEAN", "e"], ["e", "INTEGER"], ["A", "BOOLEAN"], ["D", "BOOLEAN"], ["d", "B"], ["d", "B"], ["b", "BOOLEAN"]>>, "BOOLEAN")
generate_java_code
add_class(C)
add_attribute("C", "e", "BOOLEAN")
numerical_negation
add_call_chain(<<A>>)
equals
add_query("c", "D", <<["B", "INTEGER"], ["C", "BOOLEAN"]>>, "d")
add_class(b)
modulo
generate_java_code
bool_value (false)
int_value (29)
generate_java_code
type_check
add_call_chain(<<b,A,e,D,C,BOOLEAN,C,d>>)
disjunction
add_query("e", "C", <<["A", "B"], ["A", "BOOLEAN"]>>, "B")
generate_java_code
modulo
bool_value (true)
logical_negation
less_than
type_check
logical_negation
add_call_chain(<<D,A,C>>)
type_check
add_query("A", "INTEGER", <<["b", "A"], ["A", "BOOLEAN"]>>, "D")
type_check
add_call_chain(<<BOOLEAN,D,C,b,A,a,B>>)
add_class(c)
add_query("C", "D", <<["A", "BOOLEAN"], ["A", "INTEGER"]>>, "C")
add_call_chain(<<A,BOOLEAN,B,d>>)
bool_value (false)
add_class(B)
add_call_chain(<<B,a,D,b,C,D,C,C,e>>)
logical_negation
add_command("d", "B", <<["D", "B"], ["c", "BOOLEAN"]>>)
int_value (47)
add_call_chain(<<A>>)
logical_negation
int_value (8)
numerical_negation
add_call_chain(<<A,C,c,a,D,b>>)
less_than
add_attribute("INTEGER", "e", "INTEGER")
add_class(C)
add_call_chain(<<D,c,a,c,d,D>>)
add_call_chain(<<a,a>>)
bool_value (true)
bool_value (true)
numerical_negation
int_value (42)
add_call_chain(<<a>>)
type_check
numerical_negation
add_command("B", "D", <<["B", "INTEGER"], ["C", "a"], ["c", "e"], ["A", "INTEGER"], ["c", "INTEGER"]>>)
logical_negation
logical_negation
add_query("INTEGER", "d", <<["c", "BOOLEAN"], ["A", "D"], ["INTEGER", "INTEGER"], ["d", "d"], ["d", "INTEGER"], ["C", "BOOLEAN"], ["d", "INTEGER"], ["a", "d"], ["A", "BOOLEAN"]>>, "b")
bool_value (false)
add_call_chain(<<A,A,B,D,b,A,a,a>>)
type_check
add_call_chain(<<d,a,b,D>>)
add_query("B", "e", <<["d", "BOOLEAN"], ["b", "INTEGER"], ["b", "INTEGER"], ["e", "C"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["BOOLEAN", "INTEGER"], ["c", "BOOLEAN"]>>, "c")
int_value (32)
numerical_negation
add_attribute("d", "A", "INTEGER")
disjunction
add_class(a)
add_attribute("D", "e", "e")
numerical_negation
generate_java_code
numerical_negation
bool_value (false)
add_attribute("C", "BOOLEAN", "BOOLEAN")
add_query("B", "C", <<["a", "INTEGER"]>>, "c")
add_call_chain(<<A,B,INTEGER,e,c,C>>)
generate_java_code
add_attribute("C", "B", "d")
add_query("e", "e", <<["d", "BOOLEAN"], ["D", "INTEGER"]>>, "B")
add_query("A", "BOOLEAN", <<["C", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "D"], ["a", "INTEGER"], ["B", "INTEGER"], ["INTEGER", "BOOLEAN"]>>, "e")
generate_java_code
add_call_chain(<<d>>)
bool_value (false)
add_query("e", "A", <<["A", "BOOLEAN"], ["c", "BOOLEAN"]>>, "b")
less_than
less_than
add_class(D)
generate_java_code
type_check
generate_java_code
add_call_chain(<<D,C,a,b>>)
logical_negation
add_query("D", "d", <<["INTEGER", "A"], ["BOOLEAN", "D"], ["D", "c"], ["e", "C"]>>, "e")
add_command("b", "C", <<["INTEGER", "BOOLEAN"], ["C", "INTEGER"], ["e", "e"], ["a", "BOOLEAN"], ["c", "e"], ["c", "INTEGER"], ["BOOLEAN", "c"]>>)
add_query("B", "A", <<["a", "BOOLEAN"], ["C", "INTEGER"], ["d", "BOOLEAN"], ["A", "B"], ["c", "b"], ["C", "INTEGER"]>>, "a")
add_query("A", "e", <<["INTEGER", "INTEGER"], ["e", "INTEGER"]>>, "a")
add_attribute("D", "INTEGER", "INTEGER")
conjunction
add_call_chain(<<C,a,A>>)
bool_value (true)
add_command("e", "e", <<["B", "INTEGER"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["d", "INTEGER"], ["A", "A"], ["B", "INTEGER"], ["a", "INTEGER"], ["a", "a"], ["c", "BOOLEAN"]>>)
conjunction
add_attribute("C", "A", "BOOLEAN")
bool_value (true)
add_command("B", "B", <<["A", "INTEGER"], ["a", "BOOLEAN"], ["INTEGER", "INTEGER"], ["BOOLEAN", "e"], ["a", "BOOLEAN"], ["INTEGER", "c"], ["B", "INTEGER"]>>)
add_attribute("e", "B", "INTEGER")
add_class(INTEGER)
generate_java_code
add_class(c)
type_check
add_call_chain(<<INTEGER,D,BOOLEAN,d>>)
add_attribute("e", "C", "BOOLEAN")
add_command("D", "C", <<["BOOLEAN", "B"], ["C", "b"], ["INTEGER", "c"], ["C", "INTEGER"], ["C", "INTEGER"], ["INTEGER", "C"]>>)
add_call_chain(<<D>>)
add_call_chain(<<d,c,d,A,C,A,D>>)
add_command("C", "a", <<["a", "A"], ["c", "INTEGER"], ["a", "INTEGER"], ["e", "BOOLEAN"], ["INTEGER", "INTEGER"], ["A", "a"], ["A", "INTEGER"], ["B", "C"], ["D", "INTEGER"]>>)
add_attribute("D", "A", "BOOLEAN")
add_call_chain(<<B>>)
numerical_negation
numerical_negation
greater_than
less_than
int_value (41)
add_command("INTEGER", "B", <<["d", "a"], ["b", "BOOLEAN"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["e", "B"], ["b", "INTEGER"], ["B", "BOOLEAN"], ["INTEGER", "b"], ["c", "INTEGER"]>>)
add_command("BOOLEAN", "D", <<["a", "BOOLEAN"], ["c", "C"], ["B", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>)
add_class(c)
add_call_chain(<<e,c,b,b,d,A,D,e>>)
add_call_chain(<<B,c,d,b>>)
int_value (12)
addition
add_command("b", "D", <<["b", "c"], ["BOOLEAN", "BOOLEAN"], ["a", "BOOLEAN"]>>)
add_attribute("e", "c", "INTEGER")
add_attribute("e", "B", "INTEGER")
add_command("D", "A", <<["d", "A"], ["d", "INTEGER"], ["a", "A"], ["c", "a"], ["BOOLEAN", "D"], ["B", "INTEGER"], ["D", "INTEGER"], ["d", "INTEGER"], ["e", "D"]>>)
logical_negation
generate_java_code
conjunction
numerical_negation
numerical_negation
logical_negation
add_query("e", "C", <<["b", "c"], ["e", "BOOLEAN"], ["c", "e"]>>, "B")
add_call_chain(<<C,d,a,a,b>>)
add_command("a", "C", <<["e", "b"], ["B", "b"], ["D", "C"], ["B", "INTEGER"], ["a", "e"], ["C", "BOOLEAN"]>>)
bool_value (false)
generate_java_code
int_value (45)
add_call_chain(<<e,d,D,A,e,c,c,e,C>>)
add_call_chain(<<e>>)
add_call_chain(<<a,e,e>>)
add_query("b", "d", <<["d", "BOOLEAN"], ["a", "a"], ["a", "BOOLEAN"], ["e", "BOOLEAN"], ["INTEGER", "INTEGER"], ["a", "A"], ["a", "B"], ["b", "INTEGER"], ["INTEGER", "INTEGER"]>>, "B")
add_command("INTEGER", "BOOLEAN", <<["b", "b"], ["b", "BOOLEAN"], ["A", "INTEGER"], ["D", "c"], ["B", "C"], ["e", "BOOLEAN"], ["d", "INTEGER"]>>)
add_call_chain(<<b,b,D,C,e,e>>)
add_call_chain(<<D>>)
int_value (6)
add_call_chain(<<A,D,B,D,A,d,c,d>>)
type_check
type_check
numerical_negation
add_call_chain(<<c,C,b,BOOLEAN,B,b,C>>)
add_class(D)
add_attribute("A", "B", "BOOLEAN")
add_command("a", "a", <<["INTEGER", "D"], ["B", "BOOLEAN"], ["a", "d"], ["e", "BOOLEAN"], ["D", "INTEGER"], ["e", "INTEGER"], ["D", "BOOLEAN"], ["D", "BOOLEAN"], ["INTEGER", "INTEGER"]>>)
numerical_negation
subtraction
logical_negation
generate_java_code
bool_value (true)
logical_negation
add_class(a)
generate_java_code
conjunction
add_command("e", "C", <<["c", "d"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "d"], ["C", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "B"]>>)
add_class(a)
add_call_chain(<<b,d>>)
