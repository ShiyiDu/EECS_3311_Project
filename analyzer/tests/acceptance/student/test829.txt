add_command("B", "D", <<["INTEGER", "INTEGER"], ["D", "BOOLEAN"], ["a", "b"], ["INTEGER", "BOOLEAN"], ["C", "a"], ["C", "e"], ["c", "BOOLEAN"]>>)
add_call_chain(<<e,C>>)
add_call_chain(<<D,D,A>>)
add_call_chain(<<D>>)
logical_negation
add_class(BOOLEAN)
add_query("b", "C", <<["C", "INTEGER"]>>, "C")
subtraction
add_call_chain(<<B,a,C>>)
generate_java_code
addition
add_query("b", "B", <<["A", "INTEGER"], ["C", "b"], ["d", "INTEGER"], ["c", "INTEGER"]>>, "D")
disjunction
generate_java_code
numerical_negation
int_value (26)
add_command("A", "D", <<["c", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>)
generate_java_code
add_call_chain(<<B,BOOLEAN,C,C,a,A,D,C,D>>)
quotient
type_check
int_value (2)
int_value (41)
logical_negation
add_call_chain(<<BOOLEAN,B,D,c,c>>)
add_attribute("a", "d", "BOOLEAN")
add_call_chain(<<A,C,a,B,b,C,d,B,B>>)
add_class(C)
add_call_chain(<<a,e,BOOLEAN>>)
add_class(d)
add_call_chain(<<B,A,D,A,C,e>>)
int_value (22)
add_call_chain(<<a,e,a,D>>)
add_query("a", "c", <<["a", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["B", "INTEGER"], ["B", "INTEGER"], ["C", "BOOLEAN"], ["a", "BOOLEAN"]>>, "BOOLEAN")
add_attribute("D", "d", "A")
equals
logical_negation
add_query("A", "B", <<["D", "INTEGER"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["INTEGER", "e"], ["e", "b"], ["A", "D"], ["D", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>, "A")
logical_negation
type_check
add_query("D", "C", <<["B", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "b"]>>, "c")
logical_negation
add_query("a", "d", <<["d", "INTEGER"]>>, "a")
add_attribute("d", "c", "INTEGER")
generate_java_code
add_command("D", "D", <<["C", "INTEGER"], ["b", "BOOLEAN"], ["a", "BOOLEAN"], ["b", "INTEGER"], ["INTEGER", "INTEGER"]>>)
add_command("e", "a", <<["C", "B"], ["c", "D"], ["A", "BOOLEAN"], ["D", "d"]>>)
numerical_negation
type_check
numerical_negation
disjunction
add_call_chain(<<e,D,BOOLEAN,a>>)
generate_java_code
int_value (44)
bool_value (true)
int_value (45)
int_value (31)
add_query("B", "B", <<["d", "BOOLEAN"], ["c", "BOOLEAN"]>>, "B")
logical_negation
add_query("B", "e", <<["B", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>, "B")
add_attribute("INTEGER", "D", "INTEGER")
addition
int_value (49)
add_query("C", "a", <<["A", "BOOLEAN"], ["B", "A"], ["C", "BOOLEAN"]>>, "B")
add_command("d", "e", <<["a", "INTEGER"], ["C", "INTEGER"], ["a", "b"]>>)
logical_negation
add_query("c", "A", <<["e", "BOOLEAN"]>>, "A")
add_call_chain(<<e,d,d,D>>)
add_call_chain(<<e,A>>)
numerical_negation
disjunction
add_class(D)
add_call_chain(<<A,c>>)
add_attribute("D", "C", "INTEGER")
int_value (29)
logical_negation
int_value (8)
bool_value (false)
add_call_chain(<<INTEGER,C>>)
add_command("A", "e", <<["e", "BOOLEAN"], ["B", "a"], ["c", "INTEGER"], ["d", "BOOLEAN"]>>)
subtraction
add_command("C", "D", <<["C", "b"], ["C", "c"], ["C", "INTEGER"]>>)
add_call_chain(<<C,a,D>>)
conjunction
type_check
int_value (24)
add_call_chain(<<a>>)
add_query("B", "INTEGER", <<["a", "INTEGER"], ["c", "INTEGER"]>>, "b")
conjunction
numerical_negation
quotient
add_query("c", "INTEGER", <<["e", "BOOLEAN"], ["a", "a"], ["C", "b"], ["a", "INTEGER"]>>, "D")
bool_value (true)
type_check
bool_value (false)
bool_value (false)
bool_value (true)
generate_java_code
add_call_chain(<<B,A,d,e>>)
bool_value (false)
bool_value (false)
add_query("A", "A", <<["B", "B"], ["D", "INTEGER"], ["BOOLEAN", "INTEGER"], ["b", "INTEGER"], ["D", "BOOLEAN"], ["A", "d"], ["d", "BOOLEAN"]>>, "B")
multiplication
disjunction
bool_value (false)
add_class(B)
add_call_chain(<<C,c,d,INTEGER,d,D,A>>)
add_query("b", "c", <<["b", "a"], ["a", "BOOLEAN"], ["C", "C"], ["c", "INTEGER"], ["D", "INTEGER"]>>, "INTEGER")
equals
add_query("b", "e", <<["A", "INTEGER"], ["a", "e"], ["C", "INTEGER"], ["d", "B"], ["B", "INTEGER"]>>, "B")
add_attribute("B", "a", "BOOLEAN")
disjunction
add_query("c", "e", <<["C", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["C", "BOOLEAN"], ["d", "A"], ["A", "INTEGER"]>>, "B")
numerical_negation
generate_java_code
add_call_chain(<<c,D>>)
add_call_chain(<<b,a,a,D>>)
bool_value (false)
type_check
add_command("d", "D", <<["D", "INTEGER"], ["A", "BOOLEAN"], ["C", "C"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["D", "D"], ["e", "D"], ["INTEGER", "BOOLEAN"]>>)
add_call_chain(<<e>>)
add_command("d", "B", <<["d", "e"], ["D", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "INTEGER"], ["A", "INTEGER"], ["b", "BOOLEAN"]>>)
logical_negation
add_call_chain(<<a,INTEGER,D>>)
add_call_chain(<<A,C,d,BOOLEAN,B,INTEGER,D>>)
add_query("c", "D", <<["BOOLEAN", "BOOLEAN"]>>, "D")
numerical_negation
bool_value (true)
add_call_chain(<<INTEGER,b,b,c,c,C,A>>)
type_check
add_class(a)
add_query("d", "C", <<["B", "e"], ["e", "B"], ["B", "a"], ["e", "c"], ["BOOLEAN", "INTEGER"]>>, "c")
bool_value (true)
add_command("B", "A", <<["d", "C"], ["c", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
add_query("a", "b", <<["D", "C"], ["BOOLEAN", "INTEGER"], ["a", "C"], ["d", "B"], ["C", "BOOLEAN"], ["a", "BOOLEAN"]>>, "d")
add_command("a", "e", <<["C", "BOOLEAN"], ["c", "INTEGER"]>>)
add_class(e)
logical_negation
add_command("c", "e", <<["a", "A"], ["a", "INTEGER"]>>)
generate_java_code
generate_java_code
add_call_chain(<<c,C,c>>)
add_attribute("e", "a", "BOOLEAN")
add_call_chain(<<c,a,B,B,b,B,BOOLEAN,c>>)
add_query("b", "C", <<["D", "b"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["c", "BOOLEAN"]>>, "INTEGER")
add_query("d", "C", <<["c", "e"]>>, "C")
add_call_chain(<<D,A,c,INTEGER,a,D>>)
add_call_chain(<<B,B>>)
add_attribute("BOOLEAN", "C", "b")
add_query("d", "b", <<["B", "BOOLEAN"], ["b", "B"], ["C", "B"], ["C", "B"], ["A", "C"], ["e", "A"], ["A", "d"], ["a", "BOOLEAN"], ["C", "INTEGER"]>>, "D")
int_value (3)
logical_negation
numerical_negation
type_check
subtraction
add_query("c", "C", <<["B", "BOOLEAN"], ["A", "INTEGER"], ["a", "BOOLEAN"], ["A", "BOOLEAN"]>>, "e")
add_attribute("C", "A", "BOOLEAN")
quotient
add_attribute("C", "e", "INTEGER")
greater_than
greater_than
add_call_chain(<<c,BOOLEAN,B,d,e,C>>)
add_attribute("B", "BOOLEAN", "a")
add_attribute("C", "B", "BOOLEAN")
add_query("C", "b", <<["B", "BOOLEAN"], ["D", "INTEGER"]>>, "A")
logical_negation
add_command("b", "A", <<["D", "BOOLEAN"], ["e", "INTEGER"], ["b", "INTEGER"], ["B", "B"], ["BOOLEAN", "INTEGER"], ["d", "a"]>>)
add_call_chain(<<e>>)
add_command("INTEGER", "b", <<["d", "BOOLEAN"], ["INTEGER", "INTEGER"], ["d", "INTEGER"], ["b", "INTEGER"], ["d", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
int_value (5)
add_call_chain(<<A,d,BOOLEAN,b,D>>)
add_query("BOOLEAN", "D", <<["INTEGER", "INTEGER"], ["c", "INTEGER"], ["INTEGER", "BOOLEAN"], ["a", "INTEGER"], ["B", "INTEGER"], ["D", "c"], ["B", "INTEGER"], ["C", "BOOLEAN"], ["b", "BOOLEAN"]>>, "D")
numerical_negation
numerical_negation
add_attribute("d", "a", "INTEGER")
bool_value (false)
type_check
type_check
add_attribute("d", "A", "INTEGER")
add_call_chain(<<B,INTEGER,D,B,d,C,B,A,A>>)
add_call_chain(<<c,D>>)
add_command("a", "a", <<["B", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["C", "BOOLEAN"], ["d", "INTEGER"], ["INTEGER", "INTEGER"], ["INTEGER", "a"], ["a", "INTEGER"], ["B", "INTEGER"], ["a", "INTEGER"]>>)
add_call_chain(<<C,c,c,A,a,A>>)
int_value (9)
numerical_negation
add_call_chain(<<C,D>>)
add_query("INTEGER", "e", <<["b", "C"], ["A", "C"], ["BOOLEAN", "A"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "e"], ["a", "INTEGER"], ["a", "e"], ["a", "INTEGER"]>>, "C")
conjunction
logical_negation
add_call_chain(<<A,c,C,D,BOOLEAN,C,b,A,b>>)
conjunction
numerical_negation
disjunction
add_attribute("D", "A", "A")
addition
add_command("b", "b", <<["A", "C"], ["D", "BOOLEAN"]>>)
add_call_chain(<<e,a,a,D,c,BOOLEAN>>)
int_value (45)
add_class(BOOLEAN)
add_call_chain(<<D,C,a>>)
logical_negation
int_value (15)
int_value (43)
int_value (14)
add_call_chain(<<D,A,a,INTEGER,d,b,BOOLEAN,BOOLEAN,BOOLEAN>>)
logical_negation
addition
add_attribute("C", "b", "INTEGER")
add_attribute("d", "d", "INTEGER")
add_call_chain(<<A,d>>)
logical_negation
add_attribute("BOOLEAN", "b", "INTEGER")
add_call_chain(<<B,D,b,BOOLEAN>>)
add_call_chain(<<A,B,D,a,a,C,C>>)
generate_java_code
add_query("INTEGER", "b", <<["a", "INTEGER"]>>, "C")
add_class(e)
add_call_chain(<<A,C,b>>)
add_attribute("e", "D", "C")
add_attribute("a", "a", "b")
logical_negation
add_command("BOOLEAN", "A", <<["C", "e"], ["A", "A"], ["b", "INTEGER"], ["B", "INTEGER"], ["INTEGER", "BOOLEAN"], ["B", "e"], ["b", "INTEGER"], ["c", "INTEGER"], ["b", "INTEGER"]>>)
logical_negation
numerical_negation
add_query("c", "c", <<["a", "B"], ["d", "C"]>>, "B")
add_command("B", "B", <<["e", "C"], ["B", "BOOLEAN"], ["c", "INTEGER"], ["C", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "INTEGER"], ["B", "A"]>>)
bool_value (true)
int_value (3)
add_class(c)
generate_java_code
add_query("D", "e", <<["d", "BOOLEAN"], ["D", "b"], ["D", "b"], ["D", "A"], ["INTEGER", "INTEGER"], ["B", "D"], ["d", "BOOLEAN"]>>, "d")
generate_java_code
add_call_chain(<<b,c,A>>)
add_query("B", "b", <<["B", "INTEGER"], ["A", "INTEGER"], ["C", "INTEGER"], ["c", "INTEGER"], ["a", "INTEGER"], ["e", "INTEGER"]>>, "B")
add_attribute("A", "d", "INTEGER")
conjunction
disjunction
addition
add_command("c", "a", <<["b", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["C", "a"]>>)
numerical_negation
add_query("A", "d", <<["C", "BOOLEAN"]>>, "B")
add_call_chain(<<B,d,A>>)
generate_java_code
add_attribute("A", "BOOLEAN", "BOOLEAN")
add_query("a", "A", <<["C", "INTEGER"]>>, "A")
int_value (40)
type_check
add_attribute("C", "INTEGER", "INTEGER")
add_call_chain(<<A,e,INTEGER>>)
add_call_chain(<<d,C,a,b,D>>)
add_call_chain(<<c>>)
add_query("c", "a", <<["D", "a"]>>, "c")
numerical_negation
bool_value (false)
type_check
bool_value (true)
add_call_chain(<<c,e,B,A,e>>)
add_query("BOOLEAN", "e", <<["INTEGER", "INTEGER"], ["d", "INTEGER"], ["C", "INTEGER"], ["B", "INTEGER"]>>, "D")
multiplication
add_attribute("b", "A", "BOOLEAN")
numerical_negation
