add_command("B", "C", <<["D", "BOOLEAN"]>>)
logical_negation
conjunction
type_check
numerical_negation
int_value (1)
numerical_negation
int_value (38)
add_call_chain(<<c,a,d,c,BOOLEAN>>)
add_class(A)
add_attribute("B", "b", "a")
numerical_negation
disjunction
int_value (30)
type_check
int_value (39)
modulo
add_class(a)
add_attribute("b", "B", "BOOLEAN")
numerical_negation
add_call_chain(<<e,d,e,c,A,b,d,C>>)
bool_value (true)
add_query("c", "INTEGER", <<["D", "BOOLEAN"], ["c", "BOOLEAN"]>>, "d")
equals
bool_value (false)
add_command("d", "BOOLEAN", <<["D", "INTEGER"], ["b", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "INTEGER"]>>)
int_value (16)
int_value (44)
bool_value (true)
bool_value (false)
add_command("c", "A", <<["a", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
numerical_negation
logical_negation
add_class(C)
addition
add_query("C", "D", <<["B", "b"], ["a", "BOOLEAN"], ["a", "B"], ["D", "C"], ["b", "INTEGER"], ["a", "b"]>>, "B")
numerical_negation
add_command("C", "d", <<["C", "e"], ["a", "a"], ["b", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["d", "INTEGER"], ["d", "BOOLEAN"], ["D", "D"], ["b", "INTEGER"]>>)
add_call_chain(<<D,c,e,B,d,a,a,INTEGER>>)
int_value (27)
add_call_chain(<<e,D,d,D,e>>)
logical_negation
add_command("b", "BOOLEAN", <<["INTEGER", "e"], ["a", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["c", "INTEGER"], ["d", "INTEGER"], ["c", "BOOLEAN"], ["C", "INTEGER"], ["B", "INTEGER"]>>)
logical_negation
bool_value (true)
int_value (46)
add_command("a", "D", <<["C", "INTEGER"], ["B", "d"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["c", "INTEGER"]>>)
numerical_negation
add_call_chain(<<e,d,c,b>>)
numerical_negation
add_query("D", "INTEGER", <<["d", "INTEGER"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["a", "BOOLEAN"], ["B", "e"], ["c", "INTEGER"], ["e", "INTEGER"], ["C", "D"]>>, "C")
numerical_negation
bool_value (true)
int_value (42)
add_attribute("B", "c", "C")
bool_value (true)
add_call_chain(<<e,B,B>>)
add_query("a", "A", <<["A", "INTEGER"], ["D", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "BOOLEAN"]>>, "d")
logical_negation
add_call_chain(<<a,B>>)
add_query("C", "BOOLEAN", <<["BOOLEAN", "INTEGER"]>>, "c")
conjunction
add_class(b)
add_call_chain(<<C,A,A,d,B>>)
add_query("D", "B", <<["A", "BOOLEAN"], ["INTEGER", "INTEGER"], ["c", "B"], ["C", "INTEGER"], ["d", "INTEGER"], ["d", "BOOLEAN"], ["D", "INTEGER"], ["C", "e"], ["e", "b"]>>, "d")
add_class(A)
generate_java_code
add_attribute("c", "a", "BOOLEAN")
numerical_negation
logical_negation
logical_negation
quotient
add_call_chain(<<d,e,INTEGER,d,A,B>>)
add_call_chain(<<c,D,A,B,a,B,d>>)
generate_java_code
generate_java_code
add_attribute("c", "INTEGER", "BOOLEAN")
bool_value (false)
add_call_chain(<<e,b,C,A,c,BOOLEAN,C,C>>)
add_call_chain(<<e,a,e,C,e,a>>)
add_command("d", "c", <<["A", "INTEGER"], ["C", "e"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["c", "INTEGER"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "BOOLEAN"]>>)
add_call_chain(<<D,d,INTEGER,e,a>>)
add_command("d", "d", <<["d", "INTEGER"], ["B", "INTEGER"], ["a", "INTEGER"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["A", "A"], ["d", "BOOLEAN"], ["INTEGER", "INTEGER"], ["B", "BOOLEAN"]>>)
generate_java_code
modulo
add_query("b", "C", <<["A", "INTEGER"], ["D", "INTEGER"]>>, "D")
logical_negation
numerical_negation
add_call_chain(<<e,a,B>>)
add_command("e", "b", <<["A", "BOOLEAN"], ["D", "INTEGER"], ["b", "C"]>>)
add_attribute("c", "a", "INTEGER")
add_command("e", "C", <<["e", "INTEGER"], ["C", "BOOLEAN"]>>)
int_value (9)
add_command("b", "a", <<["b", "e"]>>)
int_value (39)
less_than
add_attribute("B", "B", "BOOLEAN")
add_command("A", "B", <<["D", "INTEGER"], ["A", "INTEGER"], ["d", "BOOLEAN"], ["A", "INTEGER"], ["C", "C"], ["INTEGER", "BOOLEAN"]>>)
add_call_chain(<<c,INTEGER,d,B,INTEGER,D,C>>)
logical_negation
add_attribute("C", "e", "A")
greater_than
add_call_chain(<<INTEGER,c,b,b,d,C,c,C>>)
add_command("c", "d", <<["D", "B"], ["b", "BOOLEAN"]>>)
add_query("a", "c", <<["C", "D"], ["a", "INTEGER"], ["a", "INTEGER"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "BOOLEAN"]>>, "BOOLEAN")
less_than
add_call_chain(<<D,d,BOOLEAN,INTEGER>>)
add_class(B)
equals
add_call_chain(<<D,e,e,D,D,BOOLEAN,b,e,A>>)
add_call_chain(<<INTEGER,C,B,B>>)
add_query("INTEGER", "e", <<["b", "D"], ["C", "a"], ["C", "BOOLEAN"], ["a", "INTEGER"], ["BOOLEAN", "INTEGER"]>>, "c")
type_check
add_query("B", "e", <<["c", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "INTEGER"]>>, "b")
conjunction
conjunction
add_command("INTEGER", "D", <<["a", "INTEGER"], ["B", "INTEGER"], ["e", "INTEGER"], ["B", "BOOLEAN"], ["b", "INTEGER"]>>)
greater_than
conjunction
int_value (23)
add_call_chain(<<D,D,D>>)
add_call_chain(<<c,C,d,B,e,a,a>>)
bool_value (false)
add_call_chain(<<c,B,B,A,a>>)
add_command("BOOLEAN", "d", <<["D", "INTEGER"]>>)
add_command("e", "c", <<["A", "INTEGER"], ["c", "BOOLEAN"], ["e", "INTEGER"], ["c", "INTEGER"], ["e", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "BOOLEAN"]>>)
generate_java_code
add_call_chain(<<D,e,d,b,C,b,b>>)
bool_value (false)
add_command("a", "c", <<["b", "INTEGER"], ["A", "BOOLEAN"], ["D", "INTEGER"], ["INTEGER", "b"], ["a", "BOOLEAN"]>>)
multiplication
numerical_negation
logical_negation
add_query("A", "c", <<["d", "c"], ["e", "BOOLEAN"]>>, "e")
add_class(b)
generate_java_code
add_call_chain(<<d,A,A,A,BOOLEAN>>)
int_value (34)
add_call_chain(<<D,B,D,C,A,B>>)
int_value (16)
add_call_chain(<<a>>)
add_query("a", "a", <<["D", "INTEGER"], ["C", "C"], ["c", "BOOLEAN"], ["B", "b"], ["C", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "INTEGER"], ["B", "BOOLEAN"], ["a", "INTEGER"]>>, "A")
addition
logical_negation
bool_value (false)
add_command("INTEGER", "C", <<["b", "BOOLEAN"], ["a", "INTEGER"], ["d", "C"], ["a", "INTEGER"], ["A", "BOOLEAN"], ["D", "a"], ["e", "BOOLEAN"], ["A", "A"], ["c", "D"]>>)
add_attribute("A", "A", "INTEGER")
add_call_chain(<<a,D,d,B,A>>)
add_query("e", "e", <<["e", "INTEGER"], ["D", "BOOLEAN"]>>, "B")
bool_value (false)
type_check
add_command("B", "C", <<["D", "INTEGER"], ["d", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["b", "BOOLEAN"], ["INTEGER", "INTEGER"], ["a", "B"], ["B", "C"], ["C", "D"], ["c", "BOOLEAN"]>>)
int_value (5)
logical_negation
type_check
add_query("e", "d", <<["D", "INTEGER"], ["c", "INTEGER"], ["c", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "BOOLEAN"], ["BOOLEAN", "D"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["D", "BOOLEAN"]>>, "c")
numerical_negation
add_query("B", "INTEGER", <<["B", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "INTEGER"], ["B", "BOOLEAN"], ["D", "INTEGER"], ["A", "INTEGER"], ["a", "INTEGER"], ["C", "INTEGER"]>>, "d")
numerical_negation
generate_java_code
add_call_chain(<<A,B,D,C,A>>)
numerical_negation
add_command("c", "A", <<["B", "INTEGER"], ["d", "INTEGER"], ["d", "BOOLEAN"], ["b", "BOOLEAN"], ["INTEGER", "a"], ["D", "INTEGER"], ["INTEGER", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>)
int_value (35)
bool_value (false)
add_query("e", "a", <<["d", "INTEGER"], ["BOOLEAN", "INTEGER"], ["a", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["D", "INTEGER"], ["C", "INTEGER"]>>, "INTEGER")
add_query("d", "A", <<["B", "C"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>, "C")
generate_java_code
bool_value (false)
add_query("INTEGER", "B", <<["c", "INTEGER"], ["e", "INTEGER"], ["A", "c"]>>, "a")
add_command("a", "A", <<["e", "INTEGER"], ["a", "INTEGER"], ["C", "C"]>>)
logical_negation
conjunction
disjunction
add_call_chain(<<A,D,b,b,C,A>>)
add_query("e", "B", <<["BOOLEAN", "INTEGER"]>>, "D")
generate_java_code
add_call_chain(<<B,b,d,C,C,B,A>>)
add_call_chain(<<e,B,c,c,B,A,D,a>>)
add_call_chain(<<B,b>>)
add_call_chain(<<B,D,a,d>>)
type_check
add_query("c", "d", <<["D", "BOOLEAN"]>>, "INTEGER")
numerical_negation
generate_java_code
add_query("a", "d", <<["A", "INTEGER"]>>, "INTEGER")
disjunction
numerical_negation
type_check
int_value (12)
add_class(INTEGER)
add_attribute("d", "a", "BOOLEAN")
type_check
addition
add_attribute("C", "e", "a")
add_attribute("C", "e", "INTEGER")
numerical_negation
add_attribute("D", "c", "BOOLEAN")
type_check
int_value (43)
add_call_chain(<<INTEGER,d>>)
add_command("e", "D", <<["C", "A"]>>)
add_command("b", "D", <<["a", "BOOLEAN"], ["B", "e"], ["a", "BOOLEAN"]>>)
add_call_chain(<<BOOLEAN,d,e,B,c,b,d,BOOLEAN>>)
add_class(C)
add_call_chain(<<e,D,A,d,A,B,D,d>>)
int_value (19)
add_attribute("B", "A", "C")
add_attribute("B", "e", "BOOLEAN")
add_call_chain(<<A,C>>)
add_query("INTEGER", "B", <<["b", "INTEGER"], ["B", "INTEGER"], ["B", "INTEGER"], ["e", "INTEGER"], ["B", "INTEGER"], ["d", "INTEGER"], ["A", "d"], ["c", "e"], ["C", "BOOLEAN"]>>, "A")
add_query("e", "BOOLEAN", <<["b", "INTEGER"], ["D", "INTEGER"], ["A", "BOOLEAN"], ["b", "INTEGER"], ["B", "INTEGER"], ["C", "INTEGER"]>>, "D")
generate_java_code
add_call_chain(<<INTEGER,A>>)
add_query("D", "BOOLEAN", <<["BOOLEAN", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "BOOLEAN"]>>, "e")
disjunction
add_call_chain(<<d,A,d>>)
int_value (47)
numerical_negation
logical_negation
less_than
disjunction
generate_java_code
add_command("d", "B", <<["a", "e"], ["A", "INTEGER"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "BOOLEAN"], ["d", "INTEGER"]>>)
add_query("INTEGER", "b", <<["D", "INTEGER"], ["B", "D"]>>, "d")
bool_value (false)
add_attribute("e", "B", "BOOLEAN")
less_than
add_attribute("C", "C", "c")
logical_negation
add_call_chain(<<C,B,D>>)
add_command("C", "b", <<["A", "INTEGER"]>>)
add_class(A)
type_check
add_call_chain(<<INTEGER,A,C,d,C,C>>)
bool_value (true)
type_check
add_call_chain(<<D,B,d,BOOLEAN,D,b>>)
int_value (12)
quotient
multiplication
add_command("C", "b", <<["A", "INTEGER"], ["b", "a"], ["a", "INTEGER"]>>)
type_check
type_check
logical_negation
equals
add_class(b)
less_than
add_call_chain(<<A,A,A,e,BOOLEAN,d,a,D,D>>)
add_call_chain(<<e>>)
int_value (37)
add_query("c", "B", <<["e", "INTEGER"], ["d", "INTEGER"], ["B", "b"], ["B", "INTEGER"], ["c", "A"], ["d", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "BOOLEAN"]>>, "D")
type_check
add_call_chain(<<C,B,C,D,D,BOOLEAN,D,e>>)
