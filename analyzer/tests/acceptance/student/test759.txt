add_call_chain(<<INTEGER,a,c>>)
logical_negation
numerical_negation
logical_negation
add_call_chain(<<D,b,C,BOOLEAN,e,C,D,D>>)
add_call_chain(<<INTEGER>>)
logical_negation
add_call_chain(<<B,e,d,a,d,a>>)
add_call_chain(<<BOOLEAN,c,B,c>>)
numerical_negation
add_query("BOOLEAN", "a", <<["B", "D"]>>, "C")
bool_value (true)
bool_value (true)
add_command("c", "A", <<["e", "b"], ["c", "INTEGER"], ["B", "BOOLEAN"], ["d", "INTEGER"]>>)
numerical_negation
add_attribute("d", "D", "INTEGER")
add_command("a", "c", <<["C", "BOOLEAN"], ["A", "e"], ["a", "INTEGER"], ["D", "b"], ["b", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "BOOLEAN"]>>)
add_command("D", "D", <<["c", "e"], ["A", "a"], ["d", "BOOLEAN"]>>)
add_command("D", "B", <<["B", "B"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "B"]>>)
add_class(c)
disjunction
bool_value (false)
disjunction
add_call_chain(<<e,B,c,A>>)
add_call_chain(<<A,B,a,D,b,BOOLEAN,D>>)
int_value (28)
numerical_negation
generate_java_code
add_query("D", "c", <<["INTEGER", "INTEGER"], ["A", "C"], ["c", "INTEGER"], ["d", "BOOLEAN"], ["e", "INTEGER"]>>, "B")
add_query("B", "c", <<["e", "BOOLEAN"], ["B", "C"], ["c", "c"]>>, "D")
subtraction
add_attribute("d", "a", "B")
type_check
logical_negation
add_command("B", "A", <<["B", "INTEGER"]>>)
logical_negation
conjunction
bool_value (true)
add_query("a", "e", <<["C", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "BOOLEAN"], ["INTEGER", "INTEGER"], ["A", "INTEGER"], ["c", "BOOLEAN"]>>, "D")
bool_value (false)
conjunction
bool_value (true)
bool_value (true)
logical_negation
add_call_chain(<<e,INTEGER,BOOLEAN,a,C,e,C,A,A>>)
add_command("e", "C", <<["D", "b"], ["d", "e"], ["INTEGER", "a"], ["d", "INTEGER"], ["d", "BOOLEAN"], ["d", "C"], ["C", "BOOLEAN"], ["D", "INTEGER"]>>)
add_attribute("b", "C", "D")
add_class(BOOLEAN)
logical_negation
add_call_chain(<<d,b,b,a,B,B,A,INTEGER,d>>)
numerical_negation
type_check
add_call_chain(<<c,e,INTEGER,b,d,d,A>>)
logical_negation
add_command("e", "D", <<["D", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "BOOLEAN"]>>)
numerical_negation
add_class(a)
add_call_chain(<<B,C,b,INTEGER,b,d,B,c>>)
generate_java_code
add_attribute("C", "B", "INTEGER")
generate_java_code
int_value (35)
add_call_chain(<<e,A,D,d,B,C>>)
logical_negation
add_command("c", "BOOLEAN", <<["D", "BOOLEAN"], ["B", "b"], ["a", "c"]>>)
bool_value (true)
conjunction
disjunction
add_attribute("B", "A", "INTEGER")
type_check
modulo
add_call_chain(<<d,B>>)
add_query("e", "B", <<["c", "INTEGER"], ["B", "INTEGER"], ["b", "BOOLEAN"], ["b", "INTEGER"], ["b", "BOOLEAN"], ["D", "INTEGER"], ["INTEGER", "INTEGER"]>>, "a")
conjunction
int_value (3)
add_query("b", "B", <<["D", "b"], ["d", "BOOLEAN"], ["c", "B"]>>, "a")
add_command("e", "A", <<["A", "BOOLEAN"], ["c", "INTEGER"], ["A", "INTEGER"], ["C", "INTEGER"]>>)
logical_negation
add_call_chain(<<C,a,INTEGER,a,a,B,e,D,c>>)
add_command("c", "A", <<["A", "A"]>>)
add_call_chain(<<INTEGER>>)
add_command("BOOLEAN", "B", <<["b", "BOOLEAN"], ["C", "e"], ["A", "BOOLEAN"], ["B", "d"], ["b", "INTEGER"], ["A", "INTEGER"], ["B", "B"], ["INTEGER", "C"], ["A", "BOOLEAN"]>>)
logical_negation
add_call_chain(<<A,A,A,d,C,c,a,C,BOOLEAN>>)
bool_value (false)
add_command("INTEGER", "INTEGER", <<["c", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "b"], ["d", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["A", "BOOLEAN"]>>)
logical_negation
bool_value (false)
add_attribute("d", "BOOLEAN", "INTEGER")
numerical_negation
generate_java_code
numerical_negation
less_than
add_call_chain(<<A,e,A,BOOLEAN,a,A,e,d,B>>)
logical_negation
int_value (43)
add_attribute("c", "B", "BOOLEAN")
bool_value (true)
generate_java_code
int_value (37)
int_value (33)
add_attribute("a", "c", "C")
add_call_chain(<<c,B,D>>)
logical_negation
int_value (41)
type_check
logical_negation
add_attribute("C", "b", "INTEGER")
int_value (15)
bool_value (true)
numerical_negation
add_call_chain(<<B,d,b,INTEGER>>)
bool_value (true)
type_check
add_command("a", "e", <<["C", "D"], ["D", "BOOLEAN"]>>)
add_query("C", "C", <<["c", "c"], ["D", "d"], ["A", "INTEGER"], ["b", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>, "c")
add_query("b", "b", <<["b", "INTEGER"], ["B", "b"], ["e", "BOOLEAN"], ["B", "B"], ["C", "INTEGER"]>>, "d")
add_command("B", "A", <<["D", "BOOLEAN"], ["a", "C"], ["a", "BOOLEAN"], ["D", "INTEGER"]>>)
less_than
add_call_chain(<<B,C,BOOLEAN,b,D,a>>)
logical_negation
bool_value (true)
type_check
add_attribute("B", "A", "INTEGER")
greater_than
add_call_chain(<<c,a,d>>)
numerical_negation
add_call_chain(<<A,e,b,D,c>>)
logical_negation
int_value (44)
add_attribute("c", "d", "C")
add_command("b", "b", <<["D", "INTEGER"], ["c", "INTEGER"]>>)
add_class(c)
add_attribute("c", "c", "INTEGER")
add_call_chain(<<d,A,BOOLEAN,C,C,c,A,B,D>>)
type_check
add_call_chain(<<BOOLEAN,e,A,D,C>>)
add_command("b", "b", <<["b", "INTEGER"], ["c", "b"], ["A", "c"], ["C", "a"], ["B", "B"], ["e", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "a"], ["c", "d"]>>)
add_call_chain(<<INTEGER,B,A,b,INTEGER,b,D,C>>)
add_call_chain(<<BOOLEAN,C,b>>)
disjunction
modulo
add_class(BOOLEAN)
add_call_chain(<<A>>)
logical_negation
add_query("B", "c", <<["c", "INTEGER"], ["A", "e"], ["INTEGER", "INTEGER"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["C", "INTEGER"], ["c", "BOOLEAN"]>>, "C")
bool_value (false)
add_attribute("a", "B", "INTEGER")
add_attribute("d", "C", "INTEGER")
add_call_chain(<<D,D,a,a,C,C,D,B>>)
add_class(A)
add_call_chain(<<A,D>>)
int_value (17)
bool_value (false)
numerical_negation
generate_java_code
logical_negation
add_command("D", "e", <<["c", "INTEGER"], ["b", "INTEGER"], ["D", "d"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["C", "INTEGER"], ["INTEGER", "INTEGER"], ["e", "INTEGER"], ["d", "BOOLEAN"]>>)
add_class(C)
add_class(a)
bool_value (false)
int_value (21)
disjunction
disjunction
add_query("e", "b", <<["e", "d"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "b"]>>, "a")
add_command("c", "D", <<["b", "D"], ["c", "B"], ["e", "INTEGER"], ["c", "INTEGER"], ["C", "BOOLEAN"], ["C", "A"]>>)
add_call_chain(<<c,e,e,b,BOOLEAN,e,B,BOOLEAN>>)
add_attribute("d", "B", "BOOLEAN")
type_check
add_call_chain(<<A,b,c,c,c,INTEGER,a,b>>)
add_call_chain(<<C,c,d,D,a,D>>)
conjunction
quotient
add_class(d)
bool_value (true)
int_value (46)
add_attribute("D", "a", "INTEGER")
add_query("c", "a", <<["A", "INTEGER"], ["A", "INTEGER"], ["B", "INTEGER"], ["B", "INTEGER"], ["B", "b"]>>, "A")
add_command("b", "B", <<["D", "INTEGER"], ["C", "BOOLEAN"]>>)
add_call_chain(<<b,d,b,INTEGER,b,c,B,d,INTEGER>>)
disjunction
add_call_chain(<<a,c,d,D,d>>)
add_query("e", "d", <<["c", "BOOLEAN"], ["b", "INTEGER"], ["C", "INTEGER"], ["d", "BOOLEAN"]>>, "C")
int_value (48)
type_check
add_call_chain(<<e,INTEGER,c>>)
type_check
numerical_negation
add_query("B", "D", <<["b", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["b", "INTEGER"]>>, "a")
numerical_negation
int_value (16)
conjunction
logical_negation
bool_value (false)
add_query("D", "INTEGER", <<["b", "INTEGER"], ["INTEGER", "B"], ["C", "A"], ["D", "BOOLEAN"]>>, "e")
generate_java_code
equals
add_attribute("b", "C", "a")
add_command("INTEGER", "B", <<["INTEGER", "B"]>>)
add_attribute("c", "BOOLEAN", "BOOLEAN")
generate_java_code
int_value (19)
add_call_chain(<<B,b,a>>)
add_query("b", "B", <<["B", "INTEGER"], ["B", "d"], ["A", "c"], ["C", "b"]>>, "e")
numerical_negation
add_attribute("a", "A", "C")
numerical_negation
multiplication
disjunction
add_call_chain(<<b,c,b,c,D,D,c,d>>)
logical_negation
add_call_chain(<<A,d,b,B,C>>)
add_attribute("e", "D", "INTEGER")
add_query("d", "a", <<["D", "INTEGER"], ["INTEGER", "BOOLEAN"], ["INTEGER", "B"], ["b", "b"], ["A", "BOOLEAN"], ["d", "INTEGER"]>>, "e")
add_query("a", "C", <<["A", "INTEGER"], ["D", "D"], ["C", "BOOLEAN"], ["a", "INTEGER"]>>, "b")
int_value (34)
add_call_chain(<<a,INTEGER,a,B,d,b>>)
multiplication
bool_value (false)
multiplication
disjunction
add_call_chain(<<D,C,C>>)
greater_than
generate_java_code
type_check
generate_java_code
add_class(B)
add_command("c", "a", <<["B", "BOOLEAN"], ["A", "INTEGER"], ["e", "BOOLEAN"], ["c", "D"]>>)
add_call_chain(<<c,A,d>>)
greater_than
add_class(C)
bool_value (false)
