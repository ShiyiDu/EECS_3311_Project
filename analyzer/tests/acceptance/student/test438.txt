add_query("D", "d", <<["b", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "d"], ["INTEGER", "d"]>>, "d")
add_attribute("d", "b", "A")
add_class(e)
numerical_negation
add_command("e", "a", <<["a", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "INTEGER"], ["D", "INTEGER"]>>)
subtraction
add_call_chain(<<INTEGER,e,a,INTEGER,b,c,a,BOOLEAN,C>>)
add_command("B", "BOOLEAN", <<["BOOLEAN", "e"]>>)
type_check
logical_negation
bool_value (false)
bool_value (true)
int_value (2)
int_value (11)
equals
add_query("d", "A", <<["c", "b"], ["b", "INTEGER"], ["C", "INTEGER"], ["B", "D"], ["B", "BOOLEAN"], ["a", "INTEGER"], ["D", "B"]>>, "c")
add_class(D)
logical_negation
generate_java_code
numerical_negation
add_attribute("A", "c", "D")
type_check
equals
add_command("a", "D", <<["B", "INTEGER"], ["INTEGER", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "BOOLEAN"]>>)
add_query("C", "c", <<["d", "e"]>>, "a")
bool_value (false)
add_query("e", "A", <<["B", "INTEGER"], ["d", "D"], ["INTEGER", "d"], ["a", "BOOLEAN"], ["a", "INTEGER"], ["d", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "BOOLEAN"]>>, "B")
conjunction
add_query("d", "INTEGER", <<["a", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["C", "C"], ["d", "BOOLEAN"], ["A", "e"], ["D", "BOOLEAN"], ["a", "D"], ["C", "B"]>>, "c")
add_call_chain(<<D>>)
quotient
disjunction
bool_value (false)
logical_negation
disjunction
int_value (14)
add_attribute("A", "B", "INTEGER")
add_command("e", "D", <<["A", "a"], ["B", "INTEGER"], ["a", "d"], ["c", "INTEGER"], ["A", "INTEGER"], ["A", "INTEGER"], ["B", "INTEGER"]>>)
int_value (18)
add_query("d", "A", <<["d", "D"]>>, "e")
add_attribute("D", "A", "e")
add_call_chain(<<C,A>>)
add_call_chain(<<A>>)
logical_negation
add_call_chain(<<B>>)
add_query("e", "B", <<["c", "INTEGER"], ["b", "BOOLEAN"], ["c", "C"]>>, "c")
add_command("d", "C", <<["B", "BOOLEAN"]>>)
numerical_negation
logical_negation
add_class(a)
add_call_chain(<<c,c,C,c,D>>)
add_call_chain(<<b,A>>)
bool_value (true)
add_command("A", "a", <<["D", "B"], ["A", "INTEGER"], ["INTEGER", "c"], ["A", "BOOLEAN"], ["c", "INTEGER"]>>)
less_than
add_query("BOOLEAN", "d", <<["b", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "D"], ["c", "INTEGER"], ["A", "BOOLEAN"], ["a", "d"]>>, "b")
bool_value (true)
add_class(B)
greater_than
subtraction
add_call_chain(<<e>>)
type_check
greater_than
bool_value (true)
subtraction
logical_negation
add_command("d", "e", <<["D", "BOOLEAN"], ["INTEGER", "e"]>>)
add_attribute("A", "D", "a")
generate_java_code
add_call_chain(<<B,a,a>>)
int_value (40)
add_command("d", "c", <<["b", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["C", "c"], ["c", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "D"], ["D", "BOOLEAN"]>>)
numerical_negation
disjunction
disjunction
add_attribute("c", "c", "e")
add_attribute("d", "e", "INTEGER")
add_query("C", "D", <<["D", "INTEGER"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["d", "A"], ["b", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "BOOLEAN"]>>, "c")
type_check
bool_value (true)
int_value (22)
bool_value (true)
bool_value (true)
numerical_negation
numerical_negation
addition
int_value (35)
add_attribute("a", "INTEGER", "b")
bool_value (true)
type_check
add_query("c", "a", <<["A", "INTEGER"], ["D", "D"], ["D", "INTEGER"]>>, "D")
add_query("b", "c", <<["A", "BOOLEAN"], ["d", "BOOLEAN"], ["e", "INTEGER"]>>, "e")
add_call_chain(<<D>>)
add_query("e", "d", <<["D", "INTEGER"], ["C", "BOOLEAN"], ["D", "B"]>>, "INTEGER")
generate_java_code
add_query("c", "BOOLEAN", <<["A", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>, "C")
add_call_chain(<<A,b>>)
add_command("B", "C", <<["d", "b"], ["a", "BOOLEAN"], ["e", "INTEGER"]>>)
add_attribute("d", "a", "BOOLEAN")
add_command("B", "A", <<["b", "C"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["INTEGER", "C"], ["D", "B"], ["e", "e"], ["e", "BOOLEAN"], ["b", "INTEGER"], ["e", "B"]>>)
disjunction
conjunction
int_value (12)
add_call_chain(<<b,a>>)
modulo
int_value (38)
bool_value (true)
add_query("A", "D", <<["a", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["b", "d"], ["C", "A"], ["B", "BOOLEAN"]>>, "d")
add_attribute("d", "C", "c")
add_call_chain(<<a,A,INTEGER,c,d>>)
add_query("a", "e", <<["a", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "INTEGER"], ["D", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "BOOLEAN"]>>, "a")
add_query("c", "BOOLEAN", <<["C", "INTEGER"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["A", "a"], ["C", "BOOLEAN"], ["a", "BOOLEAN"], ["b", "B"]>>, "A")
bool_value (true)
add_attribute("c", "B", "e")
add_query("A", "c", <<["e", "b"], ["BOOLEAN", "B"]>>, "A")
add_attribute("B", "D", "D")
conjunction
generate_java_code
add_attribute("a", "e", "BOOLEAN")
generate_java_code
add_class(D)
bool_value (true)
type_check
add_call_chain(<<e,B,a,C,B,C,e,A,e>>)
add_call_chain(<<INTEGER>>)
numerical_negation
add_attribute("INTEGER", "INTEGER", "e")
numerical_negation
generate_java_code
add_call_chain(<<e,a,b,c,B,B>>)
add_query("C", "A", <<["BOOLEAN", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "INTEGER"], ["INTEGER", "INTEGER"], ["b", "C"], ["A", "BOOLEAN"]>>, "A")
add_class(BOOLEAN)
type_check
conjunction
add_attribute("B", "e", "INTEGER")
int_value (16)
int_value (31)
disjunction
add_attribute("d", "b", "BOOLEAN")
add_query("c", "B", <<["INTEGER", "BOOLEAN"], ["e", "INTEGER"], ["d", "d"]>>, "D")
add_call_chain(<<BOOLEAN>>)
type_check
add_query("c", "a", <<["a", "BOOLEAN"], ["C", "INTEGER"], ["C", "B"], ["d", "INTEGER"], ["B", "INTEGER"]>>, "INTEGER")
quotient
int_value (42)
add_command("D", "b", <<["d", "b"], ["BOOLEAN", "INTEGER"], ["B", "BOOLEAN"], ["D", "INTEGER"]>>)
type_check
numerical_negation
numerical_negation
add_attribute("e", "B", "INTEGER")
disjunction
add_query("C", "C", <<["A", "INTEGER"], ["A", "BOOLEAN"], ["C", "C"], ["A", "INTEGER"], ["b", "INTEGER"]>>, "B")
numerical_negation
logical_negation
int_value (43)
add_query("B", "C", <<["e", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "BOOLEAN"]>>, "A")
add_query("a", "B", <<["b", "INTEGER"], ["BOOLEAN", "INTEGER"], ["a", "INTEGER"], ["a", "BOOLEAN"], ["a", "INTEGER"]>>, "A")
type_check
int_value (36)
int_value (14)
add_call_chain(<<e,C,e,b,c,a>>)
type_check
add_call_chain(<<D,d,INTEGER>>)
bool_value (false)
generate_java_code
add_call_chain(<<c,c,A,INTEGER,e,A>>)
add_command("B", "D", <<["C", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "B"], ["a", "BOOLEAN"], ["d", "BOOLEAN"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["A", "d"], ["a", "D"]>>)
generate_java_code
add_attribute("B", "B", "BOOLEAN")
quotient
add_call_chain(<<b,d,A,d,INTEGER,C>>)
add_class(BOOLEAN)
add_query("INTEGER", "C", <<["INTEGER", "BOOLEAN"], ["B", "INTEGER"], ["e", "b"], ["e", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "b"]>>, "C")
numerical_negation
type_check
add_command("A", "A", <<["BOOLEAN", "INTEGER"]>>)
modulo
bool_value (false)
add_call_chain(<<A,b,B,d,d,a>>)
add_call_chain(<<d,d>>)
add_query("A", "b", <<["d", "BOOLEAN"], ["e", "INTEGER"], ["C", "a"], ["A", "INTEGER"], ["a", "BOOLEAN"], ["d", "c"]>>, "INTEGER")
generate_java_code
add_attribute("D", "d", "BOOLEAN")
add_class(B)
add_call_chain(<<e,A,e,d,b,B,A,c,D>>)
add_call_chain(<<e,D,A,d,d>>)
logical_negation
multiplication
numerical_negation
add_command("b", "C", <<["a", "INTEGER"], ["a", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "INTEGER"], ["d", "INTEGER"], ["c", "BOOLEAN"]>>)
disjunction
bool_value (true)
add_call_chain(<<B,b,d,C,C,D,C,C,D>>)
bool_value (false)
add_call_chain(<<D,C,e>>)
add_command("D", "e", <<["e", "BOOLEAN"], ["A", "B"], ["d", "INTEGER"], ["c", "INTEGER"], ["INTEGER", "INTEGER"], ["c", "INTEGER"]>>)
add_command("a", "a", <<["A", "INTEGER"], ["C", "INTEGER"], ["c", "INTEGER"], ["INTEGER", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "INTEGER"], ["B", "BOOLEAN"]>>)
add_command("e", "B", <<["B", "A"], ["c", "b"], ["C", "INTEGER"], ["A", "INTEGER"], ["e", "BOOLEAN"], ["a", "INTEGER"], ["B", "INTEGER"]>>)
int_value (12)
generate_java_code
add_class(b)
add_call_chain(<<B,INTEGER,B,A,c,B,INTEGER,BOOLEAN,e>>)
type_check
add_call_chain(<<C,INTEGER,A,A,C,b>>)
add_call_chain(<<b,c,A,D,C,BOOLEAN>>)
conjunction
logical_negation
add_class(e)
add_call_chain(<<C>>)
logical_negation
add_class(B)
less_than
generate_java_code
add_command("b", "D", <<["b", "BOOLEAN"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["a", "B"], ["INTEGER", "INTEGER"], ["D", "BOOLEAN"], ["b", "BOOLEAN"], ["b", "BOOLEAN"]>>)
add_query("a", "a", <<["b", "a"], ["C", "A"], ["D", "INTEGER"], ["c", "a"], ["B", "INTEGER"], ["b", "INTEGER"], ["d", "BOOLEAN"], ["C", "e"], ["b", "A"]>>, "C")
add_call_chain(<<C,A,a,INTEGER,B>>)
add_class(B)
int_value (21)
generate_java_code
type_check
add_call_chain(<<C,d,e,a,b,BOOLEAN,e,c>>)
add_call_chain(<<a,D,d,B,C,b,B>>)
add_command("e", "e", <<["c", "BOOLEAN"], ["e", "BOOLEAN"]>>)
bool_value (false)
numerical_negation
quotient
add_call_chain(<<A,d,C,A,D>>)
