add_command("C", "a", <<["INTEGER", "INTEGER"]>>)
logical_negation
add_command("b", "d", <<["C", "d"], ["b", "INTEGER"], ["D", "BOOLEAN"]>>)
int_value (31)
add_call_chain(<<a>>)
int_value (2)
add_class(d)
type_check
bool_value (true)
add_query("B", "A", <<["A", "BOOLEAN"], ["B", "INTEGER"], ["c", "BOOLEAN"], ["b", "BOOLEAN"], ["BOOLEAN", "B"], ["d", "BOOLEAN"], ["c", "INTEGER"], ["b", "D"], ["INTEGER", "INTEGER"]>>, "c")
add_command("c", "c", <<["b", "INTEGER"], ["A", "BOOLEAN"]>>)
type_check
logical_negation
add_attribute("e", "c", "INTEGER")
logical_negation
add_query("e", "A", <<["B", "a"]>>, "d")
add_command("INTEGER", "C", <<["BOOLEAN", "INTEGER"], ["D", "B"], ["C", "INTEGER"], ["e", "BOOLEAN"], ["C", "BOOLEAN"], ["d", "BOOLEAN"]>>)
add_command("a", "B", <<["D", "a"], ["B", "B"], ["D", "b"], ["BOOLEAN", "BOOLEAN"], ["B", "BOOLEAN"]>>)
add_query("B", "C", <<["B", "BOOLEAN"], ["c", "BOOLEAN"], ["b", "INTEGER"], ["b", "INTEGER"]>>, "A")
bool_value (true)
type_check
add_attribute("d", "A", "INTEGER")
less_than
add_command("D", "a", <<["B", "BOOLEAN"]>>)
numerical_negation
add_command("b", "INTEGER", <<["B", "A"], ["c", "INTEGER"], ["C", "c"], ["D", "BOOLEAN"], ["C", "D"], ["B", "INTEGER"], ["d", "INTEGER"], ["C", "INTEGER"]>>)
add_attribute("b", "d", "BOOLEAN")
logical_negation
add_call_chain(<<A,D,C,INTEGER,b>>)
greater_than
equals
bool_value (false)
numerical_negation
add_class(INTEGER)
add_attribute("BOOLEAN", "a", "a")
add_call_chain(<<d>>)
add_call_chain(<<D,e,d,D,e,INTEGER,a>>)
add_call_chain(<<d,B,b,C,d,e,e>>)
generate_java_code
add_command("B", "D", <<["a", "INTEGER"], ["b", "BOOLEAN"], ["B", "INTEGER"]>>)
add_call_chain(<<c,d>>)
type_check
int_value (42)
bool_value (false)
add_attribute("e", "B", "INTEGER")
generate_java_code
add_class(d)
add_call_chain(<<b,C,e,d,INTEGER,C,B,b>>)
bool_value (false)
add_call_chain(<<c,e,C,d,d,d,INTEGER,a,e>>)
add_attribute("D", "BOOLEAN", "BOOLEAN")
subtraction
conjunction
modulo
add_attribute("C", "A", "D")
type_check
equals
add_query("d", "c", <<["A", "BOOLEAN"], ["C", "INTEGER"], ["a", "c"], ["B", "A"]>>, "D")
add_command("c", "c", <<["B", "INTEGER"], ["D", "c"], ["b", "INTEGER"], ["d", "BOOLEAN"], ["c", "INTEGER"], ["C", "BOOLEAN"], ["d", "B"]>>)
add_query("a", "C", <<["A", "A"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["INTEGER", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "INTEGER"], ["d", "INTEGER"], ["INTEGER", "B"], ["b", "A"]>>, "C")
add_query("a", "C", <<["a", "d"], ["A", "INTEGER"], ["D", "C"], ["a", "INTEGER"]>>, "b")
add_attribute("c", "A", "c")
quotient
add_class(C)
quotient
add_command("BOOLEAN", "A", <<["B", "BOOLEAN"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["C", "INTEGER"]>>)
numerical_negation
type_check
add_query("c", "C", <<["d", "INTEGER"]>>, "D")
add_attribute("C", "c", "A")
bool_value (true)
int_value (45)
type_check
add_call_chain(<<d>>)
add_call_chain(<<c,c,b,e,e,d,b,A>>)
bool_value (true)
numerical_negation
add_call_chain(<<D,A,A,c>>)
add_call_chain(<<B,C,B,D,C>>)
add_attribute("A", "a", "INTEGER")
logical_negation
int_value (43)
add_call_chain(<<c,INTEGER,d,c,b,B>>)
generate_java_code
logical_negation
type_check
type_check
numerical_negation
generate_java_code
add_query("B", "d", <<["INTEGER", "INTEGER"], ["e", "D"], ["b", "BOOLEAN"], ["b", "INTEGER"], ["D", "INTEGER"], ["B", "a"], ["e", "B"], ["a", "BOOLEAN"], ["c", "INTEGER"]>>, "B")
add_command("B", "C", <<["D", "INTEGER"], ["a", "BOOLEAN"], ["B", "INTEGER"], ["e", "BOOLEAN"], ["D", "d"]>>)
add_command("A", "e", <<["B", "BOOLEAN"], ["INTEGER", "INTEGER"]>>)
add_command("B", "c", <<["A", "B"], ["b", "INTEGER"], ["d", "INTEGER"], ["C", "c"], ["D", "d"], ["B", "e"]>>)
add_command("a", "INTEGER", <<["B", "INTEGER"], ["C", "e"], ["D", "BOOLEAN"], ["A", "c"], ["B", "b"], ["B", "INTEGER"], ["e", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "INTEGER"]>>)
add_command("C", "d", <<["B", "BOOLEAN"]>>)
add_call_chain(<<INTEGER,D,c,C,c>>)
add_command("d", "INTEGER", <<["a", "A"], ["B", "BOOLEAN"], ["INTEGER", "INTEGER"], ["D", "BOOLEAN"], ["b", "INTEGER"], ["d", "BOOLEAN"], ["b", "INTEGER"], ["INTEGER", "D"], ["A", "BOOLEAN"]>>)
add_command("d", "BOOLEAN", <<["B", "BOOLEAN"], ["c", "INTEGER"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["e", "INTEGER"], ["d", "INTEGER"], ["B", "D"], ["a", "A"]>>)
addition
numerical_negation
logical_negation
add_call_chain(<<e,A,B,A,b,BOOLEAN,a>>)
add_call_chain(<<a,e,C>>)
numerical_negation
int_value (10)
add_call_chain(<<BOOLEAN,A>>)
add_call_chain(<<c,a>>)
disjunction
conjunction
add_call_chain(<<A>>)
numerical_negation
generate_java_code
add_call_chain(<<C,BOOLEAN>>)
add_call_chain(<<D,a,A,b,e,b,b,BOOLEAN,BOOLEAN>>)
type_check
numerical_negation
generate_java_code
logical_negation
add_query("C", "C", <<["C", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["c", "BOOLEAN"], ["C", "B"], ["B", "INTEGER"], ["INTEGER", "INTEGER"], ["C", "B"], ["c", "BOOLEAN"]>>, "c")
add_query("A", "a", <<["e", "INTEGER"], ["d", "C"], ["c", "BOOLEAN"], ["b", "BOOLEAN"]>>, "D")
numerical_negation
add_call_chain(<<a,d,c,c,D>>)
add_attribute("A", "c", "BOOLEAN")
add_class(d)
add_attribute("BOOLEAN", "D", "BOOLEAN")
add_call_chain(<<C,a,a,C,a,d,INTEGER,a,e>>)
bool_value (false)
int_value (3)
add_command("C", "INTEGER", <<["D", "BOOLEAN"], ["d", "BOOLEAN"]>>)
conjunction
generate_java_code
bool_value (true)
add_attribute("e", "B", "a")
add_call_chain(<<b,e>>)
add_query("B", "A", <<["a", "INTEGER"], ["B", "BOOLEAN"], ["A", "e"], ["B", "BOOLEAN"]>>, "c")
add_command("b", "A", <<["B", "BOOLEAN"], ["d", "B"], ["A", "BOOLEAN"], ["b", "BOOLEAN"], ["d", "INTEGER"]>>)
int_value (21)
add_class(BOOLEAN)
add_call_chain(<<b,B>>)
add_query("b", "b", <<["D", "INTEGER"], ["D", "BOOLEAN"], ["e", "a"], ["e", "INTEGER"], ["B", "c"], ["A", "INTEGER"], ["d", "BOOLEAN"]>>, "D")
add_class(b)
add_attribute("e", "A", "INTEGER")
generate_java_code
subtraction
add_query("c", "INTEGER", <<["B", "INTEGER"]>>, "d")
disjunction
conjunction
numerical_negation
int_value (11)
int_value (30)
int_value (9)
add_query("BOOLEAN", "D", <<["A", "INTEGER"]>>, "D")
type_check
add_attribute("A", "a", "a")
int_value (21)
add_class(b)
add_command("A", "B", <<["a", "INTEGER"], ["b", "BOOLEAN"], ["INTEGER", "D"], ["e", "B"], ["b", "INTEGER"], ["e", "BOOLEAN"]>>)
add_call_chain(<<C>>)
equals
logical_negation
numerical_negation
logical_negation
subtraction
add_command("c", "B", <<["INTEGER", "INTEGER"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["B", "INTEGER"], ["INTEGER", "INTEGER"]>>)
bool_value (true)
logical_negation
logical_negation
add_call_chain(<<e,e,a,b,a,C>>)
add_query("C", "d", <<["B", "INTEGER"], ["d", "D"], ["b", "A"], ["c", "a"]>>, "a")
add_call_chain(<<a,e>>)
int_value (20)
add_call_chain(<<A,D,A>>)
equals
add_call_chain(<<INTEGER,a,A,B>>)
add_attribute("b", "INTEGER", "INTEGER")
logical_negation
add_attribute("A", "D", "INTEGER")
add_attribute("BOOLEAN", "C", "BOOLEAN")
logical_negation
disjunction
numerical_negation
bool_value (false)
add_call_chain(<<D,d>>)
add_call_chain(<<INTEGER,c,B,A,d,B,b,INTEGER,B>>)
numerical_negation
add_command("B", "a", <<["D", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "b"]>>)
add_query("B", "b", <<["C", "D"], ["a", "C"]>>, "BOOLEAN")
add_query("INTEGER", "a", <<["d", "BOOLEAN"], ["D", "d"], ["INTEGER", "INTEGER"], ["BOOLEAN", "C"], ["A", "d"], ["d", "BOOLEAN"], ["D", "INTEGER"], ["C", "INTEGER"], ["a", "BOOLEAN"]>>, "D")
generate_java_code
add_command("D", "D", <<["B", "INTEGER"], ["c", "BOOLEAN"], ["D", "BOOLEAN"]>>)
type_check
add_call_chain(<<c,e,INTEGER,b,b,A,e>>)
add_command("B", "A", <<["b", "B"], ["B", "INTEGER"], ["c", "BOOLEAN"], ["B", "e"], ["b", "BOOLEAN"], ["e", "e"], ["d", "BOOLEAN"]>>)
add_attribute("A", "A", "BOOLEAN")
greater_than
numerical_negation
add_call_chain(<<c,d>>)
generate_java_code
add_call_chain(<<e,a,e,INTEGER,BOOLEAN>>)
add_query("d", "B", <<["b", "BOOLEAN"], ["e", "INTEGER"], ["INTEGER", "INTEGER"], ["c", "INTEGER"], ["e", "b"]>>, "a")
add_call_chain(<<INTEGER,BOOLEAN,B,c>>)
numerical_negation
add_class(d)
add_query("b", "B", <<["e", "BOOLEAN"], ["e", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "B"], ["INTEGER", "BOOLEAN"], ["d", "BOOLEAN"], ["b", "INTEGER"], ["c", "INTEGER"]>>, "B")
int_value (26)
