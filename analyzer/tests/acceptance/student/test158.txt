numerical_negation
generate_java_code
bool_value (false)
numerical_negation
addition
add_attribute("e", "D", "INTEGER")
bool_value (false)
greater_than
less_than
generate_java_code
bool_value (false)
bool_value (true)
type_check
greater_than
add_query("B", "a", <<["a", "C"], ["c", "BOOLEAN"], ["A", "b"]>>, "b")
add_call_chain(<<A,D,D>>)
add_call_chain(<<c,e,C>>)
add_call_chain(<<b,A,D,d,e>>)
generate_java_code
type_check
int_value (25)
numerical_negation
bool_value (true)
type_check
int_value (22)
type_check
add_query("c", "b", <<["C", "D"], ["b", "B"], ["C", "BOOLEAN"], ["B", "BOOLEAN"]>>, "c")
disjunction
numerical_negation
greater_than
add_attribute("e", "b", "b")
int_value (24)
numerical_negation
conjunction
generate_java_code
add_call_chain(<<d,c,B,A,d,B,D,C,C>>)
add_attribute("a", "d", "BOOLEAN")
add_call_chain(<<C,b>>)
conjunction
add_call_chain(<<e,C,C,b>>)
add_call_chain(<<A,e>>)
add_call_chain(<<B,e,A,e,C,a,e,a,c>>)
conjunction
logical_negation
add_command("A", "B", <<["B", "A"], ["C", "INTEGER"], ["e", "BOOLEAN"], ["d", "b"], ["B", "C"], ["B", "B"], ["BOOLEAN", "BOOLEAN"]>>)
add_query("b", "D", <<["d", "BOOLEAN"]>>, "b")
add_command("B", "C", <<["D", "INTEGER"], ["D", "BOOLEAN"], ["e", "C"], ["A", "INTEGER"], ["A", "D"], ["A", "c"]>>)
add_call_chain(<<B,A,C>>)
add_command("C", "D", <<["a", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "BOOLEAN"], ["BOOLEAN", "c"], ["c", "BOOLEAN"]>>)
logical_negation
numerical_negation
quotient
int_value (22)
add_call_chain(<<d,e,e,A>>)
bool_value (false)
logical_negation
conjunction
add_call_chain(<<BOOLEAN,B>>)
multiplication
logical_negation
add_attribute("C", "C", "BOOLEAN")
int_value (24)
disjunction
add_attribute("D", "D", "e")
type_check
int_value (7)
add_query("C", "BOOLEAN", <<["D", "BOOLEAN"], ["c", "D"], ["D", "BOOLEAN"]>>, "b")
add_command("C", "C", <<["B", "INTEGER"], ["c", "a"], ["b", "BOOLEAN"], ["c", "INTEGER"], ["a", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "INTEGER"]>>)
add_command("b", "B", <<["a", "INTEGER"], ["d", "b"], ["B", "e"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["c", "INTEGER"], ["INTEGER", "INTEGER"]>>)
type_check
add_call_chain(<<c,d,C,b,A,e,BOOLEAN,A>>)
add_query("BOOLEAN", "c", <<["INTEGER", "BOOLEAN"], ["A", "INTEGER"], ["e", "A"], ["B", "INTEGER"], ["b", "INTEGER"], ["A", "b"], ["d", "BOOLEAN"]>>, "e")
numerical_negation
bool_value (false)
add_query("c", "B", <<["b", "INTEGER"], ["D", "INTEGER"], ["e", "INTEGER"], ["INTEGER", "INTEGER"]>>, "b")
add_class(C)
add_attribute("a", "d", "e")
add_query("c", "INTEGER", <<["b", "BOOLEAN"], ["a", "INTEGER"], ["c", "D"]>>, "e")
bool_value (true)
add_class(C)
add_command("D", "BOOLEAN", <<["c", "BOOLEAN"], ["INTEGER", "B"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["C", "BOOLEAN"]>>)
int_value (9)
numerical_negation
add_query("C", "e", <<["A", "INTEGER"], ["a", "BOOLEAN"]>>, "c")
int_value (10)
logical_negation
numerical_negation
add_call_chain(<<d,d>>)
int_value (5)
bool_value (false)
add_call_chain(<<B,B,B,A,d,e,a>>)
add_query("c", "BOOLEAN", <<["c", "A"]>>, "d")
numerical_negation
numerical_negation
logical_negation
add_call_chain(<<b>>)
disjunction
bool_value (false)
add_call_chain(<<b,C,C>>)
add_command("e", "C", <<["B", "INTEGER"], ["D", "BOOLEAN"], ["a", "a"], ["a", "INTEGER"]>>)
add_call_chain(<<C,B,A,D,e,A>>)
addition
add_call_chain(<<A,C,e,e,D,BOOLEAN,a,B,C>>)
add_query("BOOLEAN", "c", <<["c", "BOOLEAN"], ["c", "c"]>>, "D")
type_check
add_command("INTEGER", "d", <<["d", "INTEGER"], ["e", "BOOLEAN"]>>)
int_value (3)
modulo
add_command("C", "C", <<["b", "INTEGER"], ["INTEGER", "BOOLEAN"], ["B", "e"], ["A", "c"], ["e", "INTEGER"], ["B", "INTEGER"]>>)
add_query("B", "b", <<["B", "BOOLEAN"], ["a", "C"], ["e", "BOOLEAN"], ["B", "INTEGER"], ["B", "a"], ["B", "INTEGER"], ["C", "INTEGER"], ["A", "B"], ["B", "BOOLEAN"]>>, "a")
type_check
add_class(INTEGER)
bool_value (false)
logical_negation
add_query("B", "A", <<["B", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "INTEGER"], ["BOOLEAN", "INTEGER"], ["BOOLEAN", "INTEGER"], ["e", "INTEGER"]>>, "e")
bool_value (true)
add_command("C", "a", <<["D", "C"], ["c", "D"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "c"], ["B", "d"], ["A", "INTEGER"]>>)
logical_negation
add_attribute("A", "d", "b")
type_check
conjunction
generate_java_code
add_query("b", "INTEGER", <<["C", "d"], ["C", "INTEGER"], ["a", "BOOLEAN"], ["D", "b"]>>, "b")
add_call_chain(<<D,B,A,c,c,a,a>>)
bool_value (true)
add_query("b", "b", <<["D", "INTEGER"], ["A", "INTEGER"], ["c", "INTEGER"], ["INTEGER", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["C", "b"], ["D", "INTEGER"]>>, "INTEGER")
bool_value (true)
bool_value (false)
add_command("d", "e", <<["d", "C"], ["C", "e"], ["e", "INTEGER"], ["D", "BOOLEAN"], ["c", "B"], ["e", "BOOLEAN"], ["a", "INTEGER"], ["e", "INTEGER"], ["e", "BOOLEAN"]>>)
add_command("A", "INTEGER", <<["B", "BOOLEAN"], ["e", "INTEGER"], ["C", "d"]>>)
add_command("INTEGER", "C", <<["B", "INTEGER"], ["BOOLEAN", "A"], ["a", "INTEGER"], ["B", "INTEGER"]>>)
add_query("A", "e", <<["d", "BOOLEAN"], ["B", "INTEGER"], ["a", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["b", "INTEGER"], ["D", "a"]>>, "D")
add_attribute("b", "C", "INTEGER")
add_command("a", "a", <<["b", "C"], ["B", "BOOLEAN"], ["D", "INTEGER"], ["a", "C"], ["a", "A"], ["D", "BOOLEAN"], ["BOOLEAN", "e"], ["b", "INTEGER"]>>)
numerical_negation
equals
int_value (40)
int_value (38)
logical_negation
less_than
logical_negation
bool_value (true)
generate_java_code
logical_negation
add_command("d", "c", <<["e", "INTEGER"], ["b", "BOOLEAN"], ["e", "d"], ["b", "INTEGER"], ["a", "C"]>>)
int_value (13)
addition
add_query("d", "e", <<["a", "INTEGER"], ["c", "A"], ["c", "BOOLEAN"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["A", "B"], ["b", "A"], ["b", "INTEGER"], ["b", "BOOLEAN"]>>, "C")
add_query("C", "D", <<["C", "BOOLEAN"]>>, "c")
less_than
less_than
bool_value (true)
add_query("B", "A", <<["c", "d"]>>, "e")
add_attribute("e", "C", "e")
int_value (44)
disjunction
generate_java_code
add_class(D)
type_check
bool_value (true)
add_class(A)
add_command("a", "D", <<["BOOLEAN", "a"], ["a", "D"], ["c", "B"], ["BOOLEAN", "C"], ["b", "INTEGER"]>>)
bool_value (false)
bool_value (false)
disjunction
add_call_chain(<<D,b,b,e,C,a>>)
numerical_negation
add_call_chain(<<A,e,b,e>>)
add_query("d", "B", <<["e", "BOOLEAN"], ["C", "e"], ["a", "c"], ["e", "INTEGER"], ["INTEGER", "C"], ["c", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "INTEGER"]>>, "a")
add_call_chain(<<A,D,D,B>>)
type_check
add_attribute("e", "A", "INTEGER")
type_check
bool_value (true)
add_attribute("INTEGER", "C", "a")
bool_value (false)
bool_value (false)
bool_value (false)
add_command("c", "A", <<["a", "BOOLEAN"], ["A", "INTEGER"], ["a", "INTEGER"], ["a", "D"], ["A", "INTEGER"], ["A", "BOOLEAN"]>>)
generate_java_code
conjunction
int_value (46)
int_value (22)
add_query("A", "d", <<["D", "BOOLEAN"], ["D", "INTEGER"], ["A", "INTEGER"], ["e", "c"], ["c", "INTEGER"], ["D", "a"]>>, "b")
conjunction
add_command("B", "d", <<["A", "INTEGER"], ["b", "d"], ["D", "e"], ["B", "INTEGER"], ["d", "c"], ["B", "D"], ["e", "A"]>>)
add_query("B", "B", <<["B", "BOOLEAN"], ["D", "BOOLEAN"], ["BOOLEAN", "A"], ["c", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["A", "INTEGER"]>>, "d")
add_query("A", "A", <<["INTEGER", "B"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["D", "e"], ["A", "INTEGER"], ["INTEGER", "C"], ["d", "BOOLEAN"], ["C", "INTEGER"]>>, "B")
equals
generate_java_code
add_call_chain(<<b,b,d,D,b>>)
logical_negation
numerical_negation
conjunction
conjunction
int_value (41)
bool_value (false)
addition
add_query("C", "B", <<["A", "BOOLEAN"], ["A", "INTEGER"], ["B", "INTEGER"], ["c", "B"], ["A", "B"], ["A", "INTEGER"], ["D", "INTEGER"]>>, "e")
equals
add_call_chain(<<B,c,B,D>>)
add_class(b)
type_check
bool_value (true)
generate_java_code
bool_value (false)
add_attribute("b", "b", "INTEGER")
subtraction
logical_negation
add_command("b", "D", <<["A", "INTEGER"], ["c", "INTEGER"], ["a", "INTEGER"], ["C", "INTEGER"]>>)
add_command("D", "C", <<["C", "C"], ["a", "INTEGER"], ["c", "d"], ["b", "B"], ["A", "B"], ["B", "INTEGER"]>>)
add_class(e)
type_check
logical_negation
add_query("D", "B", <<["e", "INTEGER"], ["BOOLEAN", "INTEGER"], ["c", "BOOLEAN"], ["C", "c"], ["C", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["C", "INTEGER"]>>, "e")
add_call_chain(<<b,INTEGER,c,INTEGER,a,e,A>>)
add_call_chain(<<d,d,A,C>>)
add_command("e", "INTEGER", <<["C", "INTEGER"], ["a", "BOOLEAN"], ["D", "C"]>>)
bool_value (false)
add_query("b", "BOOLEAN", <<["A", "BOOLEAN"], ["BOOLEAN", "e"], ["BOOLEAN", "D"], ["a", "BOOLEAN"], ["D", "BOOLEAN"]>>, "D")
add_class(a)
greater_than
numerical_negation
add_query("C", "B", <<["b", "D"], ["BOOLEAN", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "INTEGER"], ["e", "INTEGER"], ["C", "BOOLEAN"], ["e", "BOOLEAN"]>>, "B")
type_check
greater_than
multiplication
add_call_chain(<<BOOLEAN,INTEGER,d,b,C,a,D>>)
type_check
disjunction
add_attribute("A", "b", "INTEGER")
add_call_chain(<<b,B,c,A,e,INTEGER,a,e,a>>)
less_than
add_command("b", "A", <<["C", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "INTEGER"], ["b", "INTEGER"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["B", "BOOLEAN"]>>)
int_value (32)
int_value (47)
add_call_chain(<<A,e,INTEGER>>)
add_call_chain(<<b,D,a,C,A,a,INTEGER,d,a>>)
add_call_chain(<<a,C,e,B,A,c,C,C,c>>)
add_attribute("d", "B", "BOOLEAN")
