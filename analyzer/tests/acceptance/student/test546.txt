add_attribute("A", "A", "BOOLEAN")
add_call_chain(<<d>>)
add_call_chain(<<D,C,b,INTEGER,C>>)
logical_negation
generate_java_code
numerical_negation
add_call_chain(<<A,C,D,b,A,b,d,d>>)
add_call_chain(<<b,a,A,A,d,a,b>>)
greater_than
add_query("C", "c", <<["B", "c"], ["BOOLEAN", "b"], ["d", "d"], ["B", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "INTEGER"], ["a", "B"]>>, "d")
add_attribute("B", "D", "INTEGER")
multiplication
numerical_negation
bool_value (true)
int_value (42)
add_class(INTEGER)
add_attribute("e", "B", "BOOLEAN")
int_value (47)
numerical_negation
numerical_negation
numerical_negation
numerical_negation
equals
add_call_chain(<<D,A,a,d,e,A,C,A>>)
add_command("c", "B", <<["d", "INTEGER"], ["d", "BOOLEAN"], ["b", "BOOLEAN"]>>)
add_attribute("B", "INTEGER", "d")
generate_java_code
add_query("INTEGER", "c", <<["a", "INTEGER"], ["A", "C"], ["A", "INTEGER"], ["D", "BOOLEAN"]>>, "A")
add_attribute("C", "A", "B")
add_call_chain(<<d>>)
add_attribute("C", "a", "D")
add_call_chain(<<BOOLEAN,b,C,d,B,D,BOOLEAN>>)
type_check
bool_value (false)
add_call_chain(<<INTEGER>>)
int_value (35)
add_call_chain(<<D,C,a,a,A,e,a,c>>)
multiplication
add_attribute("B", "e", "BOOLEAN")
add_command("c", "B", <<["e", "INTEGER"], ["e", "INTEGER"]>>)
add_call_chain(<<D>>)
logical_negation
equals
bool_value (false)
add_call_chain(<<A,C>>)
modulo
add_attribute("c", "D", "BOOLEAN")
numerical_negation
generate_java_code
add_query("INTEGER", "e", <<["C", "BOOLEAN"], ["C", "BOOLEAN"]>>, "C")
numerical_negation
add_call_chain(<<b,D,a,C,b,D>>)
add_attribute("B", "A", "BOOLEAN")
add_call_chain(<<a,B>>)
generate_java_code
bool_value (false)
add_call_chain(<<A,A,d,A,b,a,b>>)
int_value (9)
generate_java_code
conjunction
add_command("d", "INTEGER", <<["INTEGER", "D"], ["d", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "d"]>>)
add_attribute("e", "b", "e")
add_command("e", "c", <<["INTEGER", "INTEGER"], ["D", "BOOLEAN"], ["c", "B"], ["a", "BOOLEAN"], ["b", "BOOLEAN"], ["INTEGER", "INTEGER"], ["B", "B"], ["e", "INTEGER"], ["c", "INTEGER"]>>)
generate_java_code
add_command("B", "D", <<["A", "BOOLEAN"], ["e", "INTEGER"], ["a", "INTEGER"], ["c", "INTEGER"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["e", "a"], ["INTEGER", "INTEGER"], ["A", "BOOLEAN"]>>)
bool_value (false)
numerical_negation
greater_than
addition
bool_value (false)
numerical_negation
int_value (10)
disjunction
add_class(D)
add_call_chain(<<d,b,INTEGER,C,BOOLEAN,C,d,D,b>>)
add_class(C)
add_class(D)
bool_value (false)
add_attribute("c", "D", "INTEGER")
conjunction
int_value (25)
add_attribute("INTEGER", "d", "INTEGER")
add_call_chain(<<A,b,C,c,C>>)
bool_value (true)
numerical_negation
numerical_negation
add_attribute("a", "B", "INTEGER")
add_call_chain(<<A>>)
add_command("D", "c", <<["b", "INTEGER"], ["INTEGER", "BOOLEAN"], ["D", "INTEGER"], ["e", "BOOLEAN"]>>)
add_query("a", "C", <<["A", "INTEGER"], ["B", "BOOLEAN"], ["e", "INTEGER"], ["b", "c"], ["c", "INTEGER"], ["a", "A"]>>, "B")
generate_java_code
subtraction
numerical_negation
add_query("C", "d", <<["A", "INTEGER"], ["C", "D"], ["INTEGER", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["C", "BOOLEAN"], ["INTEGER", "INTEGER"], ["A", "INTEGER"], ["B", "INTEGER"]>>, "B")
add_attribute("C", "b", "BOOLEAN")
int_value (38)
int_value (9)
generate_java_code
int_value (15)
add_query("D", "A", <<["B", "INTEGER"]>>, "c")
add_query("c", "A", <<["B", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "e"], ["INTEGER", "B"], ["B", "b"], ["D", "C"]>>, "d")
modulo
int_value (14)
add_call_chain(<<BOOLEAN,B,C,b,d,INTEGER,BOOLEAN>>)
numerical_negation
bool_value (true)
type_check
quotient
int_value (21)
logical_negation
add_command("A", "c", <<["BOOLEAN", "INTEGER"], ["A", "BOOLEAN"], ["A", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["B", "A"]>>)
add_command("C", "BOOLEAN", <<["C", "d"]>>)
generate_java_code
add_class(d)
bool_value (false)
add_call_chain(<<b,c,C,d,c,A>>)
add_query("a", "d", <<["d", "C"], ["a", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "BOOLEAN"], ["a", "C"], ["B", "a"], ["A", "INTEGER"]>>, "BOOLEAN")
disjunction
logical_negation
generate_java_code
add_attribute("C", "D", "INTEGER")
add_command("C", "a", <<["B", "c"], ["A", "INTEGER"], ["A", "INTEGER"], ["A", "BOOLEAN"]>>)
bool_value (true)
add_attribute("d", "INTEGER", "a")
bool_value (false)
add_attribute("c", "D", "c")
add_query("e", "B", <<["A", "a"], ["e", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "b"]>>, "e")
int_value (3)
numerical_negation
numerical_negation
generate_java_code
numerical_negation
add_command("C", "BOOLEAN", <<["B", "BOOLEAN"], ["d", "d"], ["B", "BOOLEAN"]>>)
add_attribute("e", "b", "C")
less_than
bool_value (true)
type_check
add_call_chain(<<B,A,a,C,INTEGER,C,c>>)
add_attribute("c", "c", "BOOLEAN")
add_command("B", "A", <<["C", "INTEGER"], ["INTEGER", "C"], ["d", "e"], ["c", "d"]>>)
add_class(A)
logical_negation
add_command("c", "b", <<["b", "C"], ["C", "e"], ["BOOLEAN", "BOOLEAN"], ["INTEGER", "C"], ["C", "INTEGER"], ["e", "INTEGER"]>>)
add_call_chain(<<D,A,e,e,a,C,d>>)
add_attribute("C", "a", "INTEGER")
numerical_negation
int_value (10)
add_query("A", "b", <<["A", "BOOLEAN"]>>, "a")
logical_negation
add_query("a", "a", <<["INTEGER", "BOOLEAN"], ["c", "INTEGER"], ["C", "d"], ["c", "e"]>>, "C")
add_call_chain(<<D,C,c,b,d,C,INTEGER,c>>)
disjunction
int_value (22)
bool_value (true)
add_attribute("B", "a", "d")
greater_than
type_check
int_value (29)
generate_java_code
int_value (33)
add_command("e", "d", <<["a", "INTEGER"], ["B", "BOOLEAN"], ["D", "C"], ["a", "INTEGER"]>>)
logical_negation
add_query("b", "B", <<["b", "A"]>>, "a")
add_command("C", "c", <<["c", "BOOLEAN"]>>)
int_value (6)
add_attribute("C", "BOOLEAN", "INTEGER")
quotient
add_call_chain(<<a,b,b,d,BOOLEAN,D,A,A>>)
add_command("C", "A", <<["d", "INTEGER"], ["b", "b"], ["d", "BOOLEAN"], ["c", "BOOLEAN"], ["INTEGER", "INTEGER"], ["a", "b"], ["A", "d"], ["C", "BOOLEAN"]>>)
add_call_chain(<<e,c,e>>)
add_command("D", "D", <<["B", "b"], ["e", "BOOLEAN"], ["D", "INTEGER"]>>)
add_attribute("d", "C", "BOOLEAN")
logical_negation
add_command("b", "B", <<["A", "BOOLEAN"], ["D", "BOOLEAN"], ["a", "INTEGER"]>>)
add_call_chain(<<B,e,a,C>>)
add_attribute("A", "b", "INTEGER")
generate_java_code
logical_negation
add_command("c", "a", <<["A", "BOOLEAN"]>>)
generate_java_code
add_call_chain(<<A>>)
numerical_negation
bool_value (false)
numerical_negation
add_class(D)
add_command("a", "B", <<["e", "b"], ["B", "INTEGER"], ["d", "INTEGER"], ["B", "INTEGER"]>>)
logical_negation
numerical_negation
add_query("D", "B", <<["B", "A"], ["b", "e"], ["c", "INTEGER"], ["D", "b"], ["d", "INTEGER"], ["e", "C"], ["INTEGER", "B"], ["A", "INTEGER"], ["C", "d"]>>, "D")
add_query("B", "D", <<["d", "INTEGER"], ["b", "INTEGER"], ["D", "BOOLEAN"], ["e", "c"], ["d", "BOOLEAN"], ["d", "INTEGER"], ["d", "INTEGER"], ["A", "BOOLEAN"]>>, "a")
type_check
add_class(d)
add_attribute("D", "b", "INTEGER")
add_class(C)
int_value (1)
add_query("BOOLEAN", "b", <<["C", "b"], ["c", "C"], ["BOOLEAN", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["a", "INTEGER"], ["c", "e"], ["A", "INTEGER"], ["a", "BOOLEAN"], ["C", "D"]>>, "d")
add_command("a", "A", <<["b", "INTEGER"]>>)
bool_value (false)
generate_java_code
add_query("C", "C", <<["A", "INTEGER"]>>, "C")
bool_value (false)
type_check
generate_java_code
addition
logical_negation
add_query("e", "D", <<["INTEGER", "C"]>>, "e")
logical_negation
add_attribute("A", "c", "BOOLEAN")
add_query("d", "C", <<["a", "BOOLEAN"], ["c", "INTEGER"], ["A", "a"], ["A", "INTEGER"], ["a", "BOOLEAN"], ["e", "INTEGER"]>>, "c")
logical_negation
add_attribute("A", "C", "D")
type_check
add_call_chain(<<a,d,D,D,B,e>>)
add_query("e", "D", <<["INTEGER", "A"], ["e", "INTEGER"], ["C", "INTEGER"], ["a", "b"], ["c", "BOOLEAN"]>>, "B")
add_call_chain(<<e,A,D,A,C,d>>)
add_command("C", "c", <<["A", "BOOLEAN"]>>)
bool_value (true)
add_class(c)
generate_java_code
generate_java_code
add_class(A)
add_query("c", "C", <<["INTEGER", "BOOLEAN"], ["a", "c"], ["C", "INTEGER"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["D", "INTEGER"]>>, "A")
int_value (5)
add_query("B", "A", <<["D", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["D", "BOOLEAN"]>>, "C")
add_call_chain(<<b,d,d,D,c,BOOLEAN,e,e>>)
quotient
logical_negation
conjunction
add_query("D", "INTEGER", <<["b", "INTEGER"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "INTEGER"], ["B", "INTEGER"], ["e", "D"], ["C", "INTEGER"]>>, "c")
numerical_negation
int_value (36)
