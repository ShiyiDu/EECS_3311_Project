bool_value (true)
numerical_negation
greater_than
int_value (26)
add_command("d", "A", <<["A", "INTEGER"], ["BOOLEAN", "INTEGER"], ["A", "BOOLEAN"], ["C", "d"]>>)
logical_negation
bool_value (false)
numerical_negation
add_command("D", "D", <<["B", "BOOLEAN"], ["c", "BOOLEAN"], ["b", "INTEGER"]>>)
add_call_chain(<<C,e,INTEGER,BOOLEAN>>)
modulo
add_class(D)
add_attribute("C", "D", "INTEGER")
bool_value (true)
logical_negation
add_class(D)
bool_value (true)
numerical_negation
int_value (26)
int_value (6)
generate_java_code
add_attribute("INTEGER", "C", "B")
type_check
logical_negation
logical_negation
conjunction
conjunction
add_class(C)
add_call_chain(<<B,D,b,b,INTEGER,c,INTEGER,d,a>>)
add_call_chain(<<c,a,B,C,INTEGER,C>>)
add_command("C", "d", <<["d", "INTEGER"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["c", "INTEGER"], ["A", "e"], ["A", "INTEGER"], ["a", "BOOLEAN"]>>)
bool_value (true)
add_call_chain(<<c,D,b,b,c>>)
bool_value (false)
add_call_chain(<<a,c,b,B>>)
add_command("C", "d", <<["d", "BOOLEAN"], ["e", "BOOLEAN"]>>)
add_attribute("D", "A", "a")
add_call_chain(<<D,d>>)
add_call_chain(<<b,d,C,INTEGER,a>>)
add_query("A", "c", <<["a", "INTEGER"], ["A", "d"]>>, "e")
add_attribute("e", "C", "e")
add_attribute("e", "D", "BOOLEAN")
int_value (28)
generate_java_code
type_check
equals
bool_value (true)
type_check
add_call_chain(<<D>>)
type_check
less_than
less_than
logical_negation
int_value (47)
modulo
add_call_chain(<<D,d,B,b,C>>)
type_check
add_call_chain(<<B,c,INTEGER,D,B,D,INTEGER,BOOLEAN>>)
numerical_negation
bool_value (false)
type_check
int_value (7)
add_call_chain(<<BOOLEAN,BOOLEAN,A,A,c,b,BOOLEAN>>)
bool_value (true)
add_command("C", "c", <<["b", "A"], ["B", "B"], ["a", "C"], ["d", "INTEGER"], ["D", "INTEGER"]>>)
add_call_chain(<<BOOLEAN,b,e,b,d>>)
int_value (38)
add_class(C)
numerical_negation
add_call_chain(<<A,c>>)
add_attribute("a", "d", "BOOLEAN")
logical_negation
numerical_negation
add_class(BOOLEAN)
int_value (40)
add_call_chain(<<a,A,C>>)
int_value (23)
int_value (22)
numerical_negation
logical_negation
add_attribute("BOOLEAN", "c", "BOOLEAN")
logical_negation
add_call_chain(<<A,d,b,D,e,BOOLEAN,C,d>>)
generate_java_code
add_query("a", "D", <<["d", "BOOLEAN"], ["D", "BOOLEAN"]>>, "INTEGER")
int_value (15)
add_call_chain(<<D,e,B,D>>)
bool_value (true)
quotient
numerical_negation
add_query("d", "A", <<["C", "INTEGER"]>>, "A")
add_call_chain(<<C,B,D,D,A,BOOLEAN,B>>)
add_command("A", "BOOLEAN", <<["B", "b"], ["C", "a"], ["c", "D"], ["D", "INTEGER"], ["b", "c"], ["BOOLEAN", "INTEGER"], ["c", "INTEGER"], ["e", "a"]>>)
add_query("b", "BOOLEAN", <<["a", "B"], ["d", "BOOLEAN"]>>, "B")
int_value (5)
less_than
type_check
add_class(A)
bool_value (false)
int_value (45)
generate_java_code
conjunction
add_attribute("b", "b", "B")
add_call_chain(<<INTEGER,b,C,A,a,e,a>>)
add_query("c", "C", <<["b", "C"], ["e", "INTEGER"], ["c", "INTEGER"], ["B", "INTEGER"], ["e", "INTEGER"], ["a", "BOOLEAN"], ["a", "INTEGER"]>>, "BOOLEAN")
int_value (36)
logical_negation
int_value (13)
add_call_chain(<<d,D,d,c,C,b,D,d>>)
generate_java_code
add_query("d", "c", <<["b", "BOOLEAN"], ["C", "INTEGER"]>>, "d")
add_attribute("C", "D", "INTEGER")
disjunction
quotient
int_value (31)
type_check
type_check
add_attribute("D", "b", "BOOLEAN")
add_call_chain(<<C,c,BOOLEAN,INTEGER,a,e,A>>)
int_value (8)
numerical_negation
greater_than
add_call_chain(<<e,B,a,c,d,a,B,d>>)
int_value (38)
numerical_negation
int_value (14)
less_than
logical_negation
subtraction
add_call_chain(<<INTEGER,e,BOOLEAN>>)
add_call_chain(<<C,b,C>>)
bool_value (false)
add_command("a", "B", <<["b", "BOOLEAN"], ["a", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["d", "INTEGER"], ["e", "BOOLEAN"]>>)
int_value (24)
add_attribute("C", "b", "INTEGER")
logical_negation
add_call_chain(<<INTEGER,a,INTEGER,D,C>>)
add_command("a", "d", <<["b", "INTEGER"], ["B", "INTEGER"]>>)
numerical_negation
add_class(D)
add_attribute("a", "b", "INTEGER")
add_call_chain(<<INTEGER,C,INTEGER,b,INTEGER,A,b,d,B>>)
add_call_chain(<<d,D,INTEGER,A,e,D,c>>)
generate_java_code
int_value (47)
logical_negation
add_call_chain(<<d,BOOLEAN,B,d,c,D,B,C,a>>)
add_command("A", "c", <<["BOOLEAN", "d"], ["B", "A"], ["c", "INTEGER"], ["D", "B"], ["e", "BOOLEAN"], ["e", "INTEGER"], ["B", "INTEGER"]>>)
int_value (27)
add_call_chain(<<C,e,a,c,A,c,C,e,D>>)
bool_value (true)
equals
type_check
disjunction
bool_value (true)
bool_value (true)
logical_negation
type_check
logical_negation
int_value (31)
add_attribute("C", "d", "BOOLEAN")
type_check
add_query("c", "D", <<["B", "D"]>>, "e")
less_than
bool_value (true)
add_command("A", "D", <<["A", "INTEGER"], ["e", "INTEGER"], ["C", "A"], ["INTEGER", "INTEGER"], ["e", "BOOLEAN"]>>)
modulo
generate_java_code
add_call_chain(<<e,D,A,a,B,INTEGER,D>>)
int_value (39)
add_query("INTEGER", "a", <<["a", "BOOLEAN"]>>, "D")
add_attribute("A", "C", "e")
bool_value (true)
bool_value (true)
add_call_chain(<<A,D,D,d,INTEGER,d,a>>)
bool_value (true)
multiplication
generate_java_code
add_query("e", "b", <<["A", "e"], ["A", "BOOLEAN"], ["e", "INTEGER"], ["c", "INTEGER"], ["B", "B"], ["D", "INTEGER"], ["d", "D"], ["c", "e"], ["c", "C"]>>, "a")
logical_negation
add_attribute("e", "D", "BOOLEAN")
greater_than
add_call_chain(<<d>>)
logical_negation
logical_negation
add_call_chain(<<C,C,d,B,A,B,d>>)
generate_java_code
add_query("d", "b", <<["b", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "INTEGER"], ["B", "B"], ["e", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "BOOLEAN"]>>, "d")
add_call_chain(<<b,C,C>>)
bool_value (true)
add_call_chain(<<BOOLEAN,d,e>>)
