generate_java_code
int_value (43)
numerical_negation
add_attribute("B", "BOOLEAN", "INTEGER")
numerical_negation
bool_value (true)
type_check
logical_negation
bool_value (false)
disjunction
type_check
add_class(D)
bool_value (true)
logical_negation
add_class(c)
int_value (2)
add_call_chain(<<e,A,BOOLEAN,e,a>>)
add_call_chain(<<e,D,e,BOOLEAN,D,d,a,D>>)
logical_negation
int_value (24)
numerical_negation
add_attribute("B", "B", "B")
add_query("d", "B", <<["B", "BOOLEAN"], ["e", "INTEGER"]>>, "A")
logical_negation
add_call_chain(<<a,c,A,B>>)
disjunction
numerical_negation
disjunction
numerical_negation
addition
add_query("A", "BOOLEAN", <<["A", "B"], ["e", "INTEGER"], ["D", "INTEGER"]>>, "D")
add_attribute("b", "A", "INTEGER")
add_command("a", "C", <<["e", "BOOLEAN"], ["b", "d"], ["a", "A"]>>)
add_command("b", "INTEGER", <<["c", "BOOLEAN"], ["e", "INTEGER"], ["a", "BOOLEAN"], ["e", "INTEGER"], ["C", "a"], ["B", "BOOLEAN"]>>)
add_command("b", "B", <<["e", "BOOLEAN"]>>)
int_value (31)
add_call_chain(<<A,BOOLEAN>>)
int_value (37)
add_command("e", "B", <<["B", "BOOLEAN"], ["b", "b"], ["B", "BOOLEAN"], ["C", "INTEGER"], ["e", "INTEGER"], ["D", "INTEGER"], ["d", "BOOLEAN"], ["d", "A"]>>)
type_check
add_attribute("c", "B", "BOOLEAN")
bool_value (true)
add_attribute("A", "B", "d")
add_query("INTEGER", "c", <<["b", "INTEGER"], ["d", "D"], ["A", "INTEGER"], ["B", "e"], ["e", "d"], ["B", "INTEGER"], ["a", "INTEGER"], ["d", "BOOLEAN"]>>, "a")
bool_value (false)
add_call_chain(<<d,c,INTEGER,D,b,b,A,INTEGER>>)
add_call_chain(<<b,A,B,e,D>>)
numerical_negation
add_command("e", "D", <<["B", "C"]>>)
add_query("D", "a", <<["A", "INTEGER"], ["D", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "INTEGER"], ["C", "INTEGER"], ["A", "INTEGER"], ["e", "INTEGER"]>>, "B")
generate_java_code
numerical_negation
add_call_chain(<<b,INTEGER,BOOLEAN>>)
int_value (30)
add_class(D)
add_command("c", "INTEGER", <<["D", "BOOLEAN"], ["e", "a"], ["b", "B"], ["d", "BOOLEAN"]>>)
type_check
add_query("C", "INTEGER", <<["a", "INTEGER"], ["d", "D"], ["A", "INTEGER"], ["A", "INTEGER"], ["BOOLEAN", "b"]>>, "C")
generate_java_code
add_class(e)
bool_value (false)
logical_negation
logical_negation
int_value (15)
int_value (44)
numerical_negation
add_call_chain(<<D,a>>)
bool_value (false)
generate_java_code
type_check
int_value (3)
logical_negation
add_command("c", "B", <<["a", "INTEGER"]>>)
conjunction
add_call_chain(<<B,D,b,A,e,d,B,BOOLEAN>>)
bool_value (true)
int_value (21)
numerical_negation
equals
add_attribute("C", "B", "B")
add_attribute("d", "e", "c")
add_call_chain(<<a,C,BOOLEAN,C,BOOLEAN,A,C>>)
add_attribute("A", "b", "INTEGER")
disjunction
numerical_negation
logical_negation
add_call_chain(<<e,C,C,b,d>>)
logical_negation
add_attribute("A", "d", "c")
add_attribute("BOOLEAN", "a", "BOOLEAN")
int_value (18)
int_value (32)
add_command("A", "c", <<["C", "D"], ["D", "INTEGER"], ["C", "INTEGER"], ["e", "INTEGER"], ["e", "INTEGER"], ["e", "B"], ["d", "b"], ["B", "BOOLEAN"], ["A", "BOOLEAN"]>>)
int_value (39)
add_query("A", "D", <<["B", "C"], ["D", "B"], ["D", "B"], ["D", "INTEGER"], ["A", "INTEGER"], ["D", "c"], ["C", "BOOLEAN"]>>, "a")
add_class(C)
numerical_negation
int_value (47)
add_call_chain(<<d,a,b,C,b,a,b>>)
logical_negation
greater_than
int_value (20)
add_attribute("A", "INTEGER", "INTEGER")
numerical_negation
add_command("D", "BOOLEAN", <<["A", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "INTEGER"], ["a", "a"], ["a", "d"], ["d", "BOOLEAN"], ["e", "INTEGER"]>>)
add_command("b", "A", <<["D", "D"]>>)
add_call_chain(<<B,A>>)
add_command("C", "e", <<["BOOLEAN", "A"], ["e", "INTEGER"], ["b", "INTEGER"], ["c", "b"]>>)
add_call_chain(<<e,b,BOOLEAN,a,c>>)
int_value (18)
subtraction
addition
logical_negation
add_query("INTEGER", "e", <<["A", "BOOLEAN"], ["b", "e"], ["a", "b"], ["C", "BOOLEAN"], ["d", "INTEGER"]>>, "A")
add_command("BOOLEAN", "b", <<["D", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "BOOLEAN"]>>)
logical_negation
add_attribute("a", "D", "BOOLEAN")
bool_value (false)
add_query("d", "c", <<["BOOLEAN", "BOOLEAN"], ["D", "INTEGER"], ["INTEGER", "INTEGER"], ["d", "INTEGER"], ["B", "INTEGER"], ["A", "e"], ["e", "b"]>>, "b")
generate_java_code
add_call_chain(<<D>>)
add_command("A", "B", <<["BOOLEAN", "A"], ["b", "INTEGER"], ["d", "INTEGER"], ["A", "INTEGER"], ["d", "C"]>>)
add_command("INTEGER", "A", <<["e", "BOOLEAN"], ["c", "BOOLEAN"], ["a", "C"], ["BOOLEAN", "e"], ["c", "BOOLEAN"], ["b", "BOOLEAN"]>>)
add_call_chain(<<b,B,INTEGER,e,C,a,B>>)
add_call_chain(<<d,BOOLEAN,a,C,B,b,C,d>>)
add_attribute("D", "b", "BOOLEAN")
add_call_chain(<<A>>)
type_check
bool_value (false)
add_query("A", "A", <<["C", "INTEGER"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["d", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "BOOLEAN"]>>, "D")
numerical_negation
generate_java_code
add_query("INTEGER", "b", <<["C", "INTEGER"], ["D", "INTEGER"], ["e", "INTEGER"], ["b", "INTEGER"], ["a", "INTEGER"], ["a", "INTEGER"], ["c", "c"]>>, "B")
add_call_chain(<<c,b,A>>)
numerical_negation
type_check
add_command("a", "c", <<["b", "BOOLEAN"], ["INTEGER", "A"], ["A", "INTEGER"], ["e", "INTEGER"], ["C", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "INTEGER"], ["e", "INTEGER"], ["A", "e"]>>)
add_query("e", "A", <<["e", "BOOLEAN"], ["c", "INTEGER"], ["D", "INTEGER"]>>, "b")
numerical_negation
add_query("c", "b", <<["A", "INTEGER"], ["a", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "C"]>>, "c")
add_query("D", "e", <<["A", "BOOLEAN"], ["C", "b"], ["C", "INTEGER"], ["C", "B"], ["c", "INTEGER"], ["a", "BOOLEAN"], ["BOOLEAN", "B"], ["d", "BOOLEAN"], ["A", "INTEGER"]>>, "D")
generate_java_code
add_call_chain(<<b,C,d,d,B>>)
bool_value (true)
numerical_negation
add_call_chain(<<D,B,D>>)
int_value (47)
subtraction
int_value (45)
logical_negation
bool_value (false)
add_call_chain(<<A,e,C,d,C>>)
add_query("C", "B", <<["a", "INTEGER"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["d", "INTEGER"], ["d", "BOOLEAN"], ["D", "INTEGER"], ["INTEGER", "b"]>>, "b")
logical_negation
add_query("c", "e", <<["C", "BOOLEAN"]>>, "b")
add_attribute("d", "D", "BOOLEAN")
add_command("C", "INTEGER", <<["c", "INTEGER"], ["B", "B"]>>)
generate_java_code
logical_negation
bool_value (true)
logical_negation
bool_value (true)
add_command("A", "BOOLEAN", <<["C", "INTEGER"], ["a", "A"]>>)
add_attribute("a", "BOOLEAN", "C")
add_command("A", "c", <<["B", "BOOLEAN"], ["D", "c"], ["D", "e"], ["e", "INTEGER"], ["d", "BOOLEAN"]>>)
add_command("c", "c", <<["c", "BOOLEAN"], ["a", "BOOLEAN"], ["b", "INTEGER"], ["INTEGER", "a"], ["D", "c"], ["A", "D"], ["D", "BOOLEAN"], ["e", "b"], ["A", "e"]>>)
add_call_chain(<<B,C,C,BOOLEAN,A,A,c>>)
add_command("A", "B", <<["B", "c"], ["a", "D"], ["A", "C"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["A", "C"], ["d", "BOOLEAN"], ["c", "BOOLEAN"]>>)
add_call_chain(<<c,A,D,C,BOOLEAN,a>>)
logical_negation
generate_java_code
multiplication
add_query("A", "a", <<["D", "INTEGER"], ["D", "c"], ["D", "INTEGER"], ["BOOLEAN", "INTEGER"], ["A", "b"], ["e", "INTEGER"], ["a", "INTEGER"]>>, "B")
add_command("INTEGER", "B", <<["b", "INTEGER"], ["D", "INTEGER"], ["B", "BOOLEAN"], ["c", "C"], ["B", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["B", "INTEGER"], ["a", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
add_command("b", "e", <<["e", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "INTEGER"], ["a", "B"], ["INTEGER", "C"], ["C", "BOOLEAN"], ["A", "BOOLEAN"]>>)
add_call_chain(<<A,BOOLEAN,e>>)
add_command("A", "c", <<["c", "BOOLEAN"], ["INTEGER", "INTEGER"], ["a", "INTEGER"], ["a", "C"], ["e", "BOOLEAN"], ["C", "A"]>>)
bool_value (true)
type_check
bool_value (true)
add_command("A", "A", <<["D", "INTEGER"], ["d", "b"], ["D", "INTEGER"], ["d", "BOOLEAN"], ["C", "BOOLEAN"], ["BOOLEAN", "A"]>>)
add_call_chain(<<A,A,d,C,B,B,a,BOOLEAN,B>>)
add_command("A", "e", <<["a", "INTEGER"], ["e", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "INTEGER"], ["a", "BOOLEAN"], ["INTEGER", "B"], ["B", "BOOLEAN"]>>)
logical_negation
numerical_negation
add_attribute("D", "D", "BOOLEAN")
numerical_negation
add_call_chain(<<A,a,B,c,A,A,BOOLEAN,d,C>>)
add_call_chain(<<e,b,e>>)
add_call_chain(<<A>>)
disjunction
generate_java_code
add_command("a", "a", <<["c", "C"], ["D", "a"], ["C", "INTEGER"]>>)
add_call_chain(<<e,INTEGER>>)
bool_value (true)
add_attribute("A", "A", "BOOLEAN")
add_call_chain(<<B,A,D,a>>)
add_attribute("A", "C", "D")
add_query("A", "A", <<["A", "d"], ["INTEGER", "a"], ["a", "D"], ["b", "INTEGER"], ["d", "INTEGER"], ["INTEGER", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>, "D")
add_command("C", "BOOLEAN", <<["C", "B"], ["B", "B"]>>)
conjunction
add_call_chain(<<c>>)
bool_value (false)
bool_value (true)
add_query("C", "d", <<["d", "INTEGER"], ["A", "BOOLEAN"], ["B", "A"], ["c", "b"], ["e", "INTEGER"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "d"], ["BOOLEAN", "INTEGER"]>>, "A")
conjunction
add_query("d", "c", <<["A", "INTEGER"], ["b", "BOOLEAN"], ["a", "INTEGER"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["c", "BOOLEAN"]>>, "a")
logical_negation
add_command("a", "A", <<["e", "b"], ["A", "BOOLEAN"], ["b", "INTEGER"], ["c", "BOOLEAN"]>>)
logical_negation
add_class(A)
modulo
type_check
bool_value (false)
add_class(B)
add_command("c", "C", <<["D", "C"], ["D", "INTEGER"], ["B", "INTEGER"], ["a", "INTEGER"], ["b", "BOOLEAN"], ["D", "BOOLEAN"]>>)
subtraction
logical_negation
greater_than
multiplication
add_attribute("C", "D", "D")
add_query("B", "BOOLEAN", <<["b", "INTEGER"], ["C", "B"], ["C", "INTEGER"], ["e", "BOOLEAN"]>>, "B")
add_call_chain(<<B,INTEGER,C,A,BOOLEAN,A,B,B,C>>)
bool_value (false)
add_attribute("INTEGER", "D", "C")
int_value (14)
generate_java_code
logical_negation
subtraction
