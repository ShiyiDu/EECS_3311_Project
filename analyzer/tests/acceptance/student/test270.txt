quotient
add_attribute("A", "B", "BOOLEAN")
add_query("INTEGER", "A", <<["C", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["c", "INTEGER"], ["e", "a"], ["BOOLEAN", "INTEGER"]>>, "C")
add_call_chain(<<a>>)
numerical_negation
generate_java_code
add_call_chain(<<b,C,a,B>>)
add_call_chain(<<C,A,e,A>>)
add_attribute("B", "D", "BOOLEAN")
logical_negation
add_command("C", "d", <<["e", "BOOLEAN"], ["a", "a"], ["b", "INTEGER"]>>)
add_class(D)
generate_java_code
add_class(B)
generate_java_code
add_call_chain(<<D,C,INTEGER,a,a,d>>)
logical_negation
add_attribute("D", "D", "INTEGER")
add_query("d", "C", <<["D", "BOOLEAN"]>>, "e")
int_value (10)
add_class(B)
bool_value (false)
add_query("c", "e", <<["BOOLEAN", "INTEGER"], ["b", "c"], ["e", "BOOLEAN"], ["A", "BOOLEAN"]>>, "d")
numerical_negation
add_attribute("D", "e", "BOOLEAN")
generate_java_code
add_command("D", "BOOLEAN", <<["b", "BOOLEAN"]>>)
add_class(D)
add_class(b)
add_call_chain(<<INTEGER,A,BOOLEAN>>)
add_command("A", "c", <<["D", "b"], ["BOOLEAN", "INTEGER"], ["A", "INTEGER"], ["e", "BOOLEAN"]>>)
add_command("A", "C", <<["a", "INTEGER"], ["b", "INTEGER"], ["A", "c"], ["b", "INTEGER"], ["a", "BOOLEAN"], ["C", "INTEGER"], ["D", "a"], ["D", "INTEGER"]>>)
bool_value (true)
add_call_chain(<<b,B,D,e>>)
int_value (20)
bool_value (false)
logical_negation
add_attribute("d", "b", "BOOLEAN")
add_call_chain(<<b,A,b,B,INTEGER>>)
numerical_negation
add_query("C", "b", <<["e", "BOOLEAN"], ["B", "INTEGER"], ["e", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["INTEGER", "C"], ["BOOLEAN", "INTEGER"]>>, "C")
equals
int_value (46)
subtraction
add_query("BOOLEAN", "c", <<["d", "A"], ["a", "BOOLEAN"], ["b", "INTEGER"], ["D", "INTEGER"], ["d", "INTEGER"], ["B", "INTEGER"], ["C", "BOOLEAN"], ["B", "B"], ["d", "a"]>>, "b")
bool_value (false)
type_check
subtraction
numerical_negation
add_call_chain(<<D,b,C,e,C,C>>)
greater_than
add_call_chain(<<c,a,C,C,e>>)
add_class(e)
equals
int_value (14)
numerical_negation
less_than
add_attribute("INTEGER", "c", "INTEGER")
add_command("BOOLEAN", "a", <<["C", "A"], ["B", "a"], ["a", "BOOLEAN"], ["B", "d"], ["b", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "INTEGER"]>>)
logical_negation
add_command("A", "A", <<["A", "INTEGER"], ["A", "A"], ["c", "BOOLEAN"], ["a", "INTEGER"], ["c", "INTEGER"], ["A", "INTEGER"]>>)
int_value (46)
add_query("c", "A", <<["d", "e"], ["a", "INTEGER"], ["B", "d"], ["C", "BOOLEAN"]>>, "B")
int_value (20)
add_call_chain(<<INTEGER,d,BOOLEAN,a,D>>)
modulo
add_call_chain(<<e,D,b,c,e>>)
type_check
add_query("e", "A", <<["C", "INTEGER"], ["D", "BOOLEAN"], ["D", "BOOLEAN"]>>, "d")
logical_negation
type_check
add_class(b)
add_call_chain(<<D,b,BOOLEAN,b,D,c>>)
bool_value (true)
numerical_negation
add_attribute("c", "a", "C")
equals
add_call_chain(<<d,e,b>>)
bool_value (false)
modulo
logical_negation
add_command("B", "e", <<["d", "INTEGER"], ["a", "BOOLEAN"], ["a", "INTEGER"], ["a", "e"], ["B", "b"], ["c", "BOOLEAN"]>>)
add_command("A", "b", <<["BOOLEAN", "INTEGER"], ["A", "b"], ["e", "INTEGER"], ["a", "d"], ["INTEGER", "INTEGER"], ["INTEGER", "INTEGER"], ["A", "BOOLEAN"]>>)
add_call_chain(<<A,BOOLEAN,e,c,C,c>>)
add_call_chain(<<A,c,a,B,INTEGER,B>>)
add_command("B", "c", <<["e", "BOOLEAN"]>>)
type_check
add_command("BOOLEAN", "a", <<["d", "INTEGER"], ["D", "BOOLEAN"], ["B", "d"], ["e", "C"], ["B", "INTEGER"], ["D", "BOOLEAN"]>>)
add_query("b", "INTEGER", <<["e", "INTEGER"], ["e", "C"], ["B", "INTEGER"]>>, "d")
add_call_chain(<<a,d,A,A,a,A,d,b>>)
add_query("BOOLEAN", "B", <<["a", "BOOLEAN"], ["d", "e"], ["e", "A"], ["C", "INTEGER"], ["c", "BOOLEAN"], ["a", "INTEGER"], ["d", "BOOLEAN"]>>, "e")
add_class(d)
add_call_chain(<<B,C,c,INTEGER,B,c,D,B,d>>)
bool_value (false)
type_check
type_check
add_command("b", "B", <<["c", "BOOLEAN"], ["B", "e"], ["BOOLEAN", "d"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "B"], ["c", "c"], ["B", "C"]>>)
generate_java_code
add_attribute("A", "d", "D")
add_command("D", "D", <<["D", "BOOLEAN"], ["D", "INTEGER"], ["INTEGER", "INTEGER"], ["b", "INTEGER"]>>)
generate_java_code
add_query("BOOLEAN", "e", <<["b", "BOOLEAN"], ["d", "e"], ["d", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "b"], ["b", "BOOLEAN"]>>, "d")
logical_negation
add_call_chain(<<A,A,D,B,D>>)
add_attribute("e", "d", "BOOLEAN")
logical_negation
add_call_chain(<<d,b,c,BOOLEAN,BOOLEAN,A>>)
addition
logical_negation
type_check
add_call_chain(<<A,a>>)
numerical_negation
generate_java_code
add_query("C", "a", <<["BOOLEAN", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["d", "BOOLEAN"]>>, "B")
conjunction
conjunction
add_class(C)
add_attribute("b", "a", "BOOLEAN")
add_query("A", "BOOLEAN", <<["a", "B"], ["BOOLEAN", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "D"], ["D", "A"], ["BOOLEAN", "A"]>>, "C")
add_class(A)
disjunction
type_check
numerical_negation
add_command("INTEGER", "B", <<["e", "INTEGER"], ["B", "BOOLEAN"], ["B", "b"], ["e", "A"], ["e", "c"], ["a", "INTEGER"]>>)
numerical_negation
add_call_chain(<<A,A>>)
logical_negation
add_attribute("e", "B", "BOOLEAN")
numerical_negation
add_attribute("BOOLEAN", "B", "INTEGER")
int_value (40)
add_attribute("A", "e", "BOOLEAN")
add_call_chain(<<d,c,D,e,C,D,B>>)
bool_value (true)
add_query("D", "A", <<["B", "c"], ["b", "INTEGER"]>>, "e")
add_attribute("C", "INTEGER", "a")
bool_value (false)
add_attribute("D", "B", "D")
add_query("d", "b", <<["B", "A"], ["BOOLEAN", "INTEGER"], ["C", "BOOLEAN"], ["d", "e"], ["c", "INTEGER"]>>, "B")
add_attribute("C", "b", "A")
add_call_chain(<<d,c,C>>)
bool_value (false)
add_command("d", "e", <<["B", "INTEGER"], ["A", "d"], ["A", "BOOLEAN"], ["e", "a"]>>)
add_call_chain(<<B,a,D,c,C>>)
add_call_chain(<<A,D,D,B,c>>)
disjunction
add_call_chain(<<a,B>>)
logical_negation
int_value (17)
int_value (1)
add_query("B", "C", <<["d", "d"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "D"], ["B", "INTEGER"], ["a", "INTEGER"], ["a", "INTEGER"], ["A", "BOOLEAN"]>>, "D")
addition
bool_value (true)
subtraction
modulo
add_query("e", "b", <<["e", "BOOLEAN"], ["e", "B"], ["B", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>, "D")
add_command("B", "e", <<["D", "a"], ["e", "INTEGER"], ["D", "B"], ["e", "BOOLEAN"], ["D", "INTEGER"], ["B", "INTEGER"], ["B", "INTEGER"]>>)
add_call_chain(<<d,c,a,A,b,d>>)
greater_than
add_class(c)
numerical_negation
add_attribute("A", "a", "BOOLEAN")
type_check
add_class(c)
add_call_chain(<<c,B,e,A>>)
add_call_chain(<<d,A,A,B,BOOLEAN,A,a,c,INTEGER>>)
add_attribute("C", "c", "C")
add_call_chain(<<C,d>>)
bool_value (false)
add_attribute("D", "b", "INTEGER")
add_call_chain(<<D,e,d,a,D,D,d,a,b>>)
add_command("e", "a", <<["c", "BOOLEAN"], ["c", "A"], ["c", "d"]>>)
add_class(BOOLEAN)
logical_negation
add_command("b", "e", <<["b", "BOOLEAN"], ["B", "INTEGER"]>>)
generate_java_code
add_call_chain(<<b,B,D,A,b,C,D,INTEGER,B>>)
logical_negation
add_call_chain(<<C,B,B,D,A,c,b,B,e>>)
logical_negation
generate_java_code
generate_java_code
logical_negation
add_call_chain(<<b,B,A,a,c,A>>)
bool_value (false)
type_check
logical_negation
add_query("b", "a", <<["c", "BOOLEAN"], ["A", "INTEGER"], ["C", "INTEGER"], ["INTEGER", "BOOLEAN"]>>, "b")
less_than
bool_value (true)
add_attribute("C", "a", "BOOLEAN")
add_call_chain(<<a,c,c,d,BOOLEAN>>)
numerical_negation
generate_java_code
add_attribute("B", "C", "BOOLEAN")
greater_than
addition
add_attribute("BOOLEAN", "B", "INTEGER")
add_class(D)
type_check
add_class(D)
generate_java_code
add_call_chain(<<C,e,b,A>>)
add_call_chain(<<BOOLEAN,c,b,C,BOOLEAN>>)
generate_java_code
add_call_chain(<<d,d,a,BOOLEAN,B,e>>)
add_query("C", "b", <<["B", "B"], ["b", "INTEGER"]>>, "C")
int_value (42)
int_value (4)
equals
numerical_negation
generate_java_code
add_command("BOOLEAN", "D", <<["C", "b"], ["C", "BOOLEAN"]>>)
add_attribute("D", "BOOLEAN", "BOOLEAN")
add_attribute("e", "a", "c")
add_attribute("b", "C", "e")
int_value (41)
logical_negation
