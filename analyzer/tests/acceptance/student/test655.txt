add_call_chain(<<c,C,B>>)
numerical_negation
equals
int_value (41)
add_call_chain(<<BOOLEAN,c>>)
add_command("b", "b", <<["e", "INTEGER"], ["C", "BOOLEAN"], ["D", "BOOLEAN"]>>)
type_check
add_attribute("b", "A", "A")
add_query("INTEGER", "a", <<["B", "INTEGER"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["INTEGER", "b"], ["D", "A"]>>, "A")
type_check
add_call_chain(<<D,a,A,e,c>>)
subtraction
numerical_negation
add_command("a", "e", <<["B", "e"], ["e", "INTEGER"], ["a", "BOOLEAN"], ["e", "b"], ["B", "INTEGER"], ["D", "BOOLEAN"]>>)
add_command("D", "A", <<["b", "B"], ["INTEGER", "BOOLEAN"], ["B", "e"], ["B", "INTEGER"], ["D", "INTEGER"], ["D", "INTEGER"], ["b", "INTEGER"], ["d", "a"]>>)
add_command("b", "b", <<["b", "c"], ["a", "BOOLEAN"], ["d", "INTEGER"], ["c", "INTEGER"], ["a", "a"]>>)
add_class(A)
int_value (5)
type_check
int_value (34)
add_call_chain(<<INTEGER,INTEGER,e,C,B>>)
add_query("e", "C", <<["D", "INTEGER"], ["d", "INTEGER"], ["b", "e"], ["b", "INTEGER"], ["B", "INTEGER"], ["c", "INTEGER"]>>, "BOOLEAN")
add_attribute("B", "e", "BOOLEAN")
add_call_chain(<<d,INTEGER,C,c,C,B,D,b>>)
bool_value (true)
add_command("C", "D", <<["A", "c"], ["D", "INTEGER"]>>)
addition
bool_value (false)
disjunction
bool_value (false)
conjunction
generate_java_code
bool_value (false)
disjunction
add_attribute("C", "D", "INTEGER")
add_attribute("a", "e", "INTEGER")
add_attribute("a", "C", "c")
generate_java_code
type_check
equals
quotient
logical_negation
add_query("C", "B", <<["a", "INTEGER"]>>, "D")
add_query("a", "D", <<["A", "c"]>>, "e")
add_query("c", "c", <<["D", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "INTEGER"], ["B", "BOOLEAN"], ["e", "e"], ["B", "BOOLEAN"], ["e", "INTEGER"], ["c", "A"]>>, "b")
add_attribute("c", "BOOLEAN", "BOOLEAN")
logical_negation
add_attribute("a", "C", "C")
add_command("B", "b", <<["A", "INTEGER"], ["D", "BOOLEAN"], ["c", "e"], ["B", "e"], ["d", "BOOLEAN"], ["B", "a"], ["B", "D"], ["B", "INTEGER"], ["D", "BOOLEAN"]>>)
add_call_chain(<<B,INTEGER,A,BOOLEAN,e>>)
bool_value (false)
type_check
add_command("d", "D", <<["b", "BOOLEAN"], ["c", "C"], ["e", "A"], ["C", "a"], ["b", "INTEGER"], ["d", "INTEGER"]>>)
add_command("B", "C", <<["a", "INTEGER"], ["C", "d"], ["D", "BOOLEAN"]>>)
add_query("a", "D", <<["c", "d"], ["e", "INTEGER"], ["D", "d"], ["B", "INTEGER"]>>, "e")
add_call_chain(<<e,A,a>>)
add_call_chain(<<c,b,e,B,a,B>>)
add_query("C", "e", <<["A", "D"], ["C", "BOOLEAN"], ["d", "INTEGER"], ["D", "INTEGER"], ["B", "D"], ["d", "INTEGER"], ["INTEGER", "BOOLEAN"], ["B", "BOOLEAN"]>>, "a")
add_command("c", "b", <<["INTEGER", "d"]>>)
add_call_chain(<<c,C,d,d,a,B>>)
add_attribute("C", "INTEGER", "BOOLEAN")
numerical_negation
numerical_negation
bool_value (true)
add_command("INTEGER", "BOOLEAN", <<["B", "B"], ["D", "a"], ["b", "d"]>>)
add_command("c", "D", <<["B", "a"]>>)
bool_value (false)
int_value (30)
add_call_chain(<<B,d,c,e>>)
greater_than
add_command("e", "c", <<["C", "INTEGER"], ["INTEGER", "BOOLEAN"], ["e", "c"], ["C", "INTEGER"], ["A", "INTEGER"], ["c", "INTEGER"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["B", "INTEGER"]>>)
add_call_chain(<<b,e,B,c,A,D>>)
type_check
numerical_negation
add_call_chain(<<B,c,D,e>>)
type_check
type_check
logical_negation
subtraction
generate_java_code
add_attribute("D", "D", "C")
add_command("b", "a", <<["INTEGER", "INTEGER"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["B", "INTEGER"], ["B", "d"], ["C", "D"], ["d", "INTEGER"], ["A", "INTEGER"]>>)
int_value (46)
bool_value (false)
add_attribute("D", "A", "BOOLEAN")
add_call_chain(<<D>>)
logical_negation
generate_java_code
logical_negation
disjunction
add_attribute("B", "a", "BOOLEAN")
add_class(D)
add_call_chain(<<INTEGER,e>>)
bool_value (false)
add_command("e", "e", <<["c", "INTEGER"], ["e", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "BOOLEAN"]>>)
numerical_negation
add_attribute("A", "C", "INTEGER")
add_call_chain(<<b,B>>)
add_command("INTEGER", "a", <<["BOOLEAN", "BOOLEAN"]>>)
logical_negation
quotient
quotient
add_attribute("B", "B", "INTEGER")
add_attribute("A", "C", "D")
logical_negation
add_class(b)
add_call_chain(<<D,B,A,B>>)
int_value (2)
add_command("e", "c", <<["BOOLEAN", "INTEGER"], ["B", "BOOLEAN"], ["B", "INTEGER"], ["C", "BOOLEAN"], ["BOOLEAN", "B"]>>)
int_value (8)
add_call_chain(<<c,c,D,B,C,b,A>>)
numerical_negation
add_attribute("c", "INTEGER", "INTEGER")
logical_negation
int_value (8)
add_class(A)
add_call_chain(<<A,C,B,c,C,D,e>>)
add_class(d)
generate_java_code
add_query("C", "b", <<["B", "INTEGER"], ["a", "INTEGER"], ["B", "BOOLEAN"], ["A", "C"], ["C", "B"], ["D", "INTEGER"]>>, "C")
add_class(D)
type_check
bool_value (true)
less_than
numerical_negation
logical_negation
add_class(C)
int_value (33)
generate_java_code
add_command("A", "D", <<["A", "INTEGER"], ["INTEGER", "INTEGER"], ["A", "INTEGER"], ["C", "INTEGER"], ["C", "INTEGER"], ["B", "A"], ["b", "INTEGER"], ["d", "b"]>>)
int_value (17)
add_call_chain(<<BOOLEAN>>)
add_query("C", "b", <<["B", "INTEGER"], ["B", "D"], ["d", "INTEGER"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["d", "BOOLEAN"], ["d", "a"], ["A", "B"]>>, "d")
numerical_negation
add_command("b", "C", <<["c", "INTEGER"], ["b", "INTEGER"], ["d", "BOOLEAN"], ["D", "INTEGER"]>>)
add_call_chain(<<D,c,A,a,e,b,D,A,e>>)
add_attribute("C", "a", "b")
add_query("d", "c", <<["c", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "INTEGER"]>>, "C")
int_value (11)
add_call_chain(<<B,BOOLEAN,a,e,b>>)
add_query("A", "D", <<["d", "INTEGER"], ["d", "BOOLEAN"], ["a", "INTEGER"], ["D", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "C"], ["C", "BOOLEAN"], ["a", "BOOLEAN"]>>, "C")
numerical_negation
less_than
add_attribute("d", "INTEGER", "A")
int_value (26)
conjunction
add_query("B", "a", <<["e", "INTEGER"], ["D", "INTEGER"], ["INTEGER", "INTEGER"], ["e", "INTEGER"], ["B", "BOOLEAN"], ["INTEGER", "C"], ["B", "BOOLEAN"]>>, "B")
numerical_negation
add_command("INTEGER", "C", <<["b", "C"], ["D", "INTEGER"], ["a", "BOOLEAN"], ["d", "INTEGER"], ["BOOLEAN", "INTEGER"], ["a", "BOOLEAN"]>>)
add_call_chain(<<e,c,b,C,e,B,c,a>>)
bool_value (true)
addition
bool_value (true)
addition
int_value (28)
conjunction
add_query("A", "c", <<["A", "INTEGER"], ["d", "BOOLEAN"], ["c", "b"], ["A", "INTEGER"], ["C", "INTEGER"]>>, "b")
subtraction
add_call_chain(<<B,b,e,b,B,C,a,a>>)
add_query("D", "INTEGER", <<["C", "A"], ["a", "BOOLEAN"], ["e", "A"], ["B", "INTEGER"], ["d", "INTEGER"], ["D", "BOOLEAN"], ["C", "BOOLEAN"]>>, "b")
disjunction
int_value (40)
bool_value (false)
int_value (22)
int_value (26)
add_call_chain(<<d,D,d,A,B>>)
logical_negation
numerical_negation
add_attribute("a", "d", "BOOLEAN")
numerical_negation
generate_java_code
conjunction
add_query("C", "d", <<["BOOLEAN", "INTEGER"], ["d", "INTEGER"], ["b", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "a"]>>, "INTEGER")
add_query("c", "A", <<["c", "A"], ["INTEGER", "d"], ["B", "INTEGER"], ["INTEGER", "B"], ["b", "BOOLEAN"], ["d", "BOOLEAN"], ["d", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>, "b")
greater_than
add_call_chain(<<b,e,e>>)
int_value (41)
add_class(B)
int_value (31)
add_attribute("b", "INTEGER", "b")
less_than
subtraction
type_check
add_call_chain(<<BOOLEAN>>)
type_check
int_value (14)
add_call_chain(<<e,C,B>>)
add_command("A", "INTEGER", <<["b", "d"], ["C", "D"], ["B", "a"], ["A", "INTEGER"]>>)
bool_value (true)
numerical_negation
int_value (26)
int_value (7)
equals
add_query("e", "A", <<["a", "BOOLEAN"], ["D", "INTEGER"], ["B", "B"], ["C", "INTEGER"], ["c", "B"]>>, "C")
add_attribute("d", "d", "BOOLEAN")
generate_java_code
add_call_chain(<<e,a,b,b,b,C>>)
add_attribute("C", "d", "BOOLEAN")
logical_negation
multiplication
add_attribute("a", "a", "BOOLEAN")
add_call_chain(<<a,b,a,d,D,d,B,B,d>>)
addition
conjunction
logical_negation
add_call_chain(<<A,C>>)
add_call_chain(<<C,b,C,c,INTEGER,B,A>>)
logical_negation
add_call_chain(<<b,BOOLEAN>>)
add_call_chain(<<D,e,B,a>>)
generate_java_code
add_query("e", "C", <<["b", "INTEGER"], ["b", "BOOLEAN"], ["d", "D"], ["BOOLEAN", "BOOLEAN"], ["D", "INTEGER"]>>, "B")
add_command("BOOLEAN", "b", <<["INTEGER", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "b"]>>)
add_call_chain(<<C,D,A,c,D,A,a>>)
add_class(B)
bool_value (false)
addition
