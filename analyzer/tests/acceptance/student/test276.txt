generate_java_code
multiplication
add_call_chain(<<c,INTEGER,d,C,C,C,e,c,INTEGER>>)
add_command("B", "A", <<["e", "INTEGER"], ["INTEGER", "e"], ["a", "BOOLEAN"], ["d", "C"], ["D", "BOOLEAN"], ["b", "e"], ["A", "INTEGER"], ["D", "INTEGER"]>>)
modulo
add_command("d", "D", <<["b", "INTEGER"], ["C", "BOOLEAN"], ["a", "INTEGER"]>>)
type_check
int_value (19)
add_command("B", "A", <<["D", "INTEGER"], ["c", "BOOLEAN"], ["B", "b"], ["d", "BOOLEAN"]>>)
conjunction
int_value (45)
logical_negation
add_attribute("INTEGER", "d", "INTEGER")
int_value (1)
add_query("A", "d", <<["B", "BOOLEAN"], ["B", "A"], ["A", "BOOLEAN"]>>, "D")
add_call_chain(<<b,b,A,c,d,A,c,a>>)
addition
disjunction
logical_negation
type_check
add_query("A", "B", <<["D", "B"]>>, "D")
bool_value (false)
add_attribute("b", "b", "BOOLEAN")
add_command("INTEGER", "B", <<["d", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "A"], ["e", "INTEGER"], ["A", "B"], ["INTEGER", "BOOLEAN"], ["a", "INTEGER"]>>)
add_query("D", "C", <<["e", "BOOLEAN"], ["e", "d"], ["C", "C"], ["C", "INTEGER"], ["d", "INTEGER"], ["B", "e"]>>, "e")
add_command("e", "A", <<["A", "INTEGER"], ["d", "e"], ["a", "C"], ["b", "BOOLEAN"], ["c", "INTEGER"], ["c", "BOOLEAN"], ["e", "B"]>>)
bool_value (true)
add_call_chain(<<e,d,C,b,B>>)
add_command("e", "A", <<["A", "INTEGER"], ["C", "e"]>>)
add_call_chain(<<e,A,D,d,c,A,INTEGER,a>>)
add_class(e)
int_value (40)
add_query("c", "D", <<["d", "BOOLEAN"], ["e", "INTEGER"], ["e", "BOOLEAN"]>>, "D")
add_query("a", "A", <<["a", "INTEGER"], ["d", "d"], ["e", "A"], ["e", "C"], ["b", "d"]>>, "A")
add_command("d", "e", <<["b", "B"], ["A", "B"], ["A", "c"], ["b", "INTEGER"], ["a", "BOOLEAN"], ["C", "B"], ["BOOLEAN", "a"], ["c", "BOOLEAN"]>>)
add_attribute("e", "INTEGER", "BOOLEAN")
generate_java_code
int_value (39)
add_command("a", "B", <<["e", "INTEGER"]>>)
add_query("B", "BOOLEAN", <<["B", "A"], ["C", "INTEGER"], ["INTEGER", "e"]>>, "c")
add_command("B", "B", <<["A", "BOOLEAN"], ["D", "INTEGER"], ["B", "BOOLEAN"]>>)
numerical_negation
add_class(B)
equals
disjunction
bool_value (false)
int_value (1)
add_query("INTEGER", "INTEGER", <<["C", "c"], ["b", "BOOLEAN"], ["A", "a"], ["e", "INTEGER"], ["B", "INTEGER"]>>, "BOOLEAN")
add_command("B", "c", <<["B", "c"], ["C", "INTEGER"], ["d", "BOOLEAN"], ["b", "BOOLEAN"]>>)
int_value (27)
add_call_chain(<<b>>)
bool_value (true)
add_call_chain(<<c,A>>)
multiplication
add_command("d", "INTEGER", <<["e", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["c", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
logical_negation
less_than
add_attribute("BOOLEAN", "d", "BOOLEAN")
add_command("INTEGER", "C", <<["C", "INTEGER"], ["C", "INTEGER"], ["b", "INTEGER"]>>)
numerical_negation
generate_java_code
type_check
add_call_chain(<<d,BOOLEAN,e,C>>)
bool_value (false)
type_check
add_command("d", "D", <<["INTEGER", "INTEGER"], ["A", "INTEGER"], ["a", "INTEGER"], ["d", "C"], ["d", "D"], ["c", "INTEGER"], ["B", "INTEGER"], ["e", "INTEGER"]>>)
bool_value (false)
add_query("BOOLEAN", "INTEGER", <<["C", "BOOLEAN"], ["D", "b"]>>, "D")
type_check
disjunction
add_command("e", "C", <<["e", "BOOLEAN"], ["D", "B"], ["a", "e"], ["C", "INTEGER"], ["B", "INTEGER"], ["d", "a"], ["C", "BOOLEAN"], ["D", "BOOLEAN"]>>)
conjunction
add_attribute("a", "B", "BOOLEAN")
numerical_negation
bool_value (false)
add_query("a", "C", <<["c", "INTEGER"]>>, "D")
add_command("B", "B", <<["c", "INTEGER"], ["e", "INTEGER"], ["b", "INTEGER"], ["A", "C"], ["B", "D"], ["a", "BOOLEAN"], ["C", "INTEGER"], ["C", "INTEGER"]>>)
add_attribute("C", "a", "BOOLEAN")
generate_java_code
add_call_chain(<<b,d,c,D>>)
type_check
add_command("INTEGER", "b", <<["BOOLEAN", "C"], ["e", "INTEGER"], ["d", "INTEGER"]>>)
int_value (18)
numerical_negation
add_query("c", "INTEGER", <<["C", "B"]>>, "BOOLEAN")
add_call_chain(<<a,D,c,C,d,a>>)
multiplication
subtraction
add_query("a", "c", <<["e", "B"], ["d", "INTEGER"]>>, "B")
add_call_chain(<<b,C,D>>)
numerical_negation
int_value (34)
int_value (3)
add_class(d)
bool_value (true)
type_check
add_query("D", "e", <<["INTEGER", "BOOLEAN"], ["a", "D"], ["a", "BOOLEAN"]>>, "D")
add_call_chain(<<B,A,B,B,INTEGER>>)
conjunction
add_call_chain(<<A,D,C>>)
int_value (15)
greater_than
add_query("C", "c", <<["B", "C"], ["a", "C"], ["d", "a"]>>, "d")
int_value (47)
type_check
type_check
logical_negation
add_command("B", "c", <<["d", "B"], ["d", "A"], ["B", "INTEGER"], ["A", "A"], ["C", "INTEGER"], ["INTEGER", "INTEGER"], ["D", "a"], ["d", "BOOLEAN"]>>)
numerical_negation
add_call_chain(<<C,e,A,D,B,INTEGER,B>>)
add_query("a", "B", <<["C", "INTEGER"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["a", "d"], ["b", "INTEGER"], ["e", "INTEGER"]>>, "D")
add_call_chain(<<e,D,B,a,D,D>>)
type_check
add_attribute("e", "e", "BOOLEAN")
add_attribute("B", "c", "BOOLEAN")
numerical_negation
addition
add_class(d)
add_query("A", "C", <<["d", "e"], ["BOOLEAN", "a"], ["C", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "BOOLEAN"]>>, "A")
add_call_chain(<<d,A,C,a,a,A,d,C,c>>)
add_command("B", "D", <<["D", "B"], ["D", "INTEGER"], ["INTEGER", "A"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["d", "b"], ["e", "INTEGER"], ["b", "b"]>>)
add_call_chain(<<A,A,C,B>>)
add_query("A", "A", <<["A", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "INTEGER"], ["D", "a"], ["c", "D"], ["A", "INTEGER"]>>, "A")
type_check
int_value (48)
numerical_negation
add_class(c)
add_call_chain(<<e,B,A>>)
add_query("D", "d", <<["D", "BOOLEAN"], ["B", "b"], ["B", "e"]>>, "b")
generate_java_code
int_value (38)
add_query("D", "a", <<["B", "INTEGER"], ["d", "a"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["B", "INTEGER"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["B", "BOOLEAN"]>>, "b")
type_check
subtraction
add_attribute("C", "A", "C")
bool_value (true)
bool_value (true)
add_query("D", "c", <<["e", "BOOLEAN"], ["INTEGER", "B"], ["d", "BOOLEAN"], ["a", "INTEGER"], ["A", "D"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>, "a")
add_call_chain(<<c,a,D,C,b,b,a,B>>)
logical_negation
add_call_chain(<<a,d,A,BOOLEAN,A,d,INTEGER,a>>)
add_call_chain(<<d>>)
add_query("d", "e", <<["A", "C"], ["c", "BOOLEAN"], ["d", "INTEGER"], ["C", "INTEGER"], ["c", "INTEGER"], ["e", "D"]>>, "BOOLEAN")
multiplication
int_value (8)
type_check
greater_than
add_call_chain(<<e>>)
add_call_chain(<<b,b>>)
add_attribute("A", "C", "INTEGER")
addition
add_command("a", "C", <<["e", "INTEGER"], ["b", "BOOLEAN"], ["c", "e"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "INTEGER"], ["e", "B"], ["c", "BOOLEAN"]>>)
numerical_negation
disjunction
addition
greater_than
int_value (39)
add_class(b)
add_command("B", "B", <<["a", "BOOLEAN"], ["A", "b"], ["B", "INTEGER"]>>)
add_query("BOOLEAN", "d", <<["d", "BOOLEAN"], ["c", "c"], ["d", "INTEGER"], ["A", "a"], ["e", "BOOLEAN"], ["e", "B"], ["d", "INTEGER"], ["A", "BOOLEAN"]>>, "C")
generate_java_code
add_call_chain(<<c,a,a>>)
add_call_chain(<<b,B,B,A,C>>)
add_query("c", "b", <<["e", "INTEGER"], ["B", "e"], ["C", "a"], ["c", "BOOLEAN"], ["BOOLEAN", "a"], ["B", "BOOLEAN"], ["d", "INTEGER"]>>, "a")
add_query("e", "D", <<["INTEGER", "INTEGER"], ["c", "INTEGER"], ["c", "INTEGER"], ["C", "INTEGER"], ["c", "BOOLEAN"]>>, "A")
add_attribute("a", "e", "INTEGER")
add_query("B", "A", <<["D", "BOOLEAN"], ["A", "INTEGER"], ["d", "C"], ["c", "e"]>>, "A")
add_call_chain(<<c,e>>)
numerical_negation
add_command("D", "c", <<["D", "D"], ["a", "INTEGER"], ["b", "BOOLEAN"]>>)
add_attribute("b", "C", "INTEGER")
add_class(C)
add_query("d", "A", <<["a", "BOOLEAN"], ["d", "INTEGER"], ["a", "INTEGER"], ["a", "INTEGER"], ["d", "A"], ["A", "B"]>>, "c")
less_than
type_check
add_attribute("a", "b", "INTEGER")
int_value (18)
addition
less_than
int_value (18)
greater_than
add_class(B)
add_class(C)
add_command("e", "B", <<["INTEGER", "d"], ["e", "d"], ["C", "INTEGER"], ["INTEGER", "BOOLEAN"], ["A", "INTEGER"], ["A", "INTEGER"]>>)
subtraction
add_call_chain(<<A,D,BOOLEAN,BOOLEAN,B,D,B>>)
generate_java_code
add_attribute("b", "b", "BOOLEAN")
add_query("B", "B", <<["d", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "B"], ["B", "BOOLEAN"], ["e", "B"], ["c", "e"], ["C", "BOOLEAN"], ["A", "INTEGER"]>>, "A")
int_value (23)
bool_value (false)
add_class(INTEGER)
add_query("BOOLEAN", "INTEGER", <<["c", "INTEGER"], ["d", "INTEGER"], ["BOOLEAN", "c"]>>, "D")
generate_java_code
add_call_chain(<<a,c>>)
add_call_chain(<<e,D,c,C>>)
add_command("D", "INTEGER", <<["c", "BOOLEAN"]>>)
add_attribute("a", "INTEGER", "A")
int_value (3)
add_call_chain(<<A,INTEGER,a,b,C>>)
add_query("d", "C", <<["b", "e"], ["C", "INTEGER"], ["D", "INTEGER"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "D"], ["C", "B"], ["C", "BOOLEAN"]>>, "e")
logical_negation
numerical_negation
