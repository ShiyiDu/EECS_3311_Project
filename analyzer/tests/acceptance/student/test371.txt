add_call_chain(<<D,A,D,d,D,C,C,d,c>>)
quotient
numerical_negation
bool_value (true)
multiplication
add_command("d", "B", <<["a", "D"], ["D", "INTEGER"], ["e", "BOOLEAN"], ["C", "BOOLEAN"]>>)
type_check
add_attribute("A", "A", "INTEGER")
type_check
generate_java_code
int_value (18)
add_call_chain(<<B,D,a,c,e,e>>)
generate_java_code
add_command("d", "A", <<["a", "INTEGER"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "INTEGER"], ["C", "INTEGER"], ["A", "D"], ["B", "INTEGER"], ["d", "D"]>>)
add_class(C)
add_query("B", "e", <<["BOOLEAN", "BOOLEAN"], ["D", "D"], ["D", "INTEGER"]>>, "e")
type_check
int_value (25)
type_check
logical_negation
generate_java_code
bool_value (false)
add_call_chain(<<a,INTEGER,d,C,C,INTEGER>>)
numerical_negation
bool_value (false)
numerical_negation
int_value (30)
add_command("c", "d", <<["a", "c"], ["BOOLEAN", "c"], ["b", "BOOLEAN"], ["a", "e"], ["INTEGER", "BOOLEAN"], ["b", "INTEGER"], ["d", "BOOLEAN"], ["a", "BOOLEAN"]>>)
type_check
add_call_chain(<<C,BOOLEAN,d,e,B,b,D,D,C>>)
bool_value (true)
greater_than
add_query("INTEGER", "d", <<["C", "INTEGER"], ["BOOLEAN", "INTEGER"]>>, "D")
add_query("b", "B", <<["d", "INTEGER"], ["D", "C"], ["A", "BOOLEAN"]>>, "a")
add_class(BOOLEAN)
quotient
greater_than
add_class(c)
add_command("B", "A", <<["c", "BOOLEAN"]>>)
int_value (26)
add_attribute("B", "C", "INTEGER")
modulo
logical_negation
bool_value (false)
add_query("b", "c", <<["B", "D"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>, "D")
add_call_chain(<<c,D>>)
add_class(C)
add_call_chain(<<d,b,C,C,A,BOOLEAN,C,C>>)
add_call_chain(<<BOOLEAN>>)
logical_negation
logical_negation
conjunction
add_call_chain(<<BOOLEAN,c,d,D,a,A>>)
logical_negation
numerical_negation
add_query("d", "A", <<["BOOLEAN", "INTEGER"]>>, "INTEGER")
generate_java_code
add_call_chain(<<b,D,c,D,D>>)
add_command("A", "a", <<["b", "INTEGER"], ["e", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
generate_java_code
add_call_chain(<<c,D,B,b,BOOLEAN>>)
logical_negation
add_call_chain(<<e,B>>)
less_than
type_check
logical_negation
disjunction
int_value (43)
add_call_chain(<<D,b,A,C>>)
add_call_chain(<<BOOLEAN,d>>)
add_attribute("c", "c", "BOOLEAN")
greater_than
add_attribute("d", "B", "BOOLEAN")
int_value (22)
addition
int_value (25)
type_check
add_command("e", "d", <<["D", "INTEGER"], ["c", "b"], ["B", "INTEGER"], ["b", "D"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "D"], ["B", "BOOLEAN"]>>)
numerical_negation
bool_value (true)
add_class(e)
add_query("c", "INTEGER", <<["e", "BOOLEAN"], ["e", "BOOLEAN"]>>, "B")
equals
add_query("c", "A", <<["b", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["e", "INTEGER"], ["BOOLEAN", "C"], ["B", "BOOLEAN"], ["C", "INTEGER"], ["c", "INTEGER"]>>, "b")
type_check
add_call_chain(<<a,e,A,d>>)
disjunction
add_class(e)
add_class(C)
logical_negation
add_class(A)
numerical_negation
add_call_chain(<<INTEGER,c,b,e>>)
add_class(B)
bool_value (true)
conjunction
add_query("b", "D", <<["B", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "BOOLEAN"]>>, "C")
add_query("C", "D", <<["a", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>, "e")
conjunction
logical_negation
generate_java_code
modulo
bool_value (true)
disjunction
generate_java_code
add_call_chain(<<D,C,a,BOOLEAN,e,d,d>>)
add_call_chain(<<A,e,e>>)
add_command("b", "D", <<["C", "BOOLEAN"], ["a", "A"]>>)
type_check
add_attribute("a", "e", "INTEGER")
add_command("INTEGER", "b", <<["d", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "d"], ["b", "a"], ["d", "BOOLEAN"], ["a", "INTEGER"]>>)
int_value (39)
int_value (18)
int_value (26)
add_query("a", "a", <<["c", "BOOLEAN"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["a", "e"]>>, "d")
add_command("e", "INTEGER", <<["INTEGER", "B"], ["c", "C"], ["e", "INTEGER"], ["D", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "BOOLEAN"]>>)
conjunction
int_value (36)
type_check
add_call_chain(<<e,e,C,A,A,A>>)
quotient
multiplication
generate_java_code
add_query("d", "b", <<["d", "INTEGER"], ["C", "e"], ["C", "BOOLEAN"], ["INTEGER", "C"], ["A", "BOOLEAN"], ["B", "a"]>>, "D")
add_call_chain(<<b,a,D,c,c,C,D,c>>)
int_value (38)
add_attribute("B", "C", "INTEGER")
quotient
int_value (49)
numerical_negation
conjunction
greater_than
logical_negation
int_value (7)
add_class(a)
int_value (35)
quotient
logical_negation
bool_value (false)
add_call_chain(<<a,e,BOOLEAN,e>>)
add_call_chain(<<b,C,e,b,D,e,e,e,c>>)
add_attribute("D", "BOOLEAN", "BOOLEAN")
bool_value (true)
generate_java_code
add_attribute("D", "D", "INTEGER")
add_call_chain(<<a,B,d,D,c,A,c,b,e>>)
generate_java_code
int_value (22)
add_call_chain(<<A,d,c,B,A,B,D,e>>)
add_call_chain(<<b,d,a,A,D,b,c>>)
add_call_chain(<<a>>)
add_call_chain(<<A>>)
bool_value (true)
type_check
add_attribute("D", "D", "BOOLEAN")
addition
disjunction
logical_negation
numerical_negation
add_call_chain(<<e,C>>)
add_call_chain(<<d,b,C,c,D,A,b>>)
int_value (20)
conjunction
add_call_chain(<<A,INTEGER,A,e,BOOLEAN,a,e,C>>)
add_command("D", "D", <<["a", "BOOLEAN"], ["C", "BOOLEAN"]>>)
bool_value (true)
disjunction
add_class(BOOLEAN)
add_attribute("C", "b", "INTEGER")
bool_value (true)
add_call_chain(<<d,d,c,INTEGER,c,e>>)
bool_value (false)
quotient
add_command("e", "b", <<["A", "BOOLEAN"]>>)
add_call_chain(<<A,e,D,d,a,b>>)
bool_value (true)
conjunction
modulo
addition
add_command("a", "e", <<["C", "BOOLEAN"], ["INTEGER", "INTEGER"], ["D", "BOOLEAN"], ["D", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["d", "INTEGER"], ["e", "INTEGER"], ["A", "BOOLEAN"]>>)
add_call_chain(<<B,d,BOOLEAN,C,D,c,D,c,C>>)
add_query("c", "d", <<["A", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["B", "INTEGER"], ["e", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "INTEGER"], ["e", "INTEGER"]>>, "b")
add_command("b", "D", <<["d", "INTEGER"], ["e", "B"], ["INTEGER", "INTEGER"], ["e", "INTEGER"]>>)
add_attribute("d", "BOOLEAN", "BOOLEAN")
add_attribute("B", "b", "D")
addition
bool_value (true)
add_call_chain(<<e,c,c,d,b,BOOLEAN,b>>)
numerical_negation
add_attribute("A", "a", "BOOLEAN")
add_call_chain(<<D,C,b,A>>)
generate_java_code
add_query("A", "D", <<["B", "BOOLEAN"], ["c", "INTEGER"], ["c", "e"], ["A", "INTEGER"], ["c", "INTEGER"], ["b", "INTEGER"], ["d", "BOOLEAN"], ["B", "d"], ["b", "BOOLEAN"]>>, "A")
bool_value (false)
add_command("D", "D", <<["d", "INTEGER"], ["b", "INTEGER"], ["D", "INTEGER"], ["C", "D"], ["a", "BOOLEAN"]>>)
conjunction
add_query("A", "C", <<["c", "INTEGER"], ["D", "INTEGER"], ["e", "INTEGER"], ["e", "b"], ["D", "INTEGER"]>>, "a")
add_query("B", "c", <<["INTEGER", "d"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["e", "INTEGER"]>>, "D")
add_command("c", "b", <<["a", "INTEGER"], ["D", "INTEGER"], ["e", "INTEGER"], ["a", "BOOLEAN"], ["a", "BOOLEAN"]>>)
generate_java_code
add_call_chain(<<INTEGER,d>>)
type_check
add_attribute("d", "D", "c")
add_command("d", "C", <<["D", "BOOLEAN"], ["C", "D"], ["B", "A"], ["D", "INTEGER"], ["C", "INTEGER"], ["C", "INTEGER"], ["INTEGER", "INTEGER"]>>)
add_attribute("c", "B", "D")
numerical_negation
