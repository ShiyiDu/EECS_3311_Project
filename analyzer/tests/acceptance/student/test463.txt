add_command("A", "c", <<["c", "INTEGER"]>>)
add_attribute("a", "INTEGER", "d")
type_check
logical_negation
subtraction
conjunction
add_call_chain(<<INTEGER,a,B,A,e,c,A,D,B>>)
add_call_chain(<<D,D,e,INTEGER,b,a,c>>)
addition
add_class(D)
add_attribute("a", "D", "d")
add_query("D", "B", <<["d", "INTEGER"]>>, "A")
add_call_chain(<<d,A>>)
add_call_chain(<<b>>)
add_attribute("b", "c", "D")
int_value (2)
add_attribute("e", "A", "BOOLEAN")
bool_value (false)
add_command("INTEGER", "D", <<["d", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "B"], ["A", "B"], ["A", "BOOLEAN"], ["C", "b"], ["BOOLEAN", "BOOLEAN"]>>)
add_attribute("a", "b", "A")
add_attribute("e", "b", "INTEGER")
add_command("C", "e", <<["b", "INTEGER"], ["c", "INTEGER"], ["c", "B"], ["BOOLEAN", "INTEGER"], ["C", "b"]>>)
less_than
equals
quotient
bool_value (true)
add_call_chain(<<C,D,A>>)
generate_java_code
bool_value (true)
add_query("B", "d", <<["A", "e"], ["C", "B"]>>, "D")
add_call_chain(<<BOOLEAN,D,A,a,e,A,B>>)
add_query("D", "d", <<["b", "INTEGER"], ["D", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "INTEGER"], ["e", "B"], ["INTEGER", "b"]>>, "INTEGER")
add_command("C", "D", <<["e", "A"]>>)
int_value (4)
add_call_chain(<<b,B,e,B>>)
numerical_negation
generate_java_code
disjunction
add_attribute("b", "A", "C")
numerical_negation
add_call_chain(<<D,b>>)
add_call_chain(<<A,C>>)
logical_negation
add_call_chain(<<d,b>>)
add_call_chain(<<BOOLEAN>>)
greater_than
numerical_negation
add_query("B", "e", <<["c", "BOOLEAN"]>>, "c")
disjunction
add_attribute("a", "e", "BOOLEAN")
logical_negation
int_value (14)
add_command("D", "BOOLEAN", <<["e", "INTEGER"], ["b", "INTEGER"], ["D", "D"], ["B", "INTEGER"]>>)
less_than
add_call_chain(<<C,c,A,C,A,d,C,A>>)
add_class(A)
add_class(D)
int_value (28)
add_attribute("INTEGER", "A", "INTEGER")
int_value (45)
add_command("e", "e", <<["c", "INTEGER"], ["INTEGER", "INTEGER"], ["c", "BOOLEAN"], ["b", "c"], ["c", "INTEGER"], ["BOOLEAN", "A"]>>)
type_check
add_query("e", "A", <<["D", "INTEGER"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "INTEGER"], ["a", "c"]>>, "D")
add_command("INTEGER", "A", <<["a", "INTEGER"], ["c", "BOOLEAN"], ["e", "e"], ["A", "BOOLEAN"], ["C", "D"], ["BOOLEAN", "d"]>>)
type_check
add_command("D", "D", <<["a", "INTEGER"]>>)
add_query("c", "A", <<["e", "BOOLEAN"], ["B", "INTEGER"], ["B", "INTEGER"], ["c", "a"], ["b", "INTEGER"], ["A", "e"]>>, "b")
generate_java_code
numerical_negation
disjunction
add_query("e", "BOOLEAN", <<["a", "BOOLEAN"], ["D", "B"], ["D", "INTEGER"]>>, "INTEGER")
equals
numerical_negation
add_call_chain(<<a>>)
bool_value (true)
int_value (13)
numerical_negation
equals
add_attribute("e", "A", "BOOLEAN")
int_value (38)
add_call_chain(<<BOOLEAN,A,e,BOOLEAN,a,d,C,D>>)
add_query("BOOLEAN", "D", <<["b", "B"], ["a", "C"]>>, "A")
add_attribute("BOOLEAN", "B", "INTEGER")
add_query("BOOLEAN", "C", <<["C", "INTEGER"], ["B", "A"], ["e", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "INTEGER"], ["D", "INTEGER"]>>, "B")
generate_java_code
generate_java_code
add_attribute("a", "INTEGER", "D")
bool_value (false)
int_value (20)
add_call_chain(<<a,A,C,a,BOOLEAN,D,BOOLEAN,e>>)
add_call_chain(<<e,e,A,A,B,C>>)
bool_value (false)
int_value (19)
logical_negation
bool_value (true)
generate_java_code
equals
add_attribute("e", "D", "BOOLEAN")
add_command("c", "A", <<["d", "INTEGER"], ["C", "BOOLEAN"], ["D", "d"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["D", "INTEGER"]>>)
numerical_negation
add_query("C", "e", <<["a", "d"], ["B", "INTEGER"], ["INTEGER", "INTEGER"], ["C", "b"], ["A", "INTEGER"], ["A", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>, "a")
disjunction
add_class(b)
generate_java_code
add_command("B", "A", <<["B", "INTEGER"], ["D", "a"], ["INTEGER", "c"]>>)
logical_negation
type_check
less_than
add_call_chain(<<C,d,d,A,A,C,INTEGER,A,B>>)
logical_negation
type_check
generate_java_code
add_query("BOOLEAN", "b", <<["D", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["D", "BOOLEAN"]>>, "A")
add_call_chain(<<A,d,INTEGER>>)
add_attribute("D", "B", "BOOLEAN")
generate_java_code
add_command("B", "BOOLEAN", <<["D", "b"], ["b", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "b"], ["B", "INTEGER"], ["b", "INTEGER"], ["b", "A"]>>)
bool_value (true)
add_attribute("D", "B", "INTEGER")
add_call_chain(<<C,C,b>>)
generate_java_code
add_call_chain(<<e,a,B,c,A,B,B>>)
generate_java_code
bool_value (true)
equals
add_call_chain(<<A,a,C,BOOLEAN,e,C>>)
less_than
greater_than
bool_value (true)
add_class(A)
add_call_chain(<<C,D,A,b>>)
add_attribute("c", "a", "BOOLEAN")
int_value (33)
type_check
conjunction
add_call_chain(<<D,D,BOOLEAN>>)
disjunction
add_call_chain(<<d,D>>)
equals
type_check
logical_negation
add_call_chain(<<b,d,A,d,a,C,c>>)
logical_negation
add_attribute("BOOLEAN", "e", "a")
numerical_negation
generate_java_code
bool_value (true)
add_call_chain(<<C>>)
quotient
add_call_chain(<<d,D,b,a,B,e>>)
add_command("INTEGER", "c", <<["c", "BOOLEAN"], ["B", "INTEGER"], ["B", "e"], ["e", "BOOLEAN"]>>)
generate_java_code
add_call_chain(<<b,A,e,e,b,b>>)
logical_negation
add_call_chain(<<A,c,A,c,D,C,d>>)
add_attribute("A", "B", "BOOLEAN")
numerical_negation
bool_value (true)
equals
add_attribute("d", "a", "C")
add_attribute("D", "C", "C")
add_query("B", "b", <<["A", "a"], ["b", "BOOLEAN"], ["D", "d"], ["D", "INTEGER"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["c", "BOOLEAN"]>>, "B")
add_command("c", "d", <<["D", "BOOLEAN"], ["e", "BOOLEAN"], ["c", "BOOLEAN"], ["b", "C"]>>)
int_value (38)
add_command("c", "B", <<["b", "C"], ["C", "A"], ["INTEGER", "INTEGER"], ["B", "INTEGER"], ["C", "INTEGER"], ["A", "INTEGER"], ["a", "INTEGER"]>>)
add_query("e", "D", <<["b", "D"], ["D", "d"], ["b", "BOOLEAN"], ["e", "A"], ["D", "BOOLEAN"], ["c", "INTEGER"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["a", "A"]>>, "a")
add_query("e", "A", <<["B", "a"]>>, "c")
add_class(B)
add_call_chain(<<c,BOOLEAN,BOOLEAN>>)
logical_negation
add_call_chain(<<D,B>>)
add_attribute("D", "d", "BOOLEAN")
numerical_negation
add_call_chain(<<d,INTEGER>>)
numerical_negation
bool_value (true)
logical_negation
add_call_chain(<<a,B,B,B,a,d>>)
add_call_chain(<<C,d,A,A,A,C,INTEGER>>)
int_value (6)
logical_negation
modulo
add_class(B)
add_call_chain(<<b,A,A,A,C>>)
logical_negation
bool_value (true)
type_check
add_command("e", "BOOLEAN", <<["A", "INTEGER"], ["D", "INTEGER"], ["c", "A"], ["A", "INTEGER"], ["b", "INTEGER"]>>)
conjunction
add_command("b", "a", <<["D", "BOOLEAN"], ["C", "a"]>>)
type_check
type_check
add_call_chain(<<b,D,a,B>>)
generate_java_code
bool_value (false)
add_query("c", "b", <<["b", "INTEGER"], ["B", "C"], ["a", "BOOLEAN"]>>, "D")
logical_negation
int_value (8)
conjunction
add_call_chain(<<C,d,B>>)
add_call_chain(<<a,d>>)
numerical_negation
