numerical_negation
type_check
add_call_chain(<<C,e>>)
add_class(b)
add_query("B", "INTEGER", <<["B", "INTEGER"], ["A", "INTEGER"], ["b", "A"], ["D", "BOOLEAN"], ["INTEGER", "A"], ["b", "INTEGER"], ["D", "A"], ["d", "d"], ["C", "c"]>>, "B")
add_query("c", "B", <<["e", "BOOLEAN"], ["d", "INTEGER"], ["A", "INTEGER"], ["e", "e"]>>, "B")
bool_value (false)
bool_value (true)
numerical_negation
logical_negation
add_command("B", "b", <<["c", "INTEGER"], ["C", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "INTEGER"], ["C", "b"], ["A", "B"], ["B", "B"], ["e", "BOOLEAN"]>>)
add_class(BOOLEAN)
add_query("INTEGER", "B", <<["B", "b"], ["B", "c"], ["BOOLEAN", "INTEGER"], ["INTEGER", "BOOLEAN"]>>, "e")
disjunction
add_query("a", "c", <<["c", "INTEGER"], ["d", "c"]>>, "C")
add_query("B", "c", <<["b", "BOOLEAN"], ["b", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "D"], ["B", "INTEGER"], ["b", "INTEGER"]>>, "BOOLEAN")
numerical_negation
add_call_chain(<<a,B,D,c,BOOLEAN,B,a>>)
add_call_chain(<<e>>)
add_query("a", "d", <<["A", "INTEGER"], ["A", "INTEGER"], ["BOOLEAN", "A"], ["BOOLEAN", "c"], ["BOOLEAN", "INTEGER"], ["B", "BOOLEAN"], ["c", "INTEGER"], ["C", "INTEGER"], ["a", "INTEGER"]>>, "INTEGER")
add_attribute("B", "D", "INTEGER")
add_attribute("A", "d", "INTEGER")
bool_value (false)
add_command("d", "C", <<["C", "C"], ["B", "INTEGER"], ["d", "INTEGER"], ["a", "D"], ["b", "INTEGER"], ["D", "b"], ["BOOLEAN", "BOOLEAN"], ["A", "INTEGER"], ["D", "a"]>>)
int_value (47)
logical_negation
add_call_chain(<<a,A,e,d>>)
add_call_chain(<<B,A>>)
add_query("B", "D", <<["A", "BOOLEAN"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["c", "D"], ["B", "INTEGER"], ["A", "d"], ["a", "B"]>>, "D")
int_value (28)
bool_value (true)
add_call_chain(<<A,BOOLEAN>>)
logical_negation
modulo
greater_than
add_call_chain(<<a,BOOLEAN,C>>)
type_check
add_class(B)
numerical_negation
int_value (14)
bool_value (true)
generate_java_code
numerical_negation
add_call_chain(<<B,D,e,INTEGER,A,c,b,b>>)
add_call_chain(<<B,a,A,b,D,C,B>>)
add_attribute("d", "A", "BOOLEAN")
add_command("B", "c", <<["A", "a"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["INTEGER", "INTEGER"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["D", "INTEGER"]>>)
generate_java_code
add_attribute("a", "BOOLEAN", "INTEGER")
logical_negation
bool_value (true)
int_value (35)
bool_value (true)
int_value (31)
generate_java_code
bool_value (false)
add_class(d)
numerical_negation
equals
add_attribute("e", "D", "C")
numerical_negation
logical_negation
logical_negation
modulo
add_attribute("d", "D", "a")
generate_java_code
add_attribute("BOOLEAN", "c", "BOOLEAN")
numerical_negation
add_attribute("A", "c", "INTEGER")
logical_negation
add_call_chain(<<A,C,c,c,c>>)
add_attribute("C", "C", "B")
type_check
subtraction
add_call_chain(<<D,B,b,e,D>>)
add_call_chain(<<c,A,e,b,d,C,a>>)
add_query("c", "e", <<["b", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "B"], ["BOOLEAN", "BOOLEAN"], ["e", "B"], ["a", "INTEGER"], ["e", "BOOLEAN"], ["A", "BOOLEAN"]>>, "D")
add_attribute("b", "c", "C")
conjunction
add_attribute("INTEGER", "B", "B")
add_query("D", "d", <<["B", "INTEGER"], ["B", "INTEGER"], ["d", "INTEGER"], ["b", "INTEGER"], ["D", "BOOLEAN"]>>, "A")
generate_java_code
add_query("d", "INTEGER", <<["d", "BOOLEAN"], ["D", "INTEGER"], ["d", "INTEGER"], ["C", "INTEGER"], ["d", "d"], ["a", "INTEGER"], ["A", "BOOLEAN"], ["d", "BOOLEAN"]>>, "d")
bool_value (false)
add_attribute("BOOLEAN", "A", "C")
add_attribute("A", "B", "BOOLEAN")
add_command("A", "D", <<["D", "BOOLEAN"]>>)
type_check
add_call_chain(<<BOOLEAN,A,INTEGER,e,B,e,BOOLEAN>>)
add_command("C", "a", <<["A", "INTEGER"], ["c", "INTEGER"], ["D", "A"], ["a", "INTEGER"], ["c", "BOOLEAN"]>>)
int_value (33)
add_query("C", "C", <<["B", "B"]>>, "INTEGER")
add_command("BOOLEAN", "A", <<["D", "INTEGER"], ["D", "BOOLEAN"], ["INTEGER", "INTEGER"], ["A", "d"], ["B", "INTEGER"], ["INTEGER", "INTEGER"], ["e", "a"], ["d", "B"], ["B", "BOOLEAN"]>>)
bool_value (false)
logical_negation
add_class(d)
generate_java_code
greater_than
add_class(a)
bool_value (true)
numerical_negation
add_class(B)
add_query("B", "b", <<["INTEGER", "BOOLEAN"], ["C", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["c", "BOOLEAN"], ["e", "BOOLEAN"], ["a", "D"]>>, "b")
add_call_chain(<<e,D>>)
numerical_negation
conjunction
numerical_negation
add_class(c)
type_check
add_command("C", "C", <<["c", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "BOOLEAN"], ["a", "BOOLEAN"], ["b", "INTEGER"], ["d", "D"]>>)
add_call_chain(<<c,B,D>>)
add_attribute("INTEGER", "D", "INTEGER")
add_query("INTEGER", "b", <<["a", "INTEGER"], ["a", "INTEGER"], ["b", "e"], ["c", "INTEGER"], ["C", "BOOLEAN"]>>, "a")
bool_value (true)
bool_value (false)
add_call_chain(<<BOOLEAN,B,a,B>>)
numerical_negation
add_call_chain(<<b,d,B,D,C,D,d,e>>)
add_attribute("B", "b", "INTEGER")
add_call_chain(<<B,A>>)
numerical_negation
add_command("D", "A", <<["A", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "INTEGER"], ["INTEGER", "BOOLEAN"], ["c", "INTEGER"], ["b", "d"], ["D", "INTEGER"], ["C", "c"]>>)
int_value (11)
int_value (8)
type_check
bool_value (false)
logical_negation
int_value (6)
add_attribute("BOOLEAN", "e", "BOOLEAN")
add_call_chain(<<b,d,a,B,a,e,D,b>>)
numerical_negation
logical_negation
logical_negation
add_query("B", "e", <<["e", "INTEGER"], ["INTEGER", "B"], ["b", "INTEGER"], ["d", "d"], ["A", "INTEGER"]>>, "c")
int_value (24)
equals
int_value (12)
bool_value (false)
logical_negation
add_class(b)
bool_value (false)
bool_value (true)
numerical_negation
generate_java_code
int_value (18)
numerical_negation
numerical_negation
logical_negation
add_class(a)
add_command("c", "A", <<["D", "INTEGER"], ["c", "INTEGER"], ["d", "BOOLEAN"]>>)
add_query("D", "D", <<["B", "D"], ["A", "c"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["c", "INTEGER"], ["C", "BOOLEAN"], ["c", "INTEGER"]>>, "e")
add_query("D", "e", <<["B", "BOOLEAN"], ["a", "INTEGER"]>>, "D")
add_call_chain(<<b,INTEGER>>)
type_check
add_query("e", "D", <<["INTEGER", "BOOLEAN"], ["B", "INTEGER"], ["c", "INTEGER"], ["c", "A"]>>, "a")
add_command("A", "D", <<["BOOLEAN", "B"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["b", "A"]>>)
greater_than
numerical_negation
generate_java_code
logical_negation
quotient
add_call_chain(<<d,D>>)
add_command("D", "c", <<["c", "a"]>>)
add_query("e", "INTEGER", <<["a", "C"], ["c", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["A", "BOOLEAN"]>>, "A")
add_call_chain(<<A,INTEGER,A,A,b,d>>)
add_call_chain(<<a,B>>)
add_command("e", "b", <<["A", "INTEGER"], ["B", "B"], ["D", "BOOLEAN"], ["b", "INTEGER"]>>)
add_query("D", "C", <<["B", "C"], ["b", "A"], ["A", "INTEGER"], ["c", "INTEGER"], ["e", "INTEGER"], ["a", "A"]>>, "D")
quotient
add_command("d", "C", <<["c", "INTEGER"], ["A", "BOOLEAN"], ["D", "B"], ["d", "C"]>>)
bool_value (false)
add_command("e", "D", <<["A", "D"]>>)
int_value (41)
generate_java_code
add_command("e", "B", <<["D", "B"], ["A", "c"]>>)
generate_java_code
add_command("a", "d", <<["e", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "INTEGER"], ["B", "INTEGER"], ["INTEGER", "INTEGER"], ["b", "INTEGER"]>>)
add_attribute("c", "e", "BOOLEAN")
add_attribute("A", "A", "b")
int_value (33)
numerical_negation
add_query("d", "c", <<["INTEGER", "INTEGER"], ["D", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "INTEGER"]>>, "a")
logical_negation
add_call_chain(<<A,a,d,D,A,b,b>>)
conjunction
add_query("d", "C", <<["D", "BOOLEAN"], ["C", "b"], ["BOOLEAN", "BOOLEAN"], ["c", "INTEGER"], ["D", "b"], ["A", "BOOLEAN"], ["e", "INTEGER"], ["c", "BOOLEAN"], ["C", "INTEGER"]>>, "D")
int_value (22)
bool_value (false)
add_attribute("d", "D", "BOOLEAN")
add_call_chain(<<D,e,A,c>>)
add_call_chain(<<B,c,B,B,D,b>>)
add_query("c", "a", <<["B", "c"], ["A", "BOOLEAN"], ["B", "d"], ["A", "A"], ["C", "BOOLEAN"]>>, "e")
subtraction
numerical_negation
logical_negation
add_attribute("d", "A", "B")
numerical_negation
numerical_negation
add_call_chain(<<b,b,c,d>>)
int_value (2)
int_value (36)
int_value (4)
add_command("b", "e", <<["INTEGER", "BOOLEAN"], ["A", "INTEGER"], ["C", "d"], ["D", "A"], ["B", "a"]>>)
type_check
add_call_chain(<<C,B,e,D,B,BOOLEAN,d,C>>)
add_query("C", "INTEGER", <<["b", "BOOLEAN"], ["B", "INTEGER"]>>, "e")
numerical_negation
add_query("BOOLEAN", "e", <<["c", "INTEGER"]>>, "C")
add_call_chain(<<C,D,D,INTEGER,A,c>>)
add_query("C", "e", <<["b", "INTEGER"], ["C", "INTEGER"], ["e", "A"], ["B", "BOOLEAN"], ["INTEGER", "INTEGER"], ["d", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "INTEGER"]>>, "d")
int_value (22)
greater_than
equals
add_query("c", "e", <<["C", "e"], ["B", "INTEGER"], ["a", "INTEGER"], ["d", "INTEGER"]>>, "D")
add_attribute("b", "D", "BOOLEAN")
modulo
add_attribute("A", "BOOLEAN", "BOOLEAN")
logical_negation
add_call_chain(<<INTEGER,A,A>>)
int_value (6)
add_command("d", "e", <<["D", "BOOLEAN"], ["e", "INTEGER"], ["A", "e"], ["c", "INTEGER"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["B", "BOOLEAN"]>>)
numerical_negation
add_call_chain(<<D>>)
add_attribute("B", "d", "A")
add_call_chain(<<D,D,B,C,a,A,d>>)
add_command("c", "BOOLEAN", <<["BOOLEAN", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
add_call_chain(<<d,D,D,D,C,B,d,b>>)
add_command("b", "d", <<["a", "INTEGER"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["A", "BOOLEAN"]>>)
add_command("d", "D", <<["a", "A"], ["B", "INTEGER"]>>)
add_call_chain(<<c,C,B,b,C,d>>)
