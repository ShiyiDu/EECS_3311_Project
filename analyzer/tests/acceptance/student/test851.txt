greater_than
add_call_chain(<<INTEGER,a>>)
logical_negation
numerical_negation
logical_negation
add_query("C", "B", <<["A", "INTEGER"], ["A", "d"], ["D", "A"]>>, "d")
add_command("d", "b", <<["e", "BOOLEAN"], ["A", "INTEGER"], ["b", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["a", "INTEGER"]>>)
add_query("INTEGER", "d", <<["A", "BOOLEAN"], ["d", "e"], ["d", "INTEGER"], ["B", "B"]>>, "D")
add_call_chain(<<A,b,BOOLEAN,A>>)
add_attribute("INTEGER", "d", "INTEGER")
add_call_chain(<<C,c,D,d,B>>)
bool_value (false)
type_check
add_call_chain(<<C,c,c,D,D,e,d,b>>)
bool_value (false)
bool_value (true)
multiplication
int_value (5)
multiplication
numerical_negation
greater_than
int_value (34)
add_command("A", "B", <<["e", "D"], ["e", "BOOLEAN"], ["B", "A"], ["D", "a"], ["b", "INTEGER"], ["a", "BOOLEAN"], ["B", "INTEGER"], ["e", "BOOLEAN"], ["INTEGER", "INTEGER"]>>)
numerical_negation
disjunction
add_call_chain(<<BOOLEAN,b,D,A,C,e>>)
add_call_chain(<<A>>)
add_call_chain(<<D>>)
logical_negation
add_call_chain(<<c,B,A,INTEGER,d,A,d,D,C>>)
bool_value (false)
add_class(A)
numerical_negation
logical_negation
bool_value (true)
logical_negation
add_call_chain(<<INTEGER,a,D>>)
add_call_chain(<<C,B,c,BOOLEAN,c,b,c,c,C>>)
add_attribute("a", "B", "B")
generate_java_code
type_check
add_attribute("e", "C", "INTEGER")
less_than
generate_java_code
add_command("C", "e", <<["b", "A"], ["a", "a"], ["B", "B"], ["A", "A"], ["A", "INTEGER"], ["D", "A"]>>)
add_call_chain(<<D,e>>)
add_command("B", "C", <<["e", "BOOLEAN"], ["b", "b"], ["C", "b"], ["c", "BOOLEAN"], ["A", "b"], ["D", "INTEGER"], ["b", "e"]>>)
disjunction
add_call_chain(<<a,d,A,e,INTEGER,a,a,B,a>>)
add_call_chain(<<A>>)
add_call_chain(<<C,INTEGER,b,C,BOOLEAN,C,e,C,C>>)
add_attribute("A", "a", "INTEGER")
greater_than
add_class(b)
type_check
bool_value (false)
add_attribute("B", "b", "D")
less_than
add_call_chain(<<e>>)
generate_java_code
disjunction
add_call_chain(<<A,D>>)
add_call_chain(<<D,B,D>>)
add_attribute("b", "d", "D")
add_query("B", "c", <<["e", "BOOLEAN"], ["b", "BOOLEAN"]>>, "d")
add_call_chain(<<c,C,INTEGER,BOOLEAN>>)
add_attribute("B", "e", "INTEGER")
add_attribute("b", "D", "INTEGER")
add_class(A)
generate_java_code
generate_java_code
add_attribute("D", "C", "BOOLEAN")
add_command("e", "D", <<["d", "INTEGER"], ["B", "D"], ["c", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "A"], ["e", "BOOLEAN"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["d", "INTEGER"]>>)
add_class(D)
add_query("d", "c", <<["b", "INTEGER"], ["B", "B"], ["c", "BOOLEAN"]>>, "A")
equals
add_attribute("D", "A", "a")
add_command("c", "INTEGER", <<["C", "BOOLEAN"], ["C", "D"], ["A", "BOOLEAN"]>>)
add_call_chain(<<D,c,d,INTEGER,A,C,C,c,A>>)
disjunction
add_call_chain(<<A,D,INTEGER,a>>)
bool_value (true)
greater_than
type_check
add_attribute("c", "INTEGER", "BOOLEAN")
add_query("a", "B", <<["d", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "INTEGER"], ["e", "BOOLEAN"], ["c", "BOOLEAN"], ["c", "BOOLEAN"]>>, "d")
add_query("a", "d", <<["d", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["D", "b"]>>, "c")
add_call_chain(<<B,C,d,A>>)
numerical_negation
add_attribute("C", "BOOLEAN", "BOOLEAN")
subtraction
add_call_chain(<<b,D>>)
add_call_chain(<<a,e,A,A>>)
logical_negation
add_call_chain(<<d,B>>)
bool_value (false)
numerical_negation
equals
int_value (2)
greater_than
numerical_negation
add_attribute("D", "a", "c")
conjunction
bool_value (false)
add_attribute("D", "D", "A")
add_command("A", "e", <<["D", "INTEGER"], ["b", "C"], ["b", "a"], ["C", "BOOLEAN"], ["e", "BOOLEAN"]>>)
add_query("d", "D", <<["d", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "D"], ["d", "INTEGER"], ["e", "BOOLEAN"]>>, "b")
bool_value (false)
logical_negation
add_query("D", "C", <<["D", "A"], ["e", "b"], ["A", "INTEGER"], ["INTEGER", "BOOLEAN"]>>, "D")
add_command("c", "e", <<["A", "INTEGER"], ["B", "INTEGER"], ["B", "INTEGER"], ["C", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "INTEGER"], ["C", "INTEGER"], ["C", "b"]>>)
add_call_chain(<<e,d,d,b,BOOLEAN,D,INTEGER,A,d>>)
add_call_chain(<<INTEGER,C>>)
add_call_chain(<<e,b,e,a,c>>)
add_query("a", "B", <<["e", "d"], ["INTEGER", "INTEGER"], ["INTEGER", "BOOLEAN"], ["D", "INTEGER"], ["C", "c"], ["B", "d"], ["b", "BOOLEAN"], ["e", "c"], ["B", "c"]>>, "c")
type_check
add_command("INTEGER", "C", <<["c", "INTEGER"], ["e", "D"], ["d", "D"], ["c", "INTEGER"], ["b", "BOOLEAN"], ["D", "BOOLEAN"]>>)
add_query("B", "C", <<["b", "INTEGER"], ["D", "C"], ["INTEGER", "INTEGER"], ["D", "INTEGER"], ["d", "A"], ["INTEGER", "B"], ["c", "INTEGER"], ["B", "BOOLEAN"], ["A", "INTEGER"]>>, "d")
type_check
bool_value (false)
add_query("c", "C", <<["D", "INTEGER"]>>, "A")
add_command("a", "d", <<["D", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["d", "B"], ["C", "INTEGER"], ["e", "B"], ["C", "INTEGER"], ["C", "A"]>>)
numerical_negation
add_call_chain(<<c>>)
numerical_negation
add_command("C", "d", <<["C", "INTEGER"], ["c", "INTEGER"], ["INTEGER", "BOOLEAN"], ["c", "b"], ["B", "INTEGER"]>>)
generate_java_code
add_call_chain(<<D,B,b,A,BOOLEAN,INTEGER,c,D,D>>)
add_call_chain(<<d,e,B,A,b,D>>)
add_attribute("B", "b", "BOOLEAN")
int_value (14)
numerical_negation
add_call_chain(<<D,C,c,e,a,C>>)
equals
add_command("B", "b", <<["e", "c"], ["d", "C"], ["c", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["e", "BOOLEAN"], ["d", "c"]>>)
bool_value (true)
int_value (31)
add_command("C", "c", <<["d", "D"], ["b", "INTEGER"], ["e", "INTEGER"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["A", "A"]>>)
add_query("B", "d", <<["e", "BOOLEAN"]>>, "a")
add_call_chain(<<c,a,a>>)
bool_value (true)
add_call_chain(<<D,D,C,a,D,A,B,e,D>>)
int_value (8)
int_value (33)
logical_negation
numerical_negation
addition
disjunction
add_command("d", "b", <<["B", "INTEGER"], ["INTEGER", "D"], ["B", "INTEGER"], ["BOOLEAN", "INTEGER"], ["C", "BOOLEAN"], ["B", "BOOLEAN"]>>)
logical_negation
bool_value (true)
add_attribute("C", "e", "INTEGER")
logical_negation
type_check
logical_negation
logical_negation
add_call_chain(<<BOOLEAN,B,BOOLEAN,d,c,B,A,A>>)
add_call_chain(<<C,D,e,A,B,d>>)
add_command("c", "e", <<["a", "INTEGER"]>>)
int_value (38)
add_call_chain(<<B,e,c,e,e>>)
add_query("A", "C", <<["d", "BOOLEAN"], ["B", "INTEGER"], ["A", "INTEGER"], ["e", "INTEGER"]>>, "C")
logical_negation
quotient
add_call_chain(<<c,A,a>>)
logical_negation
add_call_chain(<<d,a,b>>)
int_value (13)
type_check
subtraction
generate_java_code
add_query("C", "B", <<["A", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "BOOLEAN"], ["INTEGER", "c"], ["e", "INTEGER"], ["a", "C"], ["INTEGER", "BOOLEAN"], ["a", "INTEGER"], ["d", "d"]>>, "b")
add_call_chain(<<B,c,a>>)
add_class(B)
add_query("c", "A", <<["B", "INTEGER"], ["b", "INTEGER"], ["c", "D"], ["c", "INTEGER"], ["B", "INTEGER"], ["c", "INTEGER"]>>, "C")
add_class(C)
add_command("c", "D", <<["C", "INTEGER"], ["e", "INTEGER"], ["A", "c"], ["e", "A"], ["a", "B"], ["A", "INTEGER"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["B", "BOOLEAN"]>>)
equals
add_call_chain(<<C,d,c,C>>)
add_attribute("e", "INTEGER", "INTEGER")
bool_value (true)
type_check
less_than
type_check
add_attribute("b", "B", "INTEGER")
add_attribute("D", "D", "INTEGER")
generate_java_code
numerical_negation
add_call_chain(<<B,d,e,e>>)
int_value (27)
bool_value (false)
bool_value (false)
subtraction
int_value (32)
add_query("a", "d", <<["BOOLEAN", "BOOLEAN"]>>, "C")
int_value (1)
add_class(b)
add_attribute("D", "D", "C")
add_call_chain(<<INTEGER,b,A,A,C,a,BOOLEAN,a,A>>)
numerical_negation
add_class(c)
add_query("e", "B", <<["b", "e"], ["e", "D"], ["A", "BOOLEAN"], ["D", "INTEGER"], ["BOOLEAN", "C"]>>, "B")
disjunction
numerical_negation
add_class(C)
type_check
add_attribute("D", "D", "INTEGER")
logical_negation
add_attribute("BOOLEAN", "a", "INTEGER")
add_call_chain(<<c,BOOLEAN,c,e,b>>)
type_check
add_attribute("d", "C", "INTEGER")
numerical_negation
int_value (46)
disjunction
add_query("e", "D", <<["B", "INTEGER"]>>, "a")
add_call_chain(<<d,BOOLEAN,B,b,B,D,B>>)
int_value (36)
add_class(B)
add_query("d", "C", <<["c", "BOOLEAN"], ["A", "d"], ["a", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["D", "INTEGER"], ["A", "INTEGER"]>>, "D")
greater_than
int_value (3)
numerical_negation
add_attribute("C", "c", "BOOLEAN")
add_query("B", "BOOLEAN", <<["e", "b"], ["c", "INTEGER"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["A", "INTEGER"]>>, "B")
add_class(INTEGER)
bool_value (true)
add_call_chain(<<INTEGER,D,INTEGER,a,INTEGER>>)
add_call_chain(<<B,e,c>>)
logical_negation
add_call_chain(<<BOOLEAN,e,C,d,c,d>>)
add_query("BOOLEAN", "B", <<["A", "C"], ["d", "A"], ["a", "INTEGER"], ["D", "INTEGER"], ["b", "c"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "INTEGER"]>>, "b")
add_attribute("a", "D", "INTEGER")
type_check
numerical_negation
add_class(C)
generate_java_code
int_value (26)
int_value (40)
add_call_chain(<<b>>)
bool_value (true)
conjunction
add_command("B", "e", <<["c", "BOOLEAN"], ["BOOLEAN", "A"], ["C", "INTEGER"], ["D", "INTEGER"], ["D", "INTEGER"]>>)
logical_negation
numerical_negation
add_command("INTEGER", "b", <<["d", "B"], ["B", "INTEGER"]>>)
logical_negation
equals
logical_negation
bool_value (true)
add_call_chain(<<BOOLEAN,c,C,e,C,B,A,B>>)
int_value (16)
