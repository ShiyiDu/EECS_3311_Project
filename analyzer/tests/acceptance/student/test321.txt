add_query("C", "d", <<["BOOLEAN", "C"], ["d", "INTEGER"], ["A", "C"], ["A", "INTEGER"], ["A", "BOOLEAN"]>>, "BOOLEAN")
add_class(A)
add_command("D", "D", <<["d", "D"], ["C", "INTEGER"]>>)
add_attribute("D", "B", "BOOLEAN")
numerical_negation
bool_value (true)
generate_java_code
add_command("A", "C", <<["d", "INTEGER"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["b", "INTEGER"], ["d", "C"], ["d", "BOOLEAN"], ["a", "INTEGER"]>>)
logical_negation
add_class(b)
disjunction
numerical_negation
disjunction
add_command("d", "D", <<["A", "INTEGER"], ["A", "INTEGER"], ["d", "BOOLEAN"], ["a", "A"], ["b", "BOOLEAN"], ["C", "INTEGER"], ["A", "INTEGER"], ["d", "BOOLEAN"]>>)
int_value (7)
add_attribute("A", "C", "BOOLEAN")
add_attribute("a", "INTEGER", "BOOLEAN")
generate_java_code
int_value (19)
add_call_chain(<<b,A,c,C,a,e,A,a>>)
type_check
bool_value (false)
bool_value (false)
add_attribute("C", "INTEGER", "e")
conjunction
numerical_negation
add_query("A", "c", <<["d", "BOOLEAN"], ["C", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["D", "D"]>>, "C")
logical_negation
generate_java_code
add_query("D", "D", <<["A", "INTEGER"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "c"], ["b", "BOOLEAN"]>>, "e")
add_call_chain(<<C,INTEGER,e,B>>)
add_call_chain(<<c,A>>)
bool_value (false)
int_value (19)
add_command("B", "b", <<["A", "INTEGER"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["C", "A"]>>)
add_class(c)
add_query("D", "c", <<["D", "INTEGER"], ["a", "BOOLEAN"], ["INTEGER", "B"]>>, "d")
add_attribute("A", "c", "INTEGER")
int_value (32)
logical_negation
add_call_chain(<<e,c,B,a,C>>)
generate_java_code
generate_java_code
type_check
conjunction
add_call_chain(<<BOOLEAN,e,c,B,A,A,c>>)
add_call_chain(<<B,BOOLEAN,c,b,BOOLEAN,A,c>>)
numerical_negation
add_call_chain(<<c,A,A,A,D,D>>)
logical_negation
disjunction
int_value (31)
multiplication
bool_value (true)
logical_negation
add_command("c", "C", <<["INTEGER", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "a"], ["a", "C"]>>)
add_command("A", "B", <<["B", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "A"], ["D", "INTEGER"], ["INTEGER", "INTEGER"], ["INTEGER", "BOOLEAN"], ["A", "INTEGER"], ["C", "e"], ["A", "INTEGER"]>>)
bool_value (true)
add_query("C", "c", <<["D", "BOOLEAN"], ["b", "A"], ["A", "d"]>>, "C")
multiplication
add_command("a", "A", <<["A", "INTEGER"], ["a", "INTEGER"]>>)
add_query("d", "b", <<["d", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "INTEGER"]>>, "B")
add_call_chain(<<BOOLEAN,a,BOOLEAN,A,A>>)
logical_negation
int_value (19)
add_call_chain(<<c,b,B,d,e,C>>)
add_call_chain(<<d,c,c>>)
add_call_chain(<<b,b,B,C,A,B,BOOLEAN>>)
add_attribute("INTEGER", "D", "INTEGER")
logical_negation
bool_value (true)
add_call_chain(<<e,d,a,B,A,b,B>>)
int_value (42)
logical_negation
logical_negation
int_value (29)
logical_negation
int_value (45)
bool_value (true)
bool_value (true)
disjunction
add_command("INTEGER", "b", <<["B", "e"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
generate_java_code
logical_negation
add_query("BOOLEAN", "B", <<["a", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "b"], ["BOOLEAN", "BOOLEAN"]>>, "D")
add_attribute("D", "D", "BOOLEAN")
add_query("d", "a", <<["a", "BOOLEAN"], ["C", "INTEGER"], ["e", "INTEGER"], ["C", "d"], ["b", "b"]>>, "A")
type_check
add_query("a", "c", <<["a", "INTEGER"], ["a", "BOOLEAN"], ["b", "B"], ["a", "A"], ["INTEGER", "A"]>>, "b")
add_attribute("B", "b", "INTEGER")
disjunction
numerical_negation
numerical_negation
numerical_negation
add_class(d)
add_command("C", "A", <<["a", "e"], ["BOOLEAN", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "INTEGER"]>>)
add_command("b", "b", <<["B", "A"]>>)
bool_value (true)
add_query("INTEGER", "c", <<["e", "INTEGER"], ["INTEGER", "d"], ["e", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["b", "INTEGER"], ["A", "d"]>>, "B")
add_attribute("INTEGER", "e", "A")
type_check
equals
add_query("A", "c", <<["D", "e"], ["d", "INTEGER"], ["BOOLEAN", "A"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["e", "a"], ["b", "BOOLEAN"], ["b", "BOOLEAN"]>>, "b")
add_class(C)
add_attribute("C", "d", "C")
add_command("B", "D", <<["d", "BOOLEAN"], ["d", "A"], ["D", "BOOLEAN"], ["c", "C"], ["c", "BOOLEAN"]>>)
int_value (25)
generate_java_code
add_command("C", "C", <<["C", "BOOLEAN"], ["e", "B"]>>)
add_class(a)
bool_value (true)
type_check
add_call_chain(<<c,b,e,e,A,b,c,c>>)
type_check
bool_value (false)
bool_value (true)
add_attribute("b", "C", "BOOLEAN")
add_call_chain(<<a,c,BOOLEAN,B,e,d,A,b,D>>)
add_call_chain(<<A,c,D,D>>)
add_command("b", "e", <<["D", "c"], ["C", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "INTEGER"]>>)
type_check
less_than
greater_than
greater_than
less_than
int_value (5)
add_call_chain(<<c,d>>)
add_query("D", "C", <<["b", "INTEGER"], ["C", "d"], ["INTEGER", "BOOLEAN"], ["C", "INTEGER"], ["D", "INTEGER"]>>, "a")
add_command("d", "d", <<["BOOLEAN", "BOOLEAN"], ["A", "D"], ["a", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["B", "C"]>>)
generate_java_code
int_value (13)
bool_value (true)
generate_java_code
generate_java_code
bool_value (true)
add_attribute("D", "D", "INTEGER")
bool_value (true)
bool_value (false)
add_attribute("b", "C", "B")
bool_value (false)
add_query("B", "D", <<["e", "INTEGER"], ["C", "INTEGER"], ["BOOLEAN", "INTEGER"], ["a", "a"], ["A", "INTEGER"], ["e", "c"], ["b", "BOOLEAN"], ["A", "INTEGER"], ["BOOLEAN", "A"]>>, "D")
logical_negation
conjunction
logical_negation
type_check
add_attribute("B", "C", "INTEGER")
logical_negation
bool_value (false)
greater_than
add_attribute("d", "A", "BOOLEAN")
add_query("d", "D", <<["C", "INTEGER"], ["C", "B"]>>, "c")
add_command("e", "B", <<["A", "INTEGER"], ["e", "BOOLEAN"]>>)
add_class(D)
add_attribute("e", "D", "D")
add_call_chain(<<B,D,C,C,e,INTEGER>>)
add_call_chain(<<b,B,c>>)
add_command("d", "C", <<["B", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "INTEGER"], ["B", "e"], ["D", "INTEGER"], ["a", "INTEGER"]>>)
disjunction
add_call_chain(<<b,B,C,B,C,c>>)
logical_negation
add_command("b", "d", <<["c", "INTEGER"], ["C", "BOOLEAN"], ["a", "B"], ["C", "INTEGER"], ["e", "BOOLEAN"], ["C", "C"], ["C", "BOOLEAN"], ["B", "BOOLEAN"]>>)
numerical_negation
int_value (22)
add_command("d", "a", <<["INTEGER", "d"], ["d", "C"], ["C", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "D"], ["d", "c"], ["c", "BOOLEAN"]>>)
add_call_chain(<<d,c,a,b,BOOLEAN>>)
bool_value (false)
numerical_negation
add_query("C", "c", <<["B", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "d"]>>, "D")
int_value (35)
add_attribute("B", "a", "c")
generate_java_code
modulo
add_query("INTEGER", "A", <<["B", "a"], ["C", "INTEGER"], ["d", "A"], ["c", "INTEGER"], ["C", "BOOLEAN"], ["b", "A"], ["d", "c"], ["D", "INTEGER"]>>, "b")
add_query("c", "d", <<["e", "A"], ["D", "INTEGER"], ["d", "INTEGER"], ["A", "INTEGER"], ["C", "INTEGER"]>>, "A")
add_command("b", "A", <<["C", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["b", "BOOLEAN"], ["a", "BOOLEAN"]>>)
add_attribute("B", "e", "BOOLEAN")
bool_value (false)
add_query("BOOLEAN", "A", <<["d", "BOOLEAN"], ["d", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "e"], ["C", "INTEGER"], ["a", "INTEGER"], ["b", "e"], ["d", "A"], ["e", "d"]>>, "d")
add_command("B", "b", <<["C", "b"], ["d", "INTEGER"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["D", "BOOLEAN"]>>)
add_query("BOOLEAN", "A", <<["A", "INTEGER"], ["d", "BOOLEAN"], ["A", "INTEGER"], ["b", "INTEGER"], ["A", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["c", "BOOLEAN"]>>, "B")
logical_negation
int_value (43)
int_value (47)
conjunction
add_query("C", "C", <<["INTEGER", "INTEGER"], ["c", "e"], ["a", "BOOLEAN"], ["c", "BOOLEAN"], ["c", "C"], ["e", "BOOLEAN"], ["D", "INTEGER"], ["BOOLEAN", "D"]>>, "d")
add_command("A", "D", <<["A", "D"], ["c", "INTEGER"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["C", "INTEGER"], ["D", "INTEGER"], ["d", "BOOLEAN"], ["C", "D"], ["d", "INTEGER"]>>)
add_command("a", "B", <<["e", "BOOLEAN"], ["c", "INTEGER"], ["A", "A"], ["D", "d"], ["A", "D"], ["A", "BOOLEAN"], ["e", "INTEGER"], ["A", "c"], ["e", "INTEGER"]>>)
add_query("c", "a", <<["D", "BOOLEAN"], ["A", "e"], ["D", "BOOLEAN"], ["D", "B"], ["C", "BOOLEAN"]>>, "C")
generate_java_code
logical_negation
numerical_negation
modulo
add_attribute("D", "A", "INTEGER")
add_command("B", "d", <<["INTEGER", "INTEGER"], ["c", "INTEGER"]>>)
add_query("b", "BOOLEAN", <<["D", "INTEGER"], ["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"], ["b", "BOOLEAN"], ["d", "B"], ["c", "BOOLEAN"], ["c", "INTEGER"], ["A", "INTEGER"]>>, "B")
add_query("e", "c", <<["B", "INTEGER"], ["a", "c"], ["d", "D"]>>, "B")
add_class(BOOLEAN)
add_attribute("A", "A", "INTEGER")
int_value (32)
add_attribute("INTEGER", "BOOLEAN", "BOOLEAN")
bool_value (true)
add_attribute("c", "e", "e")
add_query("b", "D", <<["A", "b"], ["A", "INTEGER"]>>, "A")
int_value (4)
numerical_negation
add_command("a", "D", <<["C", "INTEGER"], ["c", "BOOLEAN"], ["B", "BOOLEAN"]>>)
add_call_chain(<<D,C,a,D,D,C,b,D,C>>)
disjunction
quotient
bool_value (true)
add_attribute("b", "D", "INTEGER")
add_call_chain(<<c,c,B,C,INTEGER>>)
generate_java_code
add_class(e)
multiplication
add_class(BOOLEAN)
logical_negation
add_command("C", "BOOLEAN", <<["B", "BOOLEAN"], ["D", "INTEGER"], ["a", "BOOLEAN"]>>)
add_attribute("e", "C", "INTEGER")
int_value (18)
add_call_chain(<<e,a,C,D>>)
conjunction
logical_negation
conjunction
generate_java_code
add_call_chain(<<INTEGER,c,C,D,C,d>>)
add_command("b", "INTEGER", <<["A", "INTEGER"], ["A", "c"], ["INTEGER", "BOOLEAN"], ["e", "d"], ["BOOLEAN", "BOOLEAN"]>>)
numerical_negation
subtraction
add_call_chain(<<A,c,C,A,c,B,B,d>>)
add_query("b", "e", <<["a", "BOOLEAN"], ["INTEGER", "INTEGER"], ["c", "INTEGER"], ["b", "INTEGER"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["B", "c"]>>, "B")
bool_value (false)
add_attribute("B", "a", "BOOLEAN")
bool_value (false)
add_attribute("c", "C", "INTEGER")
add_attribute("INTEGER", "A", "A")
add_call_chain(<<d,A,C>>)
add_call_chain(<<C,b,e,B,C,B,b,BOOLEAN>>)
add_class(c)
add_command("C", "B", <<["D", "INTEGER"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["A", "A"], ["C", "INTEGER"], ["e", "BOOLEAN"], ["e", "INTEGER"], ["d", "INTEGER"], ["c", "BOOLEAN"]>>)
add_call_chain(<<C,c,e,e,e>>)
add_query("D", "C", <<["e", "BOOLEAN"], ["C", "INTEGER"], ["A", "e"], ["a", "INTEGER"], ["A", "INTEGER"], ["BOOLEAN", "INTEGER"]>>, "a")
add_attribute("C", "c", "e")
add_attribute("C", "A", "D")
add_call_chain(<<D,d>>)
logical_negation
