type_check
logical_negation
bool_value (false)
bool_value (true)
add_query("b", "C", <<["C", "INTEGER"], ["a", "INTEGER"], ["d", "INTEGER"], ["e", "INTEGER"]>>, "B")
add_call_chain(<<BOOLEAN,c,B>>)
numerical_negation
greater_than
modulo
type_check
add_attribute("d", "D", "INTEGER")
bool_value (true)
add_query("e", "C", <<["e", "INTEGER"], ["b", "BOOLEAN"], ["B", "BOOLEAN"], ["BOOLEAN", "B"], ["A", "BOOLEAN"], ["D", "BOOLEAN"]>>, "A")
bool_value (false)
add_class(C)
add_call_chain(<<INTEGER>>)
bool_value (false)
add_call_chain(<<B,d,d,b>>)
add_command("BOOLEAN", "A", <<["D", "BOOLEAN"], ["A", "B"]>>)
generate_java_code
add_query("a", "INTEGER", <<["C", "BOOLEAN"], ["A", "INTEGER"], ["a", "BOOLEAN"], ["D", "A"], ["b", "c"], ["a", "b"], ["BOOLEAN", "INTEGER"]>>, "C")
type_check
logical_negation
logical_negation
add_command("C", "A", <<["c", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "INTEGER"], ["a", "INTEGER"], ["d", "INTEGER"]>>)
type_check
bool_value (false)
add_call_chain(<<C,D,a,C,D,C,C,D,B>>)
numerical_negation
less_than
add_query("A", "B", <<["D", "BOOLEAN"], ["a", "INTEGER"], ["b", "INTEGER"], ["c", "INTEGER"], ["d", "INTEGER"], ["e", "INTEGER"]>>, "D")
add_command("A", "BOOLEAN", <<["c", "BOOLEAN"]>>)
add_attribute("a", "a", "INTEGER")
int_value (13)
add_attribute("C", "C", "A")
int_value (25)
logical_negation
logical_negation
generate_java_code
add_call_chain(<<e,INTEGER,C>>)
int_value (7)
add_call_chain(<<a,C,A>>)
int_value (49)
numerical_negation
int_value (21)
int_value (42)
int_value (41)
type_check
logical_negation
less_than
add_call_chain(<<C,INTEGER>>)
add_call_chain(<<D,C,b,e,a,B,d>>)
subtraction
add_command("BOOLEAN", "B", <<["A", "BOOLEAN"], ["C", "BOOLEAN"], ["INTEGER", "INTEGER"], ["INTEGER", "BOOLEAN"], ["c", "INTEGER"], ["B", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "b"], ["B", "INTEGER"]>>)
add_attribute("c", "d", "BOOLEAN")
conjunction
add_command("A", "C", <<["A", "INTEGER"], ["INTEGER", "INTEGER"], ["c", "INTEGER"]>>)
logical_negation
add_call_chain(<<A,A>>)
add_attribute("A", "B", "B")
conjunction
add_call_chain(<<C,C,A,d,C,d,D,D>>)
int_value (30)
add_call_chain(<<D,d,c,e>>)
add_query("D", "A", <<["C", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "A"], ["d", "d"]>>, "B")
add_query("D", "b", <<["b", "A"], ["A", "INTEGER"]>>, "b")
disjunction
bool_value (true)
int_value (38)
bool_value (true)
bool_value (false)
bool_value (false)
add_class(C)
conjunction
generate_java_code
add_command("A", "A", <<["D", "BOOLEAN"], ["D", "INTEGER"], ["D", "INTEGER"], ["A", "BOOLEAN"]>>)
add_class(C)
add_query("e", "D", <<["e", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["D", "INTEGER"], ["B", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>, "b")
disjunction
generate_java_code
add_class(d)
int_value (40)
add_class(d)
add_call_chain(<<D,d>>)
add_command("b", "b", <<["e", "d"], ["e", "b"], ["C", "INTEGER"], ["c", "INTEGER"], ["b", "INTEGER"], ["INTEGER", "c"], ["c", "D"]>>)
type_check
logical_negation
int_value (46)
int_value (34)
add_query("A", "D", <<["c", "INTEGER"], ["C", "BOOLEAN"]>>, "d")
bool_value (true)
add_command("BOOLEAN", "c", <<["d", "INTEGER"]>>)
add_attribute("A", "d", "BOOLEAN")
int_value (9)
add_command("b", "e", <<["INTEGER", "BOOLEAN"], ["b", "INTEGER"], ["b", "INTEGER"], ["BOOLEAN", "INTEGER"], ["e", "INTEGER"], ["D", "BOOLEAN"]>>)
add_call_chain(<<INTEGER,INTEGER,c>>)
add_attribute("a", "C", "BOOLEAN")
multiplication
add_query("INTEGER", "D", <<["e", "b"], ["c", "a"]>>, "b")
type_check
add_attribute("D", "C", "BOOLEAN")
add_attribute("a", "a", "INTEGER")
type_check
add_class(c)
add_attribute("D", "C", "INTEGER")
numerical_negation
add_query("C", "BOOLEAN", <<["d", "INTEGER"], ["e", "INTEGER"]>>, "a")
conjunction
add_command("BOOLEAN", "c", <<["C", "A"]>>)
modulo
generate_java_code
add_call_chain(<<C,B,d,e,C>>)
subtraction
int_value (27)
int_value (12)
logical_negation
add_call_chain(<<a,A,a>>)
type_check
add_attribute("BOOLEAN", "INTEGER", "BOOLEAN")
add_query("d", "b", <<["d", "BOOLEAN"], ["c", "BOOLEAN"], ["a", "c"], ["A", "INTEGER"], ["b", "b"], ["a", "INTEGER"], ["C", "b"]>>, "e")
disjunction
add_command("d", "e", <<["C", "INTEGER"], ["c", "BOOLEAN"]>>)
add_query("d", "d", <<["c", "INTEGER"], ["B", "INTEGER"], ["INTEGER", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "INTEGER"]>>, "A")
add_call_chain(<<b,b,A,A,a,d,b,D>>)
add_command("C", "a", <<["B", "INTEGER"], ["A", "e"], ["c", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["C", "BOOLEAN"]>>)
conjunction
int_value (46)
bool_value (false)
add_attribute("a", "B", "INTEGER")
add_query("c", "D", <<["b", "INTEGER"], ["a", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "C"]>>, "d")
add_command("B", "d", <<["B", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["B", "INTEGER"], ["a", "INTEGER"]>>)
logical_negation
add_call_chain(<<D,b,d,D,e>>)
add_call_chain(<<B,B,B,B,d,INTEGER>>)
type_check
add_command("A", "b", <<["d", "BOOLEAN"], ["c", "A"], ["C", "BOOLEAN"], ["A", "C"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["d", "BOOLEAN"]>>)
disjunction
disjunction
add_call_chain(<<A,D,e,B,a,A>>)
add_class(e)
greater_than
generate_java_code
int_value (4)
bool_value (false)
bool_value (false)
add_query("A", "e", <<["D", "INTEGER"], ["a", "INTEGER"], ["b", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "C"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["C", "a"], ["INTEGER", "BOOLEAN"]>>, "INTEGER")
add_command("C", "c", <<["C", "INTEGER"], ["INTEGER", "INTEGER"], ["d", "BOOLEAN"], ["B", "INTEGER"], ["e", "INTEGER"], ["A", "c"]>>)
add_command("C", "d", <<["A", "B"], ["A", "INTEGER"], ["e", "BOOLEAN"], ["C", "B"], ["B", "BOOLEAN"]>>)
add_command("D", "d", <<["c", "INTEGER"], ["e", "BOOLEAN"], ["A", "BOOLEAN"]>>)
add_attribute("INTEGER", "D", "B")
add_command("A", "BOOLEAN", <<["A", "b"], ["D", "BOOLEAN"], ["INTEGER", "c"], ["c", "INTEGER"]>>)
numerical_negation
add_call_chain(<<C,A,C,e,C>>)
conjunction
add_call_chain(<<e,b,D,D,a,C>>)
add_class(d)
logical_negation
generate_java_code
add_attribute("D", "C", "BOOLEAN")
int_value (14)
quotient
generate_java_code
add_call_chain(<<e,INTEGER,d,d,C,A>>)
add_query("A", "B", <<["b", "INTEGER"], ["C", "BOOLEAN"]>>, "e")
less_than
int_value (47)
add_call_chain(<<e,d,e>>)
add_query("B", "C", <<["a", "INTEGER"], ["c", "INTEGER"], ["c", "BOOLEAN"], ["c", "C"]>>, "A")
add_class(A)
bool_value (true)
multiplication
add_query("a", "B", <<["a", "e"], ["A", "BOOLEAN"], ["A", "INTEGER"], ["d", "BOOLEAN"], ["c", "C"], ["C", "INTEGER"]>>, "a")
add_query("d", "C", <<["A", "A"], ["A", "INTEGER"]>>, "e")
equals
add_call_chain(<<e>>)
int_value (4)
add_attribute("b", "B", "A")
type_check
logical_negation
add_query("a", "A", <<["B", "INTEGER"]>>, "B")
conjunction
add_call_chain(<<c,C,BOOLEAN,A,b,B,C,A,A>>)
add_class(c)
add_query("d", "C", <<["a", "BOOLEAN"], ["d", "B"]>>, "d")
type_check
add_command("D", "c", <<["b", "INTEGER"], ["C", "B"], ["B", "BOOLEAN"], ["b", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>)
numerical_negation
less_than
add_attribute("C", "A", "INTEGER")
add_query("d", "a", <<["e", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["C", "D"], ["b", "c"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["INTEGER", "INTEGER"]>>, "B")
add_call_chain(<<a,d,d,C,B,BOOLEAN>>)
equals
add_command("d", "d", <<["A", "INTEGER"], ["a", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "INTEGER"], ["a", "e"], ["A", "BOOLEAN"], ["D", "INTEGER"]>>)
generate_java_code
add_call_chain(<<d,BOOLEAN,A>>)
bool_value (true)
multiplication
add_attribute("e", "c", "BOOLEAN")
add_call_chain(<<e,C,INTEGER,b,D,D,D,B>>)
add_call_chain(<<D,a,b,B,c,A>>)
bool_value (false)
add_query("c", "b", <<["D", "C"], ["INTEGER", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["INTEGER", "B"], ["d", "C"], ["B", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "A"]>>, "e")
add_query("C", "e", <<["e", "INTEGER"], ["D", "b"], ["c", "B"], ["d", "A"], ["INTEGER", "B"], ["d", "BOOLEAN"]>>, "D")
bool_value (false)
int_value (35)
numerical_negation
int_value (36)
add_call_chain(<<D,c,A>>)
less_than
bool_value (false)
generate_java_code
add_call_chain(<<B,c,d,c,d,b,A,B,d>>)
bool_value (true)
modulo
multiplication
type_check
add_command("A", "A", <<["C", "C"], ["C", "a"], ["B", "BOOLEAN"], ["D", "e"], ["INTEGER", "BOOLEAN"], ["B", "INTEGER"]>>)
bool_value (true)
add_call_chain(<<B,c,A,a,B,e>>)
add_call_chain(<<e,C,D,B,B,C,BOOLEAN,B,e>>)
add_attribute("BOOLEAN", "e", "INTEGER")
bool_value (true)
add_attribute("c", "D", "INTEGER")
add_query("d", "B", <<["A", "INTEGER"], ["a", "INTEGER"], ["b", "BOOLEAN"], ["b", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["a", "c"], ["INTEGER", "INTEGER"]>>, "c")
logical_negation
logical_negation
add_query("b", "BOOLEAN", <<["D", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["a", "BOOLEAN"], ["A", "D"], ["B", "B"]>>, "D")
add_query("c", "D", <<["A", "BOOLEAN"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["b", "D"], ["INTEGER", "BOOLEAN"], ["A", "C"], ["a", "BOOLEAN"]>>, "b")
bool_value (false)
type_check
add_call_chain(<<B,d,d>>)
