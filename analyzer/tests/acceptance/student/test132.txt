conjunction
numerical_negation
logical_negation
type_check
add_command("B", "b", <<["INTEGER", "BOOLEAN"], ["b", "INTEGER"], ["d", "INTEGER"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["C", "INTEGER"]>>)
logical_negation
multiplication
add_command("d", "C", <<["D", "D"], ["C", "INTEGER"], ["a", "INTEGER"], ["D", "e"], ["B", "BOOLEAN"], ["A", "C"], ["D", "B"], ["B", "INTEGER"], ["INTEGER", "INTEGER"]>>)
add_call_chain(<<C>>)
add_query("c", "C", <<["e", "INTEGER"], ["b", "d"], ["A", "INTEGER"], ["e", "c"], ["INTEGER", "BOOLEAN"], ["c", "INTEGER"]>>, "D")
add_query("B", "D", <<["D", "d"], ["d", "INTEGER"], ["d", "INTEGER"], ["c", "BOOLEAN"], ["B", "INTEGER"]>>, "B")
add_class(a)
add_call_chain(<<d,A>>)
int_value (1)
add_command("INTEGER", "a", <<["C", "INTEGER"], ["b", "BOOLEAN"], ["D", "INTEGER"], ["a", "BOOLEAN"], ["D", "INTEGER"], ["c", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "B"]>>)
add_query("d", "c", <<["C", "BOOLEAN"], ["A", "INTEGER"], ["D", "INTEGER"], ["d", "BOOLEAN"]>>, "b")
int_value (32)
type_check
bool_value (true)
add_query("C", "INTEGER", <<["D", "e"], ["B", "BOOLEAN"], ["c", "BOOLEAN"]>>, "a")
type_check
bool_value (false)
type_check
add_call_chain(<<b,INTEGER,B,INTEGER,b,A,B,A,e>>)
generate_java_code
less_than
add_call_chain(<<b,b,a,A,c,BOOLEAN,C>>)
add_call_chain(<<B>>)
add_attribute("d", "D", "d")
logical_negation
disjunction
less_than
add_call_chain(<<D,b,A,A,C>>)
bool_value (false)
int_value (47)
type_check
add_call_chain(<<a,b,A,INTEGER,B,a,A>>)
add_call_chain(<<e,A,BOOLEAN>>)
bool_value (true)
add_call_chain(<<C,D,D,A>>)
add_attribute("C", "d", "INTEGER")
logical_negation
bool_value (false)
type_check
logical_negation
add_call_chain(<<a,B,b>>)
numerical_negation
logical_negation
generate_java_code
add_query("INTEGER", "A", <<["C", "INTEGER"]>>, "A")
add_call_chain(<<b,A,a,B,e,C>>)
add_call_chain(<<B,B,D>>)
logical_negation
add_query("INTEGER", "C", <<["B", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["A", "INTEGER"], ["B", "INTEGER"], ["d", "c"]>>, "c")
add_query("e", "A", <<["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "C"], ["d", "INTEGER"], ["B", "B"]>>, "D")
numerical_negation
add_class(a)
add_call_chain(<<c>>)
type_check
add_call_chain(<<B,A,A,d,e>>)
logical_negation
add_query("BOOLEAN", "c", <<["b", "INTEGER"]>>, "d")
int_value (17)
conjunction
add_command("D", "d", <<["A", "INTEGER"]>>)
int_value (44)
add_attribute("b", "INTEGER", "BOOLEAN")
add_query("D", "a", <<["B", "INTEGER"], ["b", "B"], ["C", "B"], ["INTEGER", "INTEGER"], ["B", "BOOLEAN"], ["c", "INTEGER"], ["d", "BOOLEAN"]>>, "A")
type_check
add_query("BOOLEAN", "B", <<["C", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["d", "a"], ["C", "INTEGER"]>>, "C")
add_attribute("A", "D", "BOOLEAN")
add_call_chain(<<D,INTEGER,a,c,C,B,BOOLEAN>>)
add_class(B)
type_check
add_call_chain(<<C,C,a,d,BOOLEAN,INTEGER,A,D>>)
numerical_negation
numerical_negation
add_call_chain(<<D,B,c,C,INTEGER,A,C>>)
add_attribute("c", "B", "INTEGER")
add_call_chain(<<a,c,d,e>>)
int_value (26)
add_command("c", "A", <<["D", "INTEGER"]>>)
numerical_negation
less_than
logical_negation
add_class(b)
bool_value (true)
add_call_chain(<<c>>)
add_class(C)
add_call_chain(<<BOOLEAN,c,D>>)
bool_value (true)
logical_negation
add_call_chain(<<INTEGER,BOOLEAN,C,d,INTEGER,INTEGER,A,c,b>>)
equals
logical_negation
numerical_negation
type_check
add_attribute("A", "b", "a")
int_value (42)
add_call_chain(<<a,B,c,B,e,A>>)
add_class(D)
bool_value (false)
equals
int_value (40)
add_attribute("a", "B", "INTEGER")
add_command("BOOLEAN", "e", <<["B", "e"], ["c", "C"], ["B", "INTEGER"], ["d", "b"], ["D", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "BOOLEAN"], ["e", "a"]>>)
type_check
addition
add_command("c", "A", <<["C", "INTEGER"], ["c", "INTEGER"], ["c", "B"], ["e", "INTEGER"], ["c", "c"], ["c", "c"], ["D", "e"], ["C", "INTEGER"], ["C", "INTEGER"]>>)
greater_than
add_command("C", "BOOLEAN", <<["a", "d"], ["d", "BOOLEAN"], ["B", "c"], ["c", "BOOLEAN"]>>)
subtraction
bool_value (true)
generate_java_code
add_command("D", "A", <<["B", "c"], ["BOOLEAN", "BOOLEAN"], ["c", "BOOLEAN"], ["e", "INTEGER"], ["C", "BOOLEAN"]>>)
add_command("a", "e", <<["B", "B"], ["e", "INTEGER"], ["D", "BOOLEAN"], ["c", "INTEGER"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["B", "D"], ["A", "INTEGER"]>>)
add_class(e)
modulo
logical_negation
type_check
add_call_chain(<<C,e,B,D,BOOLEAN,B,B,d,D>>)
add_query("B", "D", <<["A", "INTEGER"]>>, "d")
add_call_chain(<<C,d,C,A,D>>)
conjunction
bool_value (true)
add_attribute("D", "D", "e")
add_command("b", "d", <<["d", "d"], ["a", "BOOLEAN"], ["e", "INTEGER"]>>)
add_call_chain(<<B,a,a>>)
bool_value (true)
generate_java_code
add_attribute("BOOLEAN", "b", "BOOLEAN")
add_query("A", "e", <<["e", "d"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["e", "INTEGER"]>>, "B")
add_command("a", "c", <<["b", "INTEGER"], ["d", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["C", "INTEGER"], ["D", "INTEGER"]>>)
add_call_chain(<<INTEGER,A,B,A,d>>)
add_attribute("c", "C", "INTEGER")
int_value (45)
add_attribute("e", "D", "BOOLEAN")
add_attribute("e", "C", "BOOLEAN")
bool_value (false)
bool_value (true)
generate_java_code
add_call_chain(<<B,a,d,C,a,b>>)
add_query("C", "A", <<["c", "d"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "a"], ["B", "d"], ["e", "D"]>>, "INTEGER")
numerical_negation
add_class(D)
add_query("b", "a", <<["C", "INTEGER"], ["D", "c"], ["c", "INTEGER"], ["a", "INTEGER"], ["a", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "d"], ["D", "INTEGER"]>>, "C")
add_class(a)
logical_negation
generate_java_code
logical_negation
less_than
add_call_chain(<<b,e,d>>)
add_query("C", "e", <<["INTEGER", "INTEGER"], ["c", "INTEGER"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["D", "INTEGER"]>>, "d")
type_check
bool_value (false)
bool_value (false)
type_check
add_attribute("e", "b", "INTEGER")
add_query("a", "C", <<["INTEGER", "A"], ["d", "B"], ["d", "INTEGER"], ["e", "BOOLEAN"], ["a", "INTEGER"], ["b", "BOOLEAN"], ["b", "BOOLEAN"], ["d", "D"], ["d", "BOOLEAN"]>>, "b")
type_check
add_call_chain(<<BOOLEAN,A,b,b>>)
add_command("b", "D", <<["C", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["BOOLEAN", "A"], ["b", "INTEGER"], ["D", "INTEGER"], ["d", "INTEGER"]>>)
add_query("c", "C", <<["B", "INTEGER"], ["C", "BOOLEAN"], ["B", "INTEGER"], ["e", "INTEGER"], ["c", "INTEGER"], ["BOOLEAN", "INTEGER"], ["B", "c"]>>, "a")
type_check
add_query("C", "a", <<["B", "BOOLEAN"], ["A", "d"], ["b", "INTEGER"], ["c", "A"], ["d", "BOOLEAN"]>>, "A")
disjunction
disjunction
quotient
int_value (33)
bool_value (false)
bool_value (false)
logical_negation
logical_negation
bool_value (true)
int_value (9)
add_call_chain(<<C,B>>)
numerical_negation
int_value (19)
equals
type_check
int_value (49)
type_check
logical_negation
add_command("e", "C", <<["BOOLEAN", "A"], ["a", "INTEGER"], ["A", "INTEGER"], ["c", "INTEGER"], ["c", "e"], ["BOOLEAN", "D"], ["a", "B"]>>)
int_value (43)
add_attribute("D", "B", "D")
numerical_negation
add_query("b", "B", <<["e", "BOOLEAN"], ["c", "c"], ["a", "BOOLEAN"], ["A", "INTEGER"], ["INTEGER", "INTEGER"], ["c", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["C", "c"]>>, "e")
greater_than
disjunction
add_query("D", "B", <<["BOOLEAN", "c"], ["c", "INTEGER"], ["D", "BOOLEAN"]>>, "d")
add_command("a", "D", <<["d", "BOOLEAN"]>>)
add_attribute("B", "B", "e")
int_value (48)
int_value (41)
add_call_chain(<<D,c,c,C,a,b,B>>)
int_value (7)
less_than
add_call_chain(<<C,A,c,B>>)
add_query("B", "B", <<["C", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "c"], ["b", "INTEGER"], ["B", "B"], ["c", "a"]>>, "D")
bool_value (false)
add_call_chain(<<C,BOOLEAN>>)
add_query("INTEGER", "A", <<["b", "INTEGER"], ["a", "c"], ["A", "D"], ["e", "INTEGER"]>>, "A")
add_call_chain(<<D,b,D,e,a,e,B,A>>)
add_command("D", "B", <<["d", "BOOLEAN"], ["e", "INTEGER"], ["e", "INTEGER"], ["D", "INTEGER"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["d", "c"], ["B", "c"]>>)
add_attribute("A", "c", "INTEGER")
quotient
add_class(e)
add_command("e", "D", <<["B", "C"]>>)
bool_value (false)
modulo
add_call_chain(<<C,BOOLEAN,b,D,INTEGER>>)
add_call_chain(<<e,c,INTEGER,a,c,INTEGER,d,B>>)
add_query("INTEGER", "c", <<["INTEGER", "d"], ["C", "C"], ["B", "B"], ["a", "INTEGER"], ["B", "INTEGER"]>>, "a")
add_command("D", "BOOLEAN", <<["e", "INTEGER"], ["A", "BOOLEAN"]>>)
logical_negation
add_command("C", "INTEGER", <<["C", "e"], ["C", "INTEGER"]>>)
int_value (31)
logical_negation
add_command("d", "a", <<["b", "A"]>>)
logical_negation
add_call_chain(<<D,c,C,D,D,D>>)
add_call_chain(<<BOOLEAN,b,C,D,C,e,C,d,B>>)
bool_value (false)
conjunction
disjunction
int_value (37)
add_call_chain(<<B,D,A,D,a>>)
numerical_negation
logical_negation
add_command("C", "INTEGER", <<["a", "C"], ["b", "INTEGER"], ["c", "INTEGER"], ["D", "INTEGER"], ["B", "BOOLEAN"]>>)
add_call_chain(<<e>>)
add_query("BOOLEAN", "C", <<["e", "INTEGER"], ["c", "BOOLEAN"]>>, "d")
add_call_chain(<<a,INTEGER>>)
add_query("C", "e", <<["a", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "e"]>>, "e")
generate_java_code
int_value (6)
logical_negation
type_check
add_query("A", "b", <<["D", "C"], ["a", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "INTEGER"], ["C", "b"]>>, "C")
numerical_negation
bool_value (false)
generate_java_code
numerical_negation
disjunction
numerical_negation
add_attribute("C", "b", "D")
add_class(e)
add_query("D", "D", <<["C", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["INTEGER", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["BOOLEAN", "c"]>>, "e")
add_query("C", "b", <<["C", "BOOLEAN"], ["e", "INTEGER"], ["A", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "INTEGER"]>>, "c")
add_attribute("B", "c", "B")
int_value (22)
bool_value (false)
add_attribute("BOOLEAN", "a", "e")
int_value (21)
modulo
type_check
type_check
add_call_chain(<<B,c,e>>)
add_query("C", "e", <<["c", "BOOLEAN"], ["C", "BOOLEAN"], ["BOOLEAN", "A"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["B", "d"], ["d", "INTEGER"], ["D", "BOOLEAN"]>>, "c")
add_call_chain(<<e,INTEGER,c,e,d,a,d,INTEGER>>)
numerical_negation
add_query("A", "e", <<["A", "INTEGER"], ["INTEGER", "BOOLEAN"], ["b", "INTEGER"], ["c", "INTEGER"], ["B", "BOOLEAN"], ["d", "e"]>>, "e")
add_call_chain(<<a>>)
