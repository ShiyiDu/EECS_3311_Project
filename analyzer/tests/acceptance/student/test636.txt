add_attribute("e", "A", "BOOLEAN")
int_value (32)
add_class(C)
type_check
add_class(c)
logical_negation
generate_java_code
add_call_chain(<<B,A>>)
generate_java_code
add_call_chain(<<C,a,a,c>>)
add_attribute("c", "b", "INTEGER")
generate_java_code
add_query("b", "C", <<["c", "INTEGER"], ["a", "B"], ["C", "BOOLEAN"]>>, "d")
add_call_chain(<<BOOLEAN,C,c,B,C>>)
greater_than
logical_negation
add_attribute("d", "A", "BOOLEAN")
int_value (14)
add_attribute("INTEGER", "B", "BOOLEAN")
modulo
logical_negation
add_command("C", "INTEGER", <<["C", "e"]>>)
int_value (39)
greater_than
add_call_chain(<<INTEGER,B>>)
add_query("a", "b", <<["a", "BOOLEAN"], ["C", "INTEGER"], ["d", "INTEGER"], ["B", "BOOLEAN"], ["A", "A"], ["a", "BOOLEAN"], ["e", "INTEGER"], ["c", "INTEGER"]>>, "C")
add_class(c)
add_call_chain(<<c,D,b,INTEGER,a,d,A,A,C>>)
add_command("d", "a", <<["a", "INTEGER"], ["B", "B"], ["D", "INTEGER"], ["e", "INTEGER"], ["c", "INTEGER"], ["INTEGER", "INTEGER"], ["b", "INTEGER"]>>)
bool_value (true)
type_check
add_call_chain(<<D,INTEGER>>)
type_check
type_check
add_attribute("c", "e", "BOOLEAN")
type_check
add_command("b", "c", <<["a", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["e", "BOOLEAN"], ["INTEGER", "INTEGER"], ["c", "BOOLEAN"], ["e", "BOOLEAN"], ["d", "BOOLEAN"], ["INTEGER", "a"], ["A", "INTEGER"]>>)
add_call_chain(<<D,c,A,B,A>>)
int_value (19)
add_command("d", "a", <<["e", "INTEGER"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["B", "b"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["C", "D"]>>)
add_attribute("D", "D", "B")
add_command("B", "B", <<["e", "A"], ["A", "BOOLEAN"], ["d", "INTEGER"], ["B", "a"]>>)
add_call_chain(<<C,B,e,c,D,D>>)
add_attribute("e", "D", "BOOLEAN")
logical_negation
add_class(B)
multiplication
add_attribute("BOOLEAN", "a", "BOOLEAN")
int_value (5)
int_value (43)
add_query("d", "C", <<["D", "BOOLEAN"], ["b", "INTEGER"], ["B", "B"], ["A", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "BOOLEAN"]>>, "B")
addition
generate_java_code
generate_java_code
add_query("a", "a", <<["b", "INTEGER"], ["c", "c"], ["d", "BOOLEAN"], ["b", "INTEGER"], ["d", "d"], ["BOOLEAN", "INTEGER"]>>, "c")
add_query("b", "C", <<["INTEGER", "BOOLEAN"], ["B", "INTEGER"], ["INTEGER", "INTEGER"]>>, "a")
add_attribute("B", "A", "C")
int_value (37)
int_value (44)
modulo
add_call_chain(<<D,A,C,C>>)
add_command("A", "b", <<["A", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "b"], ["C", "INTEGER"], ["C", "C"], ["D", "INTEGER"], ["B", "BOOLEAN"]>>)
add_query("c", "b", <<["B", "INTEGER"], ["a", "d"], ["C", "INTEGER"], ["c", "c"], ["D", "INTEGER"], ["b", "C"], ["a", "d"], ["e", "C"], ["c", "D"]>>, "a")
logical_negation
add_attribute("BOOLEAN", "b", "BOOLEAN")
add_class(A)
int_value (33)
bool_value (true)
logical_negation
bool_value (false)
greater_than
add_query("d", "e", <<["D", "INTEGER"]>>, "C")
bool_value (false)
add_command("c", "a", <<["b", "INTEGER"], ["a", "C"], ["D", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "D"], ["b", "BOOLEAN"], ["c", "e"], ["C", "INTEGER"], ["c", "C"]>>)
add_query("A", "C", <<["c", "INTEGER"]>>, "d")
add_call_chain(<<B,d,e,A,d,a,INTEGER,e>>)
quotient
add_attribute("C", "e", "INTEGER")
add_query("a", "d", <<["e", "INTEGER"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["c", "BOOLEAN"], ["d", "INTEGER"], ["D", "BOOLEAN"]>>, "A")
quotient
type_check
add_call_chain(<<INTEGER,D,b,BOOLEAN,b>>)
less_than
int_value (5)
bool_value (false)
add_call_chain(<<D,c,a>>)
add_call_chain(<<a,c,a,C,c,C>>)
logical_negation
int_value (27)
add_attribute("a", "D", "INTEGER")
int_value (34)
add_call_chain(<<e,D,A,b,d,B,b>>)
less_than
equals
bool_value (false)
quotient
generate_java_code
less_than
add_query("b", "b", <<["A", "INTEGER"], ["b", "BOOLEAN"], ["e", "INTEGER"], ["e", "BOOLEAN"], ["D", "D"], ["D", "A"], ["C", "INTEGER"], ["C", "INTEGER"]>>, "A")
add_call_chain(<<c,a,INTEGER,b>>)
bool_value (false)
add_query("d", "C", <<["e", "BOOLEAN"], ["d", "B"], ["C", "A"], ["A", "BOOLEAN"], ["d", "b"], ["INTEGER", "INTEGER"], ["e", "BOOLEAN"]>>, "b")
add_call_chain(<<A>>)
add_call_chain(<<e,c,BOOLEAN,b,a,d,D,b>>)
add_call_chain(<<c,a,B,D,b,b,A,C>>)
type_check
logical_negation
logical_negation
add_call_chain(<<b,a,e,c,a,B,c>>)
add_query("A", "C", <<["c", "BOOLEAN"], ["e", "a"], ["D", "D"], ["b", "A"], ["B", "BOOLEAN"]>>, "b")
bool_value (true)
add_call_chain(<<D,A,D,e,b,A,A>>)
add_command("C", "c", <<["A", "INTEGER"]>>)
add_call_chain(<<d,INTEGER,B,B,A,a,A,B>>)
add_command("A", "D", <<["a", "A"], ["A", "INTEGER"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "c"], ["A", "INTEGER"], ["b", "INTEGER"], ["BOOLEAN", "INTEGER"]>>)
type_check
add_query("d", "D", <<["C", "BOOLEAN"], ["C", "B"], ["C", "B"], ["d", "INTEGER"], ["e", "BOOLEAN"]>>, "D")
conjunction
type_check
equals
add_call_chain(<<B,INTEGER,b>>)
add_call_chain(<<D,D,c,b,C,d,a,a,c>>)
add_attribute("B", "b", "INTEGER")
type_check
add_attribute("e", "c", "B")
add_call_chain(<<b,B,INTEGER,BOOLEAN,B>>)
add_command("c", "e", <<["A", "INTEGER"], ["a", "BOOLEAN"], ["C", "B"], ["c", "C"], ["B", "INTEGER"], ["b", "BOOLEAN"]>>)
add_attribute("A", "d", "INTEGER")
disjunction
int_value (15)
bool_value (false)
add_query("a", "C", <<["b", "INTEGER"], ["D", "BOOLEAN"], ["BOOLEAN", "A"], ["b", "A"], ["a", "INTEGER"], ["d", "BOOLEAN"], ["c", "C"], ["D", "a"], ["INTEGER", "INTEGER"]>>, "A")
add_call_chain(<<B,BOOLEAN>>)
type_check
numerical_negation
add_class(e)
add_attribute("d", "D", "BOOLEAN")
add_class(d)
add_query("D", "C", <<["A", "BOOLEAN"], ["INTEGER", "INTEGER"], ["a", "d"], ["A", "D"], ["C", "BOOLEAN"], ["B", "e"], ["A", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "BOOLEAN"]>>, "D")
bool_value (true)
logical_negation
addition
addition
conjunction
type_check
int_value (16)
add_call_chain(<<B,D,a,D,C,d>>)
add_query("c", "A", <<["d", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "B"], ["D", "INTEGER"], ["A", "D"], ["B", "b"]>>, "D")
add_call_chain(<<BOOLEAN,c,BOOLEAN,A,a,A>>)
logical_negation
add_command("C", "B", <<["a", "BOOLEAN"], ["A", "D"], ["A", "INTEGER"], ["C", "INTEGER"], ["B", "INTEGER"], ["e", "B"], ["d", "INTEGER"]>>)
int_value (48)
add_command("B", "B", <<["BOOLEAN", "INTEGER"], ["D", "d"], ["A", "INTEGER"], ["A", "BOOLEAN"], ["a", "INTEGER"]>>)
add_class(INTEGER)
int_value (18)
add_attribute("B", "a", "INTEGER")
add_class(D)
add_command("B", "B", <<["d", "INTEGER"], ["A", "INTEGER"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["BOOLEAN", "A"], ["a", "B"]>>)
add_class(B)
add_query("D", "D", <<["c", "INTEGER"]>>, "c")
add_attribute("a", "d", "D")
generate_java_code
add_command("a", "D", <<["a", "BOOLEAN"], ["C", "INTEGER"]>>)
add_command("a", "d", <<["b", "INTEGER"]>>)
add_command("BOOLEAN", "C", <<["b", "INTEGER"], ["C", "BOOLEAN"], ["BOOLEAN", "C"], ["C", "BOOLEAN"], ["a", "INTEGER"], ["e", "INTEGER"], ["e", "INTEGER"]>>)
int_value (26)
add_query("B", "INTEGER", <<["e", "INTEGER"]>>, "e")
add_call_chain(<<a,B,D,b,d,BOOLEAN,d,c,b>>)
bool_value (true)
add_attribute("D", "B", "BOOLEAN")
numerical_negation
generate_java_code
add_query("d", "A", <<["D", "e"], ["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"]>>, "e")
int_value (10)
add_query("D", "c", <<["INTEGER", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["a", "INTEGER"], ["D", "d"], ["c", "BOOLEAN"], ["d", "INTEGER"], ["INTEGER", "BOOLEAN"]>>, "D")
conjunction
bool_value (true)
bool_value (true)
add_attribute("c", "a", "BOOLEAN")
logical_negation
add_call_chain(<<e,D>>)
add_attribute("e", "C", "B")
less_than
numerical_negation
add_call_chain(<<D,b,d>>)
add_attribute("c", "e", "BOOLEAN")
bool_value (false)
add_command("B", "A", <<["e", "a"], ["c", "C"]>>)
add_command("A", "C", <<["e", "INTEGER"], ["D", "INTEGER"], ["a", "INTEGER"]>>)
int_value (22)
add_attribute("d", "B", "BOOLEAN")
int_value (41)
int_value (7)
bool_value (true)
add_attribute("e", "e", "B")
add_call_chain(<<B,d>>)
modulo
logical_negation
int_value (14)
logical_negation
conjunction
type_check
add_attribute("c", "A", "BOOLEAN")
type_check
add_call_chain(<<C>>)
bool_value (true)
add_attribute("B", "d", "BOOLEAN")
add_attribute("A", "e", "BOOLEAN")
add_attribute("B", "B", "INTEGER")
add_attribute("C", "BOOLEAN", "BOOLEAN")
numerical_negation
int_value (9)
numerical_negation
bool_value (false)
generate_java_code
equals
add_call_chain(<<b,d,A,D,INTEGER>>)
add_call_chain(<<b>>)
add_command("D", "INTEGER", <<["c", "BOOLEAN"], ["BOOLEAN", "a"]>>)
type_check
bool_value (true)
add_query("B", "e", <<["a", "BOOLEAN"], ["B", "INTEGER"], ["b", "INTEGER"], ["BOOLEAN", "INTEGER"], ["C", "d"], ["D", "INTEGER"], ["BOOLEAN", "e"]>>, "e")
disjunction
conjunction
add_call_chain(<<c,d,D,d>>)
numerical_negation
logical_negation
add_call_chain(<<C,B,D>>)
add_attribute("C", "c", "INTEGER")
bool_value (true)
subtraction
add_call_chain(<<A,BOOLEAN,e,e,C,B,B,C>>)
add_attribute("C", "A", "BOOLEAN")
equals
add_attribute("e", "D", "BOOLEAN")
add_command("C", "INTEGER", <<["C", "INTEGER"], ["c", "BOOLEAN"], ["b", "INTEGER"], ["D", "INTEGER"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["INTEGER", "BOOLEAN"], ["D", "INTEGER"]>>)
bool_value (false)
int_value (26)
int_value (49)
add_call_chain(<<b,INTEGER,A,B>>)
add_query("b", "C", <<["C", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["d", "b"]>>, "C")
add_query("d", "INTEGER", <<["a", "b"], ["A", "INTEGER"], ["C", "INTEGER"]>>, "a")
bool_value (false)
generate_java_code
generate_java_code
add_query("e", "d", <<["D", "BOOLEAN"], ["e", "D"], ["e", "BOOLEAN"], ["e", "C"]>>, "C")
add_class(c)
