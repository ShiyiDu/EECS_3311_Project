greater_than
add_call_chain(<<A,C,A,e,INTEGER,e,C,A>>)
logical_negation
add_query("e", "b", <<["B", "BOOLEAN"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["b", "INTEGER"], ["A", "INTEGER"], ["B", "B"]>>, "A")
type_check
disjunction
add_call_chain(<<a,c,C,BOOLEAN,B,e,a>>)
int_value (1)
int_value (5)
logical_negation
add_call_chain(<<C,a,a,INTEGER,C,A,B,d,d>>)
less_than
logical_negation
equals
conjunction
disjunction
int_value (5)
add_query("d", "D", <<["e", "BOOLEAN"], ["D", "INTEGER"], ["a", "INTEGER"], ["c", "b"], ["c", "INTEGER"], ["C", "B"], ["e", "INTEGER"], ["B", "BOOLEAN"], ["d", "c"]>>, "e")
add_call_chain(<<d,B,C,d,c,B,d,A>>)
int_value (2)
add_class(A)
add_call_chain(<<c>>)
add_call_chain(<<b,a,A,A>>)
add_command("b", "B", <<["C", "b"], ["B", "INTEGER"]>>)
bool_value (false)
add_call_chain(<<A,e,B,C>>)
generate_java_code
bool_value (true)
bool_value (true)
quotient
int_value (10)
add_attribute("a", "A", "BOOLEAN")
type_check
add_attribute("A", "C", "BOOLEAN")
add_call_chain(<<b,D,BOOLEAN,INTEGER,B>>)
add_command("C", "C", <<["e", "BOOLEAN"], ["D", "D"], ["e", "BOOLEAN"], ["D", "INTEGER"], ["b", "BOOLEAN"], ["b", "BOOLEAN"], ["d", "INTEGER"]>>)
bool_value (false)
type_check
numerical_negation
add_query("A", "b", <<["D", "BOOLEAN"], ["e", "e"], ["D", "c"], ["e", "INTEGER"], ["B", "BOOLEAN"]>>, "a")
less_than
numerical_negation
modulo
add_command("D", "INTEGER", <<["C", "b"], ["b", "B"], ["a", "A"], ["C", "e"], ["d", "C"], ["c", "BOOLEAN"]>>)
generate_java_code
generate_java_code
add_call_chain(<<e,A,d>>)
add_command("B", "a", <<["a", "BOOLEAN"]>>)
add_call_chain(<<b,D,B,A,b,C,B,d,e>>)
add_query("B", "INTEGER", <<["a", "BOOLEAN"], ["D", "INTEGER"], ["D", "c"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["a", "BOOLEAN"], ["b", "D"]>>, "A")
equals
add_class(A)
add_call_chain(<<INTEGER,D,A,B,D,C,b>>)
add_attribute("D", "c", "BOOLEAN")
logical_negation
equals
numerical_negation
add_call_chain(<<d,e>>)
add_command("C", "e", <<["d", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "e"], ["BOOLEAN", "BOOLEAN"], ["A", "c"], ["B", "BOOLEAN"], ["B", "INTEGER"]>>)
add_query("B", "c", <<["e", "INTEGER"], ["C", "INTEGER"], ["INTEGER", "INTEGER"], ["b", "INTEGER"], ["A", "INTEGER"], ["C", "INTEGER"]>>, "b")
bool_value (true)
logical_negation
int_value (48)
bool_value (false)
numerical_negation
add_class(a)
bool_value (true)
int_value (19)
numerical_negation
disjunction
int_value (44)
bool_value (true)
subtraction
add_call_chain(<<d,e,d,A,B,D,D,BOOLEAN,D>>)
bool_value (true)
add_attribute("e", "B", "d")
add_attribute("e", "B", "A")
bool_value (false)
add_class(C)
disjunction
logical_negation
add_call_chain(<<B>>)
add_call_chain(<<b,A,d,A>>)
int_value (8)
add_attribute("c", "b", "e")
logical_negation
add_call_chain(<<D>>)
disjunction
add_call_chain(<<B>>)
multiplication
add_call_chain(<<d,D,e,e,D,a,A,INTEGER>>)
generate_java_code
add_query("c", "BOOLEAN", <<["a", "INTEGER"], ["c", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "INTEGER"], ["d", "INTEGER"]>>, "BOOLEAN")
add_command("e", "BOOLEAN", <<["d", "BOOLEAN"], ["INTEGER", "e"], ["b", "INTEGER"], ["A", "INTEGER"], ["e", "BOOLEAN"]>>)
add_query("INTEGER", "b", <<["a", "BOOLEAN"], ["A", "INTEGER"], ["A", "a"]>>, "B")
add_attribute("B", "B", "d")
generate_java_code
numerical_negation
add_command("B", "BOOLEAN", <<["d", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["D", "INTEGER"], ["B", "a"]>>)
add_class(BOOLEAN)
add_class(B)
equals
greater_than
type_check
add_command("a", "B", <<["BOOLEAN", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "INTEGER"], ["C", "INTEGER"]>>)
generate_java_code
add_class(C)
int_value (4)
add_call_chain(<<c,D,B,e,D,D,c>>)
add_call_chain(<<C,e,BOOLEAN,a,A,C,B,B,D>>)
type_check
add_call_chain(<<a,D,a,A,e,d,a>>)
conjunction
add_call_chain(<<B,a,BOOLEAN,B,C,B,a,C,C>>)
add_query("D", "c", <<["D", "BOOLEAN"], ["d", "C"], ["INTEGER", "INTEGER"], ["A", "BOOLEAN"], ["A", "INTEGER"]>>, "b")
disjunction
disjunction
int_value (7)
add_command("c", "d", <<["d", "INTEGER"], ["d", "BOOLEAN"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["C", "a"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "BOOLEAN"]>>)
bool_value (true)
add_attribute("A", "INTEGER", "INTEGER")
logical_negation
add_command("B", "c", <<["a", "INTEGER"], ["C", "BOOLEAN"]>>)
add_command("e", "D", <<["a", "BOOLEAN"], ["A", "INTEGER"]>>)
add_class(a)
add_call_chain(<<e,e,c,b,D>>)
add_call_chain(<<d,D,A,b,D,e>>)
add_command("INTEGER", "D", <<["C", "B"], ["B", "INTEGER"]>>)
modulo
int_value (6)
numerical_negation
add_call_chain(<<b,c,C,D,B,B,BOOLEAN>>)
add_call_chain(<<C,d,D,b>>)
numerical_negation
add_query("A", "A", <<["d", "INTEGER"]>>, "c")
add_call_chain(<<c,B,B,A>>)
add_command("e", "BOOLEAN", <<["B", "BOOLEAN"], ["D", "INTEGER"], ["A", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "BOOLEAN"]>>)
bool_value (true)
logical_negation
add_attribute("C", "C", "BOOLEAN")
type_check
type_check
add_query("A", "c", <<["d", "C"], ["e", "BOOLEAN"], ["B", "INTEGER"], ["C", "INTEGER"], ["c", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>, "a")
add_call_chain(<<d,b,C,c,a>>)
add_call_chain(<<a,A>>)
add_query("a", "B", <<["A", "INTEGER"], ["d", "INTEGER"], ["C", "INTEGER"], ["C", "B"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["C", "BOOLEAN"]>>, "A")
disjunction
add_call_chain(<<e,D>>)
add_class(e)
bool_value (true)
add_query("b", "d", <<["A", "INTEGER"], ["e", "BOOLEAN"], ["a", "INTEGER"]>>, "C")
generate_java_code
add_query("C", "A", <<["d", "A"], ["D", "BOOLEAN"]>>, "D")
bool_value (true)
less_than
add_call_chain(<<a>>)
add_call_chain(<<e,D,A,D,B,C,d,C>>)
numerical_negation
add_class(C)
modulo
add_query("D", "A", <<["b", "INTEGER"], ["D", "INTEGER"], ["b", "BOOLEAN"], ["A", "INTEGER"], ["D", "BOOLEAN"]>>, "e")
generate_java_code
add_class(B)
equals
less_than
greater_than
add_query("A", "a", <<["d", "e"], ["a", "BOOLEAN"]>>, "BOOLEAN")
bool_value (false)
bool_value (false)
add_attribute("C", "D", "BOOLEAN")
int_value (12)
add_query("B", "D", <<["C", "INTEGER"], ["C", "INTEGER"], ["INTEGER", "D"], ["BOOLEAN", "BOOLEAN"], ["C", "b"]>>, "d")
logical_negation
add_call_chain(<<a,A,D>>)
generate_java_code
type_check
add_command("b", "a", <<["C", "INTEGER"]>>)
logical_negation
generate_java_code
add_class(B)
add_call_chain(<<d,c,c,C,d,e,C,e>>)
logical_negation
conjunction
greater_than
add_command("e", "a", <<["BOOLEAN", "BOOLEAN"], ["e", "INTEGER"], ["INTEGER", "INTEGER"], ["e", "BOOLEAN"], ["C", "e"], ["B", "INTEGER"], ["D", "d"], ["D", "INTEGER"]>>)
int_value (27)
generate_java_code
add_attribute("c", "c", "BOOLEAN")
logical_negation
add_call_chain(<<c,B,c,d,c,C,d,a>>)
add_call_chain(<<a,A,b,A,BOOLEAN,B,b,A,b>>)
disjunction
int_value (45)
add_call_chain(<<INTEGER,C,A,B,B,BOOLEAN,d>>)
generate_java_code
add_class(d)
generate_java_code
add_attribute("B", "B", "D")
add_command("d", "e", <<["D", "INTEGER"], ["BOOLEAN", "INTEGER"], ["A", "BOOLEAN"], ["a", "INTEGER"]>>)
bool_value (true)
add_call_chain(<<B,A,BOOLEAN,a,d,D,e,e>>)
add_command("B", "C", <<["b", "INTEGER"], ["D", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "BOOLEAN"], ["INTEGER", "c"], ["c", "B"], ["a", "BOOLEAN"], ["d", "INTEGER"]>>)
type_check
add_call_chain(<<C,d,C,B,B,INTEGER,c>>)
add_query("INTEGER", "C", <<["A", "A"], ["c", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["e", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["C", "a"], ["d", "INTEGER"], ["D", "BOOLEAN"]>>, "d")
modulo
add_command("INTEGER", "D", <<["D", "INTEGER"], ["B", "BOOLEAN"], ["e", "A"], ["a", "INTEGER"], ["b", "BOOLEAN"]>>)
int_value (29)
numerical_negation
add_command("C", "B", <<["a", "BOOLEAN"]>>)
add_call_chain(<<B,e,C,B,B>>)
add_call_chain(<<D,A,B>>)
bool_value (false)
logical_negation
generate_java_code
add_call_chain(<<b,a,INTEGER,b,a,C>>)
logical_negation
type_check
add_call_chain(<<e,INTEGER,a>>)
add_call_chain(<<C,d,c,C,e>>)
add_query("e", "A", <<["BOOLEAN", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "BOOLEAN"], ["BOOLEAN", "A"], ["C", "INTEGER"], ["D", "INTEGER"]>>, "INTEGER")
bool_value (false)
logical_negation
quotient
int_value (1)
conjunction
add_call_chain(<<D,c>>)
disjunction
quotient
generate_java_code
int_value (8)
add_attribute("C", "a", "BOOLEAN")
add_command("a", "D", <<["BOOLEAN", "INTEGER"], ["BOOLEAN", "INTEGER"], ["C", "INTEGER"], ["B", "e"], ["D", "e"]>>)
add_class(a)
bool_value (true)
generate_java_code
add_command("e", "BOOLEAN", <<["a", "INTEGER"], ["b", "BOOLEAN"], ["c", "BOOLEAN"], ["a", "c"], ["D", "INTEGER"], ["a", "C"], ["INTEGER", "BOOLEAN"]>>)
int_value (39)
int_value (35)
logical_negation
add_call_chain(<<B,A>>)
conjunction
numerical_negation
add_call_chain(<<D,D,b,A,D,BOOLEAN,a,b,INTEGER>>)
conjunction
add_query("C", "A", <<["c", "BOOLEAN"], ["C", "INTEGER"]>>, "BOOLEAN")
int_value (9)
quotient
int_value (11)
add_class(d)
add_call_chain(<<A,D,C,b,D,a,b,c>>)
add_call_chain(<<D,C,C,BOOLEAN,C,A,c,e>>)
add_attribute("C", "C", "INTEGER")
add_query("c", "C", <<["B", "BOOLEAN"], ["b", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["c", "C"], ["c", "INTEGER"], ["e", "INTEGER"], ["A", "INTEGER"], ["d", "a"]>>, "b")
bool_value (true)
numerical_negation
add_attribute("a", "B", "BOOLEAN")
add_call_chain(<<e>>)
