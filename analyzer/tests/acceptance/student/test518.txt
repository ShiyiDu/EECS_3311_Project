add_call_chain(<<B,C,BOOLEAN,b,c,c,A,D,d>>)
conjunction
modulo
add_call_chain(<<d,a,b>>)
add_call_chain(<<e,D>>)
numerical_negation
add_command("B", "B", <<["e", "C"]>>)
add_call_chain(<<c,D,B,a,B>>)
int_value (13)
add_attribute("A", "A", "INTEGER")
add_query("D", "d", <<["A", "BOOLEAN"]>>, "c")
equals
bool_value (true)
add_call_chain(<<A,e,b,D,C,BOOLEAN,b,e,b>>)
numerical_negation
add_attribute("B", "c", "BOOLEAN")
add_call_chain(<<b,A,e,d,BOOLEAN,D>>)
add_call_chain(<<A,A,a,B>>)
less_than
type_check
add_query("D", "BOOLEAN", <<["e", "INTEGER"], ["b", "C"], ["A", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "b"], ["e", "b"], ["D", "INTEGER"], ["c", "C"]>>, "d")
add_command("A", "B", <<["c", "INTEGER"]>>)
add_call_chain(<<e,C,b,a,C,d,INTEGER>>)
add_query("A", "b", <<["B", "BOOLEAN"], ["C", "d"], ["BOOLEAN", "INTEGER"], ["C", "INTEGER"], ["b", "INTEGER"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["a", "B"], ["b", "BOOLEAN"]>>, "C")
add_call_chain(<<a>>)
int_value (42)
add_call_chain(<<b,c>>)
numerical_negation
less_than
modulo
add_call_chain(<<b,D,b,b,d>>)
bool_value (true)
addition
bool_value (true)
add_command("A", "B", <<["C", "BOOLEAN"]>>)
add_call_chain(<<C,D,d,C,B,b,b>>)
add_class(c)
generate_java_code
disjunction
int_value (14)
add_class(B)
logical_negation
numerical_negation
add_query("B", "INTEGER", <<["e", "BOOLEAN"], ["B", "INTEGER"], ["D", "INTEGER"], ["e", "D"], ["e", "a"], ["D", "B"]>>, "b")
add_call_chain(<<b,d,d,A,c,d,C,A,INTEGER>>)
int_value (45)
type_check
add_command("b", "C", <<["A", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["d", "INTEGER"], ["INTEGER", "C"], ["B", "INTEGER"], ["C", "INTEGER"]>>)
int_value (32)
add_call_chain(<<A,c,INTEGER,D,C,e,b>>)
numerical_negation
int_value (12)
multiplication
add_call_chain(<<e,A,A,c,B,C>>)
generate_java_code
add_attribute("BOOLEAN", "D", "INTEGER")
add_call_chain(<<b>>)
greater_than
conjunction
greater_than
add_command("D", "a", <<["C", "BOOLEAN"], ["b", "e"], ["D", "C"], ["d", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "INTEGER"]>>)
add_command("A", "A", <<["BOOLEAN", "b"]>>)
add_call_chain(<<d,B>>)
int_value (36)
int_value (46)
add_call_chain(<<d>>)
greater_than
int_value (29)
multiplication
logical_negation
type_check
add_call_chain(<<a,C,B,B,D>>)
add_call_chain(<<D,B,C,D,b,c,A>>)
add_command("a", "C", <<["c", "INTEGER"], ["D", "INTEGER"]>>)
int_value (33)
add_call_chain(<<B,B,A,D,C>>)
subtraction
add_query("BOOLEAN", "D", <<["A", "b"], ["A", "BOOLEAN"], ["D", "c"], ["BOOLEAN", "a"], ["INTEGER", "BOOLEAN"], ["A", "INTEGER"], ["C", "D"], ["a", "BOOLEAN"], ["b", "INTEGER"]>>, "D")
subtraction
logical_negation
add_attribute("e", "e", "INTEGER")
add_attribute("A", "BOOLEAN", "INTEGER")
add_command("c", "C", <<["e", "INTEGER"], ["e", "BOOLEAN"], ["A", "D"], ["a", "d"], ["e", "BOOLEAN"]>>)
add_command("c", "A", <<["A", "BOOLEAN"], ["c", "INTEGER"], ["BOOLEAN", "INTEGER"], ["C", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "INTEGER"], ["e", "BOOLEAN"], ["c", "BOOLEAN"]>>)
add_command("B", "b", <<["B", "C"], ["INTEGER", "D"], ["D", "INTEGER"], ["C", "INTEGER"]>>)
numerical_negation
logical_negation
add_call_chain(<<d,e,d,b,c,C,INTEGER,A>>)
add_query("d", "d", <<["c", "BOOLEAN"], ["c", "A"], ["a", "C"], ["C", "B"], ["a", "A"], ["B", "e"], ["D", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "INTEGER"]>>, "b")
add_attribute("B", "D", "BOOLEAN")
add_query("b", "e", <<["d", "c"], ["INTEGER", "a"], ["C", "BOOLEAN"], ["d", "INTEGER"], ["C", "b"], ["D", "b"], ["B", "BOOLEAN"], ["INTEGER", "e"]>>, "INTEGER")
add_command("d", "B", <<["B", "A"]>>)
add_attribute("C", "c", "BOOLEAN")
add_call_chain(<<b,D,C,INTEGER>>)
int_value (4)
bool_value (true)
add_attribute("BOOLEAN", "C", "INTEGER")
logical_negation
add_call_chain(<<b,INTEGER,A,b,d,A,c,e>>)
add_class(A)
disjunction
add_attribute("a", "C", "BOOLEAN")
numerical_negation
generate_java_code
numerical_negation
add_query("INTEGER", "C", <<["BOOLEAN", "INTEGER"], ["INTEGER", "A"]>>, "e")
add_call_chain(<<INTEGER,D>>)
add_command("C", "d", <<["d", "INTEGER"], ["b", "e"], ["e", "BOOLEAN"], ["C", "B"], ["a", "BOOLEAN"], ["INTEGER", "B"], ["BOOLEAN", "BOOLEAN"], ["C", "INTEGER"], ["INTEGER", "INTEGER"]>>)
numerical_negation
int_value (24)
subtraction
logical_negation
add_call_chain(<<INTEGER,e,b,B,c,A,B,d,c>>)
bool_value (false)
add_class(A)
type_check
disjunction
logical_negation
add_call_chain(<<d,D,e,C,b,C,D>>)
logical_negation
add_call_chain(<<b,b>>)
bool_value (false)
add_attribute("B", "B", "BOOLEAN")
numerical_negation
conjunction
add_class(INTEGER)
add_attribute("D", "d", "D")
generate_java_code
add_attribute("b", "C", "BOOLEAN")
logical_negation
logical_negation
bool_value (true)
add_command("BOOLEAN", "b", <<["c", "BOOLEAN"], ["A", "INTEGER"], ["A", "INTEGER"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "INTEGER"], ["d", "BOOLEAN"]>>)
numerical_negation
type_check
add_command("D", "A", <<["e", "INTEGER"]>>)
greater_than
numerical_negation
add_call_chain(<<c>>)
add_command("c", "D", <<["c", "d"], ["e", "INTEGER"], ["BOOLEAN", "INTEGER"], ["b", "BOOLEAN"], ["A", "D"], ["A", "A"], ["D", "BOOLEAN"]>>)
int_value (25)
add_command("D", "d", <<["b", "b"], ["d", "B"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["c", "INTEGER"], ["c", "INTEGER"], ["a", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
disjunction
type_check
add_call_chain(<<A>>)
generate_java_code
add_command("C", "e", <<["A", "BOOLEAN"], ["b", "INTEGER"]>>)
add_class(e)
disjunction
generate_java_code
add_call_chain(<<C,A,b,BOOLEAN,C>>)
bool_value (true)
add_attribute("B", "b", "D")
logical_negation
int_value (38)
add_class(C)
bool_value (true)
generate_java_code
type_check
conjunction
numerical_negation
