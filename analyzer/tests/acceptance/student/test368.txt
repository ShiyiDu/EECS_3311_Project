add_attribute("BOOLEAN", "d", "BOOLEAN")
add_call_chain(<<C,C,C,C,C,BOOLEAN,INTEGER>>)
disjunction
add_call_chain(<<a,B,INTEGER,A,b,BOOLEAN>>)
int_value (49)
bool_value (true)
numerical_negation
logical_negation
add_call_chain(<<B,e,c,B,C,INTEGER,c>>)
bool_value (false)
add_command("B", "d", <<["c", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "INTEGER"], ["c", "INTEGER"], ["INTEGER", "D"], ["d", "D"]>>)
bool_value (false)
subtraction
numerical_negation
numerical_negation
add_call_chain(<<b,INTEGER>>)
add_attribute("d", "INTEGER", "BOOLEAN")
bool_value (true)
generate_java_code
type_check
add_attribute("BOOLEAN", "C", "INTEGER")
add_command("a", "b", <<["B", "a"], ["B", "INTEGER"], ["b", "INTEGER"], ["INTEGER", "BOOLEAN"], ["b", "B"], ["INTEGER", "d"], ["c", "BOOLEAN"], ["a", "INTEGER"]>>)
add_class(C)
add_command("B", "C", <<["A", "INTEGER"], ["a", "INTEGER"], ["b", "B"], ["e", "INTEGER"], ["D", "INTEGER"], ["INTEGER", "INTEGER"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["A", "INTEGER"]>>)
add_call_chain(<<c,A>>)
add_attribute("d", "C", "BOOLEAN")
bool_value (false)
numerical_negation
logical_negation
int_value (14)
add_command("A", "a", <<["INTEGER", "INTEGER"], ["D", "INTEGER"]>>)
bool_value (true)
add_call_chain(<<B,e>>)
add_command("e", "B", <<["B", "BOOLEAN"], ["BOOLEAN", "a"], ["BOOLEAN", "INTEGER"], ["B", "BOOLEAN"], ["INTEGER", "e"], ["e", "INTEGER"], ["B", "INTEGER"], ["e", "BOOLEAN"]>>)
conjunction
add_attribute("a", "A", "BOOLEAN")
add_call_chain(<<C>>)
greater_than
generate_java_code
bool_value (false)
logical_negation
add_call_chain(<<A,C,b,A>>)
addition
add_query("C", "e", <<["BOOLEAN", "BOOLEAN"], ["d", "d"], ["d", "BOOLEAN"], ["B", "BOOLEAN"]>>, "D")
add_query("A", "INTEGER", <<["B", "BOOLEAN"]>>, "d")
less_than
generate_java_code
modulo
add_command("b", "D", <<["b", "INTEGER"], ["B", "INTEGER"]>>)
add_command("C", "b", <<["a", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "BOOLEAN"]>>)
add_class(b)
logical_negation
int_value (4)
generate_java_code
add_class(D)
add_call_chain(<<d,c,B,B>>)
generate_java_code
add_call_chain(<<BOOLEAN,BOOLEAN,a,INTEGER,D,A,C,B>>)
add_attribute("c", "A", "c")
add_attribute("C", "a", "BOOLEAN")
add_command("a", "D", <<["c", "BOOLEAN"], ["c", "A"], ["INTEGER", "INTEGER"], ["b", "B"], ["B", "BOOLEAN"]>>)
add_attribute("b", "e", "BOOLEAN")
add_attribute("d", "d", "INTEGER")
add_command("b", "C", <<["C", "b"], ["c", "BOOLEAN"]>>)
quotient
equals
logical_negation
add_attribute("c", "B", "C")
add_attribute("c", "INTEGER", "BOOLEAN")
add_attribute("b", "c", "INTEGER")
type_check
add_command("BOOLEAN", "B", <<["e", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "INTEGER"], ["B", "d"]>>)
add_attribute("a", "e", "a")
add_call_chain(<<B,B,B,c,INTEGER>>)
add_call_chain(<<INTEGER,BOOLEAN,B>>)
int_value (42)
add_call_chain(<<b,a>>)
conjunction
conjunction
numerical_negation
int_value (13)
greater_than
int_value (45)
bool_value (true)
bool_value (false)
add_command("a", "e", <<["c", "a"], ["A", "BOOLEAN"], ["B", "INTEGER"]>>)
add_attribute("b", "c", "d")
conjunction
add_attribute("D", "c", "BOOLEAN")
subtraction
add_class(BOOLEAN)
add_command("A", "b", <<["D", "c"], ["B", "b"], ["C", "BOOLEAN"], ["d", "BOOLEAN"], ["c", "BOOLEAN"], ["e", "INTEGER"]>>)
add_attribute("A", "B", "a")
generate_java_code
logical_negation
add_call_chain(<<D,e,d,c,e>>)
equals
logical_negation
modulo
int_value (12)
numerical_negation
type_check
bool_value (true)
type_check
add_call_chain(<<D,B,a,a,d,B>>)
add_class(INTEGER)
bool_value (true)
add_query("b", "e", <<["d", "c"], ["B", "INTEGER"]>>, "c")
add_call_chain(<<e,a,c,INTEGER,B>>)
bool_value (false)
bool_value (false)
add_call_chain(<<C,c,b,c,c,B,d>>)
add_call_chain(<<b,B,e,b>>)
add_call_chain(<<D,A,a,c,e,B,C>>)
add_query("d", "d", <<["B", "a"]>>, "INTEGER")
type_check
generate_java_code
add_call_chain(<<C,B,D,BOOLEAN,e,D,b,d>>)
add_query("B", "a", <<["D", "D"], ["c", "INTEGER"], ["B", "b"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["d", "INTEGER"]>>, "A")
logical_negation
equals
greater_than
add_call_chain(<<B,d,c,B,b,A,c,C>>)
add_class(e)
bool_value (false)
numerical_negation
add_command("a", "A", <<["INTEGER", "d"]>>)
less_than
int_value (46)
add_call_chain(<<A,D,d,C,B>>)
equals
numerical_negation
int_value (11)
add_call_chain(<<A,e,B,D>>)
modulo
numerical_negation
add_command("C", "A", <<["a", "INTEGER"], ["d", "C"], ["d", "INTEGER"], ["INTEGER", "d"], ["c", "INTEGER"], ["e", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["C", "INTEGER"]>>)
add_class(b)
generate_java_code
add_call_chain(<<A,BOOLEAN,C>>)
add_command("C", "c", <<["a", "BOOLEAN"], ["C", "INTEGER"], ["B", "D"]>>)
bool_value (false)
int_value (33)
generate_java_code
add_attribute("c", "b", "e")
add_attribute("e", "d", "BOOLEAN")
numerical_negation
add_call_chain(<<INTEGER,c>>)
quotient
add_command("a", "B", <<["a", "BOOLEAN"], ["c", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["D", "BOOLEAN"]>>)
add_class(d)
bool_value (true)
int_value (19)
add_call_chain(<<D,A,INTEGER,b,D,BOOLEAN>>)
add_call_chain(<<BOOLEAN,C>>)
type_check
add_attribute("a", "a", "A")
logical_negation
disjunction
numerical_negation
add_query("C", "a", <<["A", "INTEGER"], ["INTEGER", "BOOLEAN"], ["a", "e"], ["C", "D"], ["A", "BOOLEAN"], ["a", "INTEGER"]>>, "B")
logical_negation
add_call_chain(<<a,a,A,d,INTEGER>>)
logical_negation
type_check
bool_value (false)
type_check
add_call_chain(<<B,A,c,B,d>>)
type_check
add_call_chain(<<BOOLEAN,D,a,d,A,C>>)
int_value (24)
add_call_chain(<<C>>)
add_command("B", "a", <<["A", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["a", "e"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>)
int_value (30)
add_attribute("BOOLEAN", "D", "B")
add_command("c", "d", <<["D", "INTEGER"], ["e", "BOOLEAN"], ["d", "e"], ["b", "B"], ["b", "INTEGER"], ["e", "BOOLEAN"], ["b", "BOOLEAN"]>>)
add_call_chain(<<D,c>>)
add_command("D", "a", <<["e", "B"], ["a", "BOOLEAN"], ["INTEGER", "a"], ["b", "C"], ["B", "A"], ["A", "INTEGER"]>>)
logical_negation
add_call_chain(<<B,B,C,B,a>>)
generate_java_code
bool_value (true)
add_call_chain(<<c,B,INTEGER,a,b,e,A,a,a>>)
conjunction
add_call_chain(<<B,B,c,C,c,A>>)
numerical_negation
add_command("D", "c", <<["b", "BOOLEAN"], ["B", "BOOLEAN"]>>)
logical_negation
add_attribute("C", "a", "D")
disjunction
add_command("A", "d", <<["C", "BOOLEAN"], ["D", "B"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "BOOLEAN"]>>)
add_attribute("B", "C", "INTEGER")
add_call_chain(<<D,BOOLEAN,INTEGER,A,c,D,B,a,BOOLEAN>>)
add_command("A", "INTEGER", <<["e", "B"], ["A", "BOOLEAN"], ["a", "BOOLEAN"]>>)
bool_value (true)
add_attribute("a", "b", "INTEGER")
numerical_negation
bool_value (false)
numerical_negation
add_class(D)
logical_negation
add_call_chain(<<d>>)
add_command("c", "A", <<["C", "BOOLEAN"], ["e", "D"]>>)
add_attribute("C", "d", "INTEGER")
add_call_chain(<<A,a,B,A,d>>)
numerical_negation
bool_value (true)
type_check
add_command("B", "b", <<["C", "D"], ["A", "a"], ["e", "BOOLEAN"], ["d", "e"]>>)
logical_negation
type_check
add_attribute("B", "b", "BOOLEAN")
add_command("B", "B", <<["B", "B"], ["B", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["e", "BOOLEAN"], ["c", "INTEGER"], ["BOOLEAN", "b"], ["A", "INTEGER"], ["BOOLEAN", "D"]>>)
logical_negation
subtraction
add_command("BOOLEAN", "A", <<["b", "INTEGER"], ["b", "INTEGER"], ["a", "INTEGER"], ["d", "B"], ["c", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "BOOLEAN"]>>)
add_call_chain(<<D,D,a,a,D,d,c,b,d>>)
add_query("a", "e", <<["c", "d"]>>, "INTEGER")
type_check
add_query("D", "C", <<["C", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["e", "BOOLEAN"], ["a", "INTEGER"]>>, "b")
int_value (23)
generate_java_code
add_command("C", "a", <<["e", "BOOLEAN"]>>)
add_call_chain(<<C,C,BOOLEAN>>)
add_call_chain(<<C>>)
add_call_chain(<<a,D,b,e,D>>)
add_query("e", "C", <<["c", "INTEGER"], ["a", "BOOLEAN"], ["INTEGER", "INTEGER"], ["B", "INTEGER"]>>, "C")
bool_value (false)
add_call_chain(<<C,d,D,INTEGER,A>>)
logical_negation
add_command("C", "c", <<["e", "BOOLEAN"], ["e", "INTEGER"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["e", "INTEGER"], ["C", "D"], ["C", "BOOLEAN"], ["c", "BOOLEAN"]>>)
logical_negation
add_command("b", "a", <<["a", "BOOLEAN"], ["a", "c"], ["A", "INTEGER"], ["e", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "BOOLEAN"]>>)
bool_value (true)
