type_check
add_attribute("c", "A", "e")
bool_value (true)
logical_negation
add_command("d", "INTEGER", <<["b", "INTEGER"], ["c", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "BOOLEAN"]>>)
add_command("D", "c", <<["c", "BOOLEAN"], ["A", "INTEGER"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "BOOLEAN"], ["e", "INTEGER"]>>)
add_call_chain(<<A,A,e,BOOLEAN,B,INTEGER,a,e>>)
bool_value (false)
add_command("e", "C", <<["B", "e"], ["e", "D"], ["b", "INTEGER"], ["B", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["a", "INTEGER"], ["d", "BOOLEAN"], ["a", "b"]>>)
logical_negation
logical_negation
int_value (9)
add_command("B", "C", <<["e", "BOOLEAN"], ["a", "INTEGER"], ["D", "a"]>>)
add_command("D", "d", <<["C", "c"]>>)
int_value (31)
type_check
bool_value (false)
greater_than
add_call_chain(<<A,D,A>>)
add_attribute("D", "b", "b")
add_command("b", "D", <<["B", "e"], ["B", "INTEGER"], ["C", "BOOLEAN"], ["D", "INTEGER"]>>)
add_call_chain(<<D,B,a,b,A,a,a,D>>)
add_attribute("A", "B", "INTEGER")
int_value (19)
add_query("A", "INTEGER", <<["a", "BOOLEAN"], ["A", "INTEGER"], ["C", "e"], ["D", "B"], ["INTEGER", "c"], ["e", "BOOLEAN"]>>, "D")
generate_java_code
add_command("D", "a", <<["C", "BOOLEAN"], ["C", "BOOLEAN"], ["d", "b"], ["B", "BOOLEAN"], ["A", "BOOLEAN"]>>)
multiplication
conjunction
int_value (37)
int_value (29)
numerical_negation
add_call_chain(<<e,B,b,a,c>>)
add_query("B", "b", <<["C", "INTEGER"], ["B", "INTEGER"], ["D", "a"]>>, "B")
add_class(A)
logical_negation
add_query("c", "D", <<["d", "BOOLEAN"]>>, "D")
bool_value (false)
add_call_chain(<<c,e,e,B,D,b>>)
int_value (13)
add_command("a", "b", <<["A", "INTEGER"], ["INTEGER", "INTEGER"], ["d", "INTEGER"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "D"], ["C", "INTEGER"], ["B", "BOOLEAN"]>>)
int_value (21)
disjunction
add_attribute("C", "BOOLEAN", "INTEGER")
add_command("c", "D", <<["D", "INTEGER"], ["c", "BOOLEAN"], ["A", "INTEGER"], ["c", "a"], ["D", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "INTEGER"]>>)
conjunction
int_value (22)
add_attribute("B", "A", "INTEGER")
add_query("e", "INTEGER", <<["c", "C"], ["B", "BOOLEAN"], ["B", "INTEGER"], ["A", "INTEGER"], ["D", "INTEGER"], ["c", "INTEGER"]>>, "C")
disjunction
logical_negation
add_query("BOOLEAN", "C", <<["d", "INTEGER"], ["b", "BOOLEAN"], ["B", "c"], ["C", "INTEGER"], ["d", "BOOLEAN"], ["d", "BOOLEAN"], ["b", "INTEGER"], ["B", "c"], ["a", "INTEGER"]>>, "B")
add_class(D)
add_attribute("b", "C", "INTEGER")
equals
add_attribute("C", "a", "INTEGER")
int_value (14)
add_command("BOOLEAN", "A", <<["B", "BOOLEAN"], ["A", "BOOLEAN"]>>)
add_class(c)
type_check
disjunction
generate_java_code
int_value (15)
add_command("A", "D", <<["B", "INTEGER"], ["e", "C"], ["b", "INTEGER"]>>)
equals
add_call_chain(<<e,b,c,B,B>>)
int_value (32)
type_check
type_check
add_command("b", "A", <<["c", "INTEGER"], ["a", "BOOLEAN"], ["c", "A"], ["A", "INTEGER"], ["c", "INTEGER"], ["C", "b"], ["D", "D"], ["a", "BOOLEAN"]>>)
add_query("D", "INTEGER", <<["e", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["C", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["c", "A"], ["b", "B"]>>, "BOOLEAN")
add_class(B)
numerical_negation
generate_java_code
add_attribute("A", "BOOLEAN", "BOOLEAN")
add_query("A", "b", <<["A", "INTEGER"], ["A", "BOOLEAN"], ["e", "INTEGER"], ["b", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "c"], ["C", "c"], ["e", "BOOLEAN"], ["C", "BOOLEAN"]>>, "D")
add_query("D", "c", <<["A", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "d"]>>, "A")
add_command("B", "a", <<["c", "D"], ["B", "A"], ["d", "INTEGER"], ["d", "INTEGER"]>>)
add_call_chain(<<c,INTEGER,B,d,B,d,INTEGER,d>>)
add_call_chain(<<b,D,c,D,D,a,a>>)
add_command("c", "b", <<["b", "BOOLEAN"], ["c", "BOOLEAN"], ["c", "b"], ["d", "INTEGER"], ["B", "e"]>>)
add_command("A", "b", <<["c", "BOOLEAN"], ["C", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["C", "d"]>>)
bool_value (true)
bool_value (false)
type_check
numerical_negation
type_check
add_call_chain(<<C,c,A,BOOLEAN,A,A,INTEGER,c,A>>)
numerical_negation
logical_negation
subtraction
add_query("d", "e", <<["D", "c"], ["INTEGER", "a"], ["C", "d"], ["C", "INTEGER"]>>, "D")
conjunction
add_call_chain(<<D,e,INTEGER,B,A,a,B,C>>)
add_call_chain(<<e,D,B,C,e>>)
numerical_negation
equals
generate_java_code
bool_value (false)
logical_negation
int_value (31)
type_check
logical_negation
bool_value (false)
add_command("D", "C", <<["c", "c"], ["d", "BOOLEAN"]>>)
equals
add_query("e", "INTEGER", <<["C", "INTEGER"], ["BOOLEAN", "INTEGER"], ["a", "BOOLEAN"]>>, "D")
add_command("INTEGER", "BOOLEAN", <<["a", "INTEGER"], ["e", "c"], ["d", "BOOLEAN"], ["D", "BOOLEAN"], ["d", "D"], ["INTEGER", "INTEGER"]>>)
add_query("a", "C", <<["e", "INTEGER"], ["a", "c"], ["a", "INTEGER"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "INTEGER"], ["D", "D"]>>, "e")
greater_than
add_attribute("A", "c", "INTEGER")
int_value (49)
add_class(D)
add_attribute("C", "b", "INTEGER")
add_command("b", "C", <<["C", "BOOLEAN"]>>)
add_call_chain(<<D,e>>)
less_than
numerical_negation
add_call_chain(<<A,INTEGER,C>>)
add_call_chain(<<INTEGER,D>>)
add_command("INTEGER", "INTEGER", <<["a", "B"], ["c", "INTEGER"], ["A", "b"], ["a", "INTEGER"], ["a", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "A"], ["C", "INTEGER"], ["a", "INTEGER"]>>)
less_than
add_command("B", "D", <<["A", "INTEGER"], ["A", "INTEGER"]>>)
logical_negation
add_call_chain(<<a,C,e,C,c,D,c>>)
add_call_chain(<<INTEGER,b>>)
add_query("b", "d", <<["c", "BOOLEAN"], ["e", "INTEGER"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["e", "INTEGER"], ["B", "BOOLEAN"], ["d", "INTEGER"]>>, "A")
add_query("A", "D", <<["D", "INTEGER"], ["a", "b"], ["BOOLEAN", "INTEGER"], ["b", "INTEGER"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["A", "BOOLEAN"]>>, "A")
equals
numerical_negation
add_attribute("c", "C", "INTEGER")
add_class(c)
bool_value (false)
add_attribute("b", "A", "INTEGER")
add_class(A)
add_call_chain(<<b,D,d,C>>)
add_call_chain(<<e,b,c,e>>)
add_query("B", "a", <<["D", "INTEGER"], ["A", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "INTEGER"], ["C", "INTEGER"]>>, "e")
add_call_chain(<<A,e,b,INTEGER,b,d,d>>)
add_query("BOOLEAN", "C", <<["B", "b"], ["C", "A"], ["D", "BOOLEAN"]>>, "A")
type_check
add_command("D", "C", <<["d", "A"], ["e", "BOOLEAN"], ["D", "b"]>>)
numerical_negation
add_class(d)
less_than
add_call_chain(<<e,INTEGER,C>>)
equals
int_value (3)
add_command("INTEGER", "b", <<["C", "BOOLEAN"]>>)
generate_java_code
add_command("A", "D", <<["b", "BOOLEAN"], ["e", "BOOLEAN"], ["d", "e"], ["C", "a"]>>)
add_call_chain(<<B,b,B,A,B>>)
add_attribute("a", "b", "A")
numerical_negation
type_check
generate_java_code
numerical_negation
bool_value (true)
add_call_chain(<<INTEGER>>)
generate_java_code
numerical_negation
bool_value (false)
type_check
bool_value (true)
add_class(b)
add_command("D", "B", <<["a", "INTEGER"], ["A", "b"], ["D", "c"], ["INTEGER", "INTEGER"], ["b", "INTEGER"], ["B", "d"], ["A", "INTEGER"], ["A", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>)
subtraction
add_command("BOOLEAN", "d", <<["BOOLEAN", "b"], ["e", "a"], ["b", "INTEGER"], ["B", "INTEGER"], ["B", "BOOLEAN"], ["A", "INTEGER"]>>)
add_attribute("C", "C", "INTEGER")
add_call_chain(<<b,C,e,d,a>>)
add_attribute("A", "e", "BOOLEAN")
type_check
bool_value (false)
add_query("INTEGER", "c", <<["D", "INTEGER"], ["D", "INTEGER"], ["a", "BOOLEAN"]>>, "B")
add_call_chain(<<e,A>>)
add_attribute("a", "A", "BOOLEAN")
type_check
bool_value (true)
bool_value (false)
type_check
add_query("D", "e", <<["b", "b"], ["B", "e"], ["A", "BOOLEAN"], ["D", "BOOLEAN"], ["INTEGER", "d"], ["C", "B"], ["d", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "INTEGER"]>>, "C")
add_attribute("INTEGER", "D", "BOOLEAN")
equals
add_call_chain(<<e,A,c,c,C,INTEGER>>)
bool_value (true)
add_call_chain(<<D,d,b,C,A,b,c,d>>)
logical_negation
add_query("BOOLEAN", "D", <<["BOOLEAN", "INTEGER"], ["d", "b"], ["B", "BOOLEAN"], ["B", "INTEGER"], ["C", "INTEGER"]>>, "C")
greater_than
add_command("e", "A", <<["B", "INTEGER"], ["B", "INTEGER"], ["d", "c"], ["B", "e"], ["INTEGER", "BOOLEAN"], ["e", "INTEGER"], ["b", "A"], ["A", "BOOLEAN"]>>)
int_value (4)
add_query("d", "D", <<["b", "INTEGER"], ["B", "e"], ["B", "BOOLEAN"], ["a", "INTEGER"], ["d", "BOOLEAN"], ["D", "BOOLEAN"]>>, "d")
disjunction
greater_than
logical_negation
add_command("D", "c", <<["d", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["INTEGER", "D"], ["B", "e"], ["c", "INTEGER"], ["e", "INTEGER"], ["C", "c"]>>)
add_command("A", "BOOLEAN", <<["A", "B"], ["a", "INTEGER"]>>)
int_value (5)
add_call_chain(<<A,b,A,BOOLEAN,B,A,C,c>>)
add_query("c", "A", <<["D", "INTEGER"], ["e", "INTEGER"], ["c", "BOOLEAN"], ["A", "e"], ["b", "C"], ["e", "BOOLEAN"], ["c", "BOOLEAN"]>>, "D")
add_call_chain(<<B,INTEGER,B,d,A,d>>)
add_query("b", "a", <<["C", "INTEGER"], ["c", "BOOLEAN"]>>, "d")
less_than
add_attribute("a", "e", "INTEGER")
numerical_negation
add_class(D)
add_attribute("a", "b", "BOOLEAN")
add_query("INTEGER", "A", <<["e", "A"], ["e", "C"], ["A", "C"], ["C", "A"]>>, "BOOLEAN")
conjunction
generate_java_code
generate_java_code
equals
add_attribute("a", "c", "INTEGER")
less_than
add_attribute("b", "e", "BOOLEAN")
add_query("A", "a", <<["INTEGER", "INTEGER"], ["A", "INTEGER"], ["C", "INTEGER"], ["C", "c"]>>, "b")
add_call_chain(<<d,a,INTEGER,e,a,c,b>>)
add_class(d)
add_attribute("b", "b", "b")
add_attribute("e", "a", "INTEGER")
int_value (45)
add_attribute("INTEGER", "C", "e")
type_check
add_class(C)
add_query("c", "D", <<["B", "BOOLEAN"], ["c", "INTEGER"], ["INTEGER", "BOOLEAN"], ["c", "INTEGER"], ["d", "INTEGER"]>>, "D")
addition
logical_negation
less_than
addition
add_call_chain(<<C,B,A,b,A,a>>)
add_attribute("INTEGER", "INTEGER", "BOOLEAN")
add_query("b", "A", <<["B", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "INTEGER"], ["c", "e"], ["D", "d"], ["b", "BOOLEAN"], ["c", "BOOLEAN"], ["d", "INTEGER"]>>, "c")
add_call_chain(<<B,a,b,e,C,c,D,b,B>>)
add_attribute("INTEGER", "D", "d")
bool_value (false)
bool_value (false)
add_query("C", "a", <<["B", "BOOLEAN"], ["e", "D"], ["D", "A"], ["d", "c"], ["B", "BOOLEAN"]>>, "e")
bool_value (true)
add_attribute("b", "A", "e")
type_check
add_call_chain(<<d,c,B,a,C,A,A>>)
