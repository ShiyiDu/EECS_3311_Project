less_than
add_attribute("D", "A", "INTEGER")
add_class(INTEGER)
add_call_chain(<<B,b>>)
add_call_chain(<<INTEGER,b,e,D,a>>)
logical_negation
add_attribute("b", "A", "BOOLEAN")
logical_negation
bool_value (true)
disjunction
numerical_negation
bool_value (true)
add_attribute("A", "A", "BOOLEAN")
bool_value (true)
add_attribute("B", "D", "BOOLEAN")
bool_value (true)
add_call_chain(<<D,b,C,a,b,c,D>>)
logical_negation
generate_java_code
add_command("C", "a", <<["B", "INTEGER"], ["A", "B"], ["b", "BOOLEAN"], ["A", "D"], ["a", "BOOLEAN"], ["e", "INTEGER"], ["e", "B"], ["B", "INTEGER"]>>)
add_attribute("C", "B", "INTEGER")
add_class(C)
add_call_chain(<<a,C,c,B,C,d,D,C,a>>)
disjunction
add_call_chain(<<D,INTEGER,B,C,D,D,d,INTEGER>>)
addition
add_class(b)
less_than
add_call_chain(<<b>>)
bool_value (false)
add_command("D", "BOOLEAN", <<["c", "BOOLEAN"], ["D", "INTEGER"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["INTEGER", "INTEGER"]>>)
add_call_chain(<<e,D>>)
greater_than
generate_java_code
int_value (19)
multiplication
equals
add_call_chain(<<b,c,A,e,BOOLEAN,INTEGER,A,B,d>>)
generate_java_code
add_class(INTEGER)
add_attribute("d", "A", "INTEGER")
add_query("a", "d", <<["a", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "B"], ["C", "C"], ["d", "a"], ["d", "INTEGER"], ["c", "INTEGER"]>>, "INTEGER")
add_command("BOOLEAN", "e", <<["A", "BOOLEAN"], ["B", "BOOLEAN"]>>)
numerical_negation
add_call_chain(<<c,C,b>>)
add_call_chain(<<d,A>>)
subtraction
add_call_chain(<<b,d>>)
equals
conjunction
add_class(e)
add_command("A", "B", <<["D", "b"], ["b", "c"], ["a", "INTEGER"], ["A", "INTEGER"], ["INTEGER", "INTEGER"]>>)
generate_java_code
int_value (30)
add_query("B", "D", <<["D", "c"]>>, "a")
add_call_chain(<<D,d,d,C,C,b,D,a,e>>)
add_query("c", "b", <<["C", "BOOLEAN"], ["b", "D"], ["b", "BOOLEAN"], ["c", "b"], ["d", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["b", "INTEGER"], ["A", "BOOLEAN"]>>, "A")
addition
bool_value (true)
bool_value (false)
logical_negation
add_call_chain(<<A,a,b,BOOLEAN>>)
add_attribute("D", "C", "D")
logical_negation
generate_java_code
add_class(D)
generate_java_code
bool_value (true)
add_call_chain(<<e,BOOLEAN,D,c,A>>)
add_query("C", "b", <<["b", "BOOLEAN"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["a", "INTEGER"]>>, "A")
add_command("B", "b", <<["D", "INTEGER"], ["C", "D"], ["C", "BOOLEAN"], ["e", "c"], ["e", "e"], ["d", "INTEGER"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["c", "BOOLEAN"]>>)
add_class(d)
bool_value (true)
add_query("A", "D", <<["e", "BOOLEAN"], ["e", "D"], ["D", "INTEGER"], ["b", "BOOLEAN"], ["d", "b"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["b", "e"], ["b", "B"]>>, "e")
add_call_chain(<<e,a,b>>)
numerical_negation
type_check
logical_negation
logical_negation
add_call_chain(<<B,A,d,e,D,b,e,a,B>>)
bool_value (true)
add_query("d", "b", <<["B", "b"], ["C", "e"], ["D", "BOOLEAN"], ["b", "INTEGER"], ["INTEGER", "INTEGER"], ["a", "c"], ["B", "INTEGER"], ["e", "INTEGER"]>>, "a")
disjunction
bool_value (true)
type_check
add_query("A", "B", <<["b", "INTEGER"], ["c", "BOOLEAN"], ["a", "INTEGER"], ["d", "a"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["b", "INTEGER"], ["b", "INTEGER"]>>, "e")
logical_negation
add_call_chain(<<C,A,c,B,C>>)
multiplication
add_attribute("B", "d", "BOOLEAN")
int_value (11)
int_value (6)
int_value (42)
numerical_negation
multiplication
generate_java_code
add_query("B", "d", <<["b", "INTEGER"], ["D", "INTEGER"], ["INTEGER", "c"], ["BOOLEAN", "b"], ["c", "BOOLEAN"]>>, "D")
add_query("b", "INTEGER", <<["B", "BOOLEAN"], ["e", "INTEGER"], ["a", "INTEGER"], ["d", "INTEGER"]>>, "INTEGER")
generate_java_code
add_attribute("c", "c", "BOOLEAN")
add_attribute("B", "D", "INTEGER")
add_command("d", "A", <<["A", "BOOLEAN"], ["INTEGER", "INTEGER"], ["B", "BOOLEAN"]>>)
int_value (10)
int_value (1)
add_call_chain(<<e,a,INTEGER,B,D>>)
add_call_chain(<<d,a>>)
numerical_negation
add_command("B", "C", <<["B", "C"], ["b", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "INTEGER"], ["e", "INTEGER"], ["D", "INTEGER"], ["B", "INTEGER"], ["d", "a"]>>)
conjunction
add_class(B)
bool_value (true)
modulo
less_than
type_check
numerical_negation
generate_java_code
add_query("C", "C", <<["C", "INTEGER"], ["a", "A"], ["a", "BOOLEAN"], ["c", "BOOLEAN"], ["c", "INTEGER"]>>, "a")
bool_value (false)
type_check
add_attribute("C", "BOOLEAN", "BOOLEAN")
add_attribute("d", "d", "BOOLEAN")
add_attribute("A", "b", "BOOLEAN")
logical_negation
add_call_chain(<<c,c,C,e,A,c,BOOLEAN>>)
add_query("c", "a", <<["d", "INTEGER"], ["B", "INTEGER"], ["a", "e"], ["INTEGER", "D"], ["A", "B"]>>, "d")
add_command("B", "B", <<["e", "INTEGER"]>>)
add_call_chain(<<C,INTEGER,C,d,A,A>>)
bool_value (true)
generate_java_code
equals
add_attribute("C", "A", "A")
int_value (23)
greater_than
add_call_chain(<<C,B>>)
add_attribute("A", "c", "BOOLEAN")
int_value (22)
type_check
add_call_chain(<<INTEGER,e,c,d,a,B,C>>)
generate_java_code
int_value (26)
add_attribute("e", "D", "INTEGER")
add_command("d", "D", <<["a", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "INTEGER"], ["A", "BOOLEAN"], ["a", "d"], ["C", "BOOLEAN"], ["D", "c"]>>)
add_call_chain(<<B,c,BOOLEAN>>)
bool_value (true)
generate_java_code
add_command("a", "D", <<["B", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "BOOLEAN"]>>)
numerical_negation
add_attribute("b", "d", "BOOLEAN")
conjunction
add_attribute("INTEGER", "e", "INTEGER")
disjunction
type_check
logical_negation
equals
add_call_chain(<<c,d,B,D>>)
add_command("D", "e", <<["c", "BOOLEAN"], ["d", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "INTEGER"], ["A", "BOOLEAN"]>>)
logical_negation
add_call_chain(<<A,a,A,b,e,BOOLEAN>>)
modulo
add_call_chain(<<A,e,A,D,d,a>>)
addition
greater_than
int_value (36)
add_query("A", "C", <<["d", "INTEGER"]>>, "c")
add_query("c", "b", <<["e", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "C"], ["INTEGER", "B"]>>, "b")
type_check
add_attribute("BOOLEAN", "B", "D")
add_attribute("c", "B", "BOOLEAN")
bool_value (true)
generate_java_code
logical_negation
generate_java_code
add_call_chain(<<INTEGER,e,a,INTEGER,B,INTEGER,e>>)
add_call_chain(<<e,c>>)
add_attribute("d", "a", "C")
numerical_negation
bool_value (false)
add_query("D", "d", <<["INTEGER", "BOOLEAN"], ["B", "INTEGER"]>>, "a")
add_class(B)
bool_value (false)
numerical_negation
add_class(C)
add_attribute("B", "A", "INTEGER")
add_class(D)
int_value (24)
add_call_chain(<<e,D,A,D,A,c,BOOLEAN,b,b>>)
add_query("b", "d", <<["C", "INTEGER"], ["d", "INTEGER"], ["D", "INTEGER"], ["D", "B"], ["D", "INTEGER"], ["B", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["e", "c"]>>, "e")
add_command("A", "C", <<["d", "INTEGER"]>>)
add_command("b", "a", <<["a", "BOOLEAN"], ["C", "e"], ["e", "INTEGER"]>>)
disjunction
quotient
disjunction
add_call_chain(<<A,D,b,e,B,b,A>>)
bool_value (false)
add_query("e", "b", <<["e", "BOOLEAN"], ["A", "INTEGER"]>>, "d")
add_call_chain(<<B,c,b,B,e,C,c,e,d>>)
conjunction
add_command("D", "c", <<["a", "INTEGER"], ["c", "INTEGER"], ["c", "INTEGER"], ["C", "INTEGER"], ["B", "INTEGER"], ["C", "INTEGER"], ["C", "b"]>>)
disjunction
add_query("e", "A", <<["a", "INTEGER"], ["D", "BOOLEAN"]>>, "B")
int_value (37)
logical_negation
add_call_chain(<<BOOLEAN,D,D,c,B,B,c,b>>)
quotient
int_value (31)
add_call_chain(<<b,B,a,D,INTEGER,C,e>>)
generate_java_code
add_call_chain(<<b,c,e,d,A,D,B>>)
generate_java_code
add_query("b", "e", <<["e", "b"], ["a", "INTEGER"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["b", "BOOLEAN"], ["INTEGER", "c"], ["a", "BOOLEAN"]>>, "e")
add_command("d", "a", <<["b", "INTEGER"], ["B", "INTEGER"], ["D", "B"], ["c", "e"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>)
add_query("a", "d", <<["b", "INTEGER"], ["d", "INTEGER"], ["B", "BOOLEAN"], ["A", "d"], ["b", "c"], ["D", "INTEGER"]>>, "e")
add_class(a)
logical_negation
add_attribute("B", "B", "INTEGER")
add_command("BOOLEAN", "d", <<["b", "INTEGER"], ["a", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["e", "d"], ["c", "BOOLEAN"], ["C", "B"]>>)
multiplication
logical_negation
bool_value (false)
add_command("A", "INTEGER", <<["B", "e"], ["C", "BOOLEAN"]>>)
type_check
quotient
add_attribute("a", "C", "D")
logical_negation
add_command("D", "e", <<["b", "BOOLEAN"], ["c", "INTEGER"], ["a", "BOOLEAN"]>>)
equals
numerical_negation
addition
add_attribute("A", "c", "b")
add_call_chain(<<INTEGER,a,A,e>>)
add_command("b", "b", <<["C", "BOOLEAN"]>>)
add_call_chain(<<c,C,b,C,A,INTEGER,A,e>>)
add_command("D", "D", <<["e", "INTEGER"], ["C", "BOOLEAN"], ["d", "BOOLEAN"], ["INTEGER", "INTEGER"], ["D", "BOOLEAN"], ["A", "b"], ["d", "b"]>>)
int_value (1)
add_query("D", "c", <<["C", "d"], ["D", "INTEGER"]>>, "c")
add_class(B)
add_command("e", "B", <<["INTEGER", "INTEGER"], ["B", "B"]>>)
add_query("D", "D", <<["b", "BOOLEAN"], ["b", "D"]>>, "BOOLEAN")
add_call_chain(<<c,A,D,BOOLEAN,INTEGER>>)
add_command("BOOLEAN", "e", <<["a", "INTEGER"], ["b", "B"], ["C", "BOOLEAN"]>>)
bool_value (true)
add_call_chain(<<D,C,a,INTEGER,D,D,a,b,C>>)
add_call_chain(<<c,d,c,e,a,d>>)
add_query("b", "B", <<["A", "BOOLEAN"], ["c", "A"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "C"], ["a", "C"], ["C", "INTEGER"], ["C", "c"]>>, "c")
add_command("d", "d", <<["A", "BOOLEAN"], ["A", "INTEGER"], ["b", "BOOLEAN"], ["e", "D"], ["A", "INTEGER"]>>)
add_command("A", "D", <<["e", "BOOLEAN"], ["a", "b"]>>)
addition
numerical_negation
add_query("c", "A", <<["a", "BOOLEAN"], ["INTEGER", "INTEGER"], ["c", "INTEGER"], ["D", "INTEGER"], ["e", "BOOLEAN"]>>, "D")
add_class(B)
add_command("a", "c", <<["C", "INTEGER"], ["INTEGER", "INTEGER"]>>)
add_call_chain(<<d,BOOLEAN,A,e,e,BOOLEAN,C,b,INTEGER>>)
add_command("d", "B", <<["d", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "INTEGER"], ["d", "INTEGER"]>>)
add_call_chain(<<b,d,a>>)
