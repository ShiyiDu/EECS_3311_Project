add_call_chain(<<c,B>>)
add_class(A)
add_class(c)
add_command("a", "A", <<["b", "INTEGER"], ["A", "BOOLEAN"], ["d", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["c", "INTEGER"]>>)
int_value (38)
add_attribute("d", "BOOLEAN", "c")
logical_negation
disjunction
add_call_chain(<<b,D,C,D,e>>)
add_call_chain(<<B,d,B>>)
add_call_chain(<<e,c>>)
add_class(A)
add_class(a)
conjunction
logical_negation
numerical_negation
int_value (49)
add_call_chain(<<a>>)
add_call_chain(<<BOOLEAN,B,a,a,d,D,e>>)
logical_negation
add_call_chain(<<b,C,B,A>>)
addition
int_value (11)
add_call_chain(<<B,a,d,e,B,c>>)
add_call_chain(<<C>>)
add_query("a", "D", <<["e", "INTEGER"], ["e", "INTEGER"]>>, "INTEGER")
add_call_chain(<<BOOLEAN,D,c,e,b,b,c,b>>)
conjunction
add_query("B", "C", <<["a", "INTEGER"], ["D", "INTEGER"]>>, "d")
modulo
add_call_chain(<<d,C,BOOLEAN,A,a,c>>)
add_attribute("D", "BOOLEAN", "BOOLEAN")
add_command("a", "b", <<["e", "D"], ["BOOLEAN", "BOOLEAN"]>>)
numerical_negation
greater_than
numerical_negation
add_class(c)
add_call_chain(<<d,C,e,D,INTEGER,b>>)
greater_than
generate_java_code
add_call_chain(<<B,B>>)
conjunction
bool_value (false)
add_query("INTEGER", "C", <<["b", "INTEGER"]>>, "d")
int_value (39)
int_value (20)
add_attribute("b", "c", "INTEGER")
add_attribute("b", "B", "INTEGER")
generate_java_code
add_class(D)
add_command("D", "c", <<["C", "BOOLEAN"], ["d", "e"], ["c", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "INTEGER"], ["e", "BOOLEAN"], ["b", "BOOLEAN"]>>)
int_value (38)
add_call_chain(<<a,C,D,B,A,B>>)
add_query("a", "d", <<["BOOLEAN", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["c", "INTEGER"]>>, "e")
add_class(c)
add_call_chain(<<BOOLEAN,A>>)
add_call_chain(<<d>>)
int_value (21)
numerical_negation
add_command("c", "e", <<["B", "INTEGER"], ["B", "INTEGER"], ["e", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "INTEGER"]>>)
type_check
add_command("B", "D", <<["D", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "a"], ["a", "INTEGER"]>>)
logical_negation
subtraction
add_class(D)
subtraction
add_command("INTEGER", "BOOLEAN", <<["a", "INTEGER"]>>)
int_value (40)
add_call_chain(<<A>>)
numerical_negation
conjunction
add_query("A", "d", <<["d", "BOOLEAN"]>>, "b")
bool_value (false)
greater_than
add_query("b", "A", <<["c", "INTEGER"], ["c", "BOOLEAN"], ["c", "INTEGER"], ["c", "INTEGER"], ["INTEGER", "BOOLEAN"], ["c", "INTEGER"], ["c", "INTEGER"]>>, "D")
numerical_negation
bool_value (true)
int_value (47)
add_call_chain(<<e,INTEGER,C,a,A,a>>)
add_attribute("A", "B", "INTEGER")
logical_negation
logical_negation
bool_value (true)
conjunction
disjunction
add_call_chain(<<a,d,B,A,d>>)
quotient
add_query("d", "B", <<["INTEGER", "b"]>>, "BOOLEAN")
int_value (40)
greater_than
add_attribute("a", "A", "BOOLEAN")
logical_negation
add_attribute("BOOLEAN", "b", "INTEGER")
add_query("a", "D", <<["C", "BOOLEAN"], ["c", "INTEGER"], ["A", "INTEGER"], ["a", "B"], ["A", "INTEGER"]>>, "A")
add_call_chain(<<b,e,A,D,A,A,A,d>>)
conjunction
add_attribute("b", "a", "BOOLEAN")
generate_java_code
type_check
add_call_chain(<<C,A>>)
add_query("B", "B", <<["D", "INTEGER"], ["e", "d"], ["a", "INTEGER"], ["a", "INTEGER"], ["e", "INTEGER"], ["A", "D"]>>, "c")
add_class(D)
bool_value (false)
bool_value (true)
add_class(e)
generate_java_code
add_call_chain(<<INTEGER,INTEGER,a,a,b,A,B>>)
int_value (13)
add_attribute("BOOLEAN", "C", "INTEGER")
add_call_chain(<<A,D,D,b,A,C,INTEGER,b>>)
add_call_chain(<<D,A,a,e,B,D>>)
add_call_chain(<<B,c,A>>)
conjunction
add_command("b", "d", <<["INTEGER", "BOOLEAN"], ["b", "B"], ["B", "INTEGER"], ["C", "A"], ["C", "INTEGER"], ["C", "BOOLEAN"]>>)
add_call_chain(<<B,B,e,D,B,b,A,a>>)
numerical_negation
bool_value (true)
add_command("e", "e", <<["a", "BOOLEAN"], ["B", "INTEGER"], ["BOOLEAN", "B"], ["e", "a"], ["e", "BOOLEAN"], ["e", "BOOLEAN"]>>)
int_value (20)
add_call_chain(<<B,c,INTEGER,D,b,C>>)
add_query("INTEGER", "c", <<["d", "INTEGER"], ["C", "BOOLEAN"], ["D", "B"], ["C", "BOOLEAN"], ["a", "INTEGER"], ["A", "b"], ["e", "INTEGER"]>>, "d")
int_value (34)
add_query("D", "A", <<["D", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "d"], ["c", "INTEGER"], ["BOOLEAN", "INTEGER"], ["d", "INTEGER"], ["a", "BOOLEAN"], ["D", "INTEGER"]>>, "B")
add_call_chain(<<INTEGER,e,A,b,b,INTEGER,D,d,D>>)
equals
add_command("C", "B", <<["INTEGER", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "INTEGER"], ["d", "BOOLEAN"], ["B", "INTEGER"]>>)
add_attribute("INTEGER", "A", "D")
disjunction
add_call_chain(<<a>>)
logical_negation
add_query("A", "C", <<["INTEGER", "C"], ["C", "B"]>>, "C")
add_call_chain(<<A,e,a,C,A,a,e>>)
less_than
bool_value (false)
bool_value (false)
add_command("C", "d", <<["BOOLEAN", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "INTEGER"]>>)
equals
add_command("C", "D", <<["b", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "INTEGER"], ["a", "BOOLEAN"]>>)
add_attribute("d", "A", "A")
conjunction
add_call_chain(<<b>>)
add_call_chain(<<B,c,d>>)
numerical_negation
generate_java_code
int_value (37)
numerical_negation
add_call_chain(<<C,e,D,A,a,INTEGER>>)
add_query("c", "A", <<["INTEGER", "b"], ["e", "d"], ["D", "BOOLEAN"], ["d", "BOOLEAN"]>>, "D")
add_call_chain(<<B,C,B,INTEGER>>)
bool_value (true)
subtraction
greater_than
add_attribute("BOOLEAN", "INTEGER", "BOOLEAN")
generate_java_code
add_class(D)
int_value (45)
add_query("d", "A", <<["D", "BOOLEAN"], ["D", "c"], ["b", "c"], ["C", "d"], ["INTEGER", "INTEGER"]>>, "B")
int_value (21)
bool_value (true)
add_query("B", "B", <<["A", "BOOLEAN"], ["A", "INTEGER"], ["b", "INTEGER"], ["A", "C"], ["a", "c"], ["A", "INTEGER"], ["D", "BOOLEAN"]>>, "D")
add_attribute("C", "D", "INTEGER")
int_value (33)
numerical_negation
add_call_chain(<<BOOLEAN,d,c,BOOLEAN,B,d,BOOLEAN,C,e>>)
add_call_chain(<<e,C,B,a,C,D,C,C,d>>)
numerical_negation
add_attribute("INTEGER", "d", "BOOLEAN")
logical_negation
add_query("a", "A", <<["A", "INTEGER"], ["C", "INTEGER"], ["b", "c"], ["a", "D"], ["c", "INTEGER"], ["d", "e"], ["B", "INTEGER"]>>, "c")
less_than
bool_value (false)
add_call_chain(<<e,INTEGER,A,B,e,d,a,B,A>>)
bool_value (true)
add_attribute("e", "D", "B")
add_call_chain(<<a,c>>)
add_command("a", "C", <<["a", "BOOLEAN"], ["INTEGER", "e"], ["d", "A"], ["a", "BOOLEAN"]>>)
add_attribute("a", "d", "BOOLEAN")
multiplication
int_value (21)
int_value (26)
numerical_negation
add_call_chain(<<d,b,d,b,C,C,B>>)
add_class(a)
add_call_chain(<<D,e,A,INTEGER,D,A,e>>)
add_query("INTEGER", "C", <<["b", "C"], ["INTEGER", "BOOLEAN"], ["d", "INTEGER"], ["B", "BOOLEAN"]>>, "e")
add_query("A", "a", <<["C", "INTEGER"], ["C", "INTEGER"], ["b", "INTEGER"], ["A", "INTEGER"], ["C", "BOOLEAN"]>>, "C")
add_command("b", "c", <<["A", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "BOOLEAN"]>>)
add_command("A", "e", <<["B", "INTEGER"]>>)
logical_negation
numerical_negation
add_attribute("INTEGER", "D", "INTEGER")
int_value (22)
add_attribute("d", "D", "BOOLEAN")
add_command("B", "b", <<["A", "A"], ["C", "INTEGER"], ["C", "B"], ["b", "A"], ["D", "D"], ["e", "a"], ["d", "BOOLEAN"]>>)
add_command("c", "e", <<["C", "INTEGER"], ["a", "C"], ["b", "BOOLEAN"], ["a", "INTEGER"]>>)
bool_value (true)
int_value (28)
conjunction
type_check
disjunction
add_attribute("C", "d", "C")
subtraction
add_query("c", "D", <<["e", "D"], ["e", "BOOLEAN"], ["D", "INTEGER"]>>, "A")
less_than
add_query("A", "BOOLEAN", <<["a", "INTEGER"], ["b", "BOOLEAN"], ["a", "INTEGER"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "A"], ["a", "A"], ["D", "INTEGER"], ["e", "BOOLEAN"]>>, "C")
bool_value (false)
add_query("b", "e", <<["B", "INTEGER"], ["b", "INTEGER"], ["BOOLEAN", "INTEGER"], ["INTEGER", "BOOLEAN"], ["c", "INTEGER"], ["b", "D"], ["d", "INTEGER"]>>, "A")
bool_value (true)
logical_negation
add_query("a", "D", <<["A", "B"], ["c", "BOOLEAN"], ["c", "INTEGER"]>>, "C")
numerical_negation
int_value (13)
add_call_chain(<<D,D,c,A,a,D>>)
equals
less_than
int_value (8)
bool_value (true)
bool_value (false)
add_call_chain(<<B,a,b,b,a,c>>)
greater_than
add_command("b", "d", <<["e", "INTEGER"], ["B", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["INTEGER", "BOOLEAN"], ["b", "b"], ["a", "INTEGER"], ["D", "D"], ["B", "INTEGER"]>>)
numerical_negation
add_command("d", "B", <<["e", "INTEGER"], ["C", "INTEGER"], ["d", "BOOLEAN"], ["D", "INTEGER"]>>)
int_value (34)
int_value (34)
logical_negation
