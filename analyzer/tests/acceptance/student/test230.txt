add_attribute("D", "D", "b")
logical_negation
add_query("B", "A", <<["d", "BOOLEAN"], ["c", "BOOLEAN"]>>, "B")
add_command("INTEGER", "A", <<["e", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["c", "BOOLEAN"], ["B", "d"]>>)
logical_negation
add_query("b", "d", <<["e", "BOOLEAN"], ["INTEGER", "D"], ["C", "INTEGER"], ["b", "BOOLEAN"], ["b", "BOOLEAN"]>>, "b")
int_value (39)
conjunction
bool_value (false)
add_attribute("d", "D", "BOOLEAN")
int_value (30)
type_check
generate_java_code
add_class(e)
disjunction
less_than
int_value (15)
logical_negation
add_query("D", "a", <<["D", "b"], ["A", "INTEGER"], ["A", "INTEGER"], ["D", "BOOLEAN"]>>, "e")
add_command("A", "e", <<["b", "INTEGER"]>>)
bool_value (true)
add_query("e", "e", <<["c", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "INTEGER"], ["A", "c"]>>, "c")
bool_value (true)
equals
type_check
equals
generate_java_code
quotient
quotient
int_value (9)
numerical_negation
add_attribute("a", "A", "d")
add_attribute("D", "b", "e")
bool_value (true)
add_call_chain(<<d,C,b,A,D>>)
add_query("b", "b", <<["d", "INTEGER"], ["BOOLEAN", "c"], ["B", "b"], ["D", "BOOLEAN"], ["A", "a"], ["e", "BOOLEAN"]>>, "INTEGER")
add_query("c", "A", <<["e", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["a", "BOOLEAN"]>>, "a")
add_call_chain(<<C,e,D,e,a,e,c>>)
add_class(c)
add_call_chain(<<BOOLEAN,C,d,B,C,a,c,a,a>>)
generate_java_code
add_class(B)
add_command("D", "D", <<["c", "c"], ["D", "c"], ["e", "e"], ["C", "INTEGER"]>>)
add_call_chain(<<c,A,D,e,e,B,C,A,C>>)
type_check
add_attribute("B", "c", "BOOLEAN")
bool_value (true)
add_command("BOOLEAN", "A", <<["C", "c"]>>)
int_value (23)
int_value (13)
add_query("e", "BOOLEAN", <<["C", "INTEGER"], ["BOOLEAN", "INTEGER"], ["INTEGER", "INTEGER"], ["c", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["B", "a"], ["C", "D"]>>, "a")
add_call_chain(<<B,C,e,c>>)
add_call_chain(<<d,BOOLEAN,INTEGER,BOOLEAN,d,A>>)
numerical_negation
add_command("BOOLEAN", "D", <<["B", "INTEGER"], ["C", "INTEGER"]>>)
multiplication
add_command("B", "e", <<["INTEGER", "INTEGER"], ["a", "B"], ["d", "c"], ["D", "D"], ["b", "INTEGER"], ["a", "A"], ["d", "INTEGER"]>>)
quotient
type_check
generate_java_code
bool_value (false)
add_attribute("b", "c", "INTEGER")
equals
conjunction
add_command("e", "B", <<["D", "BOOLEAN"]>>)
int_value (47)
subtraction
add_command("a", "D", <<["A", "BOOLEAN"], ["e", "BOOLEAN"], ["d", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "C"], ["D", "BOOLEAN"]>>)
bool_value (true)
logical_negation
add_command("B", "C", <<["BOOLEAN", "BOOLEAN"]>>)
add_command("D", "a", <<["D", "INTEGER"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "INTEGER"], ["INTEGER", "INTEGER"]>>)
add_call_chain(<<D,d,A,d,INTEGER,c>>)
disjunction
add_query("e", "c", <<["B", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "c"], ["D", "INTEGER"], ["B", "INTEGER"], ["A", "d"], ["a", "D"]>>, "D")
add_call_chain(<<INTEGER,A,D,e>>)
conjunction
add_query("d", "d", <<["C", "INTEGER"]>>, "c")
int_value (5)
add_attribute("A", "e", "BOOLEAN")
bool_value (false)
add_call_chain(<<c,c,A,C>>)
add_call_chain(<<BOOLEAN,INTEGER,B,a,e,INTEGER,B>>)
add_class(BOOLEAN)
int_value (30)
conjunction
add_class(b)
add_command("B", "b", <<["a", "BOOLEAN"], ["C", "INTEGER"], ["C", "e"], ["e", "INTEGER"], ["INTEGER", "INTEGER"], ["b", "INTEGER"], ["c", "INTEGER"], ["b", "C"], ["e", "b"]>>)
modulo
numerical_negation
disjunction
generate_java_code
add_call_chain(<<d,e,c,A>>)
add_call_chain(<<e,A,C,e,a,e,c>>)
add_attribute("A", "e", "INTEGER")
add_call_chain(<<D,B,INTEGER,B>>)
bool_value (false)
add_class(c)
add_query("a", "C", <<["A", "BOOLEAN"], ["c", "INTEGER"], ["a", "A"], ["BOOLEAN", "BOOLEAN"], ["c", "BOOLEAN"]>>, "C")
add_attribute("a", "B", "BOOLEAN")
add_class(D)
numerical_negation
generate_java_code
add_query("INTEGER", "c", <<["b", "INTEGER"], ["a", "C"], ["c", "BOOLEAN"], ["INTEGER", "A"], ["d", "INTEGER"], ["d", "a"], ["D", "INTEGER"], ["b", "INTEGER"], ["INTEGER", "INTEGER"]>>, "C")
numerical_negation
conjunction
add_command("C", "a", <<["e", "BOOLEAN"], ["A", "d"]>>)
add_call_chain(<<A>>)
bool_value (false)
type_check
add_command("B", "b", <<["BOOLEAN", "INTEGER"], ["c", "B"], ["a", "INTEGER"], ["b", "D"], ["C", "A"], ["D", "BOOLEAN"], ["a", "A"], ["BOOLEAN", "INTEGER"], ["D", "B"]>>)
add_call_chain(<<b>>)
add_attribute("a", "b", "INTEGER")
add_call_chain(<<d,c,C,INTEGER,c,b,c,c,b>>)
generate_java_code
type_check
bool_value (true)
numerical_negation
add_command("C", "BOOLEAN", <<["D", "A"], ["b", "INTEGER"], ["B", "INTEGER"], ["C", "d"], ["C", "BOOLEAN"], ["D", "BOOLEAN"]>>)
add_call_chain(<<A,b,A,C,C,e,d>>)
add_class(d)
multiplication
numerical_negation
logical_negation
add_query("b", "d", <<["B", "INTEGER"], ["A", "INTEGER"]>>, "C")
int_value (22)
type_check
type_check
add_call_chain(<<e>>)
add_attribute("d", "e", "INTEGER")
equals
numerical_negation
int_value (7)
int_value (6)
numerical_negation
type_check
int_value (9)
add_attribute("d", "B", "INTEGER")
logical_negation
generate_java_code
type_check
conjunction
logical_negation
add_attribute("C", "d", "INTEGER")
bool_value (true)
add_call_chain(<<C,d,e,INTEGER,b>>)
generate_java_code
type_check
add_command("A", "c", <<["C", "INTEGER"], ["A", "INTEGER"]>>)
bool_value (true)
add_call_chain(<<b,a,a,C,INTEGER,C,C,A>>)
bool_value (false)
add_query("INTEGER", "A", <<["D", "d"], ["A", "INTEGER"], ["d", "BOOLEAN"], ["B", "A"], ["d", "BOOLEAN"]>>, "B")
add_attribute("d", "c", "D")
bool_value (true)
add_query("d", "C", <<["BOOLEAN", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "INTEGER"], ["e", "BOOLEAN"]>>, "A")
add_call_chain(<<BOOLEAN,d,e,D>>)
disjunction
numerical_negation
add_command("C", "a", <<["C", "c"], ["b", "BOOLEAN"], ["D", "INTEGER"], ["e", "c"], ["INTEGER", "D"], ["BOOLEAN", "BOOLEAN"], ["e", "e"]>>)
numerical_negation
less_than
generate_java_code
add_class(a)
numerical_negation
quotient
add_call_chain(<<A>>)
add_class(C)
add_call_chain(<<b,a,C,b,INTEGER,BOOLEAN>>)
numerical_negation
add_command("B", "e", <<["C", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["d", "BOOLEAN"], ["c", "A"]>>)
add_attribute("e", "a", "INTEGER")
add_query("B", "A", <<["D", "a"]>>, "D")
add_attribute("C", "a", "d")
add_call_chain(<<C,a,d,BOOLEAN,a,e,C,A>>)
add_class(d)
add_command("b", "D", <<["B", "BOOLEAN"], ["b", "a"], ["A", "INTEGER"], ["b", "BOOLEAN"], ["a", "D"], ["c", "BOOLEAN"], ["D", "BOOLEAN"]>>)
add_attribute("D", "BOOLEAN", "a")
int_value (1)
add_command("b", "e", <<["B", "b"], ["B", "BOOLEAN"], ["C", "BOOLEAN"]>>)
bool_value (false)
add_command("A", "D", <<["d", "A"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["d", "c"], ["d", "INTEGER"]>>)
int_value (41)
bool_value (false)
add_attribute("b", "d", "INTEGER")
equals
add_query("B", "B", <<["C", "INTEGER"], ["d", "d"], ["A", "a"], ["INTEGER", "INTEGER"], ["B", "b"], ["a", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "BOOLEAN"]>>, "b")
disjunction
multiplication
add_query("C", "D", <<["D", "BOOLEAN"], ["c", "INTEGER"], ["A", "INTEGER"], ["e", "INTEGER"], ["INTEGER", "D"], ["b", "BOOLEAN"], ["A", "INTEGER"], ["d", "INTEGER"], ["B", "INTEGER"]>>, "b")
add_attribute("A", "a", "INTEGER")
disjunction
numerical_negation
add_command("C", "a", <<["e", "INTEGER"]>>)
int_value (36)
generate_java_code
numerical_negation
add_query("b", "a", <<["D", "INTEGER"], ["A", "C"], ["B", "BOOLEAN"]>>, "a")
add_class(b)
add_call_chain(<<D,e>>)
greater_than
bool_value (false)
add_call_chain(<<B,B,C,C,c>>)
int_value (40)
addition
add_call_chain(<<b,INTEGER,A,D,B,c,A,b>>)
numerical_negation
int_value (42)
addition
add_query("C", "b", <<["D", "INTEGER"], ["C", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["B", "INTEGER"], ["B", "C"], ["A", "d"], ["A", "D"]>>, "D")
add_command("b", "d", <<["C", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "c"], ["d", "C"], ["C", "BOOLEAN"], ["B", "INTEGER"], ["C", "BOOLEAN"]>>)
int_value (6)
generate_java_code
type_check
disjunction
addition
int_value (29)
add_query("a", "a", <<["c", "BOOLEAN"], ["A", "c"], ["a", "INTEGER"], ["B", "BOOLEAN"], ["D", "INTEGER"], ["a", "INTEGER"], ["b", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>, "c")
add_query("A", "B", <<["A", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "c"]>>, "C")
logical_negation
add_attribute("A", "a", "a")
add_command("d", "C", <<["e", "BOOLEAN"], ["C", "a"], ["C", "BOOLEAN"]>>)
greater_than
add_attribute("d", "C", "INTEGER")
add_command("b", "B", <<["INTEGER", "D"], ["BOOLEAN", "BOOLEAN"], ["b", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>)
conjunction
