add_command("B", "B", <<["d", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["B", "D"], ["D", "BOOLEAN"], ["c", "INTEGER"], ["d", "BOOLEAN"]>>)
int_value (29)
type_check
greater_than
generate_java_code
add_query("d", "B", <<["D", "INTEGER"], ["d", "INTEGER"]>>, "a")
subtraction
add_query("A", "INTEGER", <<["D", "A"], ["c", "BOOLEAN"], ["c", "D"], ["B", "INTEGER"]>>, "b")
disjunction
add_query("D", "B", <<["D", "d"], ["B", "INTEGER"], ["BOOLEAN", "INTEGER"]>>, "C")
add_command("c", "C", <<["B", "BOOLEAN"], ["A", "INTEGER"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["a", "e"]>>)
bool_value (false)
conjunction
type_check
add_command("A", "D", <<["d", "a"], ["b", "INTEGER"], ["INTEGER", "INTEGER"], ["D", "INTEGER"]>>)
add_attribute("e", "c", "e")
type_check
add_call_chain(<<BOOLEAN,B,c,c,D,a,A,b,D>>)
add_query("d", "C", <<["a", "a"], ["a", "BOOLEAN"], ["c", "BOOLEAN"], ["a", "INTEGER"], ["D", "B"], ["D", "BOOLEAN"], ["A", "b"]>>, "INTEGER")
bool_value (false)
bool_value (false)
numerical_negation
logical_negation
add_call_chain(<<c,BOOLEAN,b,C,INTEGER>>)
int_value (22)
add_command("B", "A", <<["C", "BOOLEAN"], ["b", "b"], ["b", "D"], ["e", "A"], ["e", "BOOLEAN"]>>)
generate_java_code
conjunction
logical_negation
greater_than
add_command("d", "a", <<["d", "BOOLEAN"], ["C", "C"]>>)
add_query("C", "e", <<["d", "a"]>>, "INTEGER")
add_command("e", "A", <<["A", "BOOLEAN"], ["a", "INTEGER"], ["B", "A"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["d", "BOOLEAN"], ["A", "INTEGER"]>>)
add_call_chain(<<D,C>>)
add_query("c", "A", <<["B", "BOOLEAN"], ["A", "B"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "INTEGER"], ["C", "BOOLEAN"], ["b", "b"]>>, "BOOLEAN")
conjunction
add_query("c", "A", <<["D", "e"], ["A", "INTEGER"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["B", "C"], ["a", "e"], ["e", "INTEGER"], ["C", "b"], ["C", "a"]>>, "B")
add_class(a)
add_call_chain(<<d,e,a,d,e,D,D,b>>)
disjunction
conjunction
logical_negation
less_than
numerical_negation
add_call_chain(<<C,B,D,b,D,c>>)
int_value (18)
int_value (22)
add_call_chain(<<d,B,D,a,B,C>>)
numerical_negation
generate_java_code
greater_than
less_than
type_check
conjunction
add_call_chain(<<a,D,a>>)
type_check
add_class(C)
add_call_chain(<<d,a,INTEGER,C,C,B>>)
bool_value (false)
add_class(B)
add_class(d)
add_query("b", "B", <<["B", "INTEGER"], ["INTEGER", "C"], ["B", "BOOLEAN"], ["D", "BOOLEAN"]>>, "A")
add_call_chain(<<B,d>>)
add_command("d", "c", <<["B", "BOOLEAN"], ["C", "INTEGER"], ["B", "INTEGER"], ["d", "BOOLEAN"], ["B", "INTEGER"], ["b", "BOOLEAN"], ["e", "e"]>>)
bool_value (true)
add_call_chain(<<INTEGER,B,e,b>>)
logical_negation
bool_value (false)
add_query("B", "BOOLEAN", <<["C", "C"], ["B", "C"], ["c", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["B", "BOOLEAN"]>>, "a")
add_call_chain(<<d,A,D,BOOLEAN,b,a,d,d,BOOLEAN>>)
add_call_chain(<<A,D>>)
int_value (40)
bool_value (true)
less_than
equals
add_attribute("C", "e", "BOOLEAN")
generate_java_code
add_class(b)
add_class(d)
logical_negation
add_call_chain(<<C,a,A,C,C,a,D,B,B>>)
add_command("INTEGER", "b", <<["B", "INTEGER"], ["D", "INTEGER"], ["b", "D"], ["A", "INTEGER"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["e", "INTEGER"], ["e", "BOOLEAN"], ["e", "BOOLEAN"]>>)
add_call_chain(<<B,B>>)
addition
bool_value (true)
subtraction
logical_negation
add_call_chain(<<b,BOOLEAN,C,d,c,e,A,d>>)
add_call_chain(<<e,a>>)
numerical_negation
logical_negation
type_check
add_call_chain(<<BOOLEAN,B,C,b,c,c,D,c>>)
bool_value (false)
bool_value (false)
int_value (15)
add_command("C", "C", <<["D", "BOOLEAN"], ["INTEGER", "INTEGER"], ["d", "A"]>>)
bool_value (false)
add_command("C", "C", <<["c", "BOOLEAN"], ["C", "INTEGER"], ["A", "INTEGER"], ["a", "INTEGER"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["d", "INTEGER"]>>)
add_call_chain(<<A,e,INTEGER,A>>)
numerical_negation
add_command("A", "e", <<["A", "a"], ["B", "B"], ["e", "d"], ["b", "D"]>>)
add_command("D", "a", <<["BOOLEAN", "INTEGER"]>>)
bool_value (true)
add_command("c", "e", <<["D", "BOOLEAN"], ["d", "B"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>)
numerical_negation
numerical_negation
add_call_chain(<<D,c>>)
int_value (4)
type_check
numerical_negation
int_value (28)
multiplication
add_call_chain(<<b,A,d,e,c>>)
add_call_chain(<<a,D,C,e,c,e>>)
type_check
greater_than
type_check
add_command("a", "D", <<["B", "b"], ["e", "BOOLEAN"]>>)
conjunction
generate_java_code
add_class(D)
add_call_chain(<<d,c,e,c,BOOLEAN,c,c>>)
generate_java_code
add_command("C", "BOOLEAN", <<["e", "b"], ["b", "INTEGER"], ["A", "B"], ["a", "INTEGER"], ["D", "INTEGER"], ["B", "c"], ["B", "BOOLEAN"]>>)
logical_negation
greater_than
subtraction
add_call_chain(<<c,C,D,A,B,INTEGER,C,A,B>>)
type_check
add_call_chain(<<c,D,C,b>>)
add_query("a", "B", <<["d", "c"], ["d", "d"], ["a", "INTEGER"], ["a", "e"], ["d", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["INTEGER", "INTEGER"]>>, "e")
add_call_chain(<<D,A,C>>)
add_query("a", "D", <<["B", "c"]>>, "b")
add_class(b)
int_value (34)
generate_java_code
int_value (21)
add_command("e", "B", <<["a", "INTEGER"], ["a", "A"], ["A", "INTEGER"]>>)
numerical_negation
generate_java_code
disjunction
add_command("c", "BOOLEAN", <<["D", "BOOLEAN"]>>)
add_call_chain(<<c,INTEGER,BOOLEAN,A,b,BOOLEAN>>)
add_call_chain(<<D,INTEGER,d,e,A,C,A,A,C>>)
bool_value (false)
type_check
conjunction
int_value (2)
int_value (7)
add_query("a", "e", <<["c", "INTEGER"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["d", "D"], ["D", "BOOLEAN"], ["D", "b"], ["D", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "INTEGER"]>>, "D")
add_command("d", "D", <<["e", "BOOLEAN"]>>)
add_attribute("B", "c", "B")
multiplication
type_check
add_class(e)
add_class(C)
add_call_chain(<<d,b,b,A,a,A,B,INTEGER,a>>)
bool_value (true)
logical_negation
add_attribute("e", "b", "INTEGER")
add_command("A", "c", <<["e", "A"], ["C", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "C"], ["B", "INTEGER"], ["B", "b"]>>)
add_query("b", "c", <<["BOOLEAN", "C"], ["C", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["c", "INTEGER"], ["b", "INTEGER"], ["B", "INTEGER"], ["B", "c"], ["e", "a"]>>, "c")
numerical_negation
add_query("b", "e", <<["d", "INTEGER"], ["a", "BOOLEAN"], ["D", "BOOLEAN"]>>, "d")
type_check
add_attribute("b", "A", "INTEGER")
int_value (26)
add_command("c", "d", <<["INTEGER", "BOOLEAN"], ["a", "INTEGER"], ["C", "BOOLEAN"], ["e", "INTEGER"], ["d", "INTEGER"], ["A", "INTEGER"]>>)
int_value (46)
add_command("b", "C", <<["e", "BOOLEAN"], ["C", "e"], ["a", "INTEGER"], ["e", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "INTEGER"], ["a", "BOOLEAN"], ["B", "BOOLEAN"]>>)
add_call_chain(<<b,b,a,INTEGER>>)
quotient
int_value (2)
add_command("D", "BOOLEAN", <<["d", "INTEGER"], ["b", "INTEGER"], ["d", "BOOLEAN"], ["A", "BOOLEAN"], ["BOOLEAN", "C"], ["D", "INTEGER"], ["d", "BOOLEAN"], ["D", "INTEGER"], ["C", "BOOLEAN"]>>)
equals
int_value (14)
add_attribute("A", "a", "INTEGER")
int_value (47)
multiplication
add_class(d)
add_call_chain(<<C,b,C,a,BOOLEAN>>)
generate_java_code
int_value (16)
disjunction
add_class(BOOLEAN)
add_call_chain(<<d,D,D,B,d,c,B>>)
bool_value (true)
conjunction
add_command("D", "D", <<["A", "a"], ["C", "INTEGER"], ["c", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "INTEGER"], ["a", "INTEGER"]>>)
conjunction
conjunction
int_value (20)
logical_negation
logical_negation
add_attribute("B", "e", "INTEGER")
add_class(BOOLEAN)
add_call_chain(<<C,B,B,d,A,A,a,c,A>>)
add_query("d", "C", <<["d", "INTEGER"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["D", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["A", "a"], ["a", "BOOLEAN"]>>, "B")
add_call_chain(<<BOOLEAN,C,b,a,b,c,b,b>>)
modulo
add_attribute("D", "D", "BOOLEAN")
conjunction
add_call_chain(<<A,BOOLEAN,b>>)
add_call_chain(<<b,e,D,C,a,a,a,a,A>>)
add_call_chain(<<d,D,e>>)
add_query("D", "b", <<["b", "INTEGER"], ["d", "BOOLEAN"], ["B", "D"], ["B", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["B", "INTEGER"]>>, "B")
add_query("C", "A", <<["A", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "d"]>>, "c")
add_query("D", "c", <<["C", "BOOLEAN"]>>, "BOOLEAN")
add_command("D", "A", <<["C", "INTEGER"], ["B", "INTEGER"], ["e", "BOOLEAN"], ["a", "C"], ["B", "A"], ["A", "a"]>>)
numerical_negation
int_value (5)
add_query("d", "D", <<["BOOLEAN", "D"]>>, "e")
logical_negation
add_call_chain(<<a,b,A,INTEGER,b,C,D>>)
int_value (36)
generate_java_code
add_query("d", "A", <<["e", "INTEGER"], ["d", "A"], ["b", "INTEGER"], ["INTEGER", "INTEGER"], ["D", "a"], ["b", "INTEGER"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["b", "D"]>>, "a")
add_command("B", "D", <<["BOOLEAN", "INTEGER"], ["c", "INTEGER"], ["D", "INTEGER"], ["b", "INTEGER"], ["c", "INTEGER"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["C", "INTEGER"], ["d", "INTEGER"]>>)
add_call_chain(<<D,C,e,d,c,A,C>>)
add_command("A", "BOOLEAN", <<["A", "INTEGER"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "D"], ["A", "BOOLEAN"], ["d", "d"], ["a", "a"], ["e", "BOOLEAN"], ["d", "INTEGER"]>>)
add_call_chain(<<d,D,b>>)
add_class(c)
add_query("d", "A", <<["C", "INTEGER"], ["B", "A"]>>, "D")
logical_negation
add_query("A", "a", <<["c", "e"], ["BOOLEAN", "BOOLEAN"], ["b", "INTEGER"], ["B", "BOOLEAN"], ["c", "INTEGER"], ["A", "a"], ["c", "INTEGER"], ["b", "a"], ["INTEGER", "e"]>>, "B")
add_command("e", "d", <<["A", "INTEGER"], ["C", "C"], ["e", "INTEGER"], ["d", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "INTEGER"], ["d", "INTEGER"]>>)
add_attribute("d", "d", "c")
add_call_chain(<<B,e,e,D,a,e,e,b,BOOLEAN>>)
