int_value (28)
add_attribute("C", "D", "BOOLEAN")
logical_negation
int_value (9)
add_call_chain(<<b,B,BOOLEAN,d,A,A,D>>)
logical_negation
int_value (3)
add_call_chain(<<A>>)
numerical_negation
conjunction
addition
add_call_chain(<<A,A,d,b,e,e,INTEGER,D,d>>)
add_query("d", "c", <<["C", "BOOLEAN"], ["d", "BOOLEAN"]>>, "A")
conjunction
add_call_chain(<<b,A,b,A,INTEGER>>)
greater_than
add_call_chain(<<d,B,BOOLEAN,e,B,e,A,A,b>>)
generate_java_code
add_call_chain(<<A>>)
bool_value (true)
add_command("C", "D", <<["B", "D"], ["B", "BOOLEAN"]>>)
bool_value (false)
int_value (49)
add_call_chain(<<a>>)
add_call_chain(<<b,C,D,B,A,b,C,e,INTEGER>>)
bool_value (true)
bool_value (true)
add_class(B)
multiplication
numerical_negation
add_query("b", "B", <<["C", "BOOLEAN"], ["D", "a"], ["INTEGER", "INTEGER"], ["b", "BOOLEAN"], ["C", "BOOLEAN"]>>, "D")
bool_value (false)
add_query("C", "c", <<["a", "e"], ["B", "INTEGER"], ["C", "d"], ["a", "INTEGER"], ["C", "INTEGER"], ["BOOLEAN", "b"], ["C", "B"], ["BOOLEAN", "C"]>>, "A")
int_value (19)
add_attribute("B", "C", "D")
add_call_chain(<<d,INTEGER,A,C,INTEGER,D,BOOLEAN,BOOLEAN,D>>)
add_call_chain(<<B,c,A,D>>)
numerical_negation
add_query("d", "c", <<["A", "BOOLEAN"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["D", "INTEGER"]>>, "C")
add_class(B)
add_class(b)
add_call_chain(<<d,A,D,e,c,B>>)
addition
modulo
add_command("BOOLEAN", "D", <<["INTEGER", "INTEGER"], ["b", "BOOLEAN"], ["b", "INTEGER"], ["c", "e"], ["b", "c"], ["B", "BOOLEAN"], ["e", "INTEGER"]>>)
numerical_negation
quotient
add_command("b", "INTEGER", <<["D", "e"], ["A", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "INTEGER"], ["C", "INTEGER"], ["b", "b"]>>)
type_check
add_command("a", "b", <<["A", "INTEGER"], ["e", "INTEGER"], ["e", "INTEGER"], ["C", "BOOLEAN"], ["d", "INTEGER"], ["b", "INTEGER"], ["C", "A"]>>)
generate_java_code
int_value (30)
greater_than
numerical_negation
add_call_chain(<<b,d>>)
bool_value (false)
generate_java_code
add_attribute("A", "D", "INTEGER")
add_attribute("A", "b", "b")
numerical_negation
bool_value (true)
bool_value (true)
add_attribute("A", "BOOLEAN", "b")
generate_java_code
bool_value (true)
add_attribute("B", "c", "BOOLEAN")
int_value (46)
add_query("b", "INTEGER", <<["d", "INTEGER"], ["B", "INTEGER"], ["C", "INTEGER"], ["C", "INTEGER"], ["A", "INTEGER"], ["d", "INTEGER"], ["A", "BOOLEAN"]>>, "d")
equals
type_check
bool_value (true)
type_check
add_call_chain(<<e,c,b,D,B,A,a,C,C>>)
add_call_chain(<<BOOLEAN,c,e,A,c,C,c,C,B>>)
add_command("B", "C", <<["a", "e"], ["INTEGER", "d"], ["c", "C"], ["b", "INTEGER"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["D", "INTEGER"], ["b", "INTEGER"], ["D", "BOOLEAN"]>>)
conjunction
add_call_chain(<<INTEGER,C,B,b,C,INTEGER,C,d>>)
bool_value (true)
type_check
subtraction
numerical_negation
add_query("e", "e", <<["D", "B"], ["a", "b"], ["e", "C"], ["A", "INTEGER"], ["b", "INTEGER"]>>, "BOOLEAN")
add_query("C", "A", <<["a", "c"]>>, "d")
add_call_chain(<<A,INTEGER>>)
numerical_negation
add_command("a", "e", <<["C", "BOOLEAN"], ["C", "C"], ["D", "BOOLEAN"], ["c", "INTEGER"], ["d", "BOOLEAN"], ["C", "C"], ["a", "INTEGER"]>>)
add_attribute("C", "INTEGER", "BOOLEAN")
add_query("B", "D", <<["D", "INTEGER"], ["C", "BOOLEAN"], ["D", "e"], ["B", "INTEGER"], ["d", "BOOLEAN"], ["c", "INTEGER"], ["A", "BOOLEAN"], ["e", "BOOLEAN"], ["c", "BOOLEAN"]>>, "c")
add_query("INTEGER", "c", <<["b", "b"], ["d", "BOOLEAN"], ["c", "e"], ["A", "A"], ["b", "BOOLEAN"], ["BOOLEAN", "a"], ["A", "BOOLEAN"], ["e", "INTEGER"], ["e", "INTEGER"]>>, "A")
type_check
add_call_chain(<<A>>)
add_attribute("A", "b", "INTEGER")
numerical_negation
add_attribute("B", "a", "BOOLEAN")
disjunction
add_call_chain(<<c,d,e,C,B,a,B,a,b>>)
numerical_negation
generate_java_code
add_command("C", "B", <<["INTEGER", "BOOLEAN"], ["A", "A"]>>)
bool_value (true)
add_call_chain(<<A>>)
add_command("b", "c", <<["a", "BOOLEAN"], ["B", "INTEGER"], ["C", "BOOLEAN"]>>)
disjunction
add_attribute("C", "C", "INTEGER")
disjunction
add_query("D", "e", <<["B", "A"], ["c", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["D", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["C", "B"]>>, "INTEGER")
numerical_negation
disjunction
add_query("C", "A", <<["e", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "INTEGER"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["B", "A"], ["BOOLEAN", "B"], ["b", "BOOLEAN"]>>, "D")
greater_than
add_command("c", "d", <<["e", "C"], ["D", "BOOLEAN"], ["B", "B"], ["INTEGER", "INTEGER"]>>)
add_query("B", "BOOLEAN", <<["C", "INTEGER"], ["a", "BOOLEAN"], ["c", "BOOLEAN"], ["d", "INTEGER"], ["a", "A"], ["b", "INTEGER"], ["B", "D"]>>, "INTEGER")
int_value (38)
add_call_chain(<<b,B,a,INTEGER,b,BOOLEAN,A,BOOLEAN,D>>)
int_value (11)
add_command("A", "INTEGER", <<["c", "B"], ["e", "BOOLEAN"], ["d", "INTEGER"], ["D", "BOOLEAN"], ["d", "BOOLEAN"], ["b", "BOOLEAN"], ["e", "INTEGER"], ["b", "B"], ["a", "BOOLEAN"]>>)
add_query("BOOLEAN", "C", <<["e", "BOOLEAN"], ["e", "BOOLEAN"], ["d", "a"], ["B", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "c"]>>, "a")
bool_value (false)
bool_value (false)
bool_value (false)
numerical_negation
add_query("INTEGER", "B", <<["D", "C"], ["INTEGER", "INTEGER"], ["d", "B"]>>, "b")
numerical_negation
add_command("C", "d", <<["c", "BOOLEAN"], ["B", "a"]>>)
add_call_chain(<<a,B,D,D,B,d,a,b,e>>)
generate_java_code
bool_value (false)
add_class(INTEGER)
add_call_chain(<<b,a,INTEGER,c,a,INTEGER,e>>)
logical_negation
bool_value (true)
add_command("C", "BOOLEAN", <<["D", "BOOLEAN"], ["D", "INTEGER"], ["a", "B"], ["e", "BOOLEAN"], ["BOOLEAN", "C"], ["C", "INTEGER"], ["INTEGER", "BOOLEAN"], ["e", "a"], ["A", "A"]>>)
add_call_chain(<<INTEGER,e,b,C>>)
type_check
modulo
bool_value (true)
logical_negation
bool_value (true)
bool_value (false)
logical_negation
bool_value (false)
add_query("A", "d", <<["d", "INTEGER"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["D", "C"], ["A", "INTEGER"]>>, "D")
quotient
add_command("c", "A", <<["a", "e"], ["b", "INTEGER"], ["a", "INTEGER"], ["D", "INTEGER"], ["C", "INTEGER"], ["A", "INTEGER"], ["A", "INTEGER"]>>)
add_call_chain(<<e,BOOLEAN,INTEGER,c,INTEGER,c,B>>)
add_attribute("D", "b", "e")
add_attribute("C", "B", "BOOLEAN")
add_query("c", "C", <<["d", "BOOLEAN"], ["b", "D"], ["INTEGER", "C"], ["c", "BOOLEAN"], ["c", "BOOLEAN"]>>, "a")
add_command("d", "e", <<["C", "A"], ["A", "BOOLEAN"], ["b", "INTEGER"], ["e", "INTEGER"], ["c", "BOOLEAN"]>>)
multiplication
disjunction
disjunction
bool_value (false)
add_query("d", "C", <<["D", "C"], ["C", "A"]>>, "B")
add_call_chain(<<INTEGER,A,A,INTEGER,INTEGER,d,e,D>>)
add_command("A", "d", <<["A", "b"], ["C", "INTEGER"], ["B", "A"], ["D", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "A"], ["A", "C"]>>)
add_call_chain(<<C>>)
add_command("A", "d", <<["A", "INTEGER"], ["b", "BOOLEAN"], ["e", "INTEGER"], ["d", "c"], ["A", "BOOLEAN"], ["A", "B"]>>)
add_attribute("a", "a", "BOOLEAN")
int_value (1)
add_command("a", "a", <<["e", "INTEGER"], ["D", "D"], ["c", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "D"], ["c", "INTEGER"], ["A", "INTEGER"]>>)
logical_negation
add_call_chain(<<B,A,D,B,D,C,d,D>>)
bool_value (false)
add_call_chain(<<B,C,C,e,e,B,a,D,a>>)
add_query("A", "b", <<["a", "c"], ["BOOLEAN", "INTEGER"], ["c", "BOOLEAN"]>>, "a")
multiplication
add_query("a", "a", <<["C", "INTEGER"], ["e", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "INTEGER"], ["C", "INTEGER"]>>, "C")
numerical_negation
add_class(INTEGER)
int_value (14)
logical_negation
add_call_chain(<<c>>)
add_command("b", "D", <<["B", "INTEGER"], ["a", "a"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["c", "BOOLEAN"], ["b", "INTEGER"], ["BOOLEAN", "c"], ["d", "BOOLEAN"], ["a", "INTEGER"]>>)
generate_java_code
add_call_chain(<<D,a,A,INTEGER,D>>)
add_call_chain(<<B,B,d,BOOLEAN,D,d>>)
add_attribute("D", "e", "INTEGER")
add_call_chain(<<a,C,b,d,c,b,D,B,D>>)
int_value (27)
int_value (48)
logical_negation
equals
add_query("A", "C", <<["a", "INTEGER"], ["D", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["c", "D"]>>, "D")
logical_negation
modulo
add_attribute("C", "C", "BOOLEAN")
bool_value (false)
add_attribute("c", "A", "BOOLEAN")
int_value (44)
int_value (25)
modulo
logical_negation
numerical_negation
quotient
add_command("c", "D", <<["a", "BOOLEAN"], ["a", "A"], ["INTEGER", "BOOLEAN"], ["A", "BOOLEAN"]>>)
add_attribute("e", "C", "BOOLEAN")
add_call_chain(<<c>>)
add_command("d", "d", <<["a", "INTEGER"], ["b", "BOOLEAN"], ["A", "d"], ["b", "INTEGER"], ["a", "INTEGER"], ["e", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["B", "BOOLEAN"]>>)
numerical_negation
greater_than
int_value (35)
add_class(A)
add_command("a", "a", <<["D", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "D"], ["INTEGER", "INTEGER"], ["D", "INTEGER"], ["D", "d"], ["b", "INTEGER"], ["b", "INTEGER"]>>)
add_call_chain(<<C,c,A,A,a>>)
add_command("b", "b", <<["d", "INTEGER"], ["A", "a"], ["C", "BOOLEAN"], ["c", "INTEGER"]>>)
type_check
add_call_chain(<<a>>)
add_class(c)
add_class(D)
bool_value (false)
add_call_chain(<<d,b,B,e,a,b,e,BOOLEAN>>)
add_call_chain(<<d,C>>)
add_query("B", "c", <<["INTEGER", "INTEGER"]>>, "BOOLEAN")
subtraction
add_call_chain(<<d,B>>)
add_query("d", "A", <<["a", "BOOLEAN"], ["c", "INTEGER"], ["C", "INTEGER"], ["INTEGER", "BOOLEAN"], ["D", "B"]>>, "B")
add_call_chain(<<C,d>>)
add_query("b", "b", <<["a", "INTEGER"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["INTEGER", "d"], ["INTEGER", "INTEGER"], ["d", "BOOLEAN"], ["e", "b"]>>, "c")
conjunction
add_attribute("e", "c", "INTEGER")
numerical_negation
add_call_chain(<<A,B,b,B,e,B,B,a>>)
add_command("C", "C", <<["e", "INTEGER"], ["A", "INTEGER"], ["d", "INTEGER"], ["a", "INTEGER"], ["C", "BOOLEAN"]>>)
add_attribute("C", "A", "A")
add_attribute("c", "D", "INTEGER")
generate_java_code
add_query("A", "D", <<["C", "BOOLEAN"]>>, "d")
add_attribute("A", "b", "BOOLEAN")
add_command("a", "b", <<["D", "BOOLEAN"], ["b", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>)
add_query("BOOLEAN", "BOOLEAN", <<["C", "A"], ["D", "BOOLEAN"]>>, "C")
equals
add_command("A", "C", <<["D", "D"], ["C", "BOOLEAN"], ["B", "INTEGER"], ["d", "INTEGER"], ["e", "BOOLEAN"]>>)
numerical_negation
int_value (5)
add_attribute("B", "C", "INTEGER")
add_command("D", "c", <<["e", "INTEGER"], ["B", "BOOLEAN"], ["e", "A"]>>)
numerical_negation
add_command("A", "a", <<["d", "INTEGER"], ["B", "c"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["a", "BOOLEAN"], ["A", "BOOLEAN"]>>)
logical_negation
add_call_chain(<<c>>)
int_value (14)
int_value (22)
quotient
disjunction
add_command("C", "INTEGER", <<["C", "INTEGER"], ["B", "BOOLEAN"], ["e", "BOOLEAN"]>>)
add_call_chain(<<BOOLEAN,BOOLEAN>>)
bool_value (false)
bool_value (false)
add_call_chain(<<INTEGER,b,B,d,C,e,b,a,A>>)
numerical_negation
