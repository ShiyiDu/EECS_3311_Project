add_attribute("a", "b", "BOOLEAN")
numerical_negation
logical_negation
int_value (49)
add_call_chain(<<d,D,e,A,b,c,b>>)
int_value (44)
add_attribute("c", "d", "BOOLEAN")
add_query("C", "C", <<["c", "BOOLEAN"], ["d", "INTEGER"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["B", "INTEGER"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["BOOLEAN", "d"], ["A", "d"]>>, "c")
add_attribute("c", "D", "e")
add_attribute("A", "a", "BOOLEAN")
generate_java_code
add_attribute("A", "INTEGER", "INTEGER")
add_class(a)
conjunction
add_query("b", "B", <<["D", "BOOLEAN"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["C", "INTEGER"], ["B", "a"], ["A", "a"], ["c", "INTEGER"], ["A", "B"], ["e", "BOOLEAN"]>>, "a")
logical_negation
add_command("INTEGER", "c", <<["D", "C"], ["e", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["d", "BOOLEAN"], ["a", "a"], ["B", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
add_query("a", "c", <<["d", "BOOLEAN"], ["A", "INTEGER"], ["INTEGER", "BOOLEAN"]>>, "B")
add_attribute("B", "c", "BOOLEAN")
add_query("d", "e", <<["b", "INTEGER"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "BOOLEAN"]>>, "b")
bool_value (false)
conjunction
equals
int_value (28)
add_class(d)
add_query("A", "b", <<["A", "INTEGER"]>>, "c")
bool_value (false)
add_attribute("B", "a", "INTEGER")
add_command("C", "A", <<["d", "BOOLEAN"], ["e", "BOOLEAN"]>>)
int_value (6)
bool_value (true)
add_call_chain(<<D,A,d,b,B,a,d,B>>)
add_query("B", "A", <<["d", "a"], ["C", "BOOLEAN"], ["e", "e"], ["B", "INTEGER"], ["B", "BOOLEAN"]>>, "d")
conjunction
add_query("b", "e", <<["c", "INTEGER"], ["C", "INTEGER"]>>, "A")
add_attribute("B", "d", "INTEGER")
logical_negation
add_command("B", "A", <<["C", "BOOLEAN"]>>)
numerical_negation
type_check
add_command("B", "c", <<["C", "e"], ["e", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "BOOLEAN"]>>)
generate_java_code
add_class(a)
add_call_chain(<<D,c>>)
add_class(c)
disjunction
int_value (16)
add_attribute("d", "A", "b")
add_class(INTEGER)
equals
add_query("a", "A", <<["b", "INTEGER"], ["A", "BOOLEAN"], ["d", "b"], ["D", "BOOLEAN"]>>, "d")
subtraction
int_value (35)
generate_java_code
add_call_chain(<<b>>)
add_command("B", "d", <<["c", "INTEGER"], ["d", "INTEGER"], ["c", "C"], ["C", "a"], ["D", "INTEGER"], ["b", "D"], ["c", "INTEGER"], ["A", "INTEGER"], ["C", "e"]>>)
add_command("b", "D", <<["c", "A"]>>)
bool_value (false)
add_call_chain(<<C,c,D,A,INTEGER,B>>)
add_call_chain(<<c,INTEGER,e>>)
add_command("A", "e", <<["b", "INTEGER"], ["c", "d"], ["a", "C"], ["b", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "BOOLEAN"]>>)
logical_negation
add_attribute("D", "INTEGER", "BOOLEAN")
add_command("C", "BOOLEAN", <<["BOOLEAN", "D"]>>)
add_command("a", "B", <<["INTEGER", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "INTEGER"], ["c", "e"]>>)
numerical_negation
logical_negation
generate_java_code
logical_negation
add_attribute("B", "C", "BOOLEAN")
add_class(a)
int_value (28)
add_attribute("C", "C", "BOOLEAN")
add_query("e", "D", <<["b", "d"], ["b", "INTEGER"], ["A", "INTEGER"], ["A", "BOOLEAN"], ["e", "INTEGER"], ["D", "BOOLEAN"], ["d", "D"], ["INTEGER", "C"]>>, "B")
bool_value (true)
generate_java_code
add_attribute("a", "D", "BOOLEAN")
add_command("e", "D", <<["B", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>)
add_attribute("b", "c", "BOOLEAN")
generate_java_code
bool_value (false)
generate_java_code
add_call_chain(<<b,B,D,d,B,A,A,D,B>>)
numerical_negation
logical_negation
add_query("a", "D", <<["b", "INTEGER"], ["c", "INTEGER"], ["c", "BOOLEAN"], ["C", "c"], ["INTEGER", "D"], ["c", "c"]>>, "A")
multiplication
add_call_chain(<<a,B,d,a,D,B,A>>)
logical_negation
int_value (13)
equals
conjunction
generate_java_code
type_check
int_value (10)
add_class(e)
add_query("c", "D", <<["BOOLEAN", "INTEGER"], ["b", "INTEGER"], ["C", "INTEGER"]>>, "B")
bool_value (false)
add_call_chain(<<BOOLEAN,B,D,B>>)
int_value (3)
int_value (5)
add_query("B", "D", <<["C", "INTEGER"], ["d", "C"], ["b", "BOOLEAN"], ["C", "c"], ["A", "INTEGER"], ["B", "a"], ["D", "BOOLEAN"], ["C", "BOOLEAN"]>>, "d")
int_value (24)
numerical_negation
add_call_chain(<<C,b>>)
add_class(e)
bool_value (false)
add_call_chain(<<d,BOOLEAN,A,C,b,A,D>>)
conjunction
add_query("a", "b", <<["c", "INTEGER"], ["e", "B"], ["B", "C"], ["A", "d"]>>, "b")
type_check
type_check
numerical_negation
generate_java_code
numerical_negation
add_command("C", "INTEGER", <<["a", "INTEGER"], ["c", "d"], ["INTEGER", "c"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["B", "INTEGER"], ["c", "BOOLEAN"], ["a", "INTEGER"]>>)
add_command("B", "e", <<["BOOLEAN", "A"], ["c", "BOOLEAN"], ["c", "INTEGER"], ["d", "INTEGER"]>>)
add_attribute("d", "B", "INTEGER")
add_query("d", "e", <<["INTEGER", "c"], ["B", "e"], ["e", "INTEGER"], ["A", "INTEGER"], ["B", "A"], ["b", "INTEGER"], ["b", "INTEGER"], ["B", "A"], ["B", "BOOLEAN"]>>, "b")
add_query("C", "d", <<["INTEGER", "INTEGER"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["a", "BOOLEAN"]>>, "A")
add_call_chain(<<e,B,b,a,A,A,D>>)
add_attribute("b", "a", "INTEGER")
add_attribute("C", "c", "BOOLEAN")
logical_negation
int_value (2)
add_command("BOOLEAN", "e", <<["A", "BOOLEAN"], ["B", "e"], ["e", "d"], ["b", "INTEGER"], ["D", "INTEGER"], ["b", "BOOLEAN"], ["b", "INTEGER"], ["c", "d"], ["b", "BOOLEAN"]>>)
add_command("BOOLEAN", "d", <<["d", "A"], ["B", "BOOLEAN"], ["D", "INTEGER"], ["e", "INTEGER"]>>)
add_attribute("D", "c", "INTEGER")
int_value (2)
add_attribute("A", "INTEGER", "a")
generate_java_code
add_query("e", "B", <<["C", "INTEGER"], ["BOOLEAN", "INTEGER"], ["A", "INTEGER"], ["A", "A"], ["a", "d"], ["B", "INTEGER"], ["A", "BOOLEAN"]>>, "A")
add_class(a)
add_class(INTEGER)
generate_java_code
numerical_negation
modulo
add_call_chain(<<BOOLEAN,BOOLEAN,a,C,a,D>>)
logical_negation
add_query("b", "d", <<["b", "a"]>>, "d")
generate_java_code
multiplication
generate_java_code
int_value (23)
add_call_chain(<<b,BOOLEAN,A,e,B,b>>)
bool_value (false)
type_check
add_call_chain(<<B,A,e,b,D>>)
bool_value (true)
type_check
add_call_chain(<<d,e,B,c,c,BOOLEAN,d,C,A>>)
add_call_chain(<<e,A,B,c,c,A,B>>)
add_call_chain(<<e,C,e,d,B,D,INTEGER>>)
numerical_negation
add_command("INTEGER", "B", <<["b", "INTEGER"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "c"], ["C", "INTEGER"]>>)
add_query("C", "a", <<["C", "INTEGER"]>>, "c")
equals
multiplication
add_query("d", "C", <<["A", "INTEGER"], ["a", "C"], ["b", "INTEGER"], ["e", "INTEGER"], ["C", "D"], ["C", "BOOLEAN"], ["B", "BOOLEAN"]>>, "c")
greater_than
add_call_chain(<<d>>)
add_class(INTEGER)
add_attribute("A", "D", "BOOLEAN")
add_call_chain(<<D,A,INTEGER,INTEGER,C,c,a,c>>)
numerical_negation
type_check
add_attribute("b", "B", "BOOLEAN")
disjunction
type_check
add_call_chain(<<c,B,a,D,c,A,D>>)
add_call_chain(<<b,B,C,B,b,B,b,BOOLEAN>>)
add_call_chain(<<e,B,D,b,d,d,A>>)
modulo
add_command("c", "C", <<["c", "INTEGER"], ["c", "INTEGER"], ["c", "BOOLEAN"], ["e", "BOOLEAN"], ["a", "INTEGER"], ["a", "BOOLEAN"], ["c", "INTEGER"], ["A", "INTEGER"], ["e", "A"]>>)
add_attribute("D", "B", "BOOLEAN")
addition
add_query("BOOLEAN", "b", <<["B", "BOOLEAN"], ["c", "INTEGER"], ["D", "BOOLEAN"], ["a", "INTEGER"]>>, "d")
add_class(e)
logical_negation
addition
multiplication
add_attribute("A", "d", "B")
add_query("a", "D", <<["b", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["e", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "BOOLEAN"]>>, "BOOLEAN")
numerical_negation
add_call_chain(<<D,e,D,B,D,C,B,A,b>>)
greater_than
add_call_chain(<<C,d,BOOLEAN>>)
add_attribute("a", "e", "A")
add_command("D", "e", <<["A", "BOOLEAN"], ["e", "INTEGER"], ["C", "INTEGER"]>>)
add_command("A", "A", <<["B", "A"], ["D", "b"], ["B", "BOOLEAN"], ["d", "d"], ["A", "BOOLEAN"], ["D", "INTEGER"], ["a", "A"], ["B", "a"]>>)
int_value (21)
add_call_chain(<<D>>)
add_query("INTEGER", "C", <<["a", "BOOLEAN"]>>, "a")
bool_value (true)
disjunction
add_query("d", "D", <<["A", "BOOLEAN"], ["c", "INTEGER"], ["d", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "A"], ["BOOLEAN", "INTEGER"]>>, "C")
add_call_chain(<<e,e,C,C,b,B>>)
int_value (17)
numerical_negation
logical_negation
add_attribute("e", "INTEGER", "INTEGER")
add_call_chain(<<b,c,e,d,A,INTEGER,a>>)
add_command("e", "d", <<["b", "BOOLEAN"], ["c", "INTEGER"]>>)
int_value (46)
numerical_negation
logical_negation
int_value (31)
add_call_chain(<<C,d,BOOLEAN,INTEGER,B,c,c,e>>)
add_attribute("a", "C", "INTEGER")
bool_value (true)
int_value (43)
equals
int_value (45)
bool_value (false)
numerical_negation
numerical_negation
add_attribute("D", "e", "C")
generate_java_code
add_attribute("e", "BOOLEAN", "INTEGER")
add_call_chain(<<A,A,INTEGER,C>>)
add_call_chain(<<c,b,D>>)
bool_value (false)
add_call_chain(<<BOOLEAN,D,BOOLEAN,BOOLEAN>>)
add_attribute("D", "C", "e")
addition
multiplication
add_command("INTEGER", "A", <<["b", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "a"], ["D", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["C", "a"]>>)
type_check
add_query("A", "B", <<["C", "d"], ["C", "BOOLEAN"], ["e", "BOOLEAN"]>>, "a")
type_check
add_call_chain(<<c,A,e,d,C,b,c,B>>)
generate_java_code
addition
bool_value (false)
numerical_negation
