add_attribute("a", "a", "a")
add_attribute("e", "e", "INTEGER")
add_attribute("D", "B", "D")
bool_value (false)
add_call_chain(<<A,B,a,e,INTEGER,e,e>>)
add_query("d", "b", <<["e", "C"], ["D", "BOOLEAN"], ["INTEGER", "INTEGER"]>>, "e")
int_value (48)
generate_java_code
conjunction
type_check
int_value (33)
equals
add_query("A", "BOOLEAN", <<["e", "INTEGER"], ["C", "c"]>>, "D")
type_check
generate_java_code
int_value (45)
bool_value (true)
numerical_negation
generate_java_code
logical_negation
add_attribute("a", "b", "INTEGER")
bool_value (true)
logical_negation
numerical_negation
type_check
add_attribute("C", "d", "INTEGER")
add_attribute("D", "BOOLEAN", "INTEGER")
int_value (31)
int_value (40)
add_attribute("a", "c", "B")
bool_value (true)
conjunction
logical_negation
bool_value (false)
add_query("C", "C", <<["C", "INTEGER"], ["e", "C"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["a", "BOOLEAN"], ["e", "INTEGER"], ["A", "INTEGER"]>>, "B")
add_command("c", "e", <<["A", "c"], ["INTEGER", "INTEGER"], ["B", "BOOLEAN"], ["A", "D"], ["D", "INTEGER"], ["c", "INTEGER"], ["e", "BOOLEAN"], ["D", "a"]>>)
add_command("e", "A", <<["A", "INTEGER"], ["B", "BOOLEAN"], ["C", "INTEGER"]>>)
bool_value (false)
add_call_chain(<<a,B,c,D,C,BOOLEAN>>)
equals
generate_java_code
add_call_chain(<<B,e,BOOLEAN,e>>)
generate_java_code
add_call_chain(<<B,C,D,D>>)
logical_negation
modulo
add_call_chain(<<C>>)
type_check
add_query("e", "A", <<["A", "a"], ["INTEGER", "a"], ["C", "INTEGER"], ["INTEGER", "BOOLEAN"], ["c", "BOOLEAN"]>>, "INTEGER")
numerical_negation
add_call_chain(<<C>>)
int_value (16)
less_than
generate_java_code
add_attribute("A", "B", "C")
add_call_chain(<<a,b,D,d,B,B,b>>)
numerical_negation
logical_negation
add_call_chain(<<a>>)
logical_negation
bool_value (false)
add_class(A)
add_command("D", "b", <<["INTEGER", "BOOLEAN"], ["c", "INTEGER"], ["a", "C"], ["BOOLEAN", "INTEGER"]>>)
quotient
bool_value (false)
add_call_chain(<<C,C,e,e,D,C,d>>)
generate_java_code
add_command("B", "d", <<["C", "BOOLEAN"]>>)
add_call_chain(<<D,b>>)
numerical_negation
add_attribute("A", "d", "BOOLEAN")
numerical_negation
add_call_chain(<<B,d>>)
add_attribute("C", "INTEGER", "INTEGER")
add_call_chain(<<C,b,A,c,b,a,B,a>>)
add_query("d", "D", <<["C", "A"], ["D", "b"], ["a", "INTEGER"], ["B", "BOOLEAN"], ["D", "INTEGER"], ["B", "b"], ["BOOLEAN", "BOOLEAN"], ["B", "INTEGER"]>>, "INTEGER")
add_attribute("D", "d", "BOOLEAN")
less_than
add_call_chain(<<D,D,b,c,c,b,D,b>>)
add_command("c", "d", <<["b", "BOOLEAN"], ["a", "B"], ["c", "BOOLEAN"], ["D", "BOOLEAN"]>>)
add_class(B)
add_call_chain(<<D,d,B,a>>)
type_check
generate_java_code
generate_java_code
disjunction
add_class(e)
greater_than
int_value (9)
int_value (22)
bool_value (true)
add_command("C", "b", <<["BOOLEAN", "BOOLEAN"], ["d", "b"], ["B", "d"]>>)
logical_negation
add_call_chain(<<A,c,a,c,B,b,c,A,a>>)
logical_negation
add_attribute("INTEGER", "b", "B")
type_check
type_check
bool_value (true)
numerical_negation
int_value (31)
numerical_negation
int_value (34)
generate_java_code
type_check
add_query("D", "b", <<["b", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "e"], ["C", "BOOLEAN"], ["C", "BOOLEAN"]>>, "C")
add_query("A", "a", <<["D", "b"], ["a", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "e"], ["D", "BOOLEAN"], ["a", "D"], ["D", "BOOLEAN"]>>, "D")
add_call_chain(<<B,b>>)
add_call_chain(<<B,A,c,d>>)
type_check
add_query("BOOLEAN", "c", <<["b", "INTEGER"], ["c", "BOOLEAN"]>>, "BOOLEAN")
disjunction
numerical_negation
numerical_negation
add_attribute("B", "A", "INTEGER")
add_call_chain(<<b,D,INTEGER,C,A>>)
bool_value (true)
bool_value (true)
add_attribute("d", "D", "BOOLEAN")
add_command("B", "a", <<["INTEGER", "BOOLEAN"], ["B", "INTEGER"], ["INTEGER", "INTEGER"], ["a", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["c", "INTEGER"]>>)
add_call_chain(<<A,INTEGER,B,B>>)
add_query("C", "C", <<["D", "B"], ["C", "c"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["INTEGER", "D"], ["c", "c"]>>, "INTEGER")
add_attribute("BOOLEAN", "C", "BOOLEAN")
add_command("d", "b", <<["A", "B"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["a", "INTEGER"]>>)
add_query("a", "b", <<["e", "b"], ["D", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "INTEGER"]>>, "INTEGER")
bool_value (true)
add_call_chain(<<b,BOOLEAN,A,A,c,e>>)
add_query("C", "a", <<["e", "b"], ["d", "A"]>>, "C")
conjunction
logical_negation
add_call_chain(<<A,e,c,A,b>>)
int_value (5)
int_value (42)
modulo
quotient
generate_java_code
generate_java_code
add_class(INTEGER)
add_command("BOOLEAN", "d", <<["D", "INTEGER"], ["c", "BOOLEAN"]>>)
int_value (48)
type_check
int_value (19)
equals
type_check
type_check
add_query("A", "A", <<["C", "INTEGER"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["e", "INTEGER"]>>, "INTEGER")
add_query("d", "a", <<["B", "INTEGER"], ["d", "c"], ["D", "INTEGER"], ["c", "INTEGER"], ["e", "INTEGER"], ["D", "BOOLEAN"]>>, "e")
add_call_chain(<<a,INTEGER,b,d,c,b,b,D,D>>)
type_check
add_call_chain(<<B,a,C,d,A,d,BOOLEAN,c,b>>)
numerical_negation
disjunction
add_command("c", "e", <<["b", "INTEGER"], ["D", "B"], ["BOOLEAN", "BOOLEAN"], ["A", "BOOLEAN"]>>)
logical_negation
bool_value (false)
add_class(b)
bool_value (true)
logical_negation
bool_value (true)
bool_value (false)
addition
int_value (17)
generate_java_code
add_query("B", "BOOLEAN", <<["C", "B"], ["B", "INTEGER"]>>, "d")
add_query("e", "B", <<["C", "BOOLEAN"], ["c", "a"], ["b", "BOOLEAN"], ["b", "INTEGER"], ["c", "C"], ["B", "BOOLEAN"]>>, "e")
multiplication
numerical_negation
add_attribute("B", "D", "BOOLEAN")
add_command("D", "C", <<["C", "d"], ["D", "INTEGER"], ["c", "INTEGER"], ["A", "INTEGER"], ["B", "INTEGER"], ["B", "INTEGER"], ["BOOLEAN", "a"], ["e", "INTEGER"], ["C", "BOOLEAN"]>>)
add_attribute("A", "C", "e")
add_call_chain(<<e,A,b,C,e,D,c>>)
add_command("a", "BOOLEAN", <<["B", "B"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["a", "INTEGER"], ["INTEGER", "INTEGER"], ["d", "INTEGER"], ["D", "BOOLEAN"], ["INTEGER", "INTEGER"]>>)
add_call_chain(<<B,b,b>>)
numerical_negation
add_command("INTEGER", "e", <<["b", "INTEGER"], ["e", "INTEGER"], ["A", "d"], ["b", "INTEGER"]>>)
add_command("D", "a", <<["b", "BOOLEAN"], ["b", "C"], ["C", "INTEGER"], ["d", "BOOLEAN"]>>)
add_query("b", "d", <<["a", "a"], ["D", "INTEGER"]>>, "C")
int_value (43)
greater_than
generate_java_code
int_value (9)
numerical_negation
numerical_negation
int_value (33)
greater_than
add_class(BOOLEAN)
equals
add_command("a", "b", <<["INTEGER", "A"], ["c", "INTEGER"], ["B", "INTEGER"], ["c", "D"], ["C", "D"], ["D", "INTEGER"]>>)
int_value (33)
add_attribute("B", "A", "INTEGER")
int_value (34)
add_query("B", "c", <<["A", "b"]>>, "B")
add_command("D", "d", <<["D", "c"], ["b", "D"], ["e", "BOOLEAN"]>>)
add_call_chain(<<B,c,D,B,D,c,a>>)
add_call_chain(<<B>>)
add_attribute("a", "d", "BOOLEAN")
conjunction
generate_java_code
conjunction
modulo
add_class(C)
logical_negation
add_call_chain(<<c,A,A,d,d,d,INTEGER>>)
add_query("D", "d", <<["e", "INTEGER"], ["D", "a"]>>, "D")
addition
addition
add_call_chain(<<B,b,B,C>>)
bool_value (true)
bool_value (true)
subtraction
add_attribute("C", "A", "C")
int_value (23)
add_call_chain(<<e,e,C,C,d>>)
bool_value (false)
add_attribute("INTEGER", "d", "BOOLEAN")
disjunction
generate_java_code
generate_java_code
numerical_negation
bool_value (false)
type_check
type_check
add_query("D", "e", <<["e", "D"], ["B", "e"]>>, "INTEGER")
add_attribute("B", "b", "BOOLEAN")
logical_negation
add_attribute("d", "D", "C")
equals
add_attribute("INTEGER", "D", "BOOLEAN")
add_query("a", "b", <<["D", "BOOLEAN"], ["a", "A"], ["INTEGER", "INTEGER"]>>, "e")
bool_value (true)
