add_command("D", "e", <<["b", "BOOLEAN"], ["a", "INTEGER"]>>)
add_command("A", "a", <<["A", "BOOLEAN"]>>)
int_value (42)
add_command("D", "INTEGER", <<["D", "B"]>>)
add_call_chain(<<C,C,b,A,c,C,A>>)
logical_negation
numerical_negation
add_attribute("a", "d", "d")
add_class(B)
add_query("A", "b", <<["B", "INTEGER"], ["d", "INTEGER"], ["a", "INTEGER"], ["b", "C"], ["e", "d"], ["c", "INTEGER"], ["e", "BOOLEAN"], ["A", "A"]>>, "D")
add_attribute("e", "d", "INTEGER")
numerical_negation
add_call_chain(<<B>>)
add_attribute("a", "A", "INTEGER")
add_call_chain(<<A,a,d,d,C>>)
add_call_chain(<<D,B,a,b>>)
add_command("C", "e", <<["D", "INTEGER"], ["a", "B"]>>)
logical_negation
numerical_negation
add_attribute("C", "D", "D")
generate_java_code
add_call_chain(<<d,A>>)
add_command("C", "d", <<["d", "BOOLEAN"], ["c", "INTEGER"], ["C", "C"], ["b", "INTEGER"], ["A", "e"], ["B", "INTEGER"], ["C", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["A", "INTEGER"]>>)
disjunction
logical_negation
bool_value (false)
modulo
add_attribute("INTEGER", "B", "INTEGER")
numerical_negation
add_class(D)
add_attribute("D", "C", "INTEGER")
generate_java_code
add_query("C", "D", <<["BOOLEAN", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "INTEGER"]>>, "c")
bool_value (true)
type_check
type_check
add_attribute("a", "c", "INTEGER")
add_query("c", "BOOLEAN", <<["c", "BOOLEAN"], ["a", "D"]>>, "INTEGER")
add_query("d", "B", <<["a", "BOOLEAN"], ["d", "d"], ["e", "INTEGER"], ["D", "b"], ["D", "INTEGER"], ["B", "BOOLEAN"], ["D", "INTEGER"]>>, "C")
type_check
add_call_chain(<<A,B>>)
add_attribute("INTEGER", "BOOLEAN", "B")
add_command("e", "e", <<["a", "BOOLEAN"], ["C", "INTEGER"], ["a", "A"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["b", "b"]>>)
add_query("e", "b", <<["C", "c"], ["e", "INTEGER"]>>, "A")
add_class(A)
add_command("INTEGER", "b", <<["B", "e"]>>)
int_value (16)
logical_negation
add_query("c", "c", <<["C", "BOOLEAN"], ["A", "C"], ["b", "INTEGER"], ["A", "INTEGER"], ["c", "INTEGER"], ["c", "INTEGER"]>>, "BOOLEAN")
equals
add_command("c", "e", <<["a", "INTEGER"], ["d", "BOOLEAN"], ["B", "INTEGER"], ["INTEGER", "e"], ["c", "BOOLEAN"], ["d", "INTEGER"], ["A", "A"]>>)
type_check
add_command("d", "c", <<["d", "INTEGER"], ["D", "INTEGER"], ["C", "INTEGER"]>>)
add_call_chain(<<B,BOOLEAN,e,D>>)
logical_negation
generate_java_code
add_class(B)
addition
subtraction
bool_value (false)
add_call_chain(<<e,B,D,BOOLEAN,D,C,C>>)
int_value (40)
numerical_negation
add_call_chain(<<C,D>>)
add_query("D", "INTEGER", <<["A", "BOOLEAN"], ["a", "INTEGER"], ["INTEGER", "B"], ["e", "c"], ["e", "INTEGER"], ["INTEGER", "INTEGER"]>>, "D")
add_command("d", "A", <<["a", "BOOLEAN"]>>)
multiplication
int_value (46)
add_call_chain(<<d,C>>)
add_query("d", "c", <<["d", "BOOLEAN"], ["e", "INTEGER"], ["C", "A"], ["D", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["A", "INTEGER"]>>, "BOOLEAN")
add_command("C", "C", <<["B", "b"], ["C", "BOOLEAN"]>>)
subtraction
add_call_chain(<<d>>)
add_attribute("e", "C", "INTEGER")
add_command("BOOLEAN", "d", <<["a", "e"], ["e", "BOOLEAN"], ["a", "BOOLEAN"], ["b", "a"], ["B", "A"], ["e", "BOOLEAN"]>>)
bool_value (true)
generate_java_code
numerical_negation
logical_negation
add_call_chain(<<d,C,C,c,c>>)
add_query("a", "BOOLEAN", <<["b", "INTEGER"], ["INTEGER", "C"], ["c", "INTEGER"]>>, "D")
equals
add_query("A", "B", <<["C", "INTEGER"], ["INTEGER", "INTEGER"], ["d", "INTEGER"]>>, "D")
type_check
add_command("b", "C", <<["BOOLEAN", "a"], ["b", "b"], ["C", "D"], ["C", "BOOLEAN"]>>)
add_attribute("b", "c", "INTEGER")
multiplication
add_call_chain(<<D,BOOLEAN,C,b,INTEGER,e>>)
bool_value (true)
numerical_negation
logical_negation
add_command("B", "B", <<["e", "INTEGER"], ["A", "INTEGER"], ["d", "BOOLEAN"], ["e", "A"], ["d", "INTEGER"], ["A", "c"], ["c", "c"]>>)
type_check
add_command("D", "B", <<["c", "D"], ["C", "BOOLEAN"], ["D", "B"], ["C", "a"], ["c", "C"], ["e", "INTEGER"]>>)
add_call_chain(<<C,C,b>>)
logical_negation
bool_value (false)
add_query("C", "INTEGER", <<["b", "BOOLEAN"], ["d", "INTEGER"], ["D", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["a", "INTEGER"], ["D", "INTEGER"]>>, "C")
add_class(d)
int_value (30)
logical_negation
less_than
bool_value (false)
add_query("e", "D", <<["d", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "b"], ["A", "D"], ["b", "BOOLEAN"], ["a", "INTEGER"], ["A", "BOOLEAN"], ["c", "INTEGER"]>>, "D")
greater_than
int_value (46)
add_call_chain(<<d,b,e,a,B,b,d,D,e>>)
add_query("c", "BOOLEAN", <<["c", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "INTEGER"]>>, "c")
generate_java_code
logical_negation
add_call_chain(<<c,c,B,a,D,D,b,a,a>>)
add_attribute("b", "D", "D")
numerical_negation
int_value (9)
add_call_chain(<<d,C,B,B>>)
add_call_chain(<<B,C,b,B,b>>)
int_value (22)
add_call_chain(<<B,D,C,D,c,A,b,INTEGER>>)
add_call_chain(<<C,d,d>>)
logical_negation
add_attribute("BOOLEAN", "A", "INTEGER")
equals
conjunction
bool_value (false)
quotient
add_command("C", "c", <<["a", "INTEGER"], ["BOOLEAN", "C"], ["c", "BOOLEAN"]>>)
add_command("A", "C", <<["b", "BOOLEAN"], ["C", "INTEGER"]>>)
conjunction
add_attribute("D", "e", "a")
add_query("c", "A", <<["a", "BOOLEAN"], ["C", "d"], ["d", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>, "a")
int_value (28)
multiplication
type_check
add_attribute("C", "b", "BOOLEAN")
add_command("e", "D", <<["BOOLEAN", "BOOLEAN"], ["B", "C"]>>)
add_call_chain(<<b,D,B,BOOLEAN,C>>)
add_query("A", "D", <<["a", "d"], ["a", "INTEGER"], ["d", "BOOLEAN"], ["B", "INTEGER"]>>, "A")
logical_negation
add_query("a", "e", <<["b", "INTEGER"]>>, "e")
add_call_chain(<<C,A,B,D,C,A,C,C>>)
bool_value (false)
int_value (17)
logical_negation
numerical_negation
add_call_chain(<<b,B,b>>)
type_check
add_call_chain(<<A>>)
equals
add_call_chain(<<b,e,a,c>>)
multiplication
logical_negation
add_command("a", "a", <<["A", "D"], ["b", "C"], ["BOOLEAN", "c"], ["D", "INTEGER"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["D", "C"]>>)
greater_than
add_call_chain(<<B,BOOLEAN,a,A,BOOLEAN,B,BOOLEAN>>)
type_check
bool_value (true)
add_command("INTEGER", "INTEGER", <<["C", "INTEGER"], ["BOOLEAN", "a"], ["C", "INTEGER"], ["A", "BOOLEAN"]>>)
equals
generate_java_code
add_call_chain(<<C,B,D,A>>)
type_check
int_value (17)
add_call_chain(<<a,e,A,C,D,B,c,d,D>>)
logical_negation
add_command("A", "c", <<["e", "BOOLEAN"], ["B", "A"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["e", "BOOLEAN"]>>)
add_call_chain(<<b>>)
add_class(C)
add_call_chain(<<c,A,B,B,D,INTEGER>>)
quotient
add_call_chain(<<B,D,D,e,B,a,c>>)
bool_value (true)
add_query("b", "A", <<["e", "BOOLEAN"], ["c", "BOOLEAN"]>>, "BOOLEAN")
add_call_chain(<<B,c,b>>)
conjunction
add_attribute("b", "c", "INTEGER")
type_check
add_class(b)
equals
type_check
add_attribute("d", "D", "INTEGER")
add_query("A", "C", <<["BOOLEAN", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "b"]>>, "d")
multiplication
generate_java_code
add_attribute("a", "C", "BOOLEAN")
type_check
disjunction
add_attribute("A", "e", "INTEGER")
add_call_chain(<<b,B,D,A>>)
add_attribute("D", "D", "INTEGER")
add_command("C", "B", <<["D", "INTEGER"], ["C", "A"], ["b", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "e"], ["d", "INTEGER"]>>)
int_value (2)
multiplication
add_call_chain(<<b>>)
add_class(a)
conjunction
conjunction
add_call_chain(<<BOOLEAN,INTEGER,a>>)
logical_negation
add_attribute("A", "INTEGER", "A")
bool_value (false)
add_class(C)
int_value (28)
add_query("c", "b", <<["d", "b"], ["a", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["B", "C"], ["D", "e"], ["c", "BOOLEAN"]>>, "e")
add_query("INTEGER", "d", <<["c", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["d", "INTEGER"], ["b", "e"], ["A", "c"], ["c", "D"], ["a", "B"]>>, "b")
generate_java_code
type_check
type_check
add_query("b", "a", <<["INTEGER", "BOOLEAN"]>>, "BOOLEAN")
add_query("d", "INTEGER", <<["c", "BOOLEAN"], ["A", "a"], ["A", "INTEGER"], ["INTEGER", "e"], ["b", "BOOLEAN"], ["C", "INTEGER"], ["C", "e"]>>, "INTEGER")
generate_java_code
add_attribute("c", "A", "INTEGER")
int_value (13)
add_query("d", "c", <<["c", "INTEGER"], ["a", "BOOLEAN"], ["C", "b"], ["A", "b"], ["A", "INTEGER"], ["b", "INTEGER"], ["a", "INTEGER"], ["BOOLEAN", "INTEGER"], ["d", "BOOLEAN"]>>, "a")
add_class(C)
bool_value (false)
add_class(c)
generate_java_code
bool_value (true)
add_call_chain(<<C,e,d,D,BOOLEAN,INTEGER,a>>)
bool_value (true)
numerical_negation
bool_value (true)
numerical_negation
generate_java_code
subtraction
logical_negation
disjunction
logical_negation
type_check
add_command("b", "B", <<["c", "b"], ["c", "BOOLEAN"], ["d", "b"], ["INTEGER", "B"], ["b", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "d"], ["INTEGER", "BOOLEAN"]>>)
greater_than
add_call_chain(<<A,A,A,a,C,B,C,BOOLEAN>>)
