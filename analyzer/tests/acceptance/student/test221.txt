add_call_chain(<<b,a,a>>)
bool_value (true)
logical_negation
add_command("D", "A", <<["c", "INTEGER"], ["D", "BOOLEAN"], ["A", "D"], ["D", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "a"], ["d", "INTEGER"], ["D", "BOOLEAN"]>>)
add_call_chain(<<D>>)
logical_negation
add_call_chain(<<e,BOOLEAN,b,B,C,INTEGER,C,d>>)
int_value (49)
conjunction
add_command("b", "D", <<["a", "C"], ["D", "e"], ["B", "INTEGER"], ["c", "INTEGER"], ["D", "B"], ["c", "INTEGER"], ["C", "INTEGER"], ["C", "d"]>>)
add_call_chain(<<d,B>>)
add_attribute("B", "B", "B")
addition
add_command("c", "C", <<["A", "B"], ["a", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "INTEGER"]>>)
conjunction
type_check
add_call_chain(<<a>>)
bool_value (true)
add_class(A)
add_command("c", "A", <<["a", "INTEGER"], ["d", "BOOLEAN"], ["A", "d"], ["BOOLEAN", "e"], ["c", "BOOLEAN"], ["A", "INTEGER"], ["b", "BOOLEAN"]>>)
add_class(B)
add_command("A", "INTEGER", <<["C", "A"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["a", "BOOLEAN"], ["b", "D"], ["e", "INTEGER"]>>)
bool_value (true)
add_class(B)
subtraction
bool_value (false)
disjunction
add_command("D", "INTEGER", <<["a", "INTEGER"], ["A", "INTEGER"], ["A", "c"], ["BOOLEAN", "INTEGER"], ["d", "c"], ["B", "e"], ["D", "e"], ["e", "BOOLEAN"], ["c", "D"]>>)
logical_negation
add_command("e", "D", <<["a", "b"], ["e", "C"], ["A", "INTEGER"]>>)
add_call_chain(<<a,B,A>>)
add_attribute("c", "D", "A")
add_call_chain(<<B,C,e,a>>)
add_query("C", "e", <<["B", "INTEGER"], ["D", "BOOLEAN"], ["e", "INTEGER"], ["A", "INTEGER"]>>, "C")
add_attribute("A", "C", "BOOLEAN")
add_query("a", "D", <<["a", "B"], ["INTEGER", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>, "e")
add_query("D", "d", <<["A", "BOOLEAN"], ["B", "d"], ["a", "INTEGER"], ["a", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["INTEGER", "INTEGER"], ["a", "INTEGER"], ["B", "D"]>>, "d")
add_attribute("b", "B", "INTEGER")
equals
add_call_chain(<<C,D,b,BOOLEAN>>)
disjunction
logical_negation
add_call_chain(<<A,c>>)
add_command("C", "d", <<["INTEGER", "d"], ["b", "INTEGER"], ["D", "INTEGER"], ["b", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "INTEGER"]>>)
add_call_chain(<<c,a,D,BOOLEAN>>)
less_than
greater_than
multiplication
bool_value (false)
add_attribute("D", "b", "INTEGER")
add_command("b", "INTEGER", <<["a", "INTEGER"], ["C", "INTEGER"], ["e", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "C"], ["B", "INTEGER"], ["a", "e"]>>)
bool_value (false)
conjunction
add_query("B", "A", <<["C", "A"], ["INTEGER", "INTEGER"], ["A", "BOOLEAN"], ["A", "INTEGER"], ["d", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "B"], ["b", "B"], ["c", "BOOLEAN"]>>, "C")
add_class(c)
add_class(e)
add_command("B", "BOOLEAN", <<["c", "d"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["A", "BOOLEAN"]>>)
add_call_chain(<<C,C,B,b,C,c,B>>)
add_query("b", "INTEGER", <<["d", "INTEGER"], ["INTEGER", "BOOLEAN"], ["BOOLEAN", "A"], ["C", "INTEGER"], ["a", "INTEGER"], ["D", "BOOLEAN"]>>, "d")
int_value (33)
add_command("e", "a", <<["D", "BOOLEAN"], ["d", "INTEGER"]>>)
type_check
add_call_chain(<<d,D,A,d,c,B>>)
numerical_negation
add_call_chain(<<C,d,BOOLEAN,BOOLEAN>>)
generate_java_code
type_check
add_attribute("c", "A", "INTEGER")
add_command("C", "C", <<["BOOLEAN", "INTEGER"], ["BOOLEAN", "D"], ["b", "e"], ["b", "BOOLEAN"]>>)
multiplication
add_call_chain(<<a,B>>)
subtraction
add_command("e", "c", <<["c", "a"], ["D", "BOOLEAN"]>>)
bool_value (true)
bool_value (true)
numerical_negation
add_attribute("c", "C", "D")
bool_value (true)
bool_value (true)
add_call_chain(<<c,BOOLEAN,d,B,c,b>>)
add_query("c", "B", <<["b", "B"]>>, "B")
less_than
add_class(c)
logical_negation
equals
logical_negation
add_call_chain(<<c,B,A,a>>)
bool_value (false)
conjunction
add_call_chain(<<c,c,a,a,b,C,c,C>>)
add_call_chain(<<c,INTEGER>>)
int_value (35)
add_call_chain(<<A,B,c,b,B,C,e,d>>)
numerical_negation
add_call_chain(<<d,d,b,e,a,a>>)
int_value (3)
equals
generate_java_code
conjunction
bool_value (true)
add_attribute("INTEGER", "BOOLEAN", "BOOLEAN")
bool_value (true)
add_query("e", "BOOLEAN", <<["b", "BOOLEAN"], ["D", "a"], ["e", "B"], ["A", "BOOLEAN"], ["e", "A"], ["A", "a"]>>, "A")
modulo
int_value (26)
equals
numerical_negation
add_query("D", "BOOLEAN", <<["A", "e"], ["C", "D"]>>, "d")
conjunction
add_command("BOOLEAN", "d", <<["a", "BOOLEAN"], ["A", "d"], ["b", "BOOLEAN"], ["C", "C"], ["A", "BOOLEAN"], ["d", "A"], ["a", "INTEGER"], ["C", "INTEGER"]>>)
add_query("e", "a", <<["A", "BOOLEAN"]>>, "BOOLEAN")
numerical_negation
add_command("C", "BOOLEAN", <<["b", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "BOOLEAN"], ["b", "c"], ["A", "BOOLEAN"]>>)
add_call_chain(<<D,BOOLEAN,B,a,B,B,C,INTEGER>>)
type_check
add_call_chain(<<D,d,a>>)
add_command("C", "A", <<["A", "BOOLEAN"], ["A", "BOOLEAN"]>>)
add_call_chain(<<c,BOOLEAN,C,b,B,d,A>>)
int_value (42)
bool_value (false)
add_command("A", "d", <<["C", "BOOLEAN"], ["D", "INTEGER"], ["d", "BOOLEAN"], ["e", "C"], ["B", "INTEGER"], ["e", "a"], ["B", "INTEGER"], ["a", "BOOLEAN"]>>)
int_value (46)
add_call_chain(<<b,d,INTEGER,d,D,B,e,a,e>>)
multiplication
add_attribute("C", "D", "C")
add_class(B)
generate_java_code
add_call_chain(<<C,D,D>>)
add_command("e", "D", <<["e", "BOOLEAN"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["b", "INTEGER"], ["c", "INTEGER"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>)
add_call_chain(<<D,B,C,b,a,INTEGER,e>>)
add_attribute("C", "D", "A")
less_than
numerical_negation
bool_value (true)
add_class(c)
numerical_negation
add_call_chain(<<C,a>>)
logical_negation
add_call_chain(<<D,D,A,e,D,D>>)
add_command("e", "b", <<["c", "c"], ["B", "BOOLEAN"], ["d", "C"], ["e", "INTEGER"], ["B", "INTEGER"]>>)
add_call_chain(<<C,e,e,A,D,A,a>>)
int_value (6)
numerical_negation
equals
logical_negation
bool_value (true)
generate_java_code
add_command("c", "BOOLEAN", <<["d", "INTEGER"]>>)
type_check
add_query("D", "A", <<["a", "c"], ["B", "BOOLEAN"]>>, "c")
bool_value (false)
disjunction
add_attribute("INTEGER", "C", "INTEGER")
add_query("C", "b", <<["d", "INTEGER"], ["BOOLEAN", "C"], ["C", "BOOLEAN"]>>, "C")
add_attribute("BOOLEAN", "D", "d")
add_call_chain(<<D>>)
greater_than
logical_negation
add_call_chain(<<d>>)
int_value (23)
bool_value (false)
bool_value (false)
add_query("b", "e", <<["C", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "B"], ["a", "INTEGER"], ["A", "INTEGER"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["B", "INTEGER"]>>, "B")
modulo
numerical_negation
numerical_negation
type_check
add_attribute("B", "b", "BOOLEAN")
add_call_chain(<<C,a,b,D,b,A,e,a>>)
add_call_chain(<<B,BOOLEAN>>)
disjunction
add_call_chain(<<B>>)
generate_java_code
logical_negation
add_command("e", "b", <<["c", "INTEGER"]>>)
add_query("B", "c", <<["c", "d"], ["INTEGER", "BOOLEAN"], ["C", "INTEGER"], ["INTEGER", "BOOLEAN"], ["C", "INTEGER"]>>, "e")
add_attribute("b", "INTEGER", "a")
logical_negation
add_call_chain(<<A,a,A,A,D,A,A,a>>)
disjunction
type_check
add_attribute("A", "D", "b")
add_query("c", "d", <<["a", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "C"], ["a", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "C"], ["a", "BOOLEAN"]>>, "A")
int_value (41)
add_query("d", "d", <<["A", "BOOLEAN"], ["e", "A"], ["e", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "INTEGER"], ["c", "INTEGER"], ["INTEGER", "D"], ["e", "b"], ["b", "BOOLEAN"]>>, "a")
add_call_chain(<<BOOLEAN>>)
conjunction
add_query("c", "INTEGER", <<["e", "INTEGER"], ["B", "INTEGER"], ["e", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "INTEGER"], ["D", "A"], ["a", "A"], ["INTEGER", "INTEGER"]>>, "A")
add_query("BOOLEAN", "B", <<["A", "e"], ["D", "INTEGER"], ["B", "BOOLEAN"], ["e", "e"], ["a", "INTEGER"], ["e", "BOOLEAN"], ["d", "INTEGER"], ["B", "INTEGER"]>>, "B")
quotient
add_call_chain(<<A,a,e,INTEGER,BOOLEAN,C,A,C,A>>)
quotient
int_value (14)
logical_negation
int_value (13)
add_query("B", "D", <<["D", "INTEGER"], ["INTEGER", "A"], ["B", "INTEGER"], ["a", "a"], ["C", "INTEGER"], ["A", "INTEGER"], ["D", "INTEGER"]>>, "c")
add_call_chain(<<INTEGER,c,c,a,B,A,BOOLEAN,C,B>>)
numerical_negation
int_value (23)
logical_negation
add_call_chain(<<e,C,C,e,B,e,b>>)
modulo
type_check
quotient
generate_java_code
add_attribute("c", "D", "INTEGER")
add_call_chain(<<b,a,BOOLEAN,D>>)
add_attribute("B", "a", "BOOLEAN")
add_call_chain(<<B,INTEGER,A>>)
logical_negation
addition
addition
add_call_chain(<<a,d,a,a,C,D>>)
multiplication
type_check
numerical_negation
type_check
modulo
type_check
add_attribute("BOOLEAN", "B", "BOOLEAN")
add_call_chain(<<D,B,D,A,INTEGER,A>>)
add_call_chain(<<D>>)
add_attribute("D", "B", "INTEGER")
add_call_chain(<<BOOLEAN>>)
int_value (40)
add_class(C)
add_query("B", "B", <<["A", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "INTEGER"], ["d", "INTEGER"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["C", "BOOLEAN"], ["B", "D"], ["D", "D"]>>, "C")
add_call_chain(<<A,C,e,D,INTEGER,d>>)
add_attribute("e", "A", "BOOLEAN")
bool_value (false)
add_call_chain(<<e,c,C>>)
add_call_chain(<<e,e,e,d,B,B>>)
