add_attribute("e", "B", "BOOLEAN")
add_query("a", "B", <<["D", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["B", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>, "C")
add_call_chain(<<D,INTEGER,D,A,a,C>>)
add_command("INTEGER", "C", <<["C", "INTEGER"], ["c", "B"], ["B", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "BOOLEAN"], ["INTEGER", "d"], ["INTEGER", "BOOLEAN"], ["B", "INTEGER"]>>)
add_query("INTEGER", "b", <<["c", "D"], ["A", "c"], ["INTEGER", "c"], ["INTEGER", "BOOLEAN"], ["A", "INTEGER"], ["B", "a"]>>, "d")
generate_java_code
generate_java_code
disjunction
equals
add_call_chain(<<e>>)
add_call_chain(<<d,D,B,b,c,C>>)
type_check
logical_negation
type_check
add_query("D", "B", <<["C", "INTEGER"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["d", "A"], ["A", "BOOLEAN"], ["C", "b"]>>, "B")
type_check
add_call_chain(<<B,C>>)
bool_value (true)
numerical_negation
add_command("d", "B", <<["c", "BOOLEAN"], ["D", "INTEGER"], ["e", "BOOLEAN"], ["e", "BOOLEAN"]>>)
numerical_negation
add_call_chain(<<INTEGER,c,D,a>>)
add_call_chain(<<C>>)
numerical_negation
int_value (30)
numerical_negation
greater_than
int_value (45)
int_value (40)
int_value (24)
add_call_chain(<<INTEGER,A,C,a,A,A,B>>)
add_command("D", "A", <<["A", "BOOLEAN"], ["c", "BOOLEAN"], ["d", "e"], ["A", "BOOLEAN"]>>)
generate_java_code
less_than
add_query("e", "B", <<["d", "INTEGER"], ["c", "A"]>>, "e")
add_attribute("e", "INTEGER", "A")
bool_value (false)
add_attribute("A", "a", "BOOLEAN")
disjunction
add_call_chain(<<B,c,D>>)
add_query("e", "d", <<["C", "INTEGER"], ["e", "BOOLEAN"]>>, "C")
add_call_chain(<<b,e,C,C,A,a>>)
bool_value (false)
add_query("A", "b", <<["B", "INTEGER"], ["e", "A"], ["C", "A"], ["B", "INTEGER"]>>, "INTEGER")
numerical_negation
generate_java_code
add_attribute("B", "C", "BOOLEAN")
add_query("d", "a", <<["b", "BOOLEAN"], ["b", "INTEGER"], ["D", "BOOLEAN"]>>, "INTEGER")
disjunction
add_attribute("A", "b", "BOOLEAN")
numerical_negation
add_call_chain(<<INTEGER,A,D>>)
add_call_chain(<<d,INTEGER,B,D,INTEGER,B,c>>)
add_class(B)
bool_value (true)
bool_value (false)
generate_java_code
int_value (38)
int_value (20)
subtraction
bool_value (true)
add_class(d)
add_attribute("d", "b", "INTEGER")
greater_than
numerical_negation
disjunction
generate_java_code
generate_java_code
add_call_chain(<<b,D,C,b>>)
int_value (32)
multiplication
generate_java_code
disjunction
greater_than
add_call_chain(<<A,BOOLEAN,BOOLEAN,c,a,b,B,B>>)
int_value (7)
add_call_chain(<<e,D,a,D,B,e,D,BOOLEAN>>)
add_call_chain(<<B>>)
add_attribute("B", "D", "BOOLEAN")
multiplication
add_query("b", "C", <<["d", "A"], ["A", "INTEGER"]>>, "D")
logical_negation
int_value (49)
add_attribute("c", "c", "a")
add_attribute("C", "d", "INTEGER")
bool_value (true)
add_call_chain(<<a,INTEGER,b,a>>)
add_command("B", "d", <<["c", "D"], ["D", "d"], ["d", "INTEGER"], ["B", "BOOLEAN"], ["c", "A"], ["c", "BOOLEAN"]>>)
logical_negation
add_attribute("a", "D", "BOOLEAN")
add_attribute("INTEGER", "B", "BOOLEAN")
logical_negation
logical_negation
bool_value (true)
logical_negation
add_call_chain(<<D,A,A>>)
bool_value (true)
add_class(B)
int_value (49)
add_attribute("C", "B", "BOOLEAN")
int_value (26)
numerical_negation
add_class(D)
less_than
add_call_chain(<<c,BOOLEAN,C,D,D,e>>)
add_call_chain(<<c,A>>)
numerical_negation
type_check
add_query("d", "B", <<["e", "BOOLEAN"], ["A", "INTEGER"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["BOOLEAN", "b"], ["B", "BOOLEAN"]>>, "C")
add_call_chain(<<c,c,D,A,D,BOOLEAN,c>>)
int_value (39)
generate_java_code
numerical_negation
disjunction
add_query("C", "D", <<["BOOLEAN", "B"], ["c", "INTEGER"], ["a", "d"], ["b", "B"], ["c", "C"], ["C", "B"]>>, "A")
add_command("B", "A", <<["BOOLEAN", "INTEGER"], ["e", "INTEGER"], ["b", "INTEGER"], ["B", "e"], ["c", "INTEGER"]>>)
generate_java_code
add_call_chain(<<e>>)
type_check
generate_java_code
int_value (36)
add_class(a)
generate_java_code
add_call_chain(<<c,b,a,B,d>>)
type_check
add_class(A)
bool_value (true)
add_attribute("D", "c", "BOOLEAN")
logical_negation
add_call_chain(<<B,D,d,D,C,c,BOOLEAN>>)
numerical_negation
add_call_chain(<<C,BOOLEAN,C>>)
bool_value (false)
generate_java_code
int_value (12)
add_query("BOOLEAN", "c", <<["B", "INTEGER"], ["c", "INTEGER"], ["D", "A"], ["B", "C"]>>, "b")
add_attribute("A", "b", "INTEGER")
add_attribute("e", "D", "BOOLEAN")
modulo
addition
int_value (14)
add_call_chain(<<b>>)
numerical_negation
less_than
int_value (16)
add_class(B)
add_attribute("BOOLEAN", "B", "INTEGER")
add_call_chain(<<INTEGER,B,d,C>>)
generate_java_code
add_class(B)
add_attribute("C", "B", "BOOLEAN")
add_query("A", "C", <<["c", "INTEGER"], ["b", "BOOLEAN"], ["e", "c"], ["BOOLEAN", "B"], ["B", "INTEGER"], ["INTEGER", "C"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["C", "INTEGER"]>>, "A")
add_call_chain(<<b,e,d,A,C,d,INTEGER>>)
add_call_chain(<<A,d,B,INTEGER,B,c,d,b>>)
add_command("a", "D", <<["d", "d"], ["b", "BOOLEAN"], ["e", "d"], ["A", "INTEGER"], ["b", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>)
disjunction
add_query("C", "b", <<["c", "INTEGER"], ["e", "BOOLEAN"], ["INTEGER", "INTEGER"], ["c", "BOOLEAN"], ["e", "B"], ["A", "d"]>>, "a")
add_attribute("b", "D", "INTEGER")
int_value (23)
add_attribute("A", "c", "d")
add_call_chain(<<BOOLEAN,D,c>>)
generate_java_code
add_command("D", "d", <<["a", "INTEGER"], ["A", "INTEGER"]>>)
add_query("e", "b", <<["A", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "INTEGER"], ["B", "INTEGER"], ["d", "C"], ["a", "d"], ["d", "C"], ["B", "BOOLEAN"]>>, "C")
logical_negation
add_attribute("BOOLEAN", "C", "B")
numerical_negation
generate_java_code
add_call_chain(<<a,C,e,BOOLEAN,C,e>>)
add_query("INTEGER", "d", <<["e", "INTEGER"], ["d", "INTEGER"], ["A", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "INTEGER"], ["A", "BOOLEAN"]>>, "C")
add_query("C", "BOOLEAN", <<["B", "BOOLEAN"], ["D", "a"], ["B", "INTEGER"], ["e", "INTEGER"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["a", "BOOLEAN"], ["d", "c"]>>, "A")
int_value (3)
add_attribute("A", "D", "BOOLEAN")
disjunction
numerical_negation
add_command("A", "c", <<["C", "INTEGER"], ["INTEGER", "INTEGER"], ["b", "BOOLEAN"], ["a", "BOOLEAN"]>>)
bool_value (true)
add_command("D", "B", <<["INTEGER", "INTEGER"], ["a", "d"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["b", "a"], ["c", "D"], ["B", "BOOLEAN"]>>)
add_command("B", "a", <<["c", "INTEGER"], ["b", "INTEGER"], ["C", "INTEGER"]>>)
add_call_chain(<<C,B,a,d,c,A>>)
bool_value (true)
add_call_chain(<<C,a,BOOLEAN,INTEGER,B,d,d,d>>)
add_class(D)
conjunction
int_value (6)
int_value (6)
add_query("A", "INTEGER", <<["C", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "INTEGER"], ["e", "INTEGER"]>>, "d")
add_query("D", "BOOLEAN", <<["e", "a"]>>, "a")
equals
add_query("e", "A", <<["B", "A"]>>, "a")
logical_negation
add_attribute("a", "e", "INTEGER")
add_query("c", "A", <<["C", "BOOLEAN"], ["B", "D"]>>, "C")
add_attribute("INTEGER", "b", "BOOLEAN")
add_command("INTEGER", "BOOLEAN", <<["INTEGER", "INTEGER"]>>)
subtraction
logical_negation
generate_java_code
add_query("C", "a", <<["B", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "D"], ["C", "BOOLEAN"], ["D", "D"], ["b", "INTEGER"], ["b", "INTEGER"], ["C", "INTEGER"]>>, "C")
bool_value (false)
greater_than
add_attribute("D", "c", "INTEGER")
int_value (35)
add_command("D", "B", <<["C", "INTEGER"], ["INTEGER", "INTEGER"], ["D", "INTEGER"], ["e", "INTEGER"]>>)
logical_negation
add_call_chain(<<BOOLEAN,a,C,d>>)
add_command("d", "B", <<["b", "INTEGER"]>>)
int_value (11)
numerical_negation
add_command("c", "A", <<["c", "INTEGER"], ["A", "BOOLEAN"], ["INTEGER", "INTEGER"], ["B", "INTEGER"], ["C", "BOOLEAN"], ["c", "INTEGER"]>>)
add_call_chain(<<BOOLEAN,c,C,e,A,B,d,B>>)
bool_value (true)
modulo
add_call_chain(<<c,C>>)
add_query("INTEGER", "d", <<["D", "C"], ["D", "INTEGER"], ["e", "BOOLEAN"], ["INTEGER", "B"], ["A", "D"], ["D", "D"], ["b", "BOOLEAN"], ["c", "A"], ["D", "INTEGER"]>>, "e")
type_check
generate_java_code
logical_negation
logical_negation
add_command("d", "C", <<["C", "BOOLEAN"], ["B", "D"]>>)
add_call_chain(<<D,a,B,D,b,C>>)
add_attribute("D", "INTEGER", "INTEGER")
add_attribute("c", "c", "a")
add_attribute("d", "e", "e")
quotient
type_check
generate_java_code
add_call_chain(<<A,C,a,D,BOOLEAN,C,BOOLEAN>>)
quotient
add_query("C", "C", <<["b", "d"], ["a", "BOOLEAN"]>>, "C")
int_value (22)
numerical_negation
add_query("d", "C", <<["c", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["BOOLEAN", "INTEGER"], ["INTEGER", "c"]>>, "B")
generate_java_code
logical_negation
add_class(C)
add_command("A", "C", <<["BOOLEAN", "INTEGER"], ["b", "a"]>>)
add_class(e)
add_call_chain(<<B>>)
generate_java_code
add_attribute("B", "BOOLEAN", "BOOLEAN")
int_value (27)
