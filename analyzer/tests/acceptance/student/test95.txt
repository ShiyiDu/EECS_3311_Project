disjunction
add_command("a", "B", <<["e", "BOOLEAN"]>>)
add_call_chain(<<D,A,A,e,INTEGER,c,D,D,a>>)
numerical_negation
multiplication
greater_than
generate_java_code
bool_value (true)
add_call_chain(<<B,B>>)
int_value (15)
int_value (40)
numerical_negation
multiplication
add_attribute("c", "A", "BOOLEAN")
bool_value (false)
add_class(a)
add_query("c", "D", <<["e", "BOOLEAN"], ["C", "A"], ["a", "INTEGER"], ["c", "e"], ["c", "BOOLEAN"], ["B", "c"], ["INTEGER", "INTEGER"]>>, "b")
add_call_chain(<<b,BOOLEAN>>)
add_attribute("A", "e", "INTEGER")
numerical_negation
add_call_chain(<<INTEGER,c,c,b,c,b,b,d>>)
add_call_chain(<<a,D>>)
add_attribute("C", "D", "INTEGER")
generate_java_code
addition
int_value (28)
add_command("C", "D", <<["e", "b"], ["B", "D"], ["B", "c"], ["e", "BOOLEAN"], ["a", "b"]>>)
bool_value (false)
generate_java_code
logical_negation
add_attribute("B", "a", "BOOLEAN")
numerical_negation
add_call_chain(<<d,INTEGER,d,b,d,e>>)
int_value (20)
add_attribute("B", "D", "BOOLEAN")
greater_than
add_call_chain(<<a,c,e,d,A,A,C,B>>)
add_query("b", "c", <<["e", "BOOLEAN"], ["C", "b"], ["c", "BOOLEAN"], ["A", "INTEGER"], ["A", "c"], ["c", "INTEGER"], ["c", "BOOLEAN"], ["C", "INTEGER"], ["e", "B"]>>, "e")
generate_java_code
add_call_chain(<<C,INTEGER,c,INTEGER,INTEGER,b,B>>)
bool_value (true)
type_check
less_than
logical_negation
less_than
add_query("A", "B", <<["a", "BOOLEAN"], ["b", "C"]>>, "C")
add_class(A)
disjunction
add_command("C", "INTEGER", <<["D", "BOOLEAN"], ["b", "a"]>>)
disjunction
numerical_negation
generate_java_code
subtraction
add_call_chain(<<C,c,A,c>>)
logical_negation
int_value (37)
add_query("d", "b", <<["INTEGER", "BOOLEAN"], ["INTEGER", "a"]>>, "A")
add_attribute("b", "d", "BOOLEAN")
add_call_chain(<<B,D,INTEGER>>)
int_value (49)
add_class(a)
add_call_chain(<<C,e,C,a,A>>)
generate_java_code
int_value (19)
add_query("A", "b", <<["B", "INTEGER"], ["e", "BOOLEAN"], ["c", "BOOLEAN"]>>, "A")
int_value (46)
add_query("B", "BOOLEAN", <<["C", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "D"], ["A", "BOOLEAN"]>>, "e")
type_check
bool_value (true)
add_attribute("e", "d", "BOOLEAN")
add_call_chain(<<C,D,B,e,B,a,c,D>>)
numerical_negation
numerical_negation
add_command("b", "d", <<["B", "D"], ["b", "e"], ["A", "INTEGER"], ["e", "BOOLEAN"], ["c", "e"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["D", "BOOLEAN"]>>)
add_call_chain(<<A,c,c,B,a>>)
add_class(a)
numerical_negation
bool_value (true)
logical_negation
numerical_negation
add_command("D", "BOOLEAN", <<["e", "BOOLEAN"], ["C", "B"], ["D", "INTEGER"], ["INTEGER", "INTEGER"], ["c", "d"], ["B", "INTEGER"], ["e", "D"], ["D", "A"], ["A", "C"]>>)
add_class(A)
add_query("D", "B", <<["B", "BOOLEAN"]>>, "A")
generate_java_code
add_attribute("B", "B", "INTEGER")
add_call_chain(<<INTEGER,a,d,a>>)
add_query("A", "B", <<["D", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["B", "B"], ["d", "BOOLEAN"], ["b", "INTEGER"], ["c", "BOOLEAN"]>>, "D")
add_call_chain(<<A>>)
bool_value (true)
bool_value (false)
generate_java_code
add_command("A", "INTEGER", <<["e", "A"], ["d", "A"]>>)
bool_value (true)
add_command("C", "d", <<["B", "INTEGER"], ["A", "b"], ["C", "BOOLEAN"], ["a", "INTEGER"]>>)
add_query("BOOLEAN", "b", <<["e", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "INTEGER"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["a", "INTEGER"], ["c", "BOOLEAN"]>>, "INTEGER")
conjunction
int_value (48)
generate_java_code
numerical_negation
less_than
add_class(a)
add_call_chain(<<d,B,B,D,c>>)
type_check
add_call_chain(<<D,A,A,c,a,e,c>>)
numerical_negation
equals
add_call_chain(<<B,a,C,d,a,d,A>>)
add_call_chain(<<BOOLEAN,a,b,D>>)
generate_java_code
equals
quotient
generate_java_code
add_call_chain(<<D,B,c,a>>)
add_class(A)
int_value (14)
greater_than
add_call_chain(<<B,d,D,d>>)
numerical_negation
int_value (15)
modulo
numerical_negation
numerical_negation
add_attribute("A", "A", "INTEGER")
add_attribute("b", "d", "b")
bool_value (false)
int_value (47)
generate_java_code
int_value (18)
add_command("B", "D", <<["d", "INTEGER"], ["e", "d"], ["B", "B"]>>)
numerical_negation
add_call_chain(<<D,d,A,A,C,BOOLEAN,d>>)
add_class(C)
numerical_negation
add_class(c)
add_command("D", "d", <<["e", "D"], ["d", "BOOLEAN"], ["D", "e"], ["C", "d"], ["d", "BOOLEAN"], ["b", "INTEGER"], ["A", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>)
add_call_chain(<<c,C,a,d,B,e,A,a>>)
addition
add_call_chain(<<D,BOOLEAN,c,c>>)
type_check
add_command("C", "b", <<["b", "INTEGER"], ["C", "BOOLEAN"], ["c", "INTEGER"], ["A", "INTEGER"]>>)
type_check
type_check
add_class(BOOLEAN)
bool_value (true)
logical_negation
bool_value (false)
add_attribute("C", "c", "INTEGER")
add_attribute("e", "b", "A")
add_call_chain(<<a,e,c,B,d,BOOLEAN,b,B>>)
add_command("INTEGER", "e", <<["INTEGER", "d"], ["INTEGER", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["INTEGER", "A"], ["D", "BOOLEAN"], ["c", "INTEGER"], ["a", "D"]>>)
quotient
equals
add_call_chain(<<D>>)
conjunction
int_value (47)
add_attribute("D", "A", "BOOLEAN")
add_command("b", "D", <<["B", "INTEGER"], ["a", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["C", "INTEGER"], ["a", "BOOLEAN"], ["c", "A"]>>)
bool_value (false)
bool_value (true)
add_attribute("c", "C", "B")
add_call_chain(<<B,c,c,a,A,c,D,e,a>>)
add_query("A", "b", <<["e", "c"], ["A", "INTEGER"], ["BOOLEAN", "A"], ["D", "D"], ["A", "C"], ["c", "BOOLEAN"], ["c", "INTEGER"]>>, "c")
conjunction
bool_value (true)
numerical_negation
disjunction
type_check
add_call_chain(<<c,INTEGER,D,BOOLEAN,D>>)
int_value (40)
logical_negation
int_value (37)
int_value (3)
numerical_negation
add_query("C", "a", <<["A", "INTEGER"], ["B", "INTEGER"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "INTEGER"], ["B", "INTEGER"], ["a", "BOOLEAN"]>>, "c")
conjunction
add_command("B", "d", <<["b", "INTEGER"], ["D", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "INTEGER"], ["c", "b"], ["A", "BOOLEAN"], ["b", "B"], ["e", "BOOLEAN"]>>)
add_attribute("c", "b", "INTEGER")
add_class(C)
int_value (38)
add_class(BOOLEAN)
logical_negation
numerical_negation
add_attribute("C", "BOOLEAN", "e")
add_class(B)
add_attribute("B", "BOOLEAN", "e")
generate_java_code
add_command("c", "C", <<["c", "c"], ["e", "INTEGER"], ["D", "BOOLEAN"], ["e", "d"], ["A", "BOOLEAN"]>>)
add_query("b", "A", <<["a", "BOOLEAN"], ["D", "c"], ["B", "BOOLEAN"]>>, "b")
type_check
add_query("INTEGER", "C", <<["D", "c"]>>, "d")
add_call_chain(<<a,C,d>>)
add_command("C", "b", <<["A", "INTEGER"], ["A", "INTEGER"], ["a", "INTEGER"], ["c", "c"], ["d", "e"], ["B", "BOOLEAN"], ["A", "D"], ["b", "B"]>>)
add_attribute("b", "D", "INTEGER")
add_call_chain(<<d,A,c,A,b,a,A,C>>)
addition
logical_negation
generate_java_code
add_command("A", "B", <<["a", "BOOLEAN"], ["e", "INTEGER"], ["A", "INTEGER"], ["b", "d"], ["A", "d"], ["e", "INTEGER"], ["D", "INTEGER"], ["D", "b"]>>)
add_call_chain(<<BOOLEAN,d,A,b,C,A,C,D>>)
int_value (19)
bool_value (true)
add_query("B", "D", <<["b", "INTEGER"]>>, "A")
add_command("c", "D", <<["BOOLEAN", "INTEGER"], ["A", "INTEGER"], ["INTEGER", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "BOOLEAN"], ["d", "BOOLEAN"], ["e", "INTEGER"], ["A", "B"]>>)
add_attribute("D", "C", "INTEGER")
add_call_chain(<<b,C,C,a>>)
equals
greater_than
add_query("D", "BOOLEAN", <<["C", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "A"]>>, "d")
add_command("e", "e", <<["B", "D"], ["A", "BOOLEAN"], ["b", "INTEGER"]>>)
bool_value (false)
bool_value (false)
generate_java_code
add_command("B", "B", <<["e", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["A", "INTEGER"], ["e", "BOOLEAN"], ["d", "e"], ["C", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "BOOLEAN"]>>)
add_call_chain(<<d,d,D>>)
logical_negation
disjunction
add_call_chain(<<d,B,d,A,e>>)
