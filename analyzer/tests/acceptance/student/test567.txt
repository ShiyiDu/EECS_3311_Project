add_class(C)
logical_negation
logical_negation
add_call_chain(<<D,b,d,B,BOOLEAN,D>>)
add_query("B", "b", <<["D", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "INTEGER"], ["e", "BOOLEAN"], ["e", "BOOLEAN"]>>, "B")
add_call_chain(<<a,a,d,B,INTEGER,D,A,a,c>>)
bool_value (false)
int_value (33)
add_call_chain(<<a,b,b,b,b,b,INTEGER>>)
bool_value (false)
add_command("B", "D", <<["D", "INTEGER"], ["INTEGER", "INTEGER"], ["d", "INTEGER"], ["D", "D"], ["a", "INTEGER"], ["A", "INTEGER"], ["d", "BOOLEAN"]>>)
numerical_negation
add_call_chain(<<B,A,A,b,A,d,B,b>>)
add_command("e", "A", <<["d", "d"], ["A", "BOOLEAN"], ["b", "INTEGER"], ["e", "BOOLEAN"], ["b", "c"], ["D", "INTEGER"], ["c", "INTEGER"]>>)
modulo
logical_negation
add_call_chain(<<e,e,d,C,e,d>>)
add_call_chain(<<B,C>>)
int_value (27)
add_class(B)
add_class(D)
add_query("C", "C", <<["c", "INTEGER"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["a", "INTEGER"], ["b", "INTEGER"], ["D", "BOOLEAN"]>>, "A")
add_command("e", "B", <<["b", "B"], ["C", "INTEGER"], ["a", "BOOLEAN"], ["c", "BOOLEAN"]>>)
numerical_negation
add_command("C", "c", <<["C", "BOOLEAN"], ["D", "INTEGER"], ["b", "INTEGER"], ["C", "INTEGER"], ["D", "INTEGER"], ["D", "INTEGER"], ["INTEGER", "INTEGER"], ["D", "BOOLEAN"]>>)
numerical_negation
add_call_chain(<<c,C,c,c>>)
add_class(BOOLEAN)
add_class(a)
add_command("d", "c", <<["A", "b"], ["B", "INTEGER"], ["e", "INTEGER"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "d"]>>)
int_value (21)
add_query("C", "B", <<["b", "BOOLEAN"], ["b", "D"], ["c", "BOOLEAN"]>>, "b")
numerical_negation
quotient
generate_java_code
type_check
numerical_negation
add_call_chain(<<d,b,C,a,B>>)
add_call_chain(<<D,e,C>>)
add_call_chain(<<D,A,e,INTEGER,INTEGER,C,e>>)
add_query("e", "b", <<["c", "INTEGER"], ["C", "INTEGER"], ["B", "INTEGER"], ["D", "A"], ["INTEGER", "INTEGER"]>>, "b")
add_class(C)
add_call_chain(<<c,B>>)
add_query("D", "e", <<["B", "B"], ["c", "INTEGER"], ["e", "BOOLEAN"], ["C", "A"], ["e", "C"]>>, "a")
add_call_chain(<<C,e,C,INTEGER>>)
add_command("B", "INTEGER", <<["D", "BOOLEAN"], ["B", "d"], ["b", "D"], ["A", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "INTEGER"]>>)
generate_java_code
numerical_negation
add_command("INTEGER", "d", <<["BOOLEAN", "INTEGER"], ["BOOLEAN", "INTEGER"], ["C", "INTEGER"], ["d", "BOOLEAN"], ["A", "INTEGER"]>>)
int_value (46)
equals
logical_negation
add_class(A)
numerical_negation
bool_value (true)
int_value (45)
add_class(d)
add_attribute("a", "D", "d")
add_command("A", "D", <<["d", "INTEGER"], ["C", "INTEGER"], ["c", "INTEGER"], ["B", "BOOLEAN"], ["c", "INTEGER"]>>)
logical_negation
add_query("D", "A", <<["a", "b"], ["C", "INTEGER"], ["A", "d"]>>, "D")
bool_value (true)
numerical_negation
modulo
conjunction
add_call_chain(<<a>>)
add_call_chain(<<b,BOOLEAN>>)
bool_value (true)
greater_than
numerical_negation
add_call_chain(<<B,c,B,e>>)
type_check
add_attribute("a", "A", "BOOLEAN")
add_call_chain(<<A,e>>)
add_command("A", "D", <<["e", "BOOLEAN"], ["b", "INTEGER"], ["D", "INTEGER"], ["b", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "INTEGER"]>>)
add_attribute("D", "BOOLEAN", "INTEGER")
int_value (18)
add_query("C", "e", <<["B", "D"], ["D", "C"], ["D", "e"]>>, "A")
add_command("e", "C", <<["e", "INTEGER"], ["a", "INTEGER"], ["B", "BOOLEAN"], ["d", "e"], ["d", "a"], ["C", "D"]>>)
add_command("c", "a", <<["c", "D"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["d", "INTEGER"]>>)
add_command("B", "BOOLEAN", <<["e", "A"], ["a", "e"], ["e", "BOOLEAN"], ["C", "BOOLEAN"]>>)
bool_value (true)
type_check
add_call_chain(<<D,BOOLEAN,B,e,C,B,a,b,B>>)
add_class(a)
add_attribute("e", "c", "INTEGER")
add_class(c)
bool_value (true)
numerical_negation
add_query("A", "e", <<["INTEGER", "INTEGER"], ["D", "INTEGER"], ["a", "BOOLEAN"], ["b", "INTEGER"], ["b", "a"], ["e", "INTEGER"], ["C", "INTEGER"], ["A", "BOOLEAN"]>>, "C")
add_call_chain(<<A>>)
int_value (29)
int_value (27)
add_command("b", "C", <<["c", "C"], ["b", "INTEGER"], ["C", "a"]>>)
add_query("C", "INTEGER", <<["A", "A"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["e", "BOOLEAN"], ["B", "INTEGER"], ["b", "e"]>>, "BOOLEAN")
add_class(C)
bool_value (false)
bool_value (false)
type_check
add_attribute("a", "a", "BOOLEAN")
type_check
subtraction
add_command("BOOLEAN", "b", <<["b", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "INTEGER"], ["b", "C"], ["b", "BOOLEAN"]>>)
subtraction
bool_value (false)
less_than
numerical_negation
add_query("e", "INTEGER", <<["e", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "INTEGER"], ["C", "INTEGER"], ["b", "BOOLEAN"], ["A", "INTEGER"], ["b", "A"]>>, "a")
add_command("d", "A", <<["c", "INTEGER"], ["B", "INTEGER"], ["b", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "BOOLEAN"], ["BOOLEAN", "a"]>>)
logical_negation
add_command("d", "c", <<["INTEGER", "INTEGER"], ["e", "INTEGER"], ["D", "INTEGER"]>>)
add_call_chain(<<e,b,d,d,b,e,D>>)
add_attribute("D", "b", "INTEGER")
bool_value (false)
numerical_negation
equals
add_call_chain(<<INTEGER,A,b,C,a,D>>)
type_check
bool_value (false)
add_call_chain(<<c,A,INTEGER,e,C>>)
add_call_chain(<<c,d,d,e,e,e,d>>)
modulo
int_value (24)
numerical_negation
logical_negation
bool_value (false)
add_call_chain(<<d,e,C,c,D,C>>)
bool_value (true)
add_class(a)
type_check
logical_negation
generate_java_code
add_attribute("B", "b", "BOOLEAN")
add_attribute("B", "d", "INTEGER")
add_call_chain(<<e,A,D,e>>)
logical_negation
disjunction
add_query("c", "e", <<["c", "e"], ["a", "b"], ["B", "INTEGER"], ["d", "e"], ["b", "B"]>>, "b")
add_call_chain(<<C,B,C,C,b,b>>)
quotient
less_than
add_command("b", "C", <<["b", "BOOLEAN"]>>)
bool_value (false)
add_call_chain(<<C,B,C,d,D,D,B,D>>)
add_attribute("C", "C", "BOOLEAN")
bool_value (false)
generate_java_code
logical_negation
add_query("B", "c", <<["BOOLEAN", "INTEGER"], ["B", "c"], ["e", "INTEGER"], ["d", "BOOLEAN"], ["a", "d"], ["D", "D"]>>, "e")
generate_java_code
add_call_chain(<<D>>)
add_class(d)
add_query("a", "e", <<["INTEGER", "A"], ["C", "BOOLEAN"], ["a", "INTEGER"], ["INTEGER", "BOOLEAN"], ["A", "BOOLEAN"], ["INTEGER", "e"], ["b", "b"], ["B", "BOOLEAN"]>>, "A")
add_query("A", "D", <<["e", "INTEGER"], ["B", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "B"]>>, "D")
add_call_chain(<<a,A,INTEGER,BOOLEAN,A,b,e,D,BOOLEAN>>)
int_value (30)
add_query("B", "a", <<["c", "B"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["B", "INTEGER"], ["B", "b"], ["C", "d"], ["e", "BOOLEAN"], ["a", "INTEGER"]>>, "b")
add_command("c", "e", <<["e", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "e"], ["a", "BOOLEAN"]>>)
add_query("INTEGER", "B", <<["a", "b"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "INTEGER"]>>, "B")
add_command("c", "INTEGER", <<["B", "BOOLEAN"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["e", "D"], ["d", "BOOLEAN"], ["a", "B"], ["b", "BOOLEAN"]>>)
bool_value (true)
add_call_chain(<<B,b>>)
add_attribute("B", "a", "BOOLEAN")
add_query("c", "c", <<["B", "BOOLEAN"], ["e", "b"], ["A", "INTEGER"], ["C", "b"], ["d", "INTEGER"]>>, "D")
add_command("C", "B", <<["c", "B"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["D", "b"], ["b", "INTEGER"], ["D", "INTEGER"], ["c", "INTEGER"], ["C", "A"]>>)
add_class(e)
add_command("e", "c", <<["d", "INTEGER"], ["C", "BOOLEAN"], ["d", "INTEGER"], ["B", "INTEGER"], ["D", "INTEGER"], ["a", "INTEGER"], ["e", "INTEGER"]>>)
subtraction
add_call_chain(<<D,A,D,D,INTEGER,d,B,b>>)
int_value (1)
numerical_negation
add_class(a)
add_call_chain(<<B,c,A,A,C,a,C,C>>)
add_query("a", "b", <<["D", "D"], ["C", "INTEGER"], ["a", "c"], ["d", "INTEGER"], ["a", "BOOLEAN"], ["D", "INTEGER"], ["a", "INTEGER"], ["C", "BOOLEAN"], ["A", "BOOLEAN"]>>, "B")
add_attribute("C", "B", "BOOLEAN")
add_call_chain(<<d,a,C,D,C,INTEGER,A,B>>)
multiplication
add_query("a", "c", <<["c", "INTEGER"], ["c", "c"], ["A", "a"], ["c", "INTEGER"], ["d", "b"], ["a", "c"]>>, "B")
add_query("INTEGER", "INTEGER", <<["C", "BOOLEAN"], ["a", "INTEGER"], ["A", "C"]>>, "D")
type_check
generate_java_code
add_attribute("C", "D", "INTEGER")
add_command("D", "b", <<["a", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "a"], ["b", "INTEGER"]>>)
int_value (26)
less_than
add_call_chain(<<b,a,B,D,D>>)
add_attribute("C", "d", "INTEGER")
numerical_negation
add_query("d", "C", <<["b", "INTEGER"]>>, "b")
add_call_chain(<<e,B>>)
add_call_chain(<<D,C,B,c>>)
generate_java_code
add_command("c", "C", <<["A", "a"]>>)
numerical_negation
add_call_chain(<<C,a>>)
bool_value (false)
add_query("c", "d", <<["b", "BOOLEAN"], ["C", "INTEGER"], ["c", "BOOLEAN"], ["a", "A"], ["b", "D"], ["A", "BOOLEAN"]>>, "e")
multiplication
logical_negation
add_attribute("D", "A", "BOOLEAN")
addition
add_command("A", "b", <<["A", "e"], ["d", "INTEGER"], ["C", "INTEGER"], ["d", "BOOLEAN"], ["D", "c"]>>)
numerical_negation
int_value (32)
bool_value (true)
add_query("d", "D", <<["d", "C"], ["C", "INTEGER"], ["c", "INTEGER"], ["d", "d"], ["A", "d"], ["B", "A"], ["e", "d"], ["d", "BOOLEAN"]>>, "C")
add_command("C", "a", <<["C", "INTEGER"], ["c", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "D"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["b", "BOOLEAN"], ["b", "INTEGER"]>>)
add_call_chain(<<c,d,C,c,B,c,B,D,INTEGER>>)
int_value (45)
add_query("a", "C", <<["a", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["c", "INTEGER"], ["c", "a"]>>, "B")
subtraction
int_value (7)
add_call_chain(<<A,c,C,D,B,BOOLEAN>>)
add_call_chain(<<c,b,B,A,BOOLEAN,d,d>>)
add_command("a", "BOOLEAN", <<["C", "INTEGER"], ["a", "INTEGER"], ["BOOLEAN", "B"], ["a", "INTEGER"], ["a", "c"]>>)
bool_value (false)
add_attribute("B", "e", "INTEGER")
add_query("e", "b", <<["b", "c"], ["d", "a"], ["A", "INTEGER"], ["b", "INTEGER"]>>, "A")
int_value (11)
logical_negation
numerical_negation
bool_value (true)
add_class(e)
add_query("c", "e", <<["d", "INTEGER"], ["a", "BOOLEAN"]>>, "BOOLEAN")
disjunction
