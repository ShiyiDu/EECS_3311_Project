generate_java_code
add_query("c", "D", <<["b", "BOOLEAN"], ["C", "d"], ["d", "BOOLEAN"]>>, "D")
add_call_chain(<<c>>)
logical_negation
logical_negation
bool_value (true)
conjunction
add_class(b)
numerical_negation
disjunction
add_call_chain(<<d,D,e,a,d,C>>)
bool_value (false)
add_command("d", "BOOLEAN", <<["B", "BOOLEAN"], ["C", "INTEGER"], ["a", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "INTEGER"]>>)
add_command("d", "c", <<["C", "INTEGER"], ["INTEGER", "c"], ["A", "BOOLEAN"]>>)
generate_java_code
bool_value (false)
add_query("a", "a", <<["d", "e"], ["d", "D"], ["a", "BOOLEAN"], ["c", "BOOLEAN"], ["d", "INTEGER"]>>, "A")
add_call_chain(<<INTEGER,a,b,d,e,C,A,D,C>>)
add_call_chain(<<A,INTEGER,b,d,c,D,b>>)
type_check
add_command("a", "a", <<["c", "BOOLEAN"], ["a", "BOOLEAN"]>>)
add_command("BOOLEAN", "C", <<["A", "BOOLEAN"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["A", "d"], ["d", "INTEGER"], ["e", "A"]>>)
bool_value (true)
add_command("a", "e", <<["a", "B"], ["A", "a"], ["a", "BOOLEAN"], ["b", "INTEGER"], ["d", "INTEGER"], ["c", "INTEGER"], ["INTEGER", "BOOLEAN"], ["d", "INTEGER"], ["a", "e"]>>)
add_query("A", "b", <<["INTEGER", "BOOLEAN"], ["e", "a"], ["e", "INTEGER"], ["A", "B"]>>, "a")
add_class(C)
less_than
add_command("d", "A", <<["A", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
add_attribute("c", "a", "C")
add_call_chain(<<b,e,C,B,b,C>>)
logical_negation
numerical_negation
generate_java_code
add_call_chain(<<A,b,C,e,D>>)
add_call_chain(<<a,A,e,c>>)
numerical_negation
add_call_chain(<<b,d>>)
add_query("e", "A", <<["C", "D"], ["d", "INTEGER"], ["D", "INTEGER"], ["b", "C"], ["A", "INTEGER"]>>, "A")
bool_value (false)
add_query("d", "b", <<["a", "e"], ["B", "c"], ["b", "a"], ["D", "a"], ["e", "BOOLEAN"]>>, "a")
add_call_chain(<<c,INTEGER>>)
add_class(b)
int_value (1)
numerical_negation
subtraction
add_attribute("e", "b", "BOOLEAN")
add_query("e", "b", <<["e", "INTEGER"], ["B", "d"], ["d", "INTEGER"], ["a", "INTEGER"], ["a", "C"], ["BOOLEAN", "BOOLEAN"], ["e", "BOOLEAN"]>>, "a")
add_attribute("A", "C", "BOOLEAN")
type_check
add_call_chain(<<B,d,B>>)
add_call_chain(<<e,C,INTEGER,e,A,d,B,A,B>>)
add_command("b", "D", <<["C", "INTEGER"], ["C", "BOOLEAN"], ["e", "BOOLEAN"], ["c", "BOOLEAN"], ["e", "INTEGER"]>>)
add_attribute("b", "A", "BOOLEAN")
logical_negation
disjunction
add_call_chain(<<c,D,C,d>>)
logical_negation
bool_value (true)
bool_value (false)
logical_negation
numerical_negation
bool_value (true)
greater_than
generate_java_code
add_attribute("A", "C", "BOOLEAN")
logical_negation
type_check
add_attribute("c", "B", "C")
logical_negation
bool_value (true)
add_command("INTEGER", "B", <<["a", "a"], ["C", "BOOLEAN"], ["B", "INTEGER"]>>)
bool_value (true)
numerical_negation
add_query("c", "c", <<["a", "BOOLEAN"], ["D", "INTEGER"], ["d", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["INTEGER", "INTEGER"], ["INTEGER", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "B"]>>, "e")
multiplication
int_value (16)
add_query("D", "B", <<["B", "BOOLEAN"], ["B", "INTEGER"], ["a", "INTEGER"], ["e", "INTEGER"], ["D", "BOOLEAN"], ["c", "BOOLEAN"]>>, "c")
int_value (16)
add_attribute("e", "A", "INTEGER")
type_check
logical_negation
logical_negation
numerical_negation
equals
numerical_negation
add_call_chain(<<e,c,D,D>>)
bool_value (false)
add_call_chain(<<a,C,A,C,d,INTEGER,c>>)
add_call_chain(<<C,C,C,a,c,B,c>>)
add_attribute("INTEGER", "B", "e")
add_attribute("C", "e", "BOOLEAN")
bool_value (false)
add_attribute("b", "D", "INTEGER")
bool_value (false)
add_attribute("e", "B", "INTEGER")
add_query("d", "INTEGER", <<["B", "d"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["C", "INTEGER"], ["C", "b"]>>, "B")
disjunction
type_check
numerical_negation
bool_value (true)
type_check
add_call_chain(<<INTEGER,C,BOOLEAN,C,c,INTEGER,d,C,b>>)
add_call_chain(<<A,B>>)
add_query("A", "e", <<["e", "C"], ["D", "b"], ["BOOLEAN", "BOOLEAN"], ["a", "A"], ["D", "INTEGER"], ["D", "INTEGER"]>>, "e")
logical_negation
add_call_chain(<<C,a,INTEGER,c,D>>)
generate_java_code
add_call_chain(<<B>>)
logical_negation
logical_negation
add_command("D", "c", <<["A", "d"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["e", "INTEGER"], ["A", "BOOLEAN"], ["b", "C"]>>)
logical_negation
logical_negation
add_query("A", "a", <<["A", "BOOLEAN"], ["D", "INTEGER"], ["d", "INTEGER"], ["D", "INTEGER"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "BOOLEAN"], ["INTEGER", "INTEGER"]>>, "A")
type_check
generate_java_code
bool_value (true)
bool_value (false)
add_query("b", "a", <<["B", "C"], ["A", "INTEGER"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["A", "BOOLEAN"]>>, "A")
add_call_chain(<<BOOLEAN,C,A,C,INTEGER>>)
add_command("d", "C", <<["D", "INTEGER"], ["a", "BOOLEAN"], ["A", "BOOLEAN"]>>)
disjunction
equals
bool_value (false)
numerical_negation
add_call_chain(<<INTEGER,A,b,C,C,A,A,B,BOOLEAN>>)
add_command("c", "D", <<["C", "INTEGER"], ["D", "INTEGER"], ["a", "INTEGER"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["d", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "INTEGER"]>>)
bool_value (false)
add_command("A", "D", <<["D", "BOOLEAN"]>>)
add_command("A", "a", <<["A", "BOOLEAN"]>>)
add_call_chain(<<d,INTEGER,c>>)
bool_value (true)
quotient
add_command("a", "C", <<["B", "INTEGER"], ["e", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "INTEGER"]>>)
numerical_negation
add_attribute("C", "e", "A")
conjunction
add_class(D)
bool_value (true)
add_class(c)
int_value (42)
type_check
less_than
add_call_chain(<<C,b,D>>)
add_call_chain(<<B,A>>)
add_class(D)
add_call_chain(<<c,d,A,B,D,c,c,B>>)
modulo
bool_value (true)
logical_negation
generate_java_code
numerical_negation
greater_than
type_check
modulo
add_call_chain(<<D,C,e,C,A>>)
add_call_chain(<<e,D,a,b,e,a>>)
bool_value (false)
bool_value (false)
add_query("A", "C", <<["e", "D"], ["C", "INTEGER"], ["B", "INTEGER"], ["a", "BOOLEAN"], ["A", "INTEGER"], ["e", "d"]>>, "C")
bool_value (true)
logical_negation
add_call_chain(<<D,A>>)
bool_value (true)
less_than
int_value (29)
add_call_chain(<<b,C,A,D,A>>)
add_query("D", "e", <<["a", "BOOLEAN"], ["d", "INTEGER"], ["BOOLEAN", "INTEGER"], ["b", "BOOLEAN"], ["B", "INTEGER"]>>, "d")
logical_negation
add_call_chain(<<b,A,C,A,INTEGER>>)
logical_negation
add_attribute("a", "c", "BOOLEAN")
quotient
add_attribute("INTEGER", "a", "INTEGER")
add_call_chain(<<BOOLEAN,c>>)
numerical_negation
add_command("INTEGER", "e", <<["BOOLEAN", "C"], ["C", "BOOLEAN"]>>)
add_command("d", "d", <<["d", "BOOLEAN"], ["C", "BOOLEAN"], ["d", "INTEGER"], ["a", "INTEGER"], ["c", "d"], ["C", "A"], ["e", "BOOLEAN"], ["d", "c"], ["B", "INTEGER"]>>)
type_check
generate_java_code
type_check
add_attribute("A", "d", "INTEGER")
bool_value (false)
bool_value (false)
numerical_negation
add_call_chain(<<D,C,e,d,c,B,b>>)
bool_value (true)
logical_negation
generate_java_code
numerical_negation
add_attribute("D", "C", "BOOLEAN")
add_query("B", "e", <<["b", "INTEGER"]>>, "b")
add_query("BOOLEAN", "A", <<["B", "d"], ["c", "C"], ["A", "BOOLEAN"], ["D", "INTEGER"], ["c", "c"], ["b", "b"], ["c", "BOOLEAN"]>>, "c")
logical_negation
int_value (9)
add_command("b", "a", <<["e", "INTEGER"], ["e", "INTEGER"], ["c", "c"], ["A", "BOOLEAN"], ["a", "c"], ["B", "A"], ["c", "BOOLEAN"], ["C", "INTEGER"]>>)
bool_value (true)
add_class(D)
add_attribute("a", "b", "c")
bool_value (true)
