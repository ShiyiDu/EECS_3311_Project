add_class(A)
add_call_chain(<<a,b,A,D,b,c,D,C>>)
generate_java_code
add_class(c)
logical_negation
int_value (19)
generate_java_code
int_value (24)
add_class(C)
add_command("A", "C", <<["INTEGER", "INTEGER"], ["b", "e"], ["A", "INTEGER"], ["a", "D"], ["b", "INTEGER"], ["B", "b"]>>)
add_class(e)
conjunction
add_command("B", "d", <<["e", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["a", "B"], ["e", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "BOOLEAN"]>>)
bool_value (true)
type_check
bool_value (true)
add_call_chain(<<d,a>>)
add_call_chain(<<e,A,b,BOOLEAN,C,B>>)
logical_negation
add_query("a", "A", <<["B", "INTEGER"], ["B", "B"], ["e", "INTEGER"], ["b", "b"], ["A", "INTEGER"]>>, "e")
bool_value (true)
add_attribute("A", "e", "INTEGER")
disjunction
numerical_negation
logical_negation
logical_negation
add_call_chain(<<BOOLEAN,D,e,e,d,a,A,d,D>>)
logical_negation
bool_value (true)
bool_value (false)
logical_negation
add_class(c)
add_query("b", "e", <<["a", "BOOLEAN"], ["D", "INTEGER"], ["B", "INTEGER"], ["c", "BOOLEAN"]>>, "c")
bool_value (true)
bool_value (false)
numerical_negation
add_query("BOOLEAN", "A", <<["BOOLEAN", "BOOLEAN"], ["b", "D"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["B", "C"], ["C", "INTEGER"], ["D", "INTEGER"], ["A", "A"]>>, "INTEGER")
add_call_chain(<<BOOLEAN,BOOLEAN,b,b,b,INTEGER>>)
bool_value (false)
numerical_negation
logical_negation
add_query("B", "A", <<["B", "BOOLEAN"], ["c", "INTEGER"], ["a", "BOOLEAN"]>>, "A")
numerical_negation
generate_java_code
numerical_negation
type_check
add_query("a", "c", <<["A", "INTEGER"]>>, "c")
add_attribute("d", "a", "b")
add_class(B)
int_value (34)
disjunction
equals
type_check
add_attribute("C", "C", "INTEGER")
add_call_chain(<<c,BOOLEAN>>)
int_value (45)
add_attribute("D", "B", "INTEGER")
add_query("d", "a", <<["A", "BOOLEAN"], ["d", "D"], ["INTEGER", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "b"], ["A", "C"]>>, "D")
conjunction
int_value (16)
bool_value (true)
add_command("a", "C", <<["A", "a"], ["C", "INTEGER"], ["c", "BOOLEAN"], ["a", "BOOLEAN"]>>)
add_command("C", "b", <<["d", "INTEGER"], ["A", "d"], ["d", "D"]>>)
add_command("A", "D", <<["D", "BOOLEAN"], ["a", "INTEGER"]>>)
add_query("b", "A", <<["BOOLEAN", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "d"], ["B", "INTEGER"], ["A", "A"], ["c", "BOOLEAN"]>>, "c")
greater_than
disjunction
add_query("a", "D", <<["B", "INTEGER"], ["d", "INTEGER"]>>, "D")
bool_value (true)
add_call_chain(<<d,e,B,BOOLEAN,d,c,D,e>>)
add_command("C", "a", <<["c", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["e", "INTEGER"]>>)
int_value (12)
numerical_negation
type_check
add_command("d", "b", <<["INTEGER", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "INTEGER"], ["d", "BOOLEAN"], ["b", "INTEGER"], ["A", "INTEGER"], ["B", "INTEGER"]>>)
add_command("d", "C", <<["b", "BOOLEAN"]>>)
add_command("c", "d", <<["e", "BOOLEAN"], ["B", "A"], ["A", "BOOLEAN"], ["d", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["b", "C"], ["B", "BOOLEAN"], ["c", "INTEGER"]>>)
add_class(B)
add_query("e", "b", <<["A", "A"], ["A", "b"], ["A", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "INTEGER"], ["e", "INTEGER"], ["B", "C"]>>, "D")
generate_java_code
conjunction
logical_negation
bool_value (true)
add_query("D", "d", <<["A", "c"]>>, "b")
add_command("c", "c", <<["A", "BOOLEAN"], ["d", "b"], ["e", "C"]>>)
int_value (32)
logical_negation
int_value (33)
conjunction
add_call_chain(<<a,BOOLEAN,b>>)
subtraction
add_query("C", "a", <<["a", "b"], ["INTEGER", "INTEGER"], ["b", "D"], ["d", "INTEGER"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["e", "A"]>>, "e")
int_value (10)
bool_value (true)
bool_value (false)
type_check
add_query("B", "a", <<["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "INTEGER"], ["A", "c"], ["D", "INTEGER"], ["d", "BOOLEAN"], ["C", "BOOLEAN"]>>, "e")
add_query("INTEGER", "c", <<["a", "BOOLEAN"], ["e", "INTEGER"], ["b", "BOOLEAN"], ["A", "BOOLEAN"]>>, "b")
logical_negation
logical_negation
add_attribute("D", "e", "INTEGER")
add_attribute("C", "e", "BOOLEAN")
add_call_chain(<<d,D,b,INTEGER,d,INTEGER,C>>)
int_value (47)
type_check
logical_negation
generate_java_code
add_call_chain(<<A,d,e,e,d,D,BOOLEAN,BOOLEAN>>)
conjunction
add_query("INTEGER", "b", <<["d", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "c"]>>, "d")
numerical_negation
numerical_negation
bool_value (false)
int_value (19)
add_command("a", "INTEGER", <<["BOOLEAN", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "BOOLEAN"]>>)
less_than
bool_value (false)
logical_negation
bool_value (true)
bool_value (true)
subtraction
add_command("BOOLEAN", "c", <<["B", "BOOLEAN"], ["B", "B"], ["d", "a"], ["A", "BOOLEAN"], ["e", "b"], ["e", "C"]>>)
bool_value (false)
logical_negation
type_check
logical_negation
type_check
add_command("A", "D", <<["c", "BOOLEAN"], ["e", "A"], ["e", "INTEGER"]>>)
bool_value (false)
add_command("B", "C", <<["A", "BOOLEAN"], ["A", "BOOLEAN"], ["BOOLEAN", "b"], ["d", "BOOLEAN"], ["e", "A"], ["B", "BOOLEAN"]>>)
add_attribute("A", "D", "BOOLEAN")
add_call_chain(<<e,INTEGER,d,e,e,B,b,C,BOOLEAN>>)
logical_negation
bool_value (true)
type_check
subtraction
add_command("A", "D", <<["a", "INTEGER"], ["BOOLEAN", "INTEGER"], ["c", "INTEGER"], ["INTEGER", "BOOLEAN"], ["A", "BOOLEAN"], ["INTEGER", "INTEGER"], ["B", "INTEGER"]>>)
logical_negation
add_call_chain(<<C,d,e,BOOLEAN,e,a,C,B>>)
numerical_negation
add_call_chain(<<c,a,D,a,a,INTEGER,B,a,c>>)
add_call_chain(<<B,B>>)
add_query("B", "D", <<["A", "D"], ["c", "INTEGER"], ["C", "INTEGER"], ["A", "INTEGER"], ["BOOLEAN", "c"], ["e", "BOOLEAN"], ["a", "INTEGER"], ["c", "BOOLEAN"]>>, "a")
add_command("A", "A", <<["BOOLEAN", "BOOLEAN"], ["d", "INTEGER"], ["B", "C"]>>)
add_command("A", "D", <<["A", "INTEGER"], ["d", "BOOLEAN"], ["a", "INTEGER"], ["a", "INTEGER"], ["D", "BOOLEAN"], ["d", "d"]>>)
add_query("INTEGER", "A", <<["B", "b"], ["d", "INTEGER"]>>, "BOOLEAN")
bool_value (true)
generate_java_code
type_check
add_query("d", "C", <<["BOOLEAN", "d"], ["B", "BOOLEAN"], ["a", "D"], ["B", "BOOLEAN"], ["c", "BOOLEAN"]>>, "D")
add_call_chain(<<A,C,A,A,a,C>>)
less_than
logical_negation
add_command("C", "b", <<["a", "INTEGER"], ["c", "BOOLEAN"], ["c", "INTEGER"], ["A", "INTEGER"], ["d", "BOOLEAN"], ["A", "INTEGER"], ["A", "BOOLEAN"], ["D", "e"], ["d", "INTEGER"]>>)
bool_value (false)
add_attribute("BOOLEAN", "BOOLEAN", "c")
add_attribute("D", "c", "BOOLEAN")
add_call_chain(<<c,B,b,a,c,D,e,A>>)
logical_negation
greater_than
equals
add_call_chain(<<C,b,b,A,D,c>>)
add_call_chain(<<D>>)
bool_value (false)
numerical_negation
generate_java_code
bool_value (false)
add_attribute("c", "C", "BOOLEAN")
add_query("C", "B", <<["C", "INTEGER"], ["INTEGER", "INTEGER"], ["e", "A"], ["INTEGER", "B"], ["e", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["d", "BOOLEAN"]>>, "A")
add_call_chain(<<D,A,d>>)
add_class(C)
add_command("e", "c", <<["e", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["d", "INTEGER"], ["C", "BOOLEAN"], ["D", "B"], ["C", "INTEGER"]>>)
add_attribute("b", "d", "INTEGER")
add_command("D", "a", <<["a", "INTEGER"], ["B", "BOOLEAN"]>>)
add_attribute("d", "e", "D")
add_attribute("A", "INTEGER", "INTEGER")
int_value (24)
add_query("A", "b", <<["A", "B"], ["b", "C"]>>, "C")
numerical_negation
modulo
logical_negation
int_value (8)
add_call_chain(<<B,c,C>>)
bool_value (true)
type_check
add_query("INTEGER", "e", <<["D", "INTEGER"], ["B", "INTEGER"], ["e", "INTEGER"], ["A", "D"], ["c", "INTEGER"], ["D", "B"], ["A", "D"]>>, "D")
add_call_chain(<<C,b,B,INTEGER,A>>)
add_command("BOOLEAN", "A", <<["A", "BOOLEAN"], ["e", "b"], ["b", "C"]>>)
add_query("b", "a", <<["b", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "BOOLEAN"]>>, "d")
generate_java_code
add_query("B", "a", <<["c", "B"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["a", "INTEGER"]>>, "D")
add_call_chain(<<d,b,a>>)
add_call_chain(<<B,B,BOOLEAN,B,d,A,A,B,d>>)
generate_java_code
add_command("a", "C", <<["C", "INTEGER"], ["A", "c"], ["b", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "BOOLEAN"]>>)
less_than
bool_value (true)
add_query("c", "C", <<["B", "INTEGER"], ["a", "INTEGER"], ["INTEGER", "INTEGER"], ["d", "BOOLEAN"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["INTEGER", "INTEGER"], ["e", "D"], ["D", "b"]>>, "c")
int_value (26)
multiplication
bool_value (true)
add_command("c", "INTEGER", <<["e", "INTEGER"], ["b", "INTEGER"], ["B", "INTEGER"]>>)
add_query("B", "D", <<["D", "BOOLEAN"]>>, "BOOLEAN")
add_call_chain(<<e,d>>)
type_check
add_command("d", "B", <<["c", "BOOLEAN"], ["a", "BOOLEAN"], ["BOOLEAN", "A"], ["INTEGER", "INTEGER"]>>)
add_command("a", "a", <<["INTEGER", "INTEGER"], ["a", "d"], ["A", "INTEGER"], ["C", "BOOLEAN"]>>)
add_command("C", "b", <<["c", "A"], ["D", "INTEGER"], ["D", "INTEGER"]>>)
logical_negation
type_check
add_query("d", "D", <<["C", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "A"], ["c", "INTEGER"]>>, "B")
logical_negation
add_query("a", "d", <<["B", "BOOLEAN"]>>, "a")
logical_negation
int_value (1)
modulo
bool_value (false)
add_command("B", "A", <<["D", "B"], ["c", "BOOLEAN"], ["INTEGER", "d"], ["B", "BOOLEAN"], ["B", "A"], ["B", "BOOLEAN"], ["C", "INTEGER"], ["e", "A"]>>)
add_call_chain(<<e,B,b,e,B>>)
logical_negation
bool_value (true)
add_call_chain(<<C,D,a,C,A>>)
bool_value (true)
add_query("A", "C", <<["INTEGER", "INTEGER"]>>, "BOOLEAN")
less_than
add_command("a", "e", <<["a", "BOOLEAN"], ["INTEGER", "d"], ["A", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["B", "a"], ["C", "A"], ["a", "INTEGER"], ["B", "b"], ["e", "BOOLEAN"]>>)
greater_than
logical_negation
