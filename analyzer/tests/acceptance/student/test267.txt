add_call_chain(<<B,A,D,C,e,d>>)
equals
add_command("B", "C", <<["b", "C"], ["B", "d"], ["a", "INTEGER"], ["c", "INTEGER"], ["b", "A"], ["c", "BOOLEAN"], ["B", "A"], ["c", "BOOLEAN"], ["C", "INTEGER"]>>)
add_class(C)
numerical_negation
int_value (6)
greater_than
int_value (45)
add_call_chain(<<B,c>>)
add_call_chain(<<BOOLEAN,D,D>>)
bool_value (false)
numerical_negation
conjunction
modulo
logical_negation
add_attribute("C", "e", "BOOLEAN")
numerical_negation
less_than
add_attribute("C", "a", "B")
int_value (26)
add_command("c", "b", <<["b", "BOOLEAN"], ["A", "BOOLEAN"]>>)
add_call_chain(<<b>>)
add_call_chain(<<B>>)
add_call_chain(<<d,D,e,a>>)
add_command("BOOLEAN", "INTEGER", <<["C", "c"], ["A", "C"], ["b", "e"], ["C", "INTEGER"], ["c", "INTEGER"], ["b", "c"], ["D", "d"], ["INTEGER", "BOOLEAN"]>>)
add_query("B", "D", <<["e", "INTEGER"], ["c", "BOOLEAN"], ["A", "INTEGER"], ["b", "BOOLEAN"], ["C", "b"], ["INTEGER", "INTEGER"], ["INTEGER", "BOOLEAN"]>>, "b")
bool_value (true)
add_call_chain(<<B,e>>)
add_command("c", "B", <<["D", "c"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["D", "INTEGER"], ["C", "e"]>>)
add_command("A", "C", <<["C", "INTEGER"], ["D", "INTEGER"], ["B", "B"], ["e", "BOOLEAN"]>>)
add_attribute("B", "D", "BOOLEAN")
generate_java_code
add_call_chain(<<D,c>>)
add_attribute("a", "b", "BOOLEAN")
add_attribute("D", "D", "e")
int_value (47)
add_call_chain(<<A,B,e,e,B>>)
type_check
add_query("B", "D", <<["C", "B"], ["B", "BOOLEAN"], ["c", "INTEGER"], ["C", "A"], ["BOOLEAN", "B"]>>, "A")
add_query("INTEGER", "A", <<["BOOLEAN", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["d", "BOOLEAN"]>>, "A")
logical_negation
int_value (44)
add_call_chain(<<D>>)
add_command("a", "A", <<["A", "INTEGER"], ["d", "D"], ["c", "INTEGER"]>>)
add_call_chain(<<e,D,e,C,c,d>>)
add_call_chain(<<C,A,D,B,c,B,INTEGER>>)
add_query("C", "C", <<["a", "BOOLEAN"], ["C", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["c", "B"]>>, "A")
logical_negation
numerical_negation
add_command("C", "BOOLEAN", <<["A", "B"], ["A", "e"], ["e", "A"], ["INTEGER", "INTEGER"]>>)
add_command("C", "A", <<["B", "INTEGER"], ["c", "BOOLEAN"], ["C", "INTEGER"], ["c", "INTEGER"], ["c", "BOOLEAN"], ["INTEGER", "INTEGER"], ["A", "a"], ["a", "d"]>>)
bool_value (true)
add_command("b", "D", <<["B", "INTEGER"]>>)
conjunction
bool_value (true)
add_command("C", "e", <<["b", "BOOLEAN"], ["A", "b"]>>)
add_class(A)
generate_java_code
add_attribute("d", "c", "INTEGER")
bool_value (true)
subtraction
add_query("D", "C", <<["A", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "BOOLEAN"]>>, "a")
add_command("B", "D", <<["a", "INTEGER"], ["d", "BOOLEAN"], ["a", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["c", "BOOLEAN"], ["b", "A"], ["D", "e"], ["c", "BOOLEAN"], ["c", "INTEGER"]>>)
less_than
generate_java_code
type_check
logical_negation
add_command("c", "INTEGER", <<["INTEGER", "d"]>>)
add_call_chain(<<D,a,d,d,b,b,c,A,B>>)
add_query("d", "a", <<["C", "INTEGER"], ["B", "INTEGER"], ["BOOLEAN", "INTEGER"], ["A", "B"], ["INTEGER", "D"], ["A", "INTEGER"], ["B", "A"], ["c", "e"], ["a", "D"]>>, "d")
type_check
bool_value (false)
bool_value (false)
add_attribute("d", "d", "BOOLEAN")
bool_value (false)
greater_than
add_command("C", "d", <<["a", "INTEGER"]>>)
add_call_chain(<<INTEGER,B,c,a,c,A,c,a,B>>)
add_call_chain(<<e,C,D>>)
type_check
bool_value (true)
add_attribute("b", "e", "BOOLEAN")
multiplication
logical_negation
add_command("A", "BOOLEAN", <<["e", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["A", "INTEGER"]>>)
add_command("a", "d", <<["d", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "d"], ["A", "BOOLEAN"], ["d", "INTEGER"], ["A", "d"], ["A", "BOOLEAN"], ["INTEGER", "e"]>>)
add_call_chain(<<D,D>>)
add_call_chain(<<A,c,B>>)
add_call_chain(<<b,e,A,INTEGER,A,c>>)
add_query("c", "B", <<["a", "BOOLEAN"]>>, "A")
less_than
logical_negation
numerical_negation
int_value (7)
conjunction
add_call_chain(<<A,A,BOOLEAN,D,a,C>>)
add_call_chain(<<b,b,c,c,B,e,D>>)
add_call_chain(<<D,C,c,A,a,A>>)
generate_java_code
type_check
logical_negation
disjunction
bool_value (true)
less_than
type_check
quotient
int_value (27)
bool_value (false)
generate_java_code
logical_negation
bool_value (false)
add_query("d", "c", <<["C", "B"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["e", "BOOLEAN"]>>, "c")
numerical_negation
add_call_chain(<<C,d,A,C,a,B>>)
logical_negation
add_query("C", "a", <<["B", "B"]>>, "d")
disjunction
type_check
numerical_negation
int_value (25)
add_query("C", "e", <<["d", "BOOLEAN"], ["d", "INTEGER"], ["e", "INTEGER"], ["b", "BOOLEAN"]>>, "B")
add_call_chain(<<C,D>>)
add_call_chain(<<a,B,d,D,b,b,BOOLEAN,D>>)
disjunction
add_query("C", "C", <<["c", "INTEGER"], ["a", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>, "B")
greater_than
add_attribute("A", "C", "b")
int_value (11)
generate_java_code
logical_negation
add_call_chain(<<C,c,D,D,b,c,BOOLEAN,D,B>>)
generate_java_code
logical_negation
add_command("b", "b", <<["B", "BOOLEAN"], ["D", "INTEGER"], ["a", "INTEGER"], ["d", "BOOLEAN"]>>)
generate_java_code
add_attribute("A", "C", "BOOLEAN")
add_attribute("A", "D", "d")
add_attribute("d", "e", "INTEGER")
add_attribute("e", "a", "INTEGER")
multiplication
add_query("D", "D", <<["B", "INTEGER"], ["d", "INTEGER"], ["D", "D"], ["e", "C"], ["d", "D"], ["C", "BOOLEAN"]>>, "c")
add_attribute("D", "B", "a")
add_query("c", "BOOLEAN", <<["B", "INTEGER"], ["e", "INTEGER"], ["c", "INTEGER"], ["e", "D"], ["c", "BOOLEAN"], ["e", "c"], ["b", "BOOLEAN"]>>, "B")
int_value (44)
quotient
add_call_chain(<<C,INTEGER,c,d>>)
add_class(A)
add_call_chain(<<c,C>>)
add_query("D", "B", <<["C", "INTEGER"], ["d", "c"], ["a", "INTEGER"], ["a", "INTEGER"], ["D", "BOOLEAN"], ["D", "b"], ["A", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "BOOLEAN"]>>, "C")
add_command("INTEGER", "e", <<["C", "INTEGER"], ["d", "BOOLEAN"], ["A", "D"], ["B", "BOOLEAN"], ["C", "INTEGER"], ["A", "INTEGER"]>>)
greater_than
int_value (1)
less_than
logical_negation
add_attribute("INTEGER", "A", "BOOLEAN")
add_query("D", "e", <<["b", "c"], ["a", "e"], ["a", "BOOLEAN"], ["e", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["d", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["d", "D"]>>, "c")
add_call_chain(<<A,e,C>>)
conjunction
add_class(c)
int_value (42)
add_query("b", "d", <<["e", "d"], ["b", "BOOLEAN"]>>, "D")
numerical_negation
bool_value (false)
int_value (20)
logical_negation
add_call_chain(<<A,a,B,d,C>>)
add_call_chain(<<e,B,c,d,e,INTEGER,a>>)
int_value (49)
add_query("A", "c", <<["B", "INTEGER"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["c", "BOOLEAN"]>>, "C")
numerical_negation
add_call_chain(<<B>>)
numerical_negation
less_than
add_attribute("A", "c", "INTEGER")
generate_java_code
bool_value (true)
numerical_negation
add_call_chain(<<A,B,a,c,C,b,BOOLEAN>>)
add_query("A", "B", <<["A", "INTEGER"], ["INTEGER", "BOOLEAN"], ["b", "a"], ["a", "C"]>>, "c")
add_class(c)
bool_value (true)
numerical_negation
numerical_negation
add_call_chain(<<D,B,d,c,e,D>>)
add_attribute("b", "B", "INTEGER")
add_call_chain(<<a,C>>)
generate_java_code
add_attribute("A", "b", "e")
add_attribute("D", "BOOLEAN", "INTEGER")
add_query("D", "A", <<["C", "BOOLEAN"], ["c", "C"], ["BOOLEAN", "d"], ["D", "C"], ["C", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["b", "INTEGER"]>>, "e")
add_attribute("d", "a", "INTEGER")
bool_value (false)
add_attribute("e", "b", "D")
add_attribute("BOOLEAN", "B", "C")
equals
numerical_negation
add_query("c", "INTEGER", <<["c", "A"], ["e", "b"], ["e", "B"], ["b", "INTEGER"], ["D", "INTEGER"], ["B", "INTEGER"], ["B", "INTEGER"]>>, "C")
type_check
bool_value (true)
logical_negation
add_call_chain(<<D,e>>)
numerical_negation
generate_java_code
add_query("A", "C", <<["C", "BOOLEAN"]>>, "a")
add_command("A", "a", <<["BOOLEAN", "INTEGER"]>>)
add_command("B", "B", <<["e", "INTEGER"], ["c", "INTEGER"], ["A", "INTEGER"], ["B", "INTEGER"], ["d", "c"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["BOOLEAN", "D"], ["C", "INTEGER"]>>)
generate_java_code
add_attribute("INTEGER", "b", "INTEGER")
bool_value (true)
