add_attribute("e", "INTEGER", "INTEGER")
add_query("INTEGER", "D", <<["B", "INTEGER"], ["B", "INTEGER"], ["a", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["D", "INTEGER"], ["a", "BOOLEAN"], ["A", "INTEGER"], ["b", "INTEGER"]>>, "a")
add_call_chain(<<C,INTEGER,a>>)
logical_negation
add_call_chain(<<B,b,D,a>>)
bool_value (true)
less_than
add_query("e", "D", <<["e", "BOOLEAN"], ["B", "e"], ["a", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "d"], ["A", "B"]>>, "A")
add_class(e)
logical_negation
add_query("A", "INTEGER", <<["B", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "c"], ["b", "BOOLEAN"], ["b", "INTEGER"], ["B", "BOOLEAN"], ["e", "BOOLEAN"]>>, "e")
add_command("d", "b", <<["b", "BOOLEAN"], ["B", "A"], ["A", "BOOLEAN"], ["D", "D"], ["a", "b"], ["C", "c"]>>)
type_check
add_call_chain(<<b,A>>)
add_command("A", "INTEGER", <<["a", "C"]>>)
add_command("b", "A", <<["d", "INTEGER"], ["c", "d"]>>)
generate_java_code
subtraction
add_class(d)
add_query("A", "C", <<["A", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["a", "INTEGER"], ["C", "D"]>>, "C")
int_value (23)
add_attribute("B", "B", "D")
add_command("B", "INTEGER", <<["B", "INTEGER"]>>)
add_attribute("A", "INTEGER", "D")
logical_negation
int_value (23)
add_command("C", "BOOLEAN", <<["e", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "d"], ["C", "d"], ["C", "INTEGER"], ["e", "d"], ["BOOLEAN", "BOOLEAN"], ["d", "A"]>>)
subtraction
add_command("c", "INTEGER", <<["C", "D"], ["c", "INTEGER"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["B", "B"]>>)
bool_value (true)
add_query("c", "C", <<["d", "INTEGER"], ["B", "A"]>>, "c")
numerical_negation
numerical_negation
type_check
conjunction
add_call_chain(<<B,B>>)
add_query("b", "B", <<["a", "a"], ["c", "INTEGER"], ["C", "c"], ["A", "D"], ["C", "D"], ["d", "INTEGER"], ["b", "INTEGER"], ["d", "c"]>>, "c")
add_attribute("e", "A", "INTEGER")
bool_value (true)
add_call_chain(<<a>>)
type_check
add_attribute("INTEGER", "A", "INTEGER")
type_check
add_class(B)
add_command("D", "e", <<["A", "a"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["C", "C"]>>)
generate_java_code
add_query("a", "b", <<["e", "BOOLEAN"], ["b", "INTEGER"]>>, "B")
add_query("B", "C", <<["d", "INTEGER"], ["d", "INTEGER"], ["b", "c"], ["INTEGER", "INTEGER"]>>, "b")
add_attribute("D", "A", "A")
add_call_chain(<<d,B,a,c,a>>)
bool_value (true)
bool_value (true)
bool_value (true)
generate_java_code
add_command("e", "INTEGER", <<["A", "B"], ["B", "INTEGER"], ["d", "INTEGER"], ["d", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["D", "BOOLEAN"]>>)
add_call_chain(<<C,e,A,a,b,INTEGER,b,A,D>>)
add_attribute("C", "B", "BOOLEAN")
generate_java_code
add_attribute("C", "INTEGER", "INTEGER")
logical_negation
int_value (16)
add_class(B)
add_query("A", "B", <<["A", "BOOLEAN"], ["a", "D"], ["e", "BOOLEAN"]>>, "a")
logical_negation
add_attribute("C", "d", "INTEGER")
add_query("e", "B", <<["C", "B"], ["b", "BOOLEAN"], ["C", "INTEGER"], ["D", "INTEGER"], ["B", "BOOLEAN"]>>, "b")
add_call_chain(<<D,d,D,INTEGER,A,e,A>>)
type_check
conjunction
add_call_chain(<<C>>)
type_check
bool_value (false)
add_query("B", "A", <<["B", "BOOLEAN"], ["B", "BOOLEAN"]>>, "C")
bool_value (true)
add_call_chain(<<BOOLEAN,D,e,b>>)
add_call_chain(<<BOOLEAN,c,BOOLEAN,D,C,A,b>>)
disjunction
int_value (6)
add_query("a", "a", <<["e", "BOOLEAN"], ["D", "A"]>>, "c")
logical_negation
add_call_chain(<<A,INTEGER,A,d,b>>)
generate_java_code
modulo
logical_negation
disjunction
add_attribute("D", "c", "BOOLEAN")
add_class(C)
generate_java_code
logical_negation
bool_value (true)
subtraction
add_command("B", "C", <<["A", "INTEGER"], ["A", "BOOLEAN"], ["A", "D"], ["A", "B"], ["e", "INTEGER"]>>)
numerical_negation
numerical_negation
add_call_chain(<<BOOLEAN,INTEGER,A>>)
add_call_chain(<<D,A,D,C,b,e,A,BOOLEAN>>)
add_attribute("a", "B", "BOOLEAN")
add_class(C)
add_command("e", "A", <<["e", "BOOLEAN"], ["b", "INTEGER"], ["d", "BOOLEAN"], ["B", "D"], ["INTEGER", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "e"], ["A", "BOOLEAN"], ["B", "INTEGER"]>>)
add_attribute("c", "d", "INTEGER")
add_command("b", "BOOLEAN", <<["BOOLEAN", "d"], ["d", "b"], ["B", "b"], ["C", "BOOLEAN"], ["b", "BOOLEAN"]>>)
add_call_chain(<<d,d,a,B,a,B,c,A,e>>)
add_command("a", "D", <<["a", "C"], ["B", "D"], ["D", "INTEGER"], ["a", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["a", "INTEGER"]>>)
bool_value (true)
int_value (47)
add_class(B)
add_class(BOOLEAN)
numerical_negation
generate_java_code
add_command("C", "a", <<["e", "b"], ["C", "INTEGER"]>>)
disjunction
generate_java_code
numerical_negation
int_value (24)
quotient
bool_value (false)
int_value (25)
type_check
generate_java_code
add_attribute("D", "a", "c")
bool_value (true)
add_call_chain(<<c,e,A,A>>)
conjunction
add_command("c", "C", <<["BOOLEAN", "INTEGER"], ["BOOLEAN", "INTEGER"], ["D", "BOOLEAN"], ["D", "BOOLEAN"], ["d", "BOOLEAN"], ["INTEGER", "c"], ["C", "BOOLEAN"], ["D", "INTEGER"]>>)
multiplication
bool_value (false)
add_call_chain(<<a,B,b,C,A,d>>)
conjunction
add_query("c", "A", <<["C", "BOOLEAN"], ["BOOLEAN", "A"], ["c", "BOOLEAN"], ["INTEGER", "INTEGER"], ["C", "BOOLEAN"], ["a", "d"], ["A", "INTEGER"], ["b", "BOOLEAN"]>>, "b")
add_query("b", "A", <<["D", "a"], ["C", "INTEGER"], ["INTEGER", "INTEGER"], ["BOOLEAN", "INTEGER"], ["B", "INTEGER"], ["BOOLEAN", "INTEGER"], ["INTEGER", "b"]>>, "d")
type_check
bool_value (true)
conjunction
generate_java_code
bool_value (false)
numerical_negation
bool_value (true)
bool_value (false)
addition
less_than
add_command("e", "C", <<["A", "D"], ["a", "INTEGER"]>>)
bool_value (true)
add_call_chain(<<D,B,INTEGER>>)
type_check
generate_java_code
equals
logical_negation
disjunction
add_command("C", "b", <<["B", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "d"], ["C", "BOOLEAN"], ["D", "C"], ["d", "INTEGER"], ["c", "INTEGER"], ["d", "INTEGER"], ["BOOLEAN", "e"]>>)
add_class(INTEGER)
add_query("A", "B", <<["B", "INTEGER"], ["B", "c"], ["BOOLEAN", "B"], ["B", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "BOOLEAN"]>>, "D")
bool_value (false)
add_class(b)
add_attribute("D", "a", "BOOLEAN")
int_value (26)
int_value (6)
add_command("C", "B", <<["D", "INTEGER"], ["b", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "INTEGER"]>>)
add_command("d", "d", <<["d", "C"], ["INTEGER", "BOOLEAN"], ["D", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "c"], ["a", "c"], ["C", "BOOLEAN"], ["b", "BOOLEAN"]>>)
add_call_chain(<<INTEGER>>)
add_query("B", "b", <<["b", "a"], ["e", "e"], ["C", "BOOLEAN"], ["INTEGER", "INTEGER"], ["B", "INTEGER"], ["INTEGER", "INTEGER"]>>, "d")
add_command("c", "d", <<["d", "BOOLEAN"], ["b", "INTEGER"]>>)
add_call_chain(<<e,e>>)
type_check
add_call_chain(<<d,B,A,b>>)
add_command("D", "BOOLEAN", <<["e", "BOOLEAN"], ["B", "INTEGER"], ["C", "INTEGER"], ["b", "INTEGER"], ["b", "INTEGER"]>>)
logical_negation
bool_value (true)
add_call_chain(<<D>>)
int_value (32)
generate_java_code
add_call_chain(<<B>>)
int_value (49)
add_attribute("B", "B", "INTEGER")
add_query("a", "b", <<["D", "A"]>>, "A")
greater_than
numerical_negation
logical_negation
addition
generate_java_code
generate_java_code
add_class(e)
add_call_chain(<<BOOLEAN,C,b,a>>)
add_command("BOOLEAN", "D", <<["D", "BOOLEAN"], ["d", "INTEGER"], ["a", "BOOLEAN"], ["e", "BOOLEAN"]>>)
add_command("C", "a", <<["BOOLEAN", "INTEGER"], ["e", "INTEGER"], ["C", "C"], ["D", "BOOLEAN"]>>)
logical_negation
numerical_negation
bool_value (false)
add_call_chain(<<INTEGER,b,e,c>>)
add_attribute("a", "D", "B")
int_value (45)
add_class(B)
disjunction
add_call_chain(<<BOOLEAN,B,d,INTEGER,b,e>>)
equals
add_query("C", "C", <<["D", "BOOLEAN"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "e"]>>, "b")
add_class(c)
add_class(INTEGER)
add_query("C", "D", <<["B", "INTEGER"], ["c", "BOOLEAN"], ["D", "INTEGER"], ["c", "A"], ["a", "D"], ["d", "BOOLEAN"], ["D", "c"], ["D", "INTEGER"], ["D", "INTEGER"]>>, "D")
add_command("INTEGER", "C", <<["A", "B"], ["b", "BOOLEAN"], ["c", "d"], ["d", "INTEGER"], ["a", "BOOLEAN"], ["D", "b"], ["e", "INTEGER"], ["B", "BOOLEAN"]>>)
add_attribute("d", "a", "INTEGER")
bool_value (false)
add_class(d)
add_query("B", "C", <<["C", "C"], ["INTEGER", "INTEGER"], ["a", "BOOLEAN"], ["d", "INTEGER"]>>, "D")
int_value (21)
add_call_chain(<<b,a,A,B,c,B,a,e>>)
add_call_chain(<<a,D,BOOLEAN,BOOLEAN,D,C,c,C,INTEGER>>)
add_command("b", "BOOLEAN", <<["a", "a"], ["e", "INTEGER"], ["a", "a"], ["b", "BOOLEAN"], ["D", "d"], ["e", "C"], ["D", "e"], ["A", "INTEGER"]>>)
less_than
generate_java_code
add_call_chain(<<D,A,D,C,A,b,C,B>>)
add_attribute("a", "d", "INTEGER")
disjunction
add_call_chain(<<BOOLEAN,C,e,c,INTEGER,D>>)
add_class(A)
logical_negation
type_check
conjunction
int_value (21)
add_call_chain(<<a,c,A,d,d,b,e,B>>)
add_attribute("e", "B", "INTEGER")
bool_value (true)
add_command("e", "d", <<["C", "a"], ["D", "d"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["BOOLEAN", "B"], ["e", "INTEGER"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["B", "BOOLEAN"]>>)
add_command("C", "BOOLEAN", <<["C", "e"]>>)
add_query("BOOLEAN", "C", <<["B", "INTEGER"]>>, "INTEGER")
add_query("d", "e", <<["e", "INTEGER"]>>, "b")
numerical_negation
logical_negation
add_attribute("d", "INTEGER", "BOOLEAN")
greater_than
add_attribute("A", "A", "d")
type_check
int_value (14)
logical_negation
add_command("D", "A", <<["A", "BOOLEAN"], ["e", "INTEGER"], ["d", "INTEGER"], ["e", "BOOLEAN"], ["b", "INTEGER"], ["C", "INTEGER"]>>)
add_attribute("e", "B", "BOOLEAN")
