multiplication
add_query("A", "B", <<["B", "b"], ["c", "BOOLEAN"], ["e", "INTEGER"], ["d", "BOOLEAN"], ["a", "INTEGER"], ["D", "B"]>>, "A")
add_call_chain(<<B,a,BOOLEAN>>)
logical_negation
add_call_chain(<<d>>)
add_query("A", "b", <<["B", "BOOLEAN"]>>, "e")
bool_value (false)
int_value (41)
logical_negation
numerical_negation
equals
add_query("D", "A", <<["c", "INTEGER"], ["d", "a"], ["d", "BOOLEAN"], ["D", "INTEGER"]>>, "C")
numerical_negation
add_call_chain(<<C,c,D,BOOLEAN,a,c,c>>)
add_call_chain(<<d,B,B,C,d>>)
logical_negation
bool_value (false)
add_attribute("B", "e", "INTEGER")
add_attribute("a", "B", "INTEGER")
add_attribute("C", "a", "INTEGER")
int_value (18)
add_attribute("A", "a", "INTEGER")
modulo
add_class(e)
add_query("e", "b", <<["e", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["D", "INTEGER"], ["a", "BOOLEAN"], ["b", "BOOLEAN"], ["d", "INTEGER"]>>, "a")
add_command("A", "C", <<["a", "BOOLEAN"], ["A", "A"], ["D", "b"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["a", "BOOLEAN"]>>)
numerical_negation
add_class(e)
add_call_chain(<<b,d,b,a,INTEGER,B>>)
add_call_chain(<<D,c,BOOLEAN,A,a,B,C,d,d>>)
bool_value (false)
add_query("D", "BOOLEAN", <<["A", "INTEGER"]>>, "D")
add_call_chain(<<C,c,A>>)
int_value (43)
add_query("C", "B", <<["D", "INTEGER"], ["c", "INTEGER"], ["B", "a"], ["a", "INTEGER"], ["C", "BOOLEAN"]>>, "B")
add_attribute("c", "c", "BOOLEAN")
add_command("c", "C", <<["e", "INTEGER"], ["e", "BOOLEAN"], ["c", "INTEGER"], ["C", "INTEGER"], ["c", "BOOLEAN"], ["d", "INTEGER"], ["b", "BOOLEAN"], ["D", "e"]>>)
generate_java_code
bool_value (false)
add_query("e", "c", <<["B", "INTEGER"], ["e", "INTEGER"], ["C", "INTEGER"], ["b", "d"], ["d", "INTEGER"], ["d", "INTEGER"], ["D", "BOOLEAN"]>>, "b")
generate_java_code
add_attribute("A", "B", "BOOLEAN")
add_class(d)
less_than
generate_java_code
modulo
equals
int_value (30)
type_check
numerical_negation
add_command("c", "C", <<["b", "INTEGER"]>>)
int_value (6)
numerical_negation
add_attribute("INTEGER", "a", "BOOLEAN")
logical_negation
add_command("a", "d", <<["BOOLEAN", "b"], ["BOOLEAN", "C"], ["e", "A"], ["a", "INTEGER"], ["d", "INTEGER"], ["C", "BOOLEAN"], ["d", "d"], ["C", "A"], ["A", "BOOLEAN"]>>)
add_call_chain(<<B,B,A,b>>)
add_query("b", "e", <<["D", "INTEGER"], ["INTEGER", "INTEGER"], ["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "d"]>>, "B")
add_attribute("B", "b", "BOOLEAN")
add_command("A", "A", <<["d", "INTEGER"], ["b", "INTEGER"], ["b", "BOOLEAN"], ["A", "c"]>>)
modulo
int_value (38)
numerical_negation
logical_negation
bool_value (true)
add_class(a)
add_query("e", "a", <<["D", "BOOLEAN"], ["c", "C"], ["C", "BOOLEAN"], ["c", "INTEGER"], ["c", "d"], ["D", "INTEGER"], ["b", "INTEGER"], ["b", "BOOLEAN"], ["d", "BOOLEAN"]>>, "C")
add_call_chain(<<B,b,A,e>>)
bool_value (false)
add_call_chain(<<a,B,A,A,a,e>>)
equals
int_value (3)
add_attribute("c", "B", "INTEGER")
greater_than
add_command("e", "C", <<["A", "INTEGER"], ["d", "d"], ["c", "INTEGER"], ["C", "BOOLEAN"], ["D", "C"], ["b", "D"], ["C", "BOOLEAN"]>>)
add_command("a", "D", <<["A", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["INTEGER", "a"], ["e", "b"], ["a", "d"], ["b", "INTEGER"]>>)
numerical_negation
add_class(A)
add_command("D", "e", <<["d", "b"], ["D", "INTEGER"], ["d", "C"], ["D", "INTEGER"], ["c", "a"], ["a", "INTEGER"], ["INTEGER", "a"], ["INTEGER", "BOOLEAN"], ["b", "b"]>>)
greater_than
logical_negation
greater_than
add_attribute("INTEGER", "e", "b")
numerical_negation
int_value (5)
logical_negation
add_call_chain(<<a,c>>)
add_call_chain(<<C,C,a,b>>)
add_call_chain(<<a,e,e>>)
add_query("D", "INTEGER", <<["D", "BOOLEAN"], ["C", "D"], ["e", "BOOLEAN"], ["INTEGER", "INTEGER"], ["D", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "a"], ["b", "BOOLEAN"], ["e", "BOOLEAN"]>>, "b")
bool_value (false)
add_call_chain(<<a,BOOLEAN,C,c,C,e>>)
add_class(A)
generate_java_code
add_command("B", "INTEGER", <<["C", "INTEGER"], ["c", "a"], ["b", "INTEGER"]>>)
bool_value (true)
type_check
int_value (36)
add_command("D", "a", <<["BOOLEAN", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
generate_java_code
add_call_chain(<<B,INTEGER,INTEGER,A,D,B,e,b>>)
add_call_chain(<<d,c,D>>)
numerical_negation
add_class(a)
add_call_chain(<<C,B,a,A,c,B,D,a,D>>)
add_attribute("e", "A", "BOOLEAN")
add_command("A", "D", <<["C", "BOOLEAN"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["e", "INTEGER"], ["A", "BOOLEAN"], ["b", "INTEGER"], ["B", "BOOLEAN"]>>)
add_class(D)
type_check
subtraction
add_call_chain(<<D,b,INTEGER,d,A>>)
add_attribute("BOOLEAN", "e", "INTEGER")
quotient
add_call_chain(<<a,C,A,INTEGER,e,c,D>>)
numerical_negation
int_value (41)
bool_value (false)
add_attribute("c", "C", "BOOLEAN")
add_class(INTEGER)
equals
logical_negation
add_query("b", "A", <<["c", "c"], ["a", "B"], ["c", "c"], ["e", "BOOLEAN"], ["D", "INTEGER"], ["C", "INTEGER"]>>, "c")
addition
add_command("D", "b", <<["D", "c"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["d", "BOOLEAN"], ["INTEGER", "A"], ["a", "c"], ["B", "INTEGER"], ["A", "INTEGER"]>>)
addition
add_attribute("BOOLEAN", "INTEGER", "BOOLEAN")
type_check
add_attribute("e", "b", "A")
add_call_chain(<<c,e,c,c>>)
add_class(A)
add_command("B", "C", <<["B", "C"], ["a", "c"], ["C", "INTEGER"]>>)
int_value (16)
logical_negation
add_attribute("d", "INTEGER", "BOOLEAN")
generate_java_code
generate_java_code
add_attribute("B", "c", "BOOLEAN")
add_query("a", "B", <<["c", "INTEGER"], ["INTEGER", "BOOLEAN"], ["B", "INTEGER"], ["C", "INTEGER"], ["B", "D"], ["d", "INTEGER"], ["D", "e"], ["INTEGER", "INTEGER"]>>, "A")
type_check
int_value (33)
add_call_chain(<<c,b,e,B,BOOLEAN,d,a,C,D>>)
conjunction
bool_value (false)
numerical_negation
multiplication
type_check
add_call_chain(<<INTEGER,A,b,d>>)
logical_negation
add_attribute("BOOLEAN", "C", "INTEGER")
add_call_chain(<<e,e,c>>)
equals
add_query("d", "C", <<["e", "BOOLEAN"], ["B", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["c", "e"], ["C", "d"], ["b", "BOOLEAN"], ["a", "A"], ["a", "BOOLEAN"]>>, "d")
add_command("d", "e", <<["c", "INTEGER"], ["D", "BOOLEAN"], ["c", "INTEGER"], ["a", "INTEGER"], ["C", "INTEGER"], ["A", "INTEGER"], ["d", "B"], ["B", "e"], ["e", "INTEGER"]>>)
bool_value (true)
numerical_negation
addition
add_query("B", "e", <<["B", "BOOLEAN"], ["B", "INTEGER"], ["c", "INTEGER"], ["C", "INTEGER"], ["B", "INTEGER"], ["D", "B"], ["B", "C"], ["C", "BOOLEAN"], ["e", "INTEGER"]>>, "e")
add_command("A", "b", <<["b", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["A", "INTEGER"], ["A", "BOOLEAN"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["e", "INTEGER"], ["A", "BOOLEAN"]>>)
numerical_negation
add_command("INTEGER", "INTEGER", <<["D", "BOOLEAN"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["c", "e"], ["e", "B"], ["b", "d"], ["e", "BOOLEAN"], ["D", "INTEGER"], ["D", "BOOLEAN"]>>)
add_command("D", "B", <<["B", "B"], ["c", "a"], ["B", "INTEGER"], ["A", "BOOLEAN"]>>)
add_call_chain(<<C>>)
generate_java_code
add_command("a", "B", <<["B", "BOOLEAN"], ["A", "c"], ["A", "INTEGER"], ["B", "INTEGER"], ["c", "BOOLEAN"]>>)
add_command("C", "d", <<["e", "D"], ["A", "INTEGER"], ["INTEGER", "a"]>>)
add_command("e", "c", <<["d", "INTEGER"], ["B", "C"], ["D", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "D"]>>)
int_value (19)
conjunction
add_attribute("INTEGER", "a", "BOOLEAN")
disjunction
bool_value (false)
add_class(C)
add_call_chain(<<B,D,C,c,e>>)
add_command("A", "A", <<["a", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
add_query("a", "A", <<["C", "BOOLEAN"], ["c", "a"], ["D", "c"], ["A", "B"]>>, "BOOLEAN")
bool_value (false)
logical_negation
add_query("C", "b", <<["c", "a"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["INTEGER", "INTEGER"], ["INTEGER", "INTEGER"], ["e", "A"], ["b", "BOOLEAN"], ["d", "INTEGER"], ["D", "BOOLEAN"]>>, "e")
numerical_negation
add_query("b", "e", <<["e", "c"], ["d", "INTEGER"], ["D", "INTEGER"]>>, "A")
greater_than
add_query("a", "B", <<["C", "e"], ["e", "INTEGER"]>>, "b")
bool_value (false)
add_call_chain(<<A,a,C,A>>)
add_attribute("C", "d", "INTEGER")
add_call_chain(<<A,b,INTEGER,d,C,c,c,c>>)
bool_value (true)
logical_negation
add_attribute("B", "e", "INTEGER")
conjunction
