int_value (1)
add_class(e)
add_query("D", "D", <<["B", "INTEGER"], ["b", "BOOLEAN"], ["c", "INTEGER"]>>, "e")
bool_value (true)
bool_value (true)
add_command("e", "c", <<["C", "INTEGER"], ["d", "D"], ["e", "INTEGER"], ["INTEGER", "D"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["b", "BOOLEAN"], ["INTEGER", "INTEGER"]>>)
greater_than
greater_than
add_command("a", "BOOLEAN", <<["c", "INTEGER"], ["c", "c"], ["d", "a"], ["e", "INTEGER"], ["a", "BOOLEAN"]>>)
logical_negation
modulo
add_call_chain(<<e,D,a,b>>)
add_attribute("e", "d", "BOOLEAN")
type_check
bool_value (false)
add_call_chain(<<a,A,a,b,c>>)
type_check
generate_java_code
type_check
add_attribute("a", "d", "INTEGER")
generate_java_code
numerical_negation
add_query("A", "A", <<["C", "INTEGER"], ["B", "BOOLEAN"], ["b", "a"]>>, "C")
add_call_chain(<<B,D,C,A,C>>)
addition
add_call_chain(<<e,BOOLEAN,c,D,INTEGER>>)
add_call_chain(<<a,e>>)
add_command("INTEGER", "e", <<["d", "d"], ["d", "INTEGER"], ["B", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "d"]>>)
add_call_chain(<<B,D>>)
disjunction
numerical_negation
less_than
add_attribute("A", "INTEGER", "INTEGER")
numerical_negation
bool_value (false)
multiplication
bool_value (true)
add_call_chain(<<INTEGER,a,D,INTEGER,BOOLEAN>>)
bool_value (true)
bool_value (false)
type_check
generate_java_code
add_call_chain(<<b,D,A,a,B,C,D,c>>)
add_call_chain(<<C,e>>)
add_call_chain(<<A,B,B,B,D>>)
add_attribute("C", "b", "INTEGER")
add_command("INTEGER", "D", <<["b", "INTEGER"], ["a", "c"], ["a", "INTEGER"], ["a", "INTEGER"]>>)
generate_java_code
add_command("d", "b", <<["B", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "A"], ["b", "INTEGER"], ["b", "B"], ["d", "INTEGER"], ["b", "BOOLEAN"]>>)
bool_value (true)
disjunction
logical_negation
type_check
equals
add_attribute("d", "D", "BOOLEAN")
add_attribute("A", "c", "A")
logical_negation
int_value (22)
generate_java_code
add_query("D", "a", <<["c", "BOOLEAN"], ["e", "A"], ["D", "BOOLEAN"], ["D", "a"], ["A", "INTEGER"], ["d", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "INTEGER"], ["d", "BOOLEAN"]>>, "e")
add_call_chain(<<A,BOOLEAN,e,D,e,c,c>>)
bool_value (true)
add_command("A", "b", <<["C", "d"], ["B", "BOOLEAN"]>>)
add_call_chain(<<e,e,d,A,C,BOOLEAN,D>>)
add_query("BOOLEAN", "C", <<["a", "BOOLEAN"], ["A", "d"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["e", "B"], ["b", "BOOLEAN"], ["C", "INTEGER"]>>, "A")
modulo
add_query("A", "a", <<["C", "INTEGER"]>>, "c")
disjunction
bool_value (true)
generate_java_code
add_call_chain(<<BOOLEAN,e,d,b,BOOLEAN,INTEGER,a,d,c>>)
numerical_negation
add_command("A", "d", <<["C", "A"], ["A", "C"], ["BOOLEAN", "INTEGER"], ["b", "INTEGER"], ["BOOLEAN", "INTEGER"], ["INTEGER", "c"], ["A", "B"], ["INTEGER", "INTEGER"], ["B", "a"]>>)
bool_value (false)
disjunction
add_attribute("c", "C", "INTEGER")
type_check
logical_negation
add_command("a", "INTEGER", <<["D", "INTEGER"], ["B", "d"], ["a", "INTEGER"], ["d", "C"], ["C", "c"], ["INTEGER", "INTEGER"], ["B", "BOOLEAN"], ["B", "a"], ["D", "D"]>>)
add_query("A", "a", <<["d", "BOOLEAN"], ["d", "INTEGER"], ["B", "INTEGER"], ["INTEGER", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["b", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>, "A")
greater_than
int_value (38)
generate_java_code
generate_java_code
type_check
add_query("a", "D", <<["INTEGER", "c"], ["D", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "D"]>>, "e")
generate_java_code
add_call_chain(<<c,B,B,A,a,C,D,a,INTEGER>>)
add_command("c", "c", <<["INTEGER", "BOOLEAN"], ["BOOLEAN", "B"]>>)
generate_java_code
bool_value (false)
add_attribute("A", "d", "INTEGER")
add_attribute("d", "a", "INTEGER")
add_call_chain(<<A,C,b,INTEGER,C,b>>)
add_command("d", "D", <<["INTEGER", "INTEGER"], ["INTEGER", "INTEGER"], ["B", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["c", "C"], ["B", "INTEGER"], ["BOOLEAN", "a"], ["INTEGER", "INTEGER"], ["a", "BOOLEAN"]>>)
logical_negation
generate_java_code
add_call_chain(<<e,c>>)
disjunction
conjunction
int_value (43)
bool_value (false)
add_call_chain(<<e,A,e,A>>)
int_value (30)
add_command("C", "d", <<["D", "BOOLEAN"], ["d", "INTEGER"], ["BOOLEAN", "e"]>>)
add_attribute("D", "b", "D")
logical_negation
add_class(c)
add_call_chain(<<c,d,d>>)
generate_java_code
logical_negation
int_value (16)
int_value (28)
add_call_chain(<<INTEGER,B,a,A,A>>)
bool_value (true)
add_attribute("d", "D", "INTEGER")
add_class(e)
add_command("C", "C", <<["c", "b"], ["D", "c"], ["D", "BOOLEAN"], ["C", "c"]>>)
disjunction
add_query("B", "C", <<["e", "e"], ["a", "INTEGER"], ["c", "INTEGER"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "INTEGER"]>>, "A")
add_call_chain(<<INTEGER,a>>)
add_call_chain(<<c,a,e>>)
logical_negation
logical_negation
add_call_chain(<<e,B,b,b>>)
type_check
add_call_chain(<<c,BOOLEAN>>)
add_call_chain(<<A,C,c>>)
type_check
add_attribute("D", "C", "d")
add_call_chain(<<A,c,C,a,D,b,c,BOOLEAN,A>>)
add_query("a", "c", <<["A", "BOOLEAN"], ["e", "BOOLEAN"]>>, "C")
add_class(BOOLEAN)
add_call_chain(<<c,A,a,d,B>>)
conjunction
logical_negation
add_command("e", "e", <<["d", "b"], ["e", "c"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["a", "INTEGER"]>>)
add_call_chain(<<BOOLEAN,e,B,d,INTEGER,b,D,e>>)
add_class(BOOLEAN)
logical_negation
add_call_chain(<<b,d,b,c,D,e,e,INTEGER>>)
add_command("B", "B", <<["b", "A"], ["C", "a"], ["B", "INTEGER"], ["c", "BOOLEAN"], ["a", "BOOLEAN"]>>)
multiplication
type_check
add_call_chain(<<e>>)
add_call_chain(<<C,e,d,d>>)
numerical_negation
add_query("a", "D", <<["D", "BOOLEAN"], ["B", "INTEGER"], ["D", "b"], ["BOOLEAN", "A"], ["B", "BOOLEAN"]>>, "C")
add_query("a", "A", <<["D", "INTEGER"], ["A", "d"], ["a", "b"], ["BOOLEAN", "INTEGER"], ["C", "e"], ["C", "BOOLEAN"], ["c", "A"], ["D", "INTEGER"]>>, "e")
conjunction
add_command("INTEGER", "A", <<["a", "D"], ["a", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["B", "INTEGER"], ["A", "e"]>>)
type_check
add_class(e)
add_attribute("B", "a", "BOOLEAN")
add_query("a", "INTEGER", <<["b", "INTEGER"], ["d", "B"], ["INTEGER", "D"], ["A", "BOOLEAN"], ["d", "e"], ["C", "BOOLEAN"]>>, "e")
type_check
logical_negation
bool_value (false)
numerical_negation
add_query("c", "b", <<["e", "BOOLEAN"], ["INTEGER", "INTEGER"], ["BOOLEAN", "C"], ["c", "INTEGER"], ["b", "c"], ["d", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "INTEGER"]>>, "C")
add_query("d", "A", <<["e", "BOOLEAN"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["a", "BOOLEAN"]>>, "C")
bool_value (false)
bool_value (false)
generate_java_code
add_command("c", "BOOLEAN", <<["A", "D"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["A", "INTEGER"]>>)
add_command("D", "A", <<["a", "B"], ["A", "INTEGER"], ["c", "INTEGER"], ["b", "A"], ["C", "BOOLEAN"], ["C", "D"], ["c", "BOOLEAN"]>>)
add_command("c", "d", <<["b", "INTEGER"]>>)
conjunction
add_call_chain(<<c,INTEGER,e,a,d>>)
add_call_chain(<<d,INTEGER,A,D,e,B,A>>)
disjunction
disjunction
bool_value (true)
addition
add_call_chain(<<A>>)
numerical_negation
add_class(b)
add_call_chain(<<d>>)
numerical_negation
add_call_chain(<<d,D,d>>)
bool_value (true)
add_call_chain(<<d,A,C,e,D,C,d,B>>)
numerical_negation
int_value (1)
numerical_negation
type_check
disjunction
int_value (11)
add_call_chain(<<INTEGER,c,a,INTEGER,D,d,C>>)
equals
add_command("INTEGER", "a", <<["A", "B"], ["d", "BOOLEAN"], ["b", "c"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["c", "BOOLEAN"]>>)
add_call_chain(<<C,a>>)
add_attribute("D", "A", "INTEGER")
add_call_chain(<<b,d,A,C,c>>)
add_call_chain(<<a>>)
add_attribute("A", "b", "INTEGER")
numerical_negation
modulo
type_check
int_value (29)
greater_than
add_attribute("B", "e", "a")
add_command("A", "e", <<["c", "D"]>>)
logical_negation
modulo
bool_value (false)
add_call_chain(<<BOOLEAN,c,D,B,c,A,C,B>>)
add_query("A", "A", <<["a", "BOOLEAN"], ["D", "D"], ["B", "BOOLEAN"], ["c", "d"], ["d", "BOOLEAN"], ["C", "C"], ["d", "C"]>>, "b")
add_call_chain(<<D,D,B,D>>)
generate_java_code
add_attribute("A", "C", "BOOLEAN")
add_call_chain(<<B,c,C,INTEGER,INTEGER,c,BOOLEAN>>)
add_command("C", "D", <<["C", "BOOLEAN"], ["B", "C"], ["A", "c"], ["A", "A"], ["e", "D"], ["d", "BOOLEAN"], ["D", "B"], ["A", "d"]>>)
add_call_chain(<<B,a,b>>)
