bool_value (false)
logical_negation
add_class(D)
add_class(D)
add_attribute("INTEGER", "C", "INTEGER")
bool_value (true)
bool_value (true)
bool_value (false)
modulo
conjunction
add_command("c", "B", <<["a", "INTEGER"], ["B", "d"], ["A", "BOOLEAN"], ["INTEGER", "INTEGER"], ["BOOLEAN", "INTEGER"], ["c", "INTEGER"], ["C", "BOOLEAN"]>>)
greater_than
add_call_chain(<<C,A>>)
numerical_negation
add_class(C)
conjunction
int_value (17)
int_value (27)
logical_negation
add_call_chain(<<A,c,B,INTEGER,b,b,e,b>>)
generate_java_code
type_check
type_check
disjunction
subtraction
numerical_negation
add_attribute("C", "A", "BOOLEAN")
int_value (46)
add_call_chain(<<C,C,d,B,A,C>>)
add_query("b", "D", <<["A", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "e"]>>, "C")
add_attribute("C", "c", "INTEGER")
conjunction
add_attribute("INTEGER", "B", "INTEGER")
add_call_chain(<<e,C>>)
add_call_chain(<<A,d>>)
disjunction
logical_negation
bool_value (true)
bool_value (true)
logical_negation
modulo
add_command("a", "c", <<["BOOLEAN", "BOOLEAN"], ["D", "INTEGER"], ["INTEGER", "e"]>>)
add_class(INTEGER)
add_call_chain(<<e,C,a>>)
add_command("e", "A", <<["B", "INTEGER"], ["A", "BOOLEAN"]>>)
add_attribute("BOOLEAN", "d", "INTEGER")
add_call_chain(<<e,B,C,B,D,C>>)
type_check
add_attribute("a", "B", "INTEGER")
add_attribute("b", "c", "INTEGER")
add_attribute("b", "d", "BOOLEAN")
add_attribute("C", "A", "BOOLEAN")
add_attribute("INTEGER", "e", "D")
add_class(A)
bool_value (true)
type_check
type_check
add_command("INTEGER", "A", <<["C", "INTEGER"], ["B", "e"]>>)
numerical_negation
add_query("A", "B", <<["c", "d"]>>, "D")
bool_value (false)
logical_negation
add_command("d", "INTEGER", <<["b", "BOOLEAN"]>>)
int_value (46)
add_class(A)
modulo
numerical_negation
add_class(B)
add_call_chain(<<A,A,D,B,e,BOOLEAN>>)
type_check
bool_value (false)
conjunction
logical_negation
add_call_chain(<<e,A,BOOLEAN,A,INTEGER,BOOLEAN>>)
int_value (1)
add_call_chain(<<d,C,e,A,D,d,d>>)
add_command("D", "d", <<["e", "INTEGER"], ["C", "a"], ["c", "c"]>>)
add_call_chain(<<B,D,B,c>>)
add_attribute("e", "B", "b")
subtraction
type_check
bool_value (true)
add_class(d)
less_than
add_attribute("a", "b", "BOOLEAN")
add_command("a", "C", <<["d", "BOOLEAN"]>>)
add_command("BOOLEAN", "B", <<["C", "BOOLEAN"], ["A", "INTEGER"], ["B", "INTEGER"], ["INTEGER", "BOOLEAN"], ["e", "B"], ["a", "INTEGER"], ["D", "d"], ["c", "INTEGER"]>>)
conjunction
logical_negation
add_call_chain(<<d,D,INTEGER,e,d>>)
add_call_chain(<<B,D,B,b,e,A,e,B>>)
type_check
add_attribute("BOOLEAN", "A", "c")
type_check
add_query("D", "d", <<["D", "INTEGER"], ["e", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "B"]>>, "b")
add_query("b", "e", <<["d", "a"], ["A", "a"], ["INTEGER", "INTEGER"]>>, "a")
conjunction
less_than
conjunction
bool_value (false)
add_command("A", "C", <<["D", "B"]>>)
add_call_chain(<<a,C,b,BOOLEAN,e>>)
greater_than
less_than
int_value (10)
logical_negation
type_check
add_query("D", "e", <<["C", "INTEGER"], ["b", "BOOLEAN"], ["e", "INTEGER"]>>, "A")
int_value (7)
add_query("a", "D", <<["A", "BOOLEAN"], ["a", "c"], ["B", "BOOLEAN"], ["D", "INTEGER"], ["B", "INTEGER"], ["b", "INTEGER"], ["C", "INTEGER"]>>, "D")
add_class(d)
numerical_negation
add_query("B", "a", <<["a", "BOOLEAN"], ["B", "INTEGER"], ["c", "B"], ["BOOLEAN", "a"], ["b", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "D"], ["a", "INTEGER"]>>, "d")
logical_negation
int_value (48)
add_query("a", "A", <<["D", "INTEGER"], ["c", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "BOOLEAN"]>>, "a")
add_call_chain(<<A,A,d,a,b,A,A,a,e>>)
add_call_chain(<<e,INTEGER,C,e,D,A>>)
generate_java_code
add_query("A", "e", <<["c", "INTEGER"], ["B", "B"], ["B", "INTEGER"], ["a", "BOOLEAN"], ["d", "BOOLEAN"]>>, "C")
add_query("D", "C", <<["a", "BOOLEAN"]>>, "e")
bool_value (false)
int_value (30)
add_call_chain(<<A,B,d>>)
generate_java_code
add_call_chain(<<b,BOOLEAN,d,d,e,BOOLEAN,D>>)
generate_java_code
conjunction
numerical_negation
add_attribute("INTEGER", "B", "BOOLEAN")
add_command("c", "c", <<["A", "C"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["INTEGER", "INTEGER"], ["e", "BOOLEAN"], ["c", "INTEGER"], ["e", "A"], ["BOOLEAN", "INTEGER"]>>)
add_attribute("C", "C", "INTEGER")
greater_than
generate_java_code
logical_negation
numerical_negation
int_value (32)
add_call_chain(<<BOOLEAN,A,b>>)
numerical_negation
add_class(a)
bool_value (true)
add_attribute("C", "BOOLEAN", "e")
int_value (39)
int_value (2)
add_command("c", "a", <<["a", "BOOLEAN"], ["D", "BOOLEAN"]>>)
add_attribute("b", "c", "a")
add_class(c)
add_query("c", "a", <<["C", "b"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "BOOLEAN"]>>, "C")
add_call_chain(<<e,A,A,c,A,c,A>>)
add_class(a)
add_call_chain(<<a,b,D,e,a,A>>)
add_attribute("b", "D", "INTEGER")
add_call_chain(<<a,INTEGER,c,b,B>>)
add_query("B", "D", <<["e", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "INTEGER"]>>, "D")
add_command("INTEGER", "BOOLEAN", <<["d", "e"], ["BOOLEAN", "C"], ["B", "BOOLEAN"], ["INTEGER", "B"], ["c", "INTEGER"], ["INTEGER", "b"], ["a", "c"], ["a", "b"], ["e", "BOOLEAN"]>>)
conjunction
add_call_chain(<<A,C,BOOLEAN,d>>)
conjunction
logical_negation
add_command("a", "B", <<["b", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["A", "INTEGER"], ["B", "BOOLEAN"]>>)
conjunction
logical_negation
generate_java_code
logical_negation
type_check
bool_value (true)
int_value (36)
add_call_chain(<<a>>)
add_command("A", "b", <<["D", "INTEGER"], ["a", "c"], ["e", "e"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "BOOLEAN"]>>)
add_command("D", "INTEGER", <<["BOOLEAN", "BOOLEAN"]>>)
int_value (8)
int_value (48)
int_value (24)
add_command("a", "b", <<["C", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "D"], ["BOOLEAN", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "INTEGER"], ["B", "INTEGER"]>>)
int_value (16)
numerical_negation
generate_java_code
add_call_chain(<<INTEGER,D,B,C,b,D,B,C,c>>)
generate_java_code
add_attribute("c", "B", "D")
logical_negation
add_query("B", "d", <<["a", "INTEGER"], ["a", "BOOLEAN"], ["b", "D"], ["e", "INTEGER"], ["D", "A"]>>, "BOOLEAN")
disjunction
add_call_chain(<<A,D,a,D,e,e,a>>)
add_class(c)
add_call_chain(<<b>>)
add_call_chain(<<d,d,A,c,D,b,e,D,a>>)
add_command("b", "e", <<["a", "C"], ["D", "BOOLEAN"], ["e", "a"], ["b", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["d", "c"]>>)
add_call_chain(<<a,a>>)
add_attribute("c", "C", "BOOLEAN")
bool_value (true)
numerical_negation
disjunction
numerical_negation
numerical_negation
add_call_chain(<<C,BOOLEAN,a,C,c,b,e,b>>)
add_query("C", "C", <<["A", "BOOLEAN"], ["b", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["B", "b"], ["BOOLEAN", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "d"]>>, "BOOLEAN")
numerical_negation
add_class(d)
type_check
add_query("INTEGER", "d", <<["D", "INTEGER"], ["c", "B"], ["A", "BOOLEAN"], ["BOOLEAN", "e"], ["C", "BOOLEAN"], ["A", "C"], ["C", "BOOLEAN"], ["C", "C"]>>, "d")
add_command("B", "b", <<["b", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "INTEGER"]>>)
add_query("c", "b", <<["c", "BOOLEAN"], ["a", "BOOLEAN"], ["INTEGER", "INTEGER"], ["a", "d"]>>, "C")
int_value (17)
add_attribute("A", "c", "BOOLEAN")
add_attribute("d", "e", "BOOLEAN")
logical_negation
bool_value (true)
add_call_chain(<<D,d,C,b,a,e>>)
logical_negation
add_attribute("INTEGER", "C", "e")
logical_negation
int_value (14)
conjunction
add_command("C", "c", <<["BOOLEAN", "d"], ["a", "INTEGER"], ["B", "INTEGER"], ["D", "INTEGER"], ["A", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "BOOLEAN"]>>)
bool_value (false)
numerical_negation
add_attribute("D", "INTEGER", "D")
add_class(e)
numerical_negation
equals
add_attribute("d", "INTEGER", "INTEGER")
add_query("C", "INTEGER", <<["D", "INTEGER"], ["A", "INTEGER"], ["BOOLEAN", "INTEGER"], ["C", "BOOLEAN"], ["A", "B"], ["a", "INTEGER"], ["e", "INTEGER"]>>, "D")
add_attribute("b", "b", "INTEGER")
generate_java_code
add_call_chain(<<A,D,A,e,A,B,C,B,c>>)
bool_value (false)
int_value (25)
multiplication
