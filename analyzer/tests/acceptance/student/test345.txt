add_command("d", "D", <<["A", "INTEGER"], ["e", "INTEGER"], ["B", "BOOLEAN"], ["a", "BOOLEAN"]>>)
greater_than
add_command("D", "BOOLEAN", <<["C", "d"], ["A", "e"], ["B", "INTEGER"], ["c", "BOOLEAN"], ["B", "c"], ["C", "BOOLEAN"], ["A", "BOOLEAN"]>>)
logical_negation
bool_value (true)
add_query("A", "e", <<["b", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["e", "C"], ["B", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "INTEGER"], ["b", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "BOOLEAN"]>>, "BOOLEAN")
add_attribute("D", "INTEGER", "BOOLEAN")
add_call_chain(<<d,B>>)
add_call_chain(<<A,a,e,e>>)
add_query("INTEGER", "B", <<["B", "A"], ["d", "e"], ["c", "BOOLEAN"], ["B", "INTEGER"], ["d", "BOOLEAN"], ["D", "BOOLEAN"], ["a", "B"], ["c", "BOOLEAN"]>>, "b")
logical_negation
generate_java_code
add_command("INTEGER", "c", <<["e", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "b"], ["c", "INTEGER"], ["c", "a"], ["d", "BOOLEAN"], ["c", "C"]>>)
add_query("e", "d", <<["c", "A"], ["A", "a"], ["A", "INTEGER"]>>, "c")
int_value (1)
generate_java_code
numerical_negation
disjunction
bool_value (true)
add_call_chain(<<A,C,a,e>>)
add_class(C)
numerical_negation
bool_value (true)
add_class(d)
conjunction
add_attribute("b", "D", "B")
disjunction
add_attribute("b", "d", "BOOLEAN")
logical_negation
generate_java_code
add_call_chain(<<D,a,b,D,B,D,b,a>>)
logical_negation
bool_value (false)
add_call_chain(<<d>>)
int_value (6)
add_call_chain(<<e,a,d,c,d,a,e>>)
add_query("d", "A", <<["b", "BOOLEAN"], ["BOOLEAN", "e"]>>, "d")
add_command("b", "C", <<["INTEGER", "INTEGER"], ["C", "e"], ["C", "INTEGER"]>>)
add_command("A", "A", <<["b", "INTEGER"], ["D", "C"], ["C", "BOOLEAN"], ["c", "INTEGER"], ["e", "INTEGER"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["d", "INTEGER"], ["a", "INTEGER"]>>)
add_call_chain(<<B,A>>)
multiplication
add_call_chain(<<a,A,A,c,c>>)
quotient
generate_java_code
type_check
int_value (49)
generate_java_code
add_call_chain(<<B,D,c,d,A,e>>)
greater_than
greater_than
bool_value (true)
type_check
add_call_chain(<<d,A,e,B,D,a,D,C>>)
add_class(e)
add_attribute("a", "A", "BOOLEAN")
logical_negation
add_command("a", "a", <<["C", "INTEGER"], ["B", "b"], ["B", "INTEGER"], ["INTEGER", "BOOLEAN"], ["a", "b"], ["D", "INTEGER"]>>)
add_call_chain(<<b>>)
add_attribute("c", "b", "BOOLEAN")
logical_negation
type_check
add_attribute("C", "b", "INTEGER")
logical_negation
conjunction
int_value (25)
add_call_chain(<<D,B,c,A,A,C,B,BOOLEAN,C>>)
add_command("e", "D", <<["c", "BOOLEAN"], ["B", "C"], ["B", "a"], ["c", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "INTEGER"], ["A", "D"]>>)
add_call_chain(<<C,e,e>>)
numerical_negation
add_attribute("e", "INTEGER", "INTEGER")
disjunction
add_call_chain(<<D,c>>)
add_query("e", "B", <<["INTEGER", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "BOOLEAN"]>>, "d")
bool_value (false)
bool_value (false)
int_value (14)
addition
add_call_chain(<<a>>)
logical_negation
modulo
bool_value (false)
add_call_chain(<<C,C>>)
logical_negation
bool_value (false)
type_check
type_check
add_attribute("D", "C", "BOOLEAN")
add_class(d)
generate_java_code
multiplication
subtraction
disjunction
int_value (18)
add_call_chain(<<B,C,a,B,e,C>>)
type_check
numerical_negation
bool_value (false)
equals
add_attribute("c", "B", "BOOLEAN")
bool_value (false)
bool_value (true)
add_command("e", "INTEGER", <<["C", "c"]>>)
addition
greater_than
add_call_chain(<<c,C,e,C,d>>)
add_call_chain(<<BOOLEAN,BOOLEAN,a,c,A>>)
add_query("B", "a", <<["b", "INTEGER"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "BOOLEAN"], ["INTEGER", "A"], ["d", "INTEGER"]>>, "C")
subtraction
bool_value (true)
add_query("d", "a", <<["c", "BOOLEAN"], ["e", "e"], ["d", "INTEGER"], ["D", "D"]>>, "BOOLEAN")
bool_value (true)
generate_java_code
numerical_negation
equals
add_command("D", "c", <<["D", "a"], ["b", "a"], ["A", "a"], ["e", "D"], ["D", "BOOLEAN"]>>)
quotient
add_command("B", "e", <<["a", "BOOLEAN"], ["B", "c"], ["D", "INTEGER"]>>)
logical_negation
numerical_negation
conjunction
add_command("C", "B", <<["a", "INTEGER"], ["a", "BOOLEAN"], ["e", "C"], ["d", "c"], ["D", "a"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "BOOLEAN"]>>)
logical_negation
type_check
bool_value (false)
int_value (9)
bool_value (false)
add_command("d", "D", <<["C", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "b"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["D", "A"], ["C", "B"], ["e", "BOOLEAN"]>>)
add_command("B", "b", <<["d", "INTEGER"], ["d", "INTEGER"], ["d", "INTEGER"], ["c", "INTEGER"], ["a", "INTEGER"]>>)
add_command("a", "C", <<["c", "B"], ["a", "INTEGER"], ["C", "b"], ["C", "INTEGER"], ["a", "INTEGER"], ["e", "INTEGER"], ["C", "INTEGER"], ["INTEGER", "INTEGER"]>>)
add_call_chain(<<a,B,B,c,B,D,d>>)
add_class(A)
subtraction
add_query("C", "a", <<["B", "BOOLEAN"], ["C", "INTEGER"]>>, "d")
add_call_chain(<<C,d,C,D,C>>)
add_command("D", "D", <<["B", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "a"], ["B", "INTEGER"], ["A", "e"], ["A", "BOOLEAN"], ["d", "BOOLEAN"], ["d", "a"], ["C", "a"]>>)
add_call_chain(<<b,D,A,C,C,e>>)
add_command("A", "e", <<["a", "INTEGER"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "b"], ["c", "a"], ["e", "C"]>>)
add_command("C", "d", <<["d", "INTEGER"], ["D", "BOOLEAN"], ["C", "b"], ["b", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "D"], ["c", "INTEGER"], ["b", "c"]>>)
add_query("d", "d", <<["C", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "INTEGER"], ["c", "INTEGER"], ["b", "INTEGER"], ["BOOLEAN", "b"], ["A", "INTEGER"], ["e", "e"], ["d", "INTEGER"]>>, "BOOLEAN")
add_command("BOOLEAN", "b", <<["B", "INTEGER"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["INTEGER", "INTEGER"], ["C", "d"], ["e", "INTEGER"], ["b", "BOOLEAN"]>>)
logical_negation
numerical_negation
add_class(a)
add_attribute("A", "e", "INTEGER")
add_call_chain(<<C,b,c>>)
add_command("D", "A", <<["A", "INTEGER"], ["c", "INTEGER"], ["a", "BOOLEAN"], ["b", "e"], ["a", "b"], ["b", "BOOLEAN"], ["e", "INTEGER"]>>)
add_call_chain(<<INTEGER,D,a,C>>)
add_call_chain(<<C,a>>)
add_attribute("BOOLEAN", "e", "INTEGER")
bool_value (true)
multiplication
add_command("d", "INTEGER", <<["d", "d"], ["d", "INTEGER"]>>)
int_value (40)
add_attribute("b", "c", "INTEGER")
numerical_negation
int_value (30)
add_query("c", "a", <<["c", "BOOLEAN"], ["c", "b"], ["e", "INTEGER"]>>, "BOOLEAN")
add_query("d", "b", <<["a", "INTEGER"], ["A", "C"], ["b", "BOOLEAN"]>>, "INTEGER")
add_attribute("BOOLEAN", "A", "INTEGER")
type_check
generate_java_code
numerical_negation
add_query("D", "B", <<["B", "INTEGER"], ["D", "BOOLEAN"], ["A", "C"], ["a", "B"], ["e", "INTEGER"], ["c", "b"], ["D", "BOOLEAN"], ["d", "INTEGER"]>>, "b")
bool_value (true)
add_call_chain(<<a,A,e,BOOLEAN,A>>)
bool_value (true)
add_call_chain(<<B,c,a,C,A,e>>)
less_than
add_command("d", "b", <<["c", "INTEGER"], ["a", "e"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "e"], ["e", "BOOLEAN"], ["d", "INTEGER"], ["BOOLEAN", "c"], ["A", "INTEGER"]>>)
less_than
logical_negation
add_query("B", "A", <<["A", "INTEGER"], ["d", "BOOLEAN"]>>, "D")
bool_value (true)
add_call_chain(<<d,D,D,B,b,c,A,e>>)
generate_java_code
add_command("b", "b", <<["c", "BOOLEAN"], ["b", "BOOLEAN"], ["d", "INTEGER"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "INTEGER"], ["A", "A"]>>)
logical_negation
type_check
equals
int_value (14)
less_than
add_call_chain(<<B,a,INTEGER>>)
add_query("B", "c", <<["A", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "b"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["d", "BOOLEAN"]>>, "A")
logical_negation
add_attribute("e", "B", "A")
type_check
add_query("B", "C", <<["b", "INTEGER"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["a", "INTEGER"], ["D", "INTEGER"], ["B", "a"]>>, "B")
bool_value (false)
type_check
add_attribute("C", "C", "INTEGER")
add_call_chain(<<a,c>>)
add_call_chain(<<D,c>>)
add_call_chain(<<B,a,C,a,B>>)
add_attribute("c", "A", "INTEGER")
