logical_negation
add_call_chain(<<b>>)
add_command("INTEGER", "d", <<["D", "BOOLEAN"]>>)
add_attribute("INTEGER", "a", "C")
subtraction
disjunction
add_attribute("INTEGER", "C", "BOOLEAN")
add_query("C", "b", <<["b", "D"], ["D", "INTEGER"], ["c", "D"], ["c", "C"], ["D", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>, "a")
bool_value (true)
int_value (16)
disjunction
add_call_chain(<<b,B,d,e,A,BOOLEAN,a,A>>)
add_query("e", "b", <<["C", "e"], ["a", "A"], ["c", "INTEGER"], ["C", "BOOLEAN"], ["D", "INTEGER"]>>, "b")
add_call_chain(<<C,D,D,a,A,A>>)
add_query("a", "e", <<["D", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "INTEGER"], ["a", "BOOLEAN"], ["B", "b"], ["C", "A"]>>, "D")
type_check
add_class(e)
logical_negation
add_call_chain(<<b,a,a,C,C,c,A>>)
type_check
add_call_chain(<<B,INTEGER,e>>)
numerical_negation
greater_than
conjunction
bool_value (true)
bool_value (true)
add_query("INTEGER", "C", <<["C", "BOOLEAN"], ["e", "INTEGER"], ["d", "e"]>>, "C")
add_attribute("d", "a", "BOOLEAN")
type_check
add_attribute("C", "BOOLEAN", "INTEGER")
add_query("a", "A", <<["A", "C"], ["a", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["c", "a"], ["B", "e"], ["C", "BOOLEAN"], ["b", "INTEGER"]>>, "d")
int_value (27)
add_query("e", "c", <<["c", "B"], ["d", "A"], ["D", "INTEGER"], ["D", "INTEGER"], ["a", "INTEGER"], ["D", "INTEGER"], ["D", "INTEGER"], ["c", "BOOLEAN"], ["C", "D"]>>, "b")
add_attribute("D", "d", "BOOLEAN")
add_query("c", "B", <<["B", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "INTEGER"], ["e", "B"], ["d", "INTEGER"], ["d", "INTEGER"], ["b", "e"], ["D", "BOOLEAN"], ["A", "BOOLEAN"]>>, "d")
add_attribute("D", "c", "BOOLEAN")
add_query("b", "B", <<["B", "B"], ["A", "INTEGER"], ["a", "D"], ["D", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "D"], ["A", "INTEGER"], ["b", "BOOLEAN"], ["B", "INTEGER"]>>, "d")
bool_value (false)
conjunction
add_query("A", "C", <<["c", "d"], ["BOOLEAN", "INTEGER"], ["C", "B"], ["A", "A"], ["A", "A"], ["a", "INTEGER"], ["INTEGER", "INTEGER"]>>, "a")
numerical_negation
int_value (3)
add_attribute("D", "INTEGER", "INTEGER")
numerical_negation
add_query("B", "b", <<["d", "A"], ["INTEGER", "INTEGER"], ["C", "BOOLEAN"], ["INTEGER", "INTEGER"], ["b", "B"], ["B", "INTEGER"], ["b", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "INTEGER"]>>, "D")
add_command("A", "b", <<["A", "b"], ["a", "INTEGER"], ["c", "INTEGER"]>>)
int_value (33)
bool_value (false)
add_query("D", "c", <<["a", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["b", "BOOLEAN"]>>, "b")
bool_value (true)
numerical_negation
numerical_negation
add_attribute("c", "b", "INTEGER")
int_value (47)
add_command("A", "A", <<["e", "INTEGER"], ["A", "BOOLEAN"], ["e", "INTEGER"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "e"], ["BOOLEAN", "BOOLEAN"], ["d", "a"], ["d", "INTEGER"]>>)
add_command("INTEGER", "d", <<["A", "b"], ["d", "C"]>>)
add_command("INTEGER", "D", <<["D", "INTEGER"], ["d", "e"], ["a", "C"]>>)
add_command("c", "C", <<["C", "INTEGER"], ["e", "BOOLEAN"], ["INTEGER", "INTEGER"]>>)
add_call_chain(<<C,a,d,B,d,D,B>>)
logical_negation
modulo
generate_java_code
conjunction
numerical_negation
add_call_chain(<<c>>)
int_value (3)
add_attribute("B", "b", "BOOLEAN")
add_query("INTEGER", "e", <<["e", "BOOLEAN"], ["D", "INTEGER"]>>, "b")
add_call_chain(<<a,C,a,C,A>>)
add_command("C", "BOOLEAN", <<["a", "INTEGER"], ["C", "B"], ["INTEGER", "D"], ["A", "INTEGER"], ["d", "INTEGER"], ["d", "c"]>>)
add_command("A", "d", <<["B", "b"], ["c", "INTEGER"]>>)
add_query("c", "b", <<["b", "BOOLEAN"], ["a", "INTEGER"], ["a", "C"], ["C", "BOOLEAN"]>>, "B")
add_call_chain(<<B,B,a,C,a>>)
add_command("D", "a", <<["D", "INTEGER"]>>)
numerical_negation
equals
add_attribute("INTEGER", "d", "e")
add_call_chain(<<b,A,C,c,a>>)
add_call_chain(<<INTEGER,C,A,a,C>>)
disjunction
numerical_negation
add_call_chain(<<D,d,BOOLEAN,INTEGER,D,b>>)
bool_value (false)
generate_java_code
logical_negation
add_query("c", "D", <<["d", "INTEGER"], ["C", "BOOLEAN"], ["a", "INTEGER"], ["b", "INTEGER"], ["INTEGER", "A"], ["e", "A"]>>, "C")
add_call_chain(<<d,b,INTEGER,A,e>>)
add_query("b", "C", <<["B", "D"], ["a", "INTEGER"]>>, "c")
add_class(BOOLEAN)
add_attribute("C", "c", "INTEGER")
bool_value (false)
add_call_chain(<<BOOLEAN,b,c,A,A>>)
logical_negation
add_call_chain(<<d,A,a,INTEGER,A,INTEGER>>)
numerical_negation
add_attribute("b", "A", "INTEGER")
conjunction
equals
add_query("C", "C", <<["d", "INTEGER"], ["B", "INTEGER"], ["b", "BOOLEAN"]>>, "a")
add_query("B", "a", <<["c", "e"], ["D", "INTEGER"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "INTEGER"]>>, "d")
add_attribute("C", "d", "INTEGER")
greater_than
int_value (38)
int_value (6)
add_call_chain(<<B,A,A,b,INTEGER,INTEGER,e,e,d>>)
less_than
greater_than
add_command("c", "D", <<["d", "BOOLEAN"], ["c", "B"]>>)
numerical_negation
logical_negation
add_attribute("b", "d", "INTEGER")
add_call_chain(<<e,B>>)
add_query("BOOLEAN", "D", <<["B", "B"], ["D", "INTEGER"], ["e", "BOOLEAN"], ["e", "B"], ["a", "BOOLEAN"]>>, "C")
generate_java_code
bool_value (true)
numerical_negation
logical_negation
generate_java_code
logical_negation
int_value (17)
greater_than
add_attribute("a", "e", "A")
add_query("e", "BOOLEAN", <<["b", "d"], ["INTEGER", "INTEGER"], ["e", "BOOLEAN"], ["b", "c"], ["a", "INTEGER"], ["BOOLEAN", "INTEGER"], ["D", "INTEGER"], ["c", "A"]>>, "b")
add_call_chain(<<e,A,D,c,e,a>>)
disjunction
add_command("a", "A", <<["b", "INTEGER"], ["e", "d"], ["A", "b"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["A", "INTEGER"], ["C", "INTEGER"], ["C", "INTEGER"], ["a", "B"]>>)
int_value (8)
add_command("INTEGER", "D", <<["a", "BOOLEAN"]>>)
numerical_negation
less_than
add_attribute("A", "a", "A")
bool_value (false)
logical_negation
type_check
bool_value (true)
add_attribute("e", "e", "INTEGER")
add_attribute("D", "e", "B")
add_query("c", "a", <<["A", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "d"]>>, "a")
add_attribute("B", "A", "BOOLEAN")
bool_value (false)
add_query("A", "B", <<["C", "A"], ["a", "C"], ["d", "INTEGER"]>>, "a")
bool_value (true)
add_attribute("a", "B", "BOOLEAN")
add_attribute("A", "e", "BOOLEAN")
add_command("d", "INTEGER", <<["B", "BOOLEAN"], ["c", "D"], ["b", "INTEGER"]>>)
add_call_chain(<<A>>)
add_command("a", "a", <<["A", "BOOLEAN"]>>)
bool_value (false)
bool_value (true)
add_query("c", "A", <<["C", "c"], ["C", "INTEGER"], ["BOOLEAN", "c"], ["b", "BOOLEAN"], ["d", "D"], ["d", "INTEGER"], ["c", "a"], ["D", "BOOLEAN"]>>, "d")
generate_java_code
equals
less_than
type_check
add_query("INTEGER", "D", <<["B", "c"], ["B", "BOOLEAN"], ["B", "INTEGER"]>>, "C")
type_check
bool_value (true)
bool_value (false)
add_attribute("a", "A", "B")
conjunction
int_value (8)
add_attribute("b", "c", "BOOLEAN")
int_value (43)
less_than
add_attribute("a", "A", "INTEGER")
add_call_chain(<<e,A,D,a>>)
add_query("e", "c", <<["B", "a"], ["d", "BOOLEAN"], ["e", "a"], ["D", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "BOOLEAN"]>>, "C")
type_check
add_class(e)
add_call_chain(<<e,e,e,C,D>>)
generate_java_code
int_value (21)
type_check
greater_than
less_than
quotient
add_query("INTEGER", "C", <<["d", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["c", "INTEGER"]>>, "d")
bool_value (true)
add_call_chain(<<A,C,b,c,D,b,C,a,D>>)
conjunction
int_value (1)
int_value (30)
generate_java_code
add_query("a", "B", <<["c", "e"], ["d", "D"], ["C", "INTEGER"], ["b", "c"], ["C", "INTEGER"], ["BOOLEAN", "b"]>>, "D")
add_command("D", "D", <<["c", "INTEGER"], ["B", "INTEGER"], ["b", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["d", "BOOLEAN"], ["d", "d"], ["e", "INTEGER"]>>)
add_command("C", "A", <<["b", "INTEGER"], ["B", "BOOLEAN"], ["C", "B"]>>)
bool_value (true)
generate_java_code
modulo
add_query("c", "a", <<["D", "B"], ["e", "BOOLEAN"], ["e", "C"], ["INTEGER", "BOOLEAN"], ["c", "INTEGER"], ["d", "INTEGER"], ["B", "BOOLEAN"], ["a", "INTEGER"]>>, "b")
modulo
add_query("A", "C", <<["b", "b"], ["C", "d"], ["b", "INTEGER"], ["C", "A"], ["a", "INTEGER"], ["B", "b"], ["INTEGER", "INTEGER"]>>, "a")
multiplication
add_query("A", "c", <<["a", "BOOLEAN"], ["b", "INTEGER"], ["d", "BOOLEAN"], ["B", "INTEGER"], ["D", "INTEGER"], ["A", "c"], ["A", "BOOLEAN"], ["A", "A"]>>, "b")
type_check
add_call_chain(<<C>>)
generate_java_code
add_call_chain(<<a,A,c>>)
generate_java_code
add_class(B)
bool_value (false)
subtraction
add_query("C", "B", <<["B", "C"]>>, "d")
add_class(C)
add_attribute("INTEGER", "INTEGER", "d")
add_attribute("a", "C", "INTEGER")
bool_value (false)
add_query("e", "D", <<["C", "INTEGER"], ["d", "INTEGER"], ["A", "INTEGER"], ["C", "INTEGER"]>>, "a")
bool_value (true)
conjunction
bool_value (false)
bool_value (true)
add_command("c", "A", <<["a", "A"], ["C", "a"], ["e", "BOOLEAN"]>>)
logical_negation
add_query("A", "c", <<["C", "INTEGER"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "INTEGER"], ["c", "INTEGER"], ["a", "BOOLEAN"], ["B", "INTEGER"]>>, "D")
bool_value (true)
numerical_negation
add_attribute("d", "c", "BOOLEAN")
numerical_negation
add_call_chain(<<B,a,c>>)
generate_java_code
logical_negation
add_call_chain(<<D,b,C,d,C,b>>)
add_query("C", "BOOLEAN", <<["INTEGER", "C"], ["B", "INTEGER"], ["c", "A"], ["b", "BOOLEAN"], ["C", "INTEGER"], ["D", "INTEGER"], ["e", "BOOLEAN"], ["D", "INTEGER"]>>, "INTEGER")
conjunction
equals
add_attribute("e", "D", "C")
int_value (49)
add_call_chain(<<A,b>>)
int_value (44)
add_command("e", "e", <<["a", "BOOLEAN"], ["d", "INTEGER"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "d"], ["D", "BOOLEAN"]>>)
int_value (15)
add_command("C", "e", <<["d", "BOOLEAN"], ["A", "INTEGER"], ["B", "D"], ["A", "B"], ["b", "INTEGER"], ["a", "INTEGER"]>>)
int_value (38)
add_query("b", "C", <<["e", "BOOLEAN"], ["A", "B"], ["c", "INTEGER"], ["BOOLEAN", "D"], ["B", "INTEGER"]>>, "A")
generate_java_code
add_query("B", "b", <<["a", "INTEGER"], ["B", "C"]>>, "d")
add_call_chain(<<C,C,C,A,C,B,A,c,d>>)
add_attribute("D", "A", "BOOLEAN")
generate_java_code
conjunction
add_attribute("b", "A", "e")
less_than
add_call_chain(<<A,BOOLEAN,d,INTEGER,D,c,D,C,D>>)
add_query("e", "C", <<["e", "BOOLEAN"], ["c", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["a", "INTEGER"], ["A", "c"], ["D", "INTEGER"]>>, "D")
add_call_chain(<<D,INTEGER,D,B>>)
logical_negation
add_command("B", "D", <<["A", "INTEGER"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "B"], ["a", "BOOLEAN"]>>)
generate_java_code
add_query("c", "c", <<["c", "INTEGER"], ["d", "d"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["C", "D"], ["D", "BOOLEAN"], ["c", "C"], ["a", "INTEGER"], ["C", "INTEGER"]>>, "a")
add_query("e", "A", <<["b", "INTEGER"]>>, "e")
int_value (16)
int_value (11)
