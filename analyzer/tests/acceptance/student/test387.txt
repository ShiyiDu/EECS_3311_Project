type_check
type_check
add_call_chain(<<e,B>>)
add_command("e", "a", <<["BOOLEAN", "INTEGER"], ["D", "INTEGER"], ["c", "BOOLEAN"], ["c", "INTEGER"], ["d", "INTEGER"], ["B", "a"], ["C", "e"], ["A", "BOOLEAN"], ["A", "INTEGER"]>>)
add_command("c", "e", <<["BOOLEAN", "BOOLEAN"]>>)
add_command("D", "B", <<["B", "INTEGER"], ["BOOLEAN", "D"], ["a", "b"], ["D", "INTEGER"], ["D", "INTEGER"], ["b", "b"], ["BOOLEAN", "A"]>>)
add_attribute("b", "e", "BOOLEAN")
modulo
int_value (1)
add_query("c", "b", <<["BOOLEAN", "BOOLEAN"], ["d", "INTEGER"], ["a", "INTEGER"], ["a", "BOOLEAN"], ["c", "INTEGER"], ["b", "D"], ["B", "C"], ["e", "INTEGER"]>>, "e")
add_query("B", "A", <<["b", "B"], ["D", "BOOLEAN"], ["C", "d"], ["B", "c"]>>, "A")
generate_java_code
add_attribute("BOOLEAN", "C", "INTEGER")
add_query("d", "e", <<["B", "BOOLEAN"], ["INTEGER", "A"], ["D", "INTEGER"], ["INTEGER", "BOOLEAN"], ["C", "C"]>>, "b")
equals
add_command("d", "a", <<["INTEGER", "BOOLEAN"], ["e", "BOOLEAN"]>>)
add_attribute("B", "e", "INTEGER")
logical_negation
generate_java_code
numerical_negation
bool_value (true)
equals
add_class(A)
add_attribute("e", "b", "BOOLEAN")
disjunction
add_attribute("d", "c", "a")
bool_value (false)
int_value (27)
add_call_chain(<<INTEGER,A,a,b,e,INTEGER,c,B,C>>)
generate_java_code
bool_value (false)
add_attribute("BOOLEAN", "c", "C")
bool_value (false)
disjunction
add_attribute("a", "e", "B")
logical_negation
add_query("C", "a", <<["c", "A"], ["c", "A"], ["c", "INTEGER"], ["b", "INTEGER"], ["b", "b"], ["B", "INTEGER"], ["b", "INTEGER"]>>, "C")
add_command("a", "D", <<["BOOLEAN", "BOOLEAN"], ["D", "B"], ["C", "INTEGER"], ["c", "A"]>>)
add_call_chain(<<INTEGER,D>>)
conjunction
generate_java_code
add_call_chain(<<a,C,D,C,a,a,c>>)
int_value (7)
add_query("e", "BOOLEAN", <<["C", "BOOLEAN"], ["a", "D"], ["b", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "c"]>>, "B")
add_attribute("C", "c", "d")
numerical_negation
add_class(c)
numerical_negation
numerical_negation
int_value (20)
add_call_chain(<<C,BOOLEAN,D>>)
logical_negation
type_check
add_command("A", "c", <<["INTEGER", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "B"], ["a", "c"], ["b", "e"], ["d", "e"]>>)
add_call_chain(<<D,d,b,D,B,a>>)
generate_java_code
type_check
add_command("B", "B", <<["B", "INTEGER"], ["e", "e"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "c"]>>)
add_call_chain(<<a,C,D,b>>)
numerical_negation
generate_java_code
add_query("A", "B", <<["BOOLEAN", "INTEGER"], ["a", "BOOLEAN"]>>, "b")
bool_value (true)
int_value (39)
logical_negation
add_attribute("D", "INTEGER", "D")
numerical_negation
quotient
logical_negation
add_call_chain(<<D>>)
add_attribute("D", "a", "INTEGER")
add_call_chain(<<e,B,a,b,A,e,c,BOOLEAN,a>>)
add_call_chain(<<d,B,a,D,D,e,e>>)
add_query("A", "D", <<["d", "INTEGER"], ["C", "BOOLEAN"], ["C", "BOOLEAN"]>>, "e")
bool_value (false)
add_query("D", "c", <<["INTEGER", "BOOLEAN"], ["INTEGER", "INTEGER"], ["d", "a"], ["B", "INTEGER"], ["a", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "BOOLEAN"], ["d", "BOOLEAN"]>>, "INTEGER")
generate_java_code
add_call_chain(<<d,D,C,C,C,a,d>>)
add_command("BOOLEAN", "d", <<["D", "INTEGER"], ["C", "B"], ["c", "INTEGER"], ["D", "INTEGER"], ["A", "INTEGER"], ["A", "b"], ["e", "INTEGER"], ["D", "INTEGER"], ["BOOLEAN", "INTEGER"]>>)
add_query("b", "INTEGER", <<["c", "BOOLEAN"], ["D", "d"], ["e", "INTEGER"], ["b", "c"], ["a", "INTEGER"]>>, "d")
add_command("b", "INTEGER", <<["INTEGER", "INTEGER"], ["D", "INTEGER"], ["b", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "d"], ["a", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
bool_value (false)
add_query("B", "D", <<["D", "INTEGER"], ["a", "BOOLEAN"], ["b", "INTEGER"], ["b", "INTEGER"], ["A", "INTEGER"], ["d", "BOOLEAN"]>>, "b")
add_query("C", "B", <<["A", "BOOLEAN"], ["B", "a"], ["d", "BOOLEAN"], ["A", "INTEGER"], ["C", "D"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["B", "INTEGER"], ["d", "INTEGER"]>>, "A")
add_command("A", "e", <<["INTEGER", "C"], ["A", "INTEGER"], ["a", "D"]>>)
add_call_chain(<<A,a,b,A,c,e>>)
add_call_chain(<<C,b>>)
add_query("D", "INTEGER", <<["INTEGER", "INTEGER"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "INTEGER"], ["d", "BOOLEAN"], ["B", "e"], ["D", "BOOLEAN"]>>, "A")
add_command("A", "A", <<["C", "INTEGER"]>>)
add_query("BOOLEAN", "D", <<["D", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "A"], ["C", "INTEGER"], ["B", "b"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["a", "a"]>>, "BOOLEAN")
bool_value (true)
logical_negation
int_value (27)
type_check
add_call_chain(<<d,d,D,C>>)
conjunction
numerical_negation
add_query("c", "INTEGER", <<["A", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["A", "c"]>>, "D")
add_command("C", "d", <<["b", "e"], ["c", "BOOLEAN"], ["BOOLEAN", "c"], ["c", "b"], ["INTEGER", "BOOLEAN"], ["d", "INTEGER"], ["BOOLEAN", "INTEGER"], ["A", "BOOLEAN"], ["d", "INTEGER"]>>)
int_value (29)
add_query("A", "INTEGER", <<["A", "INTEGER"]>>, "d")
less_than
add_call_chain(<<C,e,C,a,d,INTEGER,c,d>>)
logical_negation
numerical_negation
add_attribute("e", "a", "b")
add_attribute("b", "c", "INTEGER")
add_attribute("D", "d", "BOOLEAN")
bool_value (false)
add_call_chain(<<c,BOOLEAN,c,b>>)
add_class(A)
type_check
bool_value (false)
add_query("B", "INTEGER", <<["A", "B"], ["A", "C"], ["INTEGER", "INTEGER"]>>, "C")
add_call_chain(<<B,B,e>>)
int_value (12)
add_class(D)
add_class(e)
generate_java_code
int_value (10)
logical_negation
add_command("D", "a", <<["A", "INTEGER"], ["A", "INTEGER"], ["d", "d"], ["BOOLEAN", "d"], ["e", "BOOLEAN"]>>)
disjunction
numerical_negation
logical_negation
numerical_negation
add_call_chain(<<d,b,d,a,INTEGER,b>>)
int_value (31)
int_value (48)
generate_java_code
numerical_negation
conjunction
add_call_chain(<<C,D,B,b,d>>)
generate_java_code
type_check
int_value (46)
add_attribute("d", "B", "INTEGER")
bool_value (true)
add_attribute("c", "b", "INTEGER")
type_check
conjunction
type_check
add_command("c", "D", <<["A", "BOOLEAN"], ["c", "A"], ["d", "INTEGER"], ["e", "INTEGER"]>>)
add_attribute("A", "INTEGER", "INTEGER")
add_attribute("BOOLEAN", "c", "INTEGER")
add_call_chain(<<BOOLEAN,b,d,C,e,d,d,d>>)
generate_java_code
add_attribute("C", "a", "e")
less_than
bool_value (false)
logical_negation
add_call_chain(<<INTEGER,c,b,a>>)
add_command("C", "c", <<["C", "INTEGER"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "INTEGER"], ["e", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "BOOLEAN"], ["d", "c"], ["A", "BOOLEAN"]>>)
less_than
add_command("e", "C", <<["D", "INTEGER"], ["C", "BOOLEAN"]>>)
add_command("d", "b", <<["a", "BOOLEAN"], ["b", "b"], ["D", "INTEGER"], ["B", "C"], ["b", "BOOLEAN"], ["D", "INTEGER"]>>)
add_command("C", "B", <<["a", "INTEGER"], ["a", "BOOLEAN"], ["A", "B"], ["D", "BOOLEAN"], ["e", "INTEGER"], ["C", "INTEGER"]>>)
logical_negation
add_call_chain(<<C,d,A,INTEGER,a,b>>)
equals
numerical_negation
numerical_negation
add_call_chain(<<b,c,a,a>>)
add_class(D)
numerical_negation
add_call_chain(<<C>>)
add_class(D)
bool_value (true)
add_command("c", "e", <<["e", "BOOLEAN"], ["D", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["C", "e"], ["A", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["a", "INTEGER"]>>)
bool_value (true)
add_call_chain(<<INTEGER,c,b,C,b>>)
add_call_chain(<<e,b,B,INTEGER,D,D>>)
add_command("INTEGER", "e", <<["BOOLEAN", "INTEGER"], ["b", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["e", "INTEGER"], ["B", "INTEGER"], ["C", "INTEGER"]>>)
logical_negation
int_value (35)
int_value (30)
int_value (11)
add_attribute("B", "a", "b")
quotient
add_call_chain(<<d,A,C>>)
equals
conjunction
numerical_negation
add_command("b", "D", <<["C", "BOOLEAN"], ["d", "BOOLEAN"], ["e", "INTEGER"], ["d", "B"]>>)
add_query("BOOLEAN", "D", <<["c", "BOOLEAN"], ["C", "A"], ["c", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["A", "B"]>>, "b")
add_query("b", "b", <<["A", "BOOLEAN"], ["C", "B"], ["e", "a"], ["B", "D"]>>, "D")
logical_negation
add_query("B", "c", <<["A", "BOOLEAN"], ["C", "INTEGER"], ["INTEGER", "INTEGER"]>>, "a")
int_value (15)
generate_java_code
add_query("c", "b", <<["c", "INTEGER"], ["d", "INTEGER"], ["a", "A"], ["D", "BOOLEAN"], ["d", "d"], ["D", "INTEGER"], ["A", "BOOLEAN"], ["a", "INTEGER"]>>, "b")
add_attribute("b", "C", "D")
bool_value (true)
add_call_chain(<<A,b>>)
greater_than
logical_negation
logical_negation
add_call_chain(<<B,d,A,D,A>>)
add_call_chain(<<d,d,C,e,a>>)
type_check
add_command("c", "C", <<["c", "INTEGER"], ["BOOLEAN", "INTEGER"], ["e", "d"]>>)
add_command("A", "B", <<["C", "BOOLEAN"]>>)
add_query("C", "C", <<["B", "b"], ["C", "BOOLEAN"], ["a", "INTEGER"], ["B", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["e", "b"], ["BOOLEAN", "BOOLEAN"], ["c", "INTEGER"], ["a", "INTEGER"]>>, "A")
add_query("B", "e", <<["INTEGER", "BOOLEAN"]>>, "A")
logical_negation
add_call_chain(<<A,b,e,INTEGER,C,b,D>>)
generate_java_code
add_command("e", "c", <<["C", "BOOLEAN"], ["B", "INTEGER"], ["BOOLEAN", "INTEGER"], ["a", "D"], ["C", "BOOLEAN"], ["c", "C"], ["C", "BOOLEAN"], ["B", "INTEGER"]>>)
add_command("C", "D", <<["c", "d"], ["e", "BOOLEAN"], ["e", "C"], ["B", "B"]>>)
type_check
add_call_chain(<<c,B,C,D,C>>)
add_attribute("a", "e", "INTEGER")
int_value (42)
int_value (25)
generate_java_code
add_call_chain(<<d,C>>)
add_call_chain(<<B,a,e,a>>)
add_command("e", "e", <<["a", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["A", "D"], ["A", "BOOLEAN"]>>)
int_value (48)
bool_value (false)
add_query("b", "D", <<["INTEGER", "INTEGER"], ["C", "INTEGER"]>>, "BOOLEAN")
conjunction
generate_java_code
add_query("c", "a", <<["e", "INTEGER"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "INTEGER"], ["b", "INTEGER"], ["c", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["b", "BOOLEAN"]>>, "INTEGER")
type_check
logical_negation
add_attribute("C", "d", "BOOLEAN")
type_check
generate_java_code
add_attribute("C", "B", "BOOLEAN")
add_class(B)
add_attribute("D", "BOOLEAN", "INTEGER")
equals
disjunction
type_check
bool_value (true)
add_call_chain(<<c,b,B>>)
add_call_chain(<<e,A,e>>)
equals
quotient
bool_value (false)
add_call_chain(<<A,a,D,A,D>>)
