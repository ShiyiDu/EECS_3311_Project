less_than
greater_than
add_class(C)
add_query("c", "B", <<["b", "INTEGER"], ["INTEGER", "INTEGER"], ["A", "BOOLEAN"], ["BOOLEAN", "a"]>>, "B")
bool_value (false)
bool_value (false)
add_command("a", "C", <<["e", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "INTEGER"]>>)
add_command("e", "b", <<["INTEGER", "BOOLEAN"], ["e", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["e", "BOOLEAN"], ["c", "INTEGER"], ["c", "BOOLEAN"]>>)
type_check
logical_negation
bool_value (false)
add_call_chain(<<C,B,D>>)
bool_value (true)
add_class(C)
greater_than
logical_negation
add_call_chain(<<D,c>>)
generate_java_code
logical_negation
add_call_chain(<<c,a,c,a,d,a,D>>)
greater_than
numerical_negation
type_check
bool_value (false)
add_command("A", "e", <<["e", "D"], ["c", "b"], ["a", "BOOLEAN"], ["c", "BOOLEAN"]>>)
int_value (30)
add_call_chain(<<C,D,A,D>>)
generate_java_code
type_check
numerical_negation
add_call_chain(<<BOOLEAN,A,INTEGER,B,B,A,B,e>>)
add_command("a", "A", <<["d", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["B", "INTEGER"]>>)
conjunction
add_call_chain(<<d,d,d,b,A>>)
add_attribute("e", "a", "BOOLEAN")
logical_negation
add_call_chain(<<B,B,d,INTEGER,a,C,D,C,c>>)
add_command("C", "A", <<["D", "INTEGER"], ["C", "a"], ["INTEGER", "D"], ["a", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
modulo
add_call_chain(<<INTEGER>>)
add_call_chain(<<A,A,c,e,BOOLEAN,D>>)
add_attribute("D", "d", "C")
logical_negation
add_command("C", "d", <<["A", "BOOLEAN"]>>)
int_value (8)
numerical_negation
add_call_chain(<<D>>)
multiplication
logical_negation
numerical_negation
add_command("C", "A", <<["b", "INTEGER"], ["c", "D"], ["e", "BOOLEAN"]>>)
bool_value (false)
add_call_chain(<<c,D,B,c>>)
add_call_chain(<<c,A,c,INTEGER,C,a,C,a>>)
add_query("C", "INTEGER", <<["c", "BOOLEAN"], ["b", "e"], ["b", "BOOLEAN"], ["C", "c"]>>, "d")
int_value (46)
add_class(a)
add_attribute("A", "e", "A")
add_attribute("b", "b", "b")
add_command("B", "e", <<["D", "D"], ["c", "BOOLEAN"], ["C", "BOOLEAN"]>>)
type_check
add_command("d", "a", <<["B", "C"], ["A", "INTEGER"], ["D", "A"], ["d", "INTEGER"], ["C", "INTEGER"]>>)
add_query("B", "C", <<["A", "BOOLEAN"], ["d", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["B", "INTEGER"], ["D", "INTEGER"], ["C", "INTEGER"], ["INTEGER", "B"]>>, "A")
add_call_chain(<<D,d,C,d,e,C,BOOLEAN,A,b>>)
add_call_chain(<<B,A,BOOLEAN,D,b,B>>)
type_check
add_attribute("c", "C", "A")
add_call_chain(<<BOOLEAN,C,D,c>>)
add_query("B", "e", <<["B", "INTEGER"], ["c", "INTEGER"], ["e", "BOOLEAN"], ["A", "D"], ["d", "C"], ["A", "a"]>>, "c")
add_call_chain(<<c,INTEGER,D,b,C,e,D>>)
add_class(B)
greater_than
add_command("b", "D", <<["b", "D"], ["A", "B"], ["INTEGER", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "BOOLEAN"], ["e", "BOOLEAN"]>>)
add_call_chain(<<B,D,D,b>>)
add_call_chain(<<b,e>>)
add_call_chain(<<B,d,BOOLEAN,a>>)
numerical_negation
add_query("B", "D", <<["b", "INTEGER"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["e", "INTEGER"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["d", "INTEGER"]>>, "B")
generate_java_code
numerical_negation
add_call_chain(<<c,D,d,BOOLEAN,b>>)
generate_java_code
multiplication
add_command("A", "BOOLEAN", <<["e", "BOOLEAN"], ["D", "a"], ["B", "INTEGER"]>>)
logical_negation
add_attribute("c", "A", "INTEGER")
generate_java_code
bool_value (false)
equals
conjunction
add_query("c", "D", <<["a", "a"], ["b", "INTEGER"], ["D", "e"], ["INTEGER", "D"], ["e", "BOOLEAN"], ["a", "BOOLEAN"]>>, "a")
disjunction
add_call_chain(<<b,e,BOOLEAN,c,C,c,C>>)
generate_java_code
bool_value (false)
generate_java_code
add_call_chain(<<b,A>>)
logical_negation
generate_java_code
numerical_negation
add_call_chain(<<d,d,a,D,INTEGER,b,D,c>>)
int_value (23)
add_query("b", "INTEGER", <<["B", "D"], ["D", "INTEGER"], ["BOOLEAN", "a"], ["INTEGER", "INTEGER"], ["a", "BOOLEAN"]>>, "A")
bool_value (true)
greater_than
add_call_chain(<<D,d,A,b,e,b>>)
addition
add_call_chain(<<a,BOOLEAN,D>>)
less_than
numerical_negation
equals
type_check
disjunction
bool_value (true)
conjunction
int_value (41)
add_call_chain(<<D>>)
bool_value (true)
add_attribute("B", "BOOLEAN", "BOOLEAN")
add_command("d", "D", <<["B", "b"]>>)
add_call_chain(<<C,A,B,C,c,B>>)
type_check
add_class(C)
add_command("A", "B", <<["D", "d"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["e", "c"], ["C", "e"], ["A", "BOOLEAN"]>>)
add_call_chain(<<D,d,e>>)
int_value (37)
add_class(INTEGER)
add_call_chain(<<c,INTEGER>>)
greater_than
logical_negation
subtraction
add_query("BOOLEAN", "B", <<["C", "b"]>>, "a")
add_command("c", "c", <<["e", "e"]>>)
generate_java_code
add_query("B", "a", <<["B", "BOOLEAN"], ["INTEGER", "INTEGER"], ["b", "INTEGER"]>>, "c")
generate_java_code
logical_negation
bool_value (false)
add_call_chain(<<B,BOOLEAN,B,B,B,b,B,a>>)
add_attribute("d", "C", "BOOLEAN")
multiplication
add_call_chain(<<C,b,C,e,B>>)
add_query("c", "c", <<["B", "INTEGER"], ["A", "c"]>>, "INTEGER")
add_attribute("B", "A", "C")
bool_value (true)
add_query("a", "c", <<["D", "BOOLEAN"]>>, "d")
add_call_chain(<<b,d,c,B,D,A>>)
numerical_negation
equals
generate_java_code
greater_than
add_attribute("b", "a", "BOOLEAN")
logical_negation
generate_java_code
generate_java_code
logical_negation
generate_java_code
add_call_chain(<<d,e,d>>)
add_class(D)
int_value (30)
add_attribute("e", "B", "D")
add_call_chain(<<A,d,A,e,B>>)
type_check
add_attribute("C", "e", "INTEGER")
type_check
bool_value (false)
add_call_chain(<<B,D,a,C,C>>)
add_class(d)
add_query("b", "c", <<["C", "INTEGER"], ["d", "INTEGER"], ["A", "INTEGER"], ["B", "A"], ["B", "INTEGER"]>>, "e")
add_call_chain(<<B,B,d,B,a,a,INTEGER,C>>)
add_call_chain(<<B,e>>)
int_value (34)
addition
int_value (23)
int_value (37)
add_attribute("e", "C", "BOOLEAN")
add_attribute("A", "a", "BOOLEAN")
int_value (36)
modulo
int_value (6)
add_query("B", "A", <<["c", "b"], ["INTEGER", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "INTEGER"]>>, "A")
generate_java_code
disjunction
disjunction
add_call_chain(<<e>>)
subtraction
add_command("A", "c", <<["B", "C"], ["D", "B"], ["a", "INTEGER"], ["e", "d"], ["C", "c"], ["b", "INTEGER"], ["d", "INTEGER"], ["d", "INTEGER"], ["c", "INTEGER"]>>)
add_call_chain(<<B,e,d,e,d>>)
add_command("C", "C", <<["e", "BOOLEAN"], ["b", "INTEGER"], ["C", "INTEGER"], ["e", "INTEGER"], ["INTEGER", "BOOLEAN"], ["a", "INTEGER"]>>)
greater_than
add_class(INTEGER)
add_class(B)
int_value (40)
generate_java_code
logical_negation
generate_java_code
add_call_chain(<<d,BOOLEAN,c,INTEGER,a,e,a,c,BOOLEAN>>)
subtraction
add_command("D", "B", <<["e", "BOOLEAN"], ["e", "d"], ["D", "INTEGER"], ["BOOLEAN", "A"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["a", "INTEGER"], ["BOOLEAN", "b"], ["INTEGER", "BOOLEAN"]>>)
add_call_chain(<<D,BOOLEAN,B,D,c,D,INTEGER,e>>)
add_command("B", "d", <<["D", "BOOLEAN"], ["e", "INTEGER"], ["D", "INTEGER"], ["b", "A"], ["e", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["a", "e"]>>)
add_query("B", "d", <<["e", "INTEGER"], ["D", "BOOLEAN"]>>, "BOOLEAN")
add_class(B)
bool_value (false)
equals
