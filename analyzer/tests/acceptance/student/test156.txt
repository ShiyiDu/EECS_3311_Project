int_value (22)
add_attribute("INTEGER", "BOOLEAN", "INTEGER")
type_check
numerical_negation
type_check
type_check
multiplication
add_command("b", "e", <<["b", "INTEGER"], ["B", "b"], ["a", "INTEGER"], ["A", "BOOLEAN"], ["a", "b"]>>)
add_call_chain(<<A,c,C,d,A,B>>)
conjunction
add_call_chain(<<B,INTEGER,a,INTEGER,BOOLEAN>>)
bool_value (false)
type_check
disjunction
numerical_negation
add_call_chain(<<d,A,d,C,b,a>>)
quotient
generate_java_code
add_query("D", "c", <<["D", "INTEGER"], ["d", "BOOLEAN"], ["a", "c"], ["d", "B"], ["D", "BOOLEAN"], ["D", "b"], ["B", "INTEGER"], ["INTEGER", "BOOLEAN"], ["D", "e"]>>, "b")
add_attribute("A", "a", "INTEGER")
int_value (20)
logical_negation
add_call_chain(<<D,BOOLEAN,b,BOOLEAN,D,A>>)
add_query("A", "d", <<["D", "INTEGER"], ["D", "BOOLEAN"], ["b", "B"], ["b", "INTEGER"], ["c", "INTEGER"], ["a", "INTEGER"], ["d", "B"], ["d", "INTEGER"], ["D", "BOOLEAN"]>>, "BOOLEAN")
logical_negation
bool_value (true)
numerical_negation
greater_than
add_query("C", "D", <<["c", "d"], ["BOOLEAN", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "e"], ["C", "BOOLEAN"], ["C", "A"], ["A", "INTEGER"]>>, "A")
add_attribute("B", "D", "C")
generate_java_code
bool_value (false)
add_attribute("A", "c", "BOOLEAN")
add_attribute("A", "B", "d")
numerical_negation
add_query("c", "D", <<["D", "a"], ["A", "b"]>>, "D")
add_query("b", "d", <<["e", "BOOLEAN"], ["D", "INTEGER"], ["B", "d"]>>, "e")
add_class(D)
add_attribute("c", "c", "BOOLEAN")
add_call_chain(<<e>>)
add_call_chain(<<B,A,A,D>>)
generate_java_code
greater_than
disjunction
add_attribute("a", "C", "BOOLEAN")
add_call_chain(<<a,d,INTEGER,BOOLEAN,d>>)
equals
add_class(d)
bool_value (false)
add_command("INTEGER", "b", <<["d", "INTEGER"], ["D", "INTEGER"], ["C", "b"], ["B", "b"]>>)
add_call_chain(<<e,b,D,a,A,C>>)
add_attribute("D", "INTEGER", "INTEGER")
generate_java_code
bool_value (true)
add_query("A", "a", <<["BOOLEAN", "d"]>>, "e")
modulo
int_value (41)
add_class(A)
add_query("D", "BOOLEAN", <<["C", "BOOLEAN"], ["B", "INTEGER"], ["D", "BOOLEAN"]>>, "b")
less_than
add_class(B)
add_call_chain(<<D,INTEGER,d,D,B,c,A>>)
logical_negation
subtraction
logical_negation
add_command("b", "c", <<["b", "INTEGER"]>>)
generate_java_code
add_command("B", "B", <<["B", "BOOLEAN"], ["A", "INTEGER"], ["b", "INTEGER"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["B", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "INTEGER"]>>)
bool_value (true)
type_check
bool_value (true)
logical_negation
add_call_chain(<<e,D,b,a,D>>)
int_value (17)
add_call_chain(<<B>>)
numerical_negation
type_check
add_attribute("d", "A", "C")
add_attribute("A", "A", "INTEGER")
numerical_negation
add_call_chain(<<INTEGER,BOOLEAN,D,D,B,BOOLEAN>>)
numerical_negation
type_check
add_query("d", "A", <<["c", "BOOLEAN"], ["A", "B"]>>, "c")
disjunction
bool_value (false)
int_value (42)
add_query("c", "a", <<["B", "BOOLEAN"], ["B", "INTEGER"], ["e", "INTEGER"], ["INTEGER", "BOOLEAN"]>>, "b")
add_class(B)
add_class(B)
generate_java_code
add_command("b", "B", <<["D", "d"], ["d", "BOOLEAN"], ["d", "INTEGER"], ["BOOLEAN", "INTEGER"], ["D", "C"], ["e", "INTEGER"], ["C", "e"]>>)
add_command("c", "C", <<["d", "BOOLEAN"], ["b", "INTEGER"], ["A", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["B", "A"], ["c", "BOOLEAN"], ["D", "INTEGER"]>>)
add_class(b)
bool_value (true)
add_query("b", "B", <<["A", "INTEGER"], ["A", "e"], ["c", "INTEGER"], ["a", "a"], ["d", "INTEGER"], ["C", "INTEGER"], ["BOOLEAN", "d"], ["B", "BOOLEAN"], ["C", "a"]>>, "C")
less_than
add_class(A)
add_query("A", "a", <<["A", "INTEGER"], ["e", "BOOLEAN"], ["a", "INTEGER"], ["b", "BOOLEAN"], ["e", "e"], ["D", "INTEGER"], ["C", "D"], ["b", "BOOLEAN"]>>, "B")
add_call_chain(<<C,c,D>>)
type_check
logical_negation
conjunction
int_value (31)
add_attribute("BOOLEAN", "C", "d")
add_query("c", "d", <<["B", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["e", "D"], ["a", "D"], ["b", "INTEGER"], ["BOOLEAN", "b"], ["B", "INTEGER"]>>, "D")
bool_value (false)
add_command("INTEGER", "INTEGER", <<["B", "BOOLEAN"], ["c", "A"], ["b", "INTEGER"], ["A", "BOOLEAN"]>>)
add_call_chain(<<b,BOOLEAN,a,INTEGER>>)
generate_java_code
type_check
equals
conjunction
subtraction
logical_negation
numerical_negation
add_class(B)
add_call_chain(<<b,C,A,b,c,C,b,e,b>>)
bool_value (true)
generate_java_code
add_class(e)
int_value (4)
bool_value (true)
add_call_chain(<<d,b,INTEGER,BOOLEAN>>)
bool_value (false)
add_command("INTEGER", "A", <<["BOOLEAN", "INTEGER"], ["INTEGER", "B"], ["B", "C"], ["e", "BOOLEAN"], ["INTEGER", "INTEGER"], ["D", "INTEGER"], ["B", "b"]>>)
add_call_chain(<<d,D,b,b,A,A,C,D,c>>)
int_value (43)
add_class(B)
int_value (17)
int_value (48)
add_class(C)
add_attribute("d", "A", "BOOLEAN")
quotient
add_command("C", "d", <<["C", "INTEGER"], ["a", "BOOLEAN"], ["C", "d"], ["C", "BOOLEAN"], ["e", "INTEGER"], ["a", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "INTEGER"]>>)
add_command("D", "e", <<["a", "a"], ["b", "D"], ["D", "C"], ["BOOLEAN", "INTEGER"], ["B", "INTEGER"]>>)
add_class(C)
bool_value (true)
add_query("d", "c", <<["D", "BOOLEAN"], ["a", "INTEGER"]>>, "d")
bool_value (true)
add_query("C", "d", <<["c", "BOOLEAN"], ["c", "BOOLEAN"], ["b", "INTEGER"], ["c", "BOOLEAN"]>>, "D")
int_value (12)
add_query("A", "c", <<["C", "BOOLEAN"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["a", "BOOLEAN"], ["b", "D"], ["B", "b"], ["C", "D"], ["e", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>, "a")
numerical_negation
add_query("INTEGER", "INTEGER", <<["b", "INTEGER"], ["A", "C"], ["c", "BOOLEAN"], ["B", "C"], ["e", "BOOLEAN"], ["B", "e"], ["D", "INTEGER"]>>, "d")
add_query("B", "B", <<["e", "B"], ["b", "INTEGER"], ["b", "C"], ["D", "b"], ["D", "b"], ["d", "BOOLEAN"], ["D", "b"]>>, "BOOLEAN")
logical_negation
generate_java_code
addition
logical_negation
add_call_chain(<<e,D,C>>)
add_command("B", "e", <<["A", "BOOLEAN"], ["d", "C"], ["e", "A"], ["B", "INTEGER"], ["D", "INTEGER"], ["B", "INTEGER"], ["B", "C"], ["c", "BOOLEAN"]>>)
multiplication
bool_value (false)
modulo
bool_value (true)
conjunction
add_class(INTEGER)
int_value (33)
add_command("e", "c", <<["D", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "INTEGER"]>>)
add_query("d", "A", <<["b", "INTEGER"], ["C", "INTEGER"], ["e", "BOOLEAN"], ["c", "a"], ["C", "INTEGER"], ["b", "INTEGER"], ["a", "INTEGER"]>>, "a")
add_call_chain(<<c,BOOLEAN,INTEGER>>)
logical_negation
greater_than
add_call_chain(<<B,D,A,B,e,a,C,A>>)
add_attribute("D", "C", "BOOLEAN")
add_call_chain(<<C,D>>)
add_class(a)
add_class(d)
numerical_negation
subtraction
add_class(B)
conjunction
add_command("e", "C", <<["A", "INTEGER"], ["d", "BOOLEAN"], ["A", "b"], ["d", "INTEGER"], ["A", "BOOLEAN"], ["a", "BOOLEAN"]>>)
add_class(d)
add_query("C", "B", <<["INTEGER", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "INTEGER"], ["a", "INTEGER"], ["INTEGER", "INTEGER"]>>, "D")
add_query("B", "C", <<["d", "INTEGER"], ["e", "INTEGER"]>>, "C")
add_query("C", "INTEGER", <<["BOOLEAN", "A"]>>, "B")
logical_negation
add_command("b", "a", <<["A", "INTEGER"], ["D", "INTEGER"], ["c", "c"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "INTEGER"], ["a", "INTEGER"]>>)
add_command("D", "B", <<["INTEGER", "B"], ["b", "BOOLEAN"], ["d", "INTEGER"], ["c", "INTEGER"], ["d", "B"], ["b", "INTEGER"], ["INTEGER", "INTEGER"]>>)
int_value (28)
add_attribute("e", "D", "BOOLEAN")
int_value (25)
add_class(B)
quotient
logical_negation
generate_java_code
add_call_chain(<<B,B,B,INTEGER>>)
int_value (11)
add_class(A)
add_call_chain(<<e,a,c,INTEGER>>)
conjunction
int_value (26)
numerical_negation
add_attribute("b", "a", "BOOLEAN")
numerical_negation
conjunction
add_query("d", "b", <<["a", "INTEGER"], ["c", "c"], ["e", "BOOLEAN"], ["d", "C"]>>, "A")
add_query("c", "c", <<["D", "b"], ["d", "INTEGER"], ["C", "INTEGER"], ["B", "A"], ["a", "BOOLEAN"], ["a", "BOOLEAN"], ["b", "INTEGER"]>>, "A")
add_query("c", "D", <<["a", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "INTEGER"], ["C", "e"], ["B", "BOOLEAN"], ["B", "INTEGER"]>>, "C")
int_value (3)
add_command("C", "C", <<["D", "B"], ["D", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "BOOLEAN"]>>)
add_command("d", "D", <<["D", "INTEGER"], ["e", "a"], ["C", "INTEGER"]>>)
int_value (19)
