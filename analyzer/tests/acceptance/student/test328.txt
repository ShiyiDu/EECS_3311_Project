logical_negation
add_call_chain(<<A,b,a,B>>)
generate_java_code
add_command("b", "BOOLEAN", <<["D", "INTEGER"], ["c", "A"], ["D", "INTEGER"], ["D", "INTEGER"], ["BOOLEAN", "B"], ["a", "INTEGER"], ["d", "INTEGER"]>>)
logical_negation
type_check
add_command("INTEGER", "BOOLEAN", <<["INTEGER", "BOOLEAN"], ["B", "INTEGER"], ["e", "INTEGER"], ["B", "INTEGER"], ["c", "BOOLEAN"]>>)
generate_java_code
add_attribute("b", "d", "INTEGER")
equals
add_attribute("b", "a", "INTEGER")
bool_value (true)
add_call_chain(<<a,D,D,D,BOOLEAN,B>>)
add_call_chain(<<d,C,b>>)
numerical_negation
subtraction
logical_negation
add_command("b", "B", <<["e", "BOOLEAN"], ["a", "e"], ["a", "BOOLEAN"], ["C", "A"], ["e", "b"]>>)
add_command("d", "a", <<["B", "e"], ["b", "BOOLEAN"], ["e", "BOOLEAN"]>>)
int_value (28)
numerical_negation
int_value (4)
add_call_chain(<<B,C,e,b,BOOLEAN,C>>)
add_call_chain(<<BOOLEAN,c,D,D,B,a,a>>)
add_class(A)
add_attribute("d", "A", "INTEGER")
generate_java_code
numerical_negation
bool_value (true)
add_class(e)
add_call_chain(<<BOOLEAN,c,d,a>>)
conjunction
add_call_chain(<<B>>)
add_attribute("C", "D", "INTEGER")
equals
add_call_chain(<<B,BOOLEAN,e,BOOLEAN,c,C,D>>)
greater_than
add_class(a)
add_command("e", "e", <<["a", "INTEGER"], ["e", "b"], ["A", "c"], ["A", "INTEGER"], ["b", "BOOLEAN"]>>)
int_value (32)
type_check
logical_negation
int_value (28)
add_call_chain(<<C,BOOLEAN,a,c>>)
int_value (21)
add_attribute("A", "C", "BOOLEAN")
disjunction
logical_negation
modulo
add_command("e", "a", <<["d", "INTEGER"], ["B", "B"], ["D", "B"], ["BOOLEAN", "INTEGER"], ["a", "c"], ["INTEGER", "BOOLEAN"], ["e", "BOOLEAN"]>>)
int_value (26)
add_query("a", "BOOLEAN", <<["e", "BOOLEAN"], ["B", "d"], ["b", "BOOLEAN"], ["c", "INTEGER"], ["a", "INTEGER"], ["A", "INTEGER"]>>, "B")
bool_value (false)
numerical_negation
bool_value (false)
numerical_negation
numerical_negation
generate_java_code
add_call_chain(<<a,e,e>>)
int_value (14)
numerical_negation
type_check
numerical_negation
int_value (11)
add_query("C", "b", <<["C", "BOOLEAN"]>>, "e")
add_call_chain(<<b,e,BOOLEAN,c>>)
add_query("c", "a", <<["a", "BOOLEAN"], ["D", "INTEGER"], ["D", "d"], ["BOOLEAN", "BOOLEAN"], ["B", "D"], ["a", "BOOLEAN"], ["e", "D"]>>, "e")
generate_java_code
add_command("INTEGER", "a", <<["B", "INTEGER"], ["B", "INTEGER"], ["b", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["c", "BOOLEAN"], ["b", "BOOLEAN"]>>)
add_call_chain(<<b,e,e,C>>)
logical_negation
add_call_chain(<<A,A,A,A,b,D,C,c>>)
add_call_chain(<<B,c,C,B,A,a,c>>)
add_command("b", "D", <<["c", "BOOLEAN"], ["d", "INTEGER"], ["a", "BOOLEAN"], ["b", "A"], ["e", "INTEGER"], ["a", "c"], ["b", "BOOLEAN"], ["B", "C"], ["A", "BOOLEAN"]>>)
int_value (3)
type_check
equals
numerical_negation
int_value (42)
subtraction
generate_java_code
add_query("c", "c", <<["BOOLEAN", "BOOLEAN"], ["e", "C"], ["B", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["A", "INTEGER"], ["D", "INTEGER"]>>, "BOOLEAN")
bool_value (false)
add_command("INTEGER", "B", <<["D", "INTEGER"], ["e", "C"], ["d", "INTEGER"], ["B", "INTEGER"], ["B", "INTEGER"], ["d", "BOOLEAN"]>>)
numerical_negation
equals
bool_value (true)
disjunction
add_attribute("b", "b", "INTEGER")
type_check
disjunction
add_query("b", "C", <<["a", "INTEGER"], ["INTEGER", "e"], ["D", "INTEGER"], ["C", "e"], ["BOOLEAN", "INTEGER"], ["INTEGER", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "BOOLEAN"]>>, "A")
int_value (13)
add_query("C", "INTEGER", <<["B", "e"], ["c", "BOOLEAN"], ["c", "INTEGER"]>>, "D")
add_call_chain(<<A,D,a,A,b,B,A,BOOLEAN,c>>)
add_call_chain(<<c>>)
add_command("B", "A", <<["D", "INTEGER"], ["b", "BOOLEAN"], ["c", "INTEGER"], ["A", "BOOLEAN"], ["C", "e"]>>)
add_command("c", "A", <<["e", "C"], ["B", "INTEGER"], ["e", "BOOLEAN"], ["d", "a"], ["INTEGER", "INTEGER"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["INTEGER", "INTEGER"], ["B", "BOOLEAN"]>>)
add_command("b", "B", <<["e", "BOOLEAN"], ["B", "b"]>>)
add_query("b", "C", <<["c", "BOOLEAN"], ["a", "b"], ["D", "INTEGER"], ["B", "BOOLEAN"], ["a", "INTEGER"], ["A", "A"], ["e", "b"], ["B", "C"], ["b", "INTEGER"]>>, "BOOLEAN")
add_command("B", "B", <<["b", "INTEGER"], ["A", "BOOLEAN"], ["d", "INTEGER"], ["c", "B"], ["e", "BOOLEAN"], ["INTEGER", "B"], ["B", "BOOLEAN"]>>)
add_call_chain(<<c,c,a,e>>)
generate_java_code
type_check
numerical_negation
multiplication
int_value (20)
generate_java_code
add_attribute("C", "BOOLEAN", "BOOLEAN")
type_check
add_command("D", "D", <<["D", "A"], ["d", "INTEGER"], ["C", "INTEGER"]>>)
add_attribute("B", "e", "BOOLEAN")
type_check
add_query("a", "e", <<["D", "BOOLEAN"], ["a", "d"], ["a", "BOOLEAN"], ["c", "INTEGER"], ["c", "INTEGER"], ["INTEGER", "BOOLEAN"], ["INTEGER", "d"], ["c", "INTEGER"], ["d", "e"]>>, "A")
int_value (31)
numerical_negation
disjunction
logical_negation
int_value (41)
add_command("e", "B", <<["BOOLEAN", "D"], ["INTEGER", "INTEGER"], ["c", "INTEGER"], ["c", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["D", "BOOLEAN"]>>)
logical_negation
int_value (24)
int_value (26)
conjunction
add_call_chain(<<D,BOOLEAN,C,A>>)
bool_value (true)
quotient
numerical_negation
add_query("c", "d", <<["B", "C"], ["D", "BOOLEAN"]>>, "A")
int_value (31)
type_check
add_call_chain(<<A>>)
add_attribute("D", "INTEGER", "INTEGER")
int_value (48)
add_attribute("a", "b", "a")
add_command("C", "INTEGER", <<["e", "b"], ["A", "BOOLEAN"]>>)
conjunction
numerical_negation
numerical_negation
bool_value (false)
logical_negation
bool_value (true)
logical_negation
add_query("B", "e", <<["a", "BOOLEAN"], ["B", "INTEGER"], ["b", "INTEGER"], ["C", "INTEGER"]>>, "e")
add_call_chain(<<d,INTEGER,a,BOOLEAN,b,INTEGER,d,A>>)
int_value (7)
add_query("A", "c", <<["B", "B"], ["A", "d"], ["c", "B"], ["INTEGER", "D"], ["a", "D"], ["A", "INTEGER"]>>, "b")
add_call_chain(<<e,B,C>>)
bool_value (false)
add_attribute("B", "d", "d")
add_query("A", "e", <<["B", "BOOLEAN"], ["e", "D"], ["d", "BOOLEAN"], ["D", "D"], ["c", "BOOLEAN"], ["A", "BOOLEAN"]>>, "D")
add_call_chain(<<A,D,D,b,D>>)
add_call_chain(<<A,e,A,C,D,d,A,b>>)
logical_negation
add_attribute("a", "e", "BOOLEAN")
numerical_negation
bool_value (false)
add_call_chain(<<B,d,b,c,b,e,c>>)
add_command("B", "INTEGER", <<["C", "INTEGER"], ["C", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["a", "B"], ["A", "a"], ["d", "INTEGER"]>>)
add_command("B", "a", <<["D", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["e", "c"], ["a", "BOOLEAN"], ["INTEGER", "b"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["D", "c"], ["d", "BOOLEAN"]>>)
add_attribute("BOOLEAN", "c", "INTEGER")
add_query("INTEGER", "d", <<["b", "A"], ["c", "A"], ["INTEGER", "BOOLEAN"], ["INTEGER", "a"], ["A", "C"], ["c", "INTEGER"], ["BOOLEAN", "INTEGER"], ["B", "BOOLEAN"]>>, "b")
numerical_negation
add_attribute("B", "D", "b")
equals
quotient
numerical_negation
add_class(D)
add_command("C", "e", <<["b", "INTEGER"], ["D", "a"], ["B", "BOOLEAN"], ["C", "INTEGER"], ["A", "A"], ["a", "BOOLEAN"], ["c", "A"]>>)
numerical_negation
add_attribute("C", "A", "INTEGER")
greater_than
less_than
add_class(a)
type_check
numerical_negation
add_query("c", "D", <<["C", "d"], ["C", "b"], ["c", "BOOLEAN"], ["d", "BOOLEAN"]>>, "D")
add_call_chain(<<c,D,B,e>>)
add_call_chain(<<d>>)
add_command("d", "A", <<["B", "BOOLEAN"]>>)
add_call_chain(<<B,b,D>>)
bool_value (true)
add_class(D)
add_command("C", "e", <<["b", "BOOLEAN"], ["D", "BOOLEAN"], ["d", "BOOLEAN"], ["c", "INTEGER"], ["C", "c"], ["B", "C"], ["C", "BOOLEAN"], ["e", "INTEGER"], ["B", "BOOLEAN"]>>)
int_value (46)
generate_java_code
add_call_chain(<<INTEGER,b,d>>)
add_call_chain(<<b,d>>)
modulo
int_value (13)
type_check
add_call_chain(<<D,a,d,A,B>>)
int_value (44)
int_value (18)
add_class(d)
numerical_negation
add_attribute("B", "e", "A")
quotient
conjunction
int_value (34)
multiplication
type_check
add_command("c", "c", <<["C", "a"], ["BOOLEAN", "a"], ["c", "INTEGER"], ["C", "B"], ["A", "INTEGER"]>>)
generate_java_code
generate_java_code
generate_java_code
type_check
int_value (19)
generate_java_code
add_call_chain(<<a,e,D,d,b,INTEGER,d,d,a>>)
logical_negation
logical_negation
quotient
bool_value (false)
numerical_negation
add_call_chain(<<d,D>>)
conjunction
add_call_chain(<<C,A,d,c,d,A>>)
add_class(e)
int_value (9)
int_value (33)
add_query("c", "e", <<["d", "d"], ["D", "d"], ["e", "BOOLEAN"], ["B", "INTEGER"], ["C", "BOOLEAN"]>>, "c")
add_class(D)
