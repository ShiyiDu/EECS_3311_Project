greater_than
add_call_chain(<<D,C,INTEGER,c,a>>)
greater_than
add_class(C)
bool_value (true)
bool_value (true)
add_attribute("b", "C", "INTEGER")
bool_value (true)
equals
conjunction
bool_value (true)
equals
add_class(a)
add_call_chain(<<d>>)
add_query("d", "A", <<["C", "B"], ["C", "INTEGER"], ["c", "INTEGER"], ["e", "INTEGER"]>>, "e")
generate_java_code
logical_negation
add_call_chain(<<d,INTEGER,b,a,b>>)
subtraction
bool_value (false)
equals
add_call_chain(<<B,BOOLEAN>>)
add_call_chain(<<B,b,C,B,C>>)
generate_java_code
add_call_chain(<<a,A,D,c,e,a,d,a,B>>)
add_command("D", "BOOLEAN", <<["B", "BOOLEAN"], ["e", "a"]>>)
generate_java_code
add_command("d", "A", <<["B", "INTEGER"]>>)
less_than
int_value (3)
less_than
add_call_chain(<<C,e,D,A,a>>)
logical_negation
int_value (22)
disjunction
add_attribute("C", "e", "BOOLEAN")
bool_value (false)
int_value (46)
add_class(D)
logical_negation
add_call_chain(<<D,A,c,C,C>>)
add_call_chain(<<A,c,C>>)
int_value (30)
add_call_chain(<<c,B,BOOLEAN,A,d>>)
add_query("d", "B", <<["d", "BOOLEAN"], ["e", "a"], ["INTEGER", "BOOLEAN"], ["A", "INTEGER"], ["c", "B"], ["b", "BOOLEAN"], ["C", "INTEGER"]>>, "INTEGER")
addition
add_call_chain(<<B,B,A,BOOLEAN,c,a,A,B,d>>)
modulo
conjunction
logical_negation
numerical_negation
conjunction
numerical_negation
int_value (1)
add_attribute("A", "a", "INTEGER")
int_value (2)
numerical_negation
modulo
add_attribute("INTEGER", "A", "INTEGER")
bool_value (false)
int_value (47)
add_query("C", "INTEGER", <<["A", "INTEGER"], ["e", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["INTEGER", "e"], ["A", "INTEGER"], ["B", "INTEGER"]>>, "D")
bool_value (true)
generate_java_code
add_query("d", "A", <<["a", "BOOLEAN"], ["B", "INTEGER"], ["e", "BOOLEAN"], ["B", "INTEGER"], ["d", "INTEGER"], ["e", "BOOLEAN"]>>, "b")
bool_value (false)
add_call_chain(<<e,D,e,C,A,A,e>>)
equals
int_value (46)
add_call_chain(<<C,b,A,c,B,b,b>>)
disjunction
int_value (42)
generate_java_code
add_query("a", "e", <<["A", "INTEGER"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "INTEGER"], ["D", "B"], ["C", "BOOLEAN"], ["c", "INTEGER"], ["A", "INTEGER"]>>, "d")
add_call_chain(<<c,b,A,a,d,b,c,C,C>>)
add_call_chain(<<e,BOOLEAN,B>>)
multiplication
generate_java_code
add_call_chain(<<A,A,B,b,b,C,D,C>>)
bool_value (true)
logical_negation
add_call_chain(<<c,INTEGER,a,B,INTEGER,d,a,c,INTEGER>>)
generate_java_code
disjunction
numerical_negation
numerical_negation
add_call_chain(<<e>>)
add_call_chain(<<B,A,C,d,A>>)
add_query("C", "e", <<["d", "BOOLEAN"], ["A", "INTEGER"]>>, "A")
add_attribute("b", "B", "BOOLEAN")
generate_java_code
add_command("B", "B", <<["B", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "BOOLEAN"], ["b", "BOOLEAN"]>>)
subtraction
add_attribute("b", "e", "INTEGER")
add_command("c", "A", <<["c", "BOOLEAN"], ["b", "BOOLEAN"], ["e", "INTEGER"], ["c", "e"], ["b", "C"], ["D", "e"], ["B", "INTEGER"]>>)
add_query("INTEGER", "d", <<["A", "BOOLEAN"], ["B", "INTEGER"], ["b", "BOOLEAN"], ["d", "INTEGER"]>>, "D")
add_class(A)
conjunction
greater_than
add_query("B", "A", <<["D", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "INTEGER"]>>, "A")
logical_negation
logical_negation
int_value (5)
int_value (39)
int_value (28)
add_attribute("C", "D", "C")
add_attribute("D", "B", "BOOLEAN")
add_call_chain(<<C,d,B,B>>)
add_call_chain(<<d,B,c,e>>)
type_check
logical_negation
add_query("d", "C", <<["A", "e"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["c", "INTEGER"], ["BOOLEAN", "c"], ["a", "BOOLEAN"]>>, "e")
add_class(C)
add_attribute("D", "B", "INTEGER")
add_command("INTEGER", "e", <<["e", "INTEGER"], ["d", "C"], ["b", "INTEGER"]>>)
add_command("B", "e", <<["C", "BOOLEAN"], ["A", "B"], ["c", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "d"]>>)
add_attribute("A", "d", "BOOLEAN")
conjunction
numerical_negation
add_call_chain(<<e,B,C,B,C,e,D>>)
generate_java_code
add_query("INTEGER", "BOOLEAN", <<["C", "c"], ["e", "BOOLEAN"], ["D", "C"], ["c", "INTEGER"], ["a", "BOOLEAN"], ["e", "INTEGER"], ["c", "INTEGER"]>>, "D")
generate_java_code
add_query("d", "e", <<["b", "BOOLEAN"], ["c", "INTEGER"], ["C", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "INTEGER"]>>, "d")
bool_value (false)
add_attribute("A", "C", "D")
int_value (19)
modulo
add_command("b", "a", <<["a", "INTEGER"], ["A", "e"], ["c", "INTEGER"], ["D", "b"], ["A", "INTEGER"], ["D", "INTEGER"], ["a", "BOOLEAN"]>>)
numerical_negation
add_command("C", "A", <<["D", "C"], ["d", "BOOLEAN"], ["INTEGER", "INTEGER"], ["a", "INTEGER"], ["d", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "C"], ["a", "B"], ["D", "BOOLEAN"]>>)
bool_value (false)
generate_java_code
add_class(e)
add_command("B", "A", <<["d", "BOOLEAN"], ["B", "INTEGER"], ["D", "INTEGER"], ["INTEGER", "BOOLEAN"], ["INTEGER", "A"]>>)
add_command("b", "d", <<["d", "C"], ["B", "INTEGER"], ["B", "A"], ["A", "INTEGER"], ["D", "D"], ["c", "INTEGER"], ["e", "INTEGER"], ["d", "INTEGER"], ["c", "A"]>>)
add_call_chain(<<B,A,e,e,a>>)
add_command("a", "b", <<["d", "BOOLEAN"], ["a", "B"], ["B", "d"], ["a", "BOOLEAN"], ["d", "INTEGER"], ["B", "BOOLEAN"]>>)
numerical_negation
add_query("c", "c", <<["BOOLEAN", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["d", "INTEGER"], ["C", "BOOLEAN"], ["e", "INTEGER"]>>, "A")
add_class(d)
type_check
add_attribute("c", "c", "BOOLEAN")
add_class(e)
bool_value (true)
add_class(A)
add_call_chain(<<c,a,B>>)
add_query("c", "a", <<["C", "e"], ["B", "BOOLEAN"], ["c", "INTEGER"], ["A", "BOOLEAN"], ["b", "INTEGER"]>>, "C")
generate_java_code
add_query("b", "a", <<["c", "INTEGER"], ["a", "INTEGER"], ["B", "INTEGER"], ["A", "c"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["A", "BOOLEAN"]>>, "e")
numerical_negation
add_class(B)
add_class(A)
add_call_chain(<<BOOLEAN,C,B,c,d,e>>)
add_command("d", "A", <<["b", "BOOLEAN"], ["a", "INTEGER"], ["B", "INTEGER"], ["b", "c"], ["b", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>)
add_query("B", "D", <<["A", "BOOLEAN"], ["C", "INTEGER"], ["d", "INTEGER"], ["d", "INTEGER"], ["a", "a"], ["A", "INTEGER"]>>, "e")
add_command("a", "BOOLEAN", <<["c", "b"], ["B", "INTEGER"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["C", "INTEGER"], ["a", "INTEGER"]>>)
add_class(d)
add_call_chain(<<D,c,d,BOOLEAN,e,c,c,b>>)
add_attribute("B", "e", "INTEGER")
type_check
numerical_negation
int_value (45)
logical_negation
add_call_chain(<<A,C,d,C,D,e,D,e>>)
greater_than
bool_value (false)
logical_negation
int_value (49)
add_command("INTEGER", "B", <<["A", "INTEGER"], ["e", "d"], ["d", "INTEGER"], ["D", "BOOLEAN"], ["A", "A"], ["A", "BOOLEAN"]>>)
add_call_chain(<<D,a,a,INTEGER,A,A,e,c>>)
numerical_negation
add_class(INTEGER)
disjunction
add_query("B", "e", <<["C", "BOOLEAN"], ["d", "INTEGER"], ["D", "BOOLEAN"], ["a", "BOOLEAN"], ["b", "D"]>>, "BOOLEAN")
add_command("b", "B", <<["B", "BOOLEAN"], ["INTEGER", "A"], ["INTEGER", "INTEGER"], ["BOOLEAN", "INTEGER"], ["e", "B"]>>)
add_attribute("c", "A", "B")
add_call_chain(<<INTEGER,e,d,c,c,D,C,B,c>>)
int_value (13)
type_check
add_query("a", "C", <<["c", "INTEGER"], ["INTEGER", "A"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["D", "C"]>>, "B")
add_query("D", "b", <<["C", "INTEGER"], ["a", "INTEGER"], ["e", "A"], ["e", "A"], ["INTEGER", "a"]>>, "a")
add_query("A", "a", <<["B", "B"], ["b", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "BOOLEAN"], ["BOOLEAN", "C"], ["INTEGER", "D"], ["a", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "D"]>>, "e")
numerical_negation
disjunction
add_call_chain(<<C,c,b,A>>)
type_check
disjunction
add_command("d", "c", <<["B", "INTEGER"], ["A", "C"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["A", "INTEGER"], ["A", "C"], ["D", "e"]>>)
add_call_chain(<<d>>)
add_command("d", "c", <<["d", "e"], ["c", "INTEGER"], ["c", "BOOLEAN"], ["BOOLEAN", "D"], ["b", "BOOLEAN"], ["D", "a"], ["B", "D"]>>)
generate_java_code
type_check
add_command("a", "d", <<["C", "INTEGER"], ["e", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "INTEGER"], ["d", "INTEGER"]>>)
add_attribute("D", "e", "C")
add_query("e", "e", <<["d", "e"], ["c", "INTEGER"]>>, "D")
type_check
add_call_chain(<<D,A,B,c,B,d,BOOLEAN,B>>)
add_attribute("B", "D", "INTEGER")
generate_java_code
logical_negation
add_call_chain(<<C,A,C,A>>)
add_command("D", "B", <<["A", "e"], ["a", "BOOLEAN"], ["A", "INTEGER"], ["D", "INTEGER"]>>)
add_command("INTEGER", "b", <<["A", "BOOLEAN"], ["c", "e"], ["b", "INTEGER"]>>)
add_command("BOOLEAN", "C", <<["e", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "A"], ["A", "BOOLEAN"], ["D", "BOOLEAN"]>>)
bool_value (false)
numerical_negation
add_query("C", "C", <<["D", "INTEGER"], ["A", "d"], ["C", "D"], ["c", "INTEGER"]>>, "D")
add_command("A", "BOOLEAN", <<["C", "A"], ["BOOLEAN", "INTEGER"], ["D", "b"], ["e", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["a", "B"], ["e", "c"]>>)
add_class(INTEGER)
conjunction
add_call_chain(<<A>>)
numerical_negation
numerical_negation
add_call_chain(<<BOOLEAN,D>>)
add_attribute("A", "B", "INTEGER")
generate_java_code
add_command("INTEGER", "B", <<["A", "c"], ["e", "BOOLEAN"], ["d", "C"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["D", "BOOLEAN"], ["d", "A"], ["D", "INTEGER"], ["C", "A"]>>)
add_attribute("C", "b", "BOOLEAN")
add_call_chain(<<A>>)
add_command("b", "e", <<["A", "BOOLEAN"], ["B", "e"], ["B", "INTEGER"], ["INTEGER", "b"]>>)
add_attribute("b", "d", "BOOLEAN")
add_query("C", "B", <<["b", "BOOLEAN"]>>, "c")
add_attribute("B", "c", "e")
add_call_chain(<<B,d,e,e,e,e,a,d>>)
add_attribute("b", "c", "D")
bool_value (false)
numerical_negation
add_call_chain(<<b,d,A,C,d,a,INTEGER,b>>)
bool_value (true)
greater_than
int_value (36)
add_command("A", "B", <<["D", "INTEGER"]>>)
add_attribute("c", "b", "b")
add_query("D", "A", <<["A", "BOOLEAN"], ["d", "INTEGER"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "BOOLEAN"], ["d", "INTEGER"]>>, "INTEGER")
type_check
numerical_negation
