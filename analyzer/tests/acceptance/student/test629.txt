add_attribute("D", "A", "BOOLEAN")
equals
add_class(A)
add_query("BOOLEAN", "d", <<["b", "BOOLEAN"], ["a", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>, "INTEGER")
add_query("b", "d", <<["b", "INTEGER"], ["e", "B"], ["INTEGER", "BOOLEAN"], ["e", "INTEGER"], ["D", "INTEGER"], ["c", "INTEGER"]>>, "D")
generate_java_code
add_query("e", "b", <<["d", "INTEGER"]>>, "b")
numerical_negation
multiplication
bool_value (false)
add_attribute("b", "D", "d")
add_attribute("INTEGER", "b", "BOOLEAN")
addition
conjunction
add_call_chain(<<A,D,a,B,e,a,A,e>>)
add_attribute("D", "B", "INTEGER")
add_class(INTEGER)
greater_than
int_value (21)
type_check
int_value (9)
bool_value (true)
add_call_chain(<<c,INTEGER,e,B,B,a,d,INTEGER,c>>)
add_query("B", "INTEGER", <<["e", "BOOLEAN"], ["INTEGER", "a"], ["B", "INTEGER"], ["B", "BOOLEAN"]>>, "C")
add_call_chain(<<B,C,b,c,BOOLEAN,d,e,e,B>>)
add_query("d", "B", <<["e", "BOOLEAN"], ["e", "BOOLEAN"], ["INTEGER", "A"], ["a", "BOOLEAN"]>>, "A")
generate_java_code
add_command("BOOLEAN", "d", <<["INTEGER", "BOOLEAN"], ["c", "INTEGER"]>>)
bool_value (true)
add_attribute("INTEGER", "b", "b")
add_query("C", "A", <<["C", "INTEGER"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "BOOLEAN"]>>, "D")
bool_value (false)
numerical_negation
add_query("B", "A", <<["b", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "d"], ["a", "e"]>>, "B")
add_call_chain(<<d,b,b,A>>)
numerical_negation
add_call_chain(<<C,d,D,D,D,c,A,b>>)
add_class(A)
int_value (12)
bool_value (true)
add_class(D)
bool_value (false)
conjunction
add_attribute("c", "B", "INTEGER")
modulo
add_call_chain(<<B,e,d>>)
add_query("A", "c", <<["C", "BOOLEAN"], ["C", "INTEGER"], ["c", "BOOLEAN"], ["c", "a"], ["B", "B"], ["b", "A"], ["INTEGER", "BOOLEAN"], ["a", "C"], ["e", "c"]>>, "e")
numerical_negation
bool_value (true)
add_attribute("C", "a", "d")
add_command("b", "a", <<["c", "A"]>>)
int_value (39)
conjunction
greater_than
bool_value (true)
numerical_negation
numerical_negation
disjunction
add_call_chain(<<C,A,INTEGER,C,e,b,BOOLEAN>>)
numerical_negation
add_attribute("INTEGER", "D", "INTEGER")
add_attribute("C", "c", "BOOLEAN")
int_value (33)
type_check
multiplication
int_value (33)
add_query("D", "C", <<["c", "d"], ["e", "INTEGER"], ["B", "BOOLEAN"]>>, "e")
add_query("C", "e", <<["b", "INTEGER"], ["a", "c"], ["d", "BOOLEAN"], ["b", "INTEGER"], ["D", "BOOLEAN"], ["a", "BOOLEAN"]>>, "D")
add_call_chain(<<BOOLEAN,e,A,d,INTEGER,B>>)
add_query("BOOLEAN", "B", <<["A", "BOOLEAN"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["C", "C"]>>, "c")
add_call_chain(<<b,d,B,e,B,BOOLEAN,BOOLEAN,D>>)
add_query("A", "c", <<["B", "INTEGER"], ["BOOLEAN", "INTEGER"], ["c", "BOOLEAN"], ["d", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["D", "INTEGER"], ["D", "c"], ["B", "INTEGER"], ["c", "INTEGER"]>>, "e")
type_check
bool_value (false)
add_call_chain(<<d>>)
add_attribute("A", "A", "A")
add_attribute("b", "A", "INTEGER")
add_query("a", "e", <<["INTEGER", "BOOLEAN"], ["A", "INTEGER"], ["e", "INTEGER"], ["a", "BOOLEAN"], ["B", "B"]>>, "a")
numerical_negation
add_command("A", "e", <<["a", "INTEGER"], ["C", "C"], ["C", "C"], ["a", "INTEGER"], ["d", "INTEGER"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["C", "INTEGER"], ["C", "INTEGER"]>>)
disjunction
add_command("b", "B", <<["C", "c"], ["c", "BOOLEAN"], ["b", "C"], ["b", "e"]>>)
conjunction
bool_value (true)
logical_negation
add_query("a", "a", <<["a", "INTEGER"], ["d", "C"]>>, "B")
logical_negation
add_attribute("b", "d", "BOOLEAN")
numerical_negation
int_value (44)
add_attribute("D", "c", "INTEGER")
add_call_chain(<<INTEGER,C,a,c>>)
add_call_chain(<<D,INTEGER>>)
bool_value (true)
add_call_chain(<<C,a,INTEGER,B,BOOLEAN>>)
add_call_chain(<<b,b,C,b>>)
add_query("e", "e", <<["D", "INTEGER"], ["e", "INTEGER"]>>, "D")
logical_negation
add_attribute("a", "a", "INTEGER")
add_attribute("D", "B", "BOOLEAN")
type_check
add_query("e", "A", <<["b", "BOOLEAN"], ["B", "INTEGER"], ["A", "B"], ["B", "c"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["C", "INTEGER"], ["INTEGER", "BOOLEAN"], ["c", "INTEGER"]>>, "C")
add_query("d", "B", <<["B", "BOOLEAN"], ["B", "INTEGER"]>>, "e")
add_call_chain(<<b,a>>)
logical_negation
numerical_negation
add_call_chain(<<A>>)
bool_value (true)
bool_value (true)
add_call_chain(<<B,c,C,b,c,d>>)
add_query("e", "d", <<["A", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "D"], ["a", "INTEGER"]>>, "B")
add_query("A", "A", <<["c", "C"], ["b", "BOOLEAN"], ["C", "A"], ["C", "BOOLEAN"], ["D", "a"]>>, "e")
add_call_chain(<<e,C,A,c>>)
add_attribute("C", "d", "BOOLEAN")
add_call_chain(<<C,A,D,a,D,B>>)
add_class(BOOLEAN)
add_query("b", "a", <<["d", "INTEGER"], ["d", "INTEGER"], ["INTEGER", "BOOLEAN"], ["A", "INTEGER"], ["a", "INTEGER"]>>, "e")
add_query("A", "INTEGER", <<["D", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "B"], ["C", "BOOLEAN"], ["a", "B"], ["b", "e"]>>, "INTEGER")
add_command("c", "A", <<["b", "c"], ["e", "BOOLEAN"], ["D", "INTEGER"], ["c", "C"], ["INTEGER", "BOOLEAN"]>>)
add_query("c", "C", <<["D", "BOOLEAN"], ["C", "D"]>>, "d")
generate_java_code
generate_java_code
add_command("BOOLEAN", "c", <<["D", "B"], ["a", "INTEGER"], ["a", "BOOLEAN"], ["d", "INTEGER"], ["D", "BOOLEAN"], ["D", "BOOLEAN"], ["a", "c"], ["a", "BOOLEAN"], ["c", "INTEGER"]>>)
multiplication
add_class(A)
add_query("BOOLEAN", "B", <<["A", "BOOLEAN"], ["a", "a"], ["A", "INTEGER"], ["INTEGER", "INTEGER"], ["a", "INTEGER"], ["c", "D"], ["C", "BOOLEAN"]>>, "D")
numerical_negation
add_command("A", "b", <<["d", "INTEGER"], ["b", "INTEGER"], ["INTEGER", "D"], ["A", "A"], ["A", "INTEGER"], ["b", "INTEGER"], ["d", "INTEGER"]>>)
type_check
add_call_chain(<<D,e,C>>)
conjunction
disjunction
add_call_chain(<<A,a,C,b,c>>)
add_call_chain(<<INTEGER,A,C,a,c>>)
quotient
int_value (5)
logical_negation
add_query("D", "a", <<["INTEGER", "INTEGER"]>>, "D")
bool_value (true)
int_value (48)
numerical_negation
equals
bool_value (false)
logical_negation
add_query("D", "B", <<["d", "BOOLEAN"], ["B", "INTEGER"], ["b", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "b"]>>, "D")
add_query("D", "d", <<["a", "INTEGER"], ["b", "e"], ["b", "b"], ["c", "BOOLEAN"], ["D", "INTEGER"], ["C", "BOOLEAN"]>>, "c")
bool_value (true)
add_attribute("C", "c", "C")
add_call_chain(<<C,c,B,B,B,A,c,c,A>>)
quotient
add_call_chain(<<D,e,INTEGER,C,C>>)
type_check
add_query("D", "b", <<["C", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["d", "BOOLEAN"]>>, "A")
disjunction
add_query("d", "d", <<["C", "BOOLEAN"], ["BOOLEAN", "D"], ["b", "INTEGER"], ["a", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "A"], ["c", "BOOLEAN"], ["C", "INTEGER"]>>, "INTEGER")
add_query("C", "BOOLEAN", <<["e", "BOOLEAN"]>>, "B")
add_query("INTEGER", "INTEGER", <<["D", "INTEGER"], ["B", "INTEGER"], ["C", "BOOLEAN"], ["e", "BOOLEAN"], ["a", "INTEGER"], ["BOOLEAN", "INTEGER"], ["C", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "D"]>>, "B")
add_attribute("INTEGER", "B", "e")
add_command("A", "A", <<["d", "C"], ["b", "c"], ["b", "BOOLEAN"]>>)
add_command("b", "e", <<["d", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "D"], ["c", "c"], ["e", "BOOLEAN"], ["b", "BOOLEAN"]>>)
add_attribute("B", "A", "c")
numerical_negation
add_call_chain(<<A,A,B,B,B,a,C,C,d>>)
add_attribute("C", "D", "BOOLEAN")
less_than
add_query("B", "b", <<["e", "BOOLEAN"], ["A", "INTEGER"], ["b", "INTEGER"], ["d", "INTEGER"]>>, "A")
add_attribute("C", "b", "INTEGER")
add_class(d)
add_attribute("B", "e", "A")
add_command("BOOLEAN", "e", <<["c", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "BOOLEAN"], ["BOOLEAN", "D"], ["a", "BOOLEAN"], ["c", "INTEGER"]>>)
numerical_negation
add_query("INTEGER", "INTEGER", <<["a", "c"], ["C", "BOOLEAN"]>>, "A")
generate_java_code
numerical_negation
add_call_chain(<<B,D>>)
add_call_chain(<<e,C,e,B,C,c,D,INTEGER,B>>)
type_check
bool_value (false)
logical_negation
add_call_chain(<<e,b,c>>)
conjunction
add_attribute("A", "D", "D")
logical_negation
type_check
add_call_chain(<<d,C,b,BOOLEAN,a,INTEGER,b,D,c>>)
less_than
less_than
int_value (13)
add_command("e", "a", <<["a", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "B"], ["C", "INTEGER"]>>)
logical_negation
disjunction
add_attribute("B", "e", "A")
bool_value (true)
add_attribute("A", "a", "a")
int_value (26)
logical_negation
generate_java_code
add_command("d", "d", <<["c", "A"], ["INTEGER", "D"], ["a", "INTEGER"], ["e", "INTEGER"]>>)
add_class(e)
add_command("e", "C", <<["a", "BOOLEAN"], ["D", "INTEGER"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["D", "D"], ["A", "BOOLEAN"]>>)
add_attribute("A", "A", "c")
add_call_chain(<<A,B,B,d,BOOLEAN,INTEGER,a,D,a>>)
add_attribute("C", "C", "INTEGER")
add_query("C", "a", <<["BOOLEAN", "INTEGER"], ["e", "BOOLEAN"], ["c", "INTEGER"], ["A", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "BOOLEAN"], ["BOOLEAN", "A"], ["C", "c"], ["b", "INTEGER"]>>, "D")
bool_value (false)
add_attribute("BOOLEAN", "C", "BOOLEAN")
add_attribute("c", "B", "A")
add_attribute("B", "BOOLEAN", "BOOLEAN")
add_call_chain(<<d,b>>)
add_class(INTEGER)
add_query("B", "d", <<["C", "BOOLEAN"], ["B", "INTEGER"], ["a", "INTEGER"], ["e", "INTEGER"], ["c", "BOOLEAN"], ["D", "BOOLEAN"]>>, "b")
add_call_chain(<<a,b,C,c>>)
add_query("C", "C", <<["BOOLEAN", "b"], ["a", "INTEGER"], ["B", "INTEGER"], ["B", "BOOLEAN"], ["D", "INTEGER"], ["D", "B"], ["c", "b"], ["B", "BOOLEAN"], ["a", "INTEGER"]>>, "B")
add_query("INTEGER", "b", <<["c", "BOOLEAN"], ["B", "C"]>>, "e")
generate_java_code
disjunction
add_call_chain(<<BOOLEAN,C,D,D,d,d,C>>)
type_check
logical_negation
bool_value (true)
numerical_negation
int_value (26)
disjunction
add_class(B)
bool_value (true)
bool_value (false)
conjunction
numerical_negation
add_command("INTEGER", "B", <<["B", "INTEGER"], ["BOOLEAN", "INTEGER"], ["C", "INTEGER"], ["a", "a"], ["INTEGER", "INTEGER"], ["BOOLEAN", "b"]>>)
add_call_chain(<<e,B>>)
add_class(D)
add_query("A", "C", <<["a", "BOOLEAN"], ["C", "INTEGER"], ["BOOLEAN", "d"], ["d", "BOOLEAN"], ["a", "INTEGER"]>>, "d")
add_attribute("d", "c", "INTEGER")
add_call_chain(<<C,D,e,B,a,e,D,d,b>>)
bool_value (true)
add_attribute("d", "c", "INTEGER")
add_attribute("e", "BOOLEAN", "BOOLEAN")
add_command("c", "b", <<["C", "BOOLEAN"], ["D", "INTEGER"], ["B", "INTEGER"], ["b", "INTEGER"], ["e", "INTEGER"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["a", "BOOLEAN"]>>)
