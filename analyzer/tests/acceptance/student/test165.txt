add_command("d", "b", <<["C", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["B", "INTEGER"], ["a", "D"], ["D", "e"], ["C", "BOOLEAN"]>>)
quotient
type_check
add_class(A)
int_value (1)
subtraction
disjunction
add_attribute("A", "a", "INTEGER")
add_call_chain(<<e,e,C,D,d,a>>)
logical_negation
add_class(D)
generate_java_code
int_value (16)
add_command("c", "B", <<["D", "INTEGER"], ["b", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "BOOLEAN"], ["b", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["B", "INTEGER"]>>)
logical_negation
add_call_chain(<<B,A,d,d,D>>)
bool_value (true)
add_call_chain(<<d,c,e,A,C,c,BOOLEAN,B>>)
add_call_chain(<<e,a,d,a,b,BOOLEAN,b>>)
numerical_negation
multiplication
int_value (1)
add_attribute("D", "INTEGER", "BOOLEAN")
bool_value (true)
logical_negation
numerical_negation
less_than
add_call_chain(<<b,e,D,BOOLEAN,a,BOOLEAN,BOOLEAN,a>>)
add_command("C", "d", <<["a", "a"], ["d", "INTEGER"], ["b", "D"]>>)
add_query("b", "C", <<["D", "INTEGER"]>>, "d")
add_attribute("c", "B", "A")
add_class(B)
add_query("C", "C", <<["C", "B"], ["b", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "a"], ["A", "b"]>>, "a")
add_call_chain(<<D,B,A,a,d,C,b,B>>)
less_than
add_class(d)
less_than
add_call_chain(<<C,C,D,C,e,C,b>>)
numerical_negation
add_query("B", "D", <<["c", "BOOLEAN"], ["b", "BOOLEAN"]>>, "A")
logical_negation
add_command("C", "a", <<["a", "BOOLEAN"], ["INTEGER", "D"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "INTEGER"], ["d", "BOOLEAN"], ["c", "A"]>>)
add_call_chain(<<B>>)
bool_value (false)
add_attribute("BOOLEAN", "c", "BOOLEAN")
add_query("C", "e", <<["e", "INTEGER"], ["D", "BOOLEAN"], ["b", "C"], ["c", "d"], ["B", "INTEGER"], ["C", "B"], ["e", "INTEGER"], ["C", "C"]>>, "INTEGER")
quotient
add_attribute("D", "e", "b")
int_value (24)
add_call_chain(<<B,d,c,D,d>>)
generate_java_code
add_query("D", "A", <<["b", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["BOOLEAN", "d"], ["a", "BOOLEAN"], ["b", "D"]>>, "BOOLEAN")
add_command("INTEGER", "B", <<["A", "BOOLEAN"], ["d", "D"], ["e", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "b"], ["d", "INTEGER"], ["B", "INTEGER"]>>)
add_attribute("A", "B", "BOOLEAN")
type_check
add_attribute("B", "B", "BOOLEAN")
add_attribute("C", "D", "BOOLEAN")
add_class(a)
add_query("B", "a", <<["d", "INTEGER"], ["D", "C"], ["B", "B"], ["D", "INTEGER"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["INTEGER", "INTEGER"]>>, "A")
add_query("C", "B", <<["e", "A"], ["e", "BOOLEAN"], ["c", "A"], ["e", "BOOLEAN"], ["A", "A"]>>, "d")
add_command("A", "e", <<["B", "D"], ["c", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["a", "INTEGER"]>>)
conjunction
int_value (2)
disjunction
add_command("A", "BOOLEAN", <<["b", "BOOLEAN"], ["B", "INTEGER"], ["A", "INTEGER"], ["c", "INTEGER"], ["D", "INTEGER"], ["C", "d"], ["b", "D"], ["d", "a"]>>)
quotient
logical_negation
add_command("c", "C", <<["A", "INTEGER"], ["c", "INTEGER"], ["INTEGER", "A"], ["BOOLEAN", "B"]>>)
add_call_chain(<<c,d,a,c>>)
add_query("a", "e", <<["c", "BOOLEAN"]>>, "a")
int_value (16)
add_attribute("c", "a", "BOOLEAN")
disjunction
numerical_negation
add_call_chain(<<d,a,a,D,D,c,D,D,e>>)
add_call_chain(<<D,B,B,BOOLEAN,BOOLEAN,d,B,c>>)
conjunction
conjunction
add_class(c)
type_check
add_attribute("A", "A", "d")
conjunction
add_query("C", "D", <<["b", "BOOLEAN"], ["a", "c"], ["D", "INTEGER"], ["e", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["d", "C"], ["e", "B"]>>, "C")
add_class(a)
bool_value (false)
add_command("a", "A", <<["e", "INTEGER"], ["b", "BOOLEAN"], ["INTEGER", "INTEGER"], ["B", "c"], ["a", "BOOLEAN"], ["B", "C"]>>)
numerical_negation
add_query("c", "A", <<["b", "BOOLEAN"], ["d", "c"], ["d", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["b", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "BOOLEAN"]>>, "d")
bool_value (true)
add_query("C", "c", <<["A", "INTEGER"], ["d", "D"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "d"]>>, "B")
multiplication
add_query("c", "c", <<["B", "INTEGER"], ["D", "INTEGER"], ["e", "D"], ["a", "A"]>>, "e")
add_attribute("BOOLEAN", "BOOLEAN", "d")
logical_negation
int_value (8)
type_check
type_check
add_attribute("e", "D", "INTEGER")
add_attribute("A", "D", "e")
add_call_chain(<<A,B,c,B>>)
add_call_chain(<<b,D,A,B,a,c,D,D>>)
numerical_negation
conjunction
greater_than
disjunction
add_query("a", "a", <<["d", "C"], ["C", "INTEGER"], ["D", "C"]>>, "C")
int_value (48)
add_attribute("a", "c", "BOOLEAN")
add_command("D", "A", <<["b", "BOOLEAN"], ["B", "C"], ["B", "A"], ["INTEGER", "BOOLEAN"], ["C", "INTEGER"], ["B", "INTEGER"], ["A", "D"], ["B", "INTEGER"]>>)
bool_value (false)
add_attribute("B", "d", "BOOLEAN")
add_command("e", "e", <<["b", "INTEGER"], ["d", "INTEGER"], ["C", "d"], ["b", "C"]>>)
bool_value (false)
add_query("C", "a", <<["e", "BOOLEAN"], ["D", "BOOLEAN"], ["d", "BOOLEAN"], ["e", "BOOLEAN"]>>, "C")
less_than
add_call_chain(<<d>>)
add_call_chain(<<D,D,B,b,a,C,b>>)
logical_negation
add_call_chain(<<b,a,c,B>>)
bool_value (false)
add_call_chain(<<b,A>>)
add_attribute("a", "C", "BOOLEAN")
greater_than
add_attribute("B", "D", "INTEGER")
add_attribute("e", "c", "a")
logical_negation
numerical_negation
add_command("d", "B", <<["D", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>)
add_class(a)
add_attribute("a", "A", "A")
modulo
generate_java_code
add_call_chain(<<B,C,D,a,c>>)
conjunction
add_attribute("C", "c", "INTEGER")
bool_value (false)
modulo
subtraction
bool_value (true)
logical_negation
add_query("d", "INTEGER", <<["C", "INTEGER"], ["b", "BOOLEAN"], ["A", "INTEGER"], ["b", "INTEGER"], ["c", "D"], ["BOOLEAN", "a"], ["B", "a"]>>, "D")
bool_value (true)
add_query("C", "INTEGER", <<["BOOLEAN", "INTEGER"], ["b", "a"], ["c", "BOOLEAN"], ["a", "INTEGER"], ["C", "INTEGER"], ["d", "INTEGER"], ["A", "BOOLEAN"], ["A", "INTEGER"], ["a", "C"]>>, "b")
type_check
add_command("b", "e", <<["B", "A"], ["INTEGER", "C"], ["D", "BOOLEAN"]>>)
add_attribute("BOOLEAN", "b", "BOOLEAN")
type_check
add_call_chain(<<D,d,b>>)
bool_value (true)
add_class(a)
generate_java_code
type_check
add_call_chain(<<A,a>>)
type_check
type_check
bool_value (false)
logical_negation
add_call_chain(<<D,e,b,a,e,e>>)
conjunction
type_check
add_command("D", "b", <<["INTEGER", "D"]>>)
add_call_chain(<<C>>)
add_command("e", "e", <<["B", "INTEGER"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["INTEGER", "INTEGER"], ["d", "INTEGER"]>>)
multiplication
bool_value (true)
bool_value (true)
quotient
numerical_negation
logical_negation
add_class(A)
generate_java_code
conjunction
add_query("C", "c", <<["C", "D"]>>, "D")
add_call_chain(<<d,e,C,A,D,a,C,c>>)
add_attribute("INTEGER", "b", "BOOLEAN")
add_attribute("A", "INTEGER", "INTEGER")
add_call_chain(<<D,b>>)
add_call_chain(<<D,C,a,e,D>>)
greater_than
logical_negation
add_call_chain(<<b,b,B,a,C>>)
equals
logical_negation
int_value (29)
numerical_negation
bool_value (true)
numerical_negation
add_call_chain(<<B,d,INTEGER,D,INTEGER,C>>)
add_query("C", "e", <<["d", "INTEGER"], ["D", "e"], ["D", "BOOLEAN"], ["e", "INTEGER"], ["D", "INTEGER"], ["c", "c"]>>, "B")
add_command("a", "D", <<["INTEGER", "INTEGER"]>>)
add_attribute("c", "a", "BOOLEAN")
int_value (34)
bool_value (true)
add_class(D)
numerical_negation
numerical_negation
quotient
add_call_chain(<<b,D,A,a,d,BOOLEAN>>)
add_command("c", "D", <<["a", "d"], ["b", "A"], ["C", "BOOLEAN"], ["e", "e"], ["a", "INTEGER"], ["D", "D"], ["a", "INTEGER"], ["b", "INTEGER"]>>)
int_value (14)
add_attribute("C", "b", "BOOLEAN")
add_query("c", "b", <<["A", "INTEGER"], ["a", "BOOLEAN"], ["B", "INTEGER"], ["C", "b"]>>, "a")
add_attribute("BOOLEAN", "A", "INTEGER")
add_command("D", "C", <<["C", "BOOLEAN"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["C", "B"], ["C", "b"], ["a", "d"], ["a", "c"], ["A", "c"]>>)
generate_java_code
logical_negation
int_value (39)
numerical_negation
bool_value (false)
