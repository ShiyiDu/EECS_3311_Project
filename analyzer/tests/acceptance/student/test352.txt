type_check
generate_java_code
bool_value (false)
bool_value (false)
logical_negation
add_class(INTEGER)
add_query("C", "B", <<["A", "C"], ["b", "BOOLEAN"], ["D", "b"], ["A", "BOOLEAN"], ["B", "b"], ["D", "B"], ["e", "e"]>>, "d")
int_value (13)
bool_value (false)
add_call_chain(<<D,c,b,b,d,a,B>>)
generate_java_code
add_command("a", "C", <<["d", "INTEGER"], ["BOOLEAN", "INTEGER"], ["D", "BOOLEAN"], ["d", "BOOLEAN"], ["d", "INTEGER"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["e", "D"]>>)
add_command("a", "b", <<["b", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["A", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["b", "C"], ["C", "INTEGER"]>>)
add_command("A", "A", <<["e", "INTEGER"], ["A", "INTEGER"], ["D", "e"], ["d", "c"], ["C", "b"], ["e", "INTEGER"], ["e", "B"]>>)
add_query("BOOLEAN", "c", <<["B", "e"], ["c", "INTEGER"], ["b", "e"]>>, "A")
add_class(D)
add_command("B", "B", <<["e", "INTEGER"], ["c", "d"]>>)
type_check
greater_than
logical_negation
add_attribute("BOOLEAN", "d", "BOOLEAN")
add_attribute("c", "D", "B")
type_check
quotient
subtraction
generate_java_code
add_query("d", "D", <<["a", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["B", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["a", "INTEGER"], ["B", "b"], ["e", "c"], ["BOOLEAN", "INTEGER"], ["A", "A"]>>, "d")
int_value (6)
add_call_chain(<<a,D>>)
add_call_chain(<<C,D,A,B,A,C,C,B>>)
add_query("c", "a", <<["A", "d"], ["D", "BOOLEAN"], ["a", "BOOLEAN"]>>, "B")
int_value (45)
add_call_chain(<<A,d>>)
generate_java_code
numerical_negation
add_attribute("e", "a", "B")
add_call_chain(<<C>>)
modulo
bool_value (false)
add_query("INTEGER", "C", <<["A", "b"], ["D", "INTEGER"], ["BOOLEAN", "D"], ["e", "INTEGER"]>>, "a")
type_check
add_call_chain(<<B,A,D,D,a,A,a,d,INTEGER>>)
greater_than
less_than
conjunction
type_check
numerical_negation
bool_value (true)
add_command("C", "B", <<["a", "INTEGER"], ["d", "BOOLEAN"], ["c", "INTEGER"], ["D", "BOOLEAN"], ["INTEGER", "e"], ["a", "INTEGER"], ["D", "BOOLEAN"], ["D", "a"], ["INTEGER", "d"]>>)
add_call_chain(<<B,A,e,B,BOOLEAN,a,c>>)
add_call_chain(<<e,e,e,c,e>>)
bool_value (false)
numerical_negation
disjunction
add_attribute("D", "b", "BOOLEAN")
add_call_chain(<<d,D,C,B,e,e,D,c>>)
add_call_chain(<<a,e,C>>)
bool_value (true)
add_class(C)
add_call_chain(<<b,INTEGER,A,D,a,e,D,A,INTEGER>>)
int_value (31)
logical_negation
add_call_chain(<<B,e,a,B,b,C,C>>)
add_attribute("INTEGER", "INTEGER", "INTEGER")
add_attribute("A", "c", "INTEGER")
add_class(D)
type_check
numerical_negation
bool_value (true)
numerical_negation
type_check
int_value (42)
add_attribute("A", "a", "BOOLEAN")
type_check
add_query("e", "D", <<["e", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "INTEGER"], ["a", "d"], ["c", "INTEGER"], ["B", "BOOLEAN"], ["B", "INTEGER"], ["b", "INTEGER"]>>, "B")
add_class(e)
add_call_chain(<<D,B,INTEGER,b,b,A,a,A>>)
add_attribute("e", "e", "BOOLEAN")
int_value (41)
greater_than
int_value (9)
add_attribute("A", "INTEGER", "INTEGER")
logical_negation
add_call_chain(<<c,c,d>>)
subtraction
add_attribute("B", "c", "INTEGER")
int_value (39)
logical_negation
add_command("a", "D", <<["b", "INTEGER"], ["a", "b"], ["C", "INTEGER"], ["BOOLEAN", "INTEGER"], ["d", "A"], ["d", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "INTEGER"]>>)
add_call_chain(<<a,e>>)
bool_value (true)
add_query("b", "C", <<["d", "BOOLEAN"], ["C", "d"], ["b", "INTEGER"], ["A", "BOOLEAN"], ["c", "c"]>>, "C")
add_call_chain(<<A,B,c>>)
int_value (43)
add_query("A", "D", <<["a", "BOOLEAN"], ["B", "B"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>, "INTEGER")
int_value (35)
disjunction
bool_value (false)
int_value (5)
multiplication
less_than
int_value (45)
add_attribute("C", "a", "BOOLEAN")
add_call_chain(<<INTEGER>>)
add_command("a", "b", <<["c", "INTEGER"], ["C", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["c", "BOOLEAN"], ["d", "b"], ["b", "C"], ["INTEGER", "b"]>>)
logical_negation
add_command("b", "D", <<["e", "C"], ["e", "INTEGER"], ["C", "a"], ["d", "INTEGER"], ["C", "BOOLEAN"], ["e", "INTEGER"]>>)
add_call_chain(<<a,e,d,c,C>>)
logical_negation
multiplication
add_call_chain(<<D,e,d,b,C,D,A,C,d>>)
add_query("d", "c", <<["D", "INTEGER"], ["a", "INTEGER"], ["B", "BOOLEAN"], ["A", "a"], ["a", "BOOLEAN"], ["c", "C"], ["e", "INTEGER"]>>, "D")
int_value (49)
int_value (2)
add_class(c)
numerical_negation
generate_java_code
less_than
int_value (14)
type_check
bool_value (false)
add_call_chain(<<c,d,B,b,B,A>>)
type_check
add_call_chain(<<b,C,c>>)
add_call_chain(<<e,C,A,b,D,c,a,B,B>>)
add_query("B", "e", <<["BOOLEAN", "INTEGER"], ["INTEGER", "INTEGER"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["b", "e"], ["C", "INTEGER"], ["a", "BOOLEAN"], ["a", "INTEGER"], ["e", "BOOLEAN"]>>, "e")
logical_negation
numerical_negation
logical_negation
add_attribute("D", "B", "BOOLEAN")
type_check
int_value (23)
type_check
add_query("BOOLEAN", "A", <<["BOOLEAN", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "INTEGER"], ["d", "BOOLEAN"], ["D", "BOOLEAN"], ["d", "e"], ["d", "BOOLEAN"]>>, "a")
bool_value (false)
add_class(c)
numerical_negation
add_query("INTEGER", "e", <<["b", "INTEGER"]>>, "B")
type_check
equals
subtraction
add_command("a", "A", <<["b", "d"], ["A", "INTEGER"], ["b", "BOOLEAN"], ["C", "INTEGER"], ["b", "e"], ["D", "BOOLEAN"], ["e", "INTEGER"], ["D", "BOOLEAN"]>>)
generate_java_code
add_command("D", "c", <<["B", "INTEGER"], ["A", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["INTEGER", "INTEGER"], ["b", "INTEGER"], ["a", "BOOLEAN"]>>)
add_query("c", "INTEGER", <<["INTEGER", "INTEGER"], ["D", "INTEGER"], ["d", "BOOLEAN"], ["C", "b"], ["C", "INTEGER"], ["e", "INTEGER"], ["d", "INTEGER"]>>, "c")
bool_value (false)
bool_value (false)
add_command("c", "a", <<["A", "BOOLEAN"], ["A", "C"]>>)
add_class(e)
add_command("B", "b", <<["D", "INTEGER"], ["d", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "B"]>>)
int_value (17)
type_check
add_call_chain(<<C,c,B,D,d,e,e>>)
less_than
int_value (26)
add_query("D", "BOOLEAN", <<["C", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "INTEGER"]>>, "A")
int_value (20)
add_call_chain(<<d,D,D,C,c>>)
add_attribute("c", "a", "BOOLEAN")
conjunction
add_command("D", "e", <<["B", "BOOLEAN"]>>)
generate_java_code
numerical_negation
int_value (23)
generate_java_code
generate_java_code
type_check
add_class(a)
logical_negation
add_call_chain(<<d,D,b,D,c,B,c,e>>)
add_call_chain(<<D,e,C,B,C,A>>)
logical_negation
type_check
numerical_negation
int_value (3)
add_command("b", "B", <<["b", "A"], ["c", "INTEGER"], ["b", "BOOLEAN"], ["b", "e"], ["a", "c"]>>)
numerical_negation
int_value (40)
add_query("INTEGER", "C", <<["B", "INTEGER"], ["e", "C"], ["a", "INTEGER"], ["BOOLEAN", "INTEGER"], ["e", "INTEGER"], ["a", "INTEGER"], ["b", "INTEGER"]>>, "D")
add_call_chain(<<c,D,d,d,b,a,e,INTEGER>>)
bool_value (true)
modulo
add_call_chain(<<A,C>>)
generate_java_code
numerical_negation
int_value (48)
add_class(A)
greater_than
logical_negation
equals
add_call_chain(<<B,C,e,c,B,D>>)
add_call_chain(<<d,D,e,c,d,a,A,B>>)
add_query("e", "B", <<["D", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "B"]>>, "e")
add_class(D)
add_call_chain(<<D,d,a,e,B,e,D,d,D>>)
int_value (34)
type_check
add_attribute("INTEGER", "BOOLEAN", "INTEGER")
bool_value (true)
add_command("BOOLEAN", "d", <<["c", "INTEGER"], ["BOOLEAN", "INTEGER"], ["A", "INTEGER"], ["D", "D"], ["d", "INTEGER"], ["c", "INTEGER"], ["e", "INTEGER"]>>)
add_class(BOOLEAN)
add_attribute("C", "D", "BOOLEAN")
add_class(INTEGER)
add_query("BOOLEAN", "B", <<["c", "INTEGER"], ["d", "BOOLEAN"], ["b", "a"], ["D", "INTEGER"], ["A", "A"], ["D", "D"], ["A", "INTEGER"], ["c", "BOOLEAN"]>>, "c")
quotient
add_call_chain(<<INTEGER,d,a,D>>)
add_class(BOOLEAN)
add_class(b)
bool_value (true)
add_attribute("d", "b", "INTEGER")
less_than
add_call_chain(<<B,D>>)
add_class(b)
logical_negation
add_query("B", "e", <<["e", "e"], ["e", "BOOLEAN"], ["D", "INTEGER"], ["INTEGER", "INTEGER"], ["INTEGER", "INTEGER"]>>, "e")
bool_value (true)
add_command("D", "B", <<["c", "b"], ["C", "e"], ["a", "e"], ["BOOLEAN", "c"], ["e", "B"]>>)
equals
add_class(A)
add_call_chain(<<C,b,D>>)
disjunction
logical_negation
add_class(a)
add_attribute("C", "C", "BOOLEAN")
add_call_chain(<<c,b>>)
add_call_chain(<<c,B,d,D>>)
logical_negation
conjunction
type_check
add_call_chain(<<INTEGER,C,A,c,D>>)
add_call_chain(<<C,e,B,C,D>>)
numerical_negation
bool_value (false)
numerical_negation
add_command("c", "D", <<["C", "INTEGER"], ["B", "BOOLEAN"], ["B", "INTEGER"], ["a", "INTEGER"], ["b", "b"], ["C", "INTEGER"], ["C", "BOOLEAN"]>>)
add_query("a", "d", <<["c", "INTEGER"], ["e", "INTEGER"]>>, "B")
add_attribute("e", "BOOLEAN", "BOOLEAN")
add_call_chain(<<d,A,D,A,BOOLEAN>>)
int_value (44)
add_query("b", "A", <<["d", "BOOLEAN"], ["d", "d"], ["e", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "D"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "BOOLEAN"]>>, "b")
add_attribute("C", "b", "INTEGER")
bool_value (true)
int_value (37)
logical_negation
add_class(C)
add_query("A", "A", <<["BOOLEAN", "BOOLEAN"], ["A", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["B", "INTEGER"], ["a", "c"], ["c", "INTEGER"], ["C", "INTEGER"], ["C", "c"], ["c", "INTEGER"]>>, "b")
int_value (1)
add_class(BOOLEAN)
disjunction
generate_java_code
generate_java_code
logical_negation
greater_than
int_value (46)
add_class(B)
add_call_chain(<<e,C,C,a,b,B>>)
add_attribute("c", "D", "INTEGER")
add_call_chain(<<BOOLEAN,B,a,c,a,d,D>>)
add_attribute("e", "a", "c")
add_query("B", "c", <<["BOOLEAN", "BOOLEAN"]>>, "A")
bool_value (false)
add_call_chain(<<B>>)
generate_java_code
less_than
add_query("B", "D", <<["C", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "D"]>>, "a")
add_class(B)
int_value (37)
less_than
