modulo
add_attribute("B", "c", "BOOLEAN")
numerical_negation
add_call_chain(<<D,A,b,BOOLEAN,a,e,d>>)
numerical_negation
bool_value (false)
add_query("C", "INTEGER", <<["d", "b"], ["C", "INTEGER"], ["A", "INTEGER"], ["b", "INTEGER"], ["D", "D"], ["b", "INTEGER"], ["d", "BOOLEAN"], ["D", "BOOLEAN"]>>, "D")
int_value (30)
numerical_negation
bool_value (true)
add_call_chain(<<B,e>>)
add_command("D", "e", <<["e", "BOOLEAN"], ["A", "INTEGER"], ["a", "c"], ["A", "d"]>>)
int_value (2)
numerical_negation
add_attribute("a", "B", "INTEGER")
add_attribute("C", "c", "INTEGER")
add_command("B", "b", <<["C", "A"], ["A", "BOOLEAN"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["INTEGER", "INTEGER"], ["c", "INTEGER"]>>)
add_query("e", "A", <<["A", "INTEGER"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["e", "c"], ["B", "BOOLEAN"], ["b", "D"], ["d", "INTEGER"], ["A", "BOOLEAN"], ["D", "INTEGER"]>>, "BOOLEAN")
type_check
logical_negation
int_value (14)
bool_value (true)
disjunction
add_call_chain(<<A,d,A,a,b>>)
subtraction
conjunction
add_call_chain(<<C,A>>)
bool_value (true)
add_call_chain(<<C,e,C,B,D>>)
add_call_chain(<<A,b,a,a,a,BOOLEAN,INTEGER>>)
add_query("D", "B", <<["a", "d"], ["c", "BOOLEAN"], ["A", "B"], ["c", "INTEGER"], ["B", "BOOLEAN"], ["e", "BOOLEAN"]>>, "a")
add_command("b", "A", <<["c", "b"], ["a", "BOOLEAN"], ["B", "BOOLEAN"]>>)
add_query("b", "B", <<["D", "INTEGER"], ["e", "BOOLEAN"]>>, "INTEGER")
type_check
int_value (31)
int_value (41)
add_query("b", "D", <<["c", "INTEGER"], ["D", "INTEGER"], ["BOOLEAN", "c"], ["D", "BOOLEAN"]>>, "D")
generate_java_code
logical_negation
type_check
type_check
addition
add_query("D", "b", <<["a", "INTEGER"], ["BOOLEAN", "INTEGER"], ["D", "a"], ["a", "C"], ["e", "INTEGER"], ["A", "D"], ["B", "BOOLEAN"], ["b", "D"], ["A", "BOOLEAN"]>>, "D")
greater_than
numerical_negation
bool_value (true)
less_than
add_call_chain(<<c,INTEGER,INTEGER,D,d>>)
add_query("d", "C", <<["c", "a"], ["D", "C"], ["B", "INTEGER"], ["C", "INTEGER"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["A", "INTEGER"]>>, "A")
bool_value (false)
add_attribute("INTEGER", "e", "BOOLEAN")
add_attribute("e", "D", "BOOLEAN")
greater_than
conjunction
bool_value (true)
add_call_chain(<<e,a,B,D>>)
add_query("BOOLEAN", "D", <<["a", "INTEGER"], ["INTEGER", "BOOLEAN"], ["A", "c"], ["d", "D"], ["b", "BOOLEAN"]>>, "A")
int_value (16)
int_value (43)
add_attribute("c", "B", "BOOLEAN")
logical_negation
conjunction
logical_negation
int_value (48)
int_value (7)
int_value (43)
generate_java_code
int_value (6)
add_call_chain(<<b,BOOLEAN,d,D,B,b>>)
add_command("c", "c", <<["a", "INTEGER"], ["BOOLEAN", "c"], ["b", "C"], ["INTEGER", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "B"]>>)
logical_negation
equals
add_call_chain(<<BOOLEAN,e,INTEGER>>)
greater_than
disjunction
add_command("e", "e", <<["b", "C"], ["b", "INTEGER"]>>)
add_attribute("C", "D", "e")
add_command("INTEGER", "c", <<["d", "B"], ["d", "BOOLEAN"], ["a", "BOOLEAN"]>>)
int_value (21)
add_class(a)
add_call_chain(<<D,D>>)
add_call_chain(<<B>>)
bool_value (false)
greater_than
add_command("A", "D", <<["C", "INTEGER"], ["BOOLEAN", "INTEGER"], ["B", "B"], ["INTEGER", "BOOLEAN"], ["C", "B"]>>)
type_check
add_call_chain(<<a,e,d,a,c,C>>)
add_query("BOOLEAN", "C", <<["A", "INTEGER"], ["C", "BOOLEAN"], ["D", "b"], ["d", "BOOLEAN"], ["B", "BOOLEAN"]>>, "d")
add_command("c", "a", <<["c", "b"], ["D", "INTEGER"], ["A", "BOOLEAN"]>>)
int_value (1)
add_attribute("b", "A", "D")
add_call_chain(<<B,c,B,c,b,INTEGER,D,C,a>>)
add_command("D", "c", <<["C", "b"], ["INTEGER", "B"], ["b", "INTEGER"], ["A", "B"]>>)
add_class(A)
add_call_chain(<<d,B,B,C,C,D>>)
greater_than
numerical_negation
logical_negation
generate_java_code
add_command("B", "a", <<["C", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["c", "A"], ["e", "INTEGER"], ["a", "BOOLEAN"], ["d", "BOOLEAN"]>>)
bool_value (true)
int_value (23)
generate_java_code
type_check
type_check
add_attribute("c", "C", "a")
add_query("A", "BOOLEAN", <<["BOOLEAN", "INTEGER"], ["A", "BOOLEAN"], ["d", "c"], ["B", "INTEGER"], ["d", "BOOLEAN"], ["b", "b"], ["D", "BOOLEAN"], ["b", "INTEGER"], ["c", "e"]>>, "e")
add_attribute("INTEGER", "C", "BOOLEAN")
add_attribute("e", "D", "INTEGER")
disjunction
generate_java_code
numerical_negation
add_class(C)
conjunction
int_value (27)
add_command("c", "e", <<["b", "INTEGER"], ["b", "INTEGER"], ["a", "BOOLEAN"], ["c", "INTEGER"]>>)
add_attribute("b", "c", "BOOLEAN")
add_call_chain(<<a,C,d,d>>)
add_attribute("b", "A", "INTEGER")
bool_value (false)
modulo
equals
logical_negation
int_value (35)
int_value (15)
add_call_chain(<<D,b>>)
equals
int_value (31)
logical_negation
add_command("e", "B", <<["D", "INTEGER"]>>)
add_command("d", "b", <<["b", "INTEGER"]>>)
add_attribute("A", "B", "BOOLEAN")
int_value (11)
add_query("a", "BOOLEAN", <<["a", "INTEGER"], ["INTEGER", "INTEGER"], ["D", "A"], ["B", "INTEGER"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["c", "BOOLEAN"]>>, "c")
add_class(b)
add_call_chain(<<c,c,c,A,D,INTEGER,C,C>>)
add_call_chain(<<BOOLEAN,c,e,C>>)
add_query("e", "b", <<["c", "b"], ["INTEGER", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["d", "D"], ["D", "D"], ["b", "b"], ["B", "BOOLEAN"], ["d", "C"], ["A", "A"]>>, "c")
add_call_chain(<<D,D,e>>)
add_attribute("INTEGER", "e", "D")
numerical_negation
add_attribute("C", "C", "A")
add_command("b", "b", <<["INTEGER", "INTEGER"], ["D", "B"], ["D", "INTEGER"], ["b", "INTEGER"], ["A", "A"], ["INTEGER", "INTEGER"], ["a", "INTEGER"], ["D", "BOOLEAN"]>>)
numerical_negation
int_value (28)
bool_value (true)
addition
add_query("c", "d", <<["a", "INTEGER"]>>, "C")
generate_java_code
int_value (49)
multiplication
add_attribute("INTEGER", "b", "BOOLEAN")
add_call_chain(<<d,C,a,C,C,C,C,b,B>>)
int_value (17)
add_call_chain(<<d>>)
int_value (21)
add_attribute("C", "d", "d")
equals
add_call_chain(<<e,B,INTEGER,c,C,b>>)
type_check
numerical_negation
numerical_negation
numerical_negation
int_value (48)
logical_negation
add_attribute("c", "e", "INTEGER")
bool_value (false)
add_command("b", "A", <<["A", "INTEGER"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["e", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
bool_value (true)
bool_value (true)
greater_than
add_command("BOOLEAN", "C", <<["B", "BOOLEAN"], ["c", "BOOLEAN"], ["a", "INTEGER"]>>)
add_call_chain(<<C,BOOLEAN,D,B,D,D>>)
conjunction
bool_value (false)
equals
add_call_chain(<<BOOLEAN,c,C,D>>)
numerical_negation
generate_java_code
add_command("D", "C", <<["A", "INTEGER"], ["b", "INTEGER"], ["b", "INTEGER"], ["C", "BOOLEAN"]>>)
add_call_chain(<<C,a,C,BOOLEAN,c>>)
add_call_chain(<<c,D>>)
logical_negation
add_command("c", "INTEGER", <<["B", "INTEGER"], ["b", "b"], ["C", "INTEGER"], ["B", "INTEGER"], ["B", "INTEGER"], ["c", "INTEGER"]>>)
add_query("b", "B", <<["B", "a"], ["B", "INTEGER"], ["d", "INTEGER"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["a", "e"], ["B", "INTEGER"], ["BOOLEAN", "c"], ["d", "b"]>>, "e")
numerical_negation
int_value (5)
modulo
bool_value (false)
logical_negation
int_value (48)
add_attribute("B", "e", "BOOLEAN")
add_attribute("d", "INTEGER", "BOOLEAN")
generate_java_code
generate_java_code
logical_negation
int_value (13)
add_call_chain(<<A,C,c,c>>)
add_class(b)
add_command("c", "b", <<["C", "e"], ["b", "c"], ["A", "INTEGER"]>>)
add_class(b)
logical_negation
int_value (27)
add_attribute("B", "C", "a")
numerical_negation
numerical_negation
bool_value (false)
type_check
add_query("A", "e", <<["C", "INTEGER"], ["A", "BOOLEAN"], ["B", "c"], ["B", "INTEGER"], ["B", "INTEGER"]>>, "b")
int_value (33)
add_command("BOOLEAN", "e", <<["b", "BOOLEAN"], ["D", "INTEGER"], ["d", "c"]>>)
add_query("A", "a", <<["a", "BOOLEAN"], ["C", "BOOLEAN"]>>, "A")
add_command("INTEGER", "B", <<["B", "BOOLEAN"], ["e", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "INTEGER"], ["e", "INTEGER"]>>)
numerical_negation
type_check
int_value (39)
add_attribute("C", "A", "B")
add_call_chain(<<e,BOOLEAN,e,b,e,D>>)
logical_negation
add_query("A", "INTEGER", <<["d", "INTEGER"]>>, "D")
int_value (15)
add_class(C)
int_value (32)
add_call_chain(<<c,a>>)
add_attribute("d", "INTEGER", "INTEGER")
logical_negation
bool_value (false)
add_command("a", "d", <<["D", "INTEGER"]>>)
add_attribute("C", "INTEGER", "D")
quotient
int_value (41)
add_query("a", "c", <<["e", "INTEGER"], ["c", "INTEGER"], ["c", "BOOLEAN"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["a", "INTEGER"]>>, "B")
add_class(D)
conjunction
bool_value (false)
bool_value (false)
add_query("C", "d", <<["B", "B"], ["C", "BOOLEAN"]>>, "C")
disjunction
addition
add_call_chain(<<A,e,INTEGER,e,d,D,d,B,B>>)
