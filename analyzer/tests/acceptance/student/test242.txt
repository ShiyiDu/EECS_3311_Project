add_call_chain(<<c,c,B,b,d,D,A,c>>)
conjunction
equals
numerical_negation
bool_value (false)
add_query("d", "C", <<["A", "BOOLEAN"], ["d", "INTEGER"]>>, "d")
add_attribute("d", "b", "INTEGER")
bool_value (false)
int_value (39)
add_command("C", "A", <<["e", "a"], ["a", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["c", "B"], ["c", "INTEGER"]>>)
type_check
bool_value (true)
generate_java_code
bool_value (false)
add_call_chain(<<c>>)
generate_java_code
bool_value (false)
add_call_chain(<<d,INTEGER>>)
generate_java_code
modulo
disjunction
add_call_chain(<<b,A,BOOLEAN,D>>)
numerical_negation
add_call_chain(<<a,e,INTEGER,e,d,B>>)
add_class(a)
int_value (39)
add_command("A", "b", <<["C", "INTEGER"], ["B", "BOOLEAN"], ["D", "C"], ["c", "INTEGER"], ["a", "BOOLEAN"], ["c", "d"], ["B", "BOOLEAN"], ["a", "D"], ["A", "B"]>>)
int_value (16)
add_query("C", "e", <<["d", "INTEGER"], ["a", "C"]>>, "b")
numerical_negation
add_call_chain(<<a,d,C,D,d,d,C,B,a>>)
add_command("A", "B", <<["c", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["b", "BOOLEAN"], ["A", "A"], ["a", "d"], ["c", "BOOLEAN"]>>)
disjunction
add_call_chain(<<A,B>>)
add_attribute("A", "c", "BOOLEAN")
add_attribute("c", "e", "A")
add_command("b", "d", <<["D", "INTEGER"], ["A", "c"], ["a", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>)
conjunction
add_command("A", "C", <<["a", "INTEGER"], ["D", "c"]>>)
add_query("A", "B", <<["a", "A"], ["A", "INTEGER"], ["e", "BOOLEAN"], ["e", "d"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["C", "INTEGER"]>>, "A")
numerical_negation
disjunction
add_command("D", "c", <<["b", "INTEGER"], ["C", "INTEGER"], ["c", "A"], ["e", "A"]>>)
logical_negation
add_class(BOOLEAN)
add_call_chain(<<A,b,a>>)
type_check
quotient
add_class(B)
int_value (19)
numerical_negation
int_value (43)
add_command("A", "B", <<["C", "BOOLEAN"], ["B", "INTEGER"], ["B", "INTEGER"], ["c", "INTEGER"], ["A", "BOOLEAN"], ["INTEGER", "INTEGER"], ["D", "INTEGER"]>>)
disjunction
multiplication
add_attribute("C", "e", "INTEGER")
conjunction
disjunction
type_check
bool_value (true)
int_value (49)
add_command("d", "D", <<["B", "BOOLEAN"], ["a", "b"], ["a", "D"], ["A", "BOOLEAN"], ["d", "INTEGER"], ["A", "C"]>>)
int_value (11)
add_call_chain(<<B>>)
add_call_chain(<<C,INTEGER,D,d,d,INTEGER,D,b>>)
add_call_chain(<<C,e,A,B,d>>)
int_value (5)
add_query("D", "A", <<["d", "INTEGER"]>>, "A")
int_value (36)
add_call_chain(<<b,A,d,A,d,D,c,D,D>>)
numerical_negation
add_command("e", "d", <<["A", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"]>>)
bool_value (false)
add_query("C", "A", <<["D", "c"], ["a", "BOOLEAN"]>>, "e")
add_call_chain(<<e>>)
add_command("C", "a", <<["C", "BOOLEAN"], ["INTEGER", "c"], ["d", "BOOLEAN"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["B", "INTEGER"], ["B", "INTEGER"], ["c", "BOOLEAN"]>>)
add_call_chain(<<e,D,B,C>>)
subtraction
disjunction
type_check
subtraction
add_attribute("C", "d", "BOOLEAN")
numerical_negation
modulo
add_command("C", "c", <<["A", "INTEGER"], ["d", "INTEGER"], ["c", "BOOLEAN"], ["C", "INTEGER"], ["BOOLEAN", "A"], ["e", "BOOLEAN"]>>)
add_query("e", "B", <<["C", "INTEGER"]>>, "c")
add_class(c)
logical_negation
add_command("C", "d", <<["C", "BOOLEAN"], ["a", "A"], ["B", "BOOLEAN"], ["e", "INTEGER"], ["A", "INTEGER"]>>)
add_query("INTEGER", "d", <<["C", "INTEGER"], ["B", "INTEGER"], ["a", "INTEGER"], ["INTEGER", "C"], ["d", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "INTEGER"], ["c", "BOOLEAN"]>>, "b")
int_value (10)
generate_java_code
add_attribute("BOOLEAN", "c", "BOOLEAN")
add_command("d", "B", <<["c", "INTEGER"], ["b", "INTEGER"], ["D", "a"], ["c", "INTEGER"], ["d", "C"], ["INTEGER", "BOOLEAN"]>>)
add_attribute("b", "C", "BOOLEAN")
add_call_chain(<<A,A>>)
int_value (31)
add_query("e", "b", <<["e", "BOOLEAN"], ["e", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "B"]>>, "e")
bool_value (false)
add_class(b)
add_attribute("D", "A", "BOOLEAN")
add_command("a", "D", <<["b", "INTEGER"]>>)
type_check
add_call_chain(<<e,B,d,e,a,b>>)
add_call_chain(<<b,A,B,D,A,A,D,c>>)
add_command("e", "e", <<["C", "INTEGER"], ["B", "BOOLEAN"], ["A", "BOOLEAN"]>>)
add_call_chain(<<INTEGER>>)
add_query("a", "INTEGER", <<["b", "BOOLEAN"], ["b", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["e", "a"], ["b", "BOOLEAN"], ["b", "b"], ["c", "BOOLEAN"], ["B", "INTEGER"], ["b", "INTEGER"]>>, "C")
int_value (1)
numerical_negation
add_query("B", "e", <<["e", "BOOLEAN"], ["d", "D"], ["C", "D"], ["d", "INTEGER"], ["e", "C"], ["e", "INTEGER"], ["d", "b"]>>, "A")
add_call_chain(<<d,INTEGER,A,C,B>>)
add_class(a)
logical_negation
bool_value (true)
add_query("D", "d", <<["A", "INTEGER"], ["D", "A"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["b", "INTEGER"], ["c", "INTEGER"], ["e", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "d"]>>, "D")
type_check
add_attribute("c", "e", "b")
add_command("A", "B", <<["D", "BOOLEAN"], ["D", "INTEGER"], ["D", "B"], ["C", "A"], ["D", "INTEGER"], ["B", "INTEGER"], ["a", "A"]>>)
quotient
int_value (37)
bool_value (false)
bool_value (true)
bool_value (false)
logical_negation
numerical_negation
type_check
bool_value (false)
bool_value (true)
generate_java_code
add_query("e", "BOOLEAN", <<["a", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "d"], ["b", "C"], ["e", "INTEGER"], ["D", "BOOLEAN"], ["A", "e"]>>, "INTEGER")
greater_than
add_command("BOOLEAN", "A", <<["A", "INTEGER"], ["B", "b"], ["D", "INTEGER"], ["A", "BOOLEAN"], ["D", "A"]>>)
conjunction
bool_value (true)
generate_java_code
add_command("D", "a", <<["b", "d"], ["b", "BOOLEAN"], ["a", "BOOLEAN"], ["b", "INTEGER"]>>)
add_query("D", "a", <<["D", "INTEGER"], ["D", "INTEGER"], ["a", "INTEGER"], ["e", "BOOLEAN"], ["B", "b"], ["c", "INTEGER"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["D", "BOOLEAN"]>>, "BOOLEAN")
add_call_chain(<<d,A,INTEGER,C,C,a,a>>)
add_attribute("INTEGER", "C", "BOOLEAN")
bool_value (true)
logical_negation
numerical_negation
int_value (9)
numerical_negation
disjunction
add_call_chain(<<C,a,b,C,D,b,c,e>>)
bool_value (false)
add_call_chain(<<b,b,C,A,c,d,B,e,a>>)
add_command("INTEGER", "A", <<["B", "BOOLEAN"], ["BOOLEAN", "d"], ["e", "BOOLEAN"]>>)
add_command("a", "D", <<["e", "INTEGER"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "BOOLEAN"], ["d", "INTEGER"]>>)
conjunction
add_call_chain(<<d>>)
generate_java_code
add_class(A)
add_call_chain(<<D,e>>)
equals
disjunction
add_attribute("B", "D", "d")
logical_negation
logical_negation
numerical_negation
add_query("C", "A", <<["b", "B"], ["B", "INTEGER"], ["INTEGER", "INTEGER"], ["A", "INTEGER"], ["B", "d"], ["B", "BOOLEAN"], ["INTEGER", "B"], ["C", "INTEGER"], ["C", "B"]>>, "c")
add_call_chain(<<d,B,C,D>>)
add_class(C)
add_attribute("a", "B", "C")
add_call_chain(<<B,b,INTEGER,B,BOOLEAN,C>>)
generate_java_code
int_value (27)
add_call_chain(<<d,C,D,d,C>>)
add_class(a)
add_command("e", "c", <<["D", "d"]>>)
bool_value (false)
disjunction
int_value (39)
type_check
type_check
add_attribute("d", "D", "BOOLEAN")
add_attribute("a", "D", "INTEGER")
conjunction
conjunction
bool_value (true)
logical_negation
add_command("b", "a", <<["b", "INTEGER"], ["B", "BOOLEAN"], ["e", "BOOLEAN"], ["c", "A"], ["c", "a"], ["C", "INTEGER"], ["D", "INTEGER"]>>)
logical_negation
logical_negation
add_attribute("BOOLEAN", "B", "BOOLEAN")
add_call_chain(<<a,B,a,e,a,A,c,b,e>>)
generate_java_code
add_call_chain(<<a,A,INTEGER,c,B,D,B>>)
type_check
bool_value (true)
bool_value (true)
generate_java_code
add_call_chain(<<c,d,INTEGER,c,d,a,C,a,C>>)
add_command("C", "b", <<["e", "INTEGER"], ["D", "e"], ["b", "C"]>>)
type_check
add_call_chain(<<a,A,D,b>>)
add_command("A", "INTEGER", <<["A", "BOOLEAN"], ["b", "A"], ["INTEGER", "BOOLEAN"]>>)
type_check
add_call_chain(<<A,e>>)
add_attribute("C", "d", "C")
numerical_negation
type_check
add_command("b", "c", <<["e", "D"], ["B", "BOOLEAN"], ["C", "BOOLEAN"]>>)
add_call_chain(<<INTEGER,b,b,b,a,e,A,D,D>>)
logical_negation
generate_java_code
add_call_chain(<<b,BOOLEAN,e,b,C>>)
int_value (11)
int_value (22)
int_value (43)
disjunction
add_query("INTEGER", "D", <<["B", "e"], ["a", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "c"], ["C", "BOOLEAN"], ["e", "d"], ["e", "BOOLEAN"]>>, "C")
logical_negation
bool_value (false)
logical_negation
numerical_negation
add_query("B", "e", <<["A", "B"], ["b", "BOOLEAN"], ["a", "B"], ["c", "D"]>>, "D")
add_attribute("b", "e", "C")
add_call_chain(<<A,c,D,B,a>>)
numerical_negation
add_query("D", "INTEGER", <<["INTEGER", "B"]>>, "c")
disjunction
add_call_chain(<<d,c,A,e>>)
add_call_chain(<<a,c,D,a,B,d,B,A>>)
