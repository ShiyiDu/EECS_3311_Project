int_value (20)
generate_java_code
add_command("c", "C", <<["C", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["b", "e"], ["INTEGER", "INTEGER"], ["c", "A"], ["C", "C"], ["B", "INTEGER"], ["D", "INTEGER"], ["b", "BOOLEAN"]>>)
add_call_chain(<<B,d,a,A,B>>)
numerical_negation
add_attribute("B", "B", "BOOLEAN")
numerical_negation
int_value (19)
logical_negation
int_value (39)
add_command("C", "D", <<["b", "e"], ["c", "A"], ["INTEGER", "INTEGER"], ["a", "b"]>>)
add_query("B", "B", <<["BOOLEAN", "INTEGER"], ["b", "BOOLEAN"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "INTEGER"], ["INTEGER", "INTEGER"], ["c", "BOOLEAN"], ["B", "A"]>>, "c")
greater_than
int_value (35)
generate_java_code
conjunction
add_call_chain(<<B,C,D>>)
add_query("INTEGER", "A", <<["c", "BOOLEAN"], ["D", "D"], ["A", "BOOLEAN"], ["A", "INTEGER"], ["d", "BOOLEAN"]>>, "B")
bool_value (true)
add_call_chain(<<C,b,d,INTEGER,B,B,C>>)
bool_value (false)
add_command("A", "C", <<["B", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "INTEGER"], ["INTEGER", "A"], ["c", "D"], ["B", "c"], ["A", "BOOLEAN"]>>)
bool_value (false)
add_command("e", "d", <<["d", "a"], ["C", "BOOLEAN"], ["B", "c"], ["e", "INTEGER"]>>)
add_attribute("a", "c", "BOOLEAN")
add_query("D", "D", <<["e", "C"], ["b", "b"], ["e", "BOOLEAN"]>>, "e")
add_query("B", "e", <<["A", "INTEGER"], ["C", "INTEGER"], ["c", "INTEGER"], ["c", "BOOLEAN"], ["d", "INTEGER"], ["a", "BOOLEAN"], ["a", "BOOLEAN"]>>, "INTEGER")
add_class(D)
add_class(B)
add_call_chain(<<b,c,C,d,A>>)
numerical_negation
add_call_chain(<<BOOLEAN,C,c,a,B,C,c,c,e>>)
generate_java_code
add_class(B)
add_query("B", "e", <<["e", "B"], ["c", "D"], ["A", "BOOLEAN"]>>, "BOOLEAN")
numerical_negation
numerical_negation
generate_java_code
add_command("a", "B", <<["b", "BOOLEAN"], ["B", "INTEGER"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "INTEGER"], ["a", "BOOLEAN"]>>)
add_call_chain(<<D,d,d,B,BOOLEAN,c,A,D,d>>)
add_attribute("b", "A", "INTEGER")
add_call_chain(<<D,b,C,C,d>>)
logical_negation
add_query("D", "A", <<["C", "B"]>>, "d")
generate_java_code
logical_negation
add_call_chain(<<D,INTEGER,INTEGER,a>>)
add_command("a", "D", <<["C", "BOOLEAN"], ["A", "a"], ["b", "BOOLEAN"], ["INTEGER", "B"], ["a", "B"], ["A", "C"], ["BOOLEAN", "INTEGER"]>>)
type_check
numerical_negation
logical_negation
add_call_chain(<<C,C,BOOLEAN>>)
add_call_chain(<<c,C,D,A,A,BOOLEAN,D>>)
add_command("B", "d", <<["BOOLEAN", "INTEGER"], ["c", "INTEGER"], ["C", "BOOLEAN"], ["B", "INTEGER"], ["d", "BOOLEAN"], ["C", "B"], ["INTEGER", "BOOLEAN"]>>)
modulo
bool_value (false)
add_call_chain(<<B,B,c,B,c,B,D,a>>)
add_command("A", "D", <<["B", "INTEGER"]>>)
add_command("C", "B", <<["b", "e"], ["a", "BOOLEAN"], ["D", "C"], ["D", "BOOLEAN"], ["b", "INTEGER"], ["a", "BOOLEAN"], ["A", "INTEGER"], ["D", "d"]>>)
logical_negation
type_check
greater_than
generate_java_code
add_call_chain(<<C,c,e,e,d>>)
bool_value (false)
int_value (39)
add_call_chain(<<BOOLEAN,e>>)
numerical_negation
add_call_chain(<<BOOLEAN,b,B,C,D,B>>)
add_query("BOOLEAN", "BOOLEAN", <<["A", "B"], ["e", "b"], ["BOOLEAN", "INTEGER"], ["a", "e"], ["B", "A"], ["B", "BOOLEAN"]>>, "d")
bool_value (false)
less_than
add_class(B)
add_command("D", "c", <<["A", "INTEGER"], ["C", "B"], ["b", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "d"], ["A", "b"], ["d", "INTEGER"], ["a", "BOOLEAN"]>>)
add_attribute("A", "d", "d")
add_class(C)
bool_value (true)
add_call_chain(<<e,B>>)
add_class(a)
conjunction
numerical_negation
add_call_chain(<<e,D,D,a>>)
add_query("D", "INTEGER", <<["A", "INTEGER"], ["B", "INTEGER"], ["a", "B"], ["B", "BOOLEAN"]>>, "a")
logical_negation
logical_negation
add_command("A", "c", <<["c", "INTEGER"], ["d", "BOOLEAN"], ["c", "c"], ["c", "BOOLEAN"], ["D", "d"], ["B", "BOOLEAN"], ["B", "INTEGER"]>>)
int_value (28)
add_attribute("a", "b", "BOOLEAN")
int_value (17)
add_query("A", "d", <<["b", "a"]>>, "d")
add_call_chain(<<C,A,B>>)
int_value (7)
add_class(a)
add_query("b", "B", <<["INTEGER", "BOOLEAN"], ["INTEGER", "INTEGER"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["D", "INTEGER"], ["a", "d"], ["A", "C"], ["D", "BOOLEAN"], ["A", "B"]>>, "d")
bool_value (true)
add_call_chain(<<d,a,B,a,a>>)
add_call_chain(<<A>>)
add_attribute("BOOLEAN", "A", "BOOLEAN")
add_attribute("INTEGER", "a", "BOOLEAN")
add_query("a", "D", <<["B", "C"], ["INTEGER", "BOOLEAN"], ["b", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["e", "a"], ["C", "BOOLEAN"], ["c", "INTEGER"], ["C", "INTEGER"], ["B", "INTEGER"]>>, "A")
less_than
logical_negation
bool_value (true)
bool_value (false)
subtraction
add_call_chain(<<C>>)
subtraction
conjunction
add_query("a", "INTEGER", <<["d", "BOOLEAN"], ["a", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["C", "INTEGER"]>>, "d")
generate_java_code
add_query("a", "C", <<["b", "BOOLEAN"], ["INTEGER", "INTEGER"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["A", "e"], ["d", "INTEGER"]>>, "a")
logical_negation
bool_value (true)
bool_value (false)
conjunction
greater_than
bool_value (false)
add_query("b", "c", <<["A", "A"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "C"], ["c", "b"], ["A", "BOOLEAN"]>>, "D")
add_query("D", "INTEGER", <<["b", "INTEGER"], ["a", "d"], ["e", "B"], ["B", "INTEGER"], ["B", "c"], ["b", "INTEGER"], ["A", "A"]>>, "a")
int_value (2)
greater_than
add_command("A", "D", <<["d", "BOOLEAN"], ["b", "C"], ["INTEGER", "INTEGER"], ["e", "INTEGER"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>)
bool_value (false)
modulo
numerical_negation
addition
int_value (36)
add_attribute("B", "D", "BOOLEAN")
multiplication
bool_value (false)
add_attribute("B", "BOOLEAN", "INTEGER")
int_value (8)
bool_value (false)
add_call_chain(<<a,INTEGER>>)
add_attribute("B", "C", "INTEGER")
less_than
add_class(e)
add_call_chain(<<a,A,INTEGER,B,D>>)
add_call_chain(<<d,e,BOOLEAN,b,A,A,D,a>>)
add_command("D", "b", <<["C", "d"], ["a", "INTEGER"]>>)
type_check
logical_negation
add_class(A)
logical_negation
logical_negation
add_query("b", "b", <<["C", "BOOLEAN"]>>, "c")
add_attribute("b", "b", "INTEGER")
add_command("A", "a", <<["b", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["e", "INTEGER"]>>)
addition
bool_value (true)
add_attribute("C", "C", "INTEGER")
numerical_negation
bool_value (false)
add_command("A", "B", <<["B", "BOOLEAN"], ["d", "BOOLEAN"], ["BOOLEAN", "e"], ["D", "B"], ["e", "D"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["B", "d"], ["c", "INTEGER"]>>)
disjunction
type_check
logical_negation
equals
type_check
addition
add_class(a)
add_query("B", "b", <<["d", "BOOLEAN"], ["B", "B"], ["e", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "BOOLEAN"]>>, "e")
add_call_chain(<<A,e,d,D,D>>)
bool_value (false)
add_command("e", "d", <<["D", "a"], ["C", "INTEGER"], ["a", "C"], ["B", "c"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["INTEGER", "INTEGER"], ["B", "BOOLEAN"]>>)
add_attribute("A", "d", "BOOLEAN")
add_call_chain(<<c,C,INTEGER,A,a,C,INTEGER,D,A>>)
bool_value (true)
add_call_chain(<<d,e,D,b,B,d,e,c>>)
type_check
add_attribute("B", "C", "A")
add_class(A)
add_query("c", "e", <<["C", "e"], ["e", "D"], ["C", "INTEGER"], ["D", "INTEGER"], ["B", "b"]>>, "INTEGER")
add_call_chain(<<e,a,A,B,d,INTEGER,a,D,e>>)
generate_java_code
generate_java_code
add_class(a)
generate_java_code
logical_negation
add_command("e", "B", <<["D", "INTEGER"], ["B", "b"]>>)
numerical_negation
add_command("d", "INTEGER", <<["C", "c"], ["D", "INTEGER"], ["A", "b"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "BOOLEAN"]>>)
int_value (25)
int_value (25)
add_call_chain(<<c,B,c,b,C,a,c,D>>)
add_attribute("INTEGER", "C", "INTEGER")
bool_value (true)
generate_java_code
modulo
conjunction
bool_value (false)
add_attribute("BOOLEAN", "BOOLEAN", "A")
add_attribute("B", "D", "BOOLEAN")
add_query("B", "B", <<["b", "INTEGER"], ["e", "INTEGER"], ["b", "INTEGER"], ["b", "INTEGER"], ["a", "INTEGER"], ["d", "d"], ["d", "INTEGER"]>>, "C")
less_than
bool_value (false)
generate_java_code
bool_value (false)
bool_value (true)
add_call_chain(<<INTEGER,C,b,c,e,INTEGER>>)
add_attribute("D", "e", "INTEGER")
add_query("B", "D", <<["C", "INTEGER"], ["B", "BOOLEAN"], ["e", "BOOLEAN"], ["d", "a"], ["D", "INTEGER"]>>, "d")
logical_negation
greater_than
type_check
logical_negation
add_call_chain(<<INTEGER,BOOLEAN,a,BOOLEAN,e,D,B,A,d>>)
numerical_negation
quotient
add_class(BOOLEAN)
add_call_chain(<<d>>)
int_value (39)
logical_negation
add_call_chain(<<b,b,c,b,d>>)
addition
numerical_negation
generate_java_code
add_query("d", "B", <<["e", "INTEGER"], ["e", "BOOLEAN"], ["B", "BOOLEAN"]>>, "BOOLEAN")
add_class(b)
add_class(C)
generate_java_code
add_call_chain(<<INTEGER,A,B,d,c,A>>)
logical_negation
disjunction
greater_than
greater_than
add_call_chain(<<INTEGER,a,a,INTEGER,C>>)
equals
numerical_negation
generate_java_code
numerical_negation
numerical_negation
add_call_chain(<<D,a,A,c,e,c,INTEGER,e>>)
int_value (42)
add_query("D", "B", <<["b", "BOOLEAN"], ["a", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "BOOLEAN"]>>, "A")
add_command("D", "d", <<["a", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["e", "BOOLEAN"], ["b", "INTEGER"]>>)
type_check
add_attribute("C", "a", "C")
add_attribute("c", "d", "INTEGER")
add_attribute("e", "B", "INTEGER")
bool_value (true)
add_call_chain(<<b,a,B,B,A,d,d,C>>)
add_call_chain(<<B,INTEGER,B,d>>)
add_query("d", "C", <<["B", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "INTEGER"], ["e", "BOOLEAN"], ["c", "B"], ["C", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>, "B")
add_call_chain(<<A,D,d,e,d,d>>)
generate_java_code
bool_value (true)
add_command("A", "b", <<["c", "D"], ["A", "INTEGER"], ["e", "BOOLEAN"], ["c", "INTEGER"], ["e", "b"], ["a", "BOOLEAN"], ["a", "e"]>>)
bool_value (false)
