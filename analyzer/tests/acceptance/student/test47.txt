logical_negation
int_value (29)
add_attribute("c", "d", "INTEGER")
greater_than
add_query("A", "B", <<["d", "INTEGER"]>>, "d")
subtraction
add_attribute("B", "A", "BOOLEAN")
generate_java_code
conjunction
logical_negation
int_value (35)
disjunction
numerical_negation
add_attribute("b", "d", "BOOLEAN")
int_value (48)
add_call_chain(<<B,D,C,A,D,B,B,INTEGER>>)
int_value (29)
add_call_chain(<<b,c,B,D,A,b,D,B,A>>)
add_command("e", "C", <<["B", "b"], ["B", "INTEGER"], ["B", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "INTEGER"], ["C", "e"], ["B", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
add_attribute("B", "D", "BOOLEAN")
type_check
add_query("b", "C", <<["c", "INTEGER"], ["a", "INTEGER"], ["D", "d"], ["BOOLEAN", "BOOLEAN"], ["c", "INTEGER"], ["INTEGER", "BOOLEAN"]>>, "C")
add_query("e", "D", <<["c", "BOOLEAN"], ["INTEGER", "INTEGER"], ["d", "INTEGER"]>>, "e")
int_value (22)
add_class(d)
logical_negation
numerical_negation
bool_value (false)
greater_than
add_query("C", "INTEGER", <<["D", "e"]>>, "b")
type_check
add_attribute("BOOLEAN", "D", "c")
disjunction
type_check
logical_negation
add_call_chain(<<D,B,B,B>>)
int_value (49)
numerical_negation
bool_value (false)
logical_negation
int_value (36)
add_command("B", "e", <<["e", "A"], ["C", "INTEGER"], ["d", "BOOLEAN"], ["B", "b"]>>)
multiplication
add_command("B", "c", <<["b", "BOOLEAN"], ["BOOLEAN", "d"], ["C", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "BOOLEAN"]>>)
add_attribute("e", "B", "INTEGER")
add_query("D", "C", <<["B", "BOOLEAN"], ["a", "INTEGER"], ["C", "INTEGER"], ["d", "BOOLEAN"], ["e", "BOOLEAN"]>>, "c")
add_query("b", "D", <<["b", "BOOLEAN"], ["B", "B"], ["b", "BOOLEAN"], ["D", "D"], ["b", "BOOLEAN"], ["c", "B"], ["b", "INTEGER"], ["INTEGER", "BOOLEAN"], ["d", "D"]>>, "D")
add_attribute("D", "c", "C")
int_value (10)
addition
add_call_chain(<<c,A>>)
add_attribute("b", "B", "A")
add_call_chain(<<B,C>>)
logical_negation
bool_value (true)
add_class(b)
add_attribute("D", "D", "A")
numerical_negation
add_call_chain(<<b,D>>)
add_call_chain(<<B,d,e,INTEGER,b,a,e>>)
type_check
int_value (45)
numerical_negation
less_than
logical_negation
bool_value (false)
type_check
conjunction
add_command("D", "D", <<["d", "a"], ["e", "D"], ["D", "e"], ["b", "BOOLEAN"]>>)
bool_value (true)
bool_value (true)
numerical_negation
int_value (37)
bool_value (false)
generate_java_code
add_command("d", "b", <<["C", "B"], ["b", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "BOOLEAN"], ["a", "e"]>>)
generate_java_code
conjunction
equals
int_value (47)
type_check
add_query("BOOLEAN", "d", <<["D", "d"], ["c", "BOOLEAN"], ["d", "A"]>>, "c")
add_attribute("b", "D", "b")
bool_value (false)
add_attribute("A", "a", "BOOLEAN")
add_attribute("d", "c", "BOOLEAN")
logical_negation
add_call_chain(<<BOOLEAN,A>>)
numerical_negation
add_query("B", "e", <<["D", "INTEGER"], ["a", "INTEGER"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["D", "a"], ["B", "B"], ["D", "BOOLEAN"]>>, "a")
int_value (8)
int_value (47)
int_value (38)
add_call_chain(<<b,B,B>>)
less_than
conjunction
conjunction
add_query("A", "A", <<["e", "INTEGER"], ["e", "BOOLEAN"], ["c", "BOOLEAN"], ["INTEGER", "D"], ["B", "INTEGER"], ["c", "C"], ["B", "INTEGER"], ["BOOLEAN", "INTEGER"]>>, "C")
numerical_negation
int_value (42)
type_check
numerical_negation
add_class(C)
numerical_negation
add_call_chain(<<A,b>>)
logical_negation
add_call_chain(<<A,BOOLEAN,a,A,b>>)
add_call_chain(<<b,b,b,e,D,B,B>>)
generate_java_code
add_query("b", "C", <<["B", "d"], ["d", "BOOLEAN"], ["B", "C"]>>, "A")
add_command("B", "b", <<["D", "INTEGER"], ["C", "INTEGER"], ["c", "INTEGER"], ["INTEGER", "INTEGER"], ["d", "INTEGER"], ["A", "BOOLEAN"]>>)
add_command("e", "A", <<["C", "INTEGER"], ["A", "e"], ["D", "INTEGER"], ["INTEGER", "INTEGER"], ["e", "a"], ["e", "INTEGER"], ["B", "INTEGER"], ["e", "C"], ["e", "d"]>>)
generate_java_code
add_query("INTEGER", "a", <<["c", "D"], ["e", "INTEGER"], ["A", "b"], ["B", "INTEGER"], ["d", "INTEGER"]>>, "B")
logical_negation
logical_negation
add_call_chain(<<A,D,a,d,C,A,d,D,A>>)
add_call_chain(<<D>>)
logical_negation
int_value (22)
add_query("d", "e", <<["B", "BOOLEAN"], ["D", "INTEGER"]>>, "A")
add_query("BOOLEAN", "D", <<["A", "INTEGER"], ["D", "b"], ["D", "BOOLEAN"], ["C", "BOOLEAN"], ["INTEGER", "a"], ["e", "INTEGER"]>>, "b")
logical_negation
add_command("C", "A", <<["b", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "A"], ["b", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "B"], ["BOOLEAN", "BOOLEAN"], ["C", "INTEGER"], ["a", "e"]>>)
type_check
add_call_chain(<<e>>)
generate_java_code
add_command("B", "e", <<["C", "A"], ["a", "e"], ["b", "INTEGER"], ["INTEGER", "INTEGER"], ["INTEGER", "e"], ["INTEGER", "BOOLEAN"]>>)
numerical_negation
int_value (30)
add_call_chain(<<b,c,d,A,C,D,C,e>>)
add_command("d", "c", <<["D", "A"], ["D", "BOOLEAN"], ["A", "d"], ["e", "d"], ["C", "BOOLEAN"]>>)
type_check
add_call_chain(<<e,D,d,c,C,BOOLEAN,d,D,d>>)
bool_value (false)
add_command("a", "D", <<["D", "BOOLEAN"], ["A", "B"], ["e", "INTEGER"], ["D", "INTEGER"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["d", "INTEGER"]>>)
add_query("b", "a", <<["B", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["A", "e"]>>, "d")
add_attribute("e", "INTEGER", "BOOLEAN")
bool_value (true)
numerical_negation
add_attribute("D", "d", "INTEGER")
add_query("BOOLEAN", "e", <<["C", "INTEGER"], ["e", "INTEGER"], ["BOOLEAN", "a"], ["INTEGER", "INTEGER"], ["D", "INTEGER"], ["D", "B"], ["d", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "e"]>>, "A")
add_call_chain(<<C,a,A,b,e>>)
numerical_negation
int_value (1)
add_call_chain(<<INTEGER,b,a,b,D,C,A,C,d>>)
logical_negation
addition
add_call_chain(<<a,C,a,c,c,C,d>>)
int_value (13)
add_call_chain(<<a,e,d,e,D>>)
int_value (21)
logical_negation
add_call_chain(<<b,BOOLEAN,C,B>>)
greater_than
quotient
numerical_negation
add_call_chain(<<d,A,c,b,a>>)
add_command("b", "d", <<["B", "INTEGER"], ["a", "BOOLEAN"], ["D", "A"], ["b", "b"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "INTEGER"]>>)
logical_negation
add_call_chain(<<c,d,B,B,INTEGER,a>>)
