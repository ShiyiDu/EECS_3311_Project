add_attribute("d", "C", "A")
disjunction
bool_value (false)
add_query("d", "BOOLEAN", <<["C", "INTEGER"], ["c", "BOOLEAN"]>>, "e")
numerical_negation
less_than
add_query("B", "D", <<["B", "BOOLEAN"], ["C", "D"], ["C", "BOOLEAN"], ["b", "a"]>>, "A")
add_call_chain(<<a,D>>)
add_query("b", "D", <<["C", "INTEGER"], ["B", "INTEGER"], ["C", "INTEGER"], ["e", "BOOLEAN"], ["D", "e"]>>, "D")
add_call_chain(<<INTEGER,B>>)
type_check
add_call_chain(<<a,A,C,C,e>>)
add_query("D", "D", <<["a", "INTEGER"], ["c", "B"], ["BOOLEAN", "INTEGER"], ["a", "BOOLEAN"], ["a", "INTEGER"], ["B", "BOOLEAN"], ["A", "INTEGER"]>>, "B")
conjunction
add_attribute("d", "e", "INTEGER")
add_class(a)
generate_java_code
add_call_chain(<<b,B,c>>)
numerical_negation
numerical_negation
int_value (45)
equals
add_call_chain(<<b,C,c,D,e>>)
less_than
int_value (14)
quotient
add_call_chain(<<INTEGER,D,INTEGER,c,D,D>>)
add_attribute("a", "e", "a")
add_class(B)
add_attribute("C", "e", "d")
generate_java_code
add_command("A", "e", <<["D", "d"]>>)
add_attribute("b", "c", "INTEGER")
add_attribute("b", "BOOLEAN", "INTEGER")
add_query("B", "BOOLEAN", <<["D", "INTEGER"], ["A", "A"], ["e", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "INTEGER"]>>, "D")
generate_java_code
add_query("e", "D", <<["B", "BOOLEAN"], ["B", "INTEGER"], ["BOOLEAN", "e"], ["C", "D"], ["c", "C"], ["e", "BOOLEAN"], ["B", "A"], ["INTEGER", "BOOLEAN"]>>, "b")
add_attribute("d", "B", "INTEGER")
disjunction
int_value (1)
subtraction
add_attribute("C", "C", "INTEGER")
bool_value (false)
int_value (46)
generate_java_code
logical_negation
add_attribute("c", "C", "a")
conjunction
add_command("e", "D", <<["c", "BOOLEAN"], ["a", "INTEGER"], ["a", "INTEGER"], ["A", "A"], ["A", "BOOLEAN"], ["C", "BOOLEAN"]>>)
add_query("e", "C", <<["D", "b"], ["b", "BOOLEAN"], ["d", "INTEGER"], ["C", "INTEGER"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "INTEGER"]>>, "A")
equals
add_query("BOOLEAN", "INTEGER", <<["A", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["B", "d"]>>, "BOOLEAN")
add_call_chain(<<BOOLEAN,INTEGER,c,C,d,a,d,a>>)
type_check
add_command("a", "D", <<["B", "BOOLEAN"]>>)
add_command("C", "e", <<["B", "INTEGER"]>>)
add_call_chain(<<D,A,e,C>>)
add_query("a", "c", <<["D", "a"], ["d", "INTEGER"], ["C", "INTEGER"]>>, "INTEGER")
bool_value (true)
bool_value (false)
add_command("b", "D", <<["BOOLEAN", "b"], ["b", "D"], ["d", "INTEGER"], ["C", "BOOLEAN"]>>)
add_call_chain(<<d,D,A,BOOLEAN,b,D>>)
int_value (30)
generate_java_code
numerical_negation
numerical_negation
equals
add_call_chain(<<b>>)
add_attribute("b", "B", "INTEGER")
add_command("b", "A", <<["D", "A"], ["INTEGER", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "a"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "INTEGER"], ["c", "A"], ["INTEGER", "BOOLEAN"]>>)
add_query("a", "C", <<["d", "INTEGER"], ["INTEGER", "INTEGER"], ["B", "BOOLEAN"], ["C", "INTEGER"], ["INTEGER", "B"], ["b", "BOOLEAN"], ["D", "BOOLEAN"]>>, "B")
int_value (23)
add_call_chain(<<b,C,a,B,e,INTEGER,B,B,C>>)
add_query("D", "c", <<["C", "C"], ["c", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "INTEGER"], ["b", "D"], ["D", "e"], ["B", "C"], ["c", "BOOLEAN"], ["e", "C"]>>, "b")
add_attribute("d", "A", "BOOLEAN")
add_query("BOOLEAN", "d", <<["A", "INTEGER"], ["a", "a"], ["C", "BOOLEAN"], ["A", "b"], ["a", "INTEGER"], ["D", "INTEGER"]>>, "c")
add_call_chain(<<d,c,a>>)
bool_value (false)
add_class(D)
add_command("c", "c", <<["BOOLEAN", "b"], ["B", "INTEGER"], ["a", "INTEGER"], ["B", "a"], ["d", "INTEGER"], ["B", "A"], ["C", "BOOLEAN"], ["c", "INTEGER"]>>)
add_query("A", "d", <<["BOOLEAN", "INTEGER"], ["A", "BOOLEAN"], ["e", "INTEGER"], ["D", "BOOLEAN"], ["C", "D"], ["D", "e"], ["A", "INTEGER"], ["C", "INTEGER"]>>, "C")
add_attribute("INTEGER", "A", "d")
add_call_chain(<<b,e,D,B,B>>)
numerical_negation
add_call_chain(<<e,e,d,D>>)
int_value (32)
logical_negation
int_value (17)
add_query("c", "D", <<["b", "INTEGER"], ["A", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "D"], ["B", "b"], ["d", "BOOLEAN"], ["A", "A"], ["d", "BOOLEAN"]>>, "D")
add_attribute("B", "B", "BOOLEAN")
numerical_negation
bool_value (false)
greater_than
add_class(c)
greater_than
add_query("d", "C", <<["A", "BOOLEAN"], ["INTEGER", "d"], ["D", "e"], ["C", "BOOLEAN"], ["INTEGER", "INTEGER"], ["B", "D"], ["INTEGER", "D"], ["B", "BOOLEAN"], ["C", "A"]>>, "BOOLEAN")
add_query("B", "A", <<["D", "INTEGER"], ["C", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "INTEGER"], ["D", "c"], ["e", "INTEGER"], ["b", "INTEGER"], ["b", "B"], ["d", "c"]>>, "C")
add_call_chain(<<A>>)
add_attribute("e", "c", "D")
add_class(INTEGER)
type_check
int_value (46)
add_attribute("e", "a", "BOOLEAN")
add_query("d", "e", <<["e", "BOOLEAN"], ["D", "D"], ["a", "A"], ["D", "INTEGER"], ["a", "INTEGER"], ["D", "BOOLEAN"], ["d", "BOOLEAN"], ["d", "INTEGER"]>>, "B")
bool_value (true)
modulo
disjunction
add_command("B", "BOOLEAN", <<["B", "INTEGER"], ["e", "BOOLEAN"], ["D", "INTEGER"], ["e", "INTEGER"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["d", "D"], ["c", "INTEGER"], ["a", "BOOLEAN"]>>)
subtraction
disjunction
conjunction
add_class(a)
add_attribute("d", "e", "d")
add_call_chain(<<b,C,d,e,a>>)
add_call_chain(<<C,INTEGER,c>>)
add_attribute("B", "C", "INTEGER")
add_class(A)
bool_value (false)
add_attribute("a", "A", "BOOLEAN")
add_command("D", "c", <<["C", "BOOLEAN"]>>)
add_call_chain(<<d>>)
add_call_chain(<<c,C,a,D,B,A,BOOLEAN,a>>)
add_call_chain(<<B,B,e,d,b,C,BOOLEAN,C,e>>)
add_call_chain(<<D,B,D,c,b,A,a>>)
add_call_chain(<<a,INTEGER,d,d,C,B,B,B,INTEGER>>)
bool_value (false)
add_command("BOOLEAN", "D", <<["A", "b"], ["d", "INTEGER"], ["A", "BOOLEAN"], ["c", "A"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["D", "BOOLEAN"]>>)
numerical_negation
equals
int_value (29)
logical_negation
generate_java_code
add_query("a", "d", <<["e", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["e", "INTEGER"], ["c", "INTEGER"], ["a", "c"], ["d", "BOOLEAN"], ["A", "INTEGER"], ["e", "BOOLEAN"], ["D", "INTEGER"]>>, "D")
add_command("c", "d", <<["c", "INTEGER"], ["D", "INTEGER"]>>)
add_command("C", "a", <<["d", "INTEGER"], ["BOOLEAN", "B"]>>)
int_value (25)
bool_value (false)
add_query("C", "B", <<["BOOLEAN", "INTEGER"], ["C", "BOOLEAN"], ["A", "A"], ["BOOLEAN", "INTEGER"], ["d", "INTEGER"], ["d", "BOOLEAN"], ["b", "BOOLEAN"]>>, "INTEGER")
add_call_chain(<<a,A,A,d>>)
add_call_chain(<<d,C,BOOLEAN,c,a,BOOLEAN,C>>)
add_call_chain(<<A,A,B,C,C,INTEGER,d,B>>)
logical_negation
modulo
add_call_chain(<<e,B,C,c,C,C>>)
equals
type_check
quotient
add_call_chain(<<b>>)
add_query("c", "b", <<["B", "B"]>>, "e")
bool_value (false)
int_value (15)
add_call_chain(<<a,C,A,c,e,B,D,D>>)
add_query("B", "e", <<["C", "d"], ["B", "INTEGER"], ["D", "INTEGER"], ["a", "INTEGER"], ["A", "INTEGER"], ["e", "BOOLEAN"], ["c", "BOOLEAN"], ["b", "BOOLEAN"]>>, "e")
add_attribute("B", "D", "INTEGER")
bool_value (true)
numerical_negation
int_value (31)
bool_value (true)
disjunction
add_command("D", "d", <<["d", "D"], ["D", "INTEGER"], ["B", "INTEGER"], ["b", "BOOLEAN"], ["a", "B"], ["B", "A"], ["c", "d"]>>)
add_call_chain(<<D,INTEGER,d,INTEGER,A,C,b>>)
add_attribute("D", "C", "A")
numerical_negation
add_command("B", "c", <<["BOOLEAN", "INTEGER"], ["BOOLEAN", "INTEGER"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["B", "A"]>>)
conjunction
bool_value (false)
add_class(e)
int_value (23)
numerical_negation
conjunction
add_call_chain(<<c>>)
generate_java_code
numerical_negation
equals
add_call_chain(<<D,D,INTEGER>>)
numerical_negation
type_check
int_value (49)
bool_value (true)
int_value (15)
bool_value (true)
disjunction
bool_value (false)
numerical_negation
add_call_chain(<<b,a>>)
conjunction
bool_value (false)
logical_negation
generate_java_code
int_value (42)
equals
numerical_negation
int_value (31)
add_call_chain(<<c,B,e,e,d,C,e,BOOLEAN,D>>)
addition
add_call_chain(<<c,B,a,C,e,b,INTEGER,C>>)
conjunction
numerical_negation
add_attribute("b", "D", "BOOLEAN")
bool_value (true)
bool_value (false)
add_call_chain(<<c,c,D,A>>)
equals
bool_value (false)
add_query("c", "c", <<["D", "a"], ["C", "D"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["BOOLEAN", "e"], ["b", "INTEGER"], ["b", "INTEGER"]>>, "c")
add_class(B)
add_attribute("BOOLEAN", "INTEGER", "BOOLEAN")
add_class(D)
add_attribute("D", "D", "BOOLEAN")
add_command("A", "d", <<["D", "B"], ["B", "B"], ["c", "INTEGER"], ["D", "INTEGER"], ["d", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
add_attribute("INTEGER", "INTEGER", "BOOLEAN")
type_check
add_call_chain(<<D,b,C,B>>)
add_call_chain(<<A,b>>)
add_command("D", "B", <<["D", "INTEGER"], ["C", "BOOLEAN"], ["e", "BOOLEAN"], ["c", "D"], ["c", "e"], ["e", "b"], ["e", "BOOLEAN"]>>)
add_class(D)
numerical_negation
logical_negation
