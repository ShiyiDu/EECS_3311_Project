add_call_chain(<<a,B,D,B,d>>)
logical_negation
numerical_negation
disjunction
bool_value (false)
int_value (17)
add_call_chain(<<A,C,B>>)
add_query("A", "D", <<["B", "a"], ["D", "C"], ["BOOLEAN", "BOOLEAN"], ["a", "INTEGER"]>>, "d")
add_attribute("b", "INTEGER", "BOOLEAN")
numerical_negation
type_check
less_than
add_command("INTEGER", "a", <<["D", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "a"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "BOOLEAN"]>>)
int_value (24)
bool_value (true)
disjunction
add_command("e", "a", <<["A", "d"], ["a", "a"], ["D", "INTEGER"], ["D", "INTEGER"], ["c", "INTEGER"], ["b", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "INTEGER"]>>)
add_query("B", "C", <<["b", "BOOLEAN"], ["e", "a"], ["D", "INTEGER"], ["D", "INTEGER"], ["c", "BOOLEAN"], ["d", "B"], ["e", "BOOLEAN"], ["A", "BOOLEAN"]>>, "A")
add_call_chain(<<d,d,D>>)
add_query("b", "e", <<["B", "B"], ["BOOLEAN", "BOOLEAN"], ["d", "INTEGER"], ["B", "INTEGER"], ["D", "INTEGER"], ["a", "INTEGER"], ["d", "INTEGER"]>>, "A")
add_call_chain(<<A,b,B,d,BOOLEAN,INTEGER>>)
add_command("d", "e", <<["e", "BOOLEAN"]>>)
type_check
numerical_negation
numerical_negation
add_query("A", "c", <<["D", "INTEGER"]>>, "INTEGER")
type_check
bool_value (false)
add_query("B", "D", <<["c", "INTEGER"]>>, "d")
add_command("B", "D", <<["BOOLEAN", "BOOLEAN"]>>)
bool_value (false)
add_command("a", "C", <<["d", "INTEGER"], ["b", "BOOLEAN"]>>)
generate_java_code
int_value (9)
add_query("D", "BOOLEAN", <<["d", "INTEGER"], ["A", "b"], ["C", "BOOLEAN"], ["C", "e"], ["INTEGER", "D"], ["BOOLEAN", "BOOLEAN"]>>, "C")
greater_than
add_attribute("C", "a", "D")
int_value (23)
add_call_chain(<<c>>)
logical_negation
add_call_chain(<<a>>)
numerical_negation
generate_java_code
conjunction
add_attribute("B", "A", "INTEGER")
add_query("C", "C", <<["C", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["INTEGER", "INTEGER"]>>, "C")
logical_negation
bool_value (false)
multiplication
modulo
add_command("INTEGER", "B", <<["d", "INTEGER"], ["a", "INTEGER"], ["C", "INTEGER"], ["c", "INTEGER"], ["A", "BOOLEAN"], ["A", "INTEGER"], ["A", "a"]>>)
add_call_chain(<<A,d,e>>)
add_class(a)
bool_value (false)
type_check
add_call_chain(<<d,C,D,a,c,d>>)
numerical_negation
bool_value (true)
add_class(A)
numerical_negation
logical_negation
add_attribute("A", "B", "BOOLEAN")
int_value (12)
int_value (20)
bool_value (true)
add_attribute("e", "d", "INTEGER")
add_query("d", "D", <<["A", "BOOLEAN"], ["b", "BOOLEAN"], ["b", "BOOLEAN"], ["b", "e"], ["INTEGER", "b"], ["INTEGER", "INTEGER"]>>, "A")
add_query("c", "c", <<["A", "BOOLEAN"], ["a", "INTEGER"], ["B", "B"], ["c", "BOOLEAN"], ["d", "INTEGER"]>>, "C")
add_call_chain(<<b,C,A,a,D,e,b,b,e>>)
conjunction
add_query("d", "D", <<["C", "INTEGER"], ["B", "BOOLEAN"]>>, "C")
logical_negation
addition
equals
add_attribute("d", "D", "BOOLEAN")
logical_negation
add_command("A", "BOOLEAN", <<["B", "INTEGER"], ["D", "d"], ["A", "INTEGER"], ["INTEGER", "BOOLEAN"], ["B", "A"], ["A", "INTEGER"], ["A", "BOOLEAN"], ["d", "a"]>>)
bool_value (false)
add_class(d)
add_query("B", "INTEGER", <<["B", "INTEGER"], ["d", "d"], ["C", "INTEGER"], ["a", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["d", "BOOLEAN"], ["e", "INTEGER"]>>, "B")
type_check
add_call_chain(<<BOOLEAN,d>>)
bool_value (false)
add_query("A", "B", <<["C", "BOOLEAN"], ["d", "INTEGER"], ["C", "INTEGER"], ["a", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "INTEGER"], ["C", "INTEGER"]>>, "A")
bool_value (false)
generate_java_code
logical_negation
add_class(B)
addition
add_call_chain(<<A>>)
addition
type_check
add_class(d)
add_call_chain(<<e,e,D,e,a,C,c,e,INTEGER>>)
add_attribute("B", "c", "INTEGER")
add_command("D", "C", <<["d", "INTEGER"], ["B", "BOOLEAN"], ["C", "INTEGER"], ["C", "A"], ["BOOLEAN", "BOOLEAN"], ["D", "B"], ["B", "BOOLEAN"]>>)
int_value (46)
generate_java_code
bool_value (true)
modulo
add_query("d", "b", <<["B", "b"]>>, "B")
add_class(D)
add_command("d", "d", <<["A", "a"]>>)
logical_negation
add_attribute("A", "e", "BOOLEAN")
add_call_chain(<<B,BOOLEAN,c,d,d,b,A,B>>)
add_call_chain(<<B,a,c,b,D,B,A,INTEGER>>)
add_query("e", "B", <<["b", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "D"], ["B", "INTEGER"]>>, "C")
less_than
logical_negation
logical_negation
logical_negation
add_query("B", "D", <<["e", "BOOLEAN"], ["d", "a"], ["a", "B"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "INTEGER"]>>, "a")
bool_value (true)
type_check
add_query("d", "D", <<["A", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["BOOLEAN", "INTEGER"], ["e", "A"], ["a", "BOOLEAN"], ["b", "INTEGER"], ["c", "b"]>>, "INTEGER")
add_attribute("D", "C", "BOOLEAN")
generate_java_code
generate_java_code
add_query("A", "B", <<["A", "C"], ["B", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["c", "d"], ["d", "a"], ["D", "INTEGER"]>>, "A")
int_value (18)
add_command("B", "B", <<["C", "BOOLEAN"], ["d", "INTEGER"], ["D", "B"], ["B", "c"], ["b", "INTEGER"], ["D", "BOOLEAN"]>>)
generate_java_code
add_command("B", "a", <<["D", "INTEGER"], ["INTEGER", "BOOLEAN"], ["C", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "c"], ["b", "INTEGER"], ["c", "D"]>>)
add_call_chain(<<B,e,INTEGER,c>>)
bool_value (false)
add_query("C", "A", <<["a", "d"], ["C", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "BOOLEAN"]>>, "A")
type_check
bool_value (true)
logical_negation
disjunction
bool_value (true)
add_class(A)
logical_negation
quotient
type_check
greater_than
numerical_negation
int_value (13)
add_query("C", "c", <<["d", "BOOLEAN"], ["b", "A"]>>, "b")
add_call_chain(<<A,c,b>>)
add_call_chain(<<C>>)
add_query("INTEGER", "A", <<["a", "d"], ["INTEGER", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["B", "INTEGER"], ["B", "C"], ["e", "BOOLEAN"], ["b", "INTEGER"], ["D", "A"], ["c", "C"]>>, "C")
type_check
add_attribute("A", "B", "BOOLEAN")
add_query("BOOLEAN", "D", <<["D", "INTEGER"], ["c", "INTEGER"], ["B", "A"], ["a", "e"], ["B", "INTEGER"]>>, "d")
add_call_chain(<<D,INTEGER,d,b,A,b>>)
int_value (36)
bool_value (false)
bool_value (true)
int_value (10)
type_check
addition
numerical_negation
add_call_chain(<<c,a,B,a,d,d,A,A>>)
add_query("a", "e", <<["B", "BOOLEAN"], ["a", "INTEGER"], ["B", "a"], ["INTEGER", "INTEGER"], ["c", "BOOLEAN"]>>, "BOOLEAN")
bool_value (false)
add_attribute("C", "a", "INTEGER")
generate_java_code
int_value (42)
add_class(d)
bool_value (true)
logical_negation
int_value (13)
int_value (37)
add_call_chain(<<A,C>>)
conjunction
logical_negation
int_value (37)
add_command("B", "a", <<["d", "BOOLEAN"], ["B", "INTEGER"], ["INTEGER", "C"], ["C", "A"], ["c", "c"]>>)
add_query("B", "D", <<["a", "INTEGER"], ["C", "INTEGER"], ["d", "INTEGER"], ["INTEGER", "INTEGER"], ["b", "c"]>>, "A")
add_query("b", "e", <<["c", "INTEGER"]>>, "BOOLEAN")
subtraction
add_attribute("A", "b", "INTEGER")
add_command("c", "c", <<["D", "INTEGER"], ["D", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["D", "INTEGER"], ["A", "D"], ["C", "BOOLEAN"]>>)
add_query("C", "B", <<["A", "a"], ["INTEGER", "b"], ["c", "D"], ["d", "d"]>>, "a")
generate_java_code
equals
int_value (48)
add_call_chain(<<B,d,c>>)
conjunction
add_call_chain(<<D,d,BOOLEAN>>)
add_command("d", "INTEGER", <<["c", "INTEGER"], ["c", "BOOLEAN"]>>)
add_class(b)
generate_java_code
conjunction
add_class(e)
bool_value (true)
numerical_negation
add_class(c)
add_call_chain(<<c,b,c,A,C,A,B>>)
equals
add_call_chain(<<C,b,B,INTEGER,c,B,B,B,c>>)
add_command("d", "B", <<["a", "BOOLEAN"], ["INTEGER", "INTEGER"], ["d", "BOOLEAN"], ["b", "INTEGER"], ["B", "BOOLEAN"], ["d", "e"], ["e", "C"], ["C", "BOOLEAN"]>>)
add_call_chain(<<C,D,e,A,B>>)
bool_value (true)
add_call_chain(<<BOOLEAN,e,a,D,B,A,C,A,D>>)
type_check
numerical_negation
generate_java_code
add_command("d", "C", <<["a", "BOOLEAN"], ["B", "INTEGER"], ["B", "c"], ["d", "c"], ["A", "BOOLEAN"], ["d", "BOOLEAN"]>>)
add_query("b", "D", <<["C", "BOOLEAN"]>>, "c")
generate_java_code
add_query("D", "A", <<["a", "INTEGER"], ["A", "BOOLEAN"]>>, "D")
numerical_negation
logical_negation
generate_java_code
add_attribute("A", "c", "BOOLEAN")
bool_value (true)
logical_negation
bool_value (true)
add_attribute("D", "A", "BOOLEAN")
disjunction
logical_negation
int_value (22)
logical_negation
add_command("B", "B", <<["A", "b"], ["c", "e"], ["b", "BOOLEAN"], ["B", "A"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["c", "a"], ["C", "INTEGER"]>>)
add_attribute("B", "e", "BOOLEAN")
add_call_chain(<<B>>)
type_check
int_value (31)
add_call_chain(<<C,d,d>>)
add_call_chain(<<d,a,e,B,D>>)
numerical_negation
add_attribute("A", "d", "BOOLEAN")
disjunction
int_value (35)
add_call_chain(<<A>>)
add_command("B", "b", <<["b", "INTEGER"], ["INTEGER", "INTEGER"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["A", "D"], ["C", "BOOLEAN"], ["e", "BOOLEAN"]>>)
generate_java_code
add_call_chain(<<e,a,C,a,INTEGER,d>>)
logical_negation
int_value (47)
greater_than
add_class(B)
int_value (17)
add_class(INTEGER)
generate_java_code
conjunction
add_call_chain(<<e,e,e,b,a,BOOLEAN,b,C>>)
bool_value (true)
