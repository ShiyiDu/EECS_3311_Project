add_command("BOOLEAN", "c", <<["INTEGER", "D"], ["d", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "INTEGER"], ["BOOLEAN", "INTEGER"], ["D", "BOOLEAN"], ["b", "BOOLEAN"], ["d", "e"]>>)
add_command("C", "BOOLEAN", <<["A", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["a", "BOOLEAN"]>>)
int_value (42)
logical_negation
subtraction
type_check
add_command("INTEGER", "A", <<["a", "INTEGER"], ["c", "INTEGER"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "c"], ["C", "INTEGER"], ["b", "a"]>>)
bool_value (false)
logical_negation
numerical_negation
int_value (36)
add_command("INTEGER", "d", <<["b", "INTEGER"], ["BOOLEAN", "b"], ["A", "B"], ["a", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "a"], ["b", "d"]>>)
bool_value (false)
add_call_chain(<<b,C,B,C,A,c,d,C>>)
bool_value (true)
numerical_negation
add_command("a", "b", <<["C", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["BOOLEAN", "C"], ["b", "INTEGER"]>>)
add_query("A", "d", <<["c", "BOOLEAN"], ["d", "BOOLEAN"]>>, "BOOLEAN")
add_attribute("e", "e", "D")
add_command("A", "c", <<["a", "BOOLEAN"], ["b", "BOOLEAN"]>>)
add_query("b", "C", <<["a", "INTEGER"], ["e", "BOOLEAN"], ["e", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "INTEGER"]>>, "INTEGER")
add_class(b)
numerical_negation
add_command("e", "BOOLEAN", <<["A", "INTEGER"]>>)
logical_negation
add_class(e)
add_command("c", "B", <<["c", "BOOLEAN"]>>)
add_command("e", "c", <<["BOOLEAN", "BOOLEAN"], ["B", "C"], ["D", "INTEGER"], ["d", "INTEGER"], ["e", "INTEGER"]>>)
add_query("B", "D", <<["e", "INTEGER"], ["D", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["b", "A"], ["d", "d"]>>, "e")
numerical_negation
add_query("b", "C", <<["B", "A"], ["BOOLEAN", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "INTEGER"], ["a", "INTEGER"], ["b", "D"]>>, "b")
add_call_chain(<<D,C,D,c,B>>)
multiplication
int_value (44)
conjunction
add_call_chain(<<D>>)
add_attribute("e", "a", "BOOLEAN")
add_query("c", "c", <<["B", "INTEGER"], ["D", "INTEGER"], ["B", "D"], ["B", "e"], ["d", "INTEGER"], ["D", "INTEGER"]>>, "C")
equals
add_command("D", "d", <<["e", "BOOLEAN"], ["D", "INTEGER"], ["A", "INTEGER"]>>)
add_attribute("e", "INTEGER", "INTEGER")
add_attribute("B", "INTEGER", "A")
int_value (39)
int_value (38)
add_command("BOOLEAN", "C", <<["b", "BOOLEAN"], ["c", "INTEGER"], ["B", "e"], ["B", "BOOLEAN"], ["b", "B"], ["d", "INTEGER"], ["D", "INTEGER"]>>)
numerical_negation
add_call_chain(<<e,a,B,c,c>>)
add_query("d", "C", <<["BOOLEAN", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["d", "BOOLEAN"]>>, "d")
add_query("B", "d", <<["C", "INTEGER"], ["b", "BOOLEAN"], ["e", "D"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["a", "b"], ["d", "INTEGER"], ["C", "C"], ["d", "BOOLEAN"]>>, "A")
greater_than
greater_than
bool_value (true)
disjunction
add_query("d", "d", <<["e", "c"], ["A", "a"], ["A", "d"], ["A", "BOOLEAN"], ["C", "c"]>>, "BOOLEAN")
add_call_chain(<<D,c,e,A,BOOLEAN,c,B,A,B>>)
numerical_negation
add_query("B", "B", <<["D", "INTEGER"], ["c", "INTEGER"], ["BOOLEAN", "c"], ["a", "BOOLEAN"]>>, "D")
add_command("d", "B", <<["b", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["c", "BOOLEAN"]>>)
add_call_chain(<<C,A,D>>)
int_value (31)
add_query("C", "c", <<["a", "d"], ["C", "B"], ["e", "BOOLEAN"]>>, "D")
greater_than
logical_negation
add_attribute("D", "D", "INTEGER")
add_command("BOOLEAN", "B", <<["e", "INTEGER"], ["c", "INTEGER"], ["BOOLEAN", "INTEGER"], ["c", "BOOLEAN"], ["A", "INTEGER"]>>)
add_attribute("c", "B", "BOOLEAN")
add_call_chain(<<C>>)
int_value (15)
add_call_chain(<<e,c,D,c,B>>)
numerical_negation
add_query("a", "INTEGER", <<["d", "INTEGER"], ["A", "A"], ["A", "INTEGER"], ["C", "d"]>>, "A")
add_query("a", "a", <<["e", "INTEGER"], ["a", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["a", "e"], ["b", "BOOLEAN"], ["C", "A"], ["C", "c"], ["d", "INTEGER"]>>, "INTEGER")
bool_value (true)
quotient
int_value (29)
less_than
add_class(B)
add_attribute("c", "b", "BOOLEAN")
generate_java_code
add_query("a", "B", <<["INTEGER", "INTEGER"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["A", "A"], ["B", "BOOLEAN"]>>, "b")
add_query("B", "BOOLEAN", <<["B", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "INTEGER"]>>, "d")
add_command("e", "B", <<["b", "INTEGER"], ["BOOLEAN", "INTEGER"], ["d", "BOOLEAN"], ["a", "d"], ["b", "c"], ["a", "a"], ["C", "INTEGER"], ["a", "INTEGER"], ["a", "A"]>>)
numerical_negation
add_class(D)
bool_value (false)
add_query("C", "b", <<["d", "INTEGER"], ["b", "BOOLEAN"], ["D", "A"], ["C", "INTEGER"], ["C", "INTEGER"], ["e", "INTEGER"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "INTEGER"]>>, "e")
numerical_negation
logical_negation
bool_value (true)
bool_value (true)
add_query("D", "c", <<["B", "BOOLEAN"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["d", "A"]>>, "C")
bool_value (true)
add_command("a", "D", <<["BOOLEAN", "A"], ["B", "INTEGER"], ["INTEGER", "INTEGER"], ["e", "BOOLEAN"]>>)
add_query("d", "d", <<["c", "INTEGER"], ["d", "INTEGER"], ["B", "INTEGER"], ["a", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "C"], ["D", "BOOLEAN"], ["a", "d"], ["BOOLEAN", "BOOLEAN"]>>, "C")
logical_negation
add_call_chain(<<D,c,c,C,C,C,C,BOOLEAN>>)
generate_java_code
subtraction
add_query("a", "A", <<["A", "INTEGER"]>>, "A")
generate_java_code
add_call_chain(<<B,a,B,D,d,e>>)
logical_negation
add_attribute("INTEGER", "C", "INTEGER")
add_call_chain(<<c,INTEGER,d,C,D,c,BOOLEAN>>)
greater_than
add_command("c", "BOOLEAN", <<["D", "C"], ["c", "INTEGER"], ["D", "BOOLEAN"]>>)
add_query("b", "D", <<["B", "BOOLEAN"], ["a", "b"], ["c", "e"], ["A", "A"], ["e", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "BOOLEAN"], ["e", "INTEGER"]>>, "INTEGER")
add_query("c", "c", <<["c", "d"], ["b", "INTEGER"], ["b", "INTEGER"], ["C", "INTEGER"], ["C", "INTEGER"], ["INTEGER", "INTEGER"]>>, "D")
add_query("a", "D", <<["b", "INTEGER"], ["D", "B"], ["c", "BOOLEAN"], ["d", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "INTEGER"], ["BOOLEAN", "INTEGER"]>>, "d")
add_call_chain(<<e,e,d,D,D>>)
add_attribute("B", "c", "D")
type_check
add_command("a", "D", <<["B", "BOOLEAN"], ["D", "BOOLEAN"]>>)
bool_value (true)
addition
add_attribute("c", "b", "c")
add_class(c)
add_query("C", "d", <<["D", "INTEGER"], ["b", "B"], ["b", "BOOLEAN"], ["D", "INTEGER"], ["e", "a"], ["a", "BOOLEAN"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["D", "BOOLEAN"]>>, "BOOLEAN")
numerical_negation
bool_value (true)
numerical_negation
add_query("B", "c", <<["B", "INTEGER"], ["D", "INTEGER"], ["A", "INTEGER"], ["e", "BOOLEAN"]>>, "D")
add_call_chain(<<b,d,A,c,A,e,A,a,d>>)
type_check
add_query("INTEGER", "a", <<["a", "D"], ["A", "INTEGER"], ["BOOLEAN", "INTEGER"], ["a", "C"], ["INTEGER", "B"]>>, "c")
add_call_chain(<<C,A,d,c,d>>)
add_query("b", "INTEGER", <<["b", "C"], ["INTEGER", "BOOLEAN"], ["C", "INTEGER"], ["A", "INTEGER"], ["c", "INTEGER"]>>, "BOOLEAN")
add_call_chain(<<e,d,b,d,A,D,D,d,C>>)
logical_negation
bool_value (true)
quotient
disjunction
int_value (44)
bool_value (true)
add_attribute("A", "INTEGER", "INTEGER")
add_query("d", "B", <<["C", "D"], ["BOOLEAN", "INTEGER"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "INTEGER"], ["d", "INTEGER"], ["C", "INTEGER"], ["C", "B"], ["e", "BOOLEAN"]>>, "B")
add_command("C", "INTEGER", <<["A", "BOOLEAN"], ["b", "D"], ["B", "INTEGER"]>>)
add_call_chain(<<D,BOOLEAN,C,INTEGER,d,D>>)
add_command("C", "A", <<["A", "INTEGER"], ["d", "INTEGER"], ["a", "BOOLEAN"], ["C", "INTEGER"], ["d", "INTEGER"], ["b", "INTEGER"], ["C", "BOOLEAN"]>>)
int_value (27)
conjunction
logical_negation
less_than
add_command("b", "B", <<["d", "d"], ["c", "INTEGER"], ["B", "a"], ["e", "INTEGER"], ["C", "INTEGER"], ["a", "b"], ["d", "INTEGER"]>>)
bool_value (true)
add_query("c", "C", <<["B", "BOOLEAN"]>>, "c")
type_check
bool_value (false)
int_value (2)
add_attribute("b", "C", "B")
logical_negation
add_attribute("c", "c", "INTEGER")
add_command("a", "b", <<["b", "BOOLEAN"], ["e", "b"], ["C", "INTEGER"], ["d", "BOOLEAN"]>>)
multiplication
add_command("B", "b", <<["c", "c"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "BOOLEAN"]>>)
bool_value (false)
conjunction
add_class(D)
numerical_negation
add_call_chain(<<a,A,INTEGER,e>>)
generate_java_code
quotient
add_call_chain(<<b,B,b,e,e,a,B>>)
add_call_chain(<<C,D,e,a>>)
numerical_negation
add_attribute("D", "BOOLEAN", "a")
int_value (49)
numerical_negation
add_call_chain(<<B,B,C,c,C,INTEGER>>)
add_call_chain(<<c,D,C,c,a,b,d,A,A>>)
add_command("a", "e", <<["INTEGER", "INTEGER"], ["D", "b"], ["b", "BOOLEAN"]>>)
add_command("C", "D", <<["b", "INTEGER"], ["d", "INTEGER"], ["C", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "d"], ["a", "INTEGER"]>>)
bool_value (false)
quotient
type_check
add_attribute("C", "B", "b")
logical_negation
add_query("BOOLEAN", "d", <<["a", "INTEGER"], ["d", "INTEGER"], ["D", "D"]>>, "C")
add_call_chain(<<e,B,b,C,e,A,c>>)
logical_negation
bool_value (false)
disjunction
add_query("B", "b", <<["b", "BOOLEAN"]>>, "C")
add_query("d", "D", <<["D", "c"]>>, "b")
add_call_chain(<<d,a,D,B,c,A,b,A>>)
numerical_negation
add_command("C", "a", <<["B", "INTEGER"], ["c", "C"], ["e", "BOOLEAN"], ["C", "INTEGER"]>>)
add_attribute("b", "d", "INTEGER")
add_call_chain(<<e,INTEGER,a,a,BOOLEAN,a,BOOLEAN,c,a>>)
add_call_chain(<<e,B,BOOLEAN,d>>)
add_call_chain(<<A,a,e>>)
bool_value (true)
int_value (26)
add_call_chain(<<C,C,A,b>>)
add_command("d", "D", <<["c", "INTEGER"], ["a", "INTEGER"], ["e", "a"]>>)
conjunction
add_class(BOOLEAN)
add_attribute("D", "D", "INTEGER")
conjunction
add_attribute("e", "c", "INTEGER")
less_than
add_command("c", "D", <<["b", "INTEGER"], ["BOOLEAN", "c"], ["B", "INTEGER"], ["D", "INTEGER"]>>)
add_query("a", "c", <<["a", "INTEGER"], ["d", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["B", "INTEGER"]>>, "D")
bool_value (true)
numerical_negation
add_query("a", "A", <<["A", "C"], ["e", "INTEGER"], ["B", "INTEGER"], ["A", "INTEGER"], ["A", "b"], ["d", "e"], ["A", "BOOLEAN"], ["a", "d"]>>, "A")
int_value (4)
add_call_chain(<<C,C,a,C,a,A,b>>)
add_query("d", "d", <<["a", "d"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["D", "INTEGER"], ["D", "D"], ["D", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "BOOLEAN"]>>, "D")
addition
add_query("C", "BOOLEAN", <<["d", "INTEGER"], ["D", "D"], ["c", "INTEGER"], ["B", "BOOLEAN"]>>, "d")
add_attribute("c", "INTEGER", "d")
add_query("a", "a", <<["e", "INTEGER"], ["B", "INTEGER"], ["e", "b"], ["d", "C"], ["B", "INTEGER"], ["B", "BOOLEAN"]>>, "A")
bool_value (true)
add_class(D)
add_command("BOOLEAN", "d", <<["d", "INTEGER"], ["B", "INTEGER"], ["C", "D"], ["BOOLEAN", "INTEGER"], ["c", "INTEGER"], ["e", "INTEGER"], ["D", "BOOLEAN"], ["b", "A"]>>)
int_value (44)
bool_value (false)
numerical_negation
numerical_negation
bool_value (true)
add_command("e", "D", <<["c", "D"], ["D", "BOOLEAN"]>>)
int_value (5)
type_check
bool_value (true)
greater_than
