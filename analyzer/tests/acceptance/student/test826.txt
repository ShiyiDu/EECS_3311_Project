add_command("INTEGER", "c", <<["e", "INTEGER"], ["A", "INTEGER"], ["d", "INTEGER"], ["b", "INTEGER"], ["a", "BOOLEAN"]>>)
add_query("d", "C", <<["INTEGER", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["d", "a"], ["a", "INTEGER"], ["C", "BOOLEAN"], ["INTEGER", "a"]>>, "a")
add_call_chain(<<b,D,B,A,A,a,a>>)
numerical_negation
add_call_chain(<<A,d,a,b>>)
bool_value (false)
numerical_negation
bool_value (false)
bool_value (true)
modulo
add_call_chain(<<e,d,INTEGER,b,b,C,BOOLEAN>>)
bool_value (true)
add_class(A)
conjunction
logical_negation
generate_java_code
add_command("D", "A", <<["B", "BOOLEAN"], ["e", "INTEGER"], ["d", "BOOLEAN"], ["e", "INTEGER"], ["d", "INTEGER"], ["d", "e"], ["C", "B"], ["A", "D"]>>)
add_call_chain(<<D,e>>)
add_attribute("C", "e", "BOOLEAN")
add_query("BOOLEAN", "B", <<["C", "BOOLEAN"]>>, "b")
add_class(B)
add_command("e", "c", <<["INTEGER", "INTEGER"], ["INTEGER", "INTEGER"], ["d", "a"], ["A", "BOOLEAN"]>>)
bool_value (false)
numerical_negation
multiplication
type_check
add_query("A", "A", <<["BOOLEAN", "INTEGER"], ["c", "d"], ["e", "BOOLEAN"], ["e", "INTEGER"]>>, "D")
add_query("INTEGER", "D", <<["d", "INTEGER"], ["e", "BOOLEAN"], ["D", "B"]>>, "e")
type_check
add_class(C)
int_value (15)
add_command("a", "b", <<["C", "c"], ["C", "INTEGER"]>>)
add_call_chain(<<e,e,B>>)
generate_java_code
add_attribute("d", "b", "INTEGER")
add_call_chain(<<d,BOOLEAN,INTEGER,B,BOOLEAN>>)
conjunction
numerical_negation
add_command("e", "B", <<["e", "BOOLEAN"], ["e", "INTEGER"], ["D", "BOOLEAN"], ["e", "D"], ["a", "e"], ["c", "INTEGER"], ["B", "BOOLEAN"]>>)
add_query("a", "C", <<["A", "INTEGER"], ["B", "BOOLEAN"], ["C", "INTEGER"]>>, "d")
generate_java_code
add_attribute("b", "B", "BOOLEAN")
add_call_chain(<<c,C,B,C,e,BOOLEAN,A,e>>)
disjunction
type_check
add_attribute("A", "D", "BOOLEAN")
add_call_chain(<<a,BOOLEAN,B,e>>)
int_value (39)
int_value (32)
generate_java_code
less_than
add_call_chain(<<C,B,C,D,e,INTEGER,b,a>>)
conjunction
logical_negation
logical_negation
add_class(D)
add_call_chain(<<BOOLEAN,C,d,B,D,C,d,A>>)
generate_java_code
int_value (6)
add_attribute("c", "e", "INTEGER")
add_query("e", "C", <<["c", "c"], ["a", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>, "e")
add_command("d", "e", <<["C", "INTEGER"], ["A", "C"], ["BOOLEAN", "INTEGER"], ["b", "INTEGER"]>>)
bool_value (true)
bool_value (false)
add_query("b", "A", <<["C", "INTEGER"], ["b", "INTEGER"], ["a", "BOOLEAN"], ["B", "BOOLEAN"]>>, "e")
add_call_chain(<<c,B,B,BOOLEAN,BOOLEAN,D,A>>)
add_attribute("a", "a", "d")
add_query("c", "a", <<["e", "a"], ["A", "INTEGER"], ["b", "INTEGER"]>>, "D")
int_value (12)
int_value (21)
logical_negation
add_call_chain(<<d,d,e,D,c,d,d>>)
add_query("C", "b", <<["a", "BOOLEAN"], ["B", "INTEGER"], ["a", "INTEGER"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "A"], ["D", "BOOLEAN"]>>, "B")
add_attribute("b", "b", "INTEGER")
greater_than
bool_value (false)
bool_value (true)
logical_negation
greater_than
add_call_chain(<<B>>)
add_class(A)
equals
generate_java_code
add_call_chain(<<INTEGER,A,BOOLEAN,B,C,d,B,B>>)
add_attribute("A", "D", "d")
add_class(C)
type_check
add_call_chain(<<C,a,a,B,b>>)
int_value (30)
logical_negation
add_call_chain(<<A,A,BOOLEAN>>)
less_than
add_attribute("D", "d", "INTEGER")
add_call_chain(<<a,C,b,c,C,D,d>>)
add_attribute("d", "B", "a")
add_class(D)
disjunction
bool_value (true)
numerical_negation
add_command("a", "e", <<["A", "BOOLEAN"], ["D", "e"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["e", "BOOLEAN"], ["A", "B"], ["INTEGER", "BOOLEAN"]>>)
add_call_chain(<<d,b,d,B>>)
add_query("d", "a", <<["D", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["d", "INTEGER"], ["e", "C"], ["B", "A"], ["C", "BOOLEAN"], ["B", "INTEGER"]>>, "A")
add_command("d", "c", <<["a", "INTEGER"]>>)
generate_java_code
int_value (46)
add_call_chain(<<C,A,B>>)
numerical_negation
numerical_negation
bool_value (true)
add_attribute("A", "a", "INTEGER")
add_command("B", "b", <<["B", "INTEGER"], ["B", "BOOLEAN"], ["e", "BOOLEAN"]>>)
add_class(c)
logical_negation
add_command("D", "A", <<["a", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "C"], ["A", "INTEGER"], ["D", "D"], ["BOOLEAN", "INTEGER"]>>)
add_class(A)
greater_than
add_query("BOOLEAN", "BOOLEAN", <<["c", "D"], ["C", "INTEGER"], ["A", "A"], ["C", "BOOLEAN"], ["B", "BOOLEAN"]>>, "c")
logical_negation
add_command("INTEGER", "B", <<["c", "A"]>>)
add_attribute("e", "BOOLEAN", "INTEGER")
type_check
add_call_chain(<<e,D,d,A,a,C>>)
greater_than
add_call_chain(<<C,C,d,e,C,c,C,B,a>>)
int_value (43)
conjunction
generate_java_code
add_call_chain(<<C,c,C,B,BOOLEAN,B,D,B,c>>)
type_check
bool_value (true)
add_call_chain(<<A,B,B,e>>)
add_call_chain(<<D,b,d,d,e,D>>)
add_attribute("b", "D", "BOOLEAN")
add_attribute("B", "a", "INTEGER")
numerical_negation
add_call_chain(<<INTEGER,B,A,b,D,D,BOOLEAN,BOOLEAN,b>>)
type_check
add_command("A", "BOOLEAN", <<["e", "INTEGER"], ["d", "B"], ["A", "INTEGER"], ["c", "c"], ["D", "b"], ["INTEGER", "e"], ["a", "a"]>>)
add_attribute("e", "INTEGER", "INTEGER")
add_attribute("C", "B", "BOOLEAN")
numerical_negation
add_attribute("INTEGER", "D", "C")
add_attribute("e", "B", "INTEGER")
generate_java_code
add_class(b)
logical_negation
generate_java_code
add_attribute("d", "B", "INTEGER")
subtraction
add_query("c", "C", <<["INTEGER", "e"], ["c", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["BOOLEAN", "D"]>>, "A")
disjunction
int_value (40)
add_query("e", "A", <<["D", "INTEGER"]>>, "D")
add_command("D", "B", <<["b", "BOOLEAN"], ["A", "a"], ["B", "INTEGER"], ["A", "INTEGER"], ["e", "INTEGER"]>>)
add_command("C", "b", <<["A", "INTEGER"], ["e", "INTEGER"]>>)
bool_value (false)
add_call_chain(<<b,a,e,C,INTEGER,c,B,INTEGER>>)
add_call_chain(<<INTEGER,c,D,d,C,D,A,C>>)
add_call_chain(<<b,b,BOOLEAN>>)
add_query("e", "a", <<["A", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "INTEGER"], ["b", "BOOLEAN"], ["C", "D"], ["C", "BOOLEAN"], ["D", "e"]>>, "d")
add_class(C)
add_class(D)
add_attribute("b", "b", "e")
add_class(C)
logical_negation
add_command("e", "C", <<["D", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "INTEGER"], ["a", "INTEGER"], ["A", "D"]>>)
disjunction
add_class(b)
add_call_chain(<<c>>)
add_call_chain(<<B>>)
add_command("c", "B", <<["e", "BOOLEAN"], ["d", "d"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["d", "INTEGER"], ["A", "INTEGER"], ["b", "BOOLEAN"]>>)
add_attribute("e", "a", "INTEGER")
add_attribute("C", "b", "c")
add_call_chain(<<c,d,A,A,C,C,e,C>>)
generate_java_code
multiplication
add_call_chain(<<d,A,B,b,B,B,d>>)
int_value (1)
conjunction
less_than
logical_negation
multiplication
less_than
bool_value (true)
int_value (31)
numerical_negation
bool_value (false)
add_attribute("A", "d", "BOOLEAN")
add_attribute("B", "C", "BOOLEAN")
add_query("a", "A", <<["B", "BOOLEAN"], ["A", "e"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "b"], ["d", "D"], ["c", "e"]>>, "A")
add_attribute("D", "c", "BOOLEAN")
numerical_negation
disjunction
add_call_chain(<<B,c>>)
add_command("a", "d", <<["a", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "BOOLEAN"]>>)
add_command("INTEGER", "A", <<["D", "BOOLEAN"], ["c", "D"], ["e", "BOOLEAN"], ["d", "INTEGER"], ["e", "A"], ["c", "BOOLEAN"]>>)
numerical_negation
bool_value (false)
add_attribute("d", "C", "INTEGER")
logical_negation
add_command("C", "b", <<["b", "BOOLEAN"], ["D", "BOOLEAN"], ["BOOLEAN", "c"], ["B", "BOOLEAN"], ["d", "INTEGER"]>>)
add_command("a", "d", <<["d", "INTEGER"], ["C", "e"], ["D", "C"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "A"]>>)
conjunction
add_call_chain(<<a,C,a>>)
type_check
add_call_chain(<<e,b,c,BOOLEAN,BOOLEAN>>)
add_call_chain(<<b,c,D,A>>)
modulo
add_call_chain(<<d,a,c,C,BOOLEAN,INTEGER,C,A,B>>)
greater_than
bool_value (true)
add_attribute("D", "C", "INTEGER")
add_call_chain(<<C,INTEGER,BOOLEAN>>)
bool_value (true)
add_call_chain(<<D,c,d,e,d,A,a,A>>)
logical_negation
logical_negation
add_attribute("A", "BOOLEAN", "c")
logical_negation
add_call_chain(<<A,d,d,d,C>>)
int_value (21)
disjunction
int_value (21)
add_call_chain(<<A,D,c,C,C>>)
add_attribute("e", "e", "c")
disjunction
type_check
type_check
numerical_negation
add_call_chain(<<C,a,B,b,D>>)
greater_than
add_call_chain(<<e>>)
