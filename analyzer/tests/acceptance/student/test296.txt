multiplication
add_command("A", "A", <<["d", "BOOLEAN"]>>)
less_than
add_call_chain(<<b,c,C,e,A,b>>)
generate_java_code
add_query("c", "C", <<["b", "INTEGER"]>>, "D")
int_value (30)
logical_negation
bool_value (false)
add_call_chain(<<e,INTEGER,d,d,B>>)
add_attribute("c", "B", "BOOLEAN")
int_value (1)
logical_negation
int_value (25)
add_attribute("A", "e", "BOOLEAN")
add_command("C", "d", <<["a", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["c", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "INTEGER"], ["A", "INTEGER"], ["e", "INTEGER"]>>)
addition
add_call_chain(<<b,d,e,d,A,A>>)
numerical_negation
logical_negation
add_call_chain(<<e,e,A>>)
equals
add_call_chain(<<C,D,D,C,D,B>>)
add_query("d", "INTEGER", <<["a", "B"]>>, "b")
greater_than
add_query("D", "D", <<["d", "B"], ["b", "B"], ["d", "INTEGER"]>>, "D")
conjunction
bool_value (true)
add_call_chain(<<A,b,d,d,e,D,D,BOOLEAN>>)
add_command("D", "b", <<["A", "INTEGER"], ["INTEGER", "BOOLEAN"], ["c", "INTEGER"]>>)
bool_value (true)
numerical_negation
type_check
add_command("d", "A", <<["C", "BOOLEAN"], ["a", "INTEGER"], ["e", "INTEGER"]>>)
modulo
type_check
bool_value (true)
add_query("C", "D", <<["INTEGER", "INTEGER"], ["e", "BOOLEAN"], ["D", "BOOLEAN"]>>, "c")
add_query("INTEGER", "D", <<["B", "BOOLEAN"]>>, "A")
logical_negation
add_attribute("C", "A", "B")
add_call_chain(<<C>>)
add_attribute("A", "e", "INTEGER")
add_query("A", "b", <<["B", "b"], ["D", "c"]>>, "c")
add_call_chain(<<INTEGER,e,D>>)
bool_value (false)
logical_negation
add_attribute("BOOLEAN", "d", "INTEGER")
add_command("c", "BOOLEAN", <<["A", "INTEGER"], ["d", "INTEGER"]>>)
add_attribute("d", "d", "BOOLEAN")
add_command("c", "c", <<["C", "INTEGER"], ["D", "BOOLEAN"], ["BOOLEAN", "B"], ["A", "INTEGER"], ["a", "INTEGER"], ["A", "D"], ["A", "a"], ["C", "B"]>>)
disjunction
bool_value (false)
add_call_chain(<<B,C,A,C,e,e,c,c>>)
less_than
logical_negation
add_call_chain(<<e,C>>)
disjunction
add_command("a", "INTEGER", <<["b", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "INTEGER"], ["b", "BOOLEAN"], ["e", "e"]>>)
add_call_chain(<<D,B,e>>)
add_attribute("D", "BOOLEAN", "BOOLEAN")
add_query("c", "B", <<["D", "BOOLEAN"], ["C", "a"], ["A", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>, "b")
type_check
generate_java_code
add_call_chain(<<D,INTEGER,b,B,A,e,D,C>>)
equals
type_check
add_attribute("D", "B", "d")
add_command("A", "D", <<["D", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["INTEGER", "INTEGER"], ["c", "INTEGER"], ["c", "INTEGER"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["d", "INTEGER"]>>)
add_command("D", "A", <<["BOOLEAN", "INTEGER"], ["d", "INTEGER"]>>)
add_call_chain(<<d,e,A,D,d,A,A,A,B>>)
add_command("A", "D", <<["BOOLEAN", "C"], ["e", "D"], ["c", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "D"]>>)
add_command("a", "c", <<["a", "INTEGER"], ["B", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "c"], ["D", "INTEGER"], ["d", "INTEGER"], ["D", "INTEGER"], ["a", "INTEGER"]>>)
add_command("A", "A", <<["a", "BOOLEAN"], ["C", "INTEGER"]>>)
add_class(d)
subtraction
generate_java_code
bool_value (true)
add_call_chain(<<BOOLEAN,c,a,b,D,B>>)
numerical_negation
type_check
numerical_negation
numerical_negation
add_command("a", "D", <<["e", "BOOLEAN"], ["D", "INTEGER"], ["c", "INTEGER"], ["a", "D"], ["B", "BOOLEAN"], ["d", "BOOLEAN"]>>)
int_value (22)
int_value (17)
less_than
add_command("B", "B", <<["d", "B"], ["c", "BOOLEAN"], ["C", "BOOLEAN"]>>)
int_value (13)
add_query("A", "a", <<["A", "BOOLEAN"], ["e", "INTEGER"]>>, "B")
add_attribute("B", "a", "D")
add_attribute("D", "A", "b")
add_query("b", "C", <<["B", "INTEGER"], ["e", "a"], ["A", "d"], ["b", "d"], ["b", "BOOLEAN"], ["c", "B"], ["C", "BOOLEAN"], ["b", "A"]>>, "D")
add_query("a", "D", <<["B", "A"], ["A", "INTEGER"], ["B", "INTEGER"], ["INTEGER", "B"], ["C", "BOOLEAN"]>>, "c")
add_attribute("c", "A", "INTEGER")
add_query("BOOLEAN", "C", <<["B", "c"], ["C", "BOOLEAN"]>>, "a")
add_call_chain(<<d,D,b,c,d>>)
add_call_chain(<<b,c,BOOLEAN>>)
add_command("A", "INTEGER", <<["c", "INTEGER"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["b", "INTEGER"], ["A", "BOOLEAN"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["c", "INTEGER"]>>)
add_query("INTEGER", "B", <<["A", "INTEGER"], ["B", "e"]>>, "D")
type_check
add_command("A", "d", <<["d", "C"], ["c", "INTEGER"], ["a", "INTEGER"]>>)
add_class(c)
add_query("C", "INTEGER", <<["D", "INTEGER"], ["A", "INTEGER"]>>, "D")
add_command("B", "d", <<["b", "BOOLEAN"], ["d", "A"], ["d", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "INTEGER"]>>)
less_than
add_query("D", "A", <<["c", "a"], ["e", "D"], ["a", "c"], ["A", "INTEGER"], ["INTEGER", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "INTEGER"], ["B", "BOOLEAN"]>>, "D")
generate_java_code
add_attribute("INTEGER", "B", "B")
logical_negation
add_call_chain(<<c,e,D,b>>)
add_attribute("INTEGER", "a", "BOOLEAN")
quotient
int_value (21)
add_call_chain(<<a,BOOLEAN,d,INTEGER,e,D,INTEGER,C>>)
modulo
add_call_chain(<<e,d,B,C,B>>)
add_call_chain(<<A>>)
add_call_chain(<<D,a,e,A,C,B>>)
add_call_chain(<<a,D,INTEGER,c>>)
add_call_chain(<<B,c,d,c>>)
disjunction
equals
add_attribute("a", "b", "BOOLEAN")
numerical_negation
add_command("c", "C", <<["D", "INTEGER"], ["e", "BOOLEAN"]>>)
add_query("a", "c", <<["d", "INTEGER"], ["B", "b"], ["b", "INTEGER"], ["D", "D"], ["A", "BOOLEAN"], ["B", "e"]>>, "b")
add_call_chain(<<d,D,BOOLEAN,b,e>>)
add_query("e", "b", <<["D", "BOOLEAN"]>>, "INTEGER")
logical_negation
add_attribute("B", "BOOLEAN", "BOOLEAN")
add_query("B", "d", <<["e", "INTEGER"], ["c", "INTEGER"], ["D", "A"], ["C", "d"], ["INTEGER", "INTEGER"], ["e", "INTEGER"]>>, "e")
add_attribute("B", "C", "INTEGER")
addition
add_call_chain(<<B,D,C,c>>)
disjunction
add_class(C)
add_call_chain(<<B,B,BOOLEAN,A>>)
generate_java_code
conjunction
bool_value (true)
add_class(c)
add_query("A", "D", <<["INTEGER", "INTEGER"], ["a", "D"], ["d", "INTEGER"], ["b", "D"], ["D", "e"], ["a", "BOOLEAN"]>>, "C")
int_value (27)
add_command("e", "a", <<["e", "INTEGER"], ["BOOLEAN", "B"], ["A", "INTEGER"], ["A", "BOOLEAN"], ["INTEGER", "INTEGER"], ["d", "BOOLEAN"], ["A", "INTEGER"], ["e", "INTEGER"]>>)
add_command("e", "B", <<["B", "INTEGER"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "INTEGER"]>>)
add_call_chain(<<d,b,c,e,c,e,A>>)
add_query("a", "a", <<["B", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "C"], ["B", "INTEGER"], ["e", "A"], ["D", "INTEGER"], ["a", "BOOLEAN"], ["A", "BOOLEAN"]>>, "BOOLEAN")
type_check
add_class(C)
logical_negation
int_value (11)
numerical_negation
int_value (28)
logical_negation
type_check
conjunction
generate_java_code
add_query("C", "D", <<["D", "INTEGER"], ["C", "c"], ["c", "D"], ["c", "D"], ["B", "C"], ["b", "INTEGER"], ["D", "INTEGER"], ["a", "b"]>>, "D")
generate_java_code
add_query("BOOLEAN", "D", <<["c", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["a", "D"]>>, "c")
add_call_chain(<<a>>)
numerical_negation
add_class(D)
add_call_chain(<<c,b,d>>)
add_call_chain(<<c,e,INTEGER>>)
add_query("C", "c", <<["A", "c"], ["A", "INTEGER"], ["A", "BOOLEAN"], ["A", "c"]>>, "B")
int_value (4)
add_query("b", "D", <<["A", "C"], ["BOOLEAN", "BOOLEAN"], ["d", "D"], ["d", "INTEGER"]>>, "c")
add_call_chain(<<BOOLEAN>>)
add_class(C)
generate_java_code
bool_value (false)
add_attribute("A", "d", "INTEGER")
int_value (7)
int_value (34)
bool_value (true)
less_than
logical_negation
add_call_chain(<<e,e>>)
bool_value (true)
generate_java_code
add_call_chain(<<BOOLEAN>>)
add_call_chain(<<D,c,B>>)
add_query("B", "c", <<["A", "INTEGER"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["INTEGER", "BOOLEAN"], ["a", "INTEGER"]>>, "C")
add_class(A)
greater_than
add_call_chain(<<b,BOOLEAN,b,d,a,D>>)
modulo
add_attribute("e", "D", "BOOLEAN")
int_value (6)
numerical_negation
add_call_chain(<<C,a,INTEGER>>)
add_query("b", "A", <<["BOOLEAN", "a"]>>, "D")
add_command("A", "b", <<["e", "c"], ["C", "C"], ["d", "e"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "B"], ["A", "INTEGER"], ["A", "C"], ["c", "INTEGER"]>>)
add_query("D", "d", <<["e", "d"], ["c", "INTEGER"], ["D", "INTEGER"], ["e", "INTEGER"]>>, "B")
add_class(BOOLEAN)
logical_negation
numerical_negation
add_call_chain(<<a,C>>)
add_command("B", "e", <<["B", "e"], ["a", "BOOLEAN"], ["A", "d"], ["B", "INTEGER"], ["d", "INTEGER"]>>)
multiplication
add_call_chain(<<D,B>>)
generate_java_code
add_call_chain(<<a,B,d,C>>)
add_command("b", "B", <<["B", "BOOLEAN"], ["C", "INTEGER"], ["B", "BOOLEAN"]>>)
add_command("INTEGER", "D", <<["b", "e"], ["INTEGER", "B"], ["D", "A"], ["B", "D"], ["b", "d"], ["d", "BOOLEAN"]>>)
add_class(A)
bool_value (false)
add_call_chain(<<C,d,INTEGER,A,INTEGER,C,BOOLEAN,D,A>>)
add_call_chain(<<A,B,b,a,D,e,c>>)
logical_negation
type_check
add_call_chain(<<A>>)
subtraction
generate_java_code
add_query("a", "BOOLEAN", <<["B", "BOOLEAN"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["C", "INTEGER"], ["c", "INTEGER"], ["e", "c"], ["C", "BOOLEAN"], ["B", "INTEGER"]>>, "C")
numerical_negation
add_call_chain(<<B,C,C,d,e>>)
bool_value (true)
add_query("e", "d", <<["b", "INTEGER"]>>, "c")
less_than
add_attribute("BOOLEAN", "e", "A")
conjunction
add_command("BOOLEAN", "C", <<["A", "BOOLEAN"], ["e", "BOOLEAN"]>>)
add_query("d", "b", <<["B", "INTEGER"], ["D", "C"], ["D", "BOOLEAN"], ["c", "INTEGER"], ["A", "INTEGER"]>>, "b")
add_attribute("d", "a", "BOOLEAN")
add_call_chain(<<C,e,A,B,C,INTEGER,BOOLEAN,a,a>>)
type_check
