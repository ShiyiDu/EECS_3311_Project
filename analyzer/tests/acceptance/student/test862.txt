greater_than
add_command("C", "b", <<["e", "C"], ["b", "INTEGER"], ["D", "BOOLEAN"], ["d", "BOOLEAN"]>>)
int_value (15)
logical_negation
numerical_negation
int_value (10)
add_call_chain(<<b,A>>)
type_check
add_class(INTEGER)
add_command("e", "B", <<["C", "A"], ["c", "INTEGER"], ["C", "a"], ["C", "D"]>>)
numerical_negation
add_call_chain(<<B,d,b,D,e,BOOLEAN,C,INTEGER,A>>)
add_attribute("B", "D", "BOOLEAN")
add_call_chain(<<C,c,D,b,a,B,B,C>>)
bool_value (true)
add_query("INTEGER", "C", <<["D", "BOOLEAN"], ["INTEGER", "INTEGER"], ["d", "BOOLEAN"], ["a", "BOOLEAN"], ["b", "b"], ["B", "a"]>>, "D")
add_command("a", "c", <<["C", "e"], ["a", "b"], ["C", "INTEGER"]>>)
add_attribute("C", "INTEGER", "INTEGER")
add_query("A", "b", <<["b", "BOOLEAN"], ["d", "BOOLEAN"]>>, "e")
add_call_chain(<<c,D,B,C,e>>)
int_value (34)
logical_negation
less_than
numerical_negation
numerical_negation
int_value (8)
add_class(D)
add_call_chain(<<BOOLEAN>>)
add_command("b", "D", <<["a", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "A"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["A", "A"], ["C", "INTEGER"], ["a", "D"], ["e", "BOOLEAN"]>>)
add_attribute("B", "a", "BOOLEAN")
add_query("c", "A", <<["INTEGER", "c"], ["C", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["d", "INTEGER"], ["INTEGER", "BOOLEAN"], ["BOOLEAN", "D"]>>, "INTEGER")
add_call_chain(<<INTEGER,BOOLEAN,c,c>>)
add_call_chain(<<d,BOOLEAN,INTEGER,a>>)
generate_java_code
add_call_chain(<<B,A,B,B,e,A,INTEGER>>)
numerical_negation
add_call_chain(<<BOOLEAN,a,c,a,B,B>>)
bool_value (false)
equals
greater_than
add_class(D)
add_query("B", "b", <<["INTEGER", "B"], ["INTEGER", "BOOLEAN"], ["a", "b"]>>, "B")
type_check
add_class(D)
bool_value (true)
add_call_chain(<<C,a,b,B,B,D,c,BOOLEAN>>)
add_call_chain(<<B,e,d,INTEGER>>)
int_value (6)
add_query("b", "A", <<["C", "INTEGER"], ["INTEGER", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["d", "e"]>>, "a")
add_attribute("A", "B", "BOOLEAN")
subtraction
add_call_chain(<<b,A,b>>)
add_query("d", "D", <<["b", "INTEGER"], ["c", "INTEGER"], ["c", "BOOLEAN"], ["d", "INTEGER"], ["INTEGER", "INTEGER"], ["A", "e"], ["d", "e"]>>, "BOOLEAN")
add_call_chain(<<b,A,A,d>>)
add_command("A", "A", <<["a", "D"], ["e", "BOOLEAN"], ["b", "INTEGER"], ["INTEGER", "D"], ["D", "INTEGER"], ["B", "BOOLEAN"], ["C", "b"], ["B", "BOOLEAN"], ["e", "d"]>>)
add_class(A)
add_query("d", "INTEGER", <<["D", "INTEGER"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "D"], ["BOOLEAN", "INTEGER"], ["C", "BOOLEAN"]>>, "d")
greater_than
multiplication
add_query("A", "c", <<["b", "INTEGER"], ["D", "BOOLEAN"], ["B", "e"], ["b", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "INTEGER"]>>, "BOOLEAN")
add_query("B", "A", <<["e", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "C"], ["C", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "B"], ["B", "B"], ["B", "d"], ["b", "BOOLEAN"]>>, "c")
disjunction
less_than
int_value (24)
logical_negation
int_value (35)
conjunction
add_command("a", "INTEGER", <<["a", "BOOLEAN"], ["b", "B"], ["c", "b"], ["A", "BOOLEAN"], ["c", "BOOLEAN"], ["a", "c"]>>)
add_call_chain(<<A>>)
add_call_chain(<<c,e,A,c,b>>)
multiplication
int_value (31)
bool_value (true)
add_query("A", "A", <<["D", "BOOLEAN"], ["A", "e"], ["c", "BOOLEAN"], ["a", "D"], ["a", "INTEGER"], ["A", "INTEGER"]>>, "e")
add_call_chain(<<A,D>>)
add_call_chain(<<A,c,C,B>>)
bool_value (false)
add_attribute("D", "B", "INTEGER")
add_call_chain(<<A,C,A,INTEGER,d,BOOLEAN,A,A>>)
add_call_chain(<<D,a,A,A,b,D>>)
add_class(INTEGER)
int_value (37)
add_call_chain(<<B,c>>)
add_call_chain(<<e,BOOLEAN,d>>)
multiplication
equals
add_class(D)
add_class(e)
logical_negation
disjunction
numerical_negation
add_call_chain(<<D,B,BOOLEAN,D,A,b,c>>)
add_query("B", "B", <<["d", "INTEGER"], ["b", "INTEGER"], ["e", "INTEGER"], ["BOOLEAN", "A"], ["a", "BOOLEAN"], ["e", "INTEGER"], ["BOOLEAN", "e"], ["d", "BOOLEAN"], ["A", "BOOLEAN"]>>, "C")
int_value (44)
logical_negation
add_call_chain(<<b,d,BOOLEAN,d,C,D,a,d>>)
disjunction
disjunction
bool_value (false)
bool_value (false)
add_call_chain(<<c,a,d,D,b,BOOLEAN>>)
type_check
add_attribute("d", "D", "BOOLEAN")
bool_value (true)
generate_java_code
add_call_chain(<<c,d,C,INTEGER>>)
bool_value (true)
less_than
generate_java_code
int_value (6)
add_attribute("A", "B", "e")
add_call_chain(<<D,C,c,e,B,e>>)
numerical_negation
generate_java_code
numerical_negation
int_value (46)
add_query("C", "D", <<["B", "c"]>>, "c")
generate_java_code
type_check
add_command("c", "b", <<["d", "INTEGER"], ["D", "INTEGER"], ["e", "d"], ["A", "C"]>>)
add_call_chain(<<C>>)
logical_negation
add_call_chain(<<a,a,d,e,C,e,A>>)
numerical_negation
add_attribute("e", "INTEGER", "INTEGER")
int_value (29)
modulo
int_value (18)
bool_value (false)
int_value (4)
logical_negation
multiplication
add_call_chain(<<C>>)
logical_negation
add_call_chain(<<D,D,b,e,BOOLEAN,a>>)
bool_value (false)
int_value (37)
numerical_negation
less_than
add_call_chain(<<b,D,e,b,B,e,e>>)
add_call_chain(<<C,e,A,a,A,B>>)
add_attribute("D", "A", "c")
quotient
add_class(B)
greater_than
disjunction
bool_value (true)
add_call_chain(<<A,A,C,b,a,a,b,a,d>>)
add_query("c", "D", <<["A", "INTEGER"], ["d", "BOOLEAN"], ["a", "INTEGER"], ["c", "c"], ["a", "INTEGER"], ["A", "INTEGER"], ["e", "INTEGER"], ["A", "d"], ["B", "INTEGER"]>>, "c")
add_call_chain(<<C,B>>)
type_check
bool_value (false)
add_attribute("e", "a", "INTEGER")
add_class(B)
int_value (11)
int_value (2)
add_call_chain(<<a,D>>)
bool_value (true)
bool_value (true)
multiplication
add_attribute("A", "D", "C")
add_command("B", "C", <<["a", "BOOLEAN"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["b", "INTEGER"], ["a", "C"], ["D", "c"], ["A", "d"], ["A", "BOOLEAN"]>>)
add_call_chain(<<c,C,C,c,c,a,B,c,A>>)
addition
int_value (12)
addition
greater_than
numerical_negation
add_class(B)
add_call_chain(<<A,a,BOOLEAN,D,b,e,a,D,e>>)
int_value (37)
add_class(A)
add_attribute("e", "e", "BOOLEAN")
add_attribute("b", "d", "INTEGER")
generate_java_code
type_check
add_attribute("a", "A", "BOOLEAN")
bool_value (false)
add_query("D", "C", <<["C", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "BOOLEAN"], ["INTEGER", "c"], ["D", "C"], ["A", "INTEGER"], ["B", "D"], ["c", "d"]>>, "b")
add_class(d)
numerical_negation
add_attribute("B", "A", "INTEGER")
disjunction
add_command("BOOLEAN", "A", <<["c", "BOOLEAN"], ["B", "A"], ["a", "INTEGER"]>>)
add_query("D", "B", <<["c", "INTEGER"], ["C", "INTEGER"]>>, "a")
add_call_chain(<<D,b,B>>)
int_value (41)
conjunction
disjunction
int_value (37)
conjunction
greater_than
add_attribute("C", "D", "BOOLEAN")
add_command("A", "C", <<["e", "D"], ["D", "B"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["D", "INTEGER"], ["e", "INTEGER"], ["A", "INTEGER"], ["a", "BOOLEAN"], ["BOOLEAN", "B"]>>)
bool_value (true)
add_query("c", "a", <<["b", "INTEGER"], ["e", "INTEGER"], ["C", "BOOLEAN"], ["D", "INTEGER"]>>, "A")
add_attribute("C", "e", "BOOLEAN")
int_value (18)
bool_value (true)
add_call_chain(<<C>>)
add_attribute("d", "a", "INTEGER")
add_call_chain(<<B,c>>)
generate_java_code
add_command("c", "d", <<["A", "INTEGER"], ["B", "BOOLEAN"], ["D", "INTEGER"], ["C", "INTEGER"], ["d", "BOOLEAN"]>>)
int_value (11)
numerical_negation
logical_negation
add_query("e", "c", <<["C", "b"], ["C", "BOOLEAN"], ["c", "INTEGER"]>>, "c")
numerical_negation
add_call_chain(<<d,a>>)
add_call_chain(<<C>>)
add_call_chain(<<INTEGER,b,d,D,A,BOOLEAN>>)
add_call_chain(<<INTEGER,C,e,A>>)
generate_java_code
bool_value (true)
add_command("e", "e", <<["INTEGER", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "D"], ["c", "INTEGER"]>>)
generate_java_code
add_call_chain(<<D,c,c>>)
greater_than
add_class(e)
add_attribute("a", "B", "BOOLEAN")
add_attribute("BOOLEAN", "BOOLEAN", "INTEGER")
add_attribute("c", "e", "INTEGER")
equals
add_query("b", "B", <<["d", "INTEGER"], ["e", "INTEGER"], ["B", "b"], ["B", "INTEGER"], ["A", "INTEGER"], ["B", "INTEGER"]>>, "A")
add_attribute("b", "a", "BOOLEAN")
logical_negation
