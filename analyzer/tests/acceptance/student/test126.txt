add_command("C", "BOOLEAN", <<["B", "A"], ["B", "B"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "D"], ["c", "BOOLEAN"], ["C", "INTEGER"], ["BOOLEAN", "INTEGER"], ["A", "BOOLEAN"]>>)
add_call_chain(<<b,BOOLEAN,B,C,a,d,D,e>>)
generate_java_code
numerical_negation
add_class(d)
int_value (40)
add_attribute("D", "C", "BOOLEAN")
logical_negation
add_call_chain(<<b,b,A,A>>)
bool_value (false)
numerical_negation
generate_java_code
disjunction
bool_value (false)
numerical_negation
add_query("a", "e", <<["D", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "BOOLEAN"]>>, "B")
add_call_chain(<<A,B,a,A,b>>)
add_call_chain(<<BOOLEAN,A>>)
add_command("C", "a", <<["INTEGER", "e"], ["A", "INTEGER"], ["b", "INTEGER"], ["a", "INTEGER"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "BOOLEAN"]>>)
bool_value (true)
int_value (39)
add_query("b", "C", <<["A", "e"], ["INTEGER", "INTEGER"]>>, "d")
conjunction
numerical_negation
add_command("c", "a", <<["A", "e"], ["B", "INTEGER"], ["d", "B"], ["D", "INTEGER"], ["D", "INTEGER"], ["e", "INTEGER"], ["D", "BOOLEAN"]>>)
add_call_chain(<<C,B,c,A>>)
bool_value (true)
disjunction
add_command("c", "C", <<["D", "INTEGER"], ["A", "INTEGER"]>>)
add_command("e", "BOOLEAN", <<["b", "b"], ["d", "a"], ["d", "a"], ["C", "INTEGER"], ["D", "INTEGER"], ["c", "INTEGER"], ["BOOLEAN", "INTEGER"], ["b", "INTEGER"], ["a", "A"]>>)
add_class(e)
add_attribute("C", "c", "INTEGER")
add_call_chain(<<e,B,a>>)
quotient
addition
logical_negation
add_class(C)
type_check
generate_java_code
add_attribute("d", "a", "INTEGER")
add_call_chain(<<e,C,d,a,a,C,A,d,B>>)
int_value (13)
bool_value (false)
add_attribute("B", "c", "a")
add_call_chain(<<c,D,b,C,b,e,D>>)
add_call_chain(<<b,A,c,a,B>>)
bool_value (true)
add_call_chain(<<D,c,D,D,a,A,B,A,c>>)
add_query("B", "a", <<["BOOLEAN", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "C"], ["C", "INTEGER"], ["b", "BOOLEAN"], ["b", "INTEGER"]>>, "a")
bool_value (true)
add_call_chain(<<A,c,d,B,A>>)
add_attribute("INTEGER", "D", "INTEGER")
add_command("INTEGER", "d", <<["c", "a"], ["C", "c"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["C", "C"], ["C", "INTEGER"]>>)
add_attribute("C", "A", "INTEGER")
logical_negation
add_query("d", "B", <<["b", "BOOLEAN"], ["e", "INTEGER"]>>, "e")
disjunction
logical_negation
bool_value (false)
add_call_chain(<<e,c>>)
generate_java_code
greater_than
less_than
add_query("b", "b", <<["a", "A"], ["D", "BOOLEAN"], ["b", "BOOLEAN"], ["INTEGER", "INTEGER"]>>, "INTEGER")
int_value (36)
add_attribute("b", "d", "BOOLEAN")
add_command("d", "INTEGER", <<["d", "INTEGER"], ["BOOLEAN", "d"]>>)
subtraction
add_attribute("D", "a", "INTEGER")
add_call_chain(<<a,C,e,c>>)
add_command("b", "e", <<["INTEGER", "BOOLEAN"], ["b", "B"], ["a", "INTEGER"], ["C", "BOOLEAN"], ["C", "D"], ["D", "b"], ["b", "BOOLEAN"], ["C", "INTEGER"], ["A", "BOOLEAN"]>>)
add_call_chain(<<D,A,A,A,D,a,INTEGER>>)
generate_java_code
equals
numerical_negation
add_attribute("d", "d", "B")
add_call_chain(<<D,A,a,a>>)
addition
numerical_negation
add_call_chain(<<e,BOOLEAN,B,D,b,c>>)
add_call_chain(<<c,b,C>>)
conjunction
add_call_chain(<<d,A,e,A,C,a>>)
bool_value (false)
add_call_chain(<<c,c,b,d,C,A>>)
type_check
disjunction
conjunction
add_query("b", "a", <<["A", "BOOLEAN"], ["C", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["C", "INTEGER"], ["INTEGER", "INTEGER"]>>, "B")
int_value (29)
bool_value (false)
bool_value (true)
int_value (29)
type_check
generate_java_code
numerical_negation
quotient
equals
generate_java_code
add_query("e", "e", <<["D", "INTEGER"], ["C", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "d"], ["b", "INTEGER"], ["b", "BOOLEAN"], ["D", "D"], ["C", "b"]>>, "e")
type_check
bool_value (false)
logical_negation
numerical_negation
multiplication
int_value (6)
add_class(A)
add_command("c", "b", <<["e", "INTEGER"], ["A", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "INTEGER"], ["INTEGER", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "INTEGER"], ["B", "BOOLEAN"]>>)
add_command("A", "B", <<["A", "INTEGER"], ["BOOLEAN", "e"], ["a", "BOOLEAN"], ["c", "BOOLEAN"], ["d", "INTEGER"], ["D", "INTEGER"], ["A", "INTEGER"], ["d", "BOOLEAN"], ["A", "BOOLEAN"]>>)
bool_value (true)
int_value (41)
add_call_chain(<<INTEGER,c,b,d,A,e,b>>)
add_query("INTEGER", "A", <<["A", "BOOLEAN"], ["C", "C"], ["A", "INTEGER"], ["e", "INTEGER"]>>, "a")
generate_java_code
add_attribute("B", "e", "INTEGER")
type_check
add_call_chain(<<c>>)
add_attribute("a", "b", "BOOLEAN")
add_class(INTEGER)
int_value (14)
disjunction
type_check
numerical_negation
add_command("d", "B", <<["B", "BOOLEAN"], ["d", "C"], ["A", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "BOOLEAN"], ["c", "c"], ["A", "BOOLEAN"]>>)
add_query("b", "a", <<["a", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "d"], ["c", "a"], ["A", "C"], ["d", "c"], ["D", "BOOLEAN"]>>, "A")
add_attribute("A", "e", "INTEGER")
add_call_chain(<<A,b,INTEGER,D,c,B,e>>)
add_class(b)
int_value (26)
add_call_chain(<<A,d,C,B,C,BOOLEAN>>)
conjunction
add_call_chain(<<d,BOOLEAN,e>>)
add_command("a", "a", <<["B", "d"], ["b", "B"]>>)
add_call_chain(<<a,D,d,A,c,A>>)
disjunction
add_call_chain(<<D,D,D,INTEGER,INTEGER,B>>)
add_attribute("D", "a", "BOOLEAN")
addition
numerical_negation
add_attribute("INTEGER", "B", "e")
logical_negation
generate_java_code
add_call_chain(<<C>>)
add_attribute("INTEGER", "B", "INTEGER")
add_call_chain(<<b,b,A>>)
type_check
add_query("B", "B", <<["d", "A"], ["c", "INTEGER"], ["b", "A"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "BOOLEAN"]>>, "e")
numerical_negation
bool_value (false)
add_query("D", "b", <<["b", "BOOLEAN"], ["B", "INTEGER"], ["INTEGER", "A"], ["e", "BOOLEAN"], ["a", "INTEGER"], ["C", "INTEGER"], ["b", "d"]>>, "D")
add_call_chain(<<C>>)
int_value (48)
add_query("e", "c", <<["A", "INTEGER"], ["D", "A"], ["b", "d"], ["a", "INTEGER"], ["A", "B"], ["b", "INTEGER"]>>, "B")
add_call_chain(<<c,A,B,C,D,d>>)
add_call_chain(<<D,d,D,B,b,a,B,d>>)
logical_negation
add_call_chain(<<a,A,INTEGER,e,b,A,BOOLEAN>>)
add_class(e)
type_check
add_attribute("b", "B", "C")
generate_java_code
quotient
numerical_negation
conjunction
generate_java_code
add_query("INTEGER", "B", <<["b", "BOOLEAN"], ["e", "INTEGER"], ["B", "A"], ["BOOLEAN", "A"], ["BOOLEAN", "INTEGER"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>, "a")
bool_value (false)
disjunction
numerical_negation
add_call_chain(<<C,c,B>>)
bool_value (true)
add_query("C", "A", <<["B", "BOOLEAN"], ["A", "A"], ["d", "A"]>>, "e")
add_command("b", "c", <<["B", "BOOLEAN"], ["C", "b"], ["INTEGER", "INTEGER"], ["B", "D"], ["a", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "BOOLEAN"]>>)
bool_value (true)
bool_value (true)
add_call_chain(<<A,d,b>>)
logical_negation
equals
add_command("d", "C", <<["INTEGER", "INTEGER"], ["C", "BOOLEAN"]>>)
add_call_chain(<<c,c,D,a,D,e,c,A>>)
equals
add_call_chain(<<C,d,C,d,C,a,BOOLEAN,A>>)
