type_check
numerical_negation
equals
add_call_chain(<<a,e,a,D,D,BOOLEAN,D>>)
conjunction
bool_value (false)
int_value (2)
add_command("D", "c", <<["A", "BOOLEAN"], ["c", "INTEGER"], ["C", "BOOLEAN"], ["D", "BOOLEAN"]>>)
int_value (3)
add_command("b", "a", <<["B", "INTEGER"], ["c", "BOOLEAN"]>>)
greater_than
add_call_chain(<<c,A,C,c,c,d,a,A>>)
logical_negation
add_call_chain(<<a>>)
int_value (30)
add_call_chain(<<a,C,A,e,C,A,e>>)
logical_negation
int_value (32)
int_value (20)
less_than
add_command("b", "d", <<["A", "C"], ["d", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "INTEGER"], ["A", "D"], ["a", "INTEGER"]>>)
add_command("B", "B", <<["B", "D"], ["e", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["b", "BOOLEAN"], ["BOOLEAN", "d"], ["D", "INTEGER"], ["BOOLEAN", "INTEGER"]>>)
add_command("C", "D", <<["a", "INTEGER"], ["a", "e"], ["b", "BOOLEAN"], ["A", "c"], ["e", "INTEGER"], ["e", "e"], ["d", "BOOLEAN"]>>)
less_than
multiplication
add_command("D", "e", <<["c", "INTEGER"], ["a", "D"], ["INTEGER", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "INTEGER"]>>)
add_command("BOOLEAN", "b", <<["a", "INTEGER"], ["a", "A"], ["e", "BOOLEAN"], ["A", "a"], ["A", "B"]>>)
logical_negation
add_attribute("D", "b", "BOOLEAN")
modulo
int_value (15)
disjunction
add_call_chain(<<e,D,a,INTEGER,d,D,b>>)
int_value (16)
modulo
logical_negation
addition
add_query("B", "d", <<["C", "BOOLEAN"], ["A", "INTEGER"], ["a", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "C"], ["d", "D"], ["BOOLEAN", "INTEGER"], ["INTEGER", "INTEGER"]>>, "C")
add_attribute("d", "BOOLEAN", "BOOLEAN")
add_command("BOOLEAN", "C", <<["e", "BOOLEAN"], ["e", "INTEGER"], ["c", "C"], ["B", "A"], ["BOOLEAN", "c"], ["a", "BOOLEAN"], ["a", "a"], ["B", "INTEGER"], ["d", "INTEGER"]>>)
add_command("c", "a", <<["C", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "INTEGER"], ["B", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["D", "B"]>>)
add_call_chain(<<d,D,e,e,D,INTEGER>>)
generate_java_code
int_value (37)
type_check
bool_value (false)
add_class(D)
add_command("e", "c", <<["b", "INTEGER"], ["b", "INTEGER"], ["a", "A"], ["INTEGER", "INTEGER"], ["INTEGER", "a"]>>)
add_command("B", "BOOLEAN", <<["b", "INTEGER"], ["INTEGER", "INTEGER"], ["d", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["a", "b"]>>)
add_command("b", "d", <<["C", "INTEGER"], ["d", "A"], ["B", "B"], ["A", "INTEGER"], ["e", "A"], ["c", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>)
logical_negation
add_class(A)
generate_java_code
bool_value (false)
addition
conjunction
add_command("c", "C", <<["BOOLEAN", "C"], ["e", "INTEGER"], ["BOOLEAN", "INTEGER"], ["B", "C"], ["INTEGER", "b"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "BOOLEAN"]>>)
add_call_chain(<<D,A,A>>)
add_class(D)
bool_value (false)
numerical_negation
numerical_negation
add_query("INTEGER", "c", <<["C", "BOOLEAN"]>>, "A")
int_value (16)
add_attribute("D", "A", "e")
bool_value (false)
add_call_chain(<<B,C,d,a,a,A,B,b>>)
add_call_chain(<<A,A,D,c,C,e>>)
generate_java_code
add_attribute("C", "C", "c")
add_query("d", "D", <<["BOOLEAN", "BOOLEAN"], ["D", "INTEGER"], ["d", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>, "C")
add_command("b", "B", <<["e", "e"], ["B", "B"], ["c", "INTEGER"], ["D", "BOOLEAN"], ["D", "BOOLEAN"]>>)
add_query("d", "BOOLEAN", <<["b", "BOOLEAN"]>>, "d")
add_query("d", "B", <<["d", "BOOLEAN"]>>, "B")
int_value (23)
bool_value (false)
add_attribute("D", "c", "INTEGER")
add_call_chain(<<C,b,b,c,a,BOOLEAN>>)
logical_negation
bool_value (false)
add_call_chain(<<INTEGER,C,e,e,e,e,D,e,C>>)
add_query("INTEGER", "BOOLEAN", <<["b", "A"], ["INTEGER", "BOOLEAN"], ["C", "INTEGER"], ["b", "d"], ["d", "A"]>>, "D")
type_check
bool_value (false)
add_call_chain(<<d,b,a,BOOLEAN,C,D>>)
add_call_chain(<<e,B>>)
multiplication
bool_value (true)
type_check
add_call_chain(<<C,d,b,A,a,C>>)
add_call_chain(<<INTEGER,A,C,INTEGER>>)
add_call_chain(<<e,e,A,a,e,c,C,e>>)
logical_negation
addition
numerical_negation
less_than
add_call_chain(<<a>>)
add_command("b", "A", <<["a", "BOOLEAN"], ["INTEGER", "C"], ["B", "INTEGER"]>>)
add_query("C", "B", <<["B", "INTEGER"], ["B", "BOOLEAN"], ["c", "INTEGER"], ["B", "INTEGER"], ["D", "e"], ["e", "B"], ["A", "BOOLEAN"], ["b", "a"], ["d", "BOOLEAN"]>>, "D")
add_attribute("b", "C", "INTEGER")
add_class(a)
greater_than
disjunction
add_call_chain(<<C,e,a,C,d,D,c,c>>)
add_attribute("d", "a", "e")
bool_value (false)
numerical_negation
add_query("B", "e", <<["e", "INTEGER"], ["d", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["b", "INTEGER"]>>, "D")
int_value (10)
int_value (1)
add_call_chain(<<b>>)
add_class(D)
numerical_negation
disjunction
add_class(C)
add_query("a", "INTEGER", <<["BOOLEAN", "INTEGER"], ["INTEGER", "INTEGER"], ["e", "a"], ["c", "INTEGER"], ["e", "INTEGER"], ["D", "BOOLEAN"], ["d", "INTEGER"]>>, "A")
add_query("c", "D", <<["BOOLEAN", "BOOLEAN"], ["c", "C"], ["BOOLEAN", "BOOLEAN"]>>, "INTEGER")
generate_java_code
add_class(c)
type_check
numerical_negation
int_value (24)
add_attribute("e", "A", "d")
multiplication
numerical_negation
add_query("d", "B", <<["b", "INTEGER"], ["c", "BOOLEAN"], ["A", "D"]>>, "B")
less_than
add_class(C)
add_class(B)
add_attribute("c", "BOOLEAN", "INTEGER")
type_check
add_call_chain(<<D,e,c,a,a,BOOLEAN,e,c,C>>)
add_attribute("INTEGER", "c", "c")
add_command("A", "D", <<["A", "A"], ["e", "INTEGER"]>>)
bool_value (true)
add_query("D", "a", <<["C", "INTEGER"], ["C", "BOOLEAN"], ["D", "e"], ["e", "e"], ["b", "C"], ["e", "INTEGER"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["b", "BOOLEAN"]>>, "a")
numerical_negation
add_query("c", "a", <<["INTEGER", "e"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["C", "BOOLEAN"], ["B", "A"], ["B", "a"], ["e", "b"], ["d", "BOOLEAN"]>>, "B")
add_call_chain(<<e,A,INTEGER,c,D>>)
int_value (24)
add_command("e", "C", <<["A", "INTEGER"], ["B", "BOOLEAN"], ["D", "INTEGER"]>>)
add_command("D", "D", <<["C", "BOOLEAN"], ["BOOLEAN", "B"], ["INTEGER", "INTEGER"], ["B", "C"], ["C", "D"], ["d", "BOOLEAN"], ["b", "INTEGER"], ["e", "BOOLEAN"], ["d", "INTEGER"]>>)
add_call_chain(<<a,D,B,c,b,INTEGER,c,c,BOOLEAN>>)
add_call_chain(<<c,a,d,c,D,INTEGER,INTEGER,A>>)
less_than
int_value (12)
bool_value (true)
numerical_negation
generate_java_code
bool_value (false)
logical_negation
numerical_negation
type_check
add_class(c)
logical_negation
greater_than
add_call_chain(<<b,a,d,b>>)
int_value (20)
add_attribute("e", "a", "BOOLEAN")
int_value (7)
addition
add_command("A", "d", <<["b", "INTEGER"]>>)
int_value (14)
add_class(C)
bool_value (false)
add_attribute("BOOLEAN", "c", "c")
logical_negation
int_value (46)
bool_value (true)
add_query("INTEGER", "e", <<["d", "INTEGER"], ["A", "a"], ["d", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["a", "INTEGER"], ["e", "A"], ["D", "BOOLEAN"], ["e", "d"], ["B", "INTEGER"]>>, "e")
bool_value (true)
equals
less_than
numerical_negation
add_attribute("INTEGER", "c", "B")
bool_value (false)
logical_negation
less_than
add_call_chain(<<b,D,C>>)
bool_value (false)
int_value (16)
conjunction
add_call_chain(<<b,B,INTEGER,C,B>>)
int_value (47)
add_call_chain(<<A,c>>)
add_attribute("BOOLEAN", "B", "INTEGER")
logical_negation
int_value (32)
logical_negation
add_command("d", "A", <<["B", "INTEGER"], ["INTEGER", "INTEGER"]>>)
bool_value (true)
bool_value (false)
add_query("c", "d", <<["A", "e"]>>, "e")
logical_negation
add_class(c)
int_value (49)
add_class(a)
add_call_chain(<<b,B,D,a,B,D,C,C>>)
add_command("C", "B", <<["a", "INTEGER"], ["e", "INTEGER"], ["b", "BOOLEAN"]>>)
add_call_chain(<<d,C,C,c,A,INTEGER,e>>)
equals
add_call_chain(<<D,D,e,c,c,A,C,c,a>>)
logical_negation
add_call_chain(<<a,c,C,A>>)
numerical_negation
