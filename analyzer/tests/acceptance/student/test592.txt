subtraction
int_value (46)
add_query("BOOLEAN", "b", <<["INTEGER", "b"], ["b", "INTEGER"], ["B", "c"], ["C", "BOOLEAN"]>>, "D")
int_value (31)
numerical_negation
add_attribute("d", "d", "INTEGER")
numerical_negation
generate_java_code
bool_value (false)
numerical_negation
bool_value (true)
bool_value (false)
int_value (19)
add_command("A", "D", <<["d", "INTEGER"], ["a", "INTEGER"], ["e", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "BOOLEAN"], ["b", "INTEGER"], ["b", "BOOLEAN"], ["D", "BOOLEAN"]>>)
int_value (43)
add_class(c)
bool_value (true)
add_attribute("D", "B", "b")
disjunction
bool_value (true)
disjunction
disjunction
add_query("B", "D", <<["d", "INTEGER"], ["a", "D"], ["e", "BOOLEAN"], ["B", "INTEGER"], ["c", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "INTEGER"], ["A", "BOOLEAN"]>>, "D")
add_class(B)
add_call_chain(<<A,D,BOOLEAN,A,e>>)
add_class(B)
add_query("a", "B", <<["INTEGER", "c"], ["d", "INTEGER"], ["b", "B"], ["d", "c"], ["B", "BOOLEAN"], ["B", "B"], ["a", "BOOLEAN"], ["B", "INTEGER"]>>, "B")
add_call_chain(<<B>>)
bool_value (true)
int_value (27)
logical_negation
add_command("D", "D", <<["B", "C"], ["a", "INTEGER"], ["BOOLEAN", "D"], ["c", "BOOLEAN"], ["d", "C"]>>)
int_value (46)
add_command("B", "c", <<["BOOLEAN", "d"], ["BOOLEAN", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["b", "BOOLEAN"]>>)
add_query("D", "A", <<["B", "INTEGER"], ["D", "BOOLEAN"], ["c", "D"], ["C", "BOOLEAN"], ["b", "INTEGER"]>>, "BOOLEAN")
add_class(B)
disjunction
add_query("B", "d", <<["a", "INTEGER"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["a", "D"], ["c", "BOOLEAN"], ["D", "INTEGER"], ["INTEGER", "A"], ["a", "INTEGER"], ["C", "BOOLEAN"]>>, "BOOLEAN")
int_value (26)
generate_java_code
numerical_negation
int_value (2)
numerical_negation
add_query("B", "d", <<["b", "INTEGER"], ["b", "BOOLEAN"], ["d", "BOOLEAN"], ["d", "INTEGER"], ["BOOLEAN", "INTEGER"], ["e", "c"], ["BOOLEAN", "INTEGER"], ["a", "BOOLEAN"], ["INTEGER", "INTEGER"]>>, "INTEGER")
conjunction
add_attribute("B", "A", "D")
generate_java_code
add_class(C)
add_attribute("D", "c", "BOOLEAN")
quotient
add_call_chain(<<a,D,A,A,a,C,B,D>>)
add_class(B)
add_query("B", "b", <<["A", "B"], ["B", "BOOLEAN"], ["BOOLEAN", "c"], ["D", "B"], ["D", "BOOLEAN"]>>, "D")
add_command("A", "A", <<["D", "BOOLEAN"], ["a", "c"], ["e", "BOOLEAN"], ["a", "B"], ["D", "a"], ["c", "BOOLEAN"], ["D", "INTEGER"]>>)
bool_value (true)
add_call_chain(<<d,D,INTEGER>>)
logical_negation
logical_negation
add_query("INTEGER", "B", <<["BOOLEAN", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "INTEGER"]>>, "INTEGER")
add_query("c", "A", <<["B", "INTEGER"], ["B", "BOOLEAN"], ["c", "A"], ["C", "B"], ["INTEGER", "A"], ["D", "B"], ["B", "INTEGER"], ["INTEGER", "B"], ["D", "D"]>>, "C")
greater_than
add_call_chain(<<a,BOOLEAN,e>>)
type_check
conjunction
add_query("d", "b", <<["d", "b"]>>, "D")
disjunction
type_check
bool_value (true)
bool_value (true)
add_call_chain(<<B,C,C,b,INTEGER,INTEGER>>)
add_call_chain(<<D,c>>)
add_attribute("B", "a", "a")
generate_java_code
add_class(e)
int_value (2)
equals
add_attribute("c", "A", "BOOLEAN")
bool_value (false)
add_query("A", "A", <<["c", "INTEGER"], ["d", "BOOLEAN"]>>, "D")
add_command("D", "C", <<["INTEGER", "e"], ["D", "INTEGER"]>>)
add_call_chain(<<C,B,BOOLEAN,C,A,e>>)
int_value (46)
add_query("A", "a", <<["D", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["d", "INTEGER"], ["B", "INTEGER"], ["d", "BOOLEAN"], ["INTEGER", "INTEGER"], ["c", "B"]>>, "C")
add_class(C)
less_than
add_class(e)
logical_negation
bool_value (false)
add_call_chain(<<C,INTEGER,D,b,a,a,INTEGER>>)
add_call_chain(<<B>>)
type_check
add_attribute("c", "BOOLEAN", "BOOLEAN")
type_check
generate_java_code
numerical_negation
add_call_chain(<<BOOLEAN,A,c,D,c,d,A,a,C>>)
quotient
conjunction
add_call_chain(<<A,e,A,BOOLEAN,C,b,b,d,INTEGER>>)
numerical_negation
add_call_chain(<<d,b,c,INTEGER,c,a,d,C,A>>)
disjunction
type_check
bool_value (true)
add_call_chain(<<B,a,A,D,B>>)
add_command("B", "c", <<["A", "INTEGER"], ["b", "A"], ["e", "BOOLEAN"], ["D", "C"], ["B", "INTEGER"]>>)
add_attribute("e", "c", "INTEGER")
bool_value (true)
add_attribute("B", "A", "A")
add_attribute("D", "C", "C")
generate_java_code
add_attribute("c", "C", "INTEGER")
add_attribute("INTEGER", "INTEGER", "INTEGER")
add_command("C", "a", <<["D", "BOOLEAN"], ["B", "D"], ["B", "BOOLEAN"]>>)
type_check
add_class(B)
add_class(B)
add_call_chain(<<d,b,D,B>>)
int_value (45)
add_attribute("C", "d", "BOOLEAN")
add_class(a)
logical_negation
add_call_chain(<<D>>)
int_value (43)
add_attribute("a", "B", "BOOLEAN")
int_value (24)
type_check
add_query("b", "C", <<["c", "INTEGER"], ["b", "e"]>>, "a")
logical_negation
add_query("e", "INTEGER", <<["b", "INTEGER"], ["e", "B"], ["e", "INTEGER"]>>, "a")
modulo
bool_value (false)
add_attribute("c", "B", "BOOLEAN")
add_call_chain(<<D>>)
add_call_chain(<<B,d,D,D,e,B,B,e>>)
add_attribute("b", "B", "c")
logical_negation
add_call_chain(<<B,c,C,d,D,b,D>>)
numerical_negation
add_call_chain(<<e,B,b,B>>)
add_query("a", "C", <<["B", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["d", "BOOLEAN"], ["c", "D"], ["c", "BOOLEAN"], ["C", "INTEGER"]>>, "INTEGER")
add_call_chain(<<C>>)
less_than
add_attribute("A", "B", "b")
numerical_negation
generate_java_code
quotient
add_command("INTEGER", "e", <<["a", "INTEGER"], ["e", "INTEGER"], ["A", "BOOLEAN"], ["D", "A"], ["a", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "BOOLEAN"]>>)
add_command("C", "e", <<["D", "D"], ["INTEGER", "C"], ["A", "BOOLEAN"], ["C", "A"], ["A", "INTEGER"]>>)
add_call_chain(<<a,a>>)
add_command("A", "A", <<["D", "BOOLEAN"], ["a", "C"], ["a", "INTEGER"], ["C", "INTEGER"], ["A", "INTEGER"], ["e", "INTEGER"], ["B", "c"], ["BOOLEAN", "INTEGER"], ["d", "BOOLEAN"]>>)
add_query("D", "D", <<["INTEGER", "A"]>>, "A")
less_than
add_attribute("C", "a", "INTEGER")
add_query("b", "C", <<["c", "c"], ["b", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "c"], ["e", "BOOLEAN"]>>, "e")
type_check
add_call_chain(<<e,D,A,D,INTEGER>>)
add_call_chain(<<C,a,A,D>>)
generate_java_code
add_call_chain(<<D>>)
add_query("INTEGER", "B", <<["c", "C"], ["B", "e"]>>, "d")
bool_value (true)
bool_value (true)
logical_negation
add_attribute("INTEGER", "C", "INTEGER")
add_call_chain(<<C,e,BOOLEAN,b,e,B,c,c,b>>)
bool_value (true)
add_command("d", "C", <<["c", "A"], ["A", "INTEGER"], ["d", "BOOLEAN"], ["INTEGER", "A"], ["e", "BOOLEAN"]>>)
add_class(c)
add_call_chain(<<c,A,B,C,D,INTEGER,BOOLEAN>>)
add_query("d", "A", <<["b", "B"], ["A", "C"], ["A", "INTEGER"], ["e", "INTEGER"], ["D", "C"], ["BOOLEAN", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "INTEGER"]>>, "BOOLEAN")
add_command("BOOLEAN", "b", <<["B", "A"], ["D", "D"], ["BOOLEAN", "INTEGER"], ["a", "INTEGER"], ["C", "INTEGER"], ["INTEGER", "INTEGER"]>>)
int_value (33)
add_call_chain(<<b,c,c,e,e,B,a,e>>)
add_call_chain(<<b,b,b,c>>)
numerical_negation
less_than
generate_java_code
logical_negation
add_call_chain(<<d>>)
add_class(c)
type_check
type_check
generate_java_code
logical_negation
add_call_chain(<<c,d,D>>)
generate_java_code
numerical_negation
bool_value (false)
add_call_chain(<<A,C,b,a,a,d,C>>)
logical_negation
add_class(c)
int_value (2)
bool_value (false)
add_query("e", "a", <<["e", "BOOLEAN"], ["b", "INTEGER"]>>, "INTEGER")
add_command("D", "a", <<["c", "INTEGER"], ["d", "BOOLEAN"], ["C", "b"]>>)
add_call_chain(<<A,C,d,C,A,A>>)
type_check
add_class(D)
less_than
type_check
add_attribute("c", "e", "BOOLEAN")
add_query("e", "D", <<["A", "e"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["D", "INTEGER"], ["a", "INTEGER"], ["e", "INTEGER"], ["c", "INTEGER"], ["B", "D"]>>, "a")
logical_negation
type_check
add_query("c", "e", <<["BOOLEAN", "INTEGER"], ["d", "a"]>>, "D")
numerical_negation
add_command("c", "D", <<["e", "BOOLEAN"], ["a", "INTEGER"], ["INTEGER", "a"], ["BOOLEAN", "B"], ["d", "INTEGER"], ["e", "BOOLEAN"]>>)
generate_java_code
add_query("B", "c", <<["D", "BOOLEAN"], ["c", "BOOLEAN"], ["a", "BOOLEAN"], ["b", "INTEGER"], ["c", "d"], ["D", "BOOLEAN"]>>, "A")
generate_java_code
add_call_chain(<<C,a,D,D>>)
logical_negation
less_than
add_command("A", "d", <<["A", "INTEGER"], ["INTEGER", "b"], ["A", "INTEGER"], ["e", "BOOLEAN"], ["C", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "BOOLEAN"]>>)
bool_value (true)
greater_than
logical_negation
add_command("BOOLEAN", "C", <<["c", "INTEGER"], ["D", "BOOLEAN"], ["c", "INTEGER"], ["b", "INTEGER"], ["B", "B"], ["A", "BOOLEAN"]>>)
add_class(a)
add_query("A", "INTEGER", <<["C", "INTEGER"], ["A", "INTEGER"]>>, "d")
logical_negation
add_attribute("e", "b", "BOOLEAN")
int_value (38)
generate_java_code
add_class(d)
generate_java_code
generate_java_code
add_attribute("INTEGER", "BOOLEAN", "A")
add_command("b", "B", <<["INTEGER", "C"], ["a", "b"], ["D", "d"], ["BOOLEAN", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["b", "BOOLEAN"], ["e", "D"]>>)
add_call_chain(<<B,A,B,b,C,c>>)
add_query("D", "D", <<["A", "INTEGER"], ["c", "C"], ["A", "BOOLEAN"], ["INTEGER", "D"], ["B", "BOOLEAN"], ["a", "BOOLEAN"]>>, "BOOLEAN")
add_command("c", "b", <<["A", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["C", "INTEGER"], ["a", "INTEGER"], ["D", "BOOLEAN"], ["B", "INTEGER"]>>)
add_call_chain(<<c>>)
generate_java_code
add_call_chain(<<BOOLEAN,D,c,C,d,b,C,A,B>>)
int_value (1)
add_call_chain(<<a,d,BOOLEAN>>)
add_attribute("D", "c", "B")
logical_negation
add_call_chain(<<a,e,B,INTEGER,c>>)
add_command("a", "B", <<["b", "BOOLEAN"], ["d", "INTEGER"], ["c", "c"]>>)
add_call_chain(<<e,b,C,c,a,d,A,b>>)
logical_negation
add_command("INTEGER", "B", <<["INTEGER", "INTEGER"], ["b", "INTEGER"], ["A", "BOOLEAN"], ["D", "C"], ["b", "INTEGER"]>>)
bool_value (false)
bool_value (false)
type_check
numerical_negation
add_class(b)
add_call_chain(<<C,a,b,a,d>>)
logical_negation
add_query("C", "a", <<["BOOLEAN", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "INTEGER"], ["a", "BOOLEAN"], ["d", "BOOLEAN"], ["c", "INTEGER"], ["A", "INTEGER"], ["d", "b"], ["B", "INTEGER"]>>, "b")
type_check
add_call_chain(<<C,B,B,a,INTEGER,C,a>>)
add_command("D", "C", <<["b", "c"], ["D", "BOOLEAN"], ["A", "INTEGER"]>>)
add_query("e", "d", <<["A", "BOOLEAN"], ["a", "c"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["b", "BOOLEAN"]>>, "C")
int_value (29)
add_call_chain(<<B,c,C,c,A>>)
add_call_chain(<<A,d,A>>)
add_command("d", "C", <<["A", "INTEGER"], ["a", "a"], ["e", "A"], ["a", "BOOLEAN"], ["e", "INTEGER"]>>)
int_value (3)
subtraction
less_than
logical_negation
conjunction
type_check
numerical_negation
int_value (40)
add_call_chain(<<a>>)
add_class(d)
generate_java_code
bool_value (false)
add_query("D", "A", <<["A", "INTEGER"], ["D", "INTEGER"], ["e", "BOOLEAN"], ["b", "b"], ["D", "INTEGER"], ["d", "d"], ["B", "INTEGER"]>>, "c")
add_query("b", "e", <<["C", "BOOLEAN"], ["C", "INTEGER"], ["A", "C"]>>, "d")
add_call_chain(<<e,e,b,d,b>>)
generate_java_code
logical_negation
generate_java_code
add_call_chain(<<INTEGER,B,c,b,e,b,c,a>>)
logical_negation
add_call_chain(<<B,e>>)
generate_java_code
numerical_negation
