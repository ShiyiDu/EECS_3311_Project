type_check
generate_java_code
add_class(B)
add_call_chain(<<INTEGER,d,e,d,b,A,B,D,A>>)
add_query("B", "c", <<["b", "INTEGER"]>>, "d")
add_call_chain(<<c,B,e,C,d,D,A>>)
logical_negation
generate_java_code
bool_value (true)
add_attribute("c", "C", "BOOLEAN")
add_call_chain(<<C,D,B,B,d,C,c,D>>)
add_class(BOOLEAN)
add_call_chain(<<D,e,c,B,D,A,B>>)
add_command("B", "D", <<["b", "INTEGER"], ["D", "INTEGER"], ["A", "INTEGER"], ["A", "A"], ["INTEGER", "INTEGER"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["C", "BOOLEAN"]>>)
add_query("INTEGER", "e", <<["c", "e"], ["B", "INTEGER"], ["B", "BOOLEAN"], ["C", "INTEGER"], ["a", "d"]>>, "d")
add_query("A", "C", <<["INTEGER", "e"], ["A", "A"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["c", "BOOLEAN"]>>, "b")
add_query("C", "B", <<["d", "INTEGER"], ["D", "INTEGER"], ["a", "BOOLEAN"], ["c", "BOOLEAN"]>>, "e")
add_query("c", "e", <<["A", "a"], ["D", "D"], ["d", "D"], ["a", "BOOLEAN"], ["D", "d"], ["C", "c"], ["B", "BOOLEAN"]>>, "c")
add_class(e)
add_call_chain(<<A>>)
disjunction
conjunction
add_call_chain(<<b,BOOLEAN,c,D,c,A,b,a,d>>)
add_command("e", "D", <<["INTEGER", "D"], ["b", "c"], ["b", "BOOLEAN"], ["a", "A"], ["B", "INTEGER"], ["d", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "INTEGER"], ["B", "B"]>>)
logical_negation
add_command("B", "D", <<["A", "INTEGER"], ["A", "INTEGER"], ["INTEGER", "INTEGER"], ["a", "INTEGER"], ["INTEGER", "INTEGER"], ["b", "INTEGER"], ["e", "BOOLEAN"]>>)
type_check
logical_negation
add_call_chain(<<D>>)
addition
add_command("D", "C", <<["a", "c"], ["a", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "d"], ["c", "BOOLEAN"]>>)
bool_value (true)
type_check
add_call_chain(<<B,c,A,D>>)
add_call_chain(<<a,e,D>>)
add_class(a)
add_query("D", "BOOLEAN", <<["D", "d"], ["A", "INTEGER"]>>, "c")
logical_negation
add_command("B", "BOOLEAN", <<["A", "BOOLEAN"], ["D", "A"], ["D", "BOOLEAN"]>>)
bool_value (true)
add_class(D)
add_class(B)
conjunction
numerical_negation
int_value (7)
add_query("d", "B", <<["b", "A"], ["b", "INTEGER"], ["D", "BOOLEAN"], ["INTEGER", "A"], ["A", "BOOLEAN"], ["B", "D"]>>, "e")
add_query("D", "b", <<["B", "B"], ["b", "BOOLEAN"], ["e", "C"], ["d", "BOOLEAN"], ["d", "B"], ["INTEGER", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>, "e")
add_call_chain(<<d,D,C,e,a>>)
add_call_chain(<<d,B,B,D,c,A,C,A,B>>)
bool_value (false)
int_value (5)
bool_value (false)
add_call_chain(<<a,D,B,A,D,BOOLEAN>>)
numerical_negation
subtraction
add_command("D", "D", <<["b", "b"], ["A", "A"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["a", "INTEGER"], ["C", "INTEGER"]>>)
add_query("D", "a", <<["d", "BOOLEAN"]>>, "D")
add_query("C", "C", <<["a", "INTEGER"], ["e", "C"], ["INTEGER", "B"], ["e", "INTEGER"]>>, "A")
numerical_negation
bool_value (false)
add_call_chain(<<C,d,d,c,a>>)
add_query("e", "B", <<["d", "INTEGER"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["c", "BOOLEAN"], ["d", "a"], ["D", "d"], ["C", "BOOLEAN"], ["INTEGER", "D"], ["D", "INTEGER"]>>, "D")
add_call_chain(<<c,d,c,BOOLEAN,A>>)
multiplication
add_call_chain(<<B,d>>)
bool_value (true)
equals
add_query("C", "d", <<["C", "BOOLEAN"], ["d", "A"]>>, "A")
add_command("d", "a", <<["INTEGER", "INTEGER"], ["C", "INTEGER"], ["b", "C"], ["d", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "D"], ["D", "b"]>>)
add_command("D", "C", <<["B", "BOOLEAN"]>>)
int_value (43)
greater_than
logical_negation
add_call_chain(<<A,B,D,b,D,C,c>>)
numerical_negation
add_call_chain(<<B,A,d,D,d,B>>)
add_query("A", "a", <<["b", "BOOLEAN"]>>, "c")
numerical_negation
add_command("D", "D", <<["a", "BOOLEAN"], ["C", "INTEGER"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["A", "B"], ["C", "c"], ["a", "B"], ["BOOLEAN", "BOOLEAN"]>>)
add_query("B", "D", <<["B", "BOOLEAN"], ["A", "a"]>>, "INTEGER")
add_attribute("A", "D", "INTEGER")
generate_java_code
add_attribute("d", "D", "INTEGER")
logical_negation
bool_value (false)
numerical_negation
add_command("A", "B", <<["b", "c"], ["C", "c"], ["c", "INTEGER"], ["c", "INTEGER"], ["B", "c"], ["A", "BOOLEAN"], ["D", "C"]>>)
less_than
int_value (42)
type_check
bool_value (false)
add_class(e)
generate_java_code
add_query("d", "b", <<["b", "INTEGER"], ["b", "INTEGER"], ["c", "INTEGER"], ["c", "INTEGER"], ["D", "INTEGER"], ["C", "INTEGER"], ["A", "INTEGER"], ["A", "INTEGER"], ["BOOLEAN", "e"]>>, "INTEGER")
add_call_chain(<<C,A,b,b,d>>)
bool_value (true)
add_call_chain(<<a,a,a,BOOLEAN>>)
add_command("B", "e", <<["D", "BOOLEAN"]>>)
add_command("A", "B", <<["D", "a"], ["C", "INTEGER"], ["e", "INTEGER"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "C"], ["D", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>)
bool_value (true)
type_check
add_query("A", "B", <<["a", "e"], ["a", "INTEGER"], ["C", "INTEGER"], ["INTEGER", "BOOLEAN"], ["D", "b"]>>, "A")
logical_negation
add_call_chain(<<D,b,d,c,C>>)
add_call_chain(<<D,D>>)
logical_negation
add_query("A", "a", <<["a", "BOOLEAN"], ["B", "INTEGER"], ["a", "a"]>>, "e")
disjunction
add_call_chain(<<A,D,A,B,d,D>>)
generate_java_code
disjunction
add_command("D", "BOOLEAN", <<["c", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["C", "BOOLEAN"], ["d", "BOOLEAN"]>>)
add_attribute("e", "INTEGER", "A")
addition
numerical_negation
add_class(B)
subtraction
add_attribute("e", "C", "BOOLEAN")
add_attribute("A", "a", "BOOLEAN")
add_call_chain(<<B,C,D,B,C,b,a>>)
add_command("C", "BOOLEAN", <<["a", "INTEGER"], ["d", "INTEGER"], ["A", "INTEGER"], ["D", "INTEGER"], ["BOOLEAN", "INTEGER"], ["B", "INTEGER"], ["INTEGER", "INTEGER"]>>)
add_call_chain(<<a,c,B,BOOLEAN,e,e,a,BOOLEAN>>)
add_attribute("D", "c", "INTEGER")
add_command("e", "D", <<["A", "C"], ["e", "BOOLEAN"], ["d", "INTEGER"], ["e", "BOOLEAN"], ["C", "c"], ["b", "B"], ["b", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>)
add_class(e)
generate_java_code
add_attribute("b", "b", "INTEGER")
add_call_chain(<<b,B,b,D,D,d,e,C,INTEGER>>)
generate_java_code
add_call_chain(<<a,d,A,B,A,d,D,e>>)
bool_value (false)
add_command("b", "b", <<["D", "BOOLEAN"], ["c", "INTEGER"], ["B", "INTEGER"], ["C", "INTEGER"], ["C", "INTEGER"], ["d", "INTEGER"], ["B", "BOOLEAN"]>>)
add_call_chain(<<e,B,BOOLEAN,A,b,A>>)
bool_value (false)
int_value (28)
int_value (33)
logical_negation
logical_negation
logical_negation
add_call_chain(<<d,d,BOOLEAN,c>>)
add_attribute("d", "e", "INTEGER")
bool_value (true)
add_call_chain(<<A,d>>)
int_value (10)
add_attribute("D", "a", "INTEGER")
generate_java_code
type_check
bool_value (false)
add_command("d", "d", <<["D", "BOOLEAN"], ["e", "c"], ["B", "C"]>>)
add_query("A", "b", <<["C", "BOOLEAN"]>>, "A")
add_query("b", "C", <<["C", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "D"], ["a", "D"]>>, "D")
add_query("d", "A", <<["d", "BOOLEAN"], ["c", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["A", "BOOLEAN"], ["INTEGER", "INTEGER"], ["C", "d"], ["d", "BOOLEAN"], ["e", "INTEGER"]>>, "B")
add_command("B", "A", <<["e", "C"], ["C", "b"], ["e", "e"], ["c", "B"], ["a", "INTEGER"], ["B", "BOOLEAN"], ["e", "INTEGER"], ["B", "A"]>>)
conjunction
logical_negation
add_attribute("b", "A", "BOOLEAN")
logical_negation
add_class(e)
logical_negation
disjunction
bool_value (true)
add_query("e", "e", <<["D", "BOOLEAN"]>>, "A")
add_command("a", "e", <<["D", "INTEGER"], ["b", "INTEGER"], ["e", "A"]>>)
add_call_chain(<<BOOLEAN,d,c>>)
type_check
add_attribute("b", "c", "C")
add_call_chain(<<BOOLEAN,c,e,C,B,d,B,a,a>>)
generate_java_code
add_query("C", "D", <<["D", "INTEGER"], ["INTEGER", "c"], ["D", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["c", "d"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "BOOLEAN"]>>, "D")
int_value (5)
int_value (38)
add_command("C", "d", <<["e", "BOOLEAN"], ["BOOLEAN", "d"], ["a", "BOOLEAN"], ["e", "c"], ["BOOLEAN", "d"]>>)
add_attribute("b", "e", "c")
add_command("A", "INTEGER", <<["D", "B"], ["B", "BOOLEAN"], ["D", "INTEGER"], ["C", "BOOLEAN"]>>)
generate_java_code
add_query("D", "a", <<["a", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["a", "BOOLEAN"], ["e", "B"], ["INTEGER", "BOOLEAN"], ["D", "INTEGER"]>>, "D")
logical_negation
add_command("B", "c", <<["B", "INTEGER"]>>)
numerical_negation
numerical_negation
logical_negation
int_value (13)
bool_value (false)
add_call_chain(<<e,INTEGER>>)
generate_java_code
type_check
bool_value (false)
add_class(c)
add_attribute("d", "e", "d")
add_query("e", "e", <<["c", "e"], ["C", "INTEGER"], ["d", "a"], ["C", "C"], ["A", "INTEGER"], ["e", "b"]>>, "INTEGER")
bool_value (true)
add_attribute("e", "e", "BOOLEAN")
bool_value (false)
add_call_chain(<<A,C,b,b,b,e,BOOLEAN>>)
generate_java_code
add_command("INTEGER", "A", <<["a", "e"], ["d", "d"]>>)
type_check
type_check
add_class(B)
add_command("e", "e", <<["c", "a"], ["A", "d"], ["b", "INTEGER"], ["e", "INTEGER"], ["A", "BOOLEAN"], ["B", "INTEGER"]>>)
numerical_negation
add_class(e)
numerical_negation
int_value (45)
numerical_negation
numerical_negation
bool_value (true)
add_class(d)
add_attribute("d", "A", "e")
add_call_chain(<<a,A,a,C,a,A>>)
type_check
bool_value (false)
bool_value (true)
add_class(A)
add_call_chain(<<C,B,a,c,e,b,b>>)
add_command("B", "a", <<["D", "BOOLEAN"]>>)
add_call_chain(<<b,b,c,d,b,INTEGER>>)
add_call_chain(<<c,d,d,A,A,e,e,e>>)
logical_negation
modulo
add_call_chain(<<d,D,d,b>>)
add_attribute("C", "a", "BOOLEAN")
add_call_chain(<<c,B,C,c,C,INTEGER,A,a,a>>)
add_attribute("c", "B", "BOOLEAN")
add_call_chain(<<e,d,c>>)
equals
disjunction
numerical_negation
add_command("B", "a", <<["B", "a"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["INTEGER", "A"], ["b", "BOOLEAN"]>>)
int_value (4)
add_call_chain(<<B>>)
add_call_chain(<<d,D,C,e,C,A>>)
add_query("B", "A", <<["C", "BOOLEAN"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["A", "C"], ["c", "C"], ["a", "C"], ["B", "b"], ["INTEGER", "INTEGER"]>>, "e")
bool_value (true)
add_command("C", "D", <<["C", "b"]>>)
add_class(b)
add_attribute("B", "a", "INTEGER")
bool_value (false)
bool_value (true)
add_command("a", "B", <<["B", "INTEGER"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "BOOLEAN"], ["d", "A"]>>)
logical_negation
bool_value (false)
int_value (11)
conjunction
numerical_negation
add_query("b", "c", <<["C", "a"], ["A", "D"], ["b", "INTEGER"]>>, "BOOLEAN")
add_call_chain(<<D>>)
numerical_negation
disjunction
bool_value (false)
generate_java_code
add_call_chain(<<C,b,b,a,A,A,d,e,A>>)
bool_value (false)
type_check
type_check
subtraction
add_call_chain(<<D,a,b,D>>)
numerical_negation
type_check
add_attribute("C", "a", "INTEGER")
int_value (7)
int_value (8)
int_value (39)
type_check
multiplication
add_class(B)
add_class(BOOLEAN)
add_attribute("e", "D", "BOOLEAN")
numerical_negation
add_command("C", "INTEGER", <<["INTEGER", "BOOLEAN"], ["b", "INTEGER"], ["A", "C"], ["a", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["a", "D"], ["C", "d"]>>)
add_command("D", "BOOLEAN", <<["b", "INTEGER"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["INTEGER", "BOOLEAN"], ["b", "e"], ["d", "INTEGER"]>>)
numerical_negation
add_call_chain(<<B,a,B,b,B,b>>)
add_call_chain(<<a,A,INTEGER,D,C>>)
add_query("B", "B", <<["A", "BOOLEAN"], ["D", "d"]>>, "d")
multiplication
bool_value (false)
add_command("C", "A", <<["C", "BOOLEAN"], ["C", "INTEGER"], ["b", "INTEGER"], ["e", "INTEGER"]>>)
less_than
add_attribute("BOOLEAN", "B", "B")
bool_value (false)
bool_value (false)
add_query("C", "D", <<["e", "INTEGER"], ["b", "A"], ["A", "BOOLEAN"], ["D", "INTEGER"], ["C", "a"], ["c", "B"], ["e", "INTEGER"], ["d", "INTEGER"], ["b", "INTEGER"]>>, "A")
less_than
greater_than
add_attribute("a", "A", "BOOLEAN")
add_call_chain(<<d,A,a,B,d,b>>)
add_query("A", "A", <<["c", "d"], ["a", "INTEGER"], ["a", "INTEGER"], ["C", "INTEGER"], ["C", "INTEGER"], ["INTEGER", "INTEGER"], ["e", "INTEGER"], ["e", "A"], ["b", "BOOLEAN"]>>, "INTEGER")
add_call_chain(<<c>>)
type_check
add_command("e", "a", <<["C", "INTEGER"], ["a", "INTEGER"], ["C", "BOOLEAN"], ["b", "B"]>>)
