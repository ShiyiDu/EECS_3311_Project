generate_java_code
conjunction
add_attribute("INTEGER", "b", "INTEGER")
numerical_negation
add_class(b)
add_call_chain(<<D,C,B,c,BOOLEAN>>)
add_attribute("B", "a", "INTEGER")
generate_java_code
type_check
add_call_chain(<<e,d,c,c,a>>)
add_query("d", "A", <<["b", "d"], ["c", "INTEGER"]>>, "c")
add_command("A", "D", <<["D", "INTEGER"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["d", "INTEGER"], ["d", "INTEGER"], ["BOOLEAN", "D"], ["b", "e"], ["c", "BOOLEAN"], ["C", "e"]>>)
add_call_chain(<<A,d,b,C>>)
add_query("e", "D", <<["d", "BOOLEAN"], ["C", "INTEGER"], ["A", "INTEGER"], ["e", "BOOLEAN"]>>, "d")
add_command("D", "A", <<["e", "B"], ["INTEGER", "C"]>>)
add_command("b", "a", <<["a", "INTEGER"]>>)
less_than
subtraction
add_call_chain(<<A,b,e>>)
add_call_chain(<<a,c,a,d,A,b,a>>)
numerical_negation
numerical_negation
add_call_chain(<<D,D,D,a,D>>)
add_attribute("B", "e", "INTEGER")
int_value (23)
add_query("e", "INTEGER", <<["a", "INTEGER"], ["B", "BOOLEAN"], ["c", "d"], ["C", "BOOLEAN"], ["B", "INTEGER"]>>, "a")
add_command("c", "a", <<["C", "BOOLEAN"], ["e", "e"], ["C", "BOOLEAN"]>>)
numerical_negation
add_attribute("B", "e", "INTEGER")
conjunction
numerical_negation
add_call_chain(<<D,INTEGER,A,B,e>>)
add_call_chain(<<BOOLEAN,e,A,e,B,d,C,e>>)
add_call_chain(<<b,BOOLEAN,c,d>>)
logical_negation
add_call_chain(<<a,c,BOOLEAN,a,A,D,c,e,b>>)
add_attribute("C", "B", "BOOLEAN")
add_call_chain(<<B,B,D,A,e,C,e,BOOLEAN,c>>)
add_call_chain(<<C,B,d,b,BOOLEAN,B>>)
bool_value (true)
add_class(BOOLEAN)
type_check
logical_negation
generate_java_code
int_value (28)
add_query("A", "D", <<["C", "BOOLEAN"], ["a", "C"], ["e", "INTEGER"], ["B", "INTEGER"]>>, "a")
add_attribute("D", "D", "INTEGER")
generate_java_code
add_call_chain(<<INTEGER>>)
add_call_chain(<<a,C,d,C,b,D,D,INTEGER>>)
add_command("D", "D", <<["c", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "INTEGER"], ["e", "BOOLEAN"]>>)
add_query("C", "c", <<["A", "BOOLEAN"]>>, "a")
bool_value (false)
numerical_negation
add_command("e", "INTEGER", <<["INTEGER", "INTEGER"]>>)
logical_negation
add_call_chain(<<A,A,B,A,A,e>>)
add_command("A", "A", <<["B", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "INTEGER"], ["e", "INTEGER"]>>)
equals
bool_value (true)
add_attribute("INTEGER", "e", "INTEGER")
addition
add_call_chain(<<A,A,c,a,D,b,D,D>>)
logical_negation
bool_value (true)
add_attribute("INTEGER", "D", "BOOLEAN")
add_query("C", "D", <<["e", "INTEGER"]>>, "INTEGER")
add_query("B", "BOOLEAN", <<["B", "a"], ["d", "INTEGER"], ["c", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "D"], ["INTEGER", "INTEGER"], ["b", "INTEGER"], ["e", "INTEGER"]>>, "D")
add_call_chain(<<a,e,b,a,e,d,B,C>>)
add_command("B", "BOOLEAN", <<["B", "BOOLEAN"]>>)
add_attribute("D", "D", "a")
generate_java_code
add_call_chain(<<e>>)
add_command("B", "A", <<["B", "INTEGER"], ["d", "BOOLEAN"], ["B", "INTEGER"], ["B", "INTEGER"]>>)
add_attribute("d", "B", "C")
add_attribute("B", "INTEGER", "e")
logical_negation
add_call_chain(<<d,e,C,b,C,C>>)
add_class(b)
equals
disjunction
numerical_negation
add_call_chain(<<d,B,d,a,C,e,B,B,C>>)
add_command("e", "c", <<["B", "BOOLEAN"], ["a", "e"], ["C", "c"], ["B", "INTEGER"], ["c", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "INTEGER"], ["D", "BOOLEAN"], ["e", "c"]>>)
add_command("C", "BOOLEAN", <<["BOOLEAN", "D"], ["c", "e"]>>)
numerical_negation
int_value (2)
subtraction
int_value (27)
int_value (45)
add_attribute("e", "b", "D")
bool_value (false)
disjunction
add_call_chain(<<c,B,A,D>>)
type_check
generate_java_code
generate_java_code
add_call_chain(<<b>>)
logical_negation
logical_negation
disjunction
add_call_chain(<<C,b,INTEGER,e,A,e>>)
add_call_chain(<<c,b>>)
conjunction
int_value (21)
bool_value (true)
conjunction
bool_value (true)
numerical_negation
add_attribute("INTEGER", "B", "INTEGER")
disjunction
int_value (19)
disjunction
add_attribute("A", "C", "INTEGER")
add_call_chain(<<D,D,A,A,C>>)
add_call_chain(<<B,BOOLEAN,C,C,BOOLEAN,a,INTEGER,b>>)
type_check
disjunction
add_call_chain(<<BOOLEAN,c,B,A,BOOLEAN,A,B>>)
add_call_chain(<<B,e,D>>)
logical_negation
add_call_chain(<<a,c,A,a,d,b,A,d,D>>)
add_attribute("C", "B", "BOOLEAN")
add_class(b)
multiplication
int_value (21)
add_command("e", "C", <<["A", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>)
add_query("INTEGER", "C", <<["e", "C"]>>, "b")
add_attribute("c", "e", "B")
logical_negation
add_query("INTEGER", "INTEGER", <<["BOOLEAN", "BOOLEAN"]>>, "c")
greater_than
bool_value (false)
greater_than
add_command("C", "C", <<["INTEGER", "INTEGER"], ["BOOLEAN", "d"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
add_call_chain(<<b,e,A,A>>)
add_attribute("A", "c", "BOOLEAN")
generate_java_code
int_value (40)
add_command("e", "INTEGER", <<["c", "BOOLEAN"]>>)
add_query("A", "C", <<["A", "D"], ["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "INTEGER"], ["C", "INTEGER"], ["C", "INTEGER"], ["B", "B"], ["b", "B"], ["a", "BOOLEAN"]>>, "c")
add_query("d", "b", <<["B", "INTEGER"], ["b", "BOOLEAN"], ["c", "A"], ["C", "A"], ["c", "INTEGER"], ["d", "c"], ["e", "INTEGER"], ["d", "BOOLEAN"]>>, "a")
conjunction
subtraction
int_value (30)
add_query("C", "INTEGER", <<["a", "INTEGER"], ["B", "INTEGER"], ["a", "B"]>>, "e")
add_call_chain(<<a,a,A,C,a,b,a,e,B>>)
bool_value (true)
bool_value (true)
type_check
greater_than
int_value (37)
logical_negation
logical_negation
add_command("B", "B", <<["d", "D"], ["e", "INTEGER"], ["c", "INTEGER"], ["d", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["C", "e"], ["a", "BOOLEAN"]>>)
add_call_chain(<<d,e,d,INTEGER,C,d,e,b,B>>)
less_than
add_command("D", "BOOLEAN", <<["B", "INTEGER"], ["a", "a"], ["e", "D"], ["B", "INTEGER"]>>)
conjunction
int_value (23)
subtraction
addition
type_check
bool_value (true)
add_call_chain(<<b,e,c,c>>)
add_query("b", "d", <<["D", "INTEGER"], ["C", "e"], ["A", "d"], ["A", "BOOLEAN"]>>, "e")
generate_java_code
add_class(b)
add_command("b", "c", <<["c", "BOOLEAN"], ["a", "D"], ["e", "BOOLEAN"], ["c", "c"], ["e", "a"], ["d", "INTEGER"], ["e", "BOOLEAN"], ["c", "INTEGER"], ["c", "BOOLEAN"]>>)
bool_value (true)
add_call_chain(<<C,b,b>>)
logical_negation
less_than
logical_negation
add_query("b", "A", <<["c", "INTEGER"], ["B", "INTEGER"], ["a", "INTEGER"], ["A", "BOOLEAN"]>>, "A")
int_value (31)
add_class(D)
int_value (25)
logical_negation
add_call_chain(<<B,a,A,C,B>>)
add_call_chain(<<D,b,a,D,b,e,c,c>>)
add_call_chain(<<C,C,A,BOOLEAN,e,d,b,c,b>>)
add_attribute("b", "B", "d")
add_call_chain(<<D,d,B,A,d>>)
int_value (36)
numerical_negation
add_query("c", "C", <<["c", "BOOLEAN"], ["B", "B"], ["C", "C"], ["b", "BOOLEAN"], ["D", "INTEGER"]>>, "BOOLEAN")
add_call_chain(<<c>>)
add_class(B)
add_call_chain(<<b,c>>)
generate_java_code
add_command("C", "C", <<["C", "C"], ["e", "a"], ["B", "INTEGER"], ["INTEGER", "BOOLEAN"], ["a", "e"], ["c", "BOOLEAN"], ["A", "INTEGER"]>>)
add_call_chain(<<BOOLEAN>>)
int_value (8)
logical_negation
numerical_negation
logical_negation
add_call_chain(<<D,B,a,D,d,e>>)
subtraction
modulo
bool_value (true)
add_class(e)
add_attribute("A", "A", "INTEGER")
int_value (3)
numerical_negation
int_value (40)
add_query("e", "b", <<["c", "INTEGER"]>>, "d")
add_query("D", "d", <<["e", "BOOLEAN"], ["d", "INTEGER"], ["D", "BOOLEAN"], ["b", "A"], ["C", "BOOLEAN"], ["INTEGER", "d"], ["d", "BOOLEAN"], ["A", "c"]>>, "c")
add_command("D", "D", <<["b", "INTEGER"], ["a", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["c", "INTEGER"], ["BOOLEAN", "INTEGER"], ["c", "BOOLEAN"], ["a", "BOOLEAN"]>>)
add_attribute("c", "D", "INTEGER")
add_class(C)
add_call_chain(<<A,e,e,D>>)
int_value (27)
numerical_negation
add_call_chain(<<e,c,b,A,d>>)
add_query("C", "d", <<["BOOLEAN", "BOOLEAN"], ["D", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>, "INTEGER")
add_command("c", "INTEGER", <<["d", "BOOLEAN"], ["C", "b"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["B", "INTEGER"], ["B", "INTEGER"], ["b", "BOOLEAN"]>>)
add_call_chain(<<a,B,b,D,d,A,e,INTEGER>>)
add_class(e)
generate_java_code
greater_than
generate_java_code
logical_negation
add_call_chain(<<D>>)
