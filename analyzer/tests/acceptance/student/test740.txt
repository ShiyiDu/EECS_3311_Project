add_command("B", "b", <<["c", "INTEGER"]>>)
add_call_chain(<<C,e,A,D,C,e,c,B>>)
add_query("b", "D", <<["c", "d"], ["C", "b"], ["e", "BOOLEAN"], ["a", "D"]>>, "C")
subtraction
add_call_chain(<<INTEGER,INTEGER,B,C,D>>)
add_call_chain(<<a,INTEGER,d,C,A,INTEGER,d,b>>)
conjunction
bool_value (false)
bool_value (false)
add_call_chain(<<c,BOOLEAN,d>>)
int_value (21)
conjunction
add_class(C)
numerical_negation
numerical_negation
addition
add_attribute("c", "e", "INTEGER")
add_attribute("B", "A", "c")
add_command("B", "b", <<["A", "INTEGER"], ["b", "BOOLEAN"], ["A", "B"], ["B", "INTEGER"], ["BOOLEAN", "INTEGER"], ["INTEGER", "INTEGER"], ["d", "BOOLEAN"], ["a", "INTEGER"]>>)
add_command("D", "d", <<["d", "INTEGER"], ["C", "B"], ["b", "INTEGER"], ["A", "d"]>>)
add_call_chain(<<e,c,BOOLEAN,C,B,INTEGER,B>>)
add_query("c", "d", <<["A", "INTEGER"], ["e", "BOOLEAN"], ["b", "INTEGER"]>>, "a")
add_command("b", "d", <<["B", "INTEGER"]>>)
add_attribute("D", "a", "INTEGER")
add_attribute("a", "D", "c")
add_command("a", "INTEGER", <<["A", "c"], ["c", "INTEGER"], ["b", "BOOLEAN"], ["a", "D"], ["a", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "INTEGER"]>>)
add_attribute("B", "B", "A")
less_than
add_call_chain(<<D,b,d,C,D,C>>)
bool_value (false)
less_than
add_command("d", "D", <<["b", "C"], ["b", "INTEGER"], ["c", "B"], ["D", "BOOLEAN"], ["e", "INTEGER"], ["A", "BOOLEAN"]>>)
add_call_chain(<<C,d,B,e,b,d,D,INTEGER,BOOLEAN>>)
add_call_chain(<<e,D>>)
add_command("e", "D", <<["a", "C"], ["e", "A"], ["D", "d"], ["C", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["c", "BOOLEAN"], ["b", "INTEGER"]>>)
modulo
add_class(A)
logical_negation
bool_value (true)
add_attribute("e", "D", "BOOLEAN")
bool_value (true)
bool_value (true)
conjunction
add_query("C", "C", <<["B", "INTEGER"], ["B", "BOOLEAN"], ["D", "BOOLEAN"]>>, "d")
add_query("D", "c", <<["D", "INTEGER"], ["d", "BOOLEAN"], ["B", "C"], ["INTEGER", "INTEGER"]>>, "B")
add_call_chain(<<D,c,D>>)
bool_value (false)
add_call_chain(<<B,c,a,a,d,e>>)
add_command("BOOLEAN", "B", <<["a", "BOOLEAN"], ["e", "A"], ["c", "BOOLEAN"], ["d", "INTEGER"], ["BOOLEAN", "d"], ["b", "INTEGER"], ["e", "C"]>>)
add_attribute("b", "b", "BOOLEAN")
bool_value (true)
add_class(BOOLEAN)
add_command("c", "d", <<["B", "b"], ["D", "INTEGER"], ["e", "D"], ["C", "BOOLEAN"]>>)
type_check
type_check
numerical_negation
type_check
add_call_chain(<<A>>)
add_command("A", "D", <<["b", "BOOLEAN"], ["D", "INTEGER"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "B"]>>)
add_attribute("b", "e", "INTEGER")
int_value (35)
add_attribute("BOOLEAN", "A", "INTEGER")
add_attribute("a", "A", "A")
add_command("B", "e", <<["b", "a"], ["b", "BOOLEAN"], ["C", "C"]>>)
disjunction
type_check
bool_value (true)
less_than
bool_value (true)
subtraction
bool_value (false)
generate_java_code
add_command("a", "C", <<["B", "c"], ["C", "d"], ["B", "BOOLEAN"]>>)
less_than
add_attribute("A", "A", "BOOLEAN")
conjunction
int_value (31)
int_value (47)
add_command("A", "d", <<["B", "d"], ["c", "BOOLEAN"], ["B", "INTEGER"], ["a", "A"], ["d", "BOOLEAN"], ["INTEGER", "INTEGER"], ["b", "INTEGER"]>>)
add_class(a)
add_query("D", "B", <<["BOOLEAN", "c"], ["D", "BOOLEAN"], ["c", "e"], ["C", "BOOLEAN"], ["b", "a"], ["c", "BOOLEAN"], ["b", "e"], ["B", "INTEGER"], ["d", "INTEGER"]>>, "A")
add_call_chain(<<d,C,C,b,C,c,C,b>>)
numerical_negation
disjunction
add_call_chain(<<c,a>>)
add_query("C", "C", <<["A", "INTEGER"], ["B", "INTEGER"], ["B", "INTEGER"], ["a", "INTEGER"], ["b", "BOOLEAN"], ["a", "BOOLEAN"]>>, "B")
numerical_negation
bool_value (true)
add_command("c", "b", <<["d", "b"]>>)
add_call_chain(<<BOOLEAN,e,B,a>>)
add_call_chain(<<A,B,INTEGER,B>>)
add_call_chain(<<A,e,A,C,B,D>>)
add_command("B", "B", <<["C", "BOOLEAN"], ["a", "INTEGER"], ["a", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "BOOLEAN"], ["c", "C"], ["e", "BOOLEAN"], ["A", "B"]>>)
modulo
greater_than
add_query("d", "D", <<["e", "A"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["A", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "INTEGER"], ["B", "a"], ["b", "INTEGER"]>>, "A")
add_command("D", "c", <<["c", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "BOOLEAN"]>>)
add_attribute("C", "b", "INTEGER")
add_attribute("b", "BOOLEAN", "d")
int_value (7)
int_value (34)
logical_negation
conjunction
numerical_negation
add_command("B", "B", <<["a", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["a", "INTEGER"], ["c", "D"], ["D", "BOOLEAN"]>>)
int_value (48)
add_query("D", "B", <<["d", "INTEGER"], ["A", "BOOLEAN"], ["d", "INTEGER"]>>, "a")
add_attribute("e", "INTEGER", "BOOLEAN")
add_call_chain(<<B,b>>)
logical_negation
multiplication
less_than
add_command("b", "B", <<["b", "BOOLEAN"], ["C", "c"], ["B", "INTEGER"], ["d", "c"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["d", "INTEGER"], ["b", "a"], ["d", "INTEGER"]>>)
generate_java_code
add_class(D)
logical_negation
conjunction
add_call_chain(<<A,D,C,e,e,e,a,e>>)
bool_value (false)
add_attribute("b", "D", "A")
add_command("b", "b", <<["b", "BOOLEAN"], ["A", "INTEGER"], ["c", "B"], ["C", "INTEGER"], ["B", "INTEGER"], ["D", "INTEGER"]>>)
add_call_chain(<<d,A,C,d>>)
add_call_chain(<<INTEGER,A,INTEGER,e,B,a,C,b,d>>)
add_command("b", "INTEGER", <<["D", "c"], ["d", "b"], ["INTEGER", "INTEGER"], ["A", "BOOLEAN"], ["a", "INTEGER"]>>)
int_value (33)
add_class(b)
logical_negation
less_than
add_call_chain(<<b,b,D,b,C,b,e>>)
bool_value (false)
bool_value (false)
add_command("C", "A", <<["d", "D"], ["D", "INTEGER"], ["d", "BOOLEAN"], ["a", "BOOLEAN"]>>)
generate_java_code
type_check
numerical_negation
add_call_chain(<<B,b,C,D,b,b>>)
subtraction
bool_value (false)
add_call_chain(<<b,c,a,B,D,A,BOOLEAN>>)
type_check
add_command("e", "d", <<["INTEGER", "INTEGER"], ["c", "BOOLEAN"], ["d", "c"]>>)
add_query("e", "A", <<["C", "BOOLEAN"], ["C", "BOOLEAN"]>>, "b")
add_command("C", "A", <<["a", "BOOLEAN"], ["b", "INTEGER"], ["A", "a"], ["D", "INTEGER"], ["A", "BOOLEAN"], ["D", "e"], ["A", "INTEGER"], ["B", "a"], ["D", "b"]>>)
numerical_negation
add_attribute("a", "c", "INTEGER")
add_query("a", "a", <<["e", "INTEGER"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["B", "INTEGER"], ["B", "e"]>>, "BOOLEAN")
conjunction
add_attribute("B", "INTEGER", "b")
add_command("INTEGER", "d", <<["b", "INTEGER"], ["d", "BOOLEAN"], ["BOOLEAN", "a"], ["b", "D"], ["c", "INTEGER"], ["D", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "BOOLEAN"]>>)
add_class(INTEGER)
add_call_chain(<<D>>)
numerical_negation
generate_java_code
subtraction
greater_than
add_attribute("b", "b", "INTEGER")
add_query("C", "c", <<["A", "BOOLEAN"], ["d", "INTEGER"], ["e", "INTEGER"], ["a", "BOOLEAN"], ["C", "B"], ["INTEGER", "BOOLEAN"], ["a", "INTEGER"], ["D", "BOOLEAN"]>>, "d")
add_call_chain(<<D,B,d>>)
add_command("INTEGER", "C", <<["a", "INTEGER"], ["b", "BOOLEAN"], ["a", "d"], ["A", "INTEGER"], ["C", "A"], ["INTEGER", "BOOLEAN"]>>)
type_check
bool_value (false)
add_attribute("c", "A", "e")
subtraction
add_class(e)
generate_java_code
add_call_chain(<<a,b,A,BOOLEAN>>)
equals
disjunction
add_command("d", "a", <<["b", "D"], ["D", "BOOLEAN"], ["B", "INTEGER"]>>)
bool_value (false)
add_query("INTEGER", "a", <<["b", "B"], ["A", "BOOLEAN"], ["d", "e"], ["e", "BOOLEAN"]>>, "B")
bool_value (true)
logical_negation
add_call_chain(<<b,C,d>>)
add_command("b", "A", <<["a", "INTEGER"], ["b", "BOOLEAN"], ["B", "B"], ["a", "BOOLEAN"]>>)
add_call_chain(<<a,C,C,B,BOOLEAN,e>>)
conjunction
bool_value (false)
add_command("b", "c", <<["A", "BOOLEAN"], ["B", "INTEGER"], ["c", "d"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "BOOLEAN"]>>)
generate_java_code
add_command("D", "c", <<["d", "d"], ["a", "INTEGER"], ["b", "a"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["b", "e"]>>)
add_call_chain(<<A,b,e,d,a>>)
subtraction
add_call_chain(<<D,e,e,c,D,a>>)
logical_negation
add_call_chain(<<e,d,A,d,a>>)
add_command("B", "A", <<["c", "INTEGER"], ["A", "INTEGER"], ["A", "INTEGER"], ["b", "BOOLEAN"], ["C", "INTEGER"], ["d", "BOOLEAN"], ["c", "C"], ["BOOLEAN", "d"]>>)
numerical_negation
add_query("b", "c", <<["C", "BOOLEAN"], ["B", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["D", "A"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["d", "INTEGER"], ["A", "BOOLEAN"]>>, "A")
numerical_negation
bool_value (false)
add_command("C", "d", <<["e", "BOOLEAN"], ["a", "C"], ["c", "INTEGER"], ["b", "c"], ["INTEGER", "A"]>>)
add_call_chain(<<e,A,e,C,e,A,a>>)
add_command("INTEGER", "b", <<["d", "INTEGER"], ["D", "BOOLEAN"], ["D", "A"]>>)
conjunction
conjunction
logical_negation
add_query("a", "b", <<["C", "C"]>>, "A")
int_value (3)
int_value (20)
add_class(c)
add_call_chain(<<B,e,d,C,d,a,c>>)
addition
add_attribute("c", "C", "INTEGER")
logical_negation
add_query("c", "c", <<["D", "B"], ["b", "INTEGER"]>>, "d")
add_attribute("d", "B", "INTEGER")
int_value (4)
int_value (24)
type_check
add_class(C)
add_call_chain(<<C,A,INTEGER,d,e,INTEGER,e,A,e>>)
add_attribute("B", "b", "BOOLEAN")
add_attribute("d", "A", "INTEGER")
add_query("b", "C", <<["B", "d"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["B", "INTEGER"], ["e", "c"], ["b", "INTEGER"], ["A", "BOOLEAN"], ["D", "INTEGER"], ["A", "A"]>>, "D")
int_value (5)
generate_java_code
add_class(D)
type_check
add_query("D", "D", <<["d", "A"], ["D", "BOOLEAN"], ["d", "C"], ["e", "b"], ["INTEGER", "BOOLEAN"], ["A", "C"]>>, "B")
modulo
generate_java_code
numerical_negation
int_value (17)
add_call_chain(<<a>>)
disjunction
numerical_negation
add_call_chain(<<B,C,e,a,b,C,B>>)
logical_negation
add_query("INTEGER", "B", <<["C", "a"], ["e", "INTEGER"], ["d", "BOOLEAN"], ["A", "INTEGER"], ["INTEGER", "INTEGER"], ["d", "BOOLEAN"], ["D", "INTEGER"]>>, "d")
add_attribute("a", "c", "B")
disjunction
addition
add_call_chain(<<c,B,e>>)
bool_value (false)
add_command("INTEGER", "e", <<["d", "a"], ["b", "INTEGER"], ["c", "INTEGER"], ["INTEGER", "BOOLEAN"], ["c", "INTEGER"], ["b", "BOOLEAN"]>>)
bool_value (false)
add_call_chain(<<C>>)
add_call_chain(<<b,B,c,b,INTEGER,b,A,d>>)
add_call_chain(<<INTEGER,C>>)
