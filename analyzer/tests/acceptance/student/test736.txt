bool_value (true)
bool_value (false)
add_call_chain(<<BOOLEAN,c,D,B,INTEGER,c>>)
logical_negation
bool_value (true)
add_query("INTEGER", "INTEGER", <<["C", "INTEGER"], ["C", "B"], ["a", "INTEGER"], ["INTEGER", "BOOLEAN"], ["c", "C"], ["C", "INTEGER"], ["D", "INTEGER"], ["B", "INTEGER"], ["e", "d"]>>, "BOOLEAN")
logical_negation
add_attribute("d", "C", "INTEGER")
add_query("b", "B", <<["C", "INTEGER"]>>, "A")
add_attribute("BOOLEAN", "e", "INTEGER")
generate_java_code
logical_negation
modulo
numerical_negation
bool_value (true)
add_call_chain(<<d,INTEGER,c,D>>)
conjunction
int_value (25)
add_call_chain(<<a>>)
add_query("b", "c", <<["a", "c"], ["a", "BOOLEAN"], ["a", "B"], ["D", "BOOLEAN"], ["D", "a"]>>, "a")
add_attribute("c", "d", "INTEGER")
modulo
logical_negation
add_attribute("B", "a", "BOOLEAN")
add_attribute("INTEGER", "B", "BOOLEAN")
add_call_chain(<<B,B,d,B,B,C,d,b,A>>)
equals
add_call_chain(<<D,A,b,d,C,D,b,e>>)
add_attribute("C", "c", "D")
add_query("C", "C", <<["C", "INTEGER"], ["e", "c"], ["d", "BOOLEAN"], ["c", "BOOLEAN"], ["d", "INTEGER"]>>, "b")
conjunction
bool_value (true)
int_value (4)
int_value (20)
bool_value (true)
add_call_chain(<<A,c,BOOLEAN,C,A,c,C,C,c>>)
generate_java_code
add_class(INTEGER)
equals
int_value (38)
add_query("D", "e", <<["C", "BOOLEAN"], ["d", "INTEGER"], ["C", "e"]>>, "BOOLEAN")
conjunction
logical_negation
add_command("c", "e", <<["A", "BOOLEAN"]>>)
conjunction
add_attribute("e", "d", "BOOLEAN")
add_attribute("A", "A", "BOOLEAN")
add_call_chain(<<b,b,a,B,b,d,d,C>>)
add_class(c)
add_command("e", "b", <<["D", "A"], ["a", "INTEGER"], ["a", "C"], ["B", "INTEGER"], ["INTEGER", "INTEGER"], ["C", "b"]>>)
logical_negation
add_command("B", "INTEGER", <<["C", "INTEGER"], ["c", "BOOLEAN"], ["a", "BOOLEAN"]>>)
add_command("D", "C", <<["e", "INTEGER"], ["a", "BOOLEAN"], ["b", "BOOLEAN"], ["d", "C"]>>)
logical_negation
logical_negation
add_call_chain(<<D,d,d,BOOLEAN,b,c,C>>)
add_command("B", "c", <<["A", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "c"], ["A", "c"]>>)
add_call_chain(<<c,d,c,C,b>>)
add_class(b)
bool_value (true)
add_class(C)
add_class(BOOLEAN)
int_value (45)
add_call_chain(<<A,d,c>>)
logical_negation
logical_negation
add_attribute("B", "BOOLEAN", "d")
numerical_negation
int_value (27)
add_query("d", "a", <<["c", "BOOLEAN"]>>, "d")
bool_value (true)
add_class(a)
add_command("D", "B", <<["b", "A"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["d", "C"], ["B", "A"], ["D", "INTEGER"], ["INTEGER", "INTEGER"]>>)
int_value (7)
add_attribute("e", "b", "BOOLEAN")
int_value (37)
add_command("C", "D", <<["D", "C"], ["c", "c"], ["D", "INTEGER"], ["BOOLEAN", "b"], ["c", "INTEGER"], ["e", "BOOLEAN"], ["b", "B"], ["A", "c"], ["BOOLEAN", "d"]>>)
add_attribute("c", "d", "b")
logical_negation
numerical_negation
multiplication
add_attribute("c", "c", "e")
add_query("C", "A", <<["b", "INTEGER"], ["b", "BOOLEAN"], ["INTEGER", "c"]>>, "e")
add_command("B", "A", <<["d", "BOOLEAN"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["INTEGER", "INTEGER"], ["C", "b"], ["D", "b"], ["B", "INTEGER"]>>)
add_class(a)
logical_negation
int_value (9)
add_attribute("BOOLEAN", "B", "INTEGER")
addition
add_query("D", "a", <<["D", "INTEGER"]>>, "b")
add_command("A", "B", <<["A", "BOOLEAN"], ["INTEGER", "c"]>>)
equals
add_query("A", "B", <<["D", "INTEGER"], ["C", "BOOLEAN"], ["A", "C"], ["d", "BOOLEAN"]>>, "D")
add_command("D", "c", <<["b", "d"]>>)
bool_value (true)
add_query("b", "C", <<["B", "INTEGER"]>>, "A")
logical_negation
type_check
less_than
numerical_negation
bool_value (false)
add_attribute("c", "e", "INTEGER")
add_attribute("c", "A", "B")
add_query("D", "B", <<["B", "INTEGER"], ["a", "BOOLEAN"], ["e", "INTEGER"], ["B", "b"]>>, "INTEGER")
add_call_chain(<<c,d,d,e,b,b,d,A>>)
bool_value (true)
generate_java_code
int_value (45)
bool_value (false)
add_query("b", "INTEGER", <<["e", "INTEGER"], ["A", "INTEGER"], ["a", "c"], ["INTEGER", "INTEGER"], ["a", "INTEGER"], ["C", "INTEGER"]>>, "B")
add_class(C)
bool_value (false)
add_call_chain(<<b,e,a,e,C,B,d,D>>)
logical_negation
add_attribute("b", "C", "INTEGER")
logical_negation
numerical_negation
add_call_chain(<<c,A,C,e,d,A,D,e>>)
add_class(b)
equals
add_attribute("b", "BOOLEAN", "INTEGER")
numerical_negation
add_call_chain(<<e,B,C>>)
disjunction
generate_java_code
add_call_chain(<<C,INTEGER,d,a,d,b,b,INTEGER>>)
add_call_chain(<<INTEGER,INTEGER,A,d,INTEGER,D,e>>)
add_call_chain(<<b,B,d,C,BOOLEAN>>)
add_attribute("c", "d", "BOOLEAN")
generate_java_code
add_attribute("C", "B", "INTEGER")
int_value (28)
add_class(d)
add_command("C", "a", <<["B", "a"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["d", "BOOLEAN"], ["A", "INTEGER"], ["C", "INTEGER"]>>)
add_call_chain(<<C,A,c,b,INTEGER,a,A>>)
add_command("c", "e", <<["BOOLEAN", "BOOLEAN"], ["C", "INTEGER"], ["BOOLEAN", "D"], ["INTEGER", "BOOLEAN"], ["b", "e"], ["b", "d"], ["e", "d"]>>)
int_value (33)
add_query("B", "A", <<["b", "BOOLEAN"]>>, "B")
add_command("c", "D", <<["C", "BOOLEAN"], ["b", "INTEGER"], ["d", "BOOLEAN"], ["e", "BOOLEAN"], ["d", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "INTEGER"], ["D", "a"]>>)
add_call_chain(<<d,d,C,d,B,a>>)
add_query("C", "d", <<["c", "INTEGER"], ["e", "d"], ["b", "INTEGER"], ["C", "INTEGER"]>>, "INTEGER")
add_query("d", "D", <<["a", "e"], ["d", "INTEGER"], ["b", "INTEGER"], ["INTEGER", "BOOLEAN"], ["D", "INTEGER"], ["a", "INTEGER"], ["B", "BOOLEAN"], ["b", "c"], ["D", "BOOLEAN"]>>, "a")
int_value (8)
add_call_chain(<<b>>)
add_class(c)
add_attribute("A", "d", "a")
logical_negation
add_call_chain(<<B,a,C,e,C,B,e,C>>)
add_call_chain(<<c,BOOLEAN,d,a,a,B,a>>)
add_call_chain(<<BOOLEAN,b,e,a>>)
add_query("B", "c", <<["c", "INTEGER"]>>, "INTEGER")
add_command("B", "d", <<["A", "B"]>>)
add_command("d", "C", <<["a", "INTEGER"], ["A", "BOOLEAN"], ["A", "e"], ["d", "B"], ["D", "BOOLEAN"], ["e", "INTEGER"], ["INTEGER", "A"], ["e", "a"]>>)
add_command("d", "INTEGER", <<["B", "INTEGER"], ["a", "e"], ["C", "BOOLEAN"], ["B", "INTEGER"], ["INTEGER", "BOOLEAN"], ["e", "INTEGER"], ["a", "INTEGER"]>>)
add_attribute("A", "A", "INTEGER")
disjunction
multiplication
generate_java_code
add_attribute("INTEGER", "B", "INTEGER")
logical_negation
generate_java_code
bool_value (true)
add_command("D", "e", <<["D", "INTEGER"]>>)
logical_negation
generate_java_code
int_value (19)
generate_java_code
equals
generate_java_code
add_attribute("D", "B", "INTEGER")
add_attribute("e", "A", "INTEGER")
addition
bool_value (false)
numerical_negation
greater_than
add_call_chain(<<e,c,b,d,INTEGER>>)
add_call_chain(<<B,b,d,B,BOOLEAN,INTEGER,B>>)
add_query("B", "B", <<["c", "INTEGER"], ["b", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["a", "INTEGER"], ["c", "c"]>>, "C")
add_call_chain(<<BOOLEAN,d,a>>)
less_than
add_attribute("c", "D", "BOOLEAN")
add_call_chain(<<e,C,B,c,c,C,c,BOOLEAN>>)
int_value (4)
add_call_chain(<<a,a,B,b,D,B,C,INTEGER,c>>)
type_check
add_class(d)
logical_negation
add_query("a", "B", <<["D", "BOOLEAN"], ["c", "INTEGER"], ["B", "INTEGER"], ["B", "INTEGER"], ["d", "INTEGER"]>>, "A")
quotient
generate_java_code
add_command("c", "D", <<["D", "BOOLEAN"], ["C", "D"], ["D", "D"], ["B", "INTEGER"], ["C", "a"]>>)
add_command("A", "a", <<["C", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>)
bool_value (false)
int_value (10)
add_command("D", "A", <<["D", "D"]>>)
add_call_chain(<<d,a,B,A,d,A,A,d,A>>)
add_query("A", "c", <<["BOOLEAN", "INTEGER"], ["a", "INTEGER"], ["A", "e"], ["D", "B"], ["A", "BOOLEAN"], ["e", "BOOLEAN"], ["c", "INTEGER"], ["C", "a"], ["b", "BOOLEAN"]>>, "A")
add_command("b", "C", <<["BOOLEAN", "INTEGER"], ["INTEGER", "D"], ["d", "d"], ["e", "B"], ["e", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "INTEGER"], ["B", "INTEGER"], ["d", "B"]>>)
add_call_chain(<<D,a,C>>)
add_call_chain(<<b,b,C,c,c,C>>)
bool_value (false)
modulo
logical_negation
greater_than
greater_than
add_call_chain(<<C,c,B,c,D>>)
add_query("e", "e", <<["c", "INTEGER"], ["b", "a"]>>, "D")
greater_than
add_class(A)
int_value (23)
conjunction
logical_negation
type_check
disjunction
type_check
add_query("INTEGER", "BOOLEAN", <<["D", "e"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["b", "BOOLEAN"], ["d", "BOOLEAN"], ["e", "b"], ["B", "BOOLEAN"], ["c", "B"]>>, "e")
bool_value (false)
add_query("e", "e", <<["a", "INTEGER"], ["a", "INTEGER"], ["B", "C"], ["d", "INTEGER"], ["A", "INTEGER"]>>, "b")
add_attribute("B", "a", "BOOLEAN")
add_call_chain(<<b,B,B>>)
add_call_chain(<<a,BOOLEAN,A,b,BOOLEAN,B,e>>)
type_check
bool_value (false)
add_attribute("c", "INTEGER", "BOOLEAN")
add_query("D", "A", <<["b", "A"], ["e", "BOOLEAN"], ["b", "INTEGER"], ["INTEGER", "e"], ["b", "a"], ["B", "BOOLEAN"], ["c", "b"], ["e", "b"], ["INTEGER", "BOOLEAN"]>>, "c")
add_command("D", "A", <<["D", "C"], ["B", "INTEGER"], ["D", "INTEGER"], ["e", "INTEGER"]>>)
add_call_chain(<<A,A,A,d,INTEGER,INTEGER,A>>)
add_call_chain(<<D,D,b>>)
add_attribute("B", "d", "INTEGER")
int_value (34)
int_value (22)
modulo
add_attribute("e", "b", "BOOLEAN")
add_call_chain(<<a,b,A>>)
numerical_negation
add_class(c)
equals
add_query("b", "d", <<["c", "INTEGER"], ["b", "INTEGER"], ["B", "INTEGER"], ["e", "b"], ["BOOLEAN", "d"], ["B", "INTEGER"], ["e", "INTEGER"], ["A", "BOOLEAN"], ["A", "e"]>>, "B")
type_check
add_command("B", "c", <<["B", "BOOLEAN"], ["BOOLEAN", "c"], ["e", "e"], ["d", "BOOLEAN"]>>)
add_class(a)
add_attribute("C", "A", "INTEGER")
less_than
add_command("a", "INTEGER", <<["B", "INTEGER"], ["e", "C"], ["a", "INTEGER"], ["C", "INTEGER"], ["b", "INTEGER"], ["e", "INTEGER"]>>)
bool_value (true)
add_attribute("c", "C", "b")
numerical_negation
