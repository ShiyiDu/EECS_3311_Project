generate_java_code
add_call_chain(<<B,BOOLEAN,e,B>>)
add_call_chain(<<a,d,c,B,B>>)
logical_negation
subtraction
int_value (38)
bool_value (false)
add_query("C", "INTEGER", <<["a", "C"], ["e", "a"], ["d", "c"], ["d", "INTEGER"], ["d", "INTEGER"], ["A", "c"], ["e", "BOOLEAN"]>>, "b")
addition
add_attribute("BOOLEAN", "b", "d")
conjunction
numerical_negation
add_call_chain(<<D,b,d,c,D,A>>)
greater_than
add_attribute("a", "d", "BOOLEAN")
add_class(d)
add_query("B", "B", <<["A", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>, "C")
numerical_negation
add_call_chain(<<D,e,BOOLEAN,e,d,a>>)
logical_negation
add_query("e", "c", <<["a", "INTEGER"], ["b", "BOOLEAN"], ["C", "INTEGER"], ["D", "BOOLEAN"]>>, "e")
add_attribute("A", "C", "BOOLEAN")
generate_java_code
add_attribute("b", "a", "D")
int_value (13)
add_call_chain(<<INTEGER>>)
add_query("C", "D", <<["D", "C"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["c", "INTEGER"], ["c", "INTEGER"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["e", "BOOLEAN"], ["a", "A"]>>, "C")
add_call_chain(<<C,B,INTEGER,c,B,B,B,A,B>>)
add_attribute("D", "A", "e")
add_command("B", "b", <<["b", "D"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "INTEGER"], ["d", "INTEGER"], ["D", "BOOLEAN"], ["B", "D"], ["c", "B"], ["d", "BOOLEAN"]>>)
add_call_chain(<<D,D,c,b,d,A,d>>)
type_check
add_query("d", "B", <<["b", "D"], ["c", "e"], ["D", "b"], ["C", "BOOLEAN"]>>, "A")
add_call_chain(<<B>>)
add_command("b", "A", <<["B", "a"], ["e", "INTEGER"], ["D", "D"], ["d", "BOOLEAN"], ["e", "INTEGER"], ["b", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "INTEGER"]>>)
add_call_chain(<<a,INTEGER,e,D,b,D>>)
logical_negation
add_query("e", "c", <<["B", "c"], ["c", "INTEGER"], ["e", "INTEGER"], ["d", "B"], ["e", "INTEGER"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["a", "D"]>>, "B")
int_value (6)
bool_value (false)
add_attribute("B", "e", "BOOLEAN")
numerical_negation
bool_value (false)
quotient
subtraction
numerical_negation
add_call_chain(<<b,b>>)
add_query("A", "D", <<["B", "BOOLEAN"], ["D", "e"]>>, "C")
type_check
type_check
add_call_chain(<<b,B,B,b,a,B,B>>)
generate_java_code
add_command("e", "d", <<["b", "INTEGER"], ["A", "INTEGER"], ["A", "D"], ["B", "BOOLEAN"], ["A", "B"], ["c", "c"], ["a", "BOOLEAN"], ["C", "e"]>>)
add_call_chain(<<BOOLEAN>>)
add_query("C", "BOOLEAN", <<["B", "b"], ["c", "INTEGER"], ["b", "b"], ["BOOLEAN", "BOOLEAN"], ["A", "b"]>>, "c")
add_attribute("INTEGER", "B", "INTEGER")
logical_negation
numerical_negation
add_call_chain(<<d>>)
numerical_negation
int_value (44)
int_value (11)
add_call_chain(<<B,BOOLEAN,BOOLEAN>>)
add_attribute("e", "a", "D")
add_attribute("a", "D", "B")
logical_negation
numerical_negation
generate_java_code
add_attribute("D", "a", "INTEGER")
bool_value (true)
add_call_chain(<<c,e>>)
add_call_chain(<<a,D,d,B,D,BOOLEAN>>)
add_attribute("c", "A", "A")
add_attribute("INTEGER", "B", "d")
add_command("d", "c", <<["b", "INTEGER"], ["c", "INTEGER"]>>)
logical_negation
add_attribute("C", "BOOLEAN", "a")
add_attribute("INTEGER", "a", "e")
disjunction
disjunction
generate_java_code
logical_negation
add_attribute("d", "d", "BOOLEAN")
generate_java_code
add_call_chain(<<A,e>>)
numerical_negation
int_value (35)
type_check
int_value (11)
add_call_chain(<<e,e,BOOLEAN,D,D,C,A>>)
add_class(a)
add_command("d", "D", <<["d", "c"], ["b", "e"], ["C", "B"], ["A", "INTEGER"], ["A", "INTEGER"], ["C", "INTEGER"], ["d", "a"], ["C", "INTEGER"], ["BOOLEAN", "A"]>>)
add_class(a)
add_class(B)
add_command("A", "b", <<["A", "BOOLEAN"], ["b", "BOOLEAN"]>>)
add_query("d", "B", <<["C", "BOOLEAN"], ["D", "b"]>>, "INTEGER")
add_call_chain(<<C,b,BOOLEAN,A,C,b,C,e,D>>)
add_command("B", "A", <<["b", "BOOLEAN"], ["b", "BOOLEAN"], ["d", "INTEGER"], ["d", "INTEGER"], ["d", "C"]>>)
generate_java_code
add_call_chain(<<e,BOOLEAN,B>>)
type_check
conjunction
add_attribute("C", "B", "BOOLEAN")
logical_negation
add_attribute("D", "B", "INTEGER")
add_query("d", "B", <<["b", "a"], ["a", "BOOLEAN"], ["A", "B"], ["B", "c"], ["a", "D"], ["a", "BOOLEAN"], ["b", "B"], ["a", "BOOLEAN"]>>, "A")
int_value (4)
int_value (39)
add_call_chain(<<C,C,B,C,B,B,INTEGER>>)
less_than
add_query("D", "B", <<["C", "INTEGER"], ["e", "INTEGER"], ["B", "BOOLEAN"], ["D", "INTEGER"], ["c", "e"], ["BOOLEAN", "BOOLEAN"]>>, "C")
conjunction
type_check
add_call_chain(<<D,c,D,A,D,e,e>>)
numerical_negation
disjunction
add_command("BOOLEAN", "D", <<["B", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["B", "b"], ["INTEGER", "BOOLEAN"], ["D", "c"]>>)
generate_java_code
int_value (3)
type_check
add_class(BOOLEAN)
add_query("b", "B", <<["b", "e"], ["c", "INTEGER"]>>, "d")
numerical_negation
quotient
add_query("b", "e", <<["A", "INTEGER"], ["b", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "BOOLEAN"], ["d", "INTEGER"], ["a", "INTEGER"], ["b", "INTEGER"], ["A", "INTEGER"]>>, "INTEGER")
conjunction
generate_java_code
int_value (38)
bool_value (false)
add_command("C", "e", <<["d", "D"], ["d", "A"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["d", "INTEGER"], ["d", "BOOLEAN"]>>)
add_call_chain(<<C,D>>)
int_value (7)
add_attribute("b", "a", "INTEGER")
add_class(d)
add_attribute("c", "a", "BOOLEAN")
generate_java_code
add_call_chain(<<B,D,B>>)
greater_than
add_call_chain(<<a,A,A,A,D>>)
less_than
conjunction
add_class(e)
add_call_chain(<<c,a,c,d,C,INTEGER,A,b,B>>)
bool_value (true)
add_call_chain(<<INTEGER,b,B,d,B,b,C>>)
disjunction
add_query("a", "b", <<["a", "INTEGER"], ["D", "INTEGER"], ["A", "BOOLEAN"], ["d", "BOOLEAN"], ["b", "B"], ["D", "INTEGER"], ["INTEGER", "BOOLEAN"]>>, "e")
add_command("BOOLEAN", "A", <<["B", "INTEGER"], ["A", "BOOLEAN"], ["d", "d"], ["B", "C"]>>)
numerical_negation
modulo
add_query("C", "B", <<["c", "BOOLEAN"], ["A", "INTEGER"], ["d", "INTEGER"], ["C", "BOOLEAN"], ["C", "INTEGER"]>>, "B")
int_value (19)
add_call_chain(<<b>>)
add_call_chain(<<b,INTEGER,C,b,a>>)
add_call_chain(<<B,B,b,D,a,e,B>>)
add_call_chain(<<d,B,b,e,b>>)
logical_negation
int_value (19)
add_attribute("d", "d", "BOOLEAN")
subtraction
add_call_chain(<<INTEGER,C,B,D,a,INTEGER,e,A,INTEGER>>)
type_check
bool_value (true)
bool_value (false)
add_command("B", "d", <<["INTEGER", "c"]>>)
type_check
logical_negation
conjunction
type_check
greater_than
add_attribute("B", "d", "e")
bool_value (true)
add_call_chain(<<d>>)
int_value (36)
add_command("BOOLEAN", "D", <<["b", "C"], ["d", "e"]>>)
add_call_chain(<<c,BOOLEAN,C,D,a,A,b,e>>)
conjunction
less_than
logical_negation
bool_value (false)
add_command("e", "c", <<["a", "A"], ["INTEGER", "INTEGER"], ["c", "BOOLEAN"]>>)
generate_java_code
add_call_chain(<<c,A,BOOLEAN>>)
add_attribute("B", "B", "BOOLEAN")
add_attribute("B", "c", "BOOLEAN")
add_command("e", "D", <<["A", "a"], ["D", "INTEGER"], ["C", "INTEGER"], ["b", "A"], ["D", "INTEGER"], ["b", "INTEGER"], ["a", "B"]>>)
add_call_chain(<<A,C,D,D,e,d,a,B>>)
add_attribute("D", "B", "C")
add_query("D", "a", <<["d", "INTEGER"], ["b", "BOOLEAN"], ["C", "D"]>>, "d")
add_class(A)
bool_value (true)
add_attribute("b", "c", "BOOLEAN")
bool_value (false)
numerical_negation
add_call_chain(<<D,e,INTEGER,D,A>>)
add_command("b", "A", <<["INTEGER", "BOOLEAN"], ["C", "INTEGER"], ["A", "A"], ["a", "BOOLEAN"]>>)
logical_negation
add_call_chain(<<A,B,b,e,c,INTEGER,c>>)
add_query("D", "a", <<["a", "B"], ["C", "BOOLEAN"], ["d", "e"], ["d", "D"], ["INTEGER", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "C"], ["INTEGER", "BOOLEAN"]>>, "e")
int_value (1)
add_call_chain(<<B,C,D,INTEGER,INTEGER,d>>)
add_attribute("B", "INTEGER", "e")
add_class(C)
add_command("e", "c", <<["INTEGER", "INTEGER"], ["a", "b"], ["INTEGER", "A"], ["D", "BOOLEAN"], ["INTEGER", "b"]>>)
conjunction
add_call_chain(<<C,B,A,A,C,INTEGER,B,b,b>>)
greater_than
add_query("INTEGER", "c", <<["a", "BOOLEAN"], ["D", "BOOLEAN"]>>, "b")
addition
type_check
add_call_chain(<<e,e,D,D,e>>)
add_attribute("C", "C", "D")
add_call_chain(<<A,C,A,C,d,A>>)
int_value (16)
logical_negation
add_command("e", "b", <<["a", "BOOLEAN"], ["a", "b"], ["C", "b"], ["INTEGER", "INTEGER"], ["C", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "INTEGER"], ["INTEGER", "INTEGER"], ["B", "e"]>>)
int_value (39)
bool_value (false)
add_attribute("d", "D", "BOOLEAN")
bool_value (false)
disjunction
type_check
add_query("A", "e", <<["c", "B"], ["A", "INTEGER"], ["BOOLEAN", "INTEGER"]>>, "B")
add_call_chain(<<C,b,C,C,c>>)
numerical_negation
disjunction
greater_than
equals
add_call_chain(<<D,D>>)
type_check
add_call_chain(<<D,B,B>>)
add_attribute("D", "BOOLEAN", "INTEGER")
generate_java_code
generate_java_code
disjunction
add_command("C", "D", <<["B", "BOOLEAN"]>>)
add_attribute("A", "INTEGER", "INTEGER")
logical_negation
add_class(D)
numerical_negation
add_call_chain(<<a>>)
add_call_chain(<<e,A>>)
int_value (13)
add_attribute("B", "e", "d")
equals
numerical_negation
add_class(a)
add_call_chain(<<D,b,C,INTEGER>>)
add_call_chain(<<BOOLEAN,BOOLEAN,b>>)
int_value (2)
numerical_negation
modulo
