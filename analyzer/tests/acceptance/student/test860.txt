add_command("c", "C", <<["B", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "BOOLEAN"], ["b", "D"], ["C", "C"], ["A", "BOOLEAN"], ["C", "INTEGER"]>>)
add_query("a", "INTEGER", <<["B", "b"], ["d", "INTEGER"], ["d", "BOOLEAN"], ["B", "C"], ["b", "BOOLEAN"]>>, "e")
add_query("B", "a", <<["B", "INTEGER"], ["B", "BOOLEAN"], ["INTEGER", "INTEGER"]>>, "C")
conjunction
logical_negation
add_command("C", "a", <<["d", "c"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["D", "d"], ["A", "INTEGER"]>>)
add_call_chain(<<C,INTEGER,d,d,b>>)
int_value (18)
add_attribute("C", "D", "INTEGER")
add_call_chain(<<d>>)
add_attribute("c", "B", "INTEGER")
add_call_chain(<<c,b,c,B,B,d,A,a>>)
add_class(B)
bool_value (true)
quotient
logical_negation
add_call_chain(<<INTEGER,A,a,C,A,a,INTEGER>>)
numerical_negation
add_command("e", "A", <<["A", "BOOLEAN"], ["a", "INTEGER"]>>)
bool_value (false)
add_call_chain(<<a,b,e,A,d>>)
disjunction
add_call_chain(<<a,B>>)
less_than
int_value (17)
add_command("e", "A", <<["e", "c"], ["D", "D"], ["d", "BOOLEAN"]>>)
add_attribute("A", "e", "B")
numerical_negation
add_query("c", "B", <<["B", "a"], ["C", "BOOLEAN"], ["e", "D"], ["a", "b"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["C", "D"]>>, "D")
generate_java_code
add_call_chain(<<b,A,INTEGER>>)
generate_java_code
bool_value (true)
int_value (46)
greater_than
add_attribute("d", "a", "BOOLEAN")
add_attribute("a", "b", "BOOLEAN")
add_command("a", "A", <<["d", "BOOLEAN"], ["A", "INTEGER"], ["C", "INTEGER"], ["e", "c"], ["C", "BOOLEAN"], ["C", "B"], ["b", "B"], ["B", "BOOLEAN"]>>)
equals
int_value (12)
type_check
int_value (34)
greater_than
add_attribute("d", "A", "INTEGER")
add_call_chain(<<c,e,A,c,c>>)
add_attribute("D", "D", "D")
add_call_chain(<<C,c,d,b,a,C,D,INTEGER>>)
add_command("B", "b", <<["c", "INTEGER"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["c", "INTEGER"], ["c", "BOOLEAN"], ["C", "B"], ["D", "INTEGER"], ["B", "D"]>>)
bool_value (false)
add_query("B", "D", <<["a", "b"], ["a", "INTEGER"], ["b", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "BOOLEAN"], ["b", "BOOLEAN"]>>, "c")
bool_value (true)
quotient
disjunction
numerical_negation
bool_value (false)
bool_value (false)
disjunction
add_attribute("A", "a", "BOOLEAN")
add_query("B", "A", <<["B", "a"], ["BOOLEAN", "INTEGER"], ["B", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["d", "BOOLEAN"], ["b", "INTEGER"], ["e", "INTEGER"]>>, "D")
add_query("B", "A", <<["D", "A"], ["A", "INTEGER"]>>, "B")
numerical_negation
add_query("b", "e", <<["e", "B"]>>, "e")
int_value (35)
less_than
add_attribute("BOOLEAN", "e", "INTEGER")
add_class(BOOLEAN)
add_call_chain(<<c,BOOLEAN,BOOLEAN,D,b>>)
disjunction
type_check
logical_negation
bool_value (false)
add_query("D", "a", <<["A", "e"], ["e", "d"], ["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"]>>, "INTEGER")
add_call_chain(<<A,C,D,e,A,e,b,C,a>>)
int_value (41)
conjunction
bool_value (false)
numerical_negation
add_command("a", "BOOLEAN", <<["e", "A"], ["e", "e"]>>)
logical_negation
add_query("D", "d", <<["A", "BOOLEAN"], ["C", "C"], ["D", "D"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["e", "INTEGER"]>>, "B")
add_query("D", "a", <<["b", "INTEGER"], ["B", "INTEGER"], ["INTEGER", "BOOLEAN"], ["a", "D"], ["b", "INTEGER"], ["b", "BOOLEAN"], ["D", "a"]>>, "B")
add_call_chain(<<INTEGER,c,A,C,c,B,B,c,d>>)
add_command("c", "BOOLEAN", <<["b", "e"], ["a", "BOOLEAN"], ["e", "BOOLEAN"]>>)
add_attribute("D", "c", "INTEGER")
equals
int_value (21)
subtraction
bool_value (false)
add_query("a", "A", <<["e", "c"], ["A", "INTEGER"], ["B", "INTEGER"], ["e", "B"]>>, "d")
equals
numerical_negation
int_value (19)
logical_negation
numerical_negation
numerical_negation
add_attribute("C", "BOOLEAN", "INTEGER")
add_query("d", "a", <<["a", "INTEGER"], ["A", "BOOLEAN"], ["b", "INTEGER"], ["b", "d"], ["d", "c"], ["e", "D"]>>, "b")
add_call_chain(<<e,D,b,a,B,B,INTEGER,A>>)
add_command("BOOLEAN", "A", <<["A", "INTEGER"], ["A", "INTEGER"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["INTEGER", "D"], ["b", "INTEGER"], ["e", "BOOLEAN"]>>)
bool_value (false)
add_call_chain(<<b>>)
add_command("d", "d", <<["B", "INTEGER"]>>)
int_value (30)
int_value (34)
add_command("B", "A", <<["c", "BOOLEAN"], ["D", "B"], ["B", "INTEGER"], ["c", "INTEGER"], ["A", "INTEGER"], ["a", "a"], ["d", "b"], ["a", "e"]>>)
add_call_chain(<<c>>)
generate_java_code
logical_negation
disjunction
add_call_chain(<<BOOLEAN,d,d,C,b,c>>)
add_command("c", "b", <<["C", "INTEGER"], ["B", "BOOLEAN"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["b", "INTEGER"], ["BOOLEAN", "c"], ["c", "A"]>>)
add_query("BOOLEAN", "c", <<["C", "INTEGER"], ["d", "INTEGER"], ["d", "INTEGER"], ["A", "b"], ["B", "INTEGER"], ["D", "INTEGER"], ["c", "INTEGER"]>>, "b")
equals
add_call_chain(<<C,B,B,d>>)
add_call_chain(<<BOOLEAN,B,b>>)
equals
conjunction
generate_java_code
add_class(D)
add_call_chain(<<D>>)
bool_value (false)
int_value (27)
add_call_chain(<<e,A,C,B,INTEGER>>)
bool_value (true)
int_value (46)
add_query("C", "e", <<["INTEGER", "A"], ["a", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["a", "INTEGER"], ["A", "INTEGER"], ["C", "d"]>>, "a")
int_value (14)
add_command("e", "D", <<["c", "INTEGER"], ["B", "INTEGER"], ["D", "a"], ["d", "INTEGER"], ["d", "INTEGER"], ["D", "e"], ["e", "BOOLEAN"], ["e", "INTEGER"]>>)
generate_java_code
generate_java_code
add_class(D)
greater_than
add_command("B", "B", <<["c", "INTEGER"]>>)
conjunction
int_value (49)
add_call_chain(<<D>>)
add_query("A", "BOOLEAN", <<["C", "INTEGER"], ["B", "BOOLEAN"], ["B", "d"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["b", "BOOLEAN"], ["e", "D"]>>, "B")
less_than
less_than
add_command("B", "b", <<["c", "INTEGER"], ["C", "INTEGER"], ["c", "BOOLEAN"], ["C", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["A", "INTEGER"], ["e", "INTEGER"], ["B", "BOOLEAN"], ["C", "BOOLEAN"]>>)
int_value (14)
add_attribute("C", "b", "BOOLEAN")
multiplication
add_call_chain(<<a,INTEGER,D>>)
modulo
bool_value (false)
int_value (26)
add_call_chain(<<A,A,c,INTEGER,b,BOOLEAN>>)
add_attribute("A", "e", "INTEGER")
add_call_chain(<<d,A,D,d,a,d,e>>)
add_class(b)
add_attribute("b", "c", "BOOLEAN")
disjunction
add_call_chain(<<d,B>>)
add_call_chain(<<e,a,A,a,e,e,C,e>>)
conjunction
addition
bool_value (false)
conjunction
int_value (32)
less_than
add_command("BOOLEAN", "a", <<["B", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["b", "INTEGER"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["B", "C"], ["INTEGER", "a"]>>)
add_query("D", "a", <<["C", "a"], ["D", "B"]>>, "INTEGER")
conjunction
conjunction
disjunction
add_query("A", "e", <<["b", "INTEGER"], ["c", "INTEGER"], ["b", "A"], ["d", "INTEGER"]>>, "C")
bool_value (false)
add_attribute("e", "e", "BOOLEAN")
add_query("A", "e", <<["b", "BOOLEAN"], ["D", "INTEGER"], ["C", "INTEGER"], ["INTEGER", "BOOLEAN"], ["c", "c"], ["A", "b"]>>, "d")
add_query("B", "b", <<["b", "a"], ["B", "INTEGER"], ["e", "INTEGER"], ["A", "INTEGER"], ["C", "BOOLEAN"]>>, "a")
add_call_chain(<<BOOLEAN,A,d,C,INTEGER,D,A,A>>)
add_call_chain(<<d,A,B,C,BOOLEAN,BOOLEAN,a,a>>)
add_call_chain(<<C,b>>)
add_call_chain(<<e,b,D,e,B,B>>)
logical_negation
int_value (46)
int_value (39)
equals
logical_negation
add_command("e", "d", <<["BOOLEAN", "INTEGER"]>>)
add_call_chain(<<d,d,A>>)
add_call_chain(<<e,D,A,a,A,b,C>>)
add_call_chain(<<e,INTEGER,B,C,D,A,A,INTEGER>>)
less_than
int_value (36)
add_call_chain(<<D,D,c,a>>)
add_call_chain(<<b,a,A,B,b,A,B>>)
disjunction
add_attribute("b", "INTEGER", "INTEGER")
multiplication
generate_java_code
int_value (7)
greater_than
add_query("e", "c", <<["C", "BOOLEAN"], ["D", "e"]>>, "A")
add_command("B", "D", <<["d", "d"], ["INTEGER", "b"], ["A", "INTEGER"], ["B", "INTEGER"], ["C", "C"]>>)
logical_negation
add_call_chain(<<D,c,INTEGER>>)
generate_java_code
