add_command("C", "D", <<["A", "c"], ["C", "INTEGER"], ["a", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "A"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["c", "BOOLEAN"]>>)
add_command("c", "d", <<["d", "INTEGER"], ["INTEGER", "d"], ["C", "D"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["b", "INTEGER"]>>)
bool_value (true)
add_attribute("D", "C", "BOOLEAN")
generate_java_code
add_command("b", "C", <<["e", "BOOLEAN"], ["c", "INTEGER"]>>)
add_attribute("INTEGER", "a", "INTEGER")
numerical_negation
int_value (38)
bool_value (false)
multiplication
multiplication
modulo
add_call_chain(<<d>>)
conjunction
add_attribute("B", "INTEGER", "BOOLEAN")
add_command("BOOLEAN", "d", <<["C", "A"], ["C", "INTEGER"], ["INTEGER", "BOOLEAN"], ["D", "INTEGER"], ["b", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "INTEGER"], ["d", "INTEGER"]>>)
add_call_chain(<<B,B,INTEGER,d,D,B,e>>)
type_check
add_class(a)
bool_value (false)
add_query("D", "INTEGER", <<["d", "INTEGER"], ["B", "e"], ["BOOLEAN", "INTEGER"], ["e", "BOOLEAN"], ["C", "e"], ["INTEGER", "INTEGER"], ["A", "BOOLEAN"], ["D", "BOOLEAN"]>>, "D")
less_than
bool_value (false)
bool_value (true)
add_command("a", "C", <<["B", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>)
addition
less_than
logical_negation
generate_java_code
bool_value (false)
add_command("c", "BOOLEAN", <<["INTEGER", "INTEGER"]>>)
bool_value (true)
int_value (37)
bool_value (false)
disjunction
int_value (7)
int_value (33)
add_attribute("b", "C", "D")
int_value (46)
numerical_negation
add_query("e", "d", <<["e", "INTEGER"]>>, "c")
add_call_chain(<<e,a,BOOLEAN,e,B,C,D>>)
add_call_chain(<<A,d,b,e,A,e>>)
logical_negation
logical_negation
disjunction
greater_than
add_call_chain(<<d,C,BOOLEAN,a,C,c,B,d>>)
int_value (38)
add_call_chain(<<B,B>>)
int_value (28)
bool_value (false)
add_call_chain(<<e,b>>)
greater_than
logical_negation
add_command("D", "b", <<["D", "d"], ["D", "B"], ["INTEGER", "C"], ["INTEGER", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "B"], ["c", "INTEGER"], ["D", "D"], ["a", "INTEGER"]>>)
equals
greater_than
add_query("b", "a", <<["A", "C"], ["D", "INTEGER"], ["B", "INTEGER"], ["C", "d"], ["a", "BOOLEAN"], ["c", "INTEGER"], ["c", "INTEGER"]>>, "A")
add_query("INTEGER", "C", <<["C", "B"], ["C", "INTEGER"], ["D", "BOOLEAN"]>>, "A")
numerical_negation
add_attribute("a", "C", "BOOLEAN")
add_attribute("BOOLEAN", "d", "BOOLEAN")
generate_java_code
add_call_chain(<<d,D,BOOLEAN,BOOLEAN,C,B,D>>)
bool_value (true)
add_attribute("b", "INTEGER", "B")
bool_value (false)
add_call_chain(<<b,D,d,B,c,b,e,c>>)
add_command("C", "b", <<["A", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["b", "BOOLEAN"]>>)
subtraction
int_value (38)
add_query("a", "D", <<["b", "BOOLEAN"], ["C", "INTEGER"]>>, "e")
bool_value (true)
add_command("B", "a", <<["INTEGER", "INTEGER"], ["a", "B"], ["a", "INTEGER"], ["INTEGER", "INTEGER"], ["D", "INTEGER"]>>)
bool_value (true)
add_query("INTEGER", "c", <<["C", "BOOLEAN"], ["B", "B"], ["B", "e"], ["A", "D"], ["d", "BOOLEAN"], ["d", "INTEGER"], ["B", "INTEGER"], ["e", "B"], ["D", "BOOLEAN"]>>, "D")
add_command("C", "BOOLEAN", <<["e", "BOOLEAN"], ["D", "BOOLEAN"], ["INTEGER", "a"], ["c", "BOOLEAN"], ["b", "INTEGER"]>>)
add_attribute("D", "c", "INTEGER")
add_call_chain(<<e,A,INTEGER>>)
logical_negation
add_query("D", "b", <<["A", "a"], ["C", "c"], ["B", "B"], ["d", "A"], ["a", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["e", "c"], ["e", "INTEGER"]>>, "C")
add_attribute("C", "b", "D")
add_call_chain(<<d,A,D,e,d,d,BOOLEAN,C,d>>)
logical_negation
add_command("C", "e", <<["b", "B"], ["INTEGER", "BOOLEAN"], ["d", "A"], ["d", "INTEGER"], ["c", "INTEGER"]>>)
type_check
logical_negation
int_value (41)
add_query("c", "c", <<["D", "INTEGER"], ["a", "c"], ["e", "BOOLEAN"]>>, "B")
add_call_chain(<<C,C,D,c,B,b,C,B>>)
add_query("e", "A", <<["e", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "e"]>>, "e")
add_attribute("C", "INTEGER", "BOOLEAN")
numerical_negation
disjunction
add_command("c", "a", <<["e", "INTEGER"], ["D", "C"], ["A", "D"], ["C", "b"], ["e", "BOOLEAN"], ["D", "D"], ["b", "INTEGER"]>>)
add_call_chain(<<BOOLEAN,b,B,B,BOOLEAN>>)
numerical_negation
numerical_negation
disjunction
int_value (32)
add_call_chain(<<D,C,a,C,a,e>>)
logical_negation
logical_negation
add_call_chain(<<c,BOOLEAN,A,b,C,A,B,b,a>>)
add_query("a", "e", <<["d", "d"], ["A", "BOOLEAN"], ["D", "BOOLEAN"]>>, "d")
add_call_chain(<<BOOLEAN>>)
add_command("D", "D", <<["D", "c"]>>)
subtraction
int_value (32)
bool_value (true)
numerical_negation
generate_java_code
add_call_chain(<<B,a,c,A,c,b>>)
add_command("C", "C", <<["a", "BOOLEAN"], ["BOOLEAN", "A"]>>)
int_value (12)
add_class(e)
int_value (38)
type_check
add_class(D)
numerical_negation
numerical_negation
add_class(b)
add_command("D", "b", <<["b", "BOOLEAN"], ["C", "a"], ["d", "BOOLEAN"], ["b", "d"], ["INTEGER", "BOOLEAN"], ["C", "BOOLEAN"]>>)
equals
int_value (6)
add_command("D", "d", <<["B", "BOOLEAN"], ["BOOLEAN", "A"]>>)
add_attribute("d", "a", "INTEGER")
numerical_negation
add_attribute("B", "D", "INTEGER")
conjunction
add_command("D", "c", <<["A", "INTEGER"], ["e", "B"]>>)
add_call_chain(<<D,c,b,D,A,D,a>>)
multiplication
logical_negation
int_value (18)
type_check
add_call_chain(<<D>>)
add_call_chain(<<A,b,B>>)
logical_negation
add_attribute("d", "INTEGER", "c")
type_check
logical_negation
add_call_chain(<<A,D,D,A,b,d,C,A>>)
add_query("b", "INTEGER", <<["INTEGER", "INTEGER"], ["INTEGER", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "INTEGER"]>>, "a")
generate_java_code
add_attribute("c", "a", "BOOLEAN")
numerical_negation
add_call_chain(<<e,b,c,a,d,e>>)
subtraction
add_call_chain(<<B,a,b,C,C,A,a,c>>)
add_command("D", "a", <<["BOOLEAN", "INTEGER"], ["d", "INTEGER"], ["INTEGER", "BOOLEAN"], ["A", "INTEGER"], ["c", "C"], ["D", "BOOLEAN"], ["c", "INTEGER"]>>)
multiplication
add_command("b", "A", <<["C", "INTEGER"], ["D", "C"], ["B", "INTEGER"], ["d", "D"], ["c", "INTEGER"], ["c", "INTEGER"], ["A", "INTEGER"]>>)
bool_value (false)
add_call_chain(<<b,INTEGER>>)
add_query("INTEGER", "c", <<["C", "D"], ["B", "INTEGER"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["e", "INTEGER"], ["d", "BOOLEAN"], ["B", "INTEGER"], ["C", "BOOLEAN"]>>, "INTEGER")
numerical_negation
add_call_chain(<<b>>)
conjunction
add_call_chain(<<b,C,a,c,B,a,B>>)
add_command("c", "BOOLEAN", <<["a", "BOOLEAN"], ["B", "B"], ["C", "INTEGER"]>>)
add_command("e", "A", <<["D", "D"], ["c", "C"], ["D", "BOOLEAN"]>>)
conjunction
int_value (8)
add_call_chain(<<D,D,e,B,e>>)
add_attribute("A", "D", "BOOLEAN")
add_attribute("b", "a", "BOOLEAN")
int_value (4)
int_value (42)
numerical_negation
add_call_chain(<<e,C,B,e,c,b>>)
add_command("d", "INTEGER", <<["b", "b"], ["C", "INTEGER"]>>)
add_attribute("C", "c", "INTEGER")
add_command("D", "b", <<["b", "INTEGER"]>>)
add_call_chain(<<B>>)
add_command("D", "C", <<["INTEGER", "BOOLEAN"], ["D", "INTEGER"], ["c", "BOOLEAN"], ["B", "BOOLEAN"]>>)
numerical_negation
int_value (36)
add_command("C", "B", <<["B", "BOOLEAN"], ["B", "INTEGER"], ["a", "BOOLEAN"]>>)
add_attribute("c", "C", "INTEGER")
bool_value (false)
bool_value (true)
int_value (44)
add_attribute("C", "INTEGER", "INTEGER")
numerical_negation
add_query("A", "c", <<["a", "B"], ["a", "d"], ["c", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "A"], ["b", "INTEGER"], ["c", "c"], ["b", "INTEGER"]>>, "e")
generate_java_code
equals
add_query("d", "e", <<["BOOLEAN", "BOOLEAN"]>>, "C")
add_attribute("A", "B", "BOOLEAN")
logical_negation
add_command("INTEGER", "C", <<["d", "BOOLEAN"], ["e", "A"], ["b", "INTEGER"], ["B", "INTEGER"], ["e", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "INTEGER"]>>)
int_value (34)
bool_value (true)
type_check
add_attribute("b", "BOOLEAN", "INTEGER")
multiplication
add_query("C", "B", <<["D", "c"], ["b", "INTEGER"], ["B", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>, "C")
greater_than
add_class(BOOLEAN)
add_call_chain(<<B,a,A,d,B>>)
subtraction
numerical_negation
int_value (12)
add_call_chain(<<a,C,C,b>>)
add_command("C", "C", <<["B", "INTEGER"], ["B", "d"], ["D", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["C", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>)
add_command("b", "B", <<["b", "b"]>>)
bool_value (false)
add_command("D", "e", <<["a", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "INTEGER"], ["b", "c"], ["A", "BOOLEAN"], ["C", "D"], ["C", "BOOLEAN"], ["B", "INTEGER"]>>)
add_call_chain(<<b,B,B>>)
type_check
add_call_chain(<<B,a,d,B,C,b,e,e>>)
int_value (35)
addition
logical_negation
numerical_negation
subtraction
subtraction
add_query("B", "D", <<["d", "INTEGER"], ["C", "INTEGER"], ["a", "BOOLEAN"], ["A", "e"], ["INTEGER", "INTEGER"], ["A", "c"]>>, "A")
generate_java_code
add_call_chain(<<e,D,c,c,c,D,a>>)
add_call_chain(<<e,INTEGER,e,D,e,d,A>>)
int_value (30)
add_class(b)
add_command("C", "c", <<["e", "BOOLEAN"]>>)
add_command("d", "A", <<["d", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["INTEGER", "e"], ["C", "c"]>>)
add_query("b", "e", <<["D", "C"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "b"], ["A", "BOOLEAN"], ["d", "BOOLEAN"], ["INTEGER", "INTEGER"], ["A", "B"], ["D", "INTEGER"]>>, "e")
add_class(c)
bool_value (true)
add_call_chain(<<A>>)
add_attribute("B", "A", "INTEGER")
int_value (46)
disjunction
int_value (7)
add_attribute("a", "A", "BOOLEAN")
