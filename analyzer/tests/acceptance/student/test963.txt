add_command("D", "BOOLEAN", <<["INTEGER", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["e", "INTEGER"], ["d", "BOOLEAN"], ["B", "a"], ["b", "BOOLEAN"], ["C", "b"], ["e", "BOOLEAN"], ["C", "BOOLEAN"]>>)
generate_java_code
add_command("d", "B", <<["B", "a"], ["C", "INTEGER"], ["A", "INTEGER"], ["D", "INTEGER"], ["e", "BOOLEAN"], ["D", "INTEGER"], ["B", "BOOLEAN"], ["D", "c"], ["A", "a"]>>)
add_query("b", "A", <<["C", "INTEGER"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["e", "BOOLEAN"], ["c", "INTEGER"]>>, "d")
add_command("d", "e", <<["e", "BOOLEAN"], ["d", "B"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["B", "INTEGER"], ["C", "BOOLEAN"]>>)
numerical_negation
add_command("b", "B", <<["B", "INTEGER"], ["C", "D"], ["e", "b"], ["b", "INTEGER"]>>)
bool_value (false)
int_value (29)
bool_value (false)
bool_value (false)
logical_negation
add_query("c", "a", <<["b", "D"], ["C", "e"], ["e", "BOOLEAN"]>>, "e")
logical_negation
int_value (34)
add_query("INTEGER", "e", <<["e", "A"], ["e", "BOOLEAN"], ["e", "INTEGER"], ["b", "c"], ["a", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["D", "e"], ["e", "D"]>>, "c")
numerical_negation
add_query("INTEGER", "B", <<["d", "D"], ["A", "BOOLEAN"], ["b", "D"], ["a", "A"], ["D", "e"]>>, "e")
conjunction
add_query("b", "e", <<["b", "INTEGER"], ["e", "c"], ["D", "d"], ["e", "BOOLEAN"], ["INTEGER", "INTEGER"], ["d", "e"]>>, "e")
add_attribute("C", "C", "INTEGER")
add_call_chain(<<e,a,BOOLEAN,e,C,B>>)
add_call_chain(<<D,e>>)
bool_value (false)
add_call_chain(<<b,INTEGER,D,C,a,b,a,D>>)
numerical_negation
add_call_chain(<<c>>)
bool_value (false)
bool_value (true)
add_attribute("A", "c", "D")
numerical_negation
add_call_chain(<<a>>)
add_query("e", "D", <<["e", "BOOLEAN"], ["D", "C"], ["c", "e"], ["A", "INTEGER"], ["d", "INTEGER"], ["INTEGER", "c"]>>, "b")
less_than
logical_negation
add_call_chain(<<d,b,C,a>>)
add_query("D", "D", <<["D", "D"], ["B", "INTEGER"], ["b", "BOOLEAN"]>>, "b")
add_attribute("D", "e", "INTEGER")
add_query("D", "A", <<["D", "B"], ["D", "BOOLEAN"], ["e", "A"]>>, "B")
add_call_chain(<<B,D,a,A,INTEGER,C,c>>)
bool_value (false)
add_class(d)
numerical_negation
logical_negation
type_check
add_query("B", "D", <<["A", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["INTEGER", "INTEGER"], ["a", "INTEGER"], ["b", "INTEGER"], ["c", "INTEGER"]>>, "BOOLEAN")
generate_java_code
add_call_chain(<<INTEGER,B,e,B,d>>)
add_call_chain(<<b,C,D,INTEGER,b,d,B,A>>)
numerical_negation
disjunction
add_query("d", "A", <<["e", "BOOLEAN"], ["C", "BOOLEAN"]>>, "c")
add_query("B", "B", <<["c", "BOOLEAN"], ["d", "INTEGER"]>>, "A")
add_call_chain(<<e,C,D,A,BOOLEAN,C,A>>)
add_class(A)
conjunction
add_class(a)
logical_negation
add_query("b", "D", <<["a", "C"], ["b", "INTEGER"], ["B", "A"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["d", "D"], ["d", "INTEGER"], ["b", "BOOLEAN"]>>, "c")
logical_negation
generate_java_code
add_call_chain(<<d,c,D,a,D>>)
add_command("B", "A", <<["d", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>)
add_class(A)
add_attribute("b", "B", "INTEGER")
generate_java_code
type_check
add_command("a", "A", <<["d", "c"], ["C", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "INTEGER"]>>)
bool_value (true)
bool_value (true)
add_query("A", "c", <<["C", "BOOLEAN"]>>, "D")
logical_negation
int_value (35)
int_value (49)
add_class(a)
add_call_chain(<<b,a,e,D,C,A,d,B,B>>)
add_query("e", "C", <<["C", "e"], ["B", "e"], ["e", "INTEGER"], ["B", "c"], ["d", "INTEGER"], ["D", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "BOOLEAN"]>>, "a")
add_attribute("e", "d", "INTEGER")
add_query("D", "INTEGER", <<["A", "d"], ["D", "D"], ["INTEGER", "BOOLEAN"], ["D", "B"], ["BOOLEAN", "INTEGER"]>>, "D")
numerical_negation
int_value (20)
bool_value (true)
add_call_chain(<<e,b,C,C,c,d,INTEGER>>)
numerical_negation
add_command("a", "BOOLEAN", <<["C", "BOOLEAN"], ["c", "B"], ["C", "BOOLEAN"]>>)
equals
logical_negation
add_call_chain(<<D,C>>)
bool_value (true)
quotient
generate_java_code
add_call_chain(<<e,C,c,e,C,B,b>>)
numerical_negation
generate_java_code
equals
disjunction
bool_value (false)
equals
add_call_chain(<<B>>)
add_class(d)
add_call_chain(<<C>>)
add_query("c", "INTEGER", <<["C", "BOOLEAN"], ["e", "D"], ["a", "A"], ["a", "INTEGER"], ["D", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "BOOLEAN"]>>, "INTEGER")
add_query("b", "a", <<["a", "INTEGER"], ["b", "e"], ["c", "a"], ["d", "INTEGER"], ["c", "INTEGER"], ["d", "BOOLEAN"], ["b", "BOOLEAN"]>>, "B")
add_call_chain(<<A,BOOLEAN,D>>)
add_class(C)
add_call_chain(<<INTEGER,D,d,B>>)
conjunction
greater_than
add_command("B", "d", <<["a", "b"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "b"], ["c", "INTEGER"]>>)
logical_negation
add_call_chain(<<A>>)
logical_negation
int_value (15)
add_call_chain(<<C,B,c,a,A,c,c,B,e>>)
int_value (32)
add_query("B", "e", <<["a", "INTEGER"], ["INTEGER", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "B"], ["D", "INTEGER"], ["e", "BOOLEAN"]>>, "C")
add_query("BOOLEAN", "B", <<["A", "C"], ["C", "INTEGER"], ["b", "BOOLEAN"]>>, "c")
add_command("c", "D", <<["a", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["a", "c"], ["C", "INTEGER"], ["e", "D"], ["c", "D"], ["e", "BOOLEAN"], ["BOOLEAN", "c"], ["B", "INTEGER"]>>)
add_class(C)
add_query("A", "B", <<["BOOLEAN", "d"], ["A", "C"], ["d", "BOOLEAN"], ["D", "B"], ["b", "INTEGER"], ["BOOLEAN", "C"], ["C", "D"], ["b", "C"]>>, "A")
add_command("D", "B", <<["b", "BOOLEAN"], ["d", "C"], ["BOOLEAN", "INTEGER"], ["d", "INTEGER"], ["INTEGER", "BOOLEAN"], ["A", "c"], ["BOOLEAN", "B"]>>)
add_query("d", "D", <<["B", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["b", "BOOLEAN"], ["INTEGER", "INTEGER"]>>, "b")
numerical_negation
add_query("A", "b", <<["INTEGER", "BOOLEAN"], ["a", "INTEGER"], ["a", "B"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["c", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["A", "d"], ["d", "BOOLEAN"]>>, "a")
generate_java_code
add_call_chain(<<a,e,BOOLEAN,d,BOOLEAN,c,d>>)
equals
int_value (24)
add_command("A", "BOOLEAN", <<["c", "BOOLEAN"], ["D", "c"], ["B", "C"], ["c", "B"], ["e", "C"], ["D", "A"]>>)
generate_java_code
add_call_chain(<<D,b,C,e,e>>)
quotient
int_value (23)
add_query("c", "d", <<["c", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["D", "INTEGER"], ["b", "INTEGER"], ["B", "BOOLEAN"], ["B", "INTEGER"]>>, "a")
logical_negation
type_check
add_attribute("c", "BOOLEAN", "INTEGER")
add_call_chain(<<c>>)
modulo
logical_negation
add_class(B)
bool_value (false)
generate_java_code
type_check
add_command("b", "C", <<["a", "b"], ["c", "INTEGER"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["A", "INTEGER"], ["b", "INTEGER"], ["D", "INTEGER"]>>)
add_call_chain(<<a,B,e,b,d,a,INTEGER,A,d>>)
add_query("b", "C", <<["C", "BOOLEAN"], ["b", "BOOLEAN"]>>, "D")
add_call_chain(<<d,D,B,D,BOOLEAN,A,INTEGER>>)
add_call_chain(<<d,B,C,D,e,e,INTEGER>>)
bool_value (false)
add_command("D", "B", <<["A", "INTEGER"], ["c", "BOOLEAN"], ["a", "B"], ["B", "a"], ["b", "BOOLEAN"], ["D", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["INTEGER", "c"], ["c", "BOOLEAN"]>>)
add_attribute("d", "B", "INTEGER")
add_class(A)
add_command("BOOLEAN", "B", <<["d", "B"], ["D", "C"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["A", "B"], ["a", "BOOLEAN"], ["a", "c"]>>)
add_class(INTEGER)
conjunction
bool_value (false)
add_call_chain(<<BOOLEAN,C>>)
add_command("D", "c", <<["e", "INTEGER"]>>)
add_attribute("d", "A", "INTEGER")
add_call_chain(<<BOOLEAN,C>>)
add_class(INTEGER)
disjunction
multiplication
add_class(A)
addition
int_value (41)
addition
add_class(A)
add_call_chain(<<C,e,B,D,b>>)
greater_than
add_attribute("D", "B", "INTEGER")
add_call_chain(<<A,c>>)
add_command("e", "D", <<["D", "INTEGER"], ["c", "A"]>>)
int_value (29)
int_value (23)
less_than
greater_than
generate_java_code
add_call_chain(<<INTEGER,e>>)
add_command("d", "d", <<["c", "INTEGER"], ["D", "INTEGER"], ["e", "INTEGER"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["C", "INTEGER"]>>)
add_attribute("A", "d", "BOOLEAN")
add_call_chain(<<B,d,a,d>>)
disjunction
addition
add_command("b", "d", <<["B", "B"], ["BOOLEAN", "BOOLEAN"], ["a", "a"], ["INTEGER", "INTEGER"], ["D", "INTEGER"]>>)
add_call_chain(<<c,A,BOOLEAN,C,b,BOOLEAN,INTEGER,b>>)
logical_negation
add_query("d", "C", <<["e", "INTEGER"], ["C", "BOOLEAN"], ["e", "BOOLEAN"], ["c", "B"], ["c", "D"], ["e", "INTEGER"], ["B", "INTEGER"], ["B", "D"]>>, "b")
add_query("B", "c", <<["c", "INTEGER"], ["C", "D"]>>, "a")
type_check
addition
equals
type_check
add_attribute("c", "e", "BOOLEAN")
int_value (36)
add_call_chain(<<A,B,d,d,B,BOOLEAN>>)
generate_java_code
int_value (43)
subtraction
type_check
multiplication
type_check
bool_value (true)
bool_value (false)
numerical_negation
add_class(D)
type_check
numerical_negation
add_attribute("INTEGER", "D", "INTEGER")
add_query("e", "A", <<["c", "D"], ["D", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "D"]>>, "B")
add_call_chain(<<A,d,INTEGER,b>>)
subtraction
add_call_chain(<<e>>)
add_call_chain(<<e,a,b,e,d,B>>)
multiplication
add_call_chain(<<C,B,A,B,b,b>>)
bool_value (true)
less_than
add_call_chain(<<b>>)
numerical_negation
add_attribute("e", "e", "BOOLEAN")
add_command("C", "d", <<["C", "BOOLEAN"], ["c", "e"], ["B", "D"], ["e", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>)
numerical_negation
add_attribute("B", "BOOLEAN", "BOOLEAN")
add_query("A", "D", <<["INTEGER", "BOOLEAN"], ["B", "INTEGER"], ["d", "INTEGER"], ["INTEGER", "c"], ["b", "INTEGER"]>>, "A")
bool_value (true)
add_call_chain(<<D,d,c,c,c,c,a,C,b>>)
add_call_chain(<<b,A,A,A,D,D>>)
less_than
less_than
add_class(b)
type_check
add_call_chain(<<d,d,D,e,d,e>>)
add_call_chain(<<INTEGER>>)
logical_negation
generate_java_code
add_call_chain(<<a,a>>)
logical_negation
greater_than
add_attribute("e", "b", "INTEGER")
