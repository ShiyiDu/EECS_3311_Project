type_check
add_query("c", "c", <<["d", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["e", "INTEGER"], ["d", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["a", "BOOLEAN"], ["b", "A"]>>, "B")
add_call_chain(<<c,D,INTEGER>>)
add_call_chain(<<A>>)
disjunction
numerical_negation
add_call_chain(<<b,e,e,a,INTEGER,B,INTEGER,C>>)
int_value (24)
add_attribute("b", "C", "a")
disjunction
add_query("d", "d", <<["e", "e"], ["INTEGER", "BOOLEAN"], ["c", "INTEGER"], ["B", "d"]>>, "b")
add_call_chain(<<D,BOOLEAN,c>>)
type_check
add_command("a", "BOOLEAN", <<["c", "c"], ["d", "BOOLEAN"], ["A", "D"], ["A", "INTEGER"], ["e", "INTEGER"], ["d", "INTEGER"], ["b", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
numerical_negation
int_value (25)
add_query("a", "c", <<["d", "BOOLEAN"]>>, "e")
add_attribute("a", "d", "BOOLEAN")
add_call_chain(<<e,INTEGER,b,c,B,A,e,d,e>>)
add_attribute("e", "A", "B")
add_attribute("D", "a", "BOOLEAN")
add_call_chain(<<A,b,e,B,e,a,INTEGER,B,e>>)
add_attribute("D", "e", "INTEGER")
numerical_negation
logical_negation
add_query("B", "d", <<["INTEGER", "INTEGER"], ["e", "BOOLEAN"], ["e", "INTEGER"], ["A", "d"]>>, "e")
logical_negation
numerical_negation
add_call_chain(<<C>>)
add_call_chain(<<e,INTEGER,A,D,b,a,A,a,B>>)
bool_value (false)
add_attribute("C", "b", "BOOLEAN")
add_query("d", "a", <<["A", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "INTEGER"], ["d", "BOOLEAN"]>>, "B")
logical_negation
int_value (2)
add_command("c", "b", <<["D", "BOOLEAN"]>>)
numerical_negation
generate_java_code
add_query("B", "B", <<["b", "BOOLEAN"]>>, "A")
generate_java_code
type_check
add_call_chain(<<a,C,c,c,D,D,INTEGER>>)
add_attribute("d", "B", "INTEGER")
add_call_chain(<<d,b,INTEGER,B,b,c,a,d>>)
add_query("INTEGER", "C", <<["c", "b"], ["e", "BOOLEAN"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["e", "BOOLEAN"], ["BOOLEAN", "a"]>>, "B")
add_query("e", "C", <<["c", "BOOLEAN"], ["B", "C"], ["c", "INTEGER"], ["e", "INTEGER"], ["e", "a"]>>, "d")
numerical_negation
add_command("a", "c", <<["B", "INTEGER"], ["D", "INTEGER"]>>)
add_query("B", "A", <<["C", "INTEGER"], ["C", "BOOLEAN"]>>, "A")
subtraction
bool_value (false)
bool_value (false)
generate_java_code
add_attribute("A", "B", "B")
add_call_chain(<<C,D,C,D>>)
add_call_chain(<<A,BOOLEAN>>)
disjunction
less_than
generate_java_code
type_check
bool_value (true)
equals
add_class(B)
int_value (9)
logical_negation
type_check
numerical_negation
type_check
add_class(C)
add_command("D", "D", <<["a", "INTEGER"], ["INTEGER", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "INTEGER"], ["e", "INTEGER"]>>)
add_call_chain(<<b,d,C,c,b,b,c,d,b>>)
generate_java_code
add_attribute("B", "c", "BOOLEAN")
add_class(c)
modulo
int_value (21)
add_call_chain(<<D,BOOLEAN,a,D,B,c,e,A>>)
disjunction
addition
bool_value (false)
add_attribute("e", "d", "BOOLEAN")
bool_value (true)
modulo
add_query("c", "BOOLEAN", <<["D", "INTEGER"], ["b", "BOOLEAN"]>>, "D")
add_query("c", "C", <<["a", "BOOLEAN"], ["d", "b"], ["D", "BOOLEAN"], ["C", "b"], ["e", "c"], ["a", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>, "e")
logical_negation
logical_negation
logical_negation
add_attribute("C", "b", "BOOLEAN")
add_call_chain(<<INTEGER,A,b,c,B>>)
int_value (40)
add_class(BOOLEAN)
bool_value (false)
int_value (39)
add_call_chain(<<e,D,d>>)
int_value (40)
add_call_chain(<<B,C,A>>)
add_command("B", "D", <<["d", "C"], ["a", "BOOLEAN"], ["c", "a"]>>)
numerical_negation
add_command("e", "D", <<["e", "B"], ["A", "BOOLEAN"], ["c", "e"], ["d", "INTEGER"], ["a", "INTEGER"], ["d", "INTEGER"], ["B", "B"], ["e", "BOOLEAN"], ["b", "A"]>>)
add_class(B)
add_attribute("a", "c", "INTEGER")
bool_value (false)
add_call_chain(<<C,B,D,A,BOOLEAN,B>>)
add_class(A)
addition
conjunction
int_value (1)
numerical_negation
addition
bool_value (true)
int_value (36)
add_call_chain(<<D>>)
add_call_chain(<<b,D,e,a,b>>)
disjunction
add_call_chain(<<INTEGER,B,B,d,D>>)
add_command("C", "A", <<["C", "BOOLEAN"], ["A", "INTEGER"], ["D", "b"], ["b", "a"], ["b", "INTEGER"], ["b", "D"], ["D", "INTEGER"], ["C", "BOOLEAN"]>>)
generate_java_code
logical_negation
add_class(e)
logical_negation
logical_negation
logical_negation
add_command("INTEGER", "a", <<["C", "BOOLEAN"], ["d", "INTEGER"], ["e", "INTEGER"]>>)
logical_negation
add_query("c", "BOOLEAN", <<["c", "BOOLEAN"], ["BOOLEAN", "D"], ["e", "C"], ["B", "D"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "INTEGER"], ["d", "A"]>>, "C")
bool_value (false)
int_value (18)
logical_negation
add_call_chain(<<B,a,c,B,C,A,INTEGER,C,INTEGER>>)
add_attribute("a", "a", "INTEGER")
logical_negation
add_class(A)
add_attribute("d", "B", "d")
add_class(B)
bool_value (true)
add_call_chain(<<INTEGER,a,a>>)
add_attribute("a", "BOOLEAN", "C")
int_value (5)
generate_java_code
logical_negation
disjunction
add_command("INTEGER", "a", <<["c", "e"], ["c", "INTEGER"], ["A", "B"], ["c", "INTEGER"], ["D", "D"], ["a", "A"], ["d", "B"], ["BOOLEAN", "INTEGER"]>>)
add_call_chain(<<e,a,B,INTEGER,d,c,INTEGER,c,D>>)
bool_value (false)
add_class(c)
subtraction
int_value (6)
logical_negation
add_attribute("C", "A", "INTEGER")
add_class(d)
logical_negation
conjunction
type_check
less_than
numerical_negation
equals
bool_value (false)
add_command("e", "a", <<["B", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "A"], ["c", "b"], ["BOOLEAN", "BOOLEAN"], ["c", "INTEGER"], ["C", "INTEGER"], ["a", "c"], ["b", "INTEGER"]>>)
generate_java_code
add_attribute("a", "e", "C")
add_class(C)
add_attribute("BOOLEAN", "A", "INTEGER")
add_call_chain(<<a,D,D,C,C,A,e,D>>)
add_call_chain(<<A,C,a,D,b,A>>)
add_query("INTEGER", "d", <<["A", "d"], ["A", "INTEGER"], ["C", "B"], ["B", "INTEGER"], ["e", "BOOLEAN"], ["B", "INTEGER"]>>, "B")
quotient
add_call_chain(<<c,e,c,c,D,b,A>>)
int_value (29)
add_query("a", "e", <<["D", "d"], ["A", "BOOLEAN"], ["c", "D"], ["BOOLEAN", "INTEGER"], ["D", "D"], ["BOOLEAN", "INTEGER"], ["e", "INTEGER"], ["INTEGER", "a"], ["C", "c"]>>, "A")
add_command("C", "a", <<["b", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["a", "INTEGER"]>>)
int_value (24)
add_attribute("B", "A", "BOOLEAN")
addition
int_value (38)
add_attribute("C", "B", "BOOLEAN")
quotient
numerical_negation
add_query("c", "c", <<["a", "BOOLEAN"]>>, "a")
add_attribute("D", "A", "BOOLEAN")
int_value (21)
add_class(a)
add_command("d", "A", <<["a", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "e"]>>)
add_call_chain(<<D,c>>)
add_command("d", "B", <<["d", "BOOLEAN"]>>)
add_class(B)
add_call_chain(<<C,B,e,a>>)
logical_negation
add_call_chain(<<c,D,B>>)
numerical_negation
add_query("d", "b", <<["c", "D"], ["D", "BOOLEAN"]>>, "e")
logical_negation
type_check
add_call_chain(<<b,c,D,A,BOOLEAN>>)
add_attribute("b", "A", "INTEGER")
logical_negation
bool_value (false)
int_value (24)
numerical_negation
int_value (9)
numerical_negation
add_attribute("c", "e", "INTEGER")
generate_java_code
add_call_chain(<<C,C,B,A,c,c,b,B>>)
type_check
add_attribute("b", "A", "INTEGER")
add_call_chain(<<C,A,e,d,B,D,b,A>>)
type_check
equals
add_call_chain(<<C,C>>)
numerical_negation
conjunction
add_call_chain(<<D,d,b,c,d,C,b,e,INTEGER>>)
add_attribute("A", "d", "BOOLEAN")
add_call_chain(<<A,e>>)
add_attribute("c", "C", "INTEGER")
less_than
type_check
add_query("BOOLEAN", "D", <<["C", "BOOLEAN"], ["b", "INTEGER"], ["B", "BOOLEAN"], ["e", "INTEGER"], ["d", "BOOLEAN"], ["B", "BOOLEAN"]>>, "c")
generate_java_code
add_call_chain(<<BOOLEAN>>)
add_attribute("c", "A", "INTEGER")
int_value (17)
generate_java_code
quotient
modulo
add_query("e", "A", <<["B", "INTEGER"], ["b", "BOOLEAN"], ["D", "BOOLEAN"], ["INTEGER", "C"]>>, "D")
add_call_chain(<<a,e,e,D,d,B,D>>)
add_class(b)
add_call_chain(<<d>>)
