numerical_negation
int_value (8)
add_call_chain(<<c>>)
logical_negation
add_query("a", "e", <<["D", "INTEGER"]>>, "a")
int_value (4)
add_command("A", "INTEGER", <<["b", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["BOOLEAN", "INTEGER"], ["A", "BOOLEAN"], ["D", "INTEGER"], ["d", "b"], ["D", "BOOLEAN"]>>)
add_call_chain(<<C,BOOLEAN,b,BOOLEAN,a,D,C,C>>)
bool_value (false)
add_attribute("BOOLEAN", "b", "INTEGER")
numerical_negation
add_attribute("e", "A", "BOOLEAN")
logical_negation
add_query("e", "c", <<["C", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "D"]>>, "A")
add_call_chain(<<b,D,D>>)
bool_value (true)
add_call_chain(<<c,a,e,a,BOOLEAN,b,D,a>>)
add_attribute("BOOLEAN", "INTEGER", "BOOLEAN")
add_query("D", "e", <<["b", "BOOLEAN"], ["D", "A"]>>, "D")
type_check
modulo
add_call_chain(<<C,e,BOOLEAN,d,A,a>>)
add_command("d", "INTEGER", <<["A", "BOOLEAN"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["d", "BOOLEAN"]>>)
equals
add_query("C", "D", <<["a", "c"], ["b", "BOOLEAN"]>>, "A")
int_value (13)
add_call_chain(<<e,A>>)
greater_than
add_call_chain(<<B,B,c,C>>)
add_call_chain(<<B>>)
add_attribute("B", "A", "e")
add_attribute("C", "C", "C")
equals
disjunction
subtraction
int_value (1)
int_value (46)
generate_java_code
subtraction
subtraction
add_class(BOOLEAN)
add_call_chain(<<c,BOOLEAN>>)
add_command("A", "b", <<["B", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "BOOLEAN"]>>)
add_call_chain(<<a,BOOLEAN,c,b,B,a,C,A>>)
add_class(b)
add_call_chain(<<b,b,b,a>>)
add_command("c", "b", <<["C", "INTEGER"]>>)
add_call_chain(<<D>>)
addition
add_command("c", "c", <<["b", "BOOLEAN"], ["a", "a"]>>)
conjunction
type_check
add_call_chain(<<A>>)
type_check
add_call_chain(<<A,e,b>>)
equals
add_query("c", "C", <<["B", "BOOLEAN"], ["e", "BOOLEAN"], ["c", "INTEGER"], ["B", "INTEGER"], ["e", "c"]>>, "INTEGER")
add_attribute("INTEGER", "INTEGER", "INTEGER")
add_command("d", "B", <<["b", "c"], ["e", "d"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["a", "INTEGER"], ["e", "BOOLEAN"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["D", "BOOLEAN"]>>)
add_command("B", "e", <<["A", "BOOLEAN"], ["c", "BOOLEAN"]>>)
int_value (49)
add_call_chain(<<e,INTEGER,A,A>>)
logical_negation
type_check
type_check
add_call_chain(<<B,B,b,C,BOOLEAN,e,c,b,e>>)
add_call_chain(<<B,B,INTEGER,e,INTEGER,C,c,e>>)
add_query("A", "d", <<["C", "BOOLEAN"], ["C", "INTEGER"], ["c", "BOOLEAN"], ["c", "INTEGER"], ["a", "C"], ["C", "BOOLEAN"], ["d", "INTEGER"], ["C", "INTEGER"], ["BOOLEAN", "INTEGER"]>>, "a")
logical_negation
add_query("b", "d", <<["C", "BOOLEAN"], ["b", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>, "b")
equals
add_query("C", "B", <<["a", "INTEGER"], ["b", "C"], ["D", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["C", "INTEGER"], ["e", "a"]>>, "d")
bool_value (true)
add_query("a", "d", <<["a", "d"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["a", "INTEGER"], ["A", "a"], ["c", "BOOLEAN"]>>, "c")
add_class(D)
add_call_chain(<<C,a,e,C,b,C,B>>)
add_call_chain(<<A,B,A>>)
add_query("A", "b", <<["d", "e"], ["c", "INTEGER"], ["e", "INTEGER"], ["A", "b"], ["C", "A"], ["D", "INTEGER"], ["c", "D"]>>, "b")
add_attribute("e", "d", "INTEGER")
type_check
add_query("B", "INTEGER", <<["a", "BOOLEAN"], ["C", "D"], ["b", "INTEGER"], ["D", "BOOLEAN"], ["c", "INTEGER"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["D", "B"], ["c", "e"]>>, "d")
type_check
add_class(A)
add_call_chain(<<D,A,d>>)
add_command("c", "a", <<["C", "BOOLEAN"], ["B", "e"], ["a", "INTEGER"]>>)
generate_java_code
greater_than
add_command("e", "C", <<["C", "INTEGER"], ["e", "INTEGER"], ["b", "INTEGER"], ["c", "INTEGER"]>>)
conjunction
add_call_chain(<<B,b>>)
int_value (3)
type_check
add_query("d", "b", <<["BOOLEAN", "INTEGER"], ["a", "INTEGER"], ["c", "e"], ["INTEGER", "c"], ["BOOLEAN", "INTEGER"]>>, "b")
multiplication
bool_value (true)
numerical_negation
numerical_negation
disjunction
add_call_chain(<<b,INTEGER,B,B,D,d>>)
numerical_negation
numerical_negation
type_check
add_query("c", "e", <<["B", "BOOLEAN"], ["D", "b"], ["A", "A"], ["a", "INTEGER"], ["D", "INTEGER"], ["b", "INTEGER"], ["a", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>, "BOOLEAN")
add_query("D", "A", <<["d", "INTEGER"], ["b", "A"], ["C", "INTEGER"], ["c", "D"], ["c", "A"], ["e", "INTEGER"], ["INTEGER", "INTEGER"], ["A", "BOOLEAN"], ["a", "BOOLEAN"]>>, "c")
add_class(D)
add_call_chain(<<a,B,C,A,a,d,b,d>>)
add_command("A", "e", <<["c", "BOOLEAN"], ["C", "INTEGER"], ["A", "C"], ["D", "INTEGER"], ["b", "A"], ["d", "INTEGER"], ["D", "BOOLEAN"], ["c", "INTEGER"], ["c", "e"]>>)
add_query("a", "d", <<["A", "BOOLEAN"], ["B", "B"], ["D", "BOOLEAN"], ["C", "b"]>>, "d")
add_call_chain(<<A,C>>)
add_call_chain(<<D>>)
add_command("d", "b", <<["D", "INTEGER"], ["b", "INTEGER"], ["B", "INTEGER"], ["A", "D"], ["e", "B"], ["b", "INTEGER"], ["a", "BOOLEAN"]>>)
bool_value (false)
add_call_chain(<<D,B>>)
generate_java_code
add_class(C)
bool_value (false)
add_call_chain(<<D>>)
numerical_negation
numerical_negation
add_command("B", "a", <<["D", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["BOOLEAN", "INTEGER"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["e", "INTEGER"]>>)
add_query("D", "BOOLEAN", <<["e", "BOOLEAN"], ["D", "BOOLEAN"], ["INTEGER", "INTEGER"]>>, "C")
add_query("A", "c", <<["A", "e"], ["D", "INTEGER"], ["D", "INTEGER"], ["e", "BOOLEAN"], ["A", "INTEGER"]>>, "A")
bool_value (true)
add_call_chain(<<d,e,B,A,b,INTEGER,a,BOOLEAN,e>>)
quotient
add_call_chain(<<C,b,d,B,INTEGER,BOOLEAN,e,B,e>>)
bool_value (true)
add_query("c", "BOOLEAN", <<["e", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "B"]>>, "a")
add_class(e)
add_call_chain(<<d,B,B,a,D>>)
type_check
disjunction
equals
add_query("e", "D", <<["C", "INTEGER"], ["C", "INTEGER"], ["B", "INTEGER"], ["b", "d"], ["INTEGER", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "e"]>>, "e")
add_attribute("B", "b", "BOOLEAN")
addition
add_command("b", "c", <<["C", "BOOLEAN"], ["d", "INTEGER"], ["A", "D"]>>)
bool_value (false)
add_query("A", "a", <<["INTEGER", "INTEGER"], ["B", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["B", "BOOLEAN"], ["BOOLEAN", "d"], ["b", "INTEGER"], ["d", "B"], ["e", "b"], ["c", "BOOLEAN"]>>, "D")
logical_negation
logical_negation
bool_value (false)
generate_java_code
add_call_chain(<<a,C,e,e,c>>)
add_attribute("A", "BOOLEAN", "BOOLEAN")
disjunction
add_command("A", "A", <<["D", "INTEGER"]>>)
logical_negation
bool_value (true)
add_query("D", "B", <<["d", "a"], ["d", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "A"], ["b", "INTEGER"], ["d", "INTEGER"], ["INTEGER", "d"], ["B", "BOOLEAN"]>>, "A")
disjunction
int_value (9)
add_command("D", "e", <<["A", "INTEGER"], ["B", "INTEGER"], ["a", "INTEGER"]>>)
add_query("D", "d", <<["c", "BOOLEAN"]>>, "c")
add_query("a", "B", <<["e", "BOOLEAN"], ["c", "A"], ["D", "e"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["B", "INTEGER"], ["B", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>, "e")
add_command("b", "A", <<["BOOLEAN", "INTEGER"]>>)
int_value (22)
add_call_chain(<<c>>)
generate_java_code
add_attribute("A", "C", "BOOLEAN")
int_value (5)
bool_value (true)
add_class(B)
disjunction
addition
numerical_negation
greater_than
bool_value (true)
int_value (1)
int_value (21)
less_than
generate_java_code
generate_java_code
bool_value (true)
generate_java_code
bool_value (false)
int_value (25)
add_call_chain(<<BOOLEAN,D,e,C,c,D,A>>)
add_command("c", "D", <<["D", "A"], ["C", "BOOLEAN"], ["C", "INTEGER"]>>)
add_call_chain(<<c,e,D,e,B,INTEGER>>)
add_query("c", "A", <<["INTEGER", "BOOLEAN"]>>, "D")
int_value (11)
disjunction
bool_value (false)
numerical_negation
add_command("A", "d", <<["d", "BOOLEAN"], ["D", "BOOLEAN"], ["d", "INTEGER"]>>)
generate_java_code
add_class(a)
add_attribute("A", "C", "BOOLEAN")
add_attribute("b", "e", "A")
greater_than
type_check
logical_negation
add_attribute("b", "INTEGER", "A")
add_command("B", "INTEGER", <<["D", "INTEGER"], ["D", "INTEGER"], ["B", "INTEGER"], ["d", "d"], ["e", "INTEGER"], ["d", "BOOLEAN"]>>)
generate_java_code
add_query("B", "INTEGER", <<["C", "d"], ["INTEGER", "BOOLEAN"], ["e", "b"], ["C", "A"], ["d", "INTEGER"], ["A", "A"]>>, "e")
add_command("INTEGER", "b", <<["B", "BOOLEAN"]>>)
generate_java_code
add_query("B", "D", <<["D", "BOOLEAN"], ["e", "INTEGER"], ["c", "BOOLEAN"], ["d", "INTEGER"], ["a", "INTEGER"], ["C", "BOOLEAN"], ["d", "INTEGER"], ["c", "INTEGER"], ["a", "BOOLEAN"]>>, "A")
bool_value (true)
add_command("a", "D", <<["D", "BOOLEAN"], ["C", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "B"], ["d", "C"], ["B", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "BOOLEAN"]>>)
add_attribute("A", "b", "BOOLEAN")
bool_value (false)
add_call_chain(<<b,A>>)
add_command("D", "A", <<["c", "INTEGER"], ["d", "BOOLEAN"], ["d", "BOOLEAN"], ["b", "B"], ["INTEGER", "INTEGER"], ["A", "BOOLEAN"]>>)
add_call_chain(<<b,B,a>>)
generate_java_code
bool_value (true)
bool_value (true)
add_call_chain(<<C,e,INTEGER,b,a,c>>)
bool_value (false)
add_call_chain(<<C,e,c,C,d,A,C>>)
add_command("e", "b", <<["b", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "INTEGER"], ["C", "INTEGER"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["e", "A"], ["B", "B"]>>)
add_class(a)
add_query("b", "b", <<["A", "A"], ["B", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["INTEGER", "A"], ["a", "INTEGER"], ["a", "INTEGER"], ["e", "BOOLEAN"]>>, "d")
add_attribute("a", "B", "BOOLEAN")
numerical_negation
add_class(e)
less_than
add_attribute("e", "D", "BOOLEAN")
add_attribute("b", "A", "BOOLEAN")
logical_negation
bool_value (false)
addition
add_attribute("D", "c", "BOOLEAN")
conjunction
logical_negation
add_call_chain(<<C,D>>)
numerical_negation
add_class(A)
add_call_chain(<<C,D,b,INTEGER,a,B,a>>)
add_query("C", "a", <<["B", "b"], ["B", "d"], ["D", "INTEGER"]>>, "b")
add_call_chain(<<D,e,A,c,b>>)
add_attribute("INTEGER", "e", "INTEGER")
add_call_chain(<<d,a,c>>)
generate_java_code
bool_value (true)
add_command("A", "e", <<["c", "BOOLEAN"]>>)
conjunction
add_call_chain(<<A,d,BOOLEAN,D>>)
int_value (4)
bool_value (true)
add_call_chain(<<e,C,c,e,a,C,A,C,D>>)
add_query("d", "b", <<["d", "INTEGER"], ["C", "c"], ["D", "INTEGER"], ["A", "INTEGER"], ["a", "BOOLEAN"]>>, "D")
generate_java_code
logical_negation
type_check
add_query("C", "e", <<["e", "INTEGER"], ["D", "a"], ["d", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "A"], ["e", "BOOLEAN"], ["INTEGER", "INTEGER"], ["INTEGER", "e"]>>, "d")
add_call_chain(<<b>>)
generate_java_code
add_attribute("C", "B", "A")
add_query("D", "B", <<["B", "A"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["a", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "C"]>>, "D")
add_query("A", "B", <<["D", "c"], ["C", "D"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["e", "c"]>>, "a")
add_call_chain(<<D,d,D,a,c,C,c>>)
add_call_chain(<<a>>)
add_query("D", "A", <<["c", "INTEGER"], ["INTEGER", "INTEGER"], ["A", "A"], ["a", "BOOLEAN"]>>, "B")
bool_value (true)
add_command("D", "C", <<["e", "BOOLEAN"], ["e", "BOOLEAN"], ["d", "BOOLEAN"], ["d", "C"], ["b", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["e", "a"]>>)
disjunction
add_attribute("A", "c", "BOOLEAN")
generate_java_code
logical_negation
add_command("c", "a", <<["d", "BOOLEAN"]>>)
add_command("c", "c", <<["d", "BOOLEAN"], ["D", "C"], ["D", "INTEGER"], ["a", "BOOLEAN"]>>)
type_check
conjunction
