logical_negation
add_call_chain(<<A,B,D,C,D,d,B>>)
add_call_chain(<<B,INTEGER,B,C>>)
type_check
type_check
numerical_negation
less_than
int_value (23)
int_value (3)
numerical_negation
numerical_negation
generate_java_code
add_call_chain(<<INTEGER,c,C,c,A>>)
add_call_chain(<<D,C,D,c,b>>)
conjunction
add_query("A", "D", <<["d", "INTEGER"], ["A", "BOOLEAN"]>>, "A")
add_query("BOOLEAN", "c", <<["b", "INTEGER"], ["e", "d"]>>, "A")
add_attribute("B", "B", "INTEGER")
add_attribute("b", "D", "d")
generate_java_code
add_call_chain(<<a,c,c,B,c,A,INTEGER,a,BOOLEAN>>)
logical_negation
add_command("INTEGER", "B", <<["a", "BOOLEAN"]>>)
bool_value (false)
multiplication
add_query("A", "C", <<["C", "BOOLEAN"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["A", "d"], ["B", "B"], ["e", "BOOLEAN"]>>, "C")
logical_negation
add_query("e", "B", <<["C", "INTEGER"], ["b", "BOOLEAN"], ["a", "b"], ["B", "c"]>>, "C")
int_value (12)
add_query("C", "A", <<["B", "INTEGER"], ["A", "BOOLEAN"], ["D", "INTEGER"]>>, "e")
add_attribute("BOOLEAN", "a", "BOOLEAN")
bool_value (true)
numerical_negation
add_query("C", "BOOLEAN", <<["BOOLEAN", "INTEGER"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["a", "A"], ["a", "BOOLEAN"], ["e", "A"], ["B", "INTEGER"], ["c", "INTEGER"], ["A", "c"]>>, "C")
multiplication
add_query("A", "c", <<["D", "BOOLEAN"], ["A", "INTEGER"], ["c", "INTEGER"], ["B", "c"], ["B", "BOOLEAN"], ["c", "BOOLEAN"]>>, "B")
add_command("D", "C", <<["A", "INTEGER"], ["A", "e"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["e", "BOOLEAN"], ["BOOLEAN", "e"], ["B", "BOOLEAN"], ["C", "BOOLEAN"]>>)
less_than
int_value (11)
int_value (46)
subtraction
int_value (12)
add_class(b)
addition
add_call_chain(<<d,D,e>>)
add_attribute("B", "A", "BOOLEAN")
disjunction
numerical_negation
add_query("D", "BOOLEAN", <<["a", "BOOLEAN"], ["b", "INTEGER"], ["INTEGER", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "B"], ["A", "INTEGER"], ["A", "BOOLEAN"]>>, "b")
numerical_negation
int_value (37)
add_attribute("INTEGER", "A", "b")
add_call_chain(<<B,e,A>>)
add_call_chain(<<D>>)
add_call_chain(<<e,C,b>>)
add_query("b", "d", <<["B", "INTEGER"], ["c", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "e"], ["C", "BOOLEAN"], ["INTEGER", "INTEGER"]>>, "A")
add_query("D", "D", <<["D", "C"], ["B", "INTEGER"], ["B", "c"], ["a", "a"]>>, "a")
greater_than
int_value (24)
equals
add_class(B)
numerical_negation
quotient
add_command("c", "A", <<["D", "D"], ["INTEGER", "B"], ["B", "d"]>>)
bool_value (true)
bool_value (false)
add_query("D", "e", <<["b", "BOOLEAN"], ["C", "BOOLEAN"]>>, "b")
add_call_chain(<<INTEGER,A,C,e,d,c>>)
add_call_chain(<<b,BOOLEAN,b,a,c>>)
equals
less_than
add_command("e", "C", <<["A", "BOOLEAN"], ["e", "BOOLEAN"]>>)
add_call_chain(<<INTEGER,c,A,d,C,C,D,C>>)
quotient
int_value (29)
conjunction
add_command("A", "A", <<["B", "INTEGER"], ["e", "INTEGER"], ["a", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "C"], ["B", "B"]>>)
add_call_chain(<<a,INTEGER,c>>)
multiplication
disjunction
add_call_chain(<<b,a,BOOLEAN,c,a,C>>)
generate_java_code
logical_negation
int_value (19)
add_call_chain(<<B,B,INTEGER,A,A>>)
type_check
add_command("INTEGER", "c", <<["b", "BOOLEAN"], ["C", "C"], ["C", "b"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["A", "BOOLEAN"], ["D", "A"], ["C", "INTEGER"], ["D", "e"]>>)
add_class(C)
add_query("d", "c", <<["BOOLEAN", "C"], ["b", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "A"], ["d", "INTEGER"], ["c", "d"]>>, "BOOLEAN")
bool_value (false)
logical_negation
greater_than
int_value (34)
add_call_chain(<<c,c,C,B,BOOLEAN,A,e,c>>)
bool_value (true)
add_command("B", "e", <<["C", "B"]>>)
add_command("c", "B", <<["a", "BOOLEAN"], ["d", "BOOLEAN"], ["c", "INTEGER"], ["INTEGER", "INTEGER"]>>)
generate_java_code
logical_negation
add_attribute("e", "a", "b")
logical_negation
greater_than
type_check
less_than
conjunction
multiplication
bool_value (true)
type_check
generate_java_code
add_class(C)
add_call_chain(<<B,B,A,b>>)
add_class(C)
add_attribute("BOOLEAN", "d", "D")
add_attribute("a", "A", "INTEGER")
int_value (40)
add_call_chain(<<e,d,D,D,a,BOOLEAN>>)
add_attribute("c", "C", "INTEGER")
add_call_chain(<<A>>)
add_attribute("BOOLEAN", "d", "b")
numerical_negation
add_class(BOOLEAN)
bool_value (false)
add_class(b)
bool_value (true)
add_call_chain(<<BOOLEAN,d>>)
conjunction
generate_java_code
bool_value (true)
add_query("b", "B", <<["e", "INTEGER"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["C", "C"]>>, "A")
add_query("A", "e", <<["B", "BOOLEAN"], ["d", "INTEGER"], ["INTEGER", "b"], ["D", "BOOLEAN"], ["a", "e"]>>, "B")
type_check
add_call_chain(<<C,C,C,C>>)
less_than
add_attribute("D", "c", "INTEGER")
add_class(c)
quotient
equals
type_check
generate_java_code
add_attribute("A", "C", "INTEGER")
add_query("INTEGER", "A", <<["D", "BOOLEAN"], ["e", "INTEGER"], ["e", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["c", "D"], ["d", "BOOLEAN"]>>, "b")
add_call_chain(<<A,BOOLEAN,e,a,e,a,B,c,c>>)
logical_negation
int_value (18)
logical_negation
add_call_chain(<<c,D,D,C>>)
logical_negation
less_than
int_value (16)
add_call_chain(<<c,C,b,B,B,INTEGER,c>>)
type_check
equals
equals
add_query("A", "BOOLEAN", <<["c", "BOOLEAN"], ["INTEGER", "c"]>>, "C")
add_call_chain(<<BOOLEAN,INTEGER>>)
add_call_chain(<<c,A,a>>)
int_value (4)
add_call_chain(<<c,a,B,C,a,BOOLEAN,d>>)
generate_java_code
add_command("A", "B", <<["e", "INTEGER"], ["D", "INTEGER"], ["c", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "BOOLEAN"]>>)
add_query("INTEGER", "A", <<["C", "INTEGER"]>>, "e")
add_class(B)
subtraction
add_attribute("d", "A", "BOOLEAN")
add_command("a", "a", <<["a", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["c", "B"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["c", "BOOLEAN"]>>)
generate_java_code
type_check
add_query("A", "b", <<["C", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["C", "INTEGER"], ["a", "INTEGER"], ["C", "BOOLEAN"]>>, "a")
generate_java_code
add_call_chain(<<C,c,d,A,A,D,c,D>>)
add_call_chain(<<c,A>>)
add_command("B", "d", <<["B", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "INTEGER"], ["A", "INTEGER"], ["b", "BOOLEAN"], ["C", "d"], ["c", "BOOLEAN"]>>)
add_call_chain(<<e,INTEGER,B,e,A,A,d,b,e>>)
conjunction
bool_value (true)
add_query("D", "B", <<["A", "INTEGER"], ["D", "INTEGER"], ["B", "B"], ["B", "BOOLEAN"]>>, "d")
add_class(c)
add_call_chain(<<c,A,A,D,e,D>>)
greater_than
conjunction
addition
add_command("b", "A", <<["e", "b"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["b", "BOOLEAN"], ["BOOLEAN", "b"], ["c", "BOOLEAN"], ["D", "BOOLEAN"]>>)
add_attribute("b", "b", "BOOLEAN")
disjunction
bool_value (true)
add_attribute("D", "d", "b")
add_class(b)
add_call_chain(<<C,D>>)
type_check
add_command("e", "e", <<["a", "BOOLEAN"], ["A", "INTEGER"]>>)
generate_java_code
add_call_chain(<<a,b,D,D,d,a,c>>)
add_class(D)
add_command("d", "e", <<["a", "D"], ["a", "B"], ["c", "INTEGER"], ["b", "INTEGER"], ["B", "C"]>>)
add_query("A", "BOOLEAN", <<["A", "INTEGER"], ["D", "INTEGER"], ["c", "c"], ["D", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "C"], ["A", "INTEGER"]>>, "d")
int_value (9)
int_value (35)
modulo
int_value (38)
numerical_negation
less_than
type_check
add_class(e)
bool_value (true)
add_call_chain(<<b,c,d,b,A>>)
add_class(c)
add_query("d", "a", <<["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"], ["b", "INTEGER"], ["BOOLEAN", "INTEGER"], ["C", "d"]>>, "B")
add_query("e", "C", <<["C", "D"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["a", "BOOLEAN"], ["d", "C"], ["BOOLEAN", "BOOLEAN"]>>, "D")
numerical_negation
bool_value (true)
add_attribute("b", "a", "INTEGER")
bool_value (true)
add_attribute("c", "D", "b")
bool_value (false)
add_query("e", "a", <<["a", "BOOLEAN"], ["A", "c"], ["BOOLEAN", "INTEGER"], ["a", "INTEGER"], ["d", "BOOLEAN"]>>, "C")
logical_negation
add_call_chain(<<B,A,D>>)
int_value (12)
type_check
numerical_negation
numerical_negation
add_attribute("d", "e", "BOOLEAN")
int_value (49)
add_class(c)
add_call_chain(<<e>>)
add_call_chain(<<d,a,C,e,D,A,INTEGER>>)
add_call_chain(<<b,a,a,e,a,A>>)
add_attribute("e", "B", "INTEGER")
add_command("BOOLEAN", "D", <<["b", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["C", "e"], ["A", "D"]>>)
numerical_negation
add_query("D", "c", <<["B", "INTEGER"], ["A", "c"]>>, "INTEGER")
add_query("d", "c", <<["c", "D"], ["B", "e"]>>, "C")
less_than
generate_java_code
add_call_chain(<<b,C>>)
add_query("A", "a", <<["C", "BOOLEAN"], ["e", "D"]>>, "b")
add_query("e", "c", <<["A", "BOOLEAN"], ["A", "INTEGER"], ["c", "INTEGER"], ["INTEGER", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "b"]>>, "b")
add_command("B", "C", <<["b", "c"], ["A", "D"], ["b", "c"], ["a", "INTEGER"], ["c", "d"], ["c", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "BOOLEAN"]>>)
add_query("C", "B", <<["c", "BOOLEAN"], ["c", "a"], ["e", "b"]>>, "d")
logical_negation
type_check
equals
add_class(A)
type_check
add_call_chain(<<B,b,b>>)
add_call_chain(<<c,B,B,a,B>>)
