int_value (3)
add_command("a", "B", <<["d", "B"], ["b", "INTEGER"]>>)
logical_negation
less_than
type_check
add_call_chain(<<C,b,BOOLEAN,C,b,D,A>>)
add_command("b", "INTEGER", <<["c", "INTEGER"]>>)
numerical_negation
equals
int_value (27)
add_call_chain(<<a,B,D,d,INTEGER,d,INTEGER,C>>)
add_attribute("B", "a", "BOOLEAN")
add_call_chain(<<a,BOOLEAN,A,b,A,e,BOOLEAN,D,a>>)
int_value (32)
add_command("D", "b", <<["c", "BOOLEAN"], ["D", "BOOLEAN"]>>)
bool_value (false)
disjunction
add_call_chain(<<A,D,D,INTEGER>>)
add_attribute("a", "C", "BOOLEAN")
add_attribute("b", "d", "D")
add_attribute("e", "INTEGER", "BOOLEAN")
bool_value (false)
int_value (49)
int_value (31)
add_call_chain(<<a,c,a,D,d>>)
generate_java_code
numerical_negation
numerical_negation
add_query("C", "B", <<["B", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "INTEGER"], ["a", "BOOLEAN"], ["e", "A"], ["C", "c"], ["D", "INTEGER"]>>, "A")
logical_negation
numerical_negation
add_command("C", "D", <<["b", "BOOLEAN"]>>)
add_class(d)
add_class(C)
disjunction
bool_value (true)
int_value (14)
bool_value (false)
add_command("A", "a", <<["b", "INTEGER"]>>)
add_call_chain(<<b,c,D,c,D,B,d,a,d>>)
int_value (8)
type_check
add_command("d", "c", <<["b", "b"], ["BOOLEAN", "INTEGER"], ["a", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "A"], ["BOOLEAN", "BOOLEAN"], ["C", "INTEGER"]>>)
add_command("d", "D", <<["e", "BOOLEAN"], ["INTEGER", "INTEGER"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "INTEGER"]>>)
numerical_negation
bool_value (true)
disjunction
add_query("INTEGER", "e", <<["c", "BOOLEAN"], ["B", "d"], ["c", "BOOLEAN"], ["C", "BOOLEAN"], ["d", "D"]>>, "c")
bool_value (true)
add_class(D)
numerical_negation
add_call_chain(<<A,A,INTEGER,C,e,BOOLEAN>>)
add_call_chain(<<d,a,b,b,C,B,B>>)
bool_value (false)
type_check
int_value (17)
int_value (8)
add_attribute("d", "A", "C")
int_value (13)
add_command("b", "INTEGER", <<["c", "BOOLEAN"], ["e", "C"], ["A", "INTEGER"], ["e", "INTEGER"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["D", "c"]>>)
add_command("a", "A", <<["C", "D"]>>)
add_class(a)
add_call_chain(<<B,D,d,b,d,D,e,A,d>>)
add_call_chain(<<D,b,d,c,D,c,b>>)
add_call_chain(<<b,b,d,d,e,D>>)
modulo
add_query("A", "D", <<["B", "BOOLEAN"], ["c", "BOOLEAN"], ["e", "D"], ["c", "INTEGER"], ["d", "D"], ["A", "c"], ["c", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "BOOLEAN"]>>, "B")
add_attribute("b", "BOOLEAN", "d")
add_query("e", "d", <<["e", "e"], ["D", "A"]>>, "a")
generate_java_code
type_check
add_query("BOOLEAN", "B", <<["c", "INTEGER"], ["c", "BOOLEAN"], ["a", "INTEGER"], ["e", "e"], ["a", "INTEGER"], ["B", "BOOLEAN"], ["C", "d"], ["d", "d"], ["c", "INTEGER"]>>, "D")
type_check
add_query("A", "e", <<["d", "INTEGER"], ["a", "INTEGER"], ["A", "BOOLEAN"]>>, "B")
logical_negation
add_command("d", "D", <<["d", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "BOOLEAN"]>>)
add_command("A", "B", <<["b", "d"], ["C", "BOOLEAN"]>>)
logical_negation
logical_negation
add_command("BOOLEAN", "INTEGER", <<["d", "BOOLEAN"], ["B", "INTEGER"], ["INTEGER", "INTEGER"], ["INTEGER", "INTEGER"], ["b", "BOOLEAN"]>>)
greater_than
generate_java_code
add_class(D)
add_query("A", "D", <<["A", "BOOLEAN"], ["e", "INTEGER"], ["d", "BOOLEAN"], ["d", "d"], ["D", "C"]>>, "C")
bool_value (true)
add_call_chain(<<e,b,b,d>>)
type_check
add_query("B", "e", <<["a", "BOOLEAN"], ["c", "A"]>>, "c")
multiplication
generate_java_code
add_call_chain(<<c,c,a,e,e,a,b,INTEGER>>)
type_check
greater_than
add_call_chain(<<B,B>>)
add_class(d)
greater_than
generate_java_code
add_command("A", "A", <<["a", "INTEGER"], ["a", "INTEGER"], ["a", "INTEGER"], ["c", "c"], ["e", "INTEGER"], ["d", "BOOLEAN"]>>)
disjunction
bool_value (false)
add_command("BOOLEAN", "b", <<["d", "d"], ["e", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "INTEGER"]>>)
generate_java_code
add_command("b", "D", <<["e", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "INTEGER"]>>)
add_attribute("b", "b", "INTEGER")
bool_value (true)
add_call_chain(<<c,a,C,a,C>>)
add_command("A", "c", <<["a", "C"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["d", "BOOLEAN"], ["d", "INTEGER"], ["D", "INTEGER"], ["e", "INTEGER"], ["e", "INTEGER"], ["a", "INTEGER"]>>)
generate_java_code
add_query("c", "c", <<["d", "BOOLEAN"], ["A", "d"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["A", "INTEGER"], ["A", "BOOLEAN"], ["c", "BOOLEAN"], ["INTEGER", "INTEGER"], ["c", "D"]>>, "e")
conjunction
int_value (30)
type_check
add_command("A", "A", <<["d", "c"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["e", "B"], ["A", "C"], ["c", "c"]>>)
logical_negation
add_call_chain(<<A,b,B,C,D,b,A,C>>)
add_command("C", "B", <<["BOOLEAN", "INTEGER"], ["c", "INTEGER"], ["A", "BOOLEAN"], ["D", "INTEGER"], ["e", "a"], ["d", "C"], ["D", "A"], ["d", "BOOLEAN"], ["e", "INTEGER"]>>)
add_call_chain(<<C,B,D,a>>)
add_call_chain(<<C,c,A,a,e,INTEGER,b,c>>)
add_call_chain(<<BOOLEAN,a,BOOLEAN,D,e,a,C,C>>)
add_command("INTEGER", "D", <<["C", "A"], ["d", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["e", "b"], ["A", "BOOLEAN"]>>)
conjunction
add_attribute("BOOLEAN", "c", "BOOLEAN")
subtraction
logical_negation
type_check
logical_negation
numerical_negation
add_call_chain(<<D,d,e,b,D,a>>)
numerical_negation
modulo
add_call_chain(<<D,e,BOOLEAN,b,D>>)
add_class(b)
add_query("A", "B", <<["B", "INTEGER"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["d", "INTEGER"]>>, "B")
add_call_chain(<<D,e,D,D,A,B>>)
add_call_chain(<<INTEGER,a,BOOLEAN,b,D,c,a>>)
add_attribute("b", "A", "INTEGER")
add_class(b)
int_value (25)
add_attribute("e", "e", "BOOLEAN")
numerical_negation
conjunction
add_query("c", "e", <<["A", "INTEGER"], ["A", "BOOLEAN"], ["A", "C"], ["d", "INTEGER"], ["c", "C"], ["c", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "BOOLEAN"]>>, "B")
add_attribute("A", "A", "INTEGER")
numerical_negation
add_call_chain(<<D,B,b,D,D,B,b>>)
int_value (35)
add_call_chain(<<B,e,B,BOOLEAN,b,d,b,c>>)
add_attribute("C", "D", "a")
add_query("a", "c", <<["a", "INTEGER"], ["a", "BOOLEAN"], ["D", "INTEGER"], ["A", "a"], ["INTEGER", "INTEGER"], ["INTEGER", "BOOLEAN"], ["b", "INTEGER"], ["b", "C"], ["C", "INTEGER"]>>, "e")
add_command("b", "a", <<["A", "BOOLEAN"], ["D", "C"], ["a", "BOOLEAN"], ["b", "a"]>>)
bool_value (true)
add_command("BOOLEAN", "e", <<["B", "INTEGER"], ["c", "INTEGER"], ["a", "BOOLEAN"], ["B", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
add_attribute("B", "D", "BOOLEAN")
add_attribute("b", "C", "c")
add_call_chain(<<A,A,A,b,a,d,B,D>>)
bool_value (true)
add_call_chain(<<D>>)
add_query("b", "A", <<["A", "INTEGER"], ["b", "BOOLEAN"], ["a", "INTEGER"], ["e", "d"], ["C", "BOOLEAN"], ["c", "B"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["a", "BOOLEAN"]>>, "A")
add_command("A", "B", <<["D", "c"], ["C", "INTEGER"], ["A", "INTEGER"], ["b", "INTEGER"], ["C", "INTEGER"], ["d", "a"], ["C", "B"], ["INTEGER", "BOOLEAN"]>>)
add_call_chain(<<B>>)
logical_negation
equals
numerical_negation
add_call_chain(<<B,D,INTEGER,INTEGER,D,D>>)
add_command("A", "c", <<["e", "D"]>>)
subtraction
bool_value (false)
subtraction
quotient
generate_java_code
numerical_negation
add_attribute("c", "d", "INTEGER")
add_class(b)
add_class(A)
numerical_negation
add_call_chain(<<b,B,e,a,D,d,BOOLEAN>>)
int_value (45)
add_class(a)
add_query("b", "e", <<["C", "BOOLEAN"]>>, "A")
type_check
add_query("a", "d", <<["d", "INTEGER"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["d", "BOOLEAN"], ["b", "INTEGER"], ["C", "INTEGER"], ["INTEGER", "BOOLEAN"]>>, "b")
add_query("d", "D", <<["C", "BOOLEAN"], ["a", "A"]>>, "A")
add_call_chain(<<e,c>>)
add_call_chain(<<e,B,A,A,A,a,b,B>>)
add_attribute("BOOLEAN", "b", "C")
add_call_chain(<<d>>)
generate_java_code
add_call_chain(<<D,e,C>>)
generate_java_code
add_query("a", "C", <<["D", "BOOLEAN"]>>, "a")
add_call_chain(<<e>>)
modulo
add_class(INTEGER)
quotient
numerical_negation
add_query("A", "INTEGER", <<["INTEGER", "BOOLEAN"], ["B", "INTEGER"], ["d", "INTEGER"], ["INTEGER", "INTEGER"], ["C", "C"], ["c", "INTEGER"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "BOOLEAN"]>>, "A")
add_call_chain(<<c>>)
add_attribute("D", "D", "INTEGER")
add_attribute("b", "b", "INTEGER")
bool_value (false)
quotient
logical_negation
type_check
bool_value (true)
int_value (39)
int_value (21)
add_attribute("BOOLEAN", "B", "BOOLEAN")
disjunction
logical_negation
conjunction
add_query("d", "e", <<["b", "B"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["d", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "C"], ["b", "INTEGER"], ["D", "C"]>>, "C")
bool_value (true)
bool_value (false)
add_call_chain(<<INTEGER>>)
add_query("e", "A", <<["a", "BOOLEAN"]>>, "C")
add_command("e", "e", <<["D", "INTEGER"], ["INTEGER", "a"], ["D", "D"], ["INTEGER", "INTEGER"], ["C", "e"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "INTEGER"], ["B", "BOOLEAN"]>>)
int_value (45)
add_command("D", "C", <<["B", "D"], ["d", "C"], ["INTEGER", "C"], ["b", "D"], ["C", "INTEGER"], ["e", "INTEGER"], ["C", "BOOLEAN"], ["D", "BOOLEAN"]>>)
add_attribute("c", "a", "BOOLEAN")
add_call_chain(<<d,A,C,A,INTEGER,INTEGER,e>>)
int_value (42)
add_call_chain(<<A,b,A>>)
numerical_negation
bool_value (true)
subtraction
logical_negation
add_class(INTEGER)
equals
quotient
generate_java_code
bool_value (false)
type_check
int_value (5)
add_call_chain(<<b,B,c,B,C,B,a>>)
add_query("c", "BOOLEAN", <<["c", "BOOLEAN"], ["B", "BOOLEAN"], ["INTEGER", "INTEGER"], ["C", "D"], ["b", "d"]>>, "INTEGER")
add_class(B)
int_value (19)
add_attribute("A", "B", "D")
int_value (14)
add_command("d", "B", <<["b", "BOOLEAN"]>>)
add_attribute("b", "A", "a")
generate_java_code
add_call_chain(<<b,c,D,e,d>>)
add_call_chain(<<A,D,C,d,D,A,A>>)
conjunction
int_value (9)
add_call_chain(<<e,b,e,B,D,INTEGER>>)
type_check
logical_negation
disjunction
numerical_negation
logical_negation
add_attribute("b", "b", "BOOLEAN")
add_query("B", "d", <<["b", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "INTEGER"], ["B", "d"], ["b", "INTEGER"], ["C", "b"], ["B", "BOOLEAN"]>>, "A")
add_query("e", "b", <<["a", "e"]>>, "a")
disjunction
add_attribute("BOOLEAN", "B", "BOOLEAN")
add_call_chain(<<C>>)
add_attribute("c", "D", "a")
add_attribute("B", "D", "INTEGER")
add_query("INTEGER", "INTEGER", <<["a", "c"]>>, "e")
add_command("b", "c", <<["B", "BOOLEAN"], ["C", "b"], ["d", "BOOLEAN"]>>)
add_call_chain(<<e,b,D,C,e>>)
