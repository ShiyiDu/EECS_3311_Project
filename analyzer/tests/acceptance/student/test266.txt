add_query("b", "A", <<["D", "BOOLEAN"], ["C", "BOOLEAN"], ["d", "INTEGER"], ["d", "D"], ["e", "c"], ["A", "c"], ["D", "INTEGER"], ["d", "INTEGER"]>>, "INTEGER")
add_class(A)
add_attribute("a", "B", "BOOLEAN")
generate_java_code
logical_negation
modulo
logical_negation
disjunction
logical_negation
add_class(INTEGER)
generate_java_code
add_class(D)
int_value (46)
bool_value (false)
bool_value (false)
add_command("d", "b", <<["e", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "INTEGER"], ["e", "BOOLEAN"]>>)
bool_value (true)
add_query("c", "b", <<["INTEGER", "a"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["D", "INTEGER"], ["B", "BOOLEAN"]>>, "A")
add_class(d)
bool_value (false)
int_value (48)
add_query("C", "A", <<["c", "C"], ["b", "D"], ["a", "A"], ["e", "INTEGER"]>>, "D")
add_call_chain(<<C,e,INTEGER,e,B>>)
add_attribute("c", "e", "INTEGER")
generate_java_code
greater_than
add_call_chain(<<B,e,a,C,a,A,BOOLEAN,BOOLEAN,C>>)
add_call_chain(<<D,B,A,b,e,D,a>>)
bool_value (false)
bool_value (true)
add_command("c", "e", <<["a", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "A"], ["e", "BOOLEAN"]>>)
conjunction
add_query("INTEGER", "a", <<["e", "INTEGER"], ["A", "BOOLEAN"], ["INTEGER", "A"], ["B", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "INTEGER"], ["A", "BOOLEAN"], ["C", "INTEGER"]>>, "D")
generate_java_code
multiplication
add_call_chain(<<D,d,c,b,A,A>>)
add_call_chain(<<B,D,B,D,D,D,C,a,e>>)
add_query("c", "D", <<["C", "INTEGER"], ["e", "BOOLEAN"], ["INTEGER", "c"], ["D", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["e", "INTEGER"], ["B", "BOOLEAN"], ["a", "BOOLEAN"]>>, "b")
logical_negation
generate_java_code
numerical_negation
add_attribute("e", "D", "INTEGER")
conjunction
add_call_chain(<<BOOLEAN,c,BOOLEAN>>)
add_attribute("e", "C", "BOOLEAN")
add_command("a", "a", <<["A", "INTEGER"], ["c", "A"], ["B", "INTEGER"], ["BOOLEAN", "c"], ["INTEGER", "e"], ["C", "d"]>>)
add_call_chain(<<b>>)
int_value (15)
bool_value (true)
int_value (3)
add_call_chain(<<d,a>>)
add_command("d", "b", <<["B", "INTEGER"], ["D", "INTEGER"], ["d", "INTEGER"]>>)
add_command("a", "D", <<["a", "BOOLEAN"], ["c", "BOOLEAN"]>>)
add_command("a", "C", <<["d", "b"], ["d", "C"], ["BOOLEAN", "INTEGER"], ["B", "INTEGER"]>>)
add_attribute("INTEGER", "BOOLEAN", "INTEGER")
add_attribute("BOOLEAN", "e", "BOOLEAN")
numerical_negation
add_command("INTEGER", "A", <<["A", "C"], ["C", "BOOLEAN"], ["INTEGER", "INTEGER"], ["INTEGER", "INTEGER"], ["e", "c"], ["A", "D"]>>)
conjunction
add_command("INTEGER", "C", <<["c", "INTEGER"], ["A", "INTEGER"], ["c", "INTEGER"], ["A", "BOOLEAN"], ["B", "a"], ["C", "INTEGER"]>>)
subtraction
conjunction
greater_than
add_query("B", "C", <<["c", "INTEGER"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["c", "BOOLEAN"], ["c", "d"], ["A", "BOOLEAN"]>>, "e")
add_call_chain(<<e,INTEGER,D,e,c,D,a,B,B>>)
add_call_chain(<<A,B,A,e,b,C,A,B>>)
bool_value (false)
add_query("D", "a", <<["B", "INTEGER"], ["e", "c"], ["A", "INTEGER"]>>, "B")
numerical_negation
int_value (5)
int_value (41)
subtraction
add_class(INTEGER)
add_attribute("d", "D", "BOOLEAN")
add_call_chain(<<INTEGER>>)
int_value (36)
add_command("d", "e", <<["e", "INTEGER"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["a", "C"], ["A", "C"], ["B", "BOOLEAN"], ["b", "C"]>>)
add_call_chain(<<e,b,a,A,d>>)
generate_java_code
numerical_negation
add_attribute("a", "c", "INTEGER")
add_query("b", "A", <<["C", "BOOLEAN"], ["e", "INTEGER"], ["c", "e"], ["e", "BOOLEAN"]>>, "e")
int_value (27)
add_command("a", "INTEGER", <<["C", "BOOLEAN"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["c", "INTEGER"]>>)
bool_value (true)
bool_value (false)
bool_value (true)
generate_java_code
conjunction
add_call_chain(<<C,e,C,e,a,b,c,d,d>>)
logical_negation
logical_negation
modulo
add_query("D", "INTEGER", <<["a", "INTEGER"], ["D", "INTEGER"]>>, "e")
generate_java_code
add_call_chain(<<a,A,d,a,A,d,b>>)
int_value (1)
modulo
multiplication
add_call_chain(<<B>>)
type_check
add_query("BOOLEAN", "b", <<["c", "BOOLEAN"], ["B", "INTEGER"]>>, "c")
add_attribute("c", "C", "INTEGER")
add_query("c", "C", <<["D", "INTEGER"], ["B", "D"], ["INTEGER", "BOOLEAN"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["c", "INTEGER"], ["B", "c"], ["INTEGER", "c"]>>, "B")
generate_java_code
add_command("c", "B", <<["INTEGER", "INTEGER"], ["d", "INTEGER"]>>)
add_call_chain(<<c,b,BOOLEAN>>)
add_attribute("C", "C", "INTEGER")
bool_value (false)
bool_value (false)
int_value (45)
logical_negation
subtraction
logical_negation
add_command("e", "a", <<["A", "D"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["BOOLEAN", "e"]>>)
add_query("a", "e", <<["B", "c"], ["a", "b"], ["a", "B"], ["b", "INTEGER"], ["e", "INTEGER"], ["b", "INTEGER"], ["C", "INTEGER"], ["B", "INTEGER"]>>, "d")
bool_value (false)
add_query("a", "d", <<["BOOLEAN", "a"], ["B", "A"], ["e", "BOOLEAN"], ["c", "d"], ["b", "a"], ["e", "a"], ["b", "INTEGER"], ["c", "INTEGER"]>>, "C")
bool_value (true)
type_check
add_query("c", "D", <<["b", "e"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["a", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>, "d")
add_call_chain(<<BOOLEAN,A,b,D,e,INTEGER>>)
add_call_chain(<<B,B,BOOLEAN,BOOLEAN,c,A,A>>)
add_query("B", "a", <<["a", "c"], ["BOOLEAN", "BOOLEAN"], ["INTEGER", "e"], ["c", "INTEGER"], ["C", "INTEGER"], ["INTEGER", "BOOLEAN"]>>, "e")
add_call_chain(<<D,D,b,C,d,C,A>>)
add_call_chain(<<D,b,B,a,D,c>>)
numerical_negation
bool_value (false)
int_value (18)
logical_negation
add_attribute("BOOLEAN", "C", "INTEGER")
numerical_negation
logical_negation
logical_negation
add_call_chain(<<c,INTEGER,d,c,b,C,d,BOOLEAN>>)
multiplication
equals
numerical_negation
add_query("D", "INTEGER", <<["C", "INTEGER"], ["b", "INTEGER"], ["b", "D"], ["b", "BOOLEAN"], ["A", "INTEGER"], ["C", "INTEGER"], ["B", "BOOLEAN"]>>, "D")
subtraction
add_class(D)
add_query("a", "A", <<["INTEGER", "BOOLEAN"], ["a", "INTEGER"]>>, "C")
int_value (5)
add_command("C", "INTEGER", <<["A", "BOOLEAN"], ["A", "BOOLEAN"]>>)
add_attribute("b", "INTEGER", "INTEGER")
add_command("a", "C", <<["c", "INTEGER"], ["D", "e"]>>)
add_call_chain(<<c,D,c>>)
bool_value (true)
add_attribute("a", "B", "D")
add_call_chain(<<BOOLEAN,d,d,A,INTEGER,B,b,B,b>>)
bool_value (false)
add_class(D)
add_query("a", "A", <<["A", "INTEGER"]>>, "d")
add_call_chain(<<B,A,BOOLEAN>>)
int_value (22)
add_call_chain(<<a,d,d,D,A,c,C,B,A>>)
numerical_negation
generate_java_code
logical_negation
add_class(D)
int_value (41)
numerical_negation
add_attribute("D", "A", "INTEGER")
add_call_chain(<<c>>)
generate_java_code
bool_value (true)
bool_value (false)
add_call_chain(<<D,BOOLEAN,c,D,D,D,C>>)
int_value (46)
disjunction
generate_java_code
add_attribute("B", "B", "BOOLEAN")
add_query("a", "d", <<["B", "b"], ["e", "D"]>>, "INTEGER")
add_command("c", "A", <<["D", "INTEGER"], ["d", "BOOLEAN"], ["A", "B"], ["INTEGER", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["d", "BOOLEAN"]>>)
add_attribute("b", "A", "b")
add_attribute("D", "C", "c")
type_check
add_command("e", "c", <<["A", "A"], ["B", "D"]>>)
add_attribute("a", "INTEGER", "INTEGER")
add_command("A", "INTEGER", <<["b", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "INTEGER"], ["D", "D"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["D", "BOOLEAN"]>>)
logical_negation
int_value (23)
add_call_chain(<<B>>)
add_call_chain(<<A,d,e,D>>)
disjunction
logical_negation
disjunction
logical_negation
int_value (25)
generate_java_code
bool_value (false)
add_attribute("b", "BOOLEAN", "BOOLEAN")
int_value (37)
modulo
add_attribute("d", "c", "B")
conjunction
int_value (32)
int_value (17)
add_call_chain(<<c,B,D,D>>)
add_attribute("e", "a", "B")
int_value (26)
logical_negation
int_value (49)
bool_value (false)
addition
quotient
add_attribute("e", "BOOLEAN", "BOOLEAN")
less_than
add_call_chain(<<c>>)
conjunction
add_command("A", "A", <<["a", "INTEGER"], ["c", "C"], ["c", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>)
subtraction
add_command("C", "B", <<["D", "BOOLEAN"], ["b", "e"], ["INTEGER", "BOOLEAN"], ["BOOLEAN", "e"], ["INTEGER", "BOOLEAN"], ["A", "INTEGER"], ["C", "BOOLEAN"]>>)
add_command("D", "b", <<["c", "BOOLEAN"], ["c", "INTEGER"], ["B", "e"], ["a", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "INTEGER"], ["B", "BOOLEAN"]>>)
add_call_chain(<<C,d,e>>)
numerical_negation
add_call_chain(<<e,c,B,d>>)
add_call_chain(<<A>>)
generate_java_code
add_command("c", "C", <<["D", "INTEGER"], ["c", "A"]>>)
add_call_chain(<<D,B,D,e,C>>)
logical_negation
generate_java_code
logical_negation
add_query("A", "A", <<["e", "BOOLEAN"], ["INTEGER", "INTEGER"], ["B", "e"], ["d", "INTEGER"], ["A", "BOOLEAN"]>>, "B")
add_call_chain(<<a,b,B,e>>)
