add_query("INTEGER", "B", <<["b", "INTEGER"], ["B", "BOOLEAN"], ["A", "b"], ["c", "INTEGER"], ["d", "c"], ["e", "BOOLEAN"]>>, "b")
add_query("b", "BOOLEAN", <<["a", "INTEGER"], ["INTEGER", "e"], ["c", "A"], ["b", "c"], ["c", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "e"], ["e", "BOOLEAN"]>>, "A")
add_call_chain(<<d,B,a>>)
disjunction
add_query("c", "D", <<["BOOLEAN", "BOOLEAN"], ["A", "e"], ["B", "BOOLEAN"], ["a", "b"], ["C", "INTEGER"], ["a", "INTEGER"], ["BOOLEAN", "B"]>>, "d")
equals
numerical_negation
int_value (7)
add_class(b)
add_query("D", "a", <<["e", "BOOLEAN"], ["b", "INTEGER"]>>, "b")
greater_than
bool_value (true)
int_value (45)
numerical_negation
generate_java_code
add_query("B", "e", <<["e", "BOOLEAN"]>>, "D")
modulo
type_check
add_call_chain(<<C,d>>)
add_call_chain(<<c,BOOLEAN>>)
numerical_negation
logical_negation
greater_than
add_call_chain(<<a,b,B,D,BOOLEAN,INTEGER,INTEGER>>)
bool_value (false)
add_call_chain(<<d,A,c,A>>)
add_query("d", "D", <<["A", "INTEGER"]>>, "a")
add_call_chain(<<b,c,D,D,a,b,A,B>>)
add_command("d", "b", <<["c", "a"], ["e", "INTEGER"], ["c", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "INTEGER"]>>)
int_value (10)
add_call_chain(<<C,C,a>>)
equals
bool_value (true)
disjunction
logical_negation
add_call_chain(<<c,a>>)
numerical_negation
subtraction
int_value (15)
add_call_chain(<<b,A,b,INTEGER,e,b,b,B>>)
bool_value (false)
logical_negation
numerical_negation
add_attribute("C", "B", "INTEGER")
add_call_chain(<<C,c,A>>)
logical_negation
add_call_chain(<<b>>)
quotient
int_value (29)
modulo
add_call_chain(<<A,C,D,C,BOOLEAN,b,d,e>>)
add_call_chain(<<D,D,d,INTEGER,B,a,e,c,a>>)
bool_value (true)
disjunction
bool_value (true)
bool_value (false)
add_command("INTEGER", "A", <<["d", "INTEGER"], ["C", "C"], ["D", "INTEGER"], ["D", "B"], ["a", "INTEGER"]>>)
add_class(e)
add_class(B)
add_query("A", "C", <<["C", "e"], ["e", "INTEGER"], ["BOOLEAN", "INTEGER"], ["e", "INTEGER"], ["b", "BOOLEAN"], ["C", "BOOLEAN"]>>, "D")
add_attribute("C", "C", "BOOLEAN")
add_call_chain(<<C,A,c,A,b,e,C,d>>)
int_value (28)
conjunction
type_check
generate_java_code
add_call_chain(<<e,B,b,A>>)
disjunction
int_value (6)
add_query("b", "e", <<["c", "BOOLEAN"], ["A", "INTEGER"], ["C", "C"], ["a", "INTEGER"]>>, "e")
type_check
add_call_chain(<<e,a,a>>)
logical_negation
generate_java_code
greater_than
logical_negation
bool_value (true)
less_than
add_call_chain(<<D>>)
add_attribute("c", "A", "BOOLEAN")
int_value (2)
disjunction
type_check
add_call_chain(<<INTEGER,INTEGER,d>>)
add_call_chain(<<D,INTEGER,d,A,C,B>>)
add_command("c", "D", <<["A", "INTEGER"], ["B", "INTEGER"]>>)
add_query("A", "a", <<["b", "D"], ["a", "C"], ["INTEGER", "INTEGER"]>>, "D")
numerical_negation
logical_negation
add_query("B", "B", <<["D", "INTEGER"], ["b", "BOOLEAN"], ["C", "B"], ["a", "d"], ["INTEGER", "INTEGER"]>>, "e")
add_call_chain(<<b,C,D,A,BOOLEAN,e,c,INTEGER>>)
type_check
add_call_chain(<<d,a,D,c,b,c>>)
add_attribute("BOOLEAN", "d", "INTEGER")
add_attribute("d", "c", "c")
conjunction
generate_java_code
add_attribute("e", "BOOLEAN", "b")
add_call_chain(<<a,C,D>>)
add_call_chain(<<BOOLEAN,d,BOOLEAN,D,b>>)
add_attribute("INTEGER", "d", "D")
add_query("a", "B", <<["D", "BOOLEAN"]>>, "e")
add_call_chain(<<d,A,INTEGER,A,C,a>>)
bool_value (false)
add_attribute("d", "BOOLEAN", "BOOLEAN")
int_value (24)
quotient
generate_java_code
add_query("BOOLEAN", "D", <<["c", "d"], ["c", "INTEGER"], ["b", "e"]>>, "a")
numerical_negation
numerical_negation
generate_java_code
equals
add_attribute("A", "B", "BOOLEAN")
disjunction
add_command("e", "D", <<["e", "BOOLEAN"], ["INTEGER", "INTEGER"], ["D", "BOOLEAN"], ["b", "INTEGER"], ["c", "b"], ["c", "a"], ["C", "BOOLEAN"]>>)
equals
add_call_chain(<<B,B,B,BOOLEAN,c,D,e>>)
equals
add_attribute("A", "D", "C")
type_check
add_command("D", "a", <<["e", "INTEGER"], ["d", "INTEGER"], ["e", "INTEGER"], ["C", "BOOLEAN"]>>)
add_command("c", "C", <<["D", "INTEGER"]>>)
add_attribute("C", "a", "d")
add_command("A", "c", <<["d", "A"], ["a", "INTEGER"]>>)
type_check
int_value (49)
type_check
add_call_chain(<<A,C>>)
logical_negation
bool_value (false)
numerical_negation
logical_negation
add_call_chain(<<D,B,b,C>>)
add_call_chain(<<a,e,BOOLEAN,B,b,a,A,BOOLEAN>>)
disjunction
add_call_chain(<<c,C,D,C,e,a,b,a,D>>)
add_call_chain(<<INTEGER,a,a,e,B,BOOLEAN,d>>)
equals
add_call_chain(<<a,a,INTEGER,a>>)
less_than
add_command("A", "B", <<["d", "INTEGER"], ["D", "d"]>>)
add_query("C", "c", <<["b", "BOOLEAN"], ["c", "INTEGER"], ["D", "INTEGER"], ["e", "BOOLEAN"]>>, "BOOLEAN")
bool_value (false)
numerical_negation
subtraction
conjunction
add_attribute("D", "INTEGER", "c")
add_call_chain(<<d,B,b,B,e>>)
add_attribute("B", "B", "INTEGER")
add_query("C", "BOOLEAN", <<["B", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "INTEGER"]>>, "D")
int_value (5)
bool_value (false)
add_class(e)
int_value (40)
generate_java_code
add_call_chain(<<b,A,c,e>>)
add_call_chain(<<B,D,D,A,A>>)
add_class(A)
add_class(A)
logical_negation
disjunction
numerical_negation
greater_than
add_class(b)
add_class(D)
add_query("BOOLEAN", "a", <<["D", "BOOLEAN"], ["A", "a"], ["B", "BOOLEAN"]>>, "C")
numerical_negation
add_command("b", "C", <<["b", "BOOLEAN"], ["b", "B"], ["A", "INTEGER"], ["a", "c"]>>)
add_call_chain(<<INTEGER,INTEGER,C>>)
bool_value (true)
add_attribute("b", "B", "INTEGER")
add_attribute("D", "D", "BOOLEAN")
generate_java_code
add_call_chain(<<e,B,A,b,c,A,e>>)
disjunction
equals
logical_negation
disjunction
add_query("INTEGER", "d", <<["a", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "D"], ["INTEGER", "BOOLEAN"], ["C", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["C", "INTEGER"]>>, "d")
add_query("C", "A", <<["d", "e"], ["B", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "BOOLEAN"]>>, "D")
add_class(A)
logical_negation
add_call_chain(<<A,d,e>>)
int_value (4)
add_query("B", "e", <<["INTEGER", "INTEGER"], ["B", "BOOLEAN"]>>, "c")
logical_negation
add_call_chain(<<c,A,a,e,c>>)
add_attribute("c", "INTEGER", "INTEGER")
logical_negation
logical_negation
modulo
type_check
bool_value (true)
add_attribute("b", "c", "INTEGER")
type_check
generate_java_code
int_value (6)
add_command("B", "d", <<["D", "INTEGER"], ["d", "INTEGER"], ["c", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "D"], ["d", "A"], ["B", "e"]>>)
int_value (17)
add_attribute("d", "BOOLEAN", "BOOLEAN")
add_call_chain(<<BOOLEAN,d,A>>)
logical_negation
conjunction
