add_attribute("e", "D", "BOOLEAN")
int_value (40)
logical_negation
add_command("D", "A", <<["b", "INTEGER"], ["C", "INTEGER"], ["D", "e"], ["b", "a"], ["B", "INTEGER"], ["c", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "INTEGER"]>>)
add_query("b", "a", <<["a", "INTEGER"]>>, "D")
add_call_chain(<<c,b,INTEGER,B>>)
greater_than
add_attribute("A", "A", "INTEGER")
add_attribute("B", "B", "BOOLEAN")
add_attribute("c", "c", "INTEGER")
add_command("c", "a", <<["INTEGER", "BOOLEAN"]>>)
logical_negation
add_class(B)
int_value (22)
less_than
add_call_chain(<<a,A,a,D,INTEGER>>)
logical_negation
bool_value (false)
bool_value (true)
add_call_chain(<<c,A,D,a,A,e>>)
bool_value (true)
int_value (8)
logical_negation
int_value (15)
greater_than
add_attribute("b", "C", "BOOLEAN")
add_command("D", "C", <<["D", "BOOLEAN"], ["a", "a"], ["b", "BOOLEAN"]>>)
add_attribute("C", "a", "INTEGER")
add_query("A", "C", <<["d", "D"], ["B", "BOOLEAN"]>>, "C")
add_call_chain(<<BOOLEAN,e,b,a,B>>)
logical_negation
bool_value (true)
add_call_chain(<<A,d,C,BOOLEAN,d,BOOLEAN,c>>)
bool_value (false)
quotient
add_query("c", "a", <<["B", "INTEGER"], ["C", "INTEGER"]>>, "b")
logical_negation
add_call_chain(<<a,B,A,C>>)
add_call_chain(<<e,A,D,A,C,B,C,b>>)
subtraction
logical_negation
add_call_chain(<<C,C,A>>)
add_call_chain(<<A,INTEGER,A,e,c>>)
add_command("A", "c", <<["a", "INTEGER"], ["c", "A"], ["D", "INTEGER"], ["e", "D"], ["B", "b"], ["a", "BOOLEAN"]>>)
add_command("A", "C", <<["d", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "BOOLEAN"]>>)
add_query("b", "a", <<["d", "a"], ["A", "D"], ["A", "INTEGER"], ["INTEGER", "INTEGER"], ["d", "d"]>>, "b")
add_query("INTEGER", "D", <<["c", "INTEGER"], ["b", "INTEGER"], ["A", "INTEGER"], ["A", "BOOLEAN"], ["d", "BOOLEAN"], ["d", "BOOLEAN"]>>, "b")
add_attribute("d", "A", "BOOLEAN")
add_call_chain(<<b,d,c,D,A,b>>)
generate_java_code
numerical_negation
addition
add_call_chain(<<c,b>>)
numerical_negation
add_class(c)
add_class(D)
int_value (45)
add_command("A", "C", <<["d", "INTEGER"], ["e", "BOOLEAN"]>>)
add_call_chain(<<BOOLEAN,C,b,a>>)
add_attribute("e", "A", "e")
conjunction
add_call_chain(<<b,INTEGER,b,A,INTEGER,e,c,B>>)
numerical_negation
add_call_chain(<<e,B,A,d,d,B,BOOLEAN>>)
add_command("D", "b", <<["INTEGER", "B"], ["A", "A"], ["C", "BOOLEAN"], ["INTEGER", "INTEGER"], ["A", "e"], ["A", "C"], ["D", "BOOLEAN"]>>)
add_attribute("e", "A", "INTEGER")
add_query("C", "b", <<["e", "BOOLEAN"]>>, "e")
greater_than
type_check
modulo
add_call_chain(<<b>>)
generate_java_code
add_command("B", "C", <<["C", "b"], ["e", "e"]>>)
bool_value (true)
generate_java_code
logical_negation
add_call_chain(<<B,D,a,b,c,D,c>>)
generate_java_code
add_command("A", "A", <<["C", "INTEGER"]>>)
subtraction
add_command("d", "b", <<["e", "B"], ["e", "B"], ["D", "a"]>>)
add_call_chain(<<a>>)
add_call_chain(<<e,d,A,c>>)
bool_value (false)
add_command("d", "INTEGER", <<["B", "INTEGER"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["d", "BOOLEAN"]>>)
add_class(a)
equals
numerical_negation
add_query("C", "B", <<["INTEGER", "BOOLEAN"], ["d", "INTEGER"]>>, "INTEGER")
add_query("INTEGER", "a", <<["c", "INTEGER"], ["e", "INTEGER"], ["C", "INTEGER"], ["b", "BOOLEAN"]>>, "D")
type_check
add_query("a", "B", <<["d", "INTEGER"], ["D", "BOOLEAN"], ["C", "INTEGER"]>>, "C")
bool_value (false)
generate_java_code
type_check
add_command("d", "INTEGER", <<["B", "A"]>>)
add_attribute("d", "INTEGER", "INTEGER")
add_query("d", "A", <<["c", "BOOLEAN"], ["e", "INTEGER"], ["e", "INTEGER"], ["INTEGER", "INTEGER"]>>, "B")
add_attribute("B", "B", "BOOLEAN")
add_command("a", "C", <<["BOOLEAN", "c"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["d", "BOOLEAN"], ["b", "INTEGER"]>>)
bool_value (false)
add_call_chain(<<c,a,A,B,D,a>>)
logical_negation
bool_value (true)
greater_than
numerical_negation
add_query("d", "e", <<["c", "BOOLEAN"], ["D", "c"], ["e", "INTEGER"], ["b", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "INTEGER"]>>, "c")
int_value (33)
greater_than
type_check
add_call_chain(<<A,c,d,A,A,BOOLEAN,b>>)
numerical_negation
bool_value (false)
add_command("a", "C", <<["C", "INTEGER"], ["C", "e"], ["b", "INTEGER"]>>)
add_attribute("C", "a", "BOOLEAN")
int_value (17)
generate_java_code
equals
logical_negation
add_call_chain(<<e,b,A,D,e,e,D,B,b>>)
bool_value (true)
add_attribute("A", "b", "d")
add_attribute("D", "b", "INTEGER")
add_query("D", "e", <<["B", "c"], ["d", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "c"], ["D", "BOOLEAN"], ["D", "BOOLEAN"], ["BOOLEAN", "D"]>>, "D")
multiplication
add_command("C", "d", <<["c", "B"]>>)
add_command("B", "e", <<["c", "C"]>>)
add_attribute("B", "b", "A")
add_class(D)
logical_negation
bool_value (false)
logical_negation
add_attribute("A", "C", "d")
add_attribute("a", "a", "BOOLEAN")
add_call_chain(<<C,B,a,e,C,b,C,D,A>>)
add_call_chain(<<e,e,B,b,d,D,e,C>>)
add_class(a)
add_query("D", "d", <<["d", "INTEGER"], ["INTEGER", "BOOLEAN"], ["d", "BOOLEAN"], ["c", "e"]>>, "C")
add_attribute("d", "A", "D")
generate_java_code
add_command("C", "B", <<["d", "a"], ["e", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "BOOLEAN"]>>)
add_call_chain(<<c,b,d,C>>)
add_query("d", "D", <<["b", "D"], ["D", "INTEGER"], ["C", "a"], ["D", "INTEGER"], ["e", "BOOLEAN"]>>, "b")
generate_java_code
bool_value (false)
add_command("c", "A", <<["b", "BOOLEAN"], ["A", "d"], ["BOOLEAN", "e"], ["D", "c"], ["D", "BOOLEAN"], ["e", "BOOLEAN"], ["a", "INTEGER"], ["c", "e"]>>)
add_call_chain(<<b,C,INTEGER,D,e,B>>)
add_call_chain(<<BOOLEAN,B,A>>)
int_value (9)
add_call_chain(<<a,b,D,A,D>>)
add_query("INTEGER", "c", <<["A", "BOOLEAN"]>>, "BOOLEAN")
bool_value (true)
logical_negation
bool_value (true)
numerical_negation
numerical_negation
numerical_negation
add_class(B)
logical_negation
add_call_chain(<<c,e,a,e,c,A>>)
add_command("D", "C", <<["d", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "BOOLEAN"]>>)
logical_negation
conjunction
add_call_chain(<<c,D,e>>)
disjunction
subtraction
generate_java_code
add_query("C", "e", <<["a", "C"], ["B", "D"], ["B", "D"], ["A", "BOOLEAN"], ["D", "INTEGER"], ["e", "INTEGER"], ["d", "INTEGER"]>>, "A")
bool_value (true)
add_attribute("c", "a", "INTEGER")
add_attribute("B", "a", "BOOLEAN")
greater_than
add_attribute("a", "C", "c")
generate_java_code
bool_value (true)
type_check
add_command("INTEGER", "D", <<["B", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "C"], ["c", "INTEGER"]>>)
add_call_chain(<<A,B>>)
add_command("BOOLEAN", "d", <<["A", "A"], ["c", "BOOLEAN"], ["e", "INTEGER"], ["c", "INTEGER"], ["d", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "A"], ["d", "INTEGER"]>>)
add_call_chain(<<c,b,d,a>>)
logical_negation
add_class(B)
logical_negation
add_command("c", "e", <<["A", "INTEGER"], ["C", "BOOLEAN"], ["a", "INTEGER"], ["e", "A"], ["d", "b"]>>)
add_command("C", "d", <<["c", "INTEGER"], ["e", "b"], ["d", "BOOLEAN"], ["INTEGER", "b"], ["A", "A"], ["BOOLEAN", "BOOLEAN"], ["A", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>)
add_attribute("D", "C", "INTEGER")
quotient
add_attribute("c", "b", "BOOLEAN")
add_call_chain(<<BOOLEAN,C,b,a,C,D,c>>)
add_call_chain(<<B,INTEGER,C>>)
int_value (40)
type_check
bool_value (true)
add_class(INTEGER)
type_check
disjunction
add_call_chain(<<A,D,C,b,a,d,e>>)
add_call_chain(<<A,e,A,c,INTEGER>>)
add_query("INTEGER", "A", <<["B", "a"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["a", "INTEGER"], ["C", "D"]>>, "D")
logical_negation
add_query("d", "d", <<["b", "D"], ["e", "a"], ["D", "INTEGER"], ["c", "b"], ["B", "INTEGER"], ["a", "INTEGER"]>>, "d")
numerical_negation
add_class(C)
numerical_negation
multiplication
add_command("d", "d", <<["e", "BOOLEAN"]>>)
disjunction
add_class(A)
int_value (36)
add_query("D", "C", <<["b", "BOOLEAN"], ["A", "INTEGER"], ["c", "INTEGER"], ["e", "INTEGER"], ["c", "INTEGER"]>>, "a")
equals
logical_negation
add_call_chain(<<A,A,A,e,D>>)
add_class(D)
disjunction
greater_than
add_query("D", "B", <<["d", "a"]>>, "c")
add_command("c", "C", <<["INTEGER", "INTEGER"], ["C", "D"]>>)
disjunction
add_class(c)
int_value (6)
logical_negation
int_value (47)
add_command("b", "BOOLEAN", <<["D", "BOOLEAN"], ["B", "INTEGER"]>>)
add_call_chain(<<a,A,B,B>>)
add_command("d", "D", <<["D", "INTEGER"], ["B", "BOOLEAN"], ["a", "A"], ["c", "INTEGER"], ["b", "BOOLEAN"]>>)
numerical_negation
add_call_chain(<<D,c,C,c>>)
equals
bool_value (false)
add_query("C", "C", <<["D", "C"], ["C", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "D"], ["a", "BOOLEAN"], ["e", "INTEGER"], ["D", "BOOLEAN"], ["d", "BOOLEAN"]>>, "c")
add_call_chain(<<INTEGER,INTEGER>>)
numerical_negation
add_attribute("a", "b", "INTEGER")
generate_java_code
add_query("INTEGER", "d", <<["D", "INTEGER"], ["c", "INTEGER"], ["B", "e"], ["D", "INTEGER"], ["e", "C"], ["b", "BOOLEAN"]>>, "c")
numerical_negation
equals
add_call_chain(<<D>>)
quotient
logical_negation
greater_than
add_call_chain(<<a>>)
int_value (40)
int_value (39)
add_class(d)
add_attribute("D", "c", "BOOLEAN")
int_value (45)
