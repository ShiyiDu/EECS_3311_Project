add_command("C", "a", <<["INTEGER", "INTEGER"], ["B", "d"]>>)
add_attribute("D", "b", "a")
numerical_negation
logical_negation
int_value (43)
numerical_negation
disjunction
conjunction
int_value (26)
generate_java_code
add_call_chain(<<c,C,B,INTEGER,A>>)
add_call_chain(<<C,b,c,A,A,B,A,d,B>>)
add_attribute("d", "b", "INTEGER")
add_command("e", "b", <<["A", "BOOLEAN"], ["D", "INTEGER"], ["b", "d"], ["B", "D"], ["A", "C"], ["C", "BOOLEAN"], ["c", "INTEGER"], ["A", "b"]>>)
add_attribute("c", "D", "a")
add_command("BOOLEAN", "A", <<["e", "BOOLEAN"], ["e", "INTEGER"], ["e", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "B"], ["C", "D"], ["c", "INTEGER"], ["c", "a"], ["INTEGER", "B"]>>)
bool_value (true)
add_call_chain(<<c>>)
type_check
add_call_chain(<<b,A,e>>)
generate_java_code
add_call_chain(<<b,B>>)
add_attribute("BOOLEAN", "C", "INTEGER")
less_than
greater_than
generate_java_code
add_call_chain(<<A,a,BOOLEAN,B,D>>)
add_class(A)
numerical_negation
generate_java_code
add_command("C", "INTEGER", <<["B", "C"], ["A", "INTEGER"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["A", "INTEGER"], ["b", "a"], ["e", "INTEGER"], ["B", "INTEGER"], ["b", "INTEGER"]>>)
disjunction
add_call_chain(<<D,A,A,d>>)
add_call_chain(<<D,D,C,c>>)
add_call_chain(<<C>>)
quotient
bool_value (false)
add_call_chain(<<A,A,D,b,C,INTEGER,a>>)
subtraction
int_value (25)
add_attribute("D", "BOOLEAN", "d")
add_command("d", "e", <<["b", "BOOLEAN"], ["b", "INTEGER"], ["e", "e"], ["D", "B"], ["c", "D"], ["e", "e"], ["c", "BOOLEAN"]>>)
add_class(INTEGER)
conjunction
add_attribute("c", "D", "INTEGER")
equals
add_command("D", "d", <<["INTEGER", "INTEGER"], ["D", "C"], ["e", "B"], ["D", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "a"], ["b", "D"], ["b", "INTEGER"]>>)
add_command("a", "a", <<["D", "INTEGER"], ["A", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["A", "INTEGER"]>>)
type_check
logical_negation
conjunction
conjunction
int_value (48)
add_attribute("d", "a", "BOOLEAN")
add_query("e", "b", <<["BOOLEAN", "INTEGER"], ["B", "e"], ["C", "A"], ["D", "d"]>>, "BOOLEAN")
int_value (32)
add_attribute("C", "d", "INTEGER")
type_check
add_attribute("INTEGER", "b", "BOOLEAN")
bool_value (false)
bool_value (false)
add_command("a", "A", <<["C", "INTEGER"], ["c", "A"], ["B", "BOOLEAN"]>>)
type_check
logical_negation
generate_java_code
add_attribute("C", "c", "INTEGER")
bool_value (true)
bool_value (true)
add_query("c", "d", <<["a", "B"]>>, "A")
conjunction
add_command("e", "c", <<["b", "c"], ["d", "INTEGER"], ["b", "c"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["d", "c"], ["C", "BOOLEAN"], ["c", "INTEGER"]>>)
generate_java_code
add_query("A", "B", <<["BOOLEAN", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["e", "INTEGER"], ["d", "BOOLEAN"]>>, "c")
add_call_chain(<<b>>)
numerical_negation
add_call_chain(<<INTEGER,B,BOOLEAN,BOOLEAN,D,c,A>>)
bool_value (true)
add_command("A", "B", <<["e", "INTEGER"]>>)
equals
int_value (9)
numerical_negation
add_command("a", "A", <<["e", "BOOLEAN"]>>)
add_query("e", "D", <<["B", "BOOLEAN"], ["A", "INTEGER"], ["b", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "BOOLEAN"]>>, "b")
logical_negation
int_value (37)
equals
add_query("d", "e", <<["D", "BOOLEAN"], ["b", "INTEGER"], ["b", "INTEGER"]>>, "a")
add_class(c)
int_value (20)
quotient
add_command("D", "d", <<["b", "BOOLEAN"], ["c", "c"], ["c", "INTEGER"], ["D", "A"], ["D", "INTEGER"], ["a", "INTEGER"], ["d", "INTEGER"], ["D", "c"]>>)
add_command("INTEGER", "B", <<["D", "INTEGER"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["e", "INTEGER"], ["d", "BOOLEAN"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["c", "BOOLEAN"]>>)
int_value (32)
int_value (33)
int_value (38)
bool_value (true)
add_attribute("b", "d", "BOOLEAN")
add_call_chain(<<e,C,D>>)
add_call_chain(<<A,B,d,c,A>>)
add_call_chain(<<c,A>>)
greater_than
logical_negation
add_call_chain(<<a,C,INTEGER,d,A,A,b,A,b>>)
int_value (28)
add_call_chain(<<d,a,D>>)
add_attribute("D", "BOOLEAN", "BOOLEAN")
add_command("INTEGER", "D", <<["c", "INTEGER"], ["b", "c"], ["D", "INTEGER"], ["d", "BOOLEAN"], ["c", "INTEGER"], ["b", "BOOLEAN"]>>)
logical_negation
add_call_chain(<<e,A,C,BOOLEAN,INTEGER,e,e,d,C>>)
type_check
add_attribute("D", "D", "BOOLEAN")
logical_negation
add_call_chain(<<b,a,INTEGER>>)
logical_negation
equals
generate_java_code
bool_value (false)
add_query("B", "A", <<["d", "BOOLEAN"], ["b", "a"], ["a", "C"], ["B", "INTEGER"], ["C", "C"], ["C", "INTEGER"], ["A", "INTEGER"], ["c", "B"], ["e", "INTEGER"]>>, "BOOLEAN")
int_value (14)
add_class(d)
add_command("B", "a", <<["D", "A"], ["BOOLEAN", "INTEGER"], ["INTEGER", "D"], ["e", "BOOLEAN"]>>)
add_query("c", "d", <<["D", "B"]>>, "a")
add_attribute("c", "BOOLEAN", "INTEGER")
add_query("A", "D", <<["D", "BOOLEAN"], ["INTEGER", "C"], ["c", "INTEGER"], ["c", "b"], ["c", "A"], ["C", "BOOLEAN"]>>, "C")
int_value (8)
add_query("e", "a", <<["BOOLEAN", "a"], ["c", "D"]>>, "D")
type_check
add_call_chain(<<e,B,B,e,C,C>>)
addition
logical_negation
numerical_negation
add_query("a", "C", <<["A", "INTEGER"], ["C", "BOOLEAN"], ["a", "b"], ["B", "C"], ["A", "D"], ["C", "B"], ["e", "A"], ["C", "A"]>>, "C")
add_query("e", "C", <<["B", "INTEGER"], ["B", "c"], ["BOOLEAN", "BOOLEAN"], ["e", "BOOLEAN"]>>, "e")
add_command("B", "D", <<["a", "INTEGER"], ["BOOLEAN", "INTEGER"]>>)
add_class(BOOLEAN)
add_call_chain(<<A,INTEGER,c,A,e,C>>)
int_value (14)
add_call_chain(<<d,C,C,A,BOOLEAN>>)
numerical_negation
type_check
bool_value (true)
add_call_chain(<<C,A,B,C,C,a>>)
add_class(D)
add_attribute("INTEGER", "B", "b")
int_value (17)
add_command("c", "b", <<["e", "B"], ["c", "d"], ["e", "BOOLEAN"]>>)
add_query("D", "c", <<["d", "BOOLEAN"], ["D", "D"], ["C", "d"], ["b", "BOOLEAN"], ["C", "e"]>>, "B")
add_attribute("B", "C", "INTEGER")
greater_than
numerical_negation
type_check
add_command("C", "d", <<["b", "B"]>>)
add_query("D", "D", <<["A", "INTEGER"]>>, "a")
add_command("C", "b", <<["c", "BOOLEAN"], ["c", "BOOLEAN"], ["e", "INTEGER"], ["d", "B"], ["D", "INTEGER"], ["d", "INTEGER"], ["d", "INTEGER"], ["a", "b"], ["A", "INTEGER"]>>)
int_value (41)
generate_java_code
numerical_negation
logical_negation
greater_than
add_command("C", "B", <<["d", "d"], ["c", "BOOLEAN"]>>)
add_call_chain(<<c,A,C,a,d>>)
generate_java_code
add_query("d", "D", <<["D", "BOOLEAN"], ["e", "C"]>>, "e")
int_value (21)
bool_value (true)
add_class(a)
int_value (28)
add_attribute("e", "e", "C")
add_query("C", "a", <<["c", "INTEGER"]>>, "e")
greater_than
int_value (28)
add_call_chain(<<INTEGER,c,d,B,C,C,A,B>>)
bool_value (false)
bool_value (true)
add_call_chain(<<C>>)
type_check
add_query("c", "a", <<["B", "INTEGER"], ["b", "A"]>>, "d")
numerical_negation
logical_negation
add_class(B)
multiplication
int_value (28)
add_query("b", "a", <<["A", "BOOLEAN"], ["D", "INTEGER"], ["b", "INTEGER"], ["c", "C"], ["d", "BOOLEAN"], ["A", "B"], ["A", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["D", "INTEGER"]>>, "d")
generate_java_code
generate_java_code
add_query("B", "B", <<["A", "BOOLEAN"]>>, "A")
add_call_chain(<<C,d,b,d,c,B>>)
add_class(d)
int_value (8)
disjunction
numerical_negation
bool_value (false)
greater_than
add_call_chain(<<A>>)
bool_value (true)
bool_value (true)
add_call_chain(<<C,a,D,B,C,c>>)
logical_negation
type_check
add_query("d", "a", <<["C", "BOOLEAN"], ["B", "D"], ["A", "BOOLEAN"], ["c", "BOOLEAN"], ["a", "D"], ["A", "BOOLEAN"], ["e", "C"], ["d", "INTEGER"], ["INTEGER", "INTEGER"]>>, "a")
logical_negation
add_query("B", "e", <<["d", "e"], ["c", "BOOLEAN"], ["e", "d"], ["C", "BOOLEAN"], ["a", "INTEGER"], ["B", "INTEGER"]>>, "b")
logical_negation
add_command("C", "A", <<["C", "INTEGER"], ["INTEGER", "d"], ["a", "INTEGER"], ["a", "BOOLEAN"], ["a", "BOOLEAN"]>>)
add_call_chain(<<C,c>>)
numerical_negation
disjunction
int_value (2)
numerical_negation
greater_than
bool_value (false)
add_call_chain(<<INTEGER,d,A>>)
int_value (41)
add_query("D", "B", <<["e", "C"], ["a", "INTEGER"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["C", "C"], ["b", "BOOLEAN"], ["A", "INTEGER"], ["e", "INTEGER"]>>, "e")
generate_java_code
add_call_chain(<<C,e,D,e,d,B,B>>)
type_check
add_call_chain(<<e,d,C,a>>)
