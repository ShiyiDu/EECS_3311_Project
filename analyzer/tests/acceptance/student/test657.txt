disjunction
add_call_chain(<<b,e,b,b,B,BOOLEAN>>)
add_command("A", "b", <<["c", "INTEGER"], ["c", "BOOLEAN"]>>)
add_call_chain(<<d>>)
add_command("e", "C", <<["b", "INTEGER"], ["B", "INTEGER"], ["b", "INTEGER"], ["D", "INTEGER"], ["e", "INTEGER"], ["d", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "B"]>>)
logical_negation
add_call_chain(<<e>>)
add_call_chain(<<d,BOOLEAN,B,e,A,b,b,c>>)
add_query("c", "b", <<["e", "B"], ["d", "BOOLEAN"]>>, "d")
add_query("B", "D", <<["d", "D"], ["a", "INTEGER"], ["BOOLEAN", "INTEGER"], ["d", "a"], ["A", "INTEGER"], ["D", "C"], ["e", "INTEGER"], ["B", "d"]>>, "C")
add_call_chain(<<A,A,D,C,b,e,A,a,b>>)
numerical_negation
numerical_negation
add_query("c", "b", <<["BOOLEAN", "BOOLEAN"], ["b", "BOOLEAN"], ["d", "e"], ["c", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "BOOLEAN"]>>, "BOOLEAN")
bool_value (true)
bool_value (false)
int_value (36)
disjunction
bool_value (false)
generate_java_code
add_call_chain(<<d,e,B,INTEGER,a>>)
conjunction
greater_than
conjunction
add_attribute("INTEGER", "c", "INTEGER")
numerical_negation
logical_negation
add_query("A", "d", <<["d", "e"], ["A", "INTEGER"], ["e", "BOOLEAN"], ["c", "B"], ["c", "d"], ["b", "a"], ["D", "e"]>>, "e")
add_command("D", "C", <<["A", "b"], ["D", "BOOLEAN"]>>)
int_value (21)
add_command("e", "B", <<["a", "INTEGER"], ["b", "BOOLEAN"], ["A", "INTEGER"]>>)
add_query("BOOLEAN", "e", <<["c", "BOOLEAN"]>>, "e")
multiplication
add_call_chain(<<A,A,D,e,B,D>>)
add_query("D", "e", <<["D", "INTEGER"]>>, "a")
equals
add_query("c", "a", <<["B", "INTEGER"]>>, "A")
add_attribute("c", "d", "C")
add_command("b", "BOOLEAN", <<["b", "INTEGER"], ["C", "INTEGER"], ["C", "INTEGER"], ["INTEGER", "BOOLEAN"], ["A", "INTEGER"], ["A", "BOOLEAN"]>>)
generate_java_code
add_call_chain(<<D,C,c>>)
add_attribute("C", "e", "INTEGER")
generate_java_code
add_call_chain(<<C,D,B,d>>)
logical_negation
equals
int_value (38)
generate_java_code
add_call_chain(<<INTEGER,a,B,C,C,C,A,c>>)
add_attribute("BOOLEAN", "D", "BOOLEAN")
disjunction
add_command("c", "C", <<["a", "c"]>>)
add_attribute("e", "D", "BOOLEAN")
add_call_chain(<<C,C>>)
int_value (15)
generate_java_code
subtraction
int_value (31)
equals
add_command("D", "A", <<["b", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "INTEGER"], ["C", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
add_query("c", "C", <<["c", "BOOLEAN"], ["d", "a"]>>, "B")
numerical_negation
numerical_negation
bool_value (false)
type_check
add_attribute("d", "BOOLEAN", "e")
numerical_negation
add_attribute("B", "INTEGER", "INTEGER")
int_value (30)
logical_negation
int_value (33)
add_call_chain(<<b,C,C,d,a>>)
add_call_chain(<<D,INTEGER>>)
logical_negation
numerical_negation
greater_than
int_value (4)
multiplication
bool_value (false)
add_attribute("BOOLEAN", "B", "BOOLEAN")
bool_value (false)
add_call_chain(<<c,A,e,c,a>>)
add_call_chain(<<b>>)
add_query("B", "D", <<["d", "BOOLEAN"], ["A", "BOOLEAN"]>>, "a")
add_call_chain(<<a,d,D,D>>)
type_check
bool_value (false)
type_check
logical_negation
numerical_negation
numerical_negation
add_command("INTEGER", "C", <<["d", "BOOLEAN"], ["D", "INTEGER"]>>)
add_attribute("e", "b", "BOOLEAN")
add_attribute("D", "A", "B")
greater_than
add_query("INTEGER", "INTEGER", <<["INTEGER", "INTEGER"], ["a", "BOOLEAN"], ["c", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "INTEGER"], ["c", "BOOLEAN"]>>, "e")
bool_value (true)
bool_value (true)
add_call_chain(<<D>>)
bool_value (true)
add_call_chain(<<a,b>>)
bool_value (true)
int_value (14)
add_command("a", "D", <<["a", "a"], ["e", "INTEGER"], ["A", "BOOLEAN"]>>)
int_value (38)
less_than
logical_negation
numerical_negation
add_call_chain(<<B,e,a,C,e,c,c,e>>)
add_query("D", "b", <<["C", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "INTEGER"], ["d", "INTEGER"], ["B", "BOOLEAN"]>>, "e")
numerical_negation
disjunction
bool_value (false)
add_query("A", "D", <<["d", "BOOLEAN"]>>, "a")
int_value (46)
bool_value (false)
add_query("b", "BOOLEAN", <<["d", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["e", "A"], ["D", "INTEGER"], ["d", "d"], ["B", "BOOLEAN"], ["A", "BOOLEAN"]>>, "INTEGER")
type_check
int_value (20)
add_query("e", "C", <<["d", "INTEGER"], ["B", "d"], ["C", "d"], ["C", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "INTEGER"]>>, "C")
add_attribute("e", "INTEGER", "A")
add_call_chain(<<C,e,INTEGER,e,BOOLEAN,BOOLEAN,D>>)
numerical_negation
numerical_negation
add_command("C", "a", <<["BOOLEAN", "INTEGER"], ["e", "c"], ["b", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "e"], ["A", "INTEGER"], ["C", "A"], ["B", "BOOLEAN"]>>)
type_check
add_query("d", "D", <<["BOOLEAN", "D"], ["d", "INTEGER"], ["D", "d"]>>, "A")
add_call_chain(<<e,D,D,B>>)
add_command("b", "D", <<["B", "b"], ["b", "BOOLEAN"]>>)
greater_than
add_query("e", "B", <<["INTEGER", "INTEGER"]>>, "B")
bool_value (true)
add_command("e", "A", <<["A", "INTEGER"]>>)
type_check
add_query("B", "c", <<["a", "C"], ["c", "D"], ["b", "INTEGER"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["c", "INTEGER"], ["B", "B"]>>, "D")
add_call_chain(<<b>>)
numerical_negation
numerical_negation
logical_negation
bool_value (false)
generate_java_code
int_value (17)
add_query("a", "C", <<["e", "INTEGER"], ["b", "INTEGER"], ["e", "INTEGER"], ["e", "INTEGER"]>>, "C")
add_call_chain(<<B,d,b,D,b,B,A,D,a>>)
add_query("B", "B", <<["b", "BOOLEAN"], ["INTEGER", "C"], ["B", "C"], ["INTEGER", "INTEGER"], ["d", "BOOLEAN"], ["D", "INTEGER"], ["D", "BOOLEAN"]>>, "A")
add_command("a", "a", <<["e", "INTEGER"], ["e", "e"], ["D", "B"], ["INTEGER", "INTEGER"], ["A", "INTEGER"], ["C", "INTEGER"], ["c", "INTEGER"], ["C", "b"], ["C", "A"]>>)
add_attribute("b", "c", "e")
generate_java_code
add_attribute("e", "D", "INTEGER")
type_check
subtraction
int_value (18)
add_command("D", "d", <<["d", "BOOLEAN"], ["e", "INTEGER"], ["INTEGER", "B"], ["D", "BOOLEAN"], ["D", "c"], ["a", "BOOLEAN"], ["b", "C"], ["D", "INTEGER"], ["b", "INTEGER"]>>)
add_class(C)
add_class(BOOLEAN)
add_attribute("d", "b", "BOOLEAN")
add_query("e", "a", <<["A", "BOOLEAN"], ["d", "INTEGER"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["B", "INTEGER"], ["BOOLEAN", "D"], ["A", "BOOLEAN"], ["d", "INTEGER"], ["C", "INTEGER"]>>, "e")
greater_than
logical_negation
disjunction
add_query("D", "C", <<["INTEGER", "INTEGER"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "B"], ["c", "b"]>>, "d")
add_attribute("INTEGER", "d", "BOOLEAN")
add_command("INTEGER", "D", <<["e", "A"], ["C", "BOOLEAN"], ["b", "A"], ["C", "INTEGER"], ["A", "INTEGER"], ["A", "INTEGER"], ["d", "A"], ["a", "A"]>>)
add_command("B", "d", <<["e", "BOOLEAN"], ["A", "A"]>>)
int_value (19)
logical_negation
add_query("INTEGER", "B", <<["D", "BOOLEAN"], ["BOOLEAN", "d"], ["a", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["INTEGER", "a"], ["D", "a"], ["d", "BOOLEAN"], ["d", "INTEGER"]>>, "A")
multiplication
bool_value (false)
add_attribute("e", "C", "INTEGER")
add_command("A", "B", <<["d", "BOOLEAN"], ["a", "A"], ["B", "INTEGER"], ["b", "INTEGER"], ["b", "a"], ["b", "BOOLEAN"], ["d", "B"]>>)
add_attribute("C", "BOOLEAN", "BOOLEAN")
bool_value (true)
logical_negation
add_query("B", "d", <<["D", "INTEGER"], ["C", "INTEGER"], ["A", "INTEGER"], ["a", "INTEGER"], ["A", "b"], ["e", "INTEGER"], ["a", "INTEGER"], ["e", "d"]>>, "d")
add_call_chain(<<d,e,c,b,INTEGER>>)
add_call_chain(<<d,c,A,e>>)
add_query("A", "c", <<["D", "BOOLEAN"], ["c", "INTEGER"], ["b", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "b"], ["A", "A"]>>, "a")
generate_java_code
add_class(d)
add_call_chain(<<b,e,D,a,e,d,INTEGER,D>>)
add_call_chain(<<C,A,INTEGER,INTEGER,C,a,A,c,a>>)
int_value (16)
bool_value (true)
add_attribute("d", "B", "BOOLEAN")
numerical_negation
add_query("B", "a", <<["d", "INTEGER"], ["e", "c"], ["b", "INTEGER"], ["e", "BOOLEAN"], ["BOOLEAN", "b"], ["INTEGER", "BOOLEAN"], ["A", "c"], ["BOOLEAN", "BOOLEAN"]>>, "c")
numerical_negation
numerical_negation
int_value (6)
add_call_chain(<<e,c,D>>)
add_call_chain(<<c,D,B>>)
add_query("C", "d", <<["D", "INTEGER"], ["c", "INTEGER"]>>, "d")
add_command("D", "A", <<["A", "BOOLEAN"], ["c", "INTEGER"], ["C", "INTEGER"], ["A", "INTEGER"], ["D", "INTEGER"], ["B", "INTEGER"], ["C", "INTEGER"]>>)
generate_java_code
add_call_chain(<<d,A,A,INTEGER,C,INTEGER>>)
int_value (42)
add_command("b", "C", <<["D", "BOOLEAN"], ["b", "INTEGER"], ["B", "BOOLEAN"], ["c", "BOOLEAN"]>>)
logical_negation
add_call_chain(<<A,b,INTEGER>>)
multiplication
add_call_chain(<<e,c,A,C,a,INTEGER,C,A,d>>)
add_call_chain(<<C,D,A,INTEGER>>)
generate_java_code
add_command("e", "e", <<["A", "INTEGER"], ["D", "A"]>>)
add_call_chain(<<b,d,c,b,e,C,b>>)
logical_negation
add_call_chain(<<B,D>>)
generate_java_code
bool_value (false)
conjunction
numerical_negation
add_call_chain(<<b,D,c>>)
add_command("a", "c", <<["e", "INTEGER"], ["INTEGER", "BOOLEAN"], ["C", "INTEGER"], ["C", "INTEGER"], ["e", "INTEGER"], ["a", "INTEGER"], ["B", "BOOLEAN"]>>)
add_query("e", "d", <<["D", "BOOLEAN"], ["INTEGER", "INTEGER"]>>, "INTEGER")
numerical_negation
numerical_negation
bool_value (true)
add_attribute("a", "D", "INTEGER")
type_check
add_class(BOOLEAN)
type_check
generate_java_code
add_call_chain(<<d,INTEGER,INTEGER,C,a,c,D,e,b>>)
add_query("INTEGER", "c", <<["C", "INTEGER"], ["D", "d"], ["d", "INTEGER"], ["c", "BOOLEAN"]>>, "a")
modulo
add_call_chain(<<b,b,b,a,B,A>>)
add_call_chain(<<a,INTEGER,C,c,B,INTEGER,C,b,B>>)
add_query("d", "d", <<["d", "INTEGER"], ["C", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "b"], ["d", "INTEGER"], ["D", "INTEGER"]>>, "INTEGER")
logical_negation
multiplication
add_command("D", "A", <<["D", "INTEGER"], ["a", "BOOLEAN"], ["C", "BOOLEAN"], ["d", "INTEGER"], ["A", "INTEGER"], ["A", "e"], ["d", "A"], ["a", "INTEGER"], ["B", "D"]>>)
add_attribute("A", "d", "BOOLEAN")
add_call_chain(<<a,C,A,a,c,B,A,c,INTEGER>>)
add_call_chain(<<B,D,A,A,C,b,C,c>>)
add_command("e", "b", <<["d", "INTEGER"], ["e", "BOOLEAN"], ["d", "INTEGER"]>>)
int_value (27)
