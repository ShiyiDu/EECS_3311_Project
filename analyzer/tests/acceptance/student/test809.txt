add_class(D)
add_call_chain(<<B,C,c,b>>)
conjunction
add_attribute("e", "c", "INTEGER")
less_than
int_value (33)
add_command("e", "B", <<["a", "e"], ["C", "BOOLEAN"], ["D", "A"], ["e", "BOOLEAN"]>>)
generate_java_code
add_call_chain(<<a,c,A,d,C,A,B,D,C>>)
bool_value (false)
modulo
add_attribute("e", "B", "C")
equals
add_class(C)
add_attribute("A", "INTEGER", "INTEGER")
generate_java_code
add_command("B", "B", <<["B", "BOOLEAN"], ["d", "C"], ["INTEGER", "INTEGER"], ["A", "INTEGER"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["d", "BOOLEAN"], ["b", "A"], ["a", "B"]>>)
add_command("B", "d", <<["d", "INTEGER"], ["INTEGER", "BOOLEAN"], ["c", "a"], ["B", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["e", "INTEGER"], ["BOOLEAN", "INTEGER"]>>)
bool_value (true)
add_command("B", "B", <<["D", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["a", "BOOLEAN"]>>)
add_call_chain(<<INTEGER,C,a>>)
generate_java_code
int_value (31)
logical_negation
generate_java_code
add_query("A", "D", <<["a", "BOOLEAN"], ["c", "d"], ["a", "B"], ["b", "BOOLEAN"], ["c", "INTEGER"], ["e", "BOOLEAN"]>>, "b")
add_command("D", "A", <<["e", "INTEGER"], ["e", "BOOLEAN"], ["D", "INTEGER"], ["INTEGER", "INTEGER"], ["e", "INTEGER"]>>)
modulo
add_query("A", "B", <<["b", "B"], ["INTEGER", "BOOLEAN"], ["c", "a"], ["e", "INTEGER"]>>, "BOOLEAN")
generate_java_code
add_query("d", "B", <<["BOOLEAN", "INTEGER"], ["c", "e"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "BOOLEAN"]>>, "A")
type_check
add_query("d", "C", <<["A", "INTEGER"], ["A", "INTEGER"], ["a", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "INTEGER"], ["INTEGER", "C"]>>, "B")
quotient
add_command("B", "b", <<["e", "e"]>>)
numerical_negation
bool_value (false)
add_attribute("C", "D", "BOOLEAN")
add_attribute("BOOLEAN", "a", "BOOLEAN")
less_than
add_call_chain(<<c,B>>)
bool_value (false)
modulo
equals
type_check
add_attribute("C", "B", "C")
greater_than
add_call_chain(<<B,INTEGER>>)
add_command("d", "d", <<["D", "INTEGER"], ["B", "B"], ["B", "B"]>>)
add_class(d)
add_class(C)
bool_value (true)
generate_java_code
generate_java_code
add_command("c", "a", <<["e", "INTEGER"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["INTEGER", "C"], ["D", "BOOLEAN"]>>)
add_query("a", "d", <<["d", "B"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["e", "BOOLEAN"], ["e", "INTEGER"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["d", "INTEGER"]>>, "b")
numerical_negation
add_query("d", "C", <<["a", "INTEGER"], ["c", "a"], ["a", "INTEGER"], ["BOOLEAN", "A"]>>, "C")
numerical_negation
add_call_chain(<<A>>)
numerical_negation
add_call_chain(<<B>>)
add_query("C", "INTEGER", <<["D", "INTEGER"]>>, "BOOLEAN")
bool_value (false)
add_command("d", "INTEGER", <<["e", "INTEGER"], ["e", "b"], ["c", "d"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["C", "BOOLEAN"], ["c", "B"], ["a", "INTEGER"]>>)
add_call_chain(<<INTEGER,A>>)
generate_java_code
int_value (11)
add_call_chain(<<d,b,B,B,a>>)
disjunction
bool_value (true)
equals
modulo
logical_negation
bool_value (true)
add_call_chain(<<INTEGER,b,d,D,A,b>>)
logical_negation
add_call_chain(<<b,C>>)
add_class(a)
add_call_chain(<<b,B>>)
add_class(D)
subtraction
add_attribute("c", "D", "c")
add_query("INTEGER", "C", <<["A", "BOOLEAN"], ["D", "A"]>>, "A")
add_attribute("A", "C", "BOOLEAN")
logical_negation
add_query("D", "a", <<["C", "BOOLEAN"]>>, "c")
bool_value (true)
logical_negation
type_check
logical_negation
add_attribute("A", "b", "e")
add_query("C", "C", <<["D", "BOOLEAN"]>>, "b")
add_class(A)
add_command("BOOLEAN", "A", <<["B", "INTEGER"], ["INTEGER", "BOOLEAN"], ["d", "INTEGER"]>>)
numerical_negation
add_call_chain(<<a,A,a,C,B,B,BOOLEAN,a,INTEGER>>)
type_check
add_query("b", "a", <<["C", "INTEGER"], ["A", "BOOLEAN"], ["a", "c"]>>, "A")
add_call_chain(<<A,a,d,B,b,B,d,D>>)
bool_value (true)
bool_value (false)
add_attribute("d", "A", "INTEGER")
logical_negation
numerical_negation
add_call_chain(<<e,C,A,d,b>>)
modulo
numerical_negation
add_command("C", "C", <<["c", "BOOLEAN"], ["c", "INTEGER"], ["A", "INTEGER"], ["d", "a"], ["INTEGER", "A"], ["INTEGER", "INTEGER"]>>)
add_call_chain(<<BOOLEAN,c>>)
disjunction
bool_value (false)
add_call_chain(<<A,C>>)
add_attribute("D", "D", "c")
add_call_chain(<<e,e,A,C>>)
bool_value (true)
add_call_chain(<<a>>)
add_attribute("D", "B", "INTEGER")
add_query("a", "e", <<["B", "INTEGER"], ["C", "b"], ["B", "BOOLEAN"], ["d", "B"], ["e", "BOOLEAN"], ["c", "D"], ["e", "C"]>>, "B")
int_value (3)
add_query("d", "c", <<["C", "INTEGER"], ["BOOLEAN", "INTEGER"], ["c", "BOOLEAN"], ["c", "BOOLEAN"], ["b", "B"], ["d", "C"], ["A", "BOOLEAN"]>>, "b")
add_call_chain(<<D,D>>)
add_attribute("A", "c", "BOOLEAN")
add_call_chain(<<e,c,b,D,INTEGER,A>>)
add_command("B", "b", <<["b", "d"], ["d", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["D", "A"], ["B", "d"]>>)
add_attribute("INTEGER", "C", "INTEGER")
quotient
bool_value (false)
add_query("c", "c", <<["C", "BOOLEAN"], ["D", "INTEGER"], ["c", "INTEGER"], ["BOOLEAN", "A"], ["D", "A"], ["c", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["D", "D"]>>, "d")
equals
type_check
add_command("A", "D", <<["D", "D"]>>)
bool_value (true)
generate_java_code
int_value (46)
add_query("a", "C", <<["C", "B"], ["e", "INTEGER"], ["C", "INTEGER"]>>, "B")
logical_negation
bool_value (false)
generate_java_code
add_query("e", "b", <<["e", "INTEGER"], ["A", "INTEGER"], ["D", "d"], ["d", "BOOLEAN"], ["d", "INTEGER"], ["B", "INTEGER"], ["C", "a"], ["A", "INTEGER"], ["e", "BOOLEAN"]>>, "A")
multiplication
numerical_negation
bool_value (true)
generate_java_code
quotient
generate_java_code
add_query("e", "C", <<["B", "b"]>>, "D")
int_value (8)
add_call_chain(<<e,INTEGER,c,b,c,e,e>>)
add_command("C", "BOOLEAN", <<["A", "BOOLEAN"], ["b", "BOOLEAN"], ["b", "BOOLEAN"], ["d", "a"]>>)
int_value (33)
add_query("C", "c", <<["C", "BOOLEAN"], ["b", "a"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "INTEGER"], ["e", "BOOLEAN"], ["A", "A"]>>, "C")
add_query("D", "a", <<["INTEGER", "BOOLEAN"], ["INTEGER", "a"], ["C", "a"], ["a", "C"]>>, "a")
add_query("A", "A", <<["D", "C"], ["a", "c"], ["D", "BOOLEAN"]>>, "A")
add_call_chain(<<INTEGER,b>>)
numerical_negation
add_attribute("B", "e", "INTEGER")
bool_value (false)
type_check
conjunction
logical_negation
equals
add_command("C", "C", <<["a", "INTEGER"], ["d", "C"], ["C", "INTEGER"]>>)
add_command("C", "D", <<["e", "INTEGER"], ["BOOLEAN", "e"], ["B", "INTEGER"], ["d", "INTEGER"], ["d", "BOOLEAN"]>>)
logical_negation
add_call_chain(<<a,A,b>>)
add_call_chain(<<B,BOOLEAN,e,A,a,b,b>>)
greater_than
add_command("c", "b", <<["c", "BOOLEAN"], ["c", "C"], ["a", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["d", "d"], ["a", "INTEGER"], ["A", "INTEGER"], ["e", "e"], ["e", "A"]>>)
add_query("C", "b", <<["B", "BOOLEAN"], ["A", "INTEGER"], ["a", "INTEGER"], ["e", "C"], ["C", "b"]>>, "D")
add_class(b)
add_query("INTEGER", "D", <<["B", "b"], ["a", "b"], ["D", "INTEGER"], ["B", "B"], ["b", "INTEGER"], ["A", "INTEGER"], ["d", "BOOLEAN"]>>, "d")
add_command("D", "a", <<["a", "INTEGER"], ["A", "d"], ["C", "B"], ["A", "BOOLEAN"], ["B", "b"], ["D", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["A", "INTEGER"]>>)
bool_value (false)
add_attribute("D", "a", "INTEGER")
add_query("A", "d", <<["d", "BOOLEAN"], ["d", "BOOLEAN"]>>, "INTEGER")
add_command("c", "D", <<["d", "BOOLEAN"]>>)
add_call_chain(<<C,b,e,D>>)
add_attribute("B", "B", "BOOLEAN")
add_command("A", "c", <<["B", "BOOLEAN"], ["A", "INTEGER"], ["D", "INTEGER"], ["b", "e"]>>)
add_command("B", "c", <<["B", "B"], ["C", "BOOLEAN"], ["B", "BOOLEAN"]>>)
add_call_chain(<<e,A,D,d,A,d>>)
int_value (4)
add_class(A)
int_value (27)
add_query("C", "e", <<["d", "INTEGER"], ["INTEGER", "A"], ["d", "BOOLEAN"], ["a", "INTEGER"], ["e", "BOOLEAN"], ["e", "BOOLEAN"], ["a", "INTEGER"], ["d", "D"], ["e", "BOOLEAN"]>>, "A")
add_class(e)
add_call_chain(<<BOOLEAN,b,B>>)
bool_value (false)
numerical_negation
numerical_negation
add_attribute("e", "a", "BOOLEAN")
add_attribute("d", "c", "A")
logical_negation
add_attribute("D", "C", "a")
add_class(e)
logical_negation
add_call_chain(<<c,d,e>>)
int_value (26)
addition
generate_java_code
int_value (16)
add_attribute("D", "d", "a")
add_call_chain(<<D,A,c,b,c>>)
add_call_chain(<<c,d,D,e,B>>)
add_call_chain(<<d,e,c,d,c,BOOLEAN>>)
add_call_chain(<<C,INTEGER>>)
add_command("C", "C", <<["A", "BOOLEAN"], ["e", "C"], ["b", "INTEGER"], ["C", "A"]>>)
int_value (11)
type_check
generate_java_code
greater_than
add_attribute("A", "b", "D")
numerical_negation
add_call_chain(<<C,c,e>>)
add_command("A", "B", <<["d", "BOOLEAN"], ["d", "d"], ["b", "BOOLEAN"], ["e", "INTEGER"], ["C", "INTEGER"], ["e", "c"], ["e", "BOOLEAN"]>>)
add_command("BOOLEAN", "C", <<["e", "INTEGER"]>>)
add_call_chain(<<a,a,c,D,A,C>>)
int_value (46)
add_call_chain(<<B,C,D>>)
numerical_negation
disjunction
generate_java_code
add_attribute("e", "A", "INTEGER")
add_command("INTEGER", "c", <<["a", "INTEGER"], ["A", "D"], ["d", "INTEGER"], ["c", "INTEGER"], ["b", "BOOLEAN"], ["D", "D"], ["C", "INTEGER"], ["BOOLEAN", "INTEGER"]>>)
int_value (42)
add_attribute("D", "c", "BOOLEAN")
bool_value (false)
add_attribute("D", "e", "BOOLEAN")
add_attribute("e", "D", "BOOLEAN")
add_call_chain(<<c,A,D,e,c,D>>)
add_class(C)
add_query("e", "D", <<["c", "BOOLEAN"], ["A", "b"]>>, "C")
int_value (21)
logical_negation
equals
int_value (24)
add_query("INTEGER", "C", <<["D", "c"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["e", "D"], ["e", "INTEGER"]>>, "D")
add_call_chain(<<C,BOOLEAN,e,A,c,C,d,A,a>>)
add_attribute("A", "D", "BOOLEAN")
add_query("A", "e", <<["c", "BOOLEAN"], ["a", "C"], ["e", "a"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "A"]>>, "B")
addition
numerical_negation
generate_java_code
add_call_chain(<<d,A>>)
add_call_chain(<<b>>)
conjunction
bool_value (true)
add_attribute("D", "BOOLEAN", "BOOLEAN")
add_call_chain(<<A,c,c,a,d,c,d,B,b>>)
add_command("d", "b", <<["A", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "C"], ["D", "e"]>>)
add_command("INTEGER", "A", <<["c", "INTEGER"], ["D", "INTEGER"]>>)
add_call_chain(<<D,D,c,INTEGER,c>>)
add_call_chain(<<d,BOOLEAN,C,b,A,C,D>>)
int_value (2)
add_class(B)
add_call_chain(<<D,e>>)
logical_negation
numerical_negation
subtraction
int_value (13)
logical_negation
