type_check
add_command("a", "B", <<["e", "BOOLEAN"], ["B", "INTEGER"], ["B", "BOOLEAN"], ["A", "C"]>>)
add_query("b", "INTEGER", <<["e", "INTEGER"], ["e", "INTEGER"], ["e", "BOOLEAN"], ["a", "b"], ["C", "INTEGER"]>>, "B")
conjunction
int_value (11)
int_value (4)
type_check
subtraction
add_call_chain(<<e,D,D,a,A,e>>)
add_call_chain(<<d,A,c,c,B>>)
logical_negation
add_class(B)
add_attribute("c", "B", "INTEGER")
numerical_negation
conjunction
logical_negation
subtraction
bool_value (false)
add_call_chain(<<C,D,A,B>>)
add_command("a", "e", <<["A", "B"], ["D", "BOOLEAN"], ["b", "INTEGER"], ["B", "BOOLEAN"], ["d", "BOOLEAN"]>>)
generate_java_code
int_value (16)
add_call_chain(<<d,INTEGER,C,D,d,a,INTEGER,BOOLEAN>>)
bool_value (true)
bool_value (true)
equals
generate_java_code
add_attribute("c", "INTEGER", "BOOLEAN")
add_attribute("c", "BOOLEAN", "BOOLEAN")
addition
numerical_negation
add_attribute("d", "d", "BOOLEAN")
logical_negation
add_call_chain(<<c,B>>)
numerical_negation
int_value (26)
add_attribute("C", "INTEGER", "B")
add_query("d", "INTEGER", <<["d", "INTEGER"], ["d", "c"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["c", "BOOLEAN"]>>, "e")
add_class(D)
add_call_chain(<<INTEGER,b>>)
type_check
bool_value (true)
add_attribute("a", "C", "BOOLEAN")
add_query("c", "a", <<["d", "INTEGER"], ["D", "INTEGER"], ["INTEGER", "BOOLEAN"], ["c", "INTEGER"]>>, "d")
add_attribute("D", "C", "C")
add_call_chain(<<a,INTEGER,INTEGER>>)
bool_value (false)
bool_value (false)
add_call_chain(<<a,A,C,B,B,C,a>>)
add_command("d", "a", <<["A", "INTEGER"]>>)
type_check
add_query("d", "INTEGER", <<["B", "A"], ["B", "INTEGER"], ["D", "B"], ["e", "INTEGER"], ["c", "B"]>>, "BOOLEAN")
add_query("INTEGER", "d", <<["D", "BOOLEAN"], ["d", "INTEGER"], ["b", "INTEGER"], ["B", "BOOLEAN"]>>, "c")
add_call_chain(<<D,b,a,D>>)
type_check
add_attribute("d", "e", "INTEGER")
int_value (33)
multiplication
numerical_negation
int_value (25)
add_call_chain(<<b,C,C>>)
int_value (34)
logical_negation
int_value (44)
bool_value (false)
add_command("D", "e", <<["A", "d"], ["d", "C"], ["A", "INTEGER"], ["B", "b"], ["C", "c"]>>)
add_call_chain(<<D>>)
quotient
generate_java_code
logical_negation
numerical_negation
generate_java_code
numerical_negation
add_call_chain(<<C,D,B,INTEGER,a,C,B,B,B>>)
generate_java_code
bool_value (false)
disjunction
add_call_chain(<<INTEGER,e,c,B,C,e>>)
add_query("a", "b", <<["a", "C"], ["c", "INTEGER"], ["A", "BOOLEAN"], ["A", "D"], ["a", "INTEGER"], ["D", "INTEGER"]>>, "A")
equals
add_attribute("a", "C", "B")
bool_value (true)
int_value (32)
quotient
bool_value (true)
logical_negation
logical_negation
generate_java_code
subtraction
add_call_chain(<<c,D,c,d,C,b>>)
add_attribute("D", "INTEGER", "BOOLEAN")
add_class(INTEGER)
add_call_chain(<<D,D,B,A>>)
add_command("e", "C", <<["b", "INTEGER"], ["A", "BOOLEAN"], ["c", "d"], ["C", "A"], ["b", "INTEGER"], ["c", "INTEGER"], ["b", "BOOLEAN"], ["d", "b"]>>)
add_attribute("A", "D", "INTEGER")
bool_value (false)
bool_value (true)
less_than
add_call_chain(<<e,B,e>>)
bool_value (false)
bool_value (false)
numerical_negation
less_than
add_query("b", "INTEGER", <<["c", "BOOLEAN"], ["a", "b"], ["BOOLEAN", "INTEGER"], ["D", "e"], ["A", "b"], ["B", "C"], ["d", "BOOLEAN"], ["c", "INTEGER"]>>, "c")
logical_negation
add_attribute("e", "c", "INTEGER")
add_command("D", "A", <<["b", "INTEGER"], ["C", "BOOLEAN"], ["d", "BOOLEAN"]>>)
add_call_chain(<<b,A,C,a,e>>)
add_command("b", "D", <<["d", "b"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "INTEGER"]>>)
type_check
int_value (44)
bool_value (true)
bool_value (false)
add_command("b", "e", <<["c", "BOOLEAN"], ["D", "INTEGER"], ["b", "BOOLEAN"], ["c", "b"], ["d", "BOOLEAN"]>>)
bool_value (true)
bool_value (true)
add_class(INTEGER)
add_command("D", "c", <<["B", "INTEGER"], ["C", "BOOLEAN"], ["B", "INTEGER"]>>)
add_command("C", "D", <<["c", "INTEGER"], ["e", "INTEGER"]>>)
add_command("a", "e", <<["d", "BOOLEAN"]>>)
add_command("D", "BOOLEAN", <<["A", "INTEGER"], ["INTEGER", "d"], ["c", "INTEGER"], ["B", "INTEGER"]>>)
less_than
subtraction
add_command("C", "A", <<["A", "INTEGER"], ["A", "a"], ["C", "BOOLEAN"], ["e", "B"], ["b", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "INTEGER"], ["a", "INTEGER"]>>)
int_value (13)
add_command("c", "C", <<["B", "b"], ["a", "INTEGER"], ["B", "b"], ["a", "INTEGER"], ["B", "e"], ["B", "INTEGER"], ["A", "INTEGER"]>>)
bool_value (true)
add_call_chain(<<d,c,e,D,a,D,B,C>>)
disjunction
int_value (48)
logical_negation
logical_negation
int_value (40)
conjunction
bool_value (true)
bool_value (true)
add_call_chain(<<a,C,B,c,e,D,A,a>>)
multiplication
add_call_chain(<<B,e,INTEGER,D,c>>)
add_call_chain(<<A,c,e,C,b>>)
add_attribute("BOOLEAN", "b", "BOOLEAN")
type_check
generate_java_code
disjunction
disjunction
generate_java_code
logical_negation
generate_java_code
add_query("C", "D", <<["b", "INTEGER"], ["B", "BOOLEAN"], ["d", "D"], ["d", "C"], ["B", "d"], ["D", "INTEGER"], ["INTEGER", "BOOLEAN"], ["c", "B"]>>, "d")
greater_than
add_call_chain(<<e,a,a,c,e,INTEGER,a,b>>)
add_call_chain(<<A,B,d,D,b,D>>)
logical_negation
int_value (33)
numerical_negation
int_value (7)
greater_than
bool_value (true)
quotient
numerical_negation
add_call_chain(<<C,A,e,b,C,a>>)
bool_value (false)
bool_value (false)
bool_value (true)
logical_negation
add_attribute("INTEGER", "c", "INTEGER")
subtraction
equals
int_value (7)
add_query("a", "c", <<["B", "a"], ["e", "INTEGER"], ["e", "BOOLEAN"], ["A", "b"], ["A", "INTEGER"], ["d", "c"], ["A", "BOOLEAN"], ["b", "BOOLEAN"]>>, "D")
bool_value (false)
int_value (3)
add_class(A)
add_call_chain(<<b,C,C,d,C>>)
multiplication
bool_value (false)
add_attribute("a", "A", "A")
subtraction
add_call_chain(<<A,D,c,d,INTEGER,C,e,INTEGER>>)
add_attribute("c", "B", "INTEGER")
bool_value (true)
quotient
add_attribute("c", "b", "INTEGER")
add_query("C", "e", <<["D", "INTEGER"], ["d", "BOOLEAN"]>>, "b")
modulo
add_query("A", "b", <<["a", "BOOLEAN"], ["c", "BOOLEAN"], ["c", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "d"]>>, "a")
add_command("A", "B", <<["c", "BOOLEAN"], ["c", "INTEGER"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "c"], ["a", "A"], ["A", "b"], ["d", "BOOLEAN"], ["INTEGER", "c"]>>)
conjunction
add_query("C", "BOOLEAN", <<["a", "INTEGER"], ["d", "BOOLEAN"], ["A", "c"], ["b", "BOOLEAN"], ["c", "e"], ["d", "INTEGER"], ["c", "C"], ["A", "INTEGER"]>>, "a")
generate_java_code
bool_value (true)
numerical_negation
add_class(B)
int_value (21)
disjunction
add_command("c", "C", <<["b", "c"], ["B", "INTEGER"], ["D", "INTEGER"], ["B", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
add_command("C", "C", <<["C", "A"], ["e", "B"], ["b", "B"], ["D", "d"], ["A", "BOOLEAN"], ["A", "INTEGER"], ["c", "INTEGER"], ["c", "c"], ["a", "INTEGER"]>>)
equals
add_call_chain(<<c,a,e,b,A,B,BOOLEAN>>)
int_value (43)
int_value (46)
int_value (12)
numerical_negation
logical_negation
conjunction
add_command("A", "A", <<["d", "BOOLEAN"], ["A", "C"], ["INTEGER", "INTEGER"], ["C", "INTEGER"], ["D", "d"], ["d", "INTEGER"]>>)
subtraction
bool_value (false)
int_value (8)
greater_than
add_query("A", "c", <<["C", "INTEGER"], ["e", "B"], ["B", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["c", "BOOLEAN"], ["b", "INTEGER"], ["a", "BOOLEAN"], ["D", "BOOLEAN"]>>, "C")
type_check
add_call_chain(<<C,b>>)
greater_than
add_call_chain(<<C,B,C,d,b>>)
less_than
add_call_chain(<<d,d>>)
add_call_chain(<<C,B,C,INTEGER,d,a,D>>)
modulo
add_attribute("A", "b", "B")
numerical_negation
add_command("a", "B", <<["C", "INTEGER"], ["e", "C"], ["BOOLEAN", "b"], ["b", "B"]>>)
add_call_chain(<<INTEGER,D,a,A,D,C>>)
add_query("B", "INTEGER", <<["D", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["b", "INTEGER"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "INTEGER"]>>, "c")
int_value (36)
equals
add_attribute("INTEGER", "c", "BOOLEAN")
conjunction
add_call_chain(<<e,D,e,A>>)
add_class(A)
add_attribute("B", "b", "INTEGER")
bool_value (true)
type_check
conjunction
conjunction
add_command("B", "d", <<["e", "INTEGER"], ["b", "BOOLEAN"], ["BOOLEAN", "D"], ["A", "BOOLEAN"], ["d", "BOOLEAN"], ["c", "e"], ["c", "INTEGER"]>>)
add_command("C", "A", <<["B", "c"], ["d", "C"], ["b", "INTEGER"], ["a", "D"]>>)
numerical_negation
generate_java_code
add_query("A", "d", <<["d", "D"], ["d", "INTEGER"], ["c", "BOOLEAN"], ["d", "C"], ["D", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "D"], ["C", "BOOLEAN"]>>, "C")
int_value (30)
add_call_chain(<<e,B,a,INTEGER,C,C>>)
add_class(D)
add_class(c)
bool_value (true)
