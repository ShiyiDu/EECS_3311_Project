add_command("A", "b", <<["b", "BOOLEAN"], ["b", "BOOLEAN"]>>)
numerical_negation
add_call_chain(<<A,c>>)
bool_value (true)
add_command("INTEGER", "e", <<["A", "d"], ["b", "BOOLEAN"], ["b", "BOOLEAN"], ["d", "INTEGER"], ["B", "C"], ["b", "BOOLEAN"], ["d", "BOOLEAN"], ["BOOLEAN", "C"], ["e", "d"]>>)
add_attribute("A", "B", "INTEGER")
add_call_chain(<<A,C,B>>)
conjunction
add_class(D)
logical_negation
add_query("c", "A", <<["c", "B"], ["c", "INTEGER"], ["A", "INTEGER"], ["a", "B"], ["d", "INTEGER"]>>, "B")
add_call_chain(<<A,e>>)
add_attribute("D", "A", "BOOLEAN")
disjunction
add_call_chain(<<c,d,D,INTEGER>>)
int_value (6)
add_attribute("INTEGER", "B", "C")
add_class(b)
add_class(D)
add_call_chain(<<C,A,c,b,B,C,D,D,A>>)
equals
disjunction
add_call_chain(<<D,a,B,d,B,A,A,a>>)
greater_than
numerical_negation
add_query("BOOLEAN", "c", <<["c", "A"], ["a", "d"], ["BOOLEAN", "e"], ["b", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "INTEGER"]>>, "e")
add_attribute("C", "c", "BOOLEAN")
add_call_chain(<<C,b,d,C,B,INTEGER,A,D,C>>)
add_class(B)
add_call_chain(<<D,C,C,BOOLEAN,B,c,B,C,c>>)
add_call_chain(<<a,D,C,B>>)
add_command("C", "C", <<["BOOLEAN", "INTEGER"], ["e", "C"], ["d", "BOOLEAN"]>>)
bool_value (false)
add_command("C", "B", <<["C", "BOOLEAN"], ["a", "INTEGER"], ["A", "b"], ["D", "BOOLEAN"], ["C", "A"]>>)
add_class(e)
quotient
int_value (20)
logical_negation
int_value (2)
logical_negation
bool_value (true)
add_command("a", "a", <<["a", "BOOLEAN"], ["a", "BOOLEAN"]>>)
disjunction
numerical_negation
int_value (27)
int_value (35)
add_query("d", "a", <<["A", "INTEGER"], ["a", "BOOLEAN"], ["c", "INTEGER"], ["a", "BOOLEAN"], ["C", "b"], ["a", "BOOLEAN"], ["A", "INTEGER"], ["e", "BOOLEAN"], ["D", "BOOLEAN"]>>, "c")
bool_value (false)
int_value (42)
bool_value (true)
generate_java_code
add_query("D", "B", <<["D", "BOOLEAN"], ["B", "INTEGER"]>>, "a")
add_call_chain(<<a,b,d,a>>)
add_call_chain(<<INTEGER,C,B,B,D,BOOLEAN>>)
logical_negation
equals
generate_java_code
logical_negation
bool_value (false)
add_call_chain(<<A,B,b,A>>)
add_command("A", "D", <<["e", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "D"], ["B", "A"], ["a", "INTEGER"], ["INTEGER", "BOOLEAN"], ["e", "c"]>>)
add_attribute("e", "B", "BOOLEAN")
add_query("INTEGER", "A", <<["B", "BOOLEAN"], ["e", "c"]>>, "INTEGER")
disjunction
add_query("INTEGER", "b", <<["d", "BOOLEAN"]>>, "INTEGER")
add_command("A", "B", <<["D", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "c"], ["a", "a"], ["c", "BOOLEAN"], ["b", "BOOLEAN"], ["e", "B"], ["BOOLEAN", "BOOLEAN"]>>)
add_call_chain(<<e,B>>)
add_class(B)
add_query("a", "b", <<["d", "e"], ["c", "BOOLEAN"], ["e", "BOOLEAN"]>>, "B")
add_command("C", "BOOLEAN", <<["B", "BOOLEAN"], ["B", "BOOLEAN"]>>)
logical_negation
less_than
add_command("A", "D", <<["c", "INTEGER"], ["c", "c"], ["b", "INTEGER"]>>)
add_command("c", "D", <<["D", "INTEGER"], ["c", "b"], ["e", "INTEGER"], ["e", "BOOLEAN"], ["D", "d"], ["D", "INTEGER"]>>)
generate_java_code
add_command("INTEGER", "D", <<["D", "BOOLEAN"]>>)
add_query("C", "a", <<["D", "A"], ["b", "INTEGER"], ["INTEGER", "INTEGER"], ["d", "c"]>>, "C")
generate_java_code
add_command("B", "B", <<["A", "c"], ["b", "e"], ["e", "INTEGER"], ["B", "A"], ["C", "c"]>>)
add_call_chain(<<INTEGER,C,e,e,A,d,C>>)
int_value (34)
add_call_chain(<<C,C,c>>)
numerical_negation
type_check
add_call_chain(<<D>>)
type_check
less_than
numerical_negation
add_call_chain(<<a,d,d,A,c,d>>)
equals
numerical_negation
add_attribute("D", "C", "BOOLEAN")
add_class(a)
add_call_chain(<<b,b,C>>)
add_query("A", "A", <<["C", "D"], ["A", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["INTEGER", "A"], ["B", "A"]>>, "D")
add_class(D)
type_check
add_call_chain(<<b,B,B>>)
add_command("C", "D", <<["C", "d"], ["c", "D"], ["a", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["C", "INTEGER"]>>)
logical_negation
logical_negation
add_class(d)
logical_negation
add_class(b)
conjunction
add_query("A", "C", <<["D", "INTEGER"], ["e", "INTEGER"], ["B", "INTEGER"], ["B", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["INTEGER", "A"], ["e", "A"], ["b", "INTEGER"]>>, "B")
bool_value (true)
generate_java_code
add_query("A", "A", <<["A", "BOOLEAN"], ["C", "d"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "INTEGER"], ["B", "INTEGER"]>>, "c")
int_value (28)
numerical_negation
disjunction
add_call_chain(<<B,b,D,b,B>>)
less_than
add_call_chain(<<A,B,e>>)
add_query("b", "B", <<["B", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "INTEGER"], ["d", "INTEGER"], ["a", "a"], ["b", "INTEGER"], ["BOOLEAN", "a"]>>, "C")
add_query("e", "d", <<["d", "INTEGER"]>>, "C")
add_command("D", "c", <<["B", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["A", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "INTEGER"], ["B", "INTEGER"], ["A", "BOOLEAN"]>>)
add_attribute("INTEGER", "a", "c")
add_query("C", "c", <<["D", "INTEGER"], ["b", "INTEGER"], ["B", "INTEGER"], ["a", "INTEGER"], ["a", "C"], ["b", "INTEGER"], ["A", "INTEGER"]>>, "A")
numerical_negation
numerical_negation
add_call_chain(<<D,C,d,A,a,C,B,c>>)
add_class(BOOLEAN)
int_value (48)
type_check
disjunction
type_check
add_call_chain(<<D,C,e>>)
add_query("b", "e", <<["A", "d"], ["a", "BOOLEAN"], ["D", "e"], ["C", "BOOLEAN"], ["D", "c"]>>, "D")
generate_java_code
add_call_chain(<<b,a,A,e>>)
greater_than
add_call_chain(<<c,C,B,B>>)
logical_negation
numerical_negation
less_than
bool_value (false)
bool_value (true)
add_call_chain(<<b,C,C,a,a,B,BOOLEAN,d>>)
less_than
int_value (46)
less_than
subtraction
add_command("B", "D", <<["INTEGER", "INTEGER"], ["a", "INTEGER"], ["D", "A"], ["INTEGER", "INTEGER"], ["BOOLEAN", "INTEGER"], ["C", "BOOLEAN"]>>)
generate_java_code
add_attribute("e", "a", "e")
add_class(C)
add_command("B", "b", <<["D", "A"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "INTEGER"]>>)
generate_java_code
int_value (28)
add_query("A", "a", <<["C", "INTEGER"], ["e", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "INTEGER"], ["a", "BOOLEAN"], ["c", "e"], ["A", "INTEGER"], ["a", "BOOLEAN"]>>, "e")
add_attribute("a", "b", "BOOLEAN")
disjunction
int_value (19)
add_class(BOOLEAN)
add_call_chain(<<D,d,A,c,A,e>>)
add_command("C", "C", <<["A", "BOOLEAN"], ["D", "a"], ["e", "BOOLEAN"], ["B", "d"]>>)
modulo
add_call_chain(<<a,B,B,B,C,b>>)
add_attribute("c", "A", "INTEGER")
add_call_chain(<<B,A,c,D,C,C,b,a,A>>)
multiplication
numerical_negation
add_query("B", "D", <<["e", "d"], ["c", "d"], ["BOOLEAN", "A"], ["e", "INTEGER"], ["c", "INTEGER"]>>, "a")
add_query("A", "b", <<["C", "BOOLEAN"], ["e", "d"], ["A", "INTEGER"], ["a", "BOOLEAN"], ["e", "INTEGER"], ["B", "INTEGER"], ["d", "INTEGER"], ["BOOLEAN", "INTEGER"], ["BOOLEAN", "INTEGER"]>>, "INTEGER")
add_query("a", "A", <<["D", "INTEGER"], ["C", "BOOLEAN"], ["D", "INTEGER"]>>, "A")
logical_negation
int_value (47)
add_call_chain(<<c,A,c,A>>)
add_query("c", "B", <<["BOOLEAN", "B"], ["d", "INTEGER"], ["e", "BOOLEAN"], ["a", "D"], ["BOOLEAN", "BOOLEAN"], ["A", "BOOLEAN"]>>, "b")
add_command("e", "BOOLEAN", <<["C", "BOOLEAN"], ["C", "a"], ["b", "BOOLEAN"], ["a", "A"], ["a", "BOOLEAN"]>>)
add_call_chain(<<D,a,c,A,C,c>>)
type_check
bool_value (true)
less_than
add_attribute("d", "e", "c")
add_command("a", "a", <<["d", "INTEGER"], ["a", "INTEGER"], ["C", "INTEGER"], ["INTEGER", "INTEGER"], ["d", "INTEGER"], ["A", "D"], ["a", "b"], ["a", "INTEGER"], ["INTEGER", "INTEGER"]>>)
bool_value (true)
add_query("b", "C", <<["b", "INTEGER"], ["D", "c"], ["B", "INTEGER"], ["a", "b"], ["a", "d"], ["INTEGER", "C"]>>, "BOOLEAN")
add_call_chain(<<c,D,B,b,A,d,BOOLEAN,C>>)
add_command("c", "D", <<["c", "INTEGER"], ["a", "INTEGER"], ["e", "INTEGER"], ["B", "INTEGER"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["C", "INTEGER"]>>)
add_attribute("BOOLEAN", "INTEGER", "INTEGER")
logical_negation
add_command("a", "e", <<["C", "D"], ["INTEGER", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "c"], ["A", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "B"], ["C", "C"]>>)
type_check
conjunction
add_query("d", "b", <<["INTEGER", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "d"], ["b", "d"]>>, "a")
modulo
int_value (25)
generate_java_code
add_call_chain(<<B,B,c>>)
add_call_chain(<<c,D,B,D>>)
add_attribute("B", "A", "INTEGER")
modulo
modulo
add_query("A", "C", <<["B", "INTEGER"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["b", "INTEGER"]>>, "c")
add_call_chain(<<B,a,D,BOOLEAN,a,BOOLEAN,C,D>>)
bool_value (true)
generate_java_code
logical_negation
type_check
generate_java_code
add_query("C", "c", <<["d", "C"], ["BOOLEAN", "INTEGER"], ["C", "INTEGER"], ["C", "b"], ["e", "INTEGER"], ["a", "A"], ["b", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "INTEGER"]>>, "e")
