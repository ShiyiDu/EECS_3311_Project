logical_negation
add_call_chain(<<d,B,A,c,C>>)
add_command("B", "B", <<["a", "a"], ["A", "INTEGER"], ["D", "b"], ["e", "INTEGER"], ["e", "B"]>>)
type_check
add_call_chain(<<C,A,C,e,c,D,INTEGER>>)
add_class(c)
add_call_chain(<<C>>)
add_call_chain(<<INTEGER,INTEGER,d,e,C>>)
add_attribute("A", "a", "B")
generate_java_code
add_call_chain(<<c,B,c,A,C,a,a,d>>)
multiplication
add_query("B", "d", <<["c", "INTEGER"]>>, "d")
modulo
logical_negation
int_value (29)
int_value (14)
int_value (36)
add_call_chain(<<C,INTEGER,B,A,C,e,d>>)
add_call_chain(<<e,d,B,d,A,C>>)
add_query("d", "c", <<["A", "B"], ["c", "INTEGER"], ["D", "a"], ["a", "INTEGER"], ["c", "INTEGER"], ["D", "INTEGER"], ["d", "D"], ["INTEGER", "INTEGER"], ["c", "a"]>>, "a")
add_call_chain(<<b,e,c,D,d,B,B,D,INTEGER>>)
add_call_chain(<<b,INTEGER,b>>)
add_class(A)
int_value (33)
add_attribute("D", "D", "INTEGER")
int_value (30)
modulo
add_command("C", "C", <<["D", "INTEGER"], ["d", "INTEGER"], ["d", "INTEGER"], ["a", "BOOLEAN"]>>)
add_class(c)
equals
add_class(A)
add_class(INTEGER)
type_check
logical_negation
quotient
add_query("c", "B", <<["b", "BOOLEAN"], ["e", "a"], ["d", "A"], ["D", "BOOLEAN"]>>, "a")
add_query("INTEGER", "B", <<["e", "INTEGER"]>>, "D")
logical_negation
add_attribute("a", "a", "A")
conjunction
add_command("d", "C", <<["B", "d"], ["b", "c"], ["e", "A"], ["INTEGER", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "c"], ["C", "INTEGER"], ["e", "B"], ["a", "INTEGER"]>>)
add_attribute("c", "e", "BOOLEAN")
add_query("d", "b", <<["b", "INTEGER"], ["C", "INTEGER"], ["A", "INTEGER"], ["B", "d"], ["A", "b"]>>, "B")
addition
int_value (5)
conjunction
add_class(a)
add_attribute("D", "B", "BOOLEAN")
type_check
add_call_chain(<<D,D,a>>)
logical_negation
add_call_chain(<<a,C,c,D,a,d,d,b,B>>)
logical_negation
type_check
modulo
add_query("B", "B", <<["B", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["c", "a"], ["INTEGER", "INTEGER"], ["BOOLEAN", "B"]>>, "b")
add_call_chain(<<D,b,d,d,B,a>>)
add_command("d", "c", <<["BOOLEAN", "INTEGER"], ["A", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["D", "INTEGER"], ["b", "INTEGER"], ["a", "BOOLEAN"]>>)
add_call_chain(<<c>>)
int_value (11)
modulo
add_query("B", "A", <<["A", "INTEGER"], ["e", "INTEGER"], ["a", "INTEGER"], ["B", "INTEGER"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "BOOLEAN"]>>, "c")
numerical_negation
add_query("a", "e", <<["c", "C"], ["d", "BOOLEAN"], ["d", "BOOLEAN"], ["b", "b"], ["c", "D"], ["c", "INTEGER"], ["b", "BOOLEAN"], ["C", "INTEGER"]>>, "B")
add_attribute("C", "C", "INTEGER")
add_attribute("a", "D", "INTEGER")
add_call_chain(<<e,a,C>>)
generate_java_code
numerical_negation
add_command("C", "B", <<["d", "BOOLEAN"], ["c", "a"], ["D", "INTEGER"]>>)
add_query("C", "b", <<["D", "BOOLEAN"], ["A", "b"], ["a", "BOOLEAN"], ["a", "INTEGER"], ["A", "INTEGER"], ["e", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>, "A")
add_attribute("B", "B", "INTEGER")
int_value (10)
multiplication
add_command("BOOLEAN", "a", <<["A", "d"], ["e", "INTEGER"], ["c", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "INTEGER"]>>)
add_command("C", "e", <<["A", "b"], ["a", "b"], ["D", "A"]>>)
int_value (2)
logical_negation
add_attribute("C", "A", "d")
less_than
add_query("b", "B", <<["B", "a"]>>, "C")
type_check
equals
type_check
int_value (18)
add_attribute("e", "d", "INTEGER")
add_query("a", "C", <<["a", "d"]>>, "A")
add_call_chain(<<D,A>>)
add_class(D)
bool_value (false)
bool_value (false)
numerical_negation
generate_java_code
type_check
add_call_chain(<<INTEGER,b,b,C,e,a,c,c,B>>)
bool_value (false)
add_call_chain(<<INTEGER,A,d,B,B>>)
int_value (4)
quotient
add_call_chain(<<C,B>>)
add_query("b", "A", <<["INTEGER", "BOOLEAN"], ["a", "INTEGER"], ["INTEGER", "INTEGER"], ["A", "BOOLEAN"], ["C", "BOOLEAN"]>>, "a")
add_query("D", "B", <<["C", "INTEGER"]>>, "c")
add_command("C", "A", <<["a", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "INTEGER"], ["C", "c"], ["BOOLEAN", "INTEGER"], ["B", "INTEGER"], ["b", "BOOLEAN"], ["b", "INTEGER"]>>)
numerical_negation
add_call_chain(<<C,B,A,e,D>>)
add_attribute("d", "c", "c")
bool_value (true)
logical_negation
less_than
add_attribute("A", "e", "D")
numerical_negation
bool_value (false)
numerical_negation
add_attribute("c", "b", "BOOLEAN")
add_attribute("d", "B", "a")
type_check
add_attribute("a", "B", "BOOLEAN")
int_value (40)
int_value (6)
bool_value (true)
generate_java_code
add_command("d", "e", <<["d", "e"], ["e", "BOOLEAN"], ["e", "INTEGER"], ["B", "C"], ["d", "INTEGER"], ["INTEGER", "BOOLEAN"], ["b", "a"]>>)
add_query("B", "a", <<["D", "BOOLEAN"], ["b", "d"], ["b", "INTEGER"], ["b", "e"]>>, "e")
add_command("INTEGER", "A", <<["e", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "INTEGER"], ["b", "INTEGER"], ["b", "e"], ["B", "b"], ["c", "b"], ["d", "INTEGER"], ["D", "BOOLEAN"]>>)
add_command("b", "B", <<["d", "BOOLEAN"], ["b", "BOOLEAN"], ["b", "c"]>>)
modulo
add_command("d", "D", <<["e", "BOOLEAN"], ["A", "BOOLEAN"]>>)
numerical_negation
add_command("b", "A", <<["e", "INTEGER"], ["B", "INTEGER"], ["b", "e"], ["B", "INTEGER"], ["b", "INTEGER"], ["a", "BOOLEAN"], ["c", "B"]>>)
add_call_chain(<<B,D>>)
int_value (48)
add_command("a", "A", <<["INTEGER", "BOOLEAN"], ["C", "b"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["e", "INTEGER"], ["C", "BOOLEAN"]>>)
add_command("c", "b", <<["b", "INTEGER"], ["d", "b"], ["a", "INTEGER"]>>)
add_attribute("BOOLEAN", "b", "BOOLEAN")
generate_java_code
add_command("B", "A", <<["b", "C"], ["e", "BOOLEAN"], ["b", "INTEGER"], ["b", "INTEGER"]>>)
addition
add_attribute("INTEGER", "c", "BOOLEAN")
greater_than
bool_value (false)
add_call_chain(<<b,C,A,A,e,D,d,C>>)
equals
bool_value (false)
numerical_negation
add_class(D)
numerical_negation
add_class(A)
type_check
bool_value (true)
add_call_chain(<<b,C>>)
less_than
bool_value (true)
logical_negation
greater_than
add_call_chain(<<a,b,c,A,d,C>>)
add_query("B", "c", <<["A", "INTEGER"], ["A", "INTEGER"]>>, "a")
quotient
numerical_negation
bool_value (false)
bool_value (false)
int_value (22)
int_value (13)
int_value (41)
add_command("d", "C", <<["C", "c"], ["BOOLEAN", "BOOLEAN"], ["b", "b"], ["b", "INTEGER"], ["A", "INTEGER"]>>)
bool_value (false)
add_command("a", "D", <<["BOOLEAN", "BOOLEAN"], ["B", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["e", "d"], ["B", "INTEGER"]>>)
modulo
disjunction
add_class(B)
generate_java_code
add_query("c", "e", <<["C", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "D"], ["A", "B"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["A", "BOOLEAN"]>>, "C")
equals
add_attribute("d", "C", "e")
int_value (25)
less_than
add_query("d", "BOOLEAN", <<["A", "INTEGER"], ["A", "D"], ["B", "C"], ["D", "INTEGER"], ["b", "BOOLEAN"], ["b", "INTEGER"]>>, "C")
int_value (49)
add_call_chain(<<D,c,d,c,e,c,b,b,BOOLEAN>>)
add_attribute("D", "e", "INTEGER")
logical_negation
add_command("b", "b", <<["c", "d"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "BOOLEAN"], ["d", "BOOLEAN"]>>)
numerical_negation
int_value (10)
bool_value (false)
add_attribute("A", "A", "INTEGER")
add_attribute("C", "D", "BOOLEAN")
quotient
generate_java_code
bool_value (false)
add_call_chain(<<c,a,C,b,b,b,BOOLEAN,A>>)
add_call_chain(<<e,c,INTEGER,b,a,A,A,B,C>>)
add_attribute("c", "A", "INTEGER")
add_class(b)
greater_than
type_check
disjunction
logical_negation
logical_negation
add_command("c", "BOOLEAN", <<["C", "b"], ["INTEGER", "BOOLEAN"]>>)
generate_java_code
add_call_chain(<<INTEGER,d,a,D,a,C,B,c,B>>)
add_attribute("D", "D", "INTEGER")
add_query("A", "b", <<["B", "INTEGER"], ["D", "b"], ["INTEGER", "C"], ["a", "BOOLEAN"], ["e", "D"], ["A", "C"], ["c", "INTEGER"], ["C", "INTEGER"], ["a", "INTEGER"]>>, "D")
bool_value (false)
add_call_chain(<<c,c,D,D,D,A,d>>)
add_class(D)
add_call_chain(<<e,C>>)
add_attribute("A", "D", "BOOLEAN")
add_query("a", "D", <<["INTEGER", "INTEGER"], ["c", "INTEGER"], ["C", "e"], ["INTEGER", "INTEGER"], ["A", "b"], ["B", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["d", "BOOLEAN"]>>, "A")
greater_than
bool_value (true)
add_class(e)
numerical_negation
addition
add_call_chain(<<BOOLEAN,b,D,c,b,A,b,INTEGER>>)
add_command("C", "B", <<["B", "INTEGER"], ["C", "BOOLEAN"]>>)
add_command("d", "A", <<["a", "B"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["e", "INTEGER"], ["B", "BOOLEAN"]>>)
int_value (14)
add_command("B", "b", <<["a", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "INTEGER"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["e", "BOOLEAN"]>>)
int_value (38)
subtraction
generate_java_code
int_value (7)
numerical_negation
add_attribute("d", "A", "BOOLEAN")
type_check
add_command("B", "A", <<["a", "INTEGER"], ["b", "INTEGER"], ["c", "INTEGER"], ["c", "B"], ["e", "BOOLEAN"], ["c", "A"], ["e", "BOOLEAN"], ["INTEGER", "D"], ["e", "c"]>>)
add_command("BOOLEAN", "B", <<["a", "d"], ["A", "INTEGER"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["e", "INTEGER"], ["A", "INTEGER"], ["D", "B"], ["C", "INTEGER"]>>)
less_than
add_call_chain(<<a,b,BOOLEAN,D,B,A>>)
add_call_chain(<<D,B,B,e>>)
type_check
int_value (16)
add_attribute("D", "a", "INTEGER")
add_command("B", "C", <<["D", "B"], ["c", "A"]>>)
add_command("A", "C", <<["e", "INTEGER"], ["BOOLEAN", "d"], ["INTEGER", "BOOLEAN"], ["b", "D"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
add_call_chain(<<A,d,D,BOOLEAN,BOOLEAN>>)
add_call_chain(<<b,c,A,C,b>>)
generate_java_code
add_query("BOOLEAN", "B", <<["A", "BOOLEAN"], ["BOOLEAN", "A"], ["C", "C"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["b", "a"]>>, "D")
generate_java_code
add_class(a)
equals
logical_negation
numerical_negation
