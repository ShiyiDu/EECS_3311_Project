add_class(B)
add_call_chain(<<B,D,BOOLEAN,BOOLEAN,B,e,b,c,d>>)
type_check
type_check
add_query("A", "e", <<["C", "INTEGER"], ["c", "BOOLEAN"], ["B", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "INTEGER"]>>, "A")
add_command("INTEGER", "e", <<["A", "b"], ["a", "C"]>>)
type_check
modulo
type_check
int_value (41)
add_command("C", "b", <<["C", "INTEGER"], ["e", "b"], ["A", "BOOLEAN"], ["d", "B"], ["a", "BOOLEAN"], ["b", "BOOLEAN"], ["b", "INTEGER"]>>)
add_call_chain(<<INTEGER,e,b,C,a,b,b,A,d>>)
add_command("e", "A", <<["D", "INTEGER"], ["B", "BOOLEAN"], ["B", "INTEGER"], ["b", "BOOLEAN"], ["A", "INTEGER"], ["B", "INTEGER"], ["INTEGER", "INTEGER"]>>)
int_value (47)
numerical_negation
add_command("BOOLEAN", "INTEGER", <<["d", "INTEGER"], ["e", "D"], ["A", "INTEGER"], ["c", "B"]>>)
add_call_chain(<<b,D>>)
add_call_chain(<<a,c,b,D>>)
add_attribute("d", "a", "INTEGER")
add_query("e", "D", <<["A", "BOOLEAN"], ["e", "INTEGER"], ["a", "INTEGER"], ["a", "INTEGER"]>>, "b")
add_call_chain(<<c>>)
numerical_negation
int_value (2)
add_call_chain(<<A,C,a,INTEGER>>)
add_call_chain(<<A>>)
int_value (14)
numerical_negation
add_call_chain(<<e,C>>)
addition
add_attribute("INTEGER", "B", "C")
add_command("C", "D", <<["e", "INTEGER"], ["BOOLEAN", "INTEGER"], ["INTEGER", "A"], ["A", "INTEGER"], ["B", "c"]>>)
add_call_chain(<<a,B,e,b,B,C,a,e>>)
modulo
conjunction
add_call_chain(<<c,d,b,e,BOOLEAN,A,B,e>>)
int_value (18)
int_value (26)
add_call_chain(<<B,D,a,B,C,A,D,B>>)
add_attribute("C", "d", "BOOLEAN")
logical_negation
addition
logical_negation
generate_java_code
add_call_chain(<<A,INTEGER,b,INTEGER,b,A>>)
add_attribute("c", "B", "c")
numerical_negation
add_query("D", "D", <<["c", "INTEGER"]>>, "D")
add_call_chain(<<d,A,A>>)
add_query("b", "C", <<["C", "B"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "C"], ["B", "e"], ["c", "INTEGER"]>>, "B")
numerical_negation
add_query("D", "a", <<["b", "INTEGER"], ["C", "BOOLEAN"]>>, "a")
addition
conjunction
add_query("b", "D", <<["D", "BOOLEAN"], ["c", "BOOLEAN"], ["e", "C"], ["D", "D"], ["D", "INTEGER"]>>, "a")
numerical_negation
type_check
add_call_chain(<<d>>)
add_query("INTEGER", "b", <<["e", "BOOLEAN"], ["e", "INTEGER"], ["C", "INTEGER"], ["d", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["B", "BOOLEAN"], ["B", "A"], ["C", "A"], ["d", "INTEGER"]>>, "C")
add_class(e)
add_call_chain(<<e,B,INTEGER,B>>)
add_query("c", "e", <<["a", "BOOLEAN"], ["b", "BOOLEAN"], ["b", "INTEGER"], ["c", "C"], ["e", "D"], ["b", "INTEGER"], ["D", "BOOLEAN"], ["d", "BOOLEAN"]>>, "c")
add_class(B)
add_class(b)
generate_java_code
add_class(c)
add_call_chain(<<B,c,a,e,a,c,INTEGER,BOOLEAN,a>>)
generate_java_code
bool_value (false)
add_query("A", "D", <<["A", "b"], ["e", "BOOLEAN"], ["c", "INTEGER"], ["A", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "INTEGER"]>>, "c")
bool_value (true)
int_value (16)
bool_value (true)
bool_value (true)
add_query("B", "a", <<["D", "INTEGER"], ["A", "INTEGER"], ["B", "INTEGER"]>>, "a")
numerical_negation
add_command("B", "a", <<["A", "INTEGER"], ["a", "BOOLEAN"], ["c", "INTEGER"]>>)
add_query("D", "D", <<["B", "A"], ["d", "b"], ["b", "BOOLEAN"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "C"]>>, "BOOLEAN")
conjunction
add_call_chain(<<a>>)
add_attribute("A", "b", "A")
add_command("A", "B", <<["BOOLEAN", "BOOLEAN"], ["d", "D"], ["C", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["e", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "INTEGER"]>>)
bool_value (false)
subtraction
conjunction
generate_java_code
int_value (48)
add_query("C", "D", <<["A", "BOOLEAN"], ["a", "INTEGER"], ["D", "INTEGER"]>>, "c")
add_command("INTEGER", "c", <<["C", "INTEGER"], ["C", "INTEGER"]>>)
add_query("b", "A", <<["B", "e"]>>, "C")
generate_java_code
numerical_negation
int_value (6)
add_query("e", "a", <<["b", "INTEGER"], ["B", "e"], ["B", "c"], ["D", "INTEGER"], ["A", "INTEGER"], ["e", "c"], ["D", "D"]>>, "INTEGER")
add_attribute("a", "C", "BOOLEAN")
type_check
numerical_negation
add_command("D", "D", <<["C", "INTEGER"], ["e", "BOOLEAN"]>>)
add_call_chain(<<b,d,d,A,b,c>>)
int_value (39)
add_query("b", "D", <<["B", "BOOLEAN"], ["A", "INTEGER"], ["c", "INTEGER"], ["C", "INTEGER"], ["e", "A"], ["c", "BOOLEAN"], ["b", "INTEGER"]>>, "c")
numerical_negation
add_class(B)
add_attribute("C", "b", "BOOLEAN")
add_command("a", "c", <<["D", "BOOLEAN"], ["D", "b"], ["B", "BOOLEAN"], ["c", "b"], ["INTEGER", "BOOLEAN"], ["c", "BOOLEAN"]>>)
add_query("b", "b", <<["C", "INTEGER"], ["c", "d"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["a", "INTEGER"], ["b", "BOOLEAN"], ["D", "D"], ["B", "INTEGER"]>>, "B")
add_class(a)
add_call_chain(<<B>>)
multiplication
bool_value (true)
add_call_chain(<<a,A>>)
int_value (25)
numerical_negation
add_query("INTEGER", "D", <<["a", "INTEGER"], ["d", "INTEGER"], ["e", "INTEGER"], ["D", "a"], ["d", "e"], ["A", "a"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["INTEGER", "INTEGER"]>>, "D")
add_call_chain(<<A,d,INTEGER,a,C,d,C,B>>)
add_query("D", "a", <<["INTEGER", "D"], ["A", "D"], ["B", "BOOLEAN"], ["D", "INTEGER"], ["D", "INTEGER"]>>, "A")
add_command("a", "B", <<["INTEGER", "INTEGER"], ["c", "a"], ["d", "INTEGER"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["d", "C"], ["e", "INTEGER"], ["D", "A"]>>)
generate_java_code
add_attribute("A", "b", "C")
equals
equals
disjunction
add_call_chain(<<BOOLEAN,D,A,a,b,e,A,e,D>>)
logical_negation
add_query("c", "BOOLEAN", <<["a", "BOOLEAN"], ["e", "INTEGER"], ["e", "BOOLEAN"], ["b", "A"], ["b", "INTEGER"], ["D", "INTEGER"], ["INTEGER", "INTEGER"], ["C", "BOOLEAN"], ["INTEGER", "c"]>>, "b")
add_command("a", "A", <<["a", "BOOLEAN"], ["C", "c"], ["A", "INTEGER"], ["e", "C"]>>)
multiplication
add_attribute("INTEGER", "A", "BOOLEAN")
add_command("BOOLEAN", "e", <<["c", "D"], ["BOOLEAN", "BOOLEAN"], ["D", "INTEGER"]>>)
add_call_chain(<<D,B,D,d,B,INTEGER,b,D,D>>)
type_check
add_call_chain(<<C,e,b>>)
add_attribute("d", "d", "BOOLEAN")
type_check
bool_value (false)
add_attribute("B", "B", "INTEGER")
add_query("c", "d", <<["INTEGER", "B"], ["B", "BOOLEAN"], ["B", "BOOLEAN"]>>, "c")
disjunction
conjunction
add_call_chain(<<INTEGER,D,INTEGER,A,d,A,C,c>>)
add_query("C", "B", <<["A", "D"], ["A", "C"]>>, "C")
int_value (34)
add_attribute("A", "D", "e")
generate_java_code
type_check
bool_value (true)
add_call_chain(<<B,C>>)
conjunction
add_command("a", "BOOLEAN", <<["B", "BOOLEAN"], ["A", "INTEGER"], ["B", "INTEGER"]>>)
logical_negation
add_command("A", "C", <<["A", "BOOLEAN"], ["d", "INTEGER"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "B"]>>)
generate_java_code
int_value (47)
add_attribute("c", "d", "C")
add_command("C", "d", <<["a", "BOOLEAN"], ["d", "INTEGER"], ["e", "BOOLEAN"]>>)
add_call_chain(<<b,d,d>>)
add_command("e", "C", <<["D", "INTEGER"], ["c", "BOOLEAN"], ["C", "d"], ["b", "b"], ["INTEGER", "BOOLEAN"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["b", "e"]>>)
add_query("b", "INTEGER", <<["a", "INTEGER"], ["A", "INTEGER"], ["A", "BOOLEAN"]>>, "b")
add_call_chain(<<c,B,e,d,C,a,a,e,A>>)
add_call_chain(<<e,INTEGER,a,BOOLEAN,C>>)
logical_negation
add_command("C", "A", <<["b", "b"], ["C", "BOOLEAN"]>>)
add_attribute("B", "D", "A")
add_command("A", "c", <<["C", "a"], ["D", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "A"], ["BOOLEAN", "INTEGER"], ["D", "BOOLEAN"]>>)
numerical_negation
logical_negation
add_call_chain(<<B,d,A,INTEGER,A>>)
bool_value (true)
add_call_chain(<<a,B,INTEGER,d>>)
add_attribute("d", "D", "D")
bool_value (false)
add_attribute("C", "C", "BOOLEAN")
add_call_chain(<<D,d,C,c,B,a>>)
add_call_chain(<<B>>)
greater_than
add_attribute("INTEGER", "A", "BOOLEAN")
logical_negation
numerical_negation
add_query("b", "A", <<["BOOLEAN", "B"], ["INTEGER", "BOOLEAN"], ["c", "BOOLEAN"], ["e", "A"], ["b", "A"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["D", "B"]>>, "d")
logical_negation
add_attribute("d", "e", "BOOLEAN")
disjunction
int_value (35)
bool_value (true)
type_check
type_check
logical_negation
logical_negation
less_than
add_call_chain(<<c,B>>)
add_class(c)
add_attribute("c", "INTEGER", "C")
bool_value (false)
add_call_chain(<<e,BOOLEAN,B>>)
add_call_chain(<<e,D,d,a,b>>)
add_attribute("D", "C", "INTEGER")
add_query("b", "B", <<["D", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["e", "INTEGER"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["e", "BOOLEAN"]>>, "b")
generate_java_code
disjunction
add_call_chain(<<b,A,a,C,A,e,e,b,a>>)
add_call_chain(<<e,A,D,a,b,a,C>>)
numerical_negation
type_check
multiplication
generate_java_code
add_command("B", "d", <<["C", "a"], ["B", "INTEGER"], ["BOOLEAN", "b"], ["c", "C"]>>)
bool_value (false)
add_class(A)
add_query("D", "INTEGER", <<["d", "BOOLEAN"], ["e", "B"], ["e", "INTEGER"], ["e", "INTEGER"], ["b", "A"], ["A", "INTEGER"]>>, "a")
add_command("C", "b", <<["D", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "A"]>>)
type_check
add_command("a", "D", <<["C", "A"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "A"], ["d", "INTEGER"], ["d", "INTEGER"]>>)
bool_value (true)
add_query("BOOLEAN", "C", <<["b", "INTEGER"], ["d", "INTEGER"], ["D", "INTEGER"], ["b", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "C"]>>, "A")
add_query("BOOLEAN", "D", <<["INTEGER", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>, "C")
add_call_chain(<<C,a,D,a,A,C,D,B,d>>)
generate_java_code
numerical_negation
numerical_negation
disjunction
numerical_negation
less_than
generate_java_code
type_check
int_value (4)
add_call_chain(<<C>>)
add_attribute("D", "C", "c")
add_call_chain(<<d,C,BOOLEAN,b,BOOLEAN,B,BOOLEAN,d>>)
add_command("B", "e", <<["e", "INTEGER"]>>)
add_call_chain(<<C,BOOLEAN,C,BOOLEAN,D>>)
add_call_chain(<<D,B,d,c,A>>)
