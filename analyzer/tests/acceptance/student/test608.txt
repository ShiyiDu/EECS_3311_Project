add_command("a", "C", <<["D", "e"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>)
int_value (31)
numerical_negation
add_call_chain(<<c,a,c,e,A,e,A,A>>)
less_than
bool_value (true)
add_query("a", "C", <<["D", "B"], ["e", "BOOLEAN"], ["d", "INTEGER"], ["a", "BOOLEAN"], ["c", "INTEGER"], ["a", "A"], ["a", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "INTEGER"]>>, "b")
add_command("INTEGER", "D", <<["A", "A"], ["e", "INTEGER"], ["e", "D"], ["A", "INTEGER"], ["e", "BOOLEAN"]>>)
logical_negation
disjunction
add_command("C", "INTEGER", <<["b", "INTEGER"], ["D", "BOOLEAN"]>>)
add_attribute("BOOLEAN", "e", "INTEGER")
int_value (33)
generate_java_code
disjunction
conjunction
greater_than
add_attribute("C", "B", "BOOLEAN")
add_query("c", "C", <<["INTEGER", "INTEGER"], ["C", "BOOLEAN"], ["A", "c"], ["c", "INTEGER"]>>, "e")
add_query("b", "C", <<["C", "c"], ["d", "INTEGER"], ["BOOLEAN", "INTEGER"], ["e", "BOOLEAN"]>>, "b")
conjunction
logical_negation
generate_java_code
add_query("a", "D", <<["c", "BOOLEAN"], ["c", "INTEGER"], ["e", "b"], ["a", "BOOLEAN"], ["c", "BOOLEAN"]>>, "A")
add_command("a", "c", <<["C", "A"], ["C", "B"]>>)
numerical_negation
greater_than
add_command("a", "B", <<["D", "BOOLEAN"], ["INTEGER", "INTEGER"], ["B", "INTEGER"], ["C", "INTEGER"], ["a", "BOOLEAN"], ["e", "c"], ["B", "INTEGER"], ["d", "INTEGER"]>>)
int_value (36)
generate_java_code
int_value (38)
add_call_chain(<<B,C,D,C,A,A,INTEGER,A>>)
int_value (20)
type_check
add_call_chain(<<BOOLEAN,d,D,BOOLEAN,A,D,A,A>>)
bool_value (true)
numerical_negation
numerical_negation
greater_than
disjunction
add_command("b", "c", <<["a", "BOOLEAN"], ["c", "c"], ["B", "INTEGER"]>>)
bool_value (false)
add_call_chain(<<c,BOOLEAN,e,A,a,D>>)
int_value (19)
add_call_chain(<<e,a,D,a,b,BOOLEAN>>)
add_command("INTEGER", "a", <<["B", "INTEGER"], ["c", "BOOLEAN"], ["C", "c"], ["a", "BOOLEAN"], ["B", "B"], ["D", "INTEGER"], ["B", "BOOLEAN"], ["D", "e"], ["B", "INTEGER"]>>)
type_check
generate_java_code
add_call_chain(<<b>>)
add_call_chain(<<e,D,INTEGER,A,e,INTEGER,e,A,a>>)
add_attribute("B", "a", "BOOLEAN")
int_value (34)
add_query("a", "B", <<["A", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "b"], ["d", "BOOLEAN"], ["e", "C"], ["c", "D"]>>, "d")
type_check
less_than
int_value (38)
add_call_chain(<<B,D,c,c,BOOLEAN,e>>)
add_class(D)
add_call_chain(<<C,a,C,D,e>>)
generate_java_code
add_call_chain(<<C,BOOLEAN>>)
add_query("d", "e", <<["e", "INTEGER"], ["b", "BOOLEAN"], ["c", "INTEGER"], ["d", "d"], ["b", "INTEGER"], ["e", "BOOLEAN"], ["D", "BOOLEAN"]>>, "C")
less_than
numerical_negation
greater_than
add_query("INTEGER", "b", <<["b", "BOOLEAN"], ["B", "D"], ["c", "INTEGER"]>>, "INTEGER")
disjunction
add_class(c)
add_attribute("BOOLEAN", "C", "INTEGER")
add_call_chain(<<a>>)
add_attribute("A", "b", "d")
add_query("B", "e", <<["A", "BOOLEAN"], ["C", "b"]>>, "C")
bool_value (true)
type_check
int_value (17)
bool_value (false)
type_check
add_command("B", "C", <<["d", "A"], ["b", "B"], ["a", "b"], ["c", "BOOLEAN"], ["b", "B"], ["a", "INTEGER"], ["b", "BOOLEAN"], ["b", "INTEGER"]>>)
add_attribute("BOOLEAN", "c", "BOOLEAN")
add_call_chain(<<BOOLEAN,a,C,A,d,C,b,d>>)
type_check
bool_value (true)
add_call_chain(<<D,b,A,c,e,D>>)
add_query("c", "INTEGER", <<["D", "c"]>>, "d")
add_call_chain(<<INTEGER,b>>)
add_attribute("B", "C", "d")
less_than
type_check
modulo
add_command("c", "B", <<["a", "INTEGER"]>>)
add_call_chain(<<C,INTEGER,B,e,d>>)
less_than
logical_negation
numerical_negation
addition
int_value (2)
logical_negation
numerical_negation
add_call_chain(<<d,A,A,b,C>>)
logical_negation
add_call_chain(<<BOOLEAN,D,BOOLEAN,d>>)
modulo
add_call_chain(<<d,D,D,a,C,C,B>>)
bool_value (true)
bool_value (true)
add_call_chain(<<c,INTEGER,a,D,D>>)
numerical_negation
add_attribute("A", "D", "C")
add_query("C", "a", <<["c", "INTEGER"], ["e", "INTEGER"]>>, "c")
numerical_negation
add_command("C", "D", <<["b", "INTEGER"], ["d", "e"], ["a", "INTEGER"], ["D", "INTEGER"]>>)
logical_negation
int_value (19)
add_query("A", "D", <<["b", "INTEGER"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "INTEGER"]>>, "b")
add_call_chain(<<C,a,C,e,b,B,e,c,B>>)
add_call_chain(<<a,A,BOOLEAN,C,BOOLEAN>>)
add_call_chain(<<BOOLEAN,d,A,c>>)
add_command("INTEGER", "C", <<["a", "BOOLEAN"], ["a", "INTEGER"], ["D", "INTEGER"]>>)
add_call_chain(<<a,D,a,A,c,INTEGER,C,C,e>>)
logical_negation
greater_than
logical_negation
generate_java_code
bool_value (true)
numerical_negation
add_attribute("D", "a", "INTEGER")
add_class(e)
add_call_chain(<<b,BOOLEAN>>)
add_attribute("C", "A", "INTEGER")
numerical_negation
int_value (15)
add_command("a", "d", <<["c", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "BOOLEAN"], ["INTEGER", "D"], ["a", "BOOLEAN"]>>)
disjunction
numerical_negation
add_attribute("C", "C", "BOOLEAN")
int_value (13)
int_value (21)
add_command("d", "c", <<["C", "b"], ["C", "D"], ["D", "INTEGER"]>>)
int_value (45)
add_call_chain(<<e,C,d>>)
generate_java_code
add_attribute("a", "d", "BOOLEAN")
add_query("A", "BOOLEAN", <<["c", "d"], ["a", "INTEGER"], ["e", "b"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["c", "a"], ["B", "INTEGER"]>>, "d")
add_call_chain(<<D,B,a,A,INTEGER,BOOLEAN>>)
add_call_chain(<<B>>)
add_command("A", "d", <<["a", "BOOLEAN"], ["C", "INTEGER"], ["D", "BOOLEAN"]>>)
numerical_negation
bool_value (true)
int_value (48)
subtraction
generate_java_code
add_query("b", "A", <<["a", "A"]>>, "D")
add_query("e", "INTEGER", <<["B", "a"], ["c", "BOOLEAN"], ["c", "C"], ["INTEGER", "INTEGER"], ["c", "e"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["B", "BOOLEAN"], ["c", "BOOLEAN"]>>, "D")
int_value (40)
add_command("C", "BOOLEAN", <<["a", "INTEGER"], ["a", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "BOOLEAN"]>>)
add_command("d", "a", <<["C", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["d", "INTEGER"], ["C", "B"]>>)
add_command("b", "a", <<["C", "INTEGER"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["b", "BOOLEAN"]>>)
type_check
add_command("d", "a", <<["D", "INTEGER"], ["e", "INTEGER"], ["e", "INTEGER"], ["c", "BOOLEAN"], ["A", "c"], ["D", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["C", "INTEGER"], ["c", "BOOLEAN"]>>)
logical_negation
add_attribute("D", "d", "INTEGER")
logical_negation
addition
add_attribute("B", "D", "INTEGER")
add_call_chain(<<a,A>>)
add_command("c", "A", <<["b", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "INTEGER"], ["e", "INTEGER"], ["c", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["D", "A"], ["B", "D"]>>)
add_query("a", "e", <<["A", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["D", "INTEGER"], ["C", "INTEGER"]>>, "e")
add_query("D", "d", <<["d", "a"]>>, "b")
int_value (32)
add_class(C)
bool_value (false)
int_value (16)
add_class(C)
bool_value (false)
bool_value (true)
add_call_chain(<<A,c,d,BOOLEAN,c,B,e,d>>)
add_call_chain(<<INTEGER,d,D,B,B,INTEGER,C,D,A>>)
add_command("A", "D", <<["C", "a"], ["C", "C"], ["e", "INTEGER"], ["e", "INTEGER"]>>)
add_query("b", "c", <<["B", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["e", "BOOLEAN"]>>, "C")
add_command("A", "INTEGER", <<["INTEGER", "D"], ["C", "BOOLEAN"], ["a", "BOOLEAN"]>>)
logical_negation
add_class(e)
int_value (33)
logical_negation
add_call_chain(<<INTEGER,A,e,a,C,a>>)
add_call_chain(<<D,a,b,d,B,b,C>>)
numerical_negation
bool_value (false)
numerical_negation
int_value (39)
logical_negation
add_class(BOOLEAN)
logical_negation
type_check
add_call_chain(<<D>>)
logical_negation
int_value (8)
add_command("B", "e", <<["C", "d"], ["A", "INTEGER"]>>)
add_command("B", "D", <<["B", "e"], ["D", "INTEGER"], ["b", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "b"], ["c", "d"], ["c", "INTEGER"], ["B", "D"]>>)
type_check
add_query("A", "BOOLEAN", <<["b", "e"], ["A", "c"], ["C", "INTEGER"], ["C", "INTEGER"], ["BOOLEAN", "e"], ["B", "BOOLEAN"], ["INTEGER", "INTEGER"], ["B", "A"], ["BOOLEAN", "INTEGER"]>>, "a")
add_call_chain(<<A,B,A,D,C,A,B>>)
bool_value (true)
bool_value (true)
bool_value (false)
logical_negation
logical_negation
bool_value (false)
add_call_chain(<<e,e,C,A,B,INTEGER,C>>)
