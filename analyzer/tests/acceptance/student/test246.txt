generate_java_code
equals
add_command("INTEGER", "D", <<["A", "INTEGER"]>>)
numerical_negation
add_attribute("A", "BOOLEAN", "INTEGER")
bool_value (true)
logical_negation
add_attribute("C", "a", "BOOLEAN")
add_attribute("d", "e", "BOOLEAN")
type_check
numerical_negation
add_query("a", "c", <<["a", "INTEGER"], ["a", "INTEGER"], ["c", "c"], ["e", "C"], ["D", "BOOLEAN"], ["A", "B"], ["INTEGER", "INTEGER"], ["C", "BOOLEAN"], ["D", "BOOLEAN"]>>, "D")
addition
add_class(d)
conjunction
disjunction
add_query("A", "BOOLEAN", <<["D", "D"], ["b", "INTEGER"], ["A", "BOOLEAN"], ["b", "D"], ["c", "INTEGER"]>>, "e")
add_attribute("C", "d", "c")
add_call_chain(<<B,c,d,d,A,D,a>>)
add_call_chain(<<INTEGER,D,b,d,B,e>>)
add_query("B", "D", <<["b", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "INTEGER"], ["C", "c"], ["e", "BOOLEAN"], ["b", "A"], ["INTEGER", "d"]>>, "INTEGER")
add_command("c", "B", <<["d", "INTEGER"], ["B", "INTEGER"], ["d", "INTEGER"], ["a", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "D"], ["D", "a"]>>)
add_call_chain(<<INTEGER,b,B,C,a,a,INTEGER>>)
add_attribute("d", "e", "BOOLEAN")
add_call_chain(<<e,c>>)
add_query("D", "c", <<["a", "INTEGER"], ["C", "c"], ["c", "INTEGER"], ["b", "D"], ["D", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>, "e")
add_command("e", "a", <<["A", "INTEGER"], ["A", "BOOLEAN"]>>)
add_command("C", "B", <<["C", "D"], ["INTEGER", "BOOLEAN"], ["e", "D"], ["c", "c"], ["a", "INTEGER"], ["d", "BOOLEAN"], ["a", "a"], ["d", "INTEGER"], ["d", "a"]>>)
add_command("e", "D", <<["b", "BOOLEAN"], ["a", "D"], ["INTEGER", "e"], ["C", "BOOLEAN"], ["B", "INTEGER"], ["c", "C"], ["B", "INTEGER"], ["D", "INTEGER"], ["e", "BOOLEAN"]>>)
add_call_chain(<<BOOLEAN,e,D,d,BOOLEAN,d,BOOLEAN>>)
generate_java_code
add_call_chain(<<A,e,BOOLEAN,C,C,B>>)
int_value (47)
bool_value (true)
add_command("INTEGER", "e", <<["C", "INTEGER"], ["C", "a"], ["a", "INTEGER"], ["b", "b"], ["c", "a"], ["e", "INTEGER"], ["INTEGER", "INTEGER"], ["c", "BOOLEAN"]>>)
add_attribute("c", "a", "INTEGER")
add_call_chain(<<e,B,D,A,a>>)
conjunction
less_than
add_command("INTEGER", "c", <<["C", "BOOLEAN"], ["D", "a"], ["BOOLEAN", "D"]>>)
type_check
bool_value (false)
logical_negation
logical_negation
add_call_chain(<<e,A,d,C,C,a,d,c,a>>)
numerical_negation
generate_java_code
add_attribute("B", "B", "BOOLEAN")
bool_value (true)
bool_value (false)
add_attribute("c", "e", "BOOLEAN")
add_call_chain(<<D,INTEGER,BOOLEAN,B,BOOLEAN>>)
equals
add_query("D", "c", <<["c", "B"], ["a", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "INTEGER"], ["d", "BOOLEAN"], ["d", "INTEGER"], ["A", "INTEGER"], ["B", "INTEGER"]>>, "A")
add_class(B)
int_value (23)
add_query("c", "a", <<["INTEGER", "INTEGER"], ["b", "BOOLEAN"], ["b", "c"], ["C", "INTEGER"], ["b", "A"], ["D", "BOOLEAN"]>>, "C")
int_value (33)
add_command("C", "c", <<["B", "C"], ["BOOLEAN", "INTEGER"]>>)
equals
add_query("a", "D", <<["d", "B"], ["e", "INTEGER"], ["a", "D"]>>, "B")
quotient
add_command("A", "d", <<["INTEGER", "c"], ["e", "INTEGER"], ["A", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["D", "BOOLEAN"], ["a", "BOOLEAN"]>>)
subtraction
int_value (14)
add_attribute("A", "e", "BOOLEAN")
add_attribute("e", "B", "INTEGER")
int_value (38)
add_call_chain(<<d,C,A,C,A>>)
numerical_negation
int_value (46)
logical_negation
add_class(BOOLEAN)
addition
add_class(C)
add_call_chain(<<A,c,C,e,BOOLEAN,C>>)
int_value (16)
add_attribute("d", "A", "INTEGER")
add_attribute("d", "B", "d")
add_command("A", "C", <<["d", "C"], ["b", "INTEGER"], ["d", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>)
add_query("C", "d", <<["INTEGER", "BOOLEAN"], ["d", "a"], ["C", "e"], ["d", "c"], ["b", "BOOLEAN"], ["a", "INTEGER"], ["d", "BOOLEAN"]>>, "e")
bool_value (false)
conjunction
add_command("b", "e", <<["b", "d"], ["a", "BOOLEAN"], ["D", "C"], ["D", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "INTEGER"], ["D", "B"], ["B", "BOOLEAN"]>>)
logical_negation
add_query("e", "A", <<["c", "BOOLEAN"], ["b", "INTEGER"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["B", "e"], ["D", "BOOLEAN"], ["e", "INTEGER"], ["d", "INTEGER"], ["C", "D"]>>, "e")
bool_value (true)
logical_negation
int_value (47)
int_value (35)
bool_value (false)
add_call_chain(<<a,a,A,a>>)
quotient
int_value (16)
add_attribute("e", "c", "D")
add_query("C", "d", <<["c", "INTEGER"], ["A", "BOOLEAN"], ["e", "a"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "A"], ["e", "C"], ["e", "d"]>>, "C")
generate_java_code
add_command("B", "d", <<["BOOLEAN", "INTEGER"], ["a", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "BOOLEAN"]>>)
generate_java_code
add_command("A", "a", <<["b", "d"], ["d", "INTEGER"], ["e", "INTEGER"], ["A", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["B", "B"]>>)
add_query("d", "d", <<["D", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["C", "INTEGER"], ["B", "INTEGER"], ["C", "BOOLEAN"], ["D", "c"], ["A", "INTEGER"], ["A", "INTEGER"]>>, "a")
add_attribute("a", "c", "c")
logical_negation
type_check
add_attribute("d", "a", "BOOLEAN")
type_check
add_attribute("b", "e", "BOOLEAN")
add_attribute("B", "a", "INTEGER")
add_attribute("c", "A", "INTEGER")
logical_negation
generate_java_code
greater_than
add_class(D)
bool_value (false)
subtraction
add_call_chain(<<c,c,c,b,B,C>>)
bool_value (false)
less_than
bool_value (false)
bool_value (false)
generate_java_code
add_command("A", "A", <<["A", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "C"]>>)
greater_than
add_query("C", "B", <<["a", "BOOLEAN"]>>, "d")
logical_negation
add_query("e", "C", <<["d", "INTEGER"], ["C", "D"], ["c", "BOOLEAN"], ["c", "INTEGER"]>>, "e")
add_class(a)
int_value (35)
conjunction
generate_java_code
add_command("BOOLEAN", "d", <<["BOOLEAN", "BOOLEAN"], ["b", "BOOLEAN"], ["d", "INTEGER"], ["e", "a"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "INTEGER"], ["e", "A"], ["a", "INTEGER"]>>)
bool_value (true)
less_than
logical_negation
subtraction
type_check
add_call_chain(<<A,b,C,B,B>>)
bool_value (true)
add_attribute("D", "B", "INTEGER")
add_query("c", "B", <<["D", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["INTEGER", "INTEGER"]>>, "C")
add_query("B", "BOOLEAN", <<["D", "A"], ["a", "BOOLEAN"], ["D", "INTEGER"], ["c", "BOOLEAN"]>>, "c")
add_query("D", "C", <<["BOOLEAN", "D"], ["D", "INTEGER"], ["B", "e"], ["e", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "D"], ["a", "INTEGER"], ["D", "INTEGER"]>>, "D")
add_query("A", "B", <<["B", "INTEGER"]>>, "d")
add_attribute("B", "C", "INTEGER")
numerical_negation
add_command("A", "A", <<["A", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "INTEGER"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["INTEGER", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "d"], ["e", "A"]>>)
int_value (33)
add_attribute("c", "d", "BOOLEAN")
add_command("D", "BOOLEAN", <<["A", "INTEGER"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["B", "INTEGER"], ["D", "INTEGER"], ["B", "INTEGER"]>>)
int_value (38)
add_call_chain(<<A,D>>)
add_command("d", "D", <<["d", "INTEGER"], ["C", "D"], ["e", "B"], ["A", "INTEGER"]>>)
add_call_chain(<<A>>)
add_call_chain(<<D,a,BOOLEAN,INTEGER,a,c,d>>)
int_value (45)
add_call_chain(<<D,d,D,B,b,A,D,a,a>>)
numerical_negation
add_attribute("a", "a", "A")
bool_value (false)
numerical_negation
int_value (11)
logical_negation
add_query("e", "c", <<["D", "BOOLEAN"], ["c", "INTEGER"], ["B", "INTEGER"], ["BOOLEAN", "INTEGER"], ["C", "a"], ["c", "INTEGER"], ["INTEGER", "BOOLEAN"], ["B", "BOOLEAN"]>>, "d")
add_class(A)
add_command("INTEGER", "INTEGER", <<["INTEGER", "INTEGER"], ["a", "INTEGER"], ["A", "BOOLEAN"], ["a", "b"], ["BOOLEAN", "INTEGER"], ["d", "B"]>>)
add_command("e", "A", <<["BOOLEAN", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "INTEGER"], ["D", "INTEGER"], ["d", "B"], ["b", "INTEGER"], ["b", "e"], ["A", "INTEGER"], ["c", "d"]>>)
add_class(d)
numerical_negation
generate_java_code
add_query("D", "D", <<["C", "D"], ["e", "D"], ["A", "INTEGER"]>>, "B")
add_query("c", "B", <<["e", "BOOLEAN"], ["d", "INTEGER"], ["a", "INTEGER"], ["B", "INTEGER"], ["e", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "A"]>>, "INTEGER")
bool_value (true)
add_attribute("A", "e", "BOOLEAN")
int_value (17)
add_command("C", "D", <<["b", "INTEGER"], ["a", "d"]>>)
subtraction
add_call_chain(<<D,INTEGER,a,D,C,C,e,INTEGER,a>>)
disjunction
disjunction
logical_negation
generate_java_code
add_call_chain(<<c,A,A,B,A,C,C>>)
numerical_negation
add_class(a)
generate_java_code
add_attribute("A", "d", "INTEGER")
addition
add_attribute("B", "A", "b")
add_class(BOOLEAN)
add_command("c", "c", <<["B", "BOOLEAN"], ["b", "BOOLEAN"], ["b", "b"], ["d", "BOOLEAN"], ["C", "a"], ["b", "BOOLEAN"], ["A", "BOOLEAN"]>>)
add_class(A)
generate_java_code
add_query("b", "B", <<["a", "B"], ["A", "BOOLEAN"], ["b", "b"], ["b", "BOOLEAN"], ["INTEGER", "INTEGER"]>>, "C")
add_call_chain(<<c,d,e,d>>)
bool_value (false)
logical_negation
generate_java_code
add_command("e", "a", <<["B", "BOOLEAN"], ["B", "D"], ["e", "a"], ["a", "INTEGER"], ["C", "BOOLEAN"], ["b", "BOOLEAN"]>>)
generate_java_code
conjunction
greater_than
add_call_chain(<<INTEGER>>)
generate_java_code
add_call_chain(<<C,a,d,c>>)
add_command("C", "c", <<["A", "BOOLEAN"], ["C", "INTEGER"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["c", "INTEGER"], ["a", "BOOLEAN"]>>)
generate_java_code
conjunction
logical_negation
numerical_negation
type_check
add_call_chain(<<A,a,C,d,d>>)
add_attribute("BOOLEAN", "C", "BOOLEAN")
add_query("A", "C", <<["D", "INTEGER"], ["d", "D"], ["C", "A"], ["c", "C"]>>, "C")
add_attribute("A", "A", "INTEGER")
add_query("a", "C", <<["D", "BOOLEAN"], ["a", "a"], ["INTEGER", "INTEGER"]>>, "c")
add_call_chain(<<A,b,a,d,c,A>>)
add_call_chain(<<C,C,A,e,B,b,D,A,c>>)
add_attribute("c", "b", "A")
add_command("b", "d", <<["d", "BOOLEAN"], ["INTEGER", "d"]>>)
add_query("A", "e", <<["B", "INTEGER"]>>, "e")
add_query("C", "BOOLEAN", <<["B", "BOOLEAN"], ["c", "INTEGER"], ["d", "BOOLEAN"], ["a", "INTEGER"], ["B", "INTEGER"]>>, "BOOLEAN")
int_value (10)
add_command("C", "A", <<["D", "INTEGER"], ["B", "INTEGER"], ["c", "INTEGER"], ["A", "INTEGER"], ["BOOLEAN", "INTEGER"]>>)
add_command("A", "e", <<["c", "BOOLEAN"], ["a", "INTEGER"], ["e", "INTEGER"], ["A", "D"], ["A", "BOOLEAN"], ["C", "C"], ["d", "b"], ["e", "BOOLEAN"]>>)
add_call_chain(<<c,B,e,INTEGER>>)
bool_value (true)
add_query("D", "d", <<["A", "B"], ["b", "INTEGER"], ["C", "INTEGER"], ["A", "INTEGER"], ["b", "BOOLEAN"], ["D", "A"]>>, "INTEGER")
bool_value (false)
add_class(a)
bool_value (false)
disjunction
add_attribute("e", "A", "D")
bool_value (true)
bool_value (true)
logical_negation
add_class(B)
add_attribute("b", "b", "INTEGER")
add_attribute("d", "BOOLEAN", "B")
bool_value (true)
logical_negation
add_call_chain(<<c,b>>)
add_query("C", "b", <<["e", "INTEGER"], ["d", "INTEGER"], ["e", "e"], ["INTEGER", "d"], ["c", "BOOLEAN"], ["a", "A"], ["c", "b"], ["B", "c"], ["D", "INTEGER"]>>, "d")
add_attribute("c", "B", "BOOLEAN")
numerical_negation
add_call_chain(<<c,D>>)
type_check
add_attribute("e", "C", "BOOLEAN")
add_query("B", "BOOLEAN", <<["d", "INTEGER"], ["b", "e"], ["a", "INTEGER"], ["INTEGER", "INTEGER"], ["B", "INTEGER"], ["A", "e"], ["C", "A"], ["D", "INTEGER"], ["B", "BOOLEAN"]>>, "a")
add_call_chain(<<BOOLEAN,d,A,B,C,D,a>>)
numerical_negation
int_value (3)
disjunction
type_check
add_attribute("BOOLEAN", "C", "c")
add_command("b", "B", <<["C", "INTEGER"], ["d", "INTEGER"], ["c", "INTEGER"], ["d", "INTEGER"], ["d", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["C", "INTEGER"], ["c", "D"]>>)
add_call_chain(<<A,B,a,B>>)
add_attribute("B", "A", "B")
add_query("D", "a", <<["d", "A"], ["B", "INTEGER"], ["e", "C"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["C", "c"], ["BOOLEAN", "BOOLEAN"]>>, "A")
numerical_negation
conjunction
add_call_chain(<<a,d,c,D,A,b,D,b,d>>)
add_call_chain(<<e,C,e,C,D,D,A>>)
add_call_chain(<<c,INTEGER,b>>)
int_value (49)
add_query("a", "D", <<["e", "BOOLEAN"], ["D", "INTEGER"], ["e", "INTEGER"]>>, "A")
add_query("C", "BOOLEAN", <<["B", "c"], ["e", "d"], ["A", "INTEGER"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["BOOLEAN", "a"], ["a", "BOOLEAN"], ["A", "BOOLEAN"]>>, "INTEGER")
add_attribute("d", "C", "BOOLEAN")
add_command("a", "a", <<["INTEGER", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["c", "B"], ["C", "A"], ["B", "BOOLEAN"]>>)
bool_value (false)
add_command("INTEGER", "C", <<["b", "A"], ["e", "B"], ["b", "B"]>>)
int_value (33)
add_call_chain(<<A,B,INTEGER>>)
logical_negation
add_query("c", "B", <<["d", "BOOLEAN"]>>, "e")
logical_negation
type_check
add_command("A", "d", <<["e", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "INTEGER"], ["D", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>)
add_attribute("d", "d", "c")
add_attribute("e", "A", "BOOLEAN")
add_attribute("B", "D", "INTEGER")
numerical_negation
