add_command("e", "D", <<["c", "BOOLEAN"], ["a", "BOOLEAN"], ["BOOLEAN", "e"], ["B", "INTEGER"], ["e", "A"], ["A", "b"]>>)
less_than
bool_value (true)
disjunction
add_attribute("D", "c", "INTEGER")
bool_value (true)
numerical_negation
numerical_negation
add_call_chain(<<A,c,D,d,C,e,e,b,INTEGER>>)
int_value (24)
less_than
int_value (36)
int_value (5)
generate_java_code
add_attribute("D", "a", "C")
int_value (15)
bool_value (true)
add_call_chain(<<A,e,d,a>>)
add_class(b)
logical_negation
type_check
add_command("c", "d", <<["C", "BOOLEAN"], ["C", "INTEGER"]>>)
logical_negation
generate_java_code
add_call_chain(<<B,C,a,c>>)
bool_value (true)
bool_value (false)
add_attribute("c", "D", "BOOLEAN")
add_query("C", "c", <<["c", "BOOLEAN"], ["INTEGER", "B"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "A"], ["D", "c"], ["d", "c"], ["b", "INTEGER"], ["e", "BOOLEAN"]>>, "A")
disjunction
logical_negation
generate_java_code
add_attribute("c", "A", "b")
greater_than
bool_value (false)
numerical_negation
add_command("BOOLEAN", "c", <<["C", "e"], ["a", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>)
generate_java_code
add_command("d", "B", <<["D", "A"], ["C", "BOOLEAN"], ["A", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["d", "INTEGER"]>>)
generate_java_code
add_command("B", "b", <<["A", "BOOLEAN"], ["e", "b"], ["c", "BOOLEAN"], ["INTEGER", "a"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["c", "BOOLEAN"]>>)
int_value (30)
add_command("C", "C", <<["c", "BOOLEAN"]>>)
bool_value (true)
addition
add_query("c", "c", <<["c", "BOOLEAN"], ["INTEGER", "d"], ["c", "C"], ["d", "INTEGER"], ["b", "BOOLEAN"], ["D", "a"], ["b", "BOOLEAN"]>>, "INTEGER")
add_call_chain(<<c,B>>)
disjunction
modulo
add_call_chain(<<B,e,c,a,c,e,b,e>>)
add_call_chain(<<d,D,BOOLEAN,C,a,d,e,d>>)
numerical_negation
add_class(A)
type_check
int_value (7)
numerical_negation
add_command("B", "BOOLEAN", <<["c", "BOOLEAN"], ["a", "b"], ["D", "e"], ["D", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "BOOLEAN"], ["INTEGER", "b"], ["B", "BOOLEAN"]>>)
add_attribute("d", "A", "BOOLEAN")
add_command("D", "BOOLEAN", <<["D", "BOOLEAN"], ["B", "INTEGER"], ["A", "INTEGER"], ["e", "BOOLEAN"], ["d", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "a"], ["A", "INTEGER"]>>)
add_attribute("A", "d", "BOOLEAN")
add_attribute("c", "INTEGER", "INTEGER")
add_query("A", "B", <<["d", "BOOLEAN"], ["d", "a"], ["A", "B"], ["b", "C"], ["D", "a"], ["B", "D"], ["d", "d"], ["c", "D"], ["BOOLEAN", "BOOLEAN"]>>, "BOOLEAN")
subtraction
add_call_chain(<<c,d,A,e,BOOLEAN,d,C>>)
add_query("e", "A", <<["B", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "INTEGER"]>>, "c")
quotient
add_query("d", "c", <<["C", "B"], ["A", "D"], ["a", "A"], ["a", "A"], ["D", "C"], ["d", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "A"], ["C", "D"]>>, "A")
add_command("INTEGER", "B", <<["d", "INTEGER"], ["d", "BOOLEAN"], ["b", "INTEGER"]>>)
add_query("D", "d", <<["e", "INTEGER"], ["b", "INTEGER"]>>, "D")
add_call_chain(<<a,e>>)
add_class(BOOLEAN)
add_attribute("b", "c", "BOOLEAN")
int_value (14)
add_attribute("C", "B", "BOOLEAN")
int_value (13)
add_query("BOOLEAN", "A", <<["C", "INTEGER"], ["B", "b"], ["a", "INTEGER"]>>, "b")
add_call_chain(<<C,e,e,b,B,b,D>>)
add_query("B", "c", <<["D", "BOOLEAN"], ["c", "INTEGER"], ["B", "C"], ["e", "BOOLEAN"], ["c", "c"]>>, "A")
logical_negation
add_call_chain(<<d,A,B,d>>)
add_call_chain(<<D,A,C,A,INTEGER,INTEGER>>)
int_value (40)
numerical_negation
add_class(B)
add_command("b", "b", <<["a", "A"], ["B", "BOOLEAN"], ["e", "b"], ["C", "INTEGER"], ["D", "A"]>>)
logical_negation
logical_negation
add_call_chain(<<C,c,C>>)
generate_java_code
bool_value (true)
add_class(a)
int_value (29)
add_call_chain(<<e,d,a,C,INTEGER,BOOLEAN,D,C>>)
disjunction
add_query("D", "C", <<["C", "BOOLEAN"], ["e", "INTEGER"], ["INTEGER", "INTEGER"], ["e", "INTEGER"]>>, "b")
add_call_chain(<<B,D,B,INTEGER,e>>)
numerical_negation
multiplication
add_query("e", "A", <<["B", "A"]>>, "a")
int_value (29)
add_call_chain(<<D,e,e,c,INTEGER>>)
add_query("D", "D", <<["B", "BOOLEAN"], ["e", "INTEGER"], ["D", "BOOLEAN"], ["c", "INTEGER"], ["D", "INTEGER"], ["C", "BOOLEAN"]>>, "d")
add_command("b", "e", <<["A", "INTEGER"], ["b", "D"], ["b", "A"], ["D", "INTEGER"], ["d", "e"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["B", "BOOLEAN"]>>)
add_call_chain(<<D,b,c>>)
equals
bool_value (true)
add_command("e", "A", <<["INTEGER", "BOOLEAN"]>>)
add_query("D", "e", <<["D", "b"], ["A", "INTEGER"], ["d", "d"], ["d", "C"], ["A", "BOOLEAN"]>>, "d")
logical_negation
generate_java_code
add_attribute("D", "B", "INTEGER")
generate_java_code
add_class(A)
add_query("D", "c", <<["D", "BOOLEAN"]>>, "c")
add_command("A", "D", <<["a", "INTEGER"], ["A", "INTEGER"], ["e", "BOOLEAN"], ["B", "c"], ["B", "INTEGER"], ["d", "B"], ["c", "BOOLEAN"], ["INTEGER", "e"], ["B", "B"]>>)
int_value (46)
add_command("c", "D", <<["D", "INTEGER"], ["C", "BOOLEAN"]>>)
disjunction
less_than
int_value (5)
add_command("d", "C", <<["A", "D"], ["D", "INTEGER"], ["C", "INTEGER"], ["d", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
generate_java_code
add_call_chain(<<d,D,INTEGER,C,A,D,e,d>>)
add_command("d", "e", <<["d", "a"]>>)
bool_value (true)
add_query("A", "b", <<["d", "BOOLEAN"]>>, "e")
add_query("INTEGER", "B", <<["A", "A"], ["B", "BOOLEAN"], ["D", "D"], ["B", "INTEGER"]>>, "D")
add_command("B", "b", <<["B", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "b"], ["B", "INTEGER"], ["b", "BOOLEAN"], ["c", "BOOLEAN"]>>)
int_value (37)
add_attribute("d", "a", "BOOLEAN")
add_command("b", "B", <<["d", "INTEGER"], ["e", "INTEGER"]>>)
numerical_negation
addition
add_call_chain(<<a,d,A>>)
int_value (23)
add_call_chain(<<A,b,e>>)
add_query("b", "b", <<["D", "BOOLEAN"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "a"], ["A", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "B"], ["b", "BOOLEAN"]>>, "e")
add_call_chain(<<A,a,b,b,BOOLEAN,B,A>>)
conjunction
bool_value (true)
less_than
greater_than
add_attribute("c", "d", "a")
int_value (10)
logical_negation
conjunction
bool_value (true)
generate_java_code
add_call_chain(<<e,B,d,a,c>>)
add_call_chain(<<c,D,e>>)
int_value (10)
bool_value (true)
add_command("B", "c", <<["b", "INTEGER"], ["e", "e"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["C", "BOOLEAN"]>>)
type_check
add_class(a)
less_than
numerical_negation
bool_value (true)
add_attribute("C", "e", "B")
add_attribute("D", "BOOLEAN", "INTEGER")
add_query("C", "a", <<["C", "d"], ["e", "INTEGER"], ["e", "BOOLEAN"], ["e", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>, "a")
add_call_chain(<<D,C,c,D,c>>)
add_call_chain(<<a,c,d,b,C,a>>)
add_attribute("A", "b", "c")
type_check
add_call_chain(<<D,d,a,C,C,d>>)
add_attribute("a", "D", "BOOLEAN")
numerical_negation
bool_value (false)
addition
add_command("e", "C", <<["B", "INTEGER"], ["INTEGER", "INTEGER"], ["BOOLEAN", "INTEGER"], ["C", "BOOLEAN"], ["c", "c"]>>)
int_value (36)
add_attribute("a", "INTEGER", "INTEGER")
add_attribute("B", "b", "b")
add_attribute("B", "INTEGER", "INTEGER")
type_check
equals
add_command("INTEGER", "e", <<["c", "BOOLEAN"]>>)
add_command("e", "a", <<["BOOLEAN", "INTEGER"]>>)
type_check
add_call_chain(<<d>>)
add_call_chain(<<a,B,e,c>>)
conjunction
add_attribute("D", "c", "c")
bool_value (true)
bool_value (false)
numerical_negation
generate_java_code
add_call_chain(<<a,B,B,e,A,BOOLEAN,b,A>>)
numerical_negation
numerical_negation
subtraction
add_attribute("e", "B", "INTEGER")
add_call_chain(<<D,A,b>>)
int_value (18)
generate_java_code
add_attribute("b", "b", "BOOLEAN")
numerical_negation
generate_java_code
bool_value (false)
numerical_negation
add_call_chain(<<BOOLEAN,d,C,c,A,b,A,INTEGER>>)
add_attribute("d", "c", "d")
type_check
int_value (24)
add_command("B", "A", <<["a", "a"], ["A", "BOOLEAN"], ["A", "d"], ["a", "B"]>>)
int_value (5)
numerical_negation
add_call_chain(<<b,D,C,D,d,e,C,INTEGER,b>>)
add_call_chain(<<b,d,c,b,e,B,d>>)
add_class(d)
logical_negation
generate_java_code
numerical_negation
generate_java_code
generate_java_code
