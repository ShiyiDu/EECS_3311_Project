multiplication
add_command("D", "C", <<["B", "BOOLEAN"], ["C", "D"], ["d", "BOOLEAN"], ["C", "BOOLEAN"]>>)
add_query("d", "B", <<["b", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "BOOLEAN"], ["INTEGER", "A"]>>, "e")
bool_value (false)
greater_than
add_query("B", "BOOLEAN", <<["A", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "INTEGER"], ["D", "BOOLEAN"], ["e", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["c", "BOOLEAN"]>>, "e")
add_attribute("e", "C", "d")
add_call_chain(<<A,a,d,A,a,A,a,C,b>>)
type_check
bool_value (false)
numerical_negation
numerical_negation
add_class(b)
add_attribute("d", "e", "INTEGER")
logical_negation
add_query("d", "c", <<["C", "BOOLEAN"], ["B", "INTEGER"], ["a", "BOOLEAN"], ["b", "b"], ["INTEGER", "BOOLEAN"], ["A", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>, "d")
conjunction
add_call_chain(<<d,e,INTEGER>>)
subtraction
add_call_chain(<<INTEGER>>)
generate_java_code
add_call_chain(<<C,c,C>>)
add_command("A", "c", <<["e", "a"], ["B", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "INTEGER"], ["D", "B"], ["A", "D"], ["A", "BOOLEAN"]>>)
add_call_chain(<<c,C>>)
add_command("INTEGER", "A", <<["C", "INTEGER"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["A", "INTEGER"], ["D", "INTEGER"]>>)
bool_value (true)
add_command("c", "D", <<["e", "e"], ["A", "C"], ["INTEGER", "INTEGER"], ["a", "INTEGER"], ["b", "BOOLEAN"]>>)
conjunction
equals
disjunction
add_query("c", "d", <<["C", "b"], ["C", "e"], ["d", "INTEGER"], ["a", "B"]>>, "e")
bool_value (false)
numerical_negation
numerical_negation
add_attribute("D", "D", "BOOLEAN")
greater_than
less_than
int_value (45)
generate_java_code
add_attribute("e", "d", "BOOLEAN")
type_check
add_command("b", "e", <<["B", "INTEGER"], ["A", "d"], ["e", "D"], ["BOOLEAN", "INTEGER"], ["e", "BOOLEAN"], ["B", "INTEGER"], ["A", "d"]>>)
int_value (41)
add_call_chain(<<C,d,d,A,c,BOOLEAN,INTEGER>>)
add_attribute("c", "B", "BOOLEAN")
numerical_negation
numerical_negation
add_query("BOOLEAN", "d", <<["INTEGER", "INTEGER"], ["e", "INTEGER"], ["B", "B"]>>, "BOOLEAN")
add_command("B", "e", <<["D", "B"], ["B", "D"], ["C", "B"]>>)
add_query("A", "B", <<["d", "BOOLEAN"]>>, "INTEGER")
add_command("B", "c", <<["a", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "INTEGER"], ["a", "INTEGER"], ["B", "BOOLEAN"], ["C", "A"], ["b", "BOOLEAN"], ["e", "b"]>>)
int_value (28)
add_attribute("e", "B", "c")
add_query("C", "a", <<["e", "BOOLEAN"], ["D", "B"], ["C", "b"], ["c", "BOOLEAN"], ["D", "c"], ["b", "d"], ["D", "c"]>>, "B")
add_call_chain(<<e,B,BOOLEAN,C,D,C,e,d,C>>)
add_call_chain(<<e,A,e,INTEGER,d,INTEGER,B,a,C>>)
conjunction
int_value (47)
add_command("D", "b", <<["B", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["INTEGER", "INTEGER"], ["B", "INTEGER"], ["A", "BOOLEAN"]>>)
type_check
type_check
logical_negation
conjunction
add_class(d)
int_value (25)
logical_negation
int_value (27)
conjunction
add_attribute("A", "BOOLEAN", "INTEGER")
add_command("B", "D", <<["D", "INTEGER"], ["BOOLEAN", "INTEGER"], ["C", "d"], ["C", "INTEGER"], ["e", "INTEGER"], ["c", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "c"], ["e", "BOOLEAN"]>>)
add_query("C", "A", <<["C", "BOOLEAN"], ["b", "INTEGER"], ["D", "e"], ["B", "BOOLEAN"], ["D", "D"], ["e", "BOOLEAN"], ["A", "INTEGER"]>>, "A")
type_check
int_value (5)
int_value (21)
add_attribute("e", "e", "BOOLEAN")
int_value (35)
add_call_chain(<<BOOLEAN,B,c,B,B,BOOLEAN,B>>)
add_call_chain(<<b,C,D,e,c,a,B,BOOLEAN,A>>)
add_call_chain(<<c,C,C>>)
numerical_negation
int_value (40)
add_call_chain(<<c,e,C,a,e,INTEGER,C>>)
add_query("b", "a", <<["C", "INTEGER"], ["B", "BOOLEAN"], ["d", "A"], ["B", "D"], ["BOOLEAN", "INTEGER"]>>, "C")
addition
type_check
add_command("c", "C", <<["C", "INTEGER"], ["d", "BOOLEAN"], ["A", "INTEGER"], ["B", "INTEGER"], ["D", "e"], ["C", "b"]>>)
bool_value (true)
logical_negation
int_value (8)
logical_negation
add_class(B)
numerical_negation
add_attribute("B", "D", "BOOLEAN")
add_class(BOOLEAN)
add_call_chain(<<c,c,b,C,b,A>>)
add_call_chain(<<A,A,C,d,C,c,b>>)
type_check
add_class(D)
add_query("d", "d", <<["b", "BOOLEAN"], ["D", "INTEGER"], ["B", "C"], ["D", "INTEGER"], ["D", "A"], ["C", "INTEGER"]>>, "A")
add_attribute("A", "B", "D")
add_query("B", "e", <<["b", "c"], ["A", "C"], ["a", "BOOLEAN"], ["d", "INTEGER"], ["d", "INTEGER"], ["A", "c"], ["e", "INTEGER"]>>, "e")
add_call_chain(<<a>>)
add_command("c", "a", <<["C", "INTEGER"], ["B", "INTEGER"], ["B", "BOOLEAN"]>>)
numerical_negation
add_command("BOOLEAN", "B", <<["a", "B"], ["BOOLEAN", "BOOLEAN"], ["C", "INTEGER"], ["B", "e"]>>)
add_call_chain(<<c,A,A,c>>)
numerical_negation
bool_value (false)
logical_negation
add_call_chain(<<e,d,d,b,D,BOOLEAN>>)
add_attribute("B", "B", "INTEGER")
bool_value (false)
add_call_chain(<<B,C,D,e,d,b,a>>)
numerical_negation
equals
greater_than
add_query("C", "d", <<["d", "d"], ["c", "A"], ["a", "d"], ["a", "c"], ["INTEGER", "BOOLEAN"], ["d", "e"], ["B", "a"], ["A", "INTEGER"], ["D", "INTEGER"]>>, "INTEGER")
type_check
add_command("C", "b", <<["A", "BOOLEAN"], ["b", "c"], ["B", "BOOLEAN"], ["A", "d"], ["b", "INTEGER"]>>)
logical_negation
generate_java_code
bool_value (false)
add_call_chain(<<c,c,c,b,D,a,C,c>>)
add_class(A)
add_call_chain(<<D,d,A,D,D>>)
type_check
bool_value (false)
int_value (37)
type_check
int_value (38)
add_class(e)
type_check
numerical_negation
int_value (45)
logical_negation
add_attribute("A", "c", "BOOLEAN")
add_query("A", "B", <<["B", "b"], ["C", "A"], ["C", "BOOLEAN"]>>, "D")
bool_value (true)
disjunction
bool_value (true)
add_call_chain(<<b,D,c,d,D,a,D,INTEGER>>)
add_call_chain(<<C,a,C,INTEGER,BOOLEAN,b>>)
logical_negation
add_call_chain(<<B,c,b,B,B,c>>)
greater_than
modulo
add_call_chain(<<D,d,c,A,BOOLEAN>>)
add_attribute("C", "b", "INTEGER")
add_call_chain(<<D,B,D,c,d,B,c>>)
add_attribute("B", "D", "INTEGER")
int_value (34)
add_call_chain(<<b,A,a>>)
add_attribute("b", "A", "c")
add_attribute("A", "A", "BOOLEAN")
add_query("e", "c", <<["A", "BOOLEAN"]>>, "a")
type_check
add_call_chain(<<e,INTEGER,c,B,C,C,A,D,C>>)
logical_negation
add_attribute("B", "c", "INTEGER")
add_query("D", "b", <<["B", "INTEGER"], ["c", "e"], ["c", "e"], ["C", "INTEGER"], ["d", "INTEGER"], ["A", "INTEGER"], ["b", "C"], ["a", "B"]>>, "a")
bool_value (false)
logical_negation
add_call_chain(<<d,A,D>>)
add_attribute("d", "e", "BOOLEAN")
conjunction
generate_java_code
numerical_negation
add_query("c", "A", <<["c", "B"], ["a", "a"], ["D", "BOOLEAN"], ["d", "BOOLEAN"], ["e", "INTEGER"], ["B", "BOOLEAN"], ["INTEGER", "a"], ["c", "C"]>>, "BOOLEAN")
numerical_negation
int_value (35)
int_value (2)
numerical_negation
logical_negation
add_query("a", "INTEGER", <<["INTEGER", "INTEGER"], ["a", "BOOLEAN"], ["a", "A"], ["e", "INTEGER"], ["A", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "INTEGER"], ["A", "INTEGER"]>>, "d")
conjunction
add_query("e", "e", <<["C", "B"], ["A", "BOOLEAN"], ["e", "A"]>>, "A")
add_query("C", "A", <<["D", "BOOLEAN"]>>, "C")
int_value (14)
add_command("c", "c", <<["c", "C"]>>)
equals
add_command("C", "D", <<["D", "BOOLEAN"], ["b", "e"], ["BOOLEAN", "BOOLEAN"]>>)
add_call_chain(<<b>>)
add_class(D)
bool_value (true)
bool_value (false)
add_command("C", "B", <<["C", "BOOLEAN"], ["d", "INTEGER"], ["INTEGER", "INTEGER"], ["B", "INTEGER"], ["c", "A"], ["c", "INTEGER"], ["A", "INTEGER"]>>)
bool_value (true)
bool_value (true)
add_query("B", "A", <<["c", "INTEGER"], ["B", "INTEGER"], ["d", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["C", "BOOLEAN"]>>, "D")
add_call_chain(<<d,b>>)
bool_value (true)
add_call_chain(<<D,c,INTEGER>>)
addition
numerical_negation
logical_negation
generate_java_code
quotient
add_call_chain(<<INTEGER>>)
add_call_chain(<<e,b,B,a,d,c,c,C>>)
logical_negation
type_check
disjunction
addition
subtraction
bool_value (true)
add_class(BOOLEAN)
add_attribute("c", "a", "INTEGER")
add_query("D", "d", <<["c", "C"], ["A", "INTEGER"], ["C", "d"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["a", "INTEGER"]>>, "d")
add_call_chain(<<e,b>>)
add_query("D", "B", <<["C", "INTEGER"], ["D", "BOOLEAN"], ["c", "INTEGER"], ["b", "INTEGER"], ["c", "INTEGER"]>>, "B")
bool_value (false)
add_attribute("c", "c", "BOOLEAN")
int_value (14)
bool_value (false)
generate_java_code
add_command("A", "B", <<["e", "INTEGER"], ["D", "BOOLEAN"]>>)
add_class(C)
add_query("B", "D", <<["a", "BOOLEAN"]>>, "b")
logical_negation
int_value (8)
type_check
add_call_chain(<<A>>)
