add_attribute("a", "D", "a")
add_attribute("D", "e", "BOOLEAN")
add_call_chain(<<C,a,a,d,d>>)
equals
logical_negation
add_class(e)
multiplication
add_query("BOOLEAN", "b", <<["D", "b"], ["C", "BOOLEAN"], ["d", "BOOLEAN"], ["d", "BOOLEAN"]>>, "e")
generate_java_code
add_query("C", "b", <<["e", "INTEGER"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "INTEGER"], ["D", "d"], ["b", "BOOLEAN"], ["B", "b"]>>, "A")
type_check
add_call_chain(<<D,d,BOOLEAN,c,a,a,D,b,a>>)
add_attribute("B", "b", "BOOLEAN")
int_value (41)
add_class(d)
add_class(INTEGER)
add_call_chain(<<BOOLEAN,B,A,B,D,A,b,A>>)
add_command("A", "c", <<["C", "BOOLEAN"], ["D", "A"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["BOOLEAN", "B"], ["B", "INTEGER"], ["a", "BOOLEAN"], ["C", "D"], ["A", "INTEGER"]>>)
add_command("c", "B", <<["a", "INTEGER"], ["a", "INTEGER"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["BOOLEAN", "C"], ["A", "D"], ["D", "BOOLEAN"], ["e", "A"], ["A", "d"]>>)
numerical_negation
int_value (16)
add_query("C", "e", <<["d", "BOOLEAN"], ["c", "D"], ["c", "A"], ["b", "e"], ["d", "C"], ["B", "BOOLEAN"]>>, "e")
add_call_chain(<<d,B,C,B,A>>)
add_attribute("A", "d", "BOOLEAN")
add_call_chain(<<BOOLEAN,d,B>>)
add_call_chain(<<BOOLEAN,A,C,D,INTEGER>>)
add_command("B", "d", <<["b", "INTEGER"], ["B", "D"], ["C", "b"], ["d", "INTEGER"]>>)
add_attribute("A", "D", "BOOLEAN")
int_value (20)
equals
generate_java_code
add_query("A", "b", <<["D", "A"], ["A", "BOOLEAN"], ["a", "INTEGER"]>>, "A")
add_attribute("C", "C", "INTEGER")
less_than
add_command("INTEGER", "c", <<["e", "d"], ["d", "B"], ["A", "B"], ["D", "INTEGER"], ["c", "INTEGER"], ["A", "D"], ["A", "D"], ["a", "BOOLEAN"]>>)
add_attribute("d", "INTEGER", "BOOLEAN")
numerical_negation
add_query("a", "B", <<["c", "e"], ["d", "BOOLEAN"]>>, "d")
generate_java_code
generate_java_code
add_call_chain(<<d,d,d,A,D,A,C,c>>)
add_call_chain(<<e,e,C>>)
int_value (22)
disjunction
add_attribute("e", "a", "b")
type_check
add_attribute("B", "d", "D")
addition
bool_value (false)
add_command("A", "e", <<["b", "d"], ["e", "INTEGER"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["C", "BOOLEAN"], ["c", "INTEGER"]>>)
add_command("BOOLEAN", "A", <<["BOOLEAN", "INTEGER"], ["C", "BOOLEAN"]>>)
add_call_chain(<<A,e>>)
add_attribute("B", "d", "c")
bool_value (true)
logical_negation
bool_value (true)
add_query("a", "D", <<["A", "d"], ["A", "INTEGER"], ["a", "INTEGER"], ["D", "b"], ["c", "INTEGER"], ["D", "BOOLEAN"], ["A", "a"], ["D", "a"]>>, "e")
type_check
subtraction
add_attribute("B", "C", "INTEGER")
add_query("A", "A", <<["B", "A"], ["c", "INTEGER"], ["D", "BOOLEAN"], ["BOOLEAN", "b"], ["a", "b"]>>, "c")
conjunction
add_query("e", "b", <<["c", "d"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "e"], ["c", "A"], ["C", "BOOLEAN"], ["d", "C"]>>, "e")
int_value (38)
add_query("A", "D", <<["c", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "D"], ["e", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "e"], ["a", "INTEGER"]>>, "INTEGER")
add_call_chain(<<c,B,INTEGER,a,A,e,e,b,A>>)
greater_than
add_class(A)
conjunction
add_command("D", "C", <<["b", "BOOLEAN"], ["a", "b"], ["INTEGER", "INTEGER"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "b"], ["b", "BOOLEAN"], ["b", "A"]>>)
logical_negation
generate_java_code
int_value (5)
add_call_chain(<<d,BOOLEAN,C,a,BOOLEAN,d,D>>)
add_command("d", "D", <<["e", "BOOLEAN"], ["c", "INTEGER"], ["a", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "BOOLEAN"]>>)
add_call_chain(<<b,BOOLEAN,D,d,c,C,c>>)
equals
add_call_chain(<<A,B,a,a,b>>)
logical_negation
type_check
add_call_chain(<<c,D,a,d,b,D>>)
bool_value (false)
logical_negation
less_than
add_command("a", "BOOLEAN", <<["D", "BOOLEAN"], ["D", "INTEGER"], ["c", "INTEGER"], ["C", "BOOLEAN"]>>)
add_class(D)
generate_java_code
add_command("INTEGER", "a", <<["B", "INTEGER"]>>)
add_query("a", "A", <<["c", "d"], ["C", "INTEGER"], ["INTEGER", "B"], ["e", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["a", "INTEGER"]>>, "A")
add_call_chain(<<a,INTEGER,B,B,e,b,c>>)
int_value (34)
add_query("e", "e", <<["d", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "BOOLEAN"]>>, "e")
int_value (17)
add_attribute("d", "C", "d")
numerical_negation
bool_value (true)
add_query("D", "D", <<["c", "e"]>>, "A")
add_attribute("C", "e", "B")
conjunction
multiplication
generate_java_code
multiplication
less_than
add_call_chain(<<e,c>>)
add_call_chain(<<c,d,d,B>>)
type_check
bool_value (true)
type_check
add_query("B", "BOOLEAN", <<["B", "BOOLEAN"], ["e", "INTEGER"], ["a", "BOOLEAN"], ["D", "INTEGER"]>>, "e")
add_call_chain(<<A,b>>)
bool_value (false)
add_class(A)
add_call_chain(<<d,d,A,C,BOOLEAN,b>>)
add_call_chain(<<A>>)
logical_negation
add_attribute("D", "A", "INTEGER")
add_call_chain(<<c,c,c,D,b>>)
add_query("d", "C", <<["b", "BOOLEAN"], ["C", "C"], ["B", "INTEGER"], ["e", "D"], ["INTEGER", "INTEGER"], ["D", "B"], ["e", "BOOLEAN"], ["D", "b"], ["C", "C"]>>, "d")
conjunction
add_attribute("A", "B", "e")
logical_negation
disjunction
type_check
add_call_chain(<<e,e,c,d,D,A,e>>)
generate_java_code
add_query("D", "D", <<["D", "BOOLEAN"], ["e", "INTEGER"], ["INTEGER", "BOOLEAN"], ["A", "A"], ["e", "INTEGER"], ["A", "INTEGER"]>>, "INTEGER")
equals
add_class(A)
modulo
int_value (7)
int_value (43)
add_call_chain(<<B,D,a,a>>)
logical_negation
type_check
add_class(D)
type_check
type_check
logical_negation
bool_value (true)
logical_negation
add_query("d", "B", <<["A", "BOOLEAN"], ["B", "a"], ["B", "INTEGER"], ["d", "INTEGER"], ["B", "c"]>>, "C")
add_class(INTEGER)
add_attribute("b", "a", "c")
add_attribute("c", "e", "BOOLEAN")
add_attribute("B", "BOOLEAN", "C")
int_value (13)
add_query("a", "C", <<["A", "INTEGER"], ["C", "BOOLEAN"], ["b", "INTEGER"]>>, "b")
numerical_negation
bool_value (false)
add_query("INTEGER", "b", <<["b", "INTEGER"], ["b", "INTEGER"], ["A", "INTEGER"], ["A", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["e", "INTEGER"], ["a", "BOOLEAN"]>>, "INTEGER")
add_call_chain(<<e,B,INTEGER>>)
add_class(C)
logical_negation
add_attribute("c", "A", "BOOLEAN")
addition
greater_than
logical_negation
generate_java_code
add_query("b", "C", <<["a", "c"], ["A", "BOOLEAN"], ["b", "b"], ["D", "BOOLEAN"], ["b", "INTEGER"], ["d", "BOOLEAN"], ["e", "INTEGER"], ["a", "INTEGER"]>>, "B")
add_call_chain(<<a,A>>)
add_call_chain(<<B,C,e,e>>)
add_call_chain(<<c,BOOLEAN,C,e,e,C,b,D,A>>)
add_class(d)
add_query("c", "D", <<["a", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "D"], ["b", "A"], ["B", "BOOLEAN"], ["C", "e"], ["e", "BOOLEAN"]>>, "D")
add_call_chain(<<e,a,b,C,d,e,b>>)
add_attribute("A", "d", "INTEGER")
int_value (8)
add_command("e", "d", <<["d", "INTEGER"], ["INTEGER", "INTEGER"], ["A", "INTEGER"], ["A", "BOOLEAN"]>>)
add_query("d", "BOOLEAN", <<["d", "INTEGER"], ["b", "INTEGER"], ["d", "BOOLEAN"]>>, "d")
add_attribute("A", "b", "D")
add_attribute("A", "B", "D")
numerical_negation
add_attribute("a", "C", "INTEGER")
numerical_negation
bool_value (true)
bool_value (true)
add_command("D", "B", <<["e", "BOOLEAN"]>>)
subtraction
quotient
logical_negation
int_value (2)
add_attribute("B", "b", "BOOLEAN")
add_query("c", "e", <<["c", "BOOLEAN"], ["c", "d"], ["a", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "BOOLEAN"]>>, "b")
int_value (42)
add_command("b", "A", <<["C", "INTEGER"]>>)
add_attribute("e", "C", "C")
conjunction
add_call_chain(<<d,a,e>>)
add_class(INTEGER)
type_check
add_attribute("C", "c", "BOOLEAN")
add_attribute("C", "A", "A")
type_check
bool_value (false)
int_value (22)
add_command("e", "d", <<["b", "C"], ["A", "INTEGER"], ["BOOLEAN", "INTEGER"], ["C", "a"], ["INTEGER", "D"]>>)
numerical_negation
numerical_negation
logical_negation
add_command("d", "B", <<["a", "C"], ["C", "c"], ["B", "INTEGER"], ["d", "INTEGER"], ["A", "INTEGER"], ["e", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "BOOLEAN"]>>)
add_call_chain(<<A>>)
add_attribute("a", "b", "BOOLEAN")
conjunction
add_attribute("b", "A", "B")
add_attribute("A", "d", "A")
int_value (1)
type_check
equals
add_attribute("b", "D", "BOOLEAN")
add_command("c", "d", <<["C", "BOOLEAN"], ["d", "a"], ["c", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "e"], ["a", "BOOLEAN"], ["INTEGER", "C"], ["B", "INTEGER"], ["c", "INTEGER"]>>)
add_query("D", "b", <<["e", "INTEGER"], ["B", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["e", "b"], ["c", "INTEGER"]>>, "a")
add_call_chain(<<A,A,B,C,c>>)
bool_value (true)
generate_java_code
add_query("d", "D", <<["C", "BOOLEAN"], ["INTEGER", "INTEGER"], ["D", "B"]>>, "A")
conjunction
add_call_chain(<<b,B,C,INTEGER,c>>)
logical_negation
int_value (34)
add_command("D", "c", <<["a", "A"], ["e", "A"], ["C", "INTEGER"], ["b", "BOOLEAN"]>>)
disjunction
bool_value (false)
type_check
add_call_chain(<<D,B,BOOLEAN,d,INTEGER>>)
bool_value (false)
add_attribute("BOOLEAN", "D", "D")
add_call_chain(<<C,a,c,a,c,A,B>>)
add_attribute("e", "d", "INTEGER")
add_command("A", "A", <<["d", "C"], ["INTEGER", "INTEGER"], ["A", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["b", "INTEGER"]>>)
add_query("BOOLEAN", "B", <<["e", "e"]>>, "a")
int_value (14)
type_check
logical_negation
bool_value (false)
add_command("e", "c", <<["BOOLEAN", "b"], ["B", "BOOLEAN"], ["e", "e"]>>)
add_query("D", "b", <<["a", "INTEGER"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["e", "D"], ["A", "BOOLEAN"], ["a", "INTEGER"]>>, "e")
add_query("c", "C", <<["d", "B"]>>, "b")
add_call_chain(<<C,c,d,D,e,d,INTEGER,A>>)
add_attribute("b", "e", "INTEGER")
generate_java_code
add_attribute("c", "A", "BOOLEAN")
add_call_chain(<<D,D,a,BOOLEAN,a,d,C,D>>)
logical_negation
add_attribute("C", "b", "INTEGER")
int_value (25)
add_class(D)
greater_than
type_check
add_class(a)
modulo
add_query("D", "C", <<["b", "INTEGER"]>>, "e")
equals
logical_negation
add_command("d", "b", <<["d", "D"]>>)
add_query("A", "d", <<["c", "INTEGER"], ["C", "INTEGER"], ["B", "INTEGER"], ["B", "c"], ["c", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["a", "c"]>>, "A")
add_query("C", "B", <<["A", "INTEGER"], ["D", "a"]>>, "B")
logical_negation
add_call_chain(<<c,b,c,INTEGER,A>>)
generate_java_code
numerical_negation
bool_value (false)
logical_negation
bool_value (true)
add_call_chain(<<INTEGER,BOOLEAN>>)
generate_java_code
less_than
numerical_negation
int_value (40)
add_command("d", "b", <<["INTEGER", "INTEGER"], ["C", "e"], ["C", "INTEGER"], ["C", "BOOLEAN"]>>)
int_value (19)
add_query("A", "a", <<["a", "BOOLEAN"]>>, "a")
disjunction
add_call_chain(<<D,d,b,B>>)
add_command("a", "c", <<["C", "e"], ["d", "BOOLEAN"], ["d", "D"], ["C", "INTEGER"]>>)
bool_value (false)
bool_value (true)
subtraction
add_command("B", "B", <<["D", "C"], ["B", "c"], ["b", "d"], ["d", "d"]>>)
add_command("d", "A", <<["c", "BOOLEAN"], ["a", "a"]>>)
add_query("B", "A", <<["a", "D"], ["C", "BOOLEAN"], ["e", "INTEGER"], ["c", "INTEGER"], ["C", "e"]>>, "a")
type_check
type_check
generate_java_code
quotient
addition
add_attribute("e", "BOOLEAN", "b")
add_command("A", "C", <<["A", "INTEGER"], ["D", "D"], ["D", "INTEGER"], ["C", "INTEGER"], ["d", "b"], ["D", "INTEGER"], ["b", "INTEGER"], ["C", "BOOLEAN"]>>)
add_query("A", "b", <<["c", "b"], ["b", "INTEGER"], ["d", "D"]>>, "B")
bool_value (false)
