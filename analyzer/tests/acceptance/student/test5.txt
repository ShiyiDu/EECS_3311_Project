add_call_chain(<<D,C,a,BOOLEAN,a,A,d,C>>)
numerical_negation
add_call_chain(<<B>>)
add_call_chain(<<d,c,INTEGER,D,B,e,A,D>>)
add_call_chain(<<D,C,D,A,a,A,C>>)
add_call_chain(<<A,C>>)
add_call_chain(<<c,C,d,INTEGER,b,b>>)
logical_negation
type_check
add_query("e", "d", <<["c", "D"], ["BOOLEAN", "BOOLEAN"], ["e", "C"], ["b", "INTEGER"], ["a", "INTEGER"], ["a", "B"], ["BOOLEAN", "INTEGER"], ["D", "BOOLEAN"]>>, "a")
logical_negation
disjunction
add_query("D", "B", <<["d", "A"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "BOOLEAN"]>>, "A")
add_class(BOOLEAN)
logical_negation
bool_value (false)
multiplication
int_value (17)
add_command("c", "d", <<["B", "BOOLEAN"], ["a", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
logical_negation
add_call_chain(<<c,B,D,c,INTEGER,B,D,A>>)
add_call_chain(<<D,b,D,D,B>>)
add_attribute("C", "INTEGER", "INTEGER")
less_than
add_call_chain(<<C,INTEGER,c,D,d,d,D,d,C>>)
type_check
disjunction
add_command("a", "C", <<["a", "d"], ["c", "INTEGER"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["c", "INTEGER"], ["C", "INTEGER"]>>)
add_attribute("b", "A", "BOOLEAN")
logical_negation
int_value (27)
add_call_chain(<<d>>)
add_call_chain(<<A,e,D,e>>)
logical_negation
logical_negation
type_check
add_call_chain(<<INTEGER,b,A,INTEGER,c,C,e,e,C>>)
int_value (36)
greater_than
type_check
int_value (7)
subtraction
add_attribute("B", "e", "INTEGER")
logical_negation
add_class(A)
multiplication
add_attribute("e", "c", "INTEGER")
disjunction
add_query("B", "d", <<["BOOLEAN", "D"], ["a", "INTEGER"], ["C", "BOOLEAN"], ["A", "BOOLEAN"], ["INTEGER", "b"], ["e", "INTEGER"]>>, "C")
add_attribute("c", "a", "INTEGER")
add_call_chain(<<C,a,e,C>>)
add_class(e)
add_call_chain(<<c,INTEGER>>)
add_call_chain(<<B,B,a,C,e,C,d,d,C>>)
less_than
equals
disjunction
modulo
add_query("e", "A", <<["INTEGER", "INTEGER"]>>, "b")
int_value (44)
add_call_chain(<<d,b,C>>)
add_class(A)
add_call_chain(<<D,C,D,D>>)
int_value (1)
conjunction
logical_negation
logical_negation
add_call_chain(<<d,INTEGER,D,c,b,b,c,b>>)
generate_java_code
int_value (44)
numerical_negation
add_call_chain(<<C>>)
add_call_chain(<<A,c,B>>)
conjunction
add_command("a", "a", <<["e", "b"], ["A", "INTEGER"], ["B", "INTEGER"], ["d", "INTEGER"], ["e", "INTEGER"], ["A", "BOOLEAN"], ["d", "BOOLEAN"]>>)
equals
add_attribute("d", "b", "C")
conjunction
add_attribute("A", "C", "BOOLEAN")
add_attribute("c", "D", "INTEGER")
type_check
add_call_chain(<<b,d,D,D,INTEGER>>)
add_call_chain(<<c,C,d,C,d,A,b,B>>)
type_check
add_class(D)
add_query("e", "C", <<["D", "C"], ["B", "INTEGER"], ["B", "C"], ["a", "INTEGER"], ["D", "INTEGER"], ["B", "BOOLEAN"], ["e", "A"]>>, "d")
add_class(BOOLEAN)
add_command("a", "B", <<["D", "INTEGER"], ["b", "A"], ["A", "d"], ["c", "C"], ["B", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["e", "INTEGER"], ["e", "BOOLEAN"]>>)
add_attribute("C", "B", "d")
add_call_chain(<<d,A,A,B,B,d,D>>)
add_class(C)
generate_java_code
equals
type_check
add_call_chain(<<C,b,b,b,e,e,INTEGER>>)
logical_negation
greater_than
bool_value (false)
numerical_negation
logical_negation
int_value (47)
add_query("b", "e", <<["C", "INTEGER"], ["e", "INTEGER"], ["b", "INTEGER"], ["B", "e"], ["b", "B"], ["a", "INTEGER"], ["e", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "e"]>>, "D")
add_call_chain(<<b,B,B>>)
add_attribute("e", "b", "B")
generate_java_code
add_call_chain(<<C,e,BOOLEAN>>)
add_command("A", "a", <<["c", "C"], ["D", "INTEGER"], ["C", "INTEGER"]>>)
add_command("d", "B", <<["B", "BOOLEAN"], ["A", "B"], ["e", "C"], ["e", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "INTEGER"], ["a", "BOOLEAN"]>>)
add_command("D", "A", <<["D", "INTEGER"], ["a", "BOOLEAN"], ["d", "INTEGER"], ["B", "BOOLEAN"], ["b", "A"]>>)
add_query("INTEGER", "d", <<["e", "INTEGER"], ["INTEGER", "A"], ["B", "INTEGER"], ["A", "BOOLEAN"]>>, "c")
conjunction
generate_java_code
logical_negation
type_check
add_attribute("A", "b", "BOOLEAN")
int_value (11)
generate_java_code
add_query("D", "B", <<["c", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "c"], ["a", "INTEGER"], ["d", "INTEGER"]>>, "a")
add_attribute("A", "a", "BOOLEAN")
add_call_chain(<<d>>)
bool_value (true)
add_query("C", "C", <<["a", "e"], ["D", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "BOOLEAN"], ["d", "B"], ["C", "BOOLEAN"], ["C", "D"]>>, "D")
add_attribute("e", "A", "BOOLEAN")
multiplication
add_attribute("e", "b", "BOOLEAN")
add_query("D", "a", <<["BOOLEAN", "c"], ["C", "INTEGER"], ["A", "INTEGER"], ["A", "INTEGER"], ["d", "INTEGER"], ["C", "BOOLEAN"], ["BOOLEAN", "c"]>>, "A")
addition
add_query("e", "a", <<["C", "B"], ["A", "INTEGER"], ["B", "BOOLEAN"]>>, "D")
add_call_chain(<<A,e,BOOLEAN,e,e,e,B,b>>)
int_value (2)
numerical_negation
disjunction
bool_value (false)
add_query("BOOLEAN", "D", <<["d", "a"], ["c", "INTEGER"], ["c", "C"], ["A", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "INTEGER"], ["BOOLEAN", "c"], ["D", "BOOLEAN"], ["b", "BOOLEAN"]>>, "D")
generate_java_code
add_class(C)
add_class(C)
generate_java_code
add_class(d)
bool_value (false)
int_value (38)
bool_value (false)
conjunction
numerical_negation
add_call_chain(<<INTEGER,c>>)
type_check
numerical_negation
add_call_chain(<<b,e,B>>)
generate_java_code
int_value (35)
equals
add_command("C", "D", <<["c", "B"], ["e", "BOOLEAN"], ["C", "A"], ["BOOLEAN", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "INTEGER"], ["b", "B"]>>)
add_attribute("A", "d", "D")
int_value (24)
bool_value (true)
generate_java_code
add_query("d", "A", <<["e", "b"], ["BOOLEAN", "e"], ["b", "INTEGER"], ["c", "D"], ["b", "D"], ["a", "INTEGER"], ["D", "INTEGER"]>>, "C")
add_call_chain(<<b,d,INTEGER,INTEGER,b,c,BOOLEAN,a>>)
int_value (45)
add_command("B", "b", <<["A", "BOOLEAN"], ["b", "INTEGER"], ["e", "INTEGER"], ["a", "INTEGER"], ["INTEGER", "B"], ["A", "D"], ["A", "INTEGER"]>>)
numerical_negation
add_command("c", "C", <<["A", "b"], ["A", "BOOLEAN"]>>)
numerical_negation
add_query("e", "INTEGER", <<["e", "BOOLEAN"], ["e", "INTEGER"], ["a", "C"], ["a", "INTEGER"], ["d", "INTEGER"], ["INTEGER", "BOOLEAN"], ["a", "INTEGER"], ["b", "BOOLEAN"], ["D", "d"]>>, "a")
bool_value (true)
add_attribute("D", "BOOLEAN", "BOOLEAN")
less_than
add_call_chain(<<A,D>>)
add_query("B", "C", <<["a", "B"]>>, "e")
add_class(a)
add_call_chain(<<b>>)
int_value (4)
disjunction
add_query("B", "B", <<["D", "BOOLEAN"], ["C", "INTEGER"], ["d", "INTEGER"], ["c", "BOOLEAN"], ["a", "INTEGER"], ["A", "INTEGER"]>>, "b")
generate_java_code
subtraction
equals
add_call_chain(<<e,B>>)
int_value (17)
add_call_chain(<<c,D,C,C,B,c>>)
bool_value (true)
add_call_chain(<<C,D,e>>)
add_command("C", "e", <<["INTEGER", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>)
add_command("B", "d", <<["a", "B"], ["b", "e"]>>)
int_value (36)
type_check
add_query("D", "d", <<["a", "a"]>>, "D")
add_command("d", "D", <<["d", "A"]>>)
int_value (27)
add_attribute("d", "b", "INTEGER")
logical_negation
add_call_chain(<<A>>)
add_attribute("B", "c", "BOOLEAN")
conjunction
logical_negation
generate_java_code
greater_than
int_value (23)
logical_negation
add_call_chain(<<e>>)
bool_value (true)
add_attribute("B", "A", "C")
add_attribute("D", "e", "A")
add_call_chain(<<D,b,d>>)
add_attribute("d", "c", "BOOLEAN")
add_call_chain(<<c,c,C,INTEGER,C>>)
less_than
disjunction
add_class(C)
add_command("INTEGER", "a", <<["d", "D"], ["a", "INTEGER"], ["A", "INTEGER"], ["B", "INTEGER"]>>)
add_call_chain(<<e,B,e,a,a>>)
add_call_chain(<<c,C,C,a>>)
conjunction
add_attribute("B", "b", "A")
add_class(INTEGER)
int_value (29)
add_call_chain(<<b,A,d,D,B,A>>)
bool_value (false)
add_query("C", "c", <<["B", "C"], ["d", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "C"], ["INTEGER", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>, "a")
type_check
numerical_negation
numerical_negation
logical_negation
add_attribute("A", "BOOLEAN", "INTEGER")
add_call_chain(<<e,b,BOOLEAN,C,C,C,C,e,INTEGER>>)
disjunction
bool_value (true)
bool_value (true)
add_attribute("c", "d", "BOOLEAN")
