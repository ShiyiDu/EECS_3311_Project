less_than
add_call_chain(<<A,b,d>>)
numerical_negation
int_value (46)
bool_value (false)
generate_java_code
multiplication
int_value (19)
add_class(a)
add_class(INTEGER)
logical_negation
add_attribute("d", "B", "C")
bool_value (true)
generate_java_code
type_check
logical_negation
generate_java_code
add_command("C", "c", <<["d", "INTEGER"], ["e", "INTEGER"], ["B", "INTEGER"], ["a", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["d", "INTEGER"], ["a", "B"], ["A", "INTEGER"], ["A", "BOOLEAN"]>>)
bool_value (false)
add_attribute("INTEGER", "B", "INTEGER")
generate_java_code
addition
add_attribute("INTEGER", "C", "INTEGER")
add_command("c", "C", <<["A", "INTEGER"], ["INTEGER", "INTEGER"], ["d", "d"], ["e", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["d", "BOOLEAN"]>>)
int_value (27)
logical_negation
equals
add_command("INTEGER", "D", <<["D", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "INTEGER"], ["BOOLEAN", "D"], ["B", "INTEGER"], ["b", "BOOLEAN"]>>)
disjunction
type_check
numerical_negation
add_query("e", "a", <<["b", "e"], ["b", "BOOLEAN"], ["D", "e"], ["C", "e"]>>, "INTEGER")
add_query("C", "a", <<["b", "A"], ["C", "INTEGER"], ["B", "INTEGER"], ["B", "INTEGER"], ["BOOLEAN", "D"], ["INTEGER", "INTEGER"], ["B", "BOOLEAN"]>>, "b")
add_query("a", "C", <<["c", "BOOLEAN"], ["e", "B"]>>, "a")
add_call_chain(<<B,d,A,INTEGER,c,A,b,e,D>>)
add_call_chain(<<B,BOOLEAN,BOOLEAN,e,a,BOOLEAN,b,C>>)
add_call_chain(<<c,d,D,b,INTEGER,a,B,B,c>>)
add_query("A", "a", <<["B", "BOOLEAN"], ["e", "INTEGER"], ["e", "INTEGER"], ["A", "D"], ["INTEGER", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["D", "INTEGER"], ["b", "BOOLEAN"], ["e", "BOOLEAN"]>>, "B")
add_call_chain(<<D,A,d,C,c,B,INTEGER>>)
logical_negation
add_query("c", "e", <<["A", "d"], ["e", "INTEGER"], ["C", "INTEGER"]>>, "D")
add_call_chain(<<b>>)
add_call_chain(<<b,A,c,B,B,b,A,b>>)
add_call_chain(<<INTEGER,a,e,e>>)
int_value (32)
disjunction
int_value (15)
conjunction
add_command("b", "b", <<["D", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "INTEGER"]>>)
logical_negation
add_call_chain(<<e>>)
add_query("d", "B", <<["INTEGER", "BOOLEAN"]>>, "c")
add_attribute("c", "c", "BOOLEAN")
numerical_negation
add_command("B", "A", <<["D", "c"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "INTEGER"], ["c", "INTEGER"], ["A", "INTEGER"], ["A", "BOOLEAN"]>>)
numerical_negation
add_call_chain(<<e>>)
add_query("B", "D", <<["b", "INTEGER"], ["b", "a"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["A", "INTEGER"], ["d", "C"]>>, "b")
add_call_chain(<<A>>)
generate_java_code
add_call_chain(<<BOOLEAN,C,C,c>>)
type_check
add_query("A", "b", <<["D", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["e", "INTEGER"]>>, "A")
bool_value (false)
add_call_chain(<<c,D,d,C,A,INTEGER,a>>)
add_class(INTEGER)
subtraction
int_value (2)
add_attribute("B", "B", "INTEGER")
multiplication
logical_negation
numerical_negation
add_query("B", "a", <<["a", "BOOLEAN"], ["A", "D"], ["a", "INTEGER"], ["BOOLEAN", "c"]>>, "d")
add_call_chain(<<C>>)
addition
logical_negation
int_value (38)
add_call_chain(<<BOOLEAN,d>>)
numerical_negation
add_class(D)
bool_value (true)
numerical_negation
add_call_chain(<<e,C,C,c,D,a,D,A,B>>)
int_value (38)
numerical_negation
add_query("C", "c", <<["B", "D"], ["D", "INTEGER"], ["c", "a"], ["b", "BOOLEAN"], ["BOOLEAN", "b"], ["INTEGER", "INTEGER"], ["INTEGER", "INTEGER"], ["A", "C"], ["B", "INTEGER"]>>, "D")
add_query("D", "a", <<["d", "INTEGER"], ["d", "c"], ["D", "INTEGER"], ["C", "e"], ["INTEGER", "INTEGER"]>>, "INTEGER")
add_command("D", "INTEGER", <<["d", "INTEGER"], ["b", "INTEGER"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["B", "BOOLEAN"], ["d", "BOOLEAN"]>>)
bool_value (true)
add_command("BOOLEAN", "B", <<["D", "INTEGER"], ["C", "BOOLEAN"], ["a", "INTEGER"], ["A", "INTEGER"], ["d", "C"], ["a", "INTEGER"]>>)
subtraction
add_query("e", "D", <<["c", "a"], ["C", "d"], ["a", "BOOLEAN"], ["D", "INTEGER"]>>, "d")
numerical_negation
logical_negation
logical_negation
generate_java_code
add_class(a)
add_attribute("b", "C", "INTEGER")
int_value (3)
add_call_chain(<<D,d,e,D>>)
add_attribute("A", "B", "INTEGER")
add_call_chain(<<a,a,e,A,d>>)
add_command("A", "d", <<["D", "BOOLEAN"], ["a", "C"], ["B", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "b"], ["d", "C"], ["INTEGER", "BOOLEAN"]>>)
add_query("B", "b", <<["A", "BOOLEAN"], ["d", "INTEGER"], ["INTEGER", "c"], ["d", "a"], ["C", "BOOLEAN"], ["d", "a"], ["A", "e"]>>, "a")
type_check
add_command("C", "INTEGER", <<["D", "BOOLEAN"], ["b", "INTEGER"], ["d", "B"], ["BOOLEAN", "INTEGER"], ["e", "BOOLEAN"], ["D", "INTEGER"]>>)
add_attribute("d", "a", "INTEGER")
int_value (25)
add_query("e", "B", <<["B", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["INTEGER", "BOOLEAN"], ["A", "d"], ["B", "BOOLEAN"]>>, "a")
logical_negation
disjunction
add_call_chain(<<b,A,a,D>>)
add_attribute("D", "e", "BOOLEAN")
add_command("BOOLEAN", "e", <<["e", "BOOLEAN"], ["d", "BOOLEAN"], ["e", "INTEGER"], ["BOOLEAN", "A"], ["b", "INTEGER"]>>)
equals
add_call_chain(<<a,c,e,c,e,b,a,c>>)
add_query("b", "D", <<["A", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["C", "BOOLEAN"]>>, "A")
int_value (45)
add_command("C", "A", <<["B", "INTEGER"], ["d", "INTEGER"], ["B", "BOOLEAN"], ["c", "INTEGER"], ["B", "BOOLEAN"], ["e", "INTEGER"]>>)
add_call_chain(<<d>>)
add_call_chain(<<c,d,C,A,D,e,INTEGER,C,a>>)
subtraction
less_than
multiplication
bool_value (true)
conjunction
add_query("c", "A", <<["B", "INTEGER"], ["b", "a"], ["INTEGER", "INTEGER"]>>, "BOOLEAN")
generate_java_code
add_class(e)
int_value (42)
bool_value (true)
int_value (4)
add_query("e", "C", <<["a", "BOOLEAN"], ["e", "b"], ["INTEGER", "INTEGER"], ["B", "INTEGER"], ["B", "INTEGER"], ["A", "B"], ["A", "INTEGER"], ["C", "BOOLEAN"]>>, "INTEGER")
type_check
add_class(d)
add_attribute("INTEGER", "D", "INTEGER")
add_attribute("d", "BOOLEAN", "c")
add_call_chain(<<A>>)
generate_java_code
add_call_chain(<<d,e>>)
add_command("e", "D", <<["a", "INTEGER"], ["A", "C"], ["C", "BOOLEAN"]>>)
add_call_chain(<<c,D,C>>)
add_query("d", "b", <<["c", "INTEGER"], ["B", "b"], ["C", "BOOLEAN"]>>, "D")
add_call_chain(<<BOOLEAN,b,A,d,e,b,a,d,b>>)
add_class(D)
generate_java_code
disjunction
add_command("D", "e", <<["b", "BOOLEAN"], ["C", "INTEGER"], ["C", "BOOLEAN"]>>)
add_call_chain(<<A,a,A,B>>)
add_call_chain(<<A,BOOLEAN,d>>)
add_call_chain(<<C,BOOLEAN,d,BOOLEAN,e>>)
disjunction
add_call_chain(<<B,e,C,B,C,b,A,d,D>>)
add_call_chain(<<B>>)
bool_value (true)
type_check
add_command("a", "a", <<["A", "d"], ["c", "INTEGER"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["BOOLEAN", "a"], ["A", "C"], ["C", "INTEGER"], ["b", "INTEGER"], ["C", "BOOLEAN"]>>)
addition
equals
equals
add_query("a", "C", <<["C", "INTEGER"], ["C", "BOOLEAN"], ["d", "INTEGER"], ["C", "BOOLEAN"], ["INTEGER", "D"], ["d", "b"], ["c", "BOOLEAN"], ["c", "BOOLEAN"], ["e", "BOOLEAN"]>>, "C")
add_call_chain(<<C,B,a,b>>)
add_call_chain(<<a,A,c,A>>)
quotient
add_call_chain(<<c,INTEGER,D>>)
add_call_chain(<<B,BOOLEAN,b,a,D,C,B,C>>)
add_command("b", "a", <<["c", "BOOLEAN"]>>)
type_check
bool_value (true)
add_query("D", "e", <<["b", "d"], ["A", "INTEGER"], ["b", "BOOLEAN"], ["d", "INTEGER"]>>, "a")
disjunction
add_class(INTEGER)
add_call_chain(<<B>>)
logical_negation
numerical_negation
add_call_chain(<<a,e,B,B,B>>)
add_command("B", "b", <<["c", "a"], ["BOOLEAN", "BOOLEAN"], ["A", "B"], ["A", "INTEGER"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["C", "B"], ["D", "d"], ["B", "BOOLEAN"]>>)
logical_negation
conjunction
bool_value (true)
add_query("C", "b", <<["BOOLEAN", "BOOLEAN"], ["d", "INTEGER"], ["A", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["C", "INTEGER"], ["e", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["d", "B"], ["C", "INTEGER"]>>, "D")
bool_value (false)
add_command("c", "D", <<["D", "BOOLEAN"], ["c", "A"], ["e", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["b", "INTEGER"], ["A", "INTEGER"]>>)
add_attribute("A", "e", "BOOLEAN")
type_check
add_attribute("D", "B", "BOOLEAN")
add_attribute("e", "e", "INTEGER")
add_call_chain(<<C,C,B,D>>)
greater_than
add_class(C)
add_command("a", "c", <<["b", "BOOLEAN"], ["b", "e"], ["C", "INTEGER"], ["e", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["e", "BOOLEAN"]>>)
logical_negation
add_query("A", "c", <<["b", "b"], ["e", "C"], ["INTEGER", "BOOLEAN"], ["B", "INTEGER"], ["a", "INTEGER"]>>, "A")
bool_value (false)
numerical_negation
quotient
numerical_negation
generate_java_code
add_call_chain(<<A>>)
bool_value (true)
add_query("D", "B", <<["e", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "INTEGER"], ["C", "INTEGER"], ["d", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "BOOLEAN"]>>, "A")
type_check
add_call_chain(<<B,C,a,e,B,B,d>>)
bool_value (true)
add_call_chain(<<b,INTEGER,BOOLEAN>>)
bool_value (false)
add_attribute("D", "a", "INTEGER")
add_attribute("c", "c", "INTEGER")
add_attribute("C", "c", "INTEGER")
add_call_chain(<<C,e,D,a>>)
add_call_chain(<<A,e,A,C,A,B,D,BOOLEAN,c>>)
add_command("D", "BOOLEAN", <<["b", "INTEGER"], ["d", "e"], ["e", "C"], ["C", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "B"], ["d", "BOOLEAN"]>>)
add_command("D", "e", <<["B", "INTEGER"], ["C", "INTEGER"], ["C", "INTEGER"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["D", "C"], ["C", "BOOLEAN"], ["c", "BOOLEAN"]>>)
numerical_negation
conjunction
add_query("INTEGER", "INTEGER", <<["d", "INTEGER"]>>, "B")
numerical_negation
add_command("INTEGER", "c", <<["C", "b"]>>)
add_attribute("A", "C", "BOOLEAN")
add_command("b", "e", <<["a", "INTEGER"]>>)
add_command("A", "B", <<["a", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "d"], ["d", "BOOLEAN"], ["A", "BOOLEAN"]>>)
int_value (17)
int_value (33)
int_value (14)
type_check
type_check
type_check
add_call_chain(<<BOOLEAN,A,e,b,C,b,c,INTEGER,C>>)
add_call_chain(<<B>>)
add_command("b", "e", <<["C", "BOOLEAN"], ["c", "INTEGER"], ["INTEGER", "BOOLEAN"], ["D", "INTEGER"], ["B", "a"], ["e", "c"]>>)
add_call_chain(<<C>>)
logical_negation
int_value (4)
bool_value (false)
add_query("e", "D", <<["A", "INTEGER"], ["b", "BOOLEAN"]>>, "b")
numerical_negation
add_command("A", "C", <<["C", "INTEGER"], ["B", "D"]>>)
generate_java_code
conjunction
add_call_chain(<<B,e,D,D,INTEGER,d,A>>)
add_class(c)
add_attribute("a", "D", "INTEGER")
add_command("BOOLEAN", "c", <<["e", "INTEGER"], ["d", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "B"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["d", "BOOLEAN"]>>)
type_check
add_attribute("INTEGER", "e", "BOOLEAN")
add_call_chain(<<d,BOOLEAN,B,B,c,d,A,a,e>>)
logical_negation
add_attribute("BOOLEAN", "D", "INTEGER")
less_than
add_query("d", "A", <<["e", "INTEGER"], ["A", "BOOLEAN"], ["C", "a"]>>, "b")
bool_value (true)
add_call_chain(<<C,a,c,B,C,c,D,d,D>>)
add_query("B", "A", <<["A", "INTEGER"], ["c", "INTEGER"], ["c", "INTEGER"], ["INTEGER", "D"]>>, "D")
conjunction
quotient
add_call_chain(<<b,INTEGER,B,b>>)
int_value (39)
numerical_negation
numerical_negation
equals
conjunction
add_command("D", "a", <<["A", "d"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["c", "INTEGER"], ["A", "INTEGER"], ["B", "INTEGER"]>>)
add_query("B", "B", <<["c", "INTEGER"], ["a", "D"]>>, "INTEGER")
numerical_negation
add_attribute("INTEGER", "c", "BOOLEAN")
quotient
add_call_chain(<<b,c,A,d,B,e,C,c>>)
add_command("a", "c", <<["BOOLEAN", "c"], ["B", "D"]>>)
type_check
add_class(b)
add_call_chain(<<B,a>>)
add_call_chain(<<d>>)
bool_value (false)
add_call_chain(<<c,b,C,d,B,INTEGER>>)
add_call_chain(<<b,a>>)
add_call_chain(<<A>>)
int_value (20)
numerical_negation
logical_negation
generate_java_code
add_call_chain(<<B,D,A,B,d>>)
add_call_chain(<<BOOLEAN>>)
add_query("C", "C", <<["B", "e"], ["C", "INTEGER"], ["C", "INTEGER"]>>, "e")
add_query("e", "B", <<["A", "B"], ["c", "INTEGER"], ["e", "BOOLEAN"], ["A", "e"], ["D", "INTEGER"], ["B", "INTEGER"], ["B", "INTEGER"], ["a", "BOOLEAN"], ["e", "C"]>>, "e")
type_check
quotient
numerical_negation
less_than
add_attribute("a", "a", "BOOLEAN")
add_call_chain(<<B,BOOLEAN,c,b,e>>)
conjunction
generate_java_code
add_command("B", "D", <<["e", "INTEGER"], ["D", "INTEGER"], ["A", "INTEGER"], ["c", "BOOLEAN"]>>)
add_query("D", "d", <<["A", "b"], ["e", "INTEGER"], ["D", "BOOLEAN"], ["e", "A"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "a"], ["B", "INTEGER"]>>, "d")
bool_value (true)
add_call_chain(<<B,BOOLEAN,d,B>>)
add_command("INTEGER", "c", <<["D", "BOOLEAN"], ["c", "BOOLEAN"], ["INTEGER", "b"]>>)
type_check
int_value (3)
type_check
add_command("D", "D", <<["B", "BOOLEAN"], ["D", "INTEGER"], ["a", "INTEGER"], ["c", "D"], ["A", "B"], ["B", "INTEGER"], ["d", "BOOLEAN"], ["A", "INTEGER"]>>)
add_call_chain(<<b,e,C,INTEGER,D,e,c>>)
add_query("A", "d", <<["D", "INTEGER"], ["c", "BOOLEAN"], ["d", "INTEGER"], ["d", "BOOLEAN"], ["INTEGER", "INTEGER"], ["B", "INTEGER"], ["C", "INTEGER"], ["C", "INTEGER"], ["C", "A"]>>, "D")
subtraction
numerical_negation
logical_negation
numerical_negation
add_class(B)
add_attribute("D", "D", "BOOLEAN")
add_query("d", "B", <<["A", "INTEGER"]>>, "d")
int_value (27)
int_value (4)
add_command("b", "d", <<["a", "b"], ["B", "BOOLEAN"]>>)
add_class(D)
int_value (16)
add_command("b", "b", <<["c", "INTEGER"], ["b", "C"], ["b", "INTEGER"], ["b", "INTEGER"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["INTEGER", "INTEGER"], ["b", "BOOLEAN"]>>)
add_attribute("BOOLEAN", "A", "INTEGER")
add_call_chain(<<A,a,A,B>>)
add_query("D", "BOOLEAN", <<["d", "b"], ["D", "BOOLEAN"], ["e", "BOOLEAN"]>>, "B")
generate_java_code
add_attribute("c", "C", "BOOLEAN")
add_attribute("d", "B", "BOOLEAN")
add_attribute("d", "c", "INTEGER")
int_value (16)
add_call_chain(<<A,c,C,e,D,D,A,C,A>>)
