numerical_negation
add_query("D", "BOOLEAN", <<["b", "BOOLEAN"], ["INTEGER", "INTEGER"]>>, "a")
int_value (42)
add_call_chain(<<a,A,C,e,a,c>>)
numerical_negation
add_call_chain(<<A,e,b,B,b,e>>)
add_command("e", "B", <<["A", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "INTEGER"], ["D", "BOOLEAN"]>>)
add_class(b)
numerical_negation
logical_negation
disjunction
add_call_chain(<<INTEGER,C,B>>)
add_call_chain(<<BOOLEAN,d>>)
int_value (34)
add_attribute("c", "d", "D")
bool_value (true)
add_attribute("INTEGER", "d", "d")
bool_value (true)
numerical_negation
add_call_chain(<<C,c,INTEGER,c,A,c>>)
add_class(d)
logical_negation
add_attribute("C", "a", "INTEGER")
add_query("C", "D", <<["a", "c"], ["B", "c"], ["b", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["d", "c"]>>, "D")
add_command("d", "c", <<["BOOLEAN", "INTEGER"], ["C", "BOOLEAN"], ["BOOLEAN", "c"], ["d", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "BOOLEAN"]>>)
add_attribute("e", "e", "BOOLEAN")
add_class(D)
greater_than
numerical_negation
add_command("a", "b", <<["B", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["a", "BOOLEAN"]>>)
bool_value (true)
bool_value (false)
add_command("BOOLEAN", "B", <<["c", "BOOLEAN"]>>)
numerical_negation
add_query("c", "b", <<["b", "INTEGER"], ["A", "INTEGER"], ["B", "b"], ["B", "INTEGER"], ["d", "INTEGER"], ["C", "INTEGER"], ["c", "INTEGER"]>>, "A")
bool_value (true)
add_attribute("C", "B", "b")
add_query("e", "B", <<["B", "BOOLEAN"], ["INTEGER", "D"], ["b", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "c"], ["B", "BOOLEAN"], ["A", "d"]>>, "INTEGER")
add_call_chain(<<B>>)
add_call_chain(<<c,B,d>>)
add_class(e)
modulo
logical_negation
bool_value (false)
int_value (17)
add_call_chain(<<A,C,C,b,C,BOOLEAN,B,d>>)
conjunction
logical_negation
add_call_chain(<<B,A,BOOLEAN,C,d>>)
int_value (24)
add_attribute("BOOLEAN", "B", "BOOLEAN")
add_attribute("A", "C", "INTEGER")
add_call_chain(<<e,B>>)
add_call_chain(<<D,b,A,e,e,A>>)
add_class(e)
type_check
bool_value (true)
add_call_chain(<<B,B,c,d,D,d>>)
bool_value (true)
add_command("e", "c", <<["a", "BOOLEAN"], ["A", "d"], ["D", "BOOLEAN"], ["D", "INTEGER"]>>)
int_value (45)
add_query("C", "b", <<["A", "b"], ["A", "BOOLEAN"], ["b", "a"]>>, "C")
numerical_negation
numerical_negation
logical_negation
numerical_negation
disjunction
bool_value (true)
type_check
add_query("C", "B", <<["D", "BOOLEAN"], ["D", "INTEGER"], ["e", "BOOLEAN"], ["B", "C"], ["b", "INTEGER"], ["B", "BOOLEAN"]>>, "e")
quotient
add_call_chain(<<B,b,b,b>>)
add_call_chain(<<D,D,e,a>>)
add_call_chain(<<D>>)
type_check
add_class(b)
add_call_chain(<<b,d,c>>)
add_call_chain(<<B,c,a,C,e,B,INTEGER,BOOLEAN>>)
generate_java_code
bool_value (false)
multiplication
bool_value (true)
logical_negation
add_attribute("D", "A", "C")
greater_than
numerical_negation
add_command("d", "b", <<["b", "BOOLEAN"], ["D", "D"], ["a", "INTEGER"], ["INTEGER", "BOOLEAN"], ["e", "C"], ["c", "e"], ["a", "BOOLEAN"], ["b", "INTEGER"]>>)
int_value (31)
bool_value (false)
addition
add_call_chain(<<A,d,c>>)
conjunction
bool_value (true)
add_class(e)
add_call_chain(<<b,D,a,e,B,e,BOOLEAN,b,B>>)
add_call_chain(<<B,a,D>>)
add_call_chain(<<d,D,B,A,d,d,d>>)
modulo
add_attribute("e", "b", "INTEGER")
numerical_negation
disjunction
equals
add_query("a", "b", <<["b", "a"], ["d", "INTEGER"], ["D", "e"], ["B", "BOOLEAN"]>>, "D")
int_value (11)
add_command("INTEGER", "INTEGER", <<["C", "C"], ["c", "INTEGER"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["B", "BOOLEAN"]>>)
add_call_chain(<<D,b,c>>)
multiplication
bool_value (false)
bool_value (false)
numerical_negation
add_command("e", "D", <<["D", "INTEGER"], ["A", "INTEGER"], ["e", "INTEGER"]>>)
add_command("b", "d", <<["A", "INTEGER"]>>)
int_value (4)
greater_than
add_attribute("C", "A", "INTEGER")
numerical_negation
add_command("C", "b", <<["A", "D"], ["d", "BOOLEAN"], ["d", "A"]>>)
bool_value (false)
logical_negation
bool_value (false)
add_attribute("e", "d", "INTEGER")
less_than
add_query("c", "B", <<["a", "INTEGER"], ["C", "e"], ["BOOLEAN", "INTEGER"]>>, "d")
add_attribute("B", "D", "BOOLEAN")
modulo
add_command("C", "c", <<["INTEGER", "INTEGER"], ["BOOLEAN", "INTEGER"], ["INTEGER", "B"], ["b", "INTEGER"], ["D", "BOOLEAN"], ["a", "D"], ["a", "BOOLEAN"], ["BOOLEAN", "b"], ["e", "BOOLEAN"]>>)
generate_java_code
add_attribute("e", "d", "INTEGER")
add_attribute("BOOLEAN", "A", "BOOLEAN")
less_than
add_command("d", "d", <<["b", "C"], ["INTEGER", "b"], ["INTEGER", "a"]>>)
add_query("INTEGER", "B", <<["e", "BOOLEAN"]>>, "D")
numerical_negation
add_call_chain(<<d,a,A,a,BOOLEAN,C,D>>)
equals
add_call_chain(<<c,C,a,A,C,d>>)
bool_value (false)
add_command("c", "D", <<["B", "BOOLEAN"], ["C", "A"], ["D", "A"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["BOOLEAN", "INTEGER"]>>)
add_call_chain(<<C,e,B,c,e,A,e>>)
generate_java_code
int_value (7)
add_command("b", "a", <<["D", "BOOLEAN"], ["INTEGER", "D"], ["c", "a"], ["a", "B"], ["C", "INTEGER"], ["b", "INTEGER"]>>)
add_call_chain(<<e,a,c,d,D>>)
add_attribute("b", "B", "BOOLEAN")
add_query("e", "d", <<["d", "INTEGER"], ["c", "INTEGER"], ["e", "b"], ["B", "B"]>>, "d")
bool_value (true)
generate_java_code
numerical_negation
int_value (25)
bool_value (false)
int_value (30)
add_command("e", "A", <<["C", "BOOLEAN"]>>)
add_call_chain(<<a,D>>)
add_call_chain(<<C,D,d,B,b,B>>)
equals
quotient
numerical_negation
add_query("a", "b", <<["e", "INTEGER"], ["B", "INTEGER"], ["B", "INTEGER"], ["b", "INTEGER"], ["e", "D"], ["b", "BOOLEAN"], ["C", "BOOLEAN"]>>, "C")
bool_value (true)
logical_negation
add_call_chain(<<A,BOOLEAN,D,C,A,BOOLEAN>>)
add_call_chain(<<B,e>>)
int_value (20)
add_class(C)
generate_java_code
add_command("c", "D", <<["B", "d"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["a", "b"], ["D", "INTEGER"]>>)
numerical_negation
add_class(b)
disjunction
add_class(A)
add_call_chain(<<b>>)
add_class(b)
generate_java_code
add_attribute("B", "b", "INTEGER")
add_call_chain(<<b,a,e,BOOLEAN,c,e>>)
add_call_chain(<<A,INTEGER>>)
less_than
bool_value (true)
add_class(C)
bool_value (true)
generate_java_code
generate_java_code
type_check
int_value (9)
disjunction
add_class(A)
add_attribute("B", "D", "BOOLEAN")
add_attribute("d", "D", "BOOLEAN")
int_value (33)
add_query("B", "d", <<["A", "C"], ["a", "C"], ["C", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "e"], ["A", "BOOLEAN"], ["e", "INTEGER"]>>, "b")
logical_negation
logical_negation
type_check
add_query("d", "b", <<["A", "BOOLEAN"], ["a", "INTEGER"], ["b", "a"], ["D", "BOOLEAN"], ["B", "C"], ["e", "INTEGER"], ["B", "B"], ["B", "INTEGER"], ["e", "D"]>>, "D")
add_command("e", "BOOLEAN", <<["C", "INTEGER"]>>)
bool_value (true)
add_call_chain(<<A,B,D,C,C,D,e>>)
add_command("d", "a", <<["B", "c"], ["BOOLEAN", "BOOLEAN"], ["C", "C"], ["C", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "INTEGER"], ["C", "INTEGER"], ["B", "A"]>>)
generate_java_code
conjunction
bool_value (false)
add_call_chain(<<a,e,d,B>>)
add_command("a", "C", <<["e", "INTEGER"], ["a", "BOOLEAN"], ["A", "c"], ["a", "INTEGER"], ["INTEGER", "c"], ["A", "INTEGER"], ["B", "INTEGER"], ["B", "INTEGER"], ["c", "c"]>>)
add_command("c", "A", <<["b", "INTEGER"], ["a", "BOOLEAN"], ["a", "b"]>>)
numerical_negation
add_class(d)
add_attribute("e", "b", "e")
logical_negation
int_value (4)
add_command("BOOLEAN", "D", <<["c", "A"]>>)
add_query("a", "B", <<["D", "INTEGER"], ["D", "INTEGER"], ["B", "BOOLEAN"], ["B", "INTEGER"]>>, "d")
add_command("A", "b", <<["e", "BOOLEAN"], ["INTEGER", "INTEGER"], ["A", "BOOLEAN"], ["d", "e"], ["B", "INTEGER"], ["D", "INTEGER"], ["B", "C"]>>)
less_than
add_attribute("c", "D", "BOOLEAN")
numerical_negation
modulo
add_query("INTEGER", "B", <<["C", "INTEGER"], ["C", "INTEGER"], ["C", "INTEGER"], ["b", "e"]>>, "C")
add_command("e", "c", <<["B", "INTEGER"], ["D", "C"], ["b", "INTEGER"], ["B", "BOOLEAN"]>>)
type_check
add_attribute("c", "A", "BOOLEAN")
logical_negation
bool_value (true)
numerical_negation
add_call_chain(<<b,d,a>>)
int_value (19)
add_attribute("d", "e", "c")
add_class(b)
add_attribute("a", "B", "INTEGER")
add_call_chain(<<INTEGER,B,A,C,b,d>>)
add_query("a", "C", <<["d", "BOOLEAN"], ["A", "INTEGER"], ["e", "INTEGER"], ["b", "c"], ["BOOLEAN", "INTEGER"], ["c", "A"], ["d", "INTEGER"], ["D", "INTEGER"], ["a", "BOOLEAN"]>>, "a")
generate_java_code
add_query("B", "e", <<["INTEGER", "BOOLEAN"], ["B", "INTEGER"]>>, "b")
add_call_chain(<<b,c>>)
modulo
logical_negation
int_value (14)
numerical_negation
add_class(a)
int_value (42)
add_call_chain(<<b,c,D,C,b,C,B>>)
add_call_chain(<<d,A>>)
disjunction
numerical_negation
generate_java_code
bool_value (false)
