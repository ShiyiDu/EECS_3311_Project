generate_java_code
add_attribute("A", "INTEGER", "BOOLEAN")
add_query("A", "a", <<["INTEGER", "INTEGER"], ["e", "a"], ["e", "INTEGER"], ["B", "b"], ["INTEGER", "INTEGER"], ["a", "BOOLEAN"], ["b", "INTEGER"], ["e", "INTEGER"], ["D", "c"]>>, "c")
numerical_negation
add_call_chain(<<C,c,d,BOOLEAN,d,D,c>>)
add_call_chain(<<A>>)
int_value (24)
logical_negation
bool_value (true)
add_command("B", "a", <<["a", "INTEGER"]>>)
conjunction
add_class(D)
add_attribute("B", "B", "INTEGER")
add_attribute("e", "c", "BOOLEAN")
add_call_chain(<<C,B,BOOLEAN,C,C,INTEGER,D,C,INTEGER>>)
numerical_negation
add_call_chain(<<D,c,B,d>>)
add_call_chain(<<a,A>>)
multiplication
add_attribute("d", "D", "BOOLEAN")
add_call_chain(<<D,c,D,C,D,e>>)
type_check
add_call_chain(<<d,D,BOOLEAN,a,B,d,b>>)
add_query("d", "c", <<["BOOLEAN", "c"], ["a", "BOOLEAN"], ["e", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "e"], ["e", "C"]>>, "d")
generate_java_code
conjunction
add_query("A", "A", <<["B", "a"], ["c", "INTEGER"], ["c", "INTEGER"], ["A", "e"], ["a", "INTEGER"], ["a", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "BOOLEAN"]>>, "A")
generate_java_code
int_value (23)
logical_negation
logical_negation
add_class(C)
add_command("c", "B", <<["d", "INTEGER"], ["a", "INTEGER"], ["a", "A"], ["BOOLEAN", "INTEGER"], ["A", "INTEGER"], ["D", "INTEGER"], ["D", "INTEGER"], ["a", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
add_call_chain(<<D,B,a,B,B,c>>)
type_check
add_call_chain(<<b,C,c>>)
add_call_chain(<<B,c,INTEGER,C,a,A,INTEGER,d>>)
add_command("c", "C", <<["e", "BOOLEAN"], ["e", "c"], ["e", "e"], ["B", "A"], ["D", "INTEGER"], ["A", "d"], ["INTEGER", "e"], ["e", "INTEGER"]>>)
generate_java_code
add_query("C", "d", <<["b", "a"], ["C", "a"], ["A", "e"], ["D", "c"], ["a", "INTEGER"]>>, "b")
add_query("c", "e", <<["A", "INTEGER"]>>, "B")
add_attribute("INTEGER", "b", "a")
add_attribute("e", "d", "B")
add_attribute("a", "a", "B")
type_check
less_than
logical_negation
bool_value (true)
equals
add_command("b", "a", <<["D", "a"], ["b", "INTEGER"], ["a", "d"], ["e", "BOOLEAN"]>>)
bool_value (true)
add_query("B", "c", <<["c", "BOOLEAN"], ["c", "BOOLEAN"], ["INTEGER", "INTEGER"], ["a", "BOOLEAN"], ["d", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>, "a")
add_command("c", "c", <<["D", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "d"], ["d", "INTEGER"], ["D", "BOOLEAN"]>>)
logical_negation
int_value (16)
generate_java_code
add_command("D", "D", <<["C", "b"], ["c", "BOOLEAN"], ["A", "b"], ["C", "BOOLEAN"], ["D", "d"], ["D", "BOOLEAN"]>>)
add_call_chain(<<C,BOOLEAN,b,A,a,C,d>>)
add_command("e", "e", <<["A", "INTEGER"]>>)
add_call_chain(<<e,b,B,D,B>>)
add_attribute("e", "b", "BOOLEAN")
add_command("c", "c", <<["BOOLEAN", "A"], ["e", "INTEGER"], ["A", "d"], ["c", "INTEGER"]>>)
add_command("d", "INTEGER", <<["A", "b"], ["d", "INTEGER"]>>)
less_than
generate_java_code
add_query("D", "c", <<["e", "INTEGER"], ["e", "INTEGER"], ["b", "INTEGER"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["b", "INTEGER"]>>, "C")
bool_value (true)
int_value (3)
int_value (40)
disjunction
add_call_chain(<<A,B,A>>)
numerical_negation
logical_negation
greater_than
add_call_chain(<<INTEGER,B,D>>)
int_value (39)
add_query("C", "e", <<["C", "BOOLEAN"], ["e", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "B"], ["BOOLEAN", "BOOLEAN"], ["B", "d"], ["b", "D"]>>, "A")
add_call_chain(<<C,e,C,A,C,BOOLEAN>>)
int_value (1)
greater_than
logical_negation
bool_value (false)
numerical_negation
add_query("c", "C", <<["D", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "b"], ["A", "e"], ["c", "BOOLEAN"]>>, "C")
numerical_negation
add_call_chain(<<C,A>>)
add_attribute("B", "b", "b")
subtraction
add_attribute("d", "c", "b")
add_query("D", "D", <<["d", "BOOLEAN"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["A", "A"], ["c", "INTEGER"], ["e", "BOOLEAN"], ["e", "BOOLEAN"]>>, "e")
add_query("B", "C", <<["C", "INTEGER"], ["C", "INTEGER"], ["a", "D"], ["c", "BOOLEAN"], ["b", "INTEGER"], ["B", "INTEGER"], ["B", "D"]>>, "e")
generate_java_code
int_value (36)
type_check
add_attribute("e", "B", "BOOLEAN")
add_class(a)
equals
add_class(C)
numerical_negation
add_call_chain(<<a,c,BOOLEAN,a,c,C,a,d,d>>)
logical_negation
add_attribute("D", "D", "C")
logical_negation
int_value (14)
int_value (9)
add_call_chain(<<c,C>>)
add_query("B", "B", <<["a", "BOOLEAN"], ["b", "c"], ["A", "BOOLEAN"], ["A", "D"], ["d", "INTEGER"], ["b", "INTEGER"]>>, "c")
add_call_chain(<<B,A,d,b,e,b,D>>)
add_attribute("B", "d", "BOOLEAN")
add_class(a)
greater_than
add_call_chain(<<a,d,d,a,b,D,a>>)
add_call_chain(<<a,A>>)
add_call_chain(<<a,c,A,d,a,B,B,c,B>>)
type_check
numerical_negation
equals
type_check
add_class(A)
logical_negation
int_value (21)
add_command("INTEGER", "c", <<["D", "INTEGER"], ["d", "d"], ["c", "BOOLEAN"], ["B", "B"], ["a", "INTEGER"], ["C", "BOOLEAN"], ["e", "INTEGER"], ["e", "INTEGER"]>>)
bool_value (true)
add_call_chain(<<B,A,A,D,b,d>>)
add_command("C", "d", <<["d", "BOOLEAN"]>>)
add_call_chain(<<B,C,c>>)
modulo
add_query("e", "B", <<["D", "BOOLEAN"], ["A", "BOOLEAN"]>>, "C")
add_call_chain(<<C,e,d,A,C,c,d,b,b>>)
addition
type_check
add_query("c", "a", <<["b", "c"], ["c", "C"], ["C", "INTEGER"], ["b", "BOOLEAN"]>>, "d")
add_class(B)
add_query("d", "C", <<["c", "BOOLEAN"], ["d", "INTEGER"], ["C", "D"]>>, "e")
add_attribute("BOOLEAN", "e", "d")
numerical_negation
add_call_chain(<<A,D,D,e,C,e,a,C,A>>)
add_command("D", "B", <<["B", "INTEGER"]>>)
add_call_chain(<<A,B,C,D,e,BOOLEAN,B>>)
less_than
add_call_chain(<<A>>)
type_check
add_attribute("D", "B", "INTEGER")
add_query("BOOLEAN", "e", <<["a", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "BOOLEAN"], ["INTEGER", "e"], ["c", "BOOLEAN"], ["b", "D"], ["e", "INTEGER"], ["A", "INTEGER"], ["d", "BOOLEAN"]>>, "e")
numerical_negation
generate_java_code
add_command("a", "d", <<["C", "INTEGER"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["b", "INTEGER"], ["B", "INTEGER"], ["INTEGER", "C"]>>)
add_call_chain(<<D,a,C,e,D>>)
less_than
add_call_chain(<<b,C,D,d,B>>)
int_value (27)
numerical_negation
add_class(d)
add_command("e", "e", <<["A", "INTEGER"], ["C", "a"], ["c", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "BOOLEAN"]>>)
add_command("b", "b", <<["C", "BOOLEAN"], ["A", "INTEGER"], ["B", "B"], ["b", "INTEGER"], ["e", "BOOLEAN"], ["B", "BOOLEAN"], ["INTEGER", "a"], ["d", "BOOLEAN"], ["BOOLEAN", "d"]>>)
equals
disjunction
add_command("INTEGER", "C", <<["a", "BOOLEAN"]>>)
bool_value (true)
add_call_chain(<<B,e,INTEGER,C,BOOLEAN,a,B,b,INTEGER>>)
add_call_chain(<<d>>)
add_class(C)
add_call_chain(<<C>>)
int_value (6)
type_check
add_call_chain(<<e,INTEGER,A>>)
generate_java_code
logical_negation
logical_negation
less_than
numerical_negation
numerical_negation
add_call_chain(<<D>>)
add_query("A", "B", <<["A", "INTEGER"], ["A", "INTEGER"], ["d", "BOOLEAN"], ["c", "INTEGER"]>>, "D")
numerical_negation
int_value (38)
add_call_chain(<<c,e>>)
add_query("c", "A", <<["b", "BOOLEAN"], ["c", "c"], ["BOOLEAN", "INTEGER"], ["A", "INTEGER"], ["c", "INTEGER"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["e", "BOOLEAN"]>>, "d")
add_class(C)
add_call_chain(<<c,A,B,BOOLEAN,C,e,C>>)
add_class(C)
bool_value (true)
add_call_chain(<<D,B,e,B,d,B,D,c,b>>)
type_check
logical_negation
subtraction
numerical_negation
add_call_chain(<<B,d,A,d,A,a,B,BOOLEAN>>)
add_call_chain(<<c,INTEGER,a,A,e,D,A,INTEGER>>)
type_check
int_value (43)
add_call_chain(<<e,INTEGER,B>>)
