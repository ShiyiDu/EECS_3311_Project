add_query("A", "A", <<["e", "INTEGER"], ["C", "INTEGER"], ["a", "B"], ["D", "BOOLEAN"], ["INTEGER", "c"], ["D", "INTEGER"], ["D", "INTEGER"], ["C", "INTEGER"], ["e", "C"]>>, "A")
generate_java_code
generate_java_code
disjunction
add_attribute("b", "A", "INTEGER")
add_query("c", "e", <<["D", "INTEGER"], ["D", "BOOLEAN"], ["B", "A"], ["C", "c"], ["e", "B"], ["A", "INTEGER"], ["c", "INTEGER"]>>, "C")
numerical_negation
conjunction
add_call_chain(<<D,C,B,BOOLEAN,B,C>>)
add_query("A", "D", <<["B", "d"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["d", "BOOLEAN"]>>, "B")
add_call_chain(<<a,C,c,A,e,c,B>>)
int_value (28)
logical_negation
logical_negation
add_call_chain(<<C>>)
add_call_chain(<<BOOLEAN,e,INTEGER,A,INTEGER,b,D,INTEGER>>)
add_call_chain(<<B,A,c,C>>)
logical_negation
add_query("c", "D", <<["a", "C"], ["d", "BOOLEAN"], ["D", "D"], ["B", "INTEGER"], ["B", "BOOLEAN"], ["C", "INTEGER"], ["D", "INTEGER"], ["B", "INTEGER"]>>, "INTEGER")
numerical_negation
add_call_chain(<<C,C,a,C>>)
add_class(d)
disjunction
logical_negation
int_value (25)
add_class(b)
subtraction
subtraction
add_attribute("c", "a", "BOOLEAN")
add_call_chain(<<d>>)
add_call_chain(<<e,D,C,e,e,d,INTEGER>>)
add_attribute("d", "e", "INTEGER")
add_class(e)
add_command("B", "b", <<["B", "C"], ["C", "INTEGER"], ["a", "BOOLEAN"], ["d", "b"], ["b", "a"], ["INTEGER", "a"], ["A", "BOOLEAN"]>>)
add_query("e", "b", <<["d", "INTEGER"], ["B", "e"], ["A", "BOOLEAN"]>>, "A")
add_command("c", "B", <<["C", "INTEGER"], ["D", "A"], ["c", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "B"], ["C", "A"], ["b", "INTEGER"]>>)
add_command("B", "D", <<["e", "INTEGER"], ["C", "INTEGER"], ["A", "INTEGER"], ["BOOLEAN", "INTEGER"], ["b", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["C", "INTEGER"], ["INTEGER", "BOOLEAN"], ["INTEGER", "INTEGER"]>>)
bool_value (true)
add_command("D", "D", <<["D", "B"], ["B", "INTEGER"], ["BOOLEAN", "INTEGER"], ["D", "BOOLEAN"], ["D", "BOOLEAN"]>>)
add_class(D)
logical_negation
add_command("c", "c", <<["a", "e"], ["INTEGER", "INTEGER"], ["A", "INTEGER"], ["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "A"], ["b", "e"], ["b", "BOOLEAN"], ["BOOLEAN", "B"]>>)
logical_negation
add_call_chain(<<a,b,D>>)
int_value (23)
add_command("D", "BOOLEAN", <<["C", "BOOLEAN"], ["B", "a"], ["BOOLEAN", "INTEGER"], ["C", "BOOLEAN"]>>)
less_than
bool_value (true)
conjunction
generate_java_code
add_query("D", "B", <<["d", "INTEGER"], ["D", "C"], ["a", "A"], ["INTEGER", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["c", "b"], ["A", "c"], ["A", "BOOLEAN"]>>, "e")
generate_java_code
add_class(d)
add_class(d)
bool_value (true)
add_query("d", "C", <<["B", "INTEGER"]>>, "b")
add_call_chain(<<BOOLEAN>>)
generate_java_code
int_value (37)
equals
add_attribute("INTEGER", "C", "INTEGER")
numerical_negation
add_query("e", "B", <<["D", "b"], ["BOOLEAN", "BOOLEAN"], ["C", "INTEGER"]>>, "A")
add_call_chain(<<c,d>>)
numerical_negation
bool_value (false)
bool_value (true)
logical_negation
add_query("d", "e", <<["C", "INTEGER"], ["d", "A"], ["e", "BOOLEAN"], ["INTEGER", "INTEGER"], ["INTEGER", "INTEGER"]>>, "e")
bool_value (false)
bool_value (false)
logical_negation
bool_value (true)
add_call_chain(<<e,c,c>>)
greater_than
add_class(c)
int_value (44)
conjunction
add_attribute("B", "b", "INTEGER")
add_call_chain(<<d,B,c,B,BOOLEAN,C>>)
add_call_chain(<<c>>)
add_class(d)
int_value (41)
int_value (4)
add_call_chain(<<c,b,INTEGER,a,e>>)
add_query("B", "c", <<["e", "BOOLEAN"], ["D", "d"], ["b", "BOOLEAN"], ["A", "a"], ["B", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "INTEGER"]>>, "d")
add_attribute("d", "D", "BOOLEAN")
logical_negation
less_than
numerical_negation
type_check
generate_java_code
numerical_negation
add_command("c", "d", <<["b", "BOOLEAN"]>>)
add_query("b", "D", <<["A", "A"], ["INTEGER", "B"]>>, "c")
add_command("C", "b", <<["a", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "A"], ["b", "INTEGER"]>>)
int_value (2)
numerical_negation
add_call_chain(<<d,D,D,D,c,b,A,A>>)
add_attribute("e", "d", "B")
int_value (32)
add_attribute("B", "b", "BOOLEAN")
bool_value (true)
add_command("e", "e", <<["D", "INTEGER"], ["d", "d"], ["A", "BOOLEAN"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["A", "B"], ["b", "INTEGER"]>>)
add_query("c", "d", <<["a", "e"], ["e", "INTEGER"], ["c", "BOOLEAN"], ["c", "INTEGER"], ["B", "BOOLEAN"]>>, "BOOLEAN")
type_check
add_command("C", "d", <<["d", "INTEGER"], ["A", "c"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["e", "BOOLEAN"]>>)
add_call_chain(<<B,d>>)
quotient
numerical_negation
add_call_chain(<<A,INTEGER,C>>)
add_attribute("C", "A", "C")
type_check
add_command("d", "C", <<["BOOLEAN", "INTEGER"]>>)
add_call_chain(<<D,B,BOOLEAN,A,A,A,e,D,C>>)
logical_negation
bool_value (true)
disjunction
generate_java_code
less_than
add_command("C", "INTEGER", <<["C", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["INTEGER", "C"], ["a", "c"]>>)
int_value (32)
bool_value (true)
add_command("e", "a", <<["a", "INTEGER"], ["c", "a"], ["a", "BOOLEAN"], ["a", "e"], ["D", "INTEGER"], ["d", "c"], ["INTEGER", "a"], ["BOOLEAN", "A"], ["D", "BOOLEAN"]>>)
add_command("e", "c", <<["e", "BOOLEAN"], ["B", "INTEGER"], ["A", "a"]>>)
bool_value (false)
add_command("c", "c", <<["c", "INTEGER"], ["B", "BOOLEAN"], ["e", "A"]>>)
add_query("C", "e", <<["c", "B"], ["A", "INTEGER"], ["c", "e"], ["B", "INTEGER"], ["C", "BOOLEAN"], ["e", "BOOLEAN"], ["c", "d"], ["c", "INTEGER"]>>, "e")
bool_value (false)
conjunction
add_attribute("a", "B", "D")
add_attribute("INTEGER", "C", "INTEGER")
add_command("INTEGER", "INTEGER", <<["c", "D"], ["e", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "INTEGER"], ["A", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "INTEGER"]>>)
add_call_chain(<<b,b,e,B,b>>)
add_attribute("c", "D", "INTEGER")
add_attribute("D", "e", "BOOLEAN")
add_attribute("BOOLEAN", "d", "a")
bool_value (false)
type_check
type_check
add_attribute("a", "D", "INTEGER")
int_value (18)
logical_negation
bool_value (false)
add_query("B", "b", <<["e", "b"], ["a", "d"], ["D", "BOOLEAN"], ["b", "A"], ["D", "BOOLEAN"]>>, "d")
add_query("D", "d", <<["B", "INTEGER"], ["b", "BOOLEAN"], ["B", "BOOLEAN"]>>, "INTEGER")
add_attribute("C", "c", "D")
disjunction
numerical_negation
int_value (11)
less_than
add_command("B", "d", <<["b", "INTEGER"], ["c", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["D", "a"], ["b", "BOOLEAN"], ["A", "A"], ["INTEGER", "BOOLEAN"], ["a", "B"]>>)
add_call_chain(<<B,d,e,b>>)
disjunction
add_attribute("B", "b", "e")
type_check
numerical_negation
add_class(e)
add_call_chain(<<D,e,d,b,D>>)
add_attribute("a", "c", "INTEGER")
add_attribute("D", "A", "D")
add_call_chain(<<a,C,A,B>>)
int_value (36)
add_attribute("A", "d", "INTEGER")
int_value (40)
logical_negation
subtraction
add_attribute("BOOLEAN", "BOOLEAN", "c")
add_call_chain(<<BOOLEAN>>)
generate_java_code
numerical_negation
type_check
add_attribute("d", "a", "INTEGER")
add_attribute("d", "A", "B")
add_command("e", "B", <<["c", "B"], ["INTEGER", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["D", "BOOLEAN"], ["C", "B"], ["INTEGER", "D"], ["A", "A"]>>)
add_query("B", "B", <<["c", "INTEGER"], ["B", "a"], ["B", "D"], ["e", "INTEGER"], ["e", "BOOLEAN"], ["a", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "INTEGER"], ["c", "INTEGER"]>>, "c")
add_attribute("e", "e", "INTEGER")
bool_value (false)
generate_java_code
disjunction
conjunction
int_value (41)
bool_value (true)
add_call_chain(<<e,C,b,a,D,INTEGER,a,a,a>>)
type_check
bool_value (false)
logical_negation
add_attribute("A", "d", "B")
add_call_chain(<<A,C,BOOLEAN,D,INTEGER,b>>)
add_call_chain(<<a,B>>)
add_attribute("c", "D", "BOOLEAN")
numerical_negation
logical_negation
disjunction
int_value (33)
conjunction
numerical_negation
type_check
bool_value (false)
int_value (7)
subtraction
add_call_chain(<<d,C,B,B,a,a,A>>)
modulo
type_check
type_check
equals
int_value (36)
add_call_chain(<<BOOLEAN,C,A,D,B,b>>)
bool_value (false)
add_query("D", "b", <<["C", "BOOLEAN"]>>, "D")
type_check
greater_than
add_command("D", "C", <<["c", "e"], ["b", "B"]>>)
generate_java_code
logical_negation
type_check
greater_than
int_value (24)
add_query("A", "B", <<["e", "INTEGER"], ["A", "A"], ["a", "D"], ["a", "BOOLEAN"], ["D", "INTEGER"], ["D", "B"], ["BOOLEAN", "INTEGER"], ["c", "INTEGER"], ["B", "B"]>>, "B")
bool_value (true)
add_call_chain(<<A,INTEGER,B,B,INTEGER,INTEGER,BOOLEAN>>)
numerical_negation
int_value (49)
numerical_negation
generate_java_code
generate_java_code
numerical_negation
bool_value (false)
greater_than
generate_java_code
numerical_negation
add_query("BOOLEAN", "INTEGER", <<["B", "C"], ["b", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "INTEGER"]>>, "c")
int_value (8)
numerical_negation
add_call_chain(<<B,D,A,c,D,a,c,D,BOOLEAN>>)
add_call_chain(<<e,D,INTEGER,B,D,C,D,D,D>>)
add_class(B)
int_value (14)
bool_value (false)
generate_java_code
int_value (29)
add_command("a", "c", <<["INTEGER", "e"], ["D", "BOOLEAN"]>>)
add_class(INTEGER)
generate_java_code
add_query("c", "c", <<["C", "BOOLEAN"], ["C", "BOOLEAN"], ["d", "B"], ["D", "B"], ["C", "INTEGER"], ["a", "BOOLEAN"]>>, "D")
add_command("b", "D", <<["B", "c"], ["C", "BOOLEAN"]>>)
int_value (35)
logical_negation
numerical_negation
add_command("d", "B", <<["D", "INTEGER"], ["B", "e"]>>)
add_call_chain(<<B,A>>)
bool_value (true)
generate_java_code
bool_value (false)
bool_value (true)
add_call_chain(<<C,C>>)
add_command("a", "A", <<["D", "BOOLEAN"], ["e", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>)
less_than
add_attribute("INTEGER", "B", "BOOLEAN")
add_command("e", "B", <<["D", "INTEGER"], ["INTEGER", "INTEGER"], ["A", "a"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "INTEGER"], ["C", "INTEGER"], ["e", "INTEGER"]>>)
type_check
modulo
add_attribute("C", "INTEGER", "BOOLEAN")
add_class(INTEGER)
add_attribute("C", "D", "e")
numerical_negation
