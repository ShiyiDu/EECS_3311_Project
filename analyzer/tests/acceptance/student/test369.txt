generate_java_code
bool_value (false)
int_value (43)
logical_negation
conjunction
type_check
logical_negation
add_class(C)
bool_value (false)
add_call_chain(<<D,C,BOOLEAN,C,c,C,INTEGER,b>>)
int_value (21)
generate_java_code
type_check
logical_negation
quotient
bool_value (false)
disjunction
quotient
disjunction
bool_value (false)
add_command("A", "b", <<["D", "INTEGER"], ["b", "BOOLEAN"], ["B", "c"], ["A", "INTEGER"]>>)
generate_java_code
add_call_chain(<<d,A,A,C,a,B>>)
add_attribute("B", "d", "c")
add_query("A", "b", <<["BOOLEAN", "B"], ["C", "BOOLEAN"]>>, "c")
add_call_chain(<<B>>)
add_query("e", "b", <<["A", "INTEGER"], ["D", "c"], ["C", "A"], ["B", "BOOLEAN"], ["B", "b"], ["b", "BOOLEAN"], ["INTEGER", "INTEGER"], ["C", "INTEGER"], ["b", "BOOLEAN"]>>, "d")
add_query("D", "BOOLEAN", <<["b", "INTEGER"]>>, "A")
add_command("d", "A", <<["D", "INTEGER"], ["d", "BOOLEAN"], ["c", "INTEGER"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["B", "INTEGER"], ["c", "e"]>>)
bool_value (false)
add_call_chain(<<B,B,C,c,d,d,A>>)
int_value (34)
generate_java_code
generate_java_code
add_attribute("e", "B", "c")
modulo
numerical_negation
numerical_negation
add_attribute("C", "d", "INTEGER")
multiplication
bool_value (true)
add_query("a", "A", <<["a", "BOOLEAN"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "B"]>>, "INTEGER")
subtraction
add_attribute("BOOLEAN", "e", "INTEGER")
add_command("D", "b", <<["C", "INTEGER"], ["c", "BOOLEAN"], ["C", "D"], ["d", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "D"], ["B", "BOOLEAN"]>>)
type_check
bool_value (false)
add_class(B)
add_attribute("D", "D", "C")
type_check
add_class(d)
add_command("C", "e", <<["e", "BOOLEAN"], ["d", "BOOLEAN"]>>)
add_query("a", "e", <<["A", "INTEGER"], ["d", "BOOLEAN"], ["A", "D"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["b", "BOOLEAN"], ["c", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "INTEGER"]>>, "D")
type_check
add_query("A", "b", <<["c", "INTEGER"], ["C", "A"], ["D", "INTEGER"], ["B", "BOOLEAN"], ["C", "INTEGER"]>>, "a")
add_command("D", "A", <<["B", "D"], ["c", "INTEGER"], ["a", "INTEGER"], ["b", "INTEGER"], ["a", "BOOLEAN"], ["e", "INTEGER"], ["e", "B"], ["B", "b"]>>)
bool_value (false)
add_class(d)
add_call_chain(<<e,B>>)
add_call_chain(<<c>>)
add_command("B", "c", <<["d", "BOOLEAN"]>>)
add_query("A", "B", <<["b", "INTEGER"], ["d", "BOOLEAN"], ["A", "INTEGER"], ["D", "D"], ["c", "B"], ["BOOLEAN", "INTEGER"], ["e", "BOOLEAN"]>>, "C")
int_value (9)
int_value (7)
type_check
int_value (46)
generate_java_code
bool_value (true)
addition
add_query("D", "b", <<["C", "INTEGER"], ["d", "e"], ["b", "INTEGER"], ["A", "BOOLEAN"]>>, "B")
addition
add_call_chain(<<INTEGER,a,e,B,D,C,C,a>>)
logical_negation
add_query("e", "C", <<["INTEGER", "D"], ["d", "a"], ["e", "BOOLEAN"], ["a", "INTEGER"], ["e", "INTEGER"], ["c", "BOOLEAN"]>>, "D")
add_attribute("BOOLEAN", "INTEGER", "c")
add_command("c", "e", <<["B", "A"], ["a", "INTEGER"], ["B", "BOOLEAN"], ["A", "b"], ["INTEGER", "A"], ["B", "BOOLEAN"], ["e", "BOOLEAN"]>>)
add_attribute("d", "a", "INTEGER")
numerical_negation
add_command("B", "e", <<["D", "D"], ["c", "BOOLEAN"]>>)
add_call_chain(<<e,c,d,A,C,B>>)
add_query("C", "B", <<["C", "BOOLEAN"], ["a", "INTEGER"], ["a", "BOOLEAN"], ["c", "BOOLEAN"], ["c", "BOOLEAN"]>>, "C")
add_call_chain(<<C,d,D,d,d,BOOLEAN,b>>)
bool_value (true)
add_class(D)
bool_value (true)
add_call_chain(<<C,B,a>>)
add_command("a", "C", <<["D", "BOOLEAN"], ["INTEGER", "B"], ["INTEGER", "b"], ["A", "INTEGER"], ["A", "e"], ["C", "B"]>>)
disjunction
disjunction
logical_negation
bool_value (false)
add_call_chain(<<INTEGER,A>>)
add_attribute("A", "D", "INTEGER")
type_check
add_command("B", "BOOLEAN", <<["d", "INTEGER"], ["A", "b"], ["A", "BOOLEAN"], ["a", "c"], ["B", "INTEGER"], ["b", "INTEGER"], ["B", "c"]>>)
add_attribute("d", "D", "BOOLEAN")
add_call_chain(<<BOOLEAN,b,b,D,D,BOOLEAN,B,b>>)
add_call_chain(<<e,e>>)
add_command("e", "BOOLEAN", <<["C", "b"], ["D", "INTEGER"], ["B", "INTEGER"], ["c", "C"], ["C", "INTEGER"], ["a", "BOOLEAN"], ["BOOLEAN", "C"], ["B", "INTEGER"], ["c", "B"]>>)
add_command("B", "A", <<["e", "B"], ["A", "INTEGER"], ["B", "INTEGER"], ["d", "BOOLEAN"], ["b", "INTEGER"]>>)
add_call_chain(<<D,e,D,b,D,D,e,D,C>>)
add_command("INTEGER", "BOOLEAN", <<["C", "B"], ["C", "BOOLEAN"], ["b", "b"], ["C", "BOOLEAN"], ["b", "d"], ["C", "b"], ["c", "BOOLEAN"], ["e", "INTEGER"]>>)
type_check
add_query("INTEGER", "b", <<["a", "BOOLEAN"], ["c", "D"], ["a", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>, "d")
equals
int_value (48)
add_class(c)
add_call_chain(<<e,e,D,c,BOOLEAN,A>>)
numerical_negation
equals
add_call_chain(<<B,D,C,D,b,D>>)
add_command("d", "A", <<["INTEGER", "d"], ["d", "INTEGER"], ["INTEGER", "INTEGER"], ["A", "BOOLEAN"], ["B", "BOOLEAN"]>>)
add_call_chain(<<INTEGER>>)
generate_java_code
numerical_negation
add_call_chain(<<D,C,C,B,e,D,D,c,C>>)
equals
add_attribute("A", "c", "INTEGER")
add_class(D)
bool_value (false)
add_query("b", "C", <<["d", "D"], ["B", "A"]>>, "c")
logical_negation
addition
add_query("D", "C", <<["a", "INTEGER"]>>, "B")
add_call_chain(<<INTEGER,BOOLEAN,A,D,a,a,C,c,c>>)
logical_negation
disjunction
add_call_chain(<<e,C,d,c,C,D,c,B>>)
add_call_chain(<<A,e,b,b,B>>)
numerical_negation
add_command("d", "C", <<["a", "INTEGER"], ["d", "INTEGER"], ["a", "INTEGER"], ["C", "a"], ["e", "BOOLEAN"], ["C", "BOOLEAN"]>>)
bool_value (true)
add_command("e", "C", <<["C", "INTEGER"], ["B", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["A", "B"], ["c", "B"], ["B", "BOOLEAN"], ["c", "INTEGER"]>>)
bool_value (true)
add_command("A", "c", <<["B", "INTEGER"], ["D", "BOOLEAN"], ["A", "INTEGER"]>>)
add_attribute("a", "INTEGER", "BOOLEAN")
logical_negation
add_call_chain(<<INTEGER,B,C,INTEGER,A,D,B>>)
add_command("D", "B", <<["C", "BOOLEAN"], ["d", "BOOLEAN"], ["e", "INTEGER"]>>)
add_query("A", "BOOLEAN", <<["C", "BOOLEAN"], ["e", "b"], ["INTEGER", "c"], ["C", "c"], ["D", "BOOLEAN"]>>, "D")
numerical_negation
generate_java_code
add_call_chain(<<B,A>>)
add_command("BOOLEAN", "C", <<["b", "BOOLEAN"]>>)
addition
less_than
add_query("b", "e", <<["BOOLEAN", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "INTEGER"], ["D", "INTEGER"], ["b", "INTEGER"]>>, "a")
add_call_chain(<<c,a,INTEGER,b,INTEGER,A>>)
add_query("e", "a", <<["C", "BOOLEAN"], ["B", "INTEGER"], ["d", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "INTEGER"], ["c", "B"], ["e", "e"]>>, "C")
add_class(A)
type_check
add_query("c", "A", <<["a", "INTEGER"], ["A", "b"], ["e", "INTEGER"], ["b", "BOOLEAN"], ["a", "INTEGER"], ["c", "a"], ["BOOLEAN", "INTEGER"]>>, "d")
bool_value (false)
add_attribute("e", "C", "INTEGER")
conjunction
int_value (42)
numerical_negation
add_attribute("C", "A", "BOOLEAN")
add_class(b)
numerical_negation
bool_value (false)
type_check
add_query("D", "d", <<["B", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "e"], ["BOOLEAN", "B"], ["B", "INTEGER"], ["c", "INTEGER"], ["c", "INTEGER"], ["e", "A"]>>, "INTEGER")
add_call_chain(<<BOOLEAN,C,d,c>>)
bool_value (true)
int_value (10)
add_call_chain(<<a,B,a,A,a,c,B,D>>)
add_class(e)
numerical_negation
add_query("C", "e", <<["c", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["a", "INTEGER"], ["D", "D"], ["a", "BOOLEAN"], ["d", "BOOLEAN"]>>, "e")
int_value (28)
add_command("C", "a", <<["b", "INTEGER"], ["B", "B"]>>)
type_check
bool_value (true)
add_command("a", "A", <<["e", "b"], ["B", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["A", "INTEGER"], ["D", "INTEGER"], ["c", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "INTEGER"]>>)
numerical_negation
add_command("a", "B", <<["a", "INTEGER"], ["A", "INTEGER"], ["d", "BOOLEAN"], ["d", "D"], ["a", "BOOLEAN"], ["e", "e"], ["INTEGER", "INTEGER"], ["B", "INTEGER"], ["c", "e"]>>)
type_check
bool_value (false)
bool_value (true)
type_check
add_attribute("C", "B", "BOOLEAN")
multiplication
int_value (47)
addition
bool_value (true)
add_attribute("A", "e", "BOOLEAN")
quotient
add_call_chain(<<BOOLEAN,e,BOOLEAN>>)
equals
add_call_chain(<<D,D,a,D,d,B,C,B,b>>)
add_attribute("b", "a", "BOOLEAN")
generate_java_code
add_call_chain(<<C,d,c,D,C,c,a>>)
add_command("C", "e", <<["B", "e"], ["c", "INTEGER"], ["D", "d"], ["d", "INTEGER"]>>)
int_value (27)
generate_java_code
int_value (40)
add_call_chain(<<c>>)
greater_than
numerical_negation
disjunction
add_command("d", "e", <<["BOOLEAN", "BOOLEAN"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["A", "BOOLEAN"]>>)
add_call_chain(<<INTEGER,A>>)
add_query("A", "C", <<["A", "BOOLEAN"], ["c", "INTEGER"]>>, "b")
add_call_chain(<<e,B,BOOLEAN,e,A,D>>)
add_attribute("D", "b", "BOOLEAN")
bool_value (false)
logical_negation
disjunction
equals
conjunction
add_query("a", "INTEGER", <<["e", "BOOLEAN"], ["D", "D"], ["D", "INTEGER"], ["e", "INTEGER"], ["e", "BOOLEAN"], ["A", "B"], ["B", "INTEGER"]>>, "B")
generate_java_code
add_attribute("B", "D", "BOOLEAN")
add_class(D)
add_call_chain(<<D,d,b,B>>)
add_command("a", "d", <<["C", "e"], ["A", "BOOLEAN"]>>)
int_value (17)
bool_value (true)
int_value (16)
