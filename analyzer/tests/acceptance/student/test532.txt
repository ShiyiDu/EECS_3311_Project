add_command("a", "D", <<["c", "a"], ["b", "b"], ["INTEGER", "C"]>>)
type_check
add_attribute("d", "B", "d")
greater_than
numerical_negation
add_query("b", "e", <<["D", "INTEGER"], ["e", "BOOLEAN"]>>, "BOOLEAN")
add_command("e", "B", <<["C", "BOOLEAN"], ["A", "a"]>>)
int_value (45)
int_value (46)
int_value (45)
add_call_chain(<<a,b,d,INTEGER>>)
add_query("C", "d", <<["a", "INTEGER"], ["d", "C"], ["D", "INTEGER"]>>, "d")
generate_java_code
add_attribute("b", "d", "INTEGER")
add_query("A", "c", <<["A", "BOOLEAN"], ["c", "a"]>>, "d")
bool_value (false)
add_command("b", "D", <<["d", "INTEGER"], ["c", "D"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "D"], ["a", "BOOLEAN"]>>)
greater_than
add_call_chain(<<B,a,e,D,B,B,C>>)
add_attribute("c", "c", "INTEGER")
add_call_chain(<<C,B,e,A,C,B,D,C,C>>)
add_attribute("e", "A", "BOOLEAN")
equals
logical_negation
numerical_negation
add_class(INTEGER)
add_call_chain(<<c,a,b>>)
add_attribute("BOOLEAN", "d", "B")
disjunction
logical_negation
generate_java_code
logical_negation
logical_negation
add_call_chain(<<d,b>>)
add_attribute("b", "a", "BOOLEAN")
add_attribute("B", "D", "BOOLEAN")
add_attribute("b", "A", "D")
add_call_chain(<<d,c,C,B,INTEGER>>)
bool_value (true)
add_attribute("INTEGER", "b", "BOOLEAN")
add_query("BOOLEAN", "c", <<["c", "INTEGER"], ["D", "A"]>>, "c")
generate_java_code
add_call_chain(<<BOOLEAN,INTEGER,d,A,D,A>>)
int_value (43)
logical_negation
int_value (20)
add_attribute("B", "B", "INTEGER")
quotient
int_value (21)
equals
bool_value (false)
type_check
add_call_chain(<<INTEGER>>)
add_call_chain(<<D,e,A,b>>)
add_query("e", "c", <<["INTEGER", "BOOLEAN"], ["e", "INTEGER"], ["A", "INTEGER"], ["A", "INTEGER"], ["A", "BOOLEAN"], ["B", "B"], ["C", "B"], ["B", "b"]>>, "C")
bool_value (true)
conjunction
add_call_chain(<<D,d,INTEGER,b,B>>)
numerical_negation
modulo
add_call_chain(<<e,D,d,b,e>>)
disjunction
bool_value (true)
quotient
addition
type_check
add_query("D", "D", <<["B", "C"], ["B", "B"], ["C", "INTEGER"], ["d", "INTEGER"], ["D", "D"]>>, "A")
int_value (42)
bool_value (true)
disjunction
conjunction
add_call_chain(<<d,A,BOOLEAN,b>>)
int_value (18)
int_value (1)
add_call_chain(<<C,c,D,a,D,d,c,c>>)
type_check
add_call_chain(<<e>>)
quotient
add_attribute("c", "INTEGER", "INTEGER")
conjunction
add_call_chain(<<C,a,a,B,a,B,d>>)
add_attribute("BOOLEAN", "c", "e")
subtraction
equals
type_check
numerical_negation
add_query("B", "INTEGER", <<["INTEGER", "INTEGER"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "e"], ["c", "INTEGER"], ["a", "INTEGER"], ["e", "BOOLEAN"], ["C", "B"], ["BOOLEAN", "C"]>>, "a")
modulo
add_call_chain(<<A,c,B,D,b,b,a>>)
less_than
bool_value (true)
add_call_chain(<<C,D,A,D,A>>)
conjunction
add_command("D", "B", <<["c", "BOOLEAN"], ["A", "b"], ["d", "INTEGER"], ["BOOLEAN", "INTEGER"], ["B", "BOOLEAN"]>>)
add_class(e)
conjunction
int_value (44)
add_class(BOOLEAN)
type_check
add_query("b", "d", <<["A", "INTEGER"], ["d", "A"]>>, "d")
bool_value (true)
add_query("d", "BOOLEAN", <<["b", "INTEGER"], ["c", "INTEGER"], ["A", "d"], ["B", "BOOLEAN"], ["d", "BOOLEAN"]>>, "C")
add_class(INTEGER)
add_call_chain(<<e,C,d,c,d,C,C,e,b>>)
add_call_chain(<<a,INTEGER>>)
bool_value (true)
generate_java_code
greater_than
add_command("d", "b", <<["B", "d"], ["e", "INTEGER"], ["e", "INTEGER"], ["a", "D"], ["e", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "INTEGER"]>>)
numerical_negation
int_value (27)
add_call_chain(<<b,d>>)
int_value (8)
numerical_negation
numerical_negation
type_check
generate_java_code
disjunction
multiplication
add_call_chain(<<c,B,D,A>>)
int_value (23)
add_command("C", "A", <<["d", "INTEGER"]>>)
disjunction
add_command("c", "B", <<["c", "BOOLEAN"]>>)
bool_value (true)
add_attribute("a", "b", "A")
numerical_negation
logical_negation
multiplication
add_call_chain(<<C>>)
add_call_chain(<<e,C,C,B,a,B,A,D>>)
add_attribute("d", "e", "b")
add_command("e", "C", <<["C", "e"], ["c", "INTEGER"], ["e", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
add_command("D", "B", <<["C", "BOOLEAN"], ["d", "D"], ["c", "A"], ["c", "B"]>>)
generate_java_code
add_query("d", "A", <<["a", "INTEGER"], ["A", "A"], ["d", "INTEGER"], ["a", "b"], ["B", "BOOLEAN"], ["D", "B"], ["a", "BOOLEAN"], ["c", "A"]>>, "d")
less_than
numerical_negation
type_check
add_command("d", "a", <<["D", "e"], ["c", "INTEGER"], ["C", "D"], ["D", "A"], ["B", "BOOLEAN"], ["D", "C"], ["b", "d"]>>)
bool_value (true)
generate_java_code
numerical_negation
add_class(b)
logical_negation
add_call_chain(<<a,b,A,D,c>>)
bool_value (true)
numerical_negation
generate_java_code
add_call_chain(<<B,D,A,D,D,a,C,C>>)
add_attribute("e", "C", "BOOLEAN")
add_class(C)
int_value (10)
add_attribute("C", "e", "BOOLEAN")
add_command("BOOLEAN", "C", <<["c", "INTEGER"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["e", "INTEGER"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["b", "e"]>>)
bool_value (true)
logical_negation
int_value (3)
less_than
conjunction
generate_java_code
add_command("A", "a", <<["B", "BOOLEAN"], ["B", "C"]>>)
equals
add_call_chain(<<e,a,C,B,D,D,e,c>>)
type_check
add_command("c", "b", <<["A", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "d"]>>)
logical_negation
add_command("D", "c", <<["d", "BOOLEAN"], ["C", "INTEGER"]>>)
generate_java_code
add_call_chain(<<INTEGER,A,b,A,b,e>>)
int_value (11)
int_value (23)
bool_value (true)
type_check
numerical_negation
add_attribute("A", "e", "e")
less_than
int_value (21)
modulo
bool_value (true)
add_command("c", "D", <<["B", "INTEGER"]>>)
add_command("b", "D", <<["b", "B"], ["b", "C"], ["e", "INTEGER"], ["A", "BOOLEAN"], ["D", "INTEGER"], ["C", "INTEGER"], ["D", "D"]>>)
add_call_chain(<<A,BOOLEAN,D,e,a,C,C,C,D>>)
add_command("C", "B", <<["INTEGER", "d"], ["e", "d"], ["c", "INTEGER"], ["e", "INTEGER"], ["C", "INTEGER"]>>)
bool_value (false)
bool_value (false)
type_check
add_class(b)
add_class(D)
modulo
bool_value (false)
logical_negation
bool_value (false)
add_query("BOOLEAN", "INTEGER", <<["B", "INTEGER"], ["c", "INTEGER"], ["C", "d"]>>, "B")
add_call_chain(<<e,INTEGER,b>>)
add_command("d", "B", <<["b", "d"], ["b", "a"], ["B", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "a"]>>)
add_attribute("a", "B", "INTEGER")
add_query("B", "c", <<["B", "BOOLEAN"], ["C", "BOOLEAN"]>>, "e")
add_call_chain(<<b,c,a,b,BOOLEAN,c,B>>)
add_query("c", "D", <<["a", "INTEGER"], ["BOOLEAN", "INTEGER"]>>, "b")
add_class(INTEGER)
equals
add_call_chain(<<d,e,B>>)
disjunction
add_attribute("e", "B", "BOOLEAN")
add_call_chain(<<a,A,e,C,INTEGER,D,d>>)
add_call_chain(<<D,BOOLEAN>>)
logical_negation
add_command("b", "a", <<["D", "INTEGER"]>>)
generate_java_code
generate_java_code
add_command("a", "d", <<["D", "INTEGER"]>>)
add_query("d", "b", <<["b", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["INTEGER", "e"], ["D", "INTEGER"]>>, "A")
add_query("d", "C", <<["B", "INTEGER"], ["b", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "d"], ["a", "A"], ["d", "BOOLEAN"]>>, "BOOLEAN")
int_value (42)
add_class(C)
add_query("e", "e", <<["B", "INTEGER"], ["a", "BOOLEAN"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["B", "A"]>>, "b")
numerical_negation
