disjunction
add_call_chain(<<INTEGER,c,D>>)
add_call_chain(<<e,C,e>>)
add_query("e", "c", <<["b", "C"], ["b", "BOOLEAN"], ["a", "INTEGER"], ["D", "BOOLEAN"], ["d", "e"], ["a", "INTEGER"], ["e", "BOOLEAN"], ["BOOLEAN", "e"]>>, "c")
type_check
add_command("d", "a", <<["INTEGER", "INTEGER"], ["b", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "A"], ["D", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "BOOLEAN"]>>)
add_call_chain(<<INTEGER,A,C,D>>)
add_class(e)
add_class(e)
numerical_negation
numerical_negation
add_attribute("D", "D", "INTEGER")
bool_value (true)
generate_java_code
int_value (49)
add_call_chain(<<D,BOOLEAN,b,BOOLEAN,A>>)
add_query("D", "C", <<["e", "INTEGER"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["e", "B"]>>, "e")
int_value (25)
numerical_negation
add_query("d", "D", <<["C", "c"], ["D", "d"], ["b", "BOOLEAN"], ["b", "A"], ["D", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "BOOLEAN"]>>, "c")
add_query("B", "B", <<["b", "BOOLEAN"], ["d", "INTEGER"], ["c", "BOOLEAN"], ["b", "e"]>>, "D")
add_query("c", "b", <<["b", "BOOLEAN"], ["B", "C"], ["A", "A"], ["a", "BOOLEAN"], ["a", "d"], ["b", "INTEGER"]>>, "B")
less_than
add_command("c", "b", <<["C", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["c", "BOOLEAN"], ["e", "BOOLEAN"], ["a", "INTEGER"], ["a", "INTEGER"]>>)
disjunction
generate_java_code
generate_java_code
add_call_chain(<<a,A,B,D,d,e,c,c,BOOLEAN>>)
add_call_chain(<<INTEGER,d,B,A,c,e>>)
type_check
conjunction
int_value (17)
add_attribute("a", "A", "BOOLEAN")
logical_negation
generate_java_code
int_value (41)
add_call_chain(<<A,b,BOOLEAN,a,e>>)
add_query("BOOLEAN", "B", <<["b", "d"], ["A", "INTEGER"], ["d", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["INTEGER", "INTEGER"]>>, "d")
logical_negation
add_attribute("B", "a", "BOOLEAN")
generate_java_code
add_attribute("b", "c", "c")
int_value (44)
conjunction
logical_negation
generate_java_code
bool_value (false)
logical_negation
add_query("a", "B", <<["d", "B"], ["b", "BOOLEAN"], ["c", "e"], ["b", "INTEGER"], ["e", "INTEGER"], ["e", "B"], ["D", "INTEGER"], ["a", "INTEGER"], ["A", "INTEGER"]>>, "INTEGER")
add_attribute("A", "C", "INTEGER")
add_query("D", "c", <<["D", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["B", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["c", "INTEGER"], ["C", "BOOLEAN"], ["d", "INTEGER"], ["c", "b"]>>, "e")
logical_negation
int_value (12)
bool_value (false)
logical_negation
bool_value (false)
add_command("d", "B", <<["b", "INTEGER"], ["D", "BOOLEAN"]>>)
add_call_chain(<<D,B>>)
add_query("e", "c", <<["D", "BOOLEAN"], ["e", "INTEGER"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["b", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "BOOLEAN"]>>, "d")
add_command("e", "d", <<["B", "INTEGER"], ["A", "INTEGER"], ["a", "BOOLEAN"], ["c", "INTEGER"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "C"], ["B", "BOOLEAN"]>>)
add_command("a", "D", <<["b", "INTEGER"], ["d", "BOOLEAN"]>>)
logical_negation
add_attribute("d", "C", "INTEGER")
numerical_negation
add_call_chain(<<C,d,D,c,a,c,a,d,B>>)
int_value (48)
add_attribute("B", "BOOLEAN", "D")
add_query("A", "d", <<["b", "B"], ["b", "c"], ["D", "BOOLEAN"], ["b", "INTEGER"]>>, "D")
logical_negation
add_call_chain(<<a>>)
int_value (23)
generate_java_code
add_command("a", "D", <<["C", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "INTEGER"], ["e", "INTEGER"], ["A", "BOOLEAN"]>>)
numerical_negation
add_call_chain(<<e,d,D,b,BOOLEAN,c,C,d>>)
add_query("D", "C", <<["c", "B"], ["b", "INTEGER"], ["c", "C"], ["INTEGER", "A"], ["e", "INTEGER"], ["BOOLEAN", "INTEGER"]>>, "a")
less_than
add_attribute("b", "A", "BOOLEAN")
type_check
add_call_chain(<<c,d,b,D>>)
bool_value (false)
add_attribute("C", "b", "INTEGER")
int_value (46)
add_attribute("a", "b", "BOOLEAN")
add_attribute("BOOLEAN", "d", "BOOLEAN")
add_query("A", "D", <<["D", "INTEGER"]>>, "A")
conjunction
bool_value (false)
type_check
logical_negation
logical_negation
add_command("BOOLEAN", "A", <<["d", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "INTEGER"]>>)
add_command("D", "a", <<["C", "BOOLEAN"], ["D", "BOOLEAN"]>>)
numerical_negation
int_value (14)
add_command("B", "a", <<["a", "D"], ["B", "BOOLEAN"], ["BOOLEAN", "a"], ["a", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "BOOLEAN"], ["d", "b"], ["e", "INTEGER"]>>)
int_value (34)
add_call_chain(<<A,INTEGER,b,BOOLEAN,d,A,BOOLEAN,C>>)
logical_negation
generate_java_code
add_attribute("c", "D", "INTEGER")
add_call_chain(<<b>>)
logical_negation
add_attribute("B", "b", "INTEGER")
add_attribute("c", "c", "INTEGER")
bool_value (true)
add_class(A)
add_query("c", "A", <<["a", "D"], ["a", "INTEGER"], ["A", "BOOLEAN"]>>, "e")
bool_value (false)
add_call_chain(<<BOOLEAN,b,a,C>>)
add_call_chain(<<INTEGER,e,c,D,A,A,B,INTEGER>>)
disjunction
add_query("A", "c", <<["A", "INTEGER"], ["a", "B"], ["INTEGER", "C"], ["A", "INTEGER"], ["A", "BOOLEAN"], ["d", "BOOLEAN"], ["e", "b"], ["e", "BOOLEAN"], ["c", "D"]>>, "B")
add_attribute("C", "a", "BOOLEAN")
conjunction
type_check
int_value (32)
add_attribute("C", "a", "INTEGER")
numerical_negation
generate_java_code
add_class(A)
logical_negation
add_command("c", "a", <<["a", "B"], ["C", "INTEGER"], ["d", "BOOLEAN"], ["C", "BOOLEAN"]>>)
less_than
int_value (37)
add_call_chain(<<D,e,e,D,C,D,C,C,A>>)
type_check
add_call_chain(<<b,A,c,C,C,c,C,C,A>>)
add_class(d)
add_query("c", "C", <<["a", "BOOLEAN"], ["e", "INTEGER"], ["B", "INTEGER"], ["A", "BOOLEAN"]>>, "C")
modulo
add_call_chain(<<INTEGER,b,D>>)
numerical_negation
less_than
add_query("d", "A", <<["a", "D"], ["b", "e"], ["D", "b"], ["B", "BOOLEAN"], ["A", "BOOLEAN"]>>, "b")
generate_java_code
bool_value (false)
numerical_negation
generate_java_code
int_value (31)
less_than
add_class(INTEGER)
add_attribute("D", "c", "BOOLEAN")
add_attribute("d", "C", "C")
add_call_chain(<<B,C,d>>)
add_command("B", "A", <<["BOOLEAN", "BOOLEAN"], ["C", "c"]>>)
add_attribute("e", "a", "BOOLEAN")
type_check
add_call_chain(<<B,b,C,D,B>>)
add_command("B", "b", <<["D", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["a", "BOOLEAN"]>>)
add_class(A)
int_value (27)
add_attribute("INTEGER", "c", "INTEGER")
conjunction
add_call_chain(<<e>>)
bool_value (false)
generate_java_code
add_attribute("e", "C", "BOOLEAN")
generate_java_code
add_call_chain(<<d,D,d,e,a,A,d,C,A>>)
conjunction
add_command("e", "b", <<["a", "INTEGER"], ["a", "INTEGER"], ["b", "C"], ["d", "INTEGER"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "a"], ["d", "INTEGER"]>>)
conjunction
logical_negation
int_value (37)
add_query("A", "d", <<["C", "INTEGER"], ["C", "INTEGER"], ["BOOLEAN", "INTEGER"], ["d", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "BOOLEAN"], ["a", "INTEGER"]>>, "D")
add_query("D", "B", <<["B", "BOOLEAN"], ["D", "A"], ["a", "B"]>>, "A")
bool_value (true)
quotient
add_call_chain(<<d,B,b,A>>)
add_query("B", "c", <<["B", "INTEGER"], ["d", "INTEGER"], ["A", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "D"]>>, "BOOLEAN")
add_call_chain(<<c,B,C,e,b>>)
int_value (41)
bool_value (true)
add_call_chain(<<D>>)
add_command("D", "d", <<["d", "BOOLEAN"], ["C", "A"], ["b", "a"], ["D", "INTEGER"], ["c", "d"], ["c", "BOOLEAN"], ["e", "BOOLEAN"]>>)
add_attribute("c", "a", "BOOLEAN")
add_attribute("B", "B", "BOOLEAN")
disjunction
add_command("A", "B", <<["a", "INTEGER"], ["a", "B"]>>)
add_attribute("c", "B", "B")
add_attribute("e", "INTEGER", "INTEGER")
add_query("D", "C", <<["D", "B"], ["e", "b"], ["B", "D"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["A", "INTEGER"], ["a", "BOOLEAN"], ["B", "INTEGER"]>>, "c")
conjunction
type_check
add_command("A", "D", <<["A", "INTEGER"], ["a", "BOOLEAN"], ["B", "INTEGER"], ["A", "INTEGER"]>>)
int_value (16)
add_call_chain(<<A,b,c,b>>)
greater_than
add_command("B", "D", <<["A", "D"], ["a", "BOOLEAN"], ["c", "c"], ["c", "INTEGER"], ["B", "BOOLEAN"]>>)
int_value (24)
int_value (37)
add_command("e", "D", <<["B", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "C"], ["c", "INTEGER"], ["C", "INTEGER"], ["c", "B"]>>)
subtraction
add_command("B", "e", <<["INTEGER", "a"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "INTEGER"], ["B", "INTEGER"], ["B", "BOOLEAN"], ["c", "c"], ["d", "b"]>>)
type_check
add_attribute("D", "b", "BOOLEAN")
add_query("d", "A", <<["e", "INTEGER"], ["a", "INTEGER"], ["BOOLEAN", "c"], ["B", "INTEGER"], ["B", "BOOLEAN"]>>, "b")
add_attribute("INTEGER", "a", "BOOLEAN")
add_attribute("D", "A", "INTEGER")
add_command("B", "D", <<["C", "INTEGER"], ["a", "INTEGER"], ["A", "C"], ["B", "D"], ["C", "b"]>>)
int_value (23)
bool_value (true)
add_call_chain(<<e,b,INTEGER,a,d,e,c,INTEGER,e>>)
generate_java_code
numerical_negation
add_attribute("e", "d", "BOOLEAN")
add_class(D)
add_command("D", "a", <<["D", "INTEGER"], ["d", "INTEGER"], ["d", "D"], ["A", "BOOLEAN"]>>)
numerical_negation
generate_java_code
add_call_chain(<<INTEGER>>)
conjunction
bool_value (true)
add_call_chain(<<A,D,b,INTEGER>>)
add_attribute("D", "c", "INTEGER")
add_class(C)
logical_negation
bool_value (true)
equals
disjunction
disjunction
add_class(A)
add_query("a", "A", <<["b", "A"], ["c", "B"], ["c", "BOOLEAN"], ["d", "C"], ["b", "c"]>>, "b")
bool_value (false)
bool_value (false)
int_value (37)
int_value (33)
add_command("a", "BOOLEAN", <<["A", "INTEGER"], ["a", "INTEGER"], ["B", "INTEGER"], ["B", "A"]>>)
equals
logical_negation
bool_value (false)
disjunction
add_command("C", "a", <<["c", "INTEGER"], ["C", "c"], ["D", "INTEGER"]>>)
conjunction
equals
bool_value (true)
type_check
type_check
add_attribute("BOOLEAN", "a", "BOOLEAN")
add_call_chain(<<a,A,B,C>>)
add_class(c)
add_command("C", "c", <<["A", "BOOLEAN"], ["a", "INTEGER"], ["a", "BOOLEAN"], ["e", "INTEGER"], ["B", "B"], ["C", "INTEGER"]>>)
add_call_chain(<<b,a,a>>)
add_call_chain(<<a,c,B,B,D>>)
add_class(a)
