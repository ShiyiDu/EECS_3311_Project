type_check
add_query("b", "a", <<["BOOLEAN", "BOOLEAN"], ["A", "C"], ["A", "BOOLEAN"], ["e", "BOOLEAN"], ["a", "INTEGER"], ["e", "BOOLEAN"]>>, "d")
add_class(B)
int_value (2)
bool_value (true)
add_command("B", "c", <<["C", "B"], ["C", "BOOLEAN"]>>)
generate_java_code
add_attribute("BOOLEAN", "b", "BOOLEAN")
addition
logical_negation
add_command("D", "B", <<["D", "B"], ["c", "BOOLEAN"], ["B", "e"], ["A", "B"], ["b", "INTEGER"]>>)
numerical_negation
int_value (17)
add_command("d", "A", <<["C", "BOOLEAN"]>>)
add_call_chain(<<e,c,D,D,e,INTEGER,c,A,D>>)
add_call_chain(<<b,A,b,C,D,c,B,e>>)
add_call_chain(<<b,C,B,c,B,BOOLEAN,A,A>>)
add_attribute("a", "B", "INTEGER")
logical_negation
add_attribute("B", "B", "INTEGER")
logical_negation
add_attribute("INTEGER", "D", "INTEGER")
add_attribute("b", "A", "BOOLEAN")
logical_negation
add_query("e", "a", <<["B", "D"], ["c", "INTEGER"], ["D", "INTEGER"], ["c", "e"], ["D", "INTEGER"], ["A", "INTEGER"]>>, "d")
int_value (40)
add_call_chain(<<b,BOOLEAN,e,e>>)
add_query("BOOLEAN", "C", <<["D", "INTEGER"], ["A", "e"], ["a", "BOOLEAN"], ["c", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>, "b")
add_query("d", "D", <<["C", "d"], ["d", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "BOOLEAN"], ["c", "b"], ["INTEGER", "a"]>>, "b")
less_than
add_call_chain(<<BOOLEAN,A,a,INTEGER,b,e,c,INTEGER,B>>)
add_class(B)
numerical_negation
add_attribute("D", "a", "BOOLEAN")
numerical_negation
add_class(B)
add_command("INTEGER", "b", <<["A", "INTEGER"], ["C", "BOOLEAN"], ["B", "INTEGER"], ["C", "INTEGER"], ["C", "INTEGER"], ["e", "a"], ["b", "INTEGER"]>>)
int_value (40)
int_value (26)
logical_negation
add_call_chain(<<d,a>>)
add_query("B", "c", <<["C", "BOOLEAN"], ["B", "INTEGER"], ["B", "e"]>>, "D")
add_query("D", "INTEGER", <<["e", "B"], ["a", "C"], ["d", "INTEGER"], ["D", "INTEGER"]>>, "B")
disjunction
add_call_chain(<<b,e,b,BOOLEAN,C,A,BOOLEAN,c>>)
add_call_chain(<<B,INTEGER,a,D>>)
add_attribute("A", "C", "BOOLEAN")
type_check
quotient
add_call_chain(<<a,d,e,A,e,e>>)
less_than
add_query("BOOLEAN", "d", <<["INTEGER", "BOOLEAN"], ["c", "INTEGER"], ["B", "INTEGER"], ["b", "INTEGER"], ["D", "BOOLEAN"], ["e", "BOOLEAN"]>>, "D")
add_call_chain(<<A,c,b,C,B,BOOLEAN,B,c>>)
add_query("c", "a", <<["D", "INTEGER"], ["A", "e"], ["INTEGER", "INTEGER"], ["A", "INTEGER"], ["A", "INTEGER"], ["a", "INTEGER"], ["C", "BOOLEAN"], ["B", "C"], ["b", "BOOLEAN"]>>, "B")
add_call_chain(<<A,INTEGER>>)
numerical_negation
add_attribute("b", "D", "BOOLEAN")
add_class(D)
numerical_negation
int_value (2)
logical_negation
add_command("b", "B", <<["b", "B"], ["e", "BOOLEAN"], ["C", "BOOLEAN"], ["d", "INTEGER"], ["a", "INTEGER"], ["D", "BOOLEAN"], ["e", "BOOLEAN"]>>)
logical_negation
add_call_chain(<<INTEGER,e,c,D,C>>)
addition
quotient
add_command("e", "e", <<["BOOLEAN", "INTEGER"], ["D", "D"], ["A", "B"], ["a", "a"], ["A", "C"]>>)
generate_java_code
add_command("e", "BOOLEAN", <<["a", "BOOLEAN"], ["INTEGER", "e"], ["a", "BOOLEAN"], ["D", "e"], ["B", "INTEGER"], ["c", "e"], ["a", "INTEGER"], ["a", "BOOLEAN"]>>)
disjunction
add_query("INTEGER", "B", <<["a", "e"], ["BOOLEAN", "c"], ["INTEGER", "BOOLEAN"]>>, "BOOLEAN")
int_value (45)
add_call_chain(<<BOOLEAN,D,C,C,a>>)
type_check
type_check
bool_value (true)
add_call_chain(<<d,D,d,INTEGER,d,C,d,d,c>>)
add_command("C", "c", <<["B", "BOOLEAN"], ["INTEGER", "b"], ["d", "BOOLEAN"], ["e", "INTEGER"], ["d", "A"], ["d", "INTEGER"], ["A", "BOOLEAN"], ["c", "BOOLEAN"]>>)
type_check
add_call_chain(<<A,c,INTEGER,b>>)
add_call_chain(<<A,c,A,c,D,a>>)
add_class(b)
generate_java_code
add_command("A", "BOOLEAN", <<["d", "INTEGER"], ["INTEGER", "INTEGER"], ["A", "BOOLEAN"], ["c", "BOOLEAN"]>>)
add_query("b", "C", <<["b", "BOOLEAN"], ["D", "INTEGER"]>>, "BOOLEAN")
type_check
add_attribute("A", "b", "INTEGER")
add_call_chain(<<c>>)
bool_value (false)
logical_negation
bool_value (false)
generate_java_code
multiplication
add_call_chain(<<B,D,A,D,d,C,INTEGER,INTEGER>>)
add_call_chain(<<d,b,d>>)
add_attribute("INTEGER", "D", "D")
numerical_negation
numerical_negation
equals
equals
int_value (12)
add_class(a)
int_value (40)
int_value (9)
int_value (47)
add_call_chain(<<C,d,D,a,C,e,INTEGER>>)
equals
add_call_chain(<<d,D,B,B,e,INTEGER,A>>)
add_attribute("D", "d", "INTEGER")
numerical_negation
bool_value (false)
bool_value (false)
numerical_negation
add_call_chain(<<A,b,a>>)
disjunction
logical_negation
add_command("e", "b", <<["C", "c"], ["d", "C"], ["BOOLEAN", "INTEGER"], ["b", "INTEGER"], ["d", "BOOLEAN"], ["a", "INTEGER"]>>)
add_call_chain(<<b,c,C,INTEGER,c>>)
addition
add_class(a)
type_check
less_than
multiplication
add_call_chain(<<D,a,B,e,A,b,D>>)
generate_java_code
add_call_chain(<<b,a,D,BOOLEAN,c,b,D,a>>)
int_value (22)
add_query("A", "INTEGER", <<["b", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "INTEGER"]>>, "D")
int_value (39)
add_query("a", "c", <<["INTEGER", "C"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["INTEGER", "INTEGER"], ["c", "INTEGER"], ["INTEGER", "BOOLEAN"], ["a", "e"], ["D", "C"]>>, "a")
type_check
add_call_chain(<<b,A,BOOLEAN>>)
numerical_negation
int_value (10)
subtraction
add_call_chain(<<D,A,B,e,b,C,A,d>>)
bool_value (false)
logical_negation
conjunction
int_value (37)
add_query("e", "D", <<["b", "BOOLEAN"], ["c", "d"]>>, "d")
type_check
numerical_negation
add_call_chain(<<D,a,b,A,a,b,A,b,d>>)
numerical_negation
bool_value (false)
equals
numerical_negation
conjunction
int_value (40)
bool_value (false)
add_query("B", "D", <<["b", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "INTEGER"], ["a", "b"], ["A", "D"], ["d", "BOOLEAN"], ["B", "BOOLEAN"]>>, "C")
logical_negation
add_call_chain(<<B,D,A>>)
logical_negation
multiplication
add_call_chain(<<B,e,a,D,C,B,d>>)
numerical_negation
bool_value (false)
add_query("a", "C", <<["b", "C"], ["b", "INTEGER"], ["BOOLEAN", "b"], ["C", "INTEGER"]>>, "D")
add_query("C", "a", <<["B", "D"], ["A", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["c", "a"], ["A", "BOOLEAN"], ["D", "e"]>>, "C")
add_attribute("C", "e", "d")
logical_negation
logical_negation
type_check
add_class(INTEGER)
add_class(B)
add_attribute("A", "b", "BOOLEAN")
add_command("C", "b", <<["c", "D"], ["INTEGER", "INTEGER"]>>)
add_call_chain(<<A,d,INTEGER,B,d,B,b,c,INTEGER>>)
add_query("C", "a", <<["C", "INTEGER"], ["C", "BOOLEAN"], ["d", "e"], ["a", "INTEGER"], ["A", "BOOLEAN"], ["A", "A"], ["e", "BOOLEAN"], ["D", "d"], ["b", "BOOLEAN"]>>, "D")
add_call_chain(<<D>>)
add_attribute("e", "C", "INTEGER")
bool_value (true)
