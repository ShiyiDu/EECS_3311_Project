bool_value (false)
add_query("a", "C", <<["B", "INTEGER"], ["c", "BOOLEAN"], ["A", "c"]>>, "D")
equals
add_command("b", "b", <<["C", "BOOLEAN"], ["d", "INTEGER"], ["a", "INTEGER"]>>)
add_command("B", "D", <<["b", "b"]>>)
add_call_chain(<<B>>)
logical_negation
add_call_chain(<<C,B,b,e,b,C,d,b,d>>)
add_query("a", "C", <<["C", "INTEGER"], ["D", "BOOLEAN"]>>, "e")
add_command("A", "A", <<["D", "INTEGER"], ["a", "BOOLEAN"], ["INTEGER", "INTEGER"], ["D", "BOOLEAN"], ["C", "D"], ["a", "BOOLEAN"], ["B", "BOOLEAN"]>>)
int_value (7)
quotient
numerical_negation
bool_value (true)
add_attribute("BOOLEAN", "C", "B")
add_command("d", "D", <<["D", "INTEGER"], ["c", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "BOOLEAN"]>>)
add_call_chain(<<c,e,e,A,BOOLEAN,d,b,c>>)
add_call_chain(<<C>>)
addition
int_value (19)
bool_value (true)
numerical_negation
bool_value (true)
logical_negation
bool_value (true)
logical_negation
int_value (49)
int_value (6)
bool_value (true)
type_check
conjunction
logical_negation
add_query("B", "d", <<["b", "INTEGER"]>>, "a")
bool_value (false)
add_command("A", "e", <<["A", "INTEGER"], ["a", "INTEGER"]>>)
int_value (41)
equals
bool_value (false)
logical_negation
add_query("BOOLEAN", "C", <<["D", "BOOLEAN"], ["C", "B"], ["A", "BOOLEAN"], ["BOOLEAN", "a"], ["D", "BOOLEAN"], ["c", "c"], ["c", "INTEGER"], ["b", "BOOLEAN"], ["C", "BOOLEAN"]>>, "C")
logical_negation
generate_java_code
generate_java_code
logical_negation
int_value (44)
logical_negation
greater_than
add_query("C", "C", <<["C", "d"], ["A", "BOOLEAN"], ["C", "D"]>>, "A")
int_value (48)
add_class(BOOLEAN)
add_call_chain(<<C,INTEGER,INTEGER>>)
logical_negation
subtraction
bool_value (false)
int_value (7)
add_command("D", "D", <<["C", "BOOLEAN"], ["INTEGER", "D"]>>)
type_check
conjunction
add_call_chain(<<A,A,C,b,B,A,c>>)
add_attribute("C", "d", "D")
add_class(a)
add_command("e", "B", <<["C", "INTEGER"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["D", "a"], ["C", "INTEGER"], ["b", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "a"], ["a", "A"]>>)
add_command("B", "B", <<["C", "INTEGER"], ["B", "d"], ["B", "A"], ["a", "BOOLEAN"], ["a", "INTEGER"], ["A", "INTEGER"], ["e", "e"], ["d", "INTEGER"]>>)
add_call_chain(<<D,A,d>>)
int_value (5)
int_value (40)
less_than
less_than
bool_value (false)
numerical_negation
equals
add_attribute("D", "c", "d")
int_value (37)
type_check
int_value (17)
generate_java_code
add_query("e", "B", <<["C", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "BOOLEAN"]>>, "B")
add_call_chain(<<e>>)
add_call_chain(<<b,c,D>>)
add_query("A", "BOOLEAN", <<["BOOLEAN", "B"]>>, "C")
add_attribute("a", "e", "INTEGER")
int_value (48)
add_query("d", "D", <<["b", "INTEGER"], ["D", "INTEGER"], ["d", "BOOLEAN"]>>, "B")
logical_negation
bool_value (false)
numerical_negation
bool_value (false)
add_command("e", "D", <<["c", "INTEGER"], ["e", "B"], ["b", "B"], ["A", "BOOLEAN"], ["b", "B"], ["D", "INTEGER"], ["a", "C"], ["A", "BOOLEAN"], ["c", "BOOLEAN"]>>)
disjunction
numerical_negation
add_call_chain(<<d,D,b,B,D,a,e,A,e>>)
add_command("A", "D", <<["C", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "e"], ["b", "INTEGER"], ["e", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>)
add_command("INTEGER", "a", <<["B", "INTEGER"]>>)
add_query("C", "b", <<["A", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "e"], ["C", "BOOLEAN"], ["INTEGER", "INTEGER"], ["d", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "D"]>>, "e")
add_query("D", "B", <<["A", "A"], ["e", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["C", "D"], ["a", "A"], ["D", "b"]>>, "e")
int_value (42)
less_than
add_call_chain(<<B,A,e,c,b,C,INTEGER>>)
add_call_chain(<<B>>)
logical_negation
bool_value (false)
equals
int_value (34)
type_check
type_check
add_attribute("c", "c", "INTEGER")
numerical_negation
numerical_negation
add_class(c)
add_command("A", "D", <<["INTEGER", "INTEGER"], ["D", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "INTEGER"], ["C", "c"], ["A", "A"]>>)
add_call_chain(<<B,d,D,A,c,A,A>>)
add_command("A", "b", <<["B", "INTEGER"], ["B", "INTEGER"], ["c", "INTEGER"], ["C", "INTEGER"], ["D", "B"], ["B", "BOOLEAN"], ["D", "BOOLEAN"]>>)
add_attribute("D", "a", "INTEGER")
add_command("A", "b", <<["D", "INTEGER"], ["B", "BOOLEAN"], ["C", "BOOLEAN"], ["INTEGER", "C"]>>)
greater_than
add_query("C", "A", <<["C", "INTEGER"], ["C", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "INTEGER"], ["e", "BOOLEAN"], ["a", "INTEGER"]>>, "b")
bool_value (false)
add_query("D", "c", <<["A", "INTEGER"], ["A", "e"], ["a", "INTEGER"], ["D", "BOOLEAN"], ["b", "A"]>>, "c")
int_value (25)
modulo
add_attribute("A", "D", "BOOLEAN")
logical_negation
disjunction
int_value (16)
add_command("a", "d", <<["c", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "BOOLEAN"]>>)
add_attribute("e", "C", "D")
logical_negation
int_value (37)
add_call_chain(<<b,C,B,D,A,c>>)
bool_value (true)
type_check
generate_java_code
add_query("D", "e", <<["C", "INTEGER"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["b", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["e", "A"], ["A", "B"], ["D", "BOOLEAN"], ["B", "INTEGER"]>>, "c")
add_query("e", "e", <<["e", "BOOLEAN"], ["c", "BOOLEAN"], ["a", "INTEGER"], ["D", "C"], ["BOOLEAN", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "a"]>>, "B")
quotient
logical_negation
add_attribute("c", "B", "C")
add_query("d", "d", <<["A", "INTEGER"], ["BOOLEAN", "A"], ["e", "INTEGER"], ["d", "INTEGER"]>>, "d")
add_call_chain(<<c,C,b,a,C>>)
add_call_chain(<<c,A,c,C>>)
numerical_negation
add_call_chain(<<c,c,a,BOOLEAN,INTEGER,D,C,d,B>>)
modulo
add_query("a", "a", <<["C", "INTEGER"], ["B", "INTEGER"], ["c", "INTEGER"], ["C", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "INTEGER"], ["D", "C"], ["c", "A"]>>, "BOOLEAN")
int_value (33)
add_command("d", "B", <<["C", "BOOLEAN"], ["INTEGER", "INTEGER"], ["a", "C"], ["a", "C"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "INTEGER"], ["D", "C"]>>)
add_call_chain(<<b,D,D>>)
equals
add_call_chain(<<BOOLEAN,D,INTEGER,INTEGER,d>>)
subtraction
generate_java_code
bool_value (true)
add_attribute("C", "C", "C")
add_attribute("d", "C", "INTEGER")
numerical_negation
conjunction
add_query("D", "A", <<["D", "BOOLEAN"], ["d", "INTEGER"], ["a", "b"], ["D", "BOOLEAN"], ["D", "A"]>>, "e")
generate_java_code
greater_than
generate_java_code
int_value (19)
generate_java_code
type_check
add_attribute("B", "b", "BOOLEAN")
add_command("c", "C", <<["D", "d"], ["D", "INTEGER"], ["BOOLEAN", "d"]>>)
int_value (43)
bool_value (true)
add_attribute("a", "D", "INTEGER")
bool_value (false)
add_command("BOOLEAN", "e", <<["B", "INTEGER"], ["D", "INTEGER"], ["a", "BOOLEAN"], ["D", "D"], ["e", "BOOLEAN"], ["b", "BOOLEAN"], ["BOOLEAN", "b"], ["D", "BOOLEAN"]>>)
add_query("e", "A", <<["B", "c"], ["b", "BOOLEAN"], ["INTEGER", "INTEGER"], ["b", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "INTEGER"], ["a", "INTEGER"], ["C", "INTEGER"], ["B", "INTEGER"]>>, "a")
add_command("INTEGER", "D", <<["b", "C"], ["C", "INTEGER"], ["A", "c"]>>)
logical_negation
bool_value (false)
int_value (11)
subtraction
numerical_negation
add_attribute("D", "A", "BOOLEAN")
add_query("A", "B", <<["e", "d"], ["d", "B"], ["e", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "INTEGER"], ["b", "BOOLEAN"], ["a", "INTEGER"]>>, "b")
add_attribute("C", "c", "INTEGER")
int_value (34)
add_attribute("c", "a", "INTEGER")
add_command("b", "e", <<["d", "INTEGER"], ["a", "INTEGER"], ["a", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "INTEGER"], ["BOOLEAN", "INTEGER"], ["e", "e"], ["INTEGER", "BOOLEAN"]>>)
numerical_negation
add_call_chain(<<D>>)
add_command("D", "a", <<["d", "BOOLEAN"], ["B", "BOOLEAN"]>>)
bool_value (false)
numerical_negation
add_call_chain(<<BOOLEAN,INTEGER,b,C,e,B,c,D,d>>)
add_attribute("D", "BOOLEAN", "d")
logical_negation
add_call_chain(<<INTEGER,D,BOOLEAN>>)
int_value (42)
disjunction
add_attribute("c", "A", "BOOLEAN")
add_command("c", "C", <<["B", "BOOLEAN"], ["INTEGER", "A"], ["a", "BOOLEAN"], ["d", "INTEGER"], ["A", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>)
bool_value (false)
add_attribute("a", "c", "BOOLEAN")
add_call_chain(<<b,BOOLEAN,B,a,B,D,c,e>>)
bool_value (true)
add_attribute("d", "D", "INTEGER")
multiplication
logical_negation
add_call_chain(<<C,c,d,INTEGER,A,D>>)
add_call_chain(<<BOOLEAN,d,BOOLEAN,a,a,d,C,D>>)
quotient
numerical_negation
logical_negation
add_call_chain(<<e,B,BOOLEAN,INTEGER,B>>)
generate_java_code
generate_java_code
add_command("d", "e", <<["BOOLEAN", "INTEGER"], ["C", "B"], ["INTEGER", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "INTEGER"], ["D", "e"], ["C", "BOOLEAN"]>>)
type_check
logical_negation
add_call_chain(<<BOOLEAN,B,e,c,C,INTEGER>>)
type_check
add_query("C", "C", <<["c", "BOOLEAN"], ["a", "BOOLEAN"]>>, "B")
type_check
add_query("INTEGER", "BOOLEAN", <<["A", "D"], ["D", "INTEGER"]>>, "a")
add_query("e", "b", <<["D", "D"], ["B", "C"], ["e", "B"], ["INTEGER", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>, "BOOLEAN")
add_command("D", "D", <<["c", "BOOLEAN"]>>)
add_attribute("e", "e", "B")
type_check
add_attribute("D", "d", "BOOLEAN")
add_query("INTEGER", "A", <<["C", "INTEGER"], ["c", "BOOLEAN"], ["b", "INTEGER"]>>, "e")
generate_java_code
int_value (11)
bool_value (false)
add_query("c", "C", <<["B", "BOOLEAN"], ["a", "INTEGER"]>>, "D")
add_attribute("D", "b", "d")
add_class(INTEGER)
add_class(C)
add_attribute("e", "INTEGER", "BOOLEAN")
add_command("e", "A", <<["D", "INTEGER"], ["b", "BOOLEAN"], ["d", "INTEGER"], ["e", "INTEGER"], ["D", "INTEGER"], ["C", "INTEGER"]>>)
bool_value (false)
bool_value (false)
add_query("BOOLEAN", "A", <<["b", "INTEGER"], ["B", "BOOLEAN"], ["INTEGER", "INTEGER"], ["B", "BOOLEAN"], ["C", "BOOLEAN"]>>, "INTEGER")
type_check
add_query("e", "A", <<["b", "INTEGER"], ["C", "BOOLEAN"], ["c", "INTEGER"], ["c", "BOOLEAN"], ["B", "A"], ["d", "INTEGER"], ["B", "b"], ["D", "INTEGER"], ["C", "C"]>>, "b")
add_query("D", "D", <<["B", "BOOLEAN"], ["d", "A"], ["D", "INTEGER"], ["D", "C"], ["A", "BOOLEAN"], ["D", "C"]>>, "INTEGER")
add_query("a", "INTEGER", <<["C", "BOOLEAN"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["INTEGER", "INTEGER"], ["d", "BOOLEAN"], ["c", "BOOLEAN"]>>, "D")
int_value (36)
