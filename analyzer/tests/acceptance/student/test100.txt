add_call_chain(<<A,D,d,A,A,B,d,e,C>>)
conjunction
generate_java_code
add_attribute("D", "c", "A")
generate_java_code
add_command("BOOLEAN", "b", <<["e", "INTEGER"], ["D", "INTEGER"]>>)
add_attribute("c", "a", "INTEGER")
add_call_chain(<<C,b,A,a,d,INTEGER,e,INTEGER,C>>)
add_call_chain(<<D,b,c,b>>)
numerical_negation
add_call_chain(<<a,d,d,a,c,D,D,D>>)
numerical_negation
numerical_negation
equals
add_attribute("c", "d", "INTEGER")
int_value (14)
add_attribute("d", "a", "BOOLEAN")
add_query("c", "A", <<["c", "INTEGER"], ["C", "BOOLEAN"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["a", "INTEGER"]>>, "c")
add_attribute("A", "D", "d")
add_call_chain(<<c,C,b,d,b,INTEGER,c,INTEGER>>)
add_command("A", "C", <<["b", "INTEGER"], ["D", "INTEGER"], ["c", "BOOLEAN"]>>)
add_command("D", "c", <<["INTEGER", "INTEGER"], ["D", "BOOLEAN"]>>)
generate_java_code
add_class(A)
int_value (15)
bool_value (true)
logical_negation
logical_negation
add_call_chain(<<e,A,D,b,d,C,e,BOOLEAN,D>>)
add_call_chain(<<e,b,c,c>>)
add_query("BOOLEAN", "e", <<["A", "BOOLEAN"], ["D", "INTEGER"], ["B", "INTEGER"], ["c", "BOOLEAN"], ["a", "e"], ["B", "BOOLEAN"], ["d", "BOOLEAN"]>>, "BOOLEAN")
logical_negation
numerical_negation
add_command("e", "C", <<["B", "b"], ["e", "C"], ["c", "D"], ["a", "INTEGER"], ["d", "d"], ["C", "c"], ["e", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "INTEGER"]>>)
logical_negation
add_query("b", "C", <<["BOOLEAN", "D"], ["D", "INTEGER"], ["c", "b"], ["d", "BOOLEAN"], ["A", "B"], ["D", "BOOLEAN"]>>, "d")
type_check
add_attribute("INTEGER", "C", "INTEGER")
multiplication
add_query("c", "B", <<["a", "c"], ["C", "INTEGER"], ["b", "INTEGER"], ["c", "INTEGER"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["d", "INTEGER"]>>, "D")
int_value (46)
type_check
add_class(b)
add_command("d", "D", <<["d", "BOOLEAN"], ["D", "INTEGER"], ["C", "D"], ["a", "BOOLEAN"], ["a", "INTEGER"], ["D", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "BOOLEAN"]>>)
add_command("B", "A", <<["c", "INTEGER"], ["INTEGER", "B"], ["d", "BOOLEAN"]>>)
type_check
int_value (42)
int_value (20)
int_value (1)
add_attribute("e", "c", "d")
type_check
add_call_chain(<<b,b>>)
add_attribute("A", "c", "C")
bool_value (false)
disjunction
type_check
add_attribute("a", "a", "BOOLEAN")
add_query("A", "B", <<["INTEGER", "B"]>>, "c")
greater_than
add_class(a)
bool_value (true)
add_attribute("b", "BOOLEAN", "BOOLEAN")
generate_java_code
add_class(a)
add_attribute("B", "c", "INTEGER")
logical_negation
add_attribute("C", "a", "BOOLEAN")
add_class(A)
add_call_chain(<<a,C>>)
add_call_chain(<<INTEGER,B>>)
logical_negation
equals
type_check
type_check
bool_value (true)
logical_negation
add_call_chain(<<e,A,INTEGER,e,BOOLEAN,D>>)
multiplication
numerical_negation
logical_negation
numerical_negation
add_command("e", "b", <<["INTEGER", "a"], ["C", "D"], ["c", "INTEGER"], ["A", "B"]>>)
add_attribute("A", "D", "B")
type_check
bool_value (true)
add_command("b", "d", <<["D", "BOOLEAN"], ["b", "INTEGER"], ["d", "BOOLEAN"], ["e", "INTEGER"], ["B", "D"], ["c", "INTEGER"]>>)
generate_java_code
add_call_chain(<<A,A,C,B,b,B,e>>)
add_call_chain(<<b,d,C,C,a,A>>)
bool_value (false)
add_call_chain(<<a,c,a,BOOLEAN>>)
add_command("a", "C", <<["B", "D"], ["A", "INTEGER"], ["b", "INTEGER"], ["a", "a"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["e", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "INTEGER"]>>)
add_command("INTEGER", "a", <<["b", "BOOLEAN"], ["C", "A"], ["BOOLEAN", "BOOLEAN"], ["d", "INTEGER"], ["B", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["a", "INTEGER"], ["a", "BOOLEAN"]>>)
add_command("b", "c", <<["A", "BOOLEAN"], ["A", "b"], ["B", "INTEGER"], ["B", "INTEGER"], ["c", "INTEGER"], ["a", "BOOLEAN"], ["C", "d"], ["d", "c"], ["a", "e"]>>)
add_call_chain(<<e,C,INTEGER>>)
type_check
add_call_chain(<<d,A,d>>)
add_query("A", "a", <<["C", "a"], ["INTEGER", "INTEGER"], ["b", "BOOLEAN"], ["a", "INTEGER"], ["A", "c"], ["A", "BOOLEAN"], ["d", "BOOLEAN"], ["e", "INTEGER"]>>, "c")
int_value (7)
numerical_negation
add_attribute("a", "INTEGER", "A")
numerical_negation
add_call_chain(<<d,e,B>>)
add_call_chain(<<INTEGER,D,A,a,INTEGER,D,a,D>>)
add_query("C", "B", <<["B", "INTEGER"], ["B", "INTEGER"], ["c", "BOOLEAN"], ["e", "C"], ["D", "BOOLEAN"], ["c", "BOOLEAN"], ["INTEGER", "INTEGER"], ["B", "BOOLEAN"]>>, "INTEGER")
add_class(b)
conjunction
logical_negation
add_query("e", "C", <<["D", "BOOLEAN"], ["A", "d"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["a", "e"], ["c", "B"], ["INTEGER", "C"]>>, "a")
add_attribute("B", "C", "BOOLEAN")
add_command("e", "D", <<["A", "INTEGER"], ["B", "BOOLEAN"], ["C", "D"], ["a", "BOOLEAN"], ["D", "BOOLEAN"]>>)
generate_java_code
add_call_chain(<<D,C,D,e,b>>)
bool_value (false)
add_attribute("d", "A", "b")
add_attribute("D", "c", "INTEGER")
add_call_chain(<<B,e,B,BOOLEAN,b,INTEGER,b>>)
add_call_chain(<<INTEGER>>)
equals
int_value (31)
add_query("b", "A", <<["C", "C"], ["A", "a"], ["b", "BOOLEAN"], ["C", "INTEGER"], ["B", "INTEGER"], ["d", "d"], ["C", "BOOLEAN"], ["C", "d"]>>, "b")
add_attribute("b", "d", "BOOLEAN")
logical_negation
add_query("d", "d", <<["e", "INTEGER"]>>, "BOOLEAN")
add_command("INTEGER", "d", <<["b", "INTEGER"]>>)
logical_negation
add_call_chain(<<C,B,b,a,b>>)
add_call_chain(<<A,d,b,c,B,a,d,A,a>>)
add_command("e", "b", <<["b", "INTEGER"]>>)
add_class(D)
add_attribute("B", "B", "BOOLEAN")
type_check
add_call_chain(<<B,INTEGER,C,B,b,INTEGER,a,B>>)
add_command("b", "D", <<["BOOLEAN", "BOOLEAN"], ["B", "D"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["D", "INTEGER"]>>)
add_call_chain(<<A,b,d,C,c,C,d>>)
disjunction
int_value (16)
generate_java_code
equals
type_check
logical_negation
bool_value (false)
type_check
add_call_chain(<<B,c,d,a,D>>)
add_command("A", "C", <<["b", "BOOLEAN"]>>)
generate_java_code
add_call_chain(<<D,B,D,c,C,a>>)
greater_than
bool_value (false)
add_query("b", "BOOLEAN", <<["B", "BOOLEAN"], ["D", "INTEGER"], ["B", "INTEGER"], ["b", "INTEGER"], ["INTEGER", "INTEGER"]>>, "B")
generate_java_code
add_command("INTEGER", "BOOLEAN", <<["C", "INTEGER"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "BOOLEAN"]>>)
logical_negation
add_query("INTEGER", "d", <<["b", "BOOLEAN"], ["b", "A"], ["c", "BOOLEAN"], ["A", "INTEGER"], ["D", "BOOLEAN"]>>, "A")
add_call_chain(<<A,d,A,a,e,C,A,e>>)
add_query("e", "C", <<["C", "INTEGER"], ["D", "BOOLEAN"], ["e", "INTEGER"], ["e", "INTEGER"], ["D", "BOOLEAN"]>>, "D")
add_query("d", "a", <<["a", "B"], ["A", "BOOLEAN"], ["D", "B"], ["e", "b"], ["D", "INTEGER"], ["a", "BOOLEAN"], ["A", "INTEGER"], ["c", "INTEGER"], ["d", "INTEGER"]>>, "D")
add_command("c", "b", <<["d", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "D"], ["c", "INTEGER"], ["B", "C"], ["INTEGER", "BOOLEAN"], ["D", "A"], ["B", "BOOLEAN"], ["a", "BOOLEAN"]>>)
add_class(C)
add_command("A", "D", <<["A", "INTEGER"], ["c", "a"], ["A", "INTEGER"], ["A", "INTEGER"], ["B", "e"], ["c", "C"]>>)
int_value (12)
add_call_chain(<<a,INTEGER,b>>)
add_command("e", "d", <<["b", "INTEGER"]>>)
type_check
less_than
greater_than
logical_negation
add_call_chain(<<b,D,d,A,a,INTEGER,d>>)
int_value (9)
add_command("c", "c", <<["e", "INTEGER"], ["d", "A"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "INTEGER"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["D", "INTEGER"]>>)
add_call_chain(<<B,INTEGER,BOOLEAN,A,c,d,A>>)
add_query("C", "A", <<["A", "a"]>>, "e")
numerical_negation
logical_negation
less_than
equals
add_query("INTEGER", "d", <<["c", "INTEGER"]>>, "A")
add_command("A", "e", <<["b", "BOOLEAN"], ["b", "INTEGER"], ["d", "BOOLEAN"], ["c", "e"]>>)
int_value (37)
add_attribute("B", "b", "BOOLEAN")
int_value (23)
bool_value (true)
int_value (23)
add_command("a", "INTEGER", <<["C", "B"], ["B", "BOOLEAN"], ["e", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["b", "INTEGER"], ["D", "b"], ["D", "INTEGER"]>>)
add_attribute("A", "D", "INTEGER")
generate_java_code
add_query("b", "A", <<["BOOLEAN", "BOOLEAN"], ["B", "INTEGER"], ["D", "BOOLEAN"]>>, "C")
add_call_chain(<<C,B,d,b,a>>)
add_attribute("D", "a", "INTEGER")
add_call_chain(<<a,c>>)
int_value (15)
logical_negation
add_attribute("e", "c", "C")
add_call_chain(<<D,e,B,a,B,a,c,B,A>>)
add_attribute("A", "B", "INTEGER")
conjunction
add_call_chain(<<INTEGER>>)
add_command("c", "C", <<["d", "INTEGER"], ["c", "BOOLEAN"], ["d", "INTEGER"], ["B", "INTEGER"], ["C", "BOOLEAN"], ["C", "INTEGER"]>>)
add_attribute("C", "D", "BOOLEAN")
add_query("b", "c", <<["d", "D"]>>, "BOOLEAN")
add_call_chain(<<C>>)
bool_value (false)
add_call_chain(<<A,B,c>>)
add_call_chain(<<c,d>>)
type_check
add_attribute("b", "D", "INTEGER")
add_query("b", "D", <<["d", "D"], ["A", "D"]>>, "D")
numerical_negation
add_query("d", "c", <<["c", "INTEGER"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "c"], ["D", "INTEGER"]>>, "INTEGER")
add_class(b)
disjunction
numerical_negation
numerical_negation
add_class(C)
type_check
disjunction
add_command("B", "b", <<["c", "C"], ["B", "BOOLEAN"], ["B", "INTEGER"], ["d", "BOOLEAN"], ["D", "a"], ["BOOLEAN", "INTEGER"], ["A", "A"], ["a", "INTEGER"]>>)
add_query("C", "A", <<["B", "INTEGER"], ["d", "BOOLEAN"]>>, "BOOLEAN")
add_command("e", "a", <<["BOOLEAN", "INTEGER"], ["b", "BOOLEAN"], ["D", "INTEGER"], ["B", "BOOLEAN"], ["a", "INTEGER"], ["b", "BOOLEAN"], ["A", "INTEGER"]>>)
add_query("C", "B", <<["C", "INTEGER"], ["b", "INTEGER"]>>, "C")
add_query("A", "b", <<["d", "BOOLEAN"], ["INTEGER", "e"], ["d", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "b"], ["e", "BOOLEAN"]>>, "e")
generate_java_code
add_command("B", "D", <<["b", "BOOLEAN"], ["a", "c"], ["c", "B"]>>)
add_call_chain(<<c,c,D,d,BOOLEAN,c,a,e,A>>)
add_query("C", "D", <<["C", "BOOLEAN"]>>, "INTEGER")
add_query("e", "B", <<["A", "INTEGER"], ["D", "INTEGER"], ["c", "INTEGER"], ["a", "BOOLEAN"], ["A", "INTEGER"], ["c", "INTEGER"]>>, "c")
add_query("a", "D", <<["C", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "a"], ["a", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["BOOLEAN", "a"]>>, "B")
bool_value (true)
add_class(B)
add_class(a)
add_attribute("B", "a", "INTEGER")
logical_negation
add_command("D", "INTEGER", <<["C", "d"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["c", "INTEGER"]>>)
multiplication
add_attribute("b", "d", "INTEGER")
type_check
add_call_chain(<<BOOLEAN,INTEGER,BOOLEAN>>)
disjunction
add_call_chain(<<a,D,A,c,d,b>>)
add_call_chain(<<BOOLEAN>>)
add_query("C", "C", <<["C", "a"], ["C", "BOOLEAN"], ["a", "INTEGER"]>>, "a")
add_command("c", "b", <<["A", "BOOLEAN"], ["B", "INTEGER"], ["D", "INTEGER"], ["e", "INTEGER"], ["B", "BOOLEAN"], ["b", "a"], ["a", "BOOLEAN"], ["A", "D"], ["a", "INTEGER"]>>)
add_call_chain(<<b>>)
add_query("c", "A", <<["B", "INTEGER"], ["C", "BOOLEAN"], ["c", "A"], ["a", "BOOLEAN"], ["e", "INTEGER"], ["D", "INTEGER"], ["C", "B"], ["e", "BOOLEAN"], ["INTEGER", "c"]>>, "BOOLEAN")
bool_value (false)
bool_value (false)
numerical_negation
add_call_chain(<<A,e,e>>)
add_call_chain(<<A,A,C,A,A,a,d,C,A>>)
add_call_chain(<<A,A,BOOLEAN,D,D,a,a,D>>)
bool_value (true)
add_attribute("a", "d", "INTEGER")
subtraction
modulo
type_check
numerical_negation
add_command("B", "A", <<["D", "BOOLEAN"], ["d", "INTEGER"], ["e", "BOOLEAN"]>>)
type_check
numerical_negation
add_query("c", "c", <<["B", "INTEGER"], ["c", "B"], ["BOOLEAN", "d"]>>, "d")
generate_java_code
add_class(C)
add_command("d", "B", <<["e", "BOOLEAN"], ["e", "d"], ["B", "d"], ["a", "INTEGER"], ["d", "a"], ["B", "INTEGER"], ["c", "d"]>>)
add_attribute("c", "d", "C")
disjunction
quotient
add_call_chain(<<a>>)
add_command("C", "e", <<["B", "BOOLEAN"], ["e", "d"]>>)
add_call_chain(<<C,C,e,c,e,d,a,c>>)
numerical_negation
add_class(A)
add_attribute("d", "c", "INTEGER")
add_call_chain(<<A>>)
bool_value (false)
disjunction
bool_value (false)
add_query("a", "b", <<["B", "BOOLEAN"]>>, "b")
type_check
less_than
logical_negation
add_call_chain(<<A,D,b,C,C,d,a,INTEGER,B>>)
int_value (3)
generate_java_code
disjunction
type_check
add_call_chain(<<b,A,INTEGER,A,a,D,BOOLEAN,d>>)
add_class(B)
int_value (35)
add_query("D", "A", <<["BOOLEAN", "INTEGER"], ["C", "a"], ["C", "A"], ["C", "C"], ["B", "BOOLEAN"]>>, "A")
type_check
add_call_chain(<<a,C,A>>)
