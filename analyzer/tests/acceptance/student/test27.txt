logical_negation
bool_value (true)
int_value (43)
add_attribute("b", "d", "D")
add_call_chain(<<d,d,A,D,BOOLEAN,e,c,A,b>>)
numerical_negation
add_command("A", "D", <<["D", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "b"]>>)
equals
add_query("A", "b", <<["BOOLEAN", "A"], ["D", "b"], ["C", "BOOLEAN"], ["INTEGER", "INTEGER"]>>, "B")
add_call_chain(<<e,b>>)
less_than
modulo
add_call_chain(<<A,a,A,INTEGER,a>>)
conjunction
equals
add_attribute("b", "B", "BOOLEAN")
add_attribute("A", "A", "INTEGER")
add_query("d", "BOOLEAN", <<["B", "BOOLEAN"], ["c", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["C", "b"], ["D", "INTEGER"], ["e", "B"], ["b", "INTEGER"], ["C", "b"], ["d", "INTEGER"]>>, "e")
add_command("A", "a", <<["B", "BOOLEAN"], ["b", "b"], ["d", "BOOLEAN"]>>)
int_value (38)
int_value (1)
add_call_chain(<<C,INTEGER>>)
bool_value (false)
type_check
generate_java_code
bool_value (false)
add_command("D", "C", <<["a", "D"], ["B", "BOOLEAN"], ["B", "INTEGER"], ["b", "e"], ["C", "BOOLEAN"], ["a", "INTEGER"]>>)
generate_java_code
subtraction
bool_value (false)
add_command("D", "d", <<["BOOLEAN", "BOOLEAN"], ["A", "INTEGER"], ["e", "BOOLEAN"], ["D", "INTEGER"], ["B", "INTEGER"], ["D", "INTEGER"]>>)
logical_negation
add_attribute("C", "D", "INTEGER")
add_call_chain(<<a,e,a,b,D,A>>)
add_class(b)
less_than
add_call_chain(<<D,INTEGER,D,INTEGER,C,d,b>>)
add_attribute("INTEGER", "d", "BOOLEAN")
add_query("B", "c", <<["INTEGER", "a"], ["A", "INTEGER"]>>, "A")
logical_negation
generate_java_code
add_attribute("e", "c", "D")
add_query("D", "c", <<["A", "INTEGER"], ["A", "INTEGER"]>>, "b")
add_call_chain(<<D,C,a,a,a,c,C,D>>)
add_call_chain(<<c,d,D,e,A,A,e>>)
logical_negation
addition
bool_value (false)
conjunction
disjunction
int_value (2)
logical_negation
add_call_chain(<<B,D,B,c,e,A>>)
bool_value (true)
numerical_negation
add_command("BOOLEAN", "b", <<["C", "INTEGER"], ["INTEGER", "INTEGER"], ["a", "INTEGER"], ["C", "A"], ["b", "BOOLEAN"], ["a", "d"], ["e", "BOOLEAN"], ["D", "INTEGER"], ["b", "A"]>>)
numerical_negation
add_call_chain(<<C,A,B>>)
add_call_chain(<<D,D,INTEGER,b,c,d,d,C>>)
disjunction
generate_java_code
bool_value (true)
add_query("a", "e", <<["INTEGER", "BOOLEAN"]>>, "e")
bool_value (true)
add_call_chain(<<d,C,B,D>>)
add_class(BOOLEAN)
disjunction
add_command("a", "c", <<["D", "INTEGER"], ["D", "B"], ["c", "INTEGER"], ["BOOLEAN", "INTEGER"], ["D", "INTEGER"], ["a", "e"], ["C", "BOOLEAN"], ["e", "BOOLEAN"], ["d", "BOOLEAN"]>>)
add_query("e", "C", <<["A", "INTEGER"], ["A", "c"], ["B", "INTEGER"], ["BOOLEAN", "INTEGER"], ["e", "BOOLEAN"]>>, "C")
add_command("c", "A", <<["e", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "A"], ["B", "d"], ["BOOLEAN", "INTEGER"]>>)
bool_value (true)
bool_value (false)
add_attribute("D", "d", "e")
numerical_negation
int_value (24)
add_call_chain(<<e,D,e>>)
add_query("c", "D", <<["C", "c"], ["D", "a"], ["a", "e"], ["e", "INTEGER"]>>, "A")
disjunction
add_call_chain(<<B,C>>)
disjunction
add_call_chain(<<B,c,A,a,d,d,A>>)
add_call_chain(<<A,c,a,d,c,D,e,A,a>>)
generate_java_code
add_class(b)
logical_negation
multiplication
generate_java_code
logical_negation
add_call_chain(<<e,b,A,C,b,d,d>>)
logical_negation
numerical_negation
bool_value (true)
add_call_chain(<<D,C,a,B>>)
add_query("C", "b", <<["a", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["D", "d"], ["A", "INTEGER"]>>, "INTEGER")
add_call_chain(<<c>>)
add_command("A", "c", <<["c", "d"], ["e", "D"], ["b", "BOOLEAN"], ["b", "INTEGER"], ["e", "INTEGER"], ["a", "BOOLEAN"]>>)
add_command("B", "c", <<["e", "INTEGER"], ["B", "INTEGER"], ["a", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "BOOLEAN"], ["e", "BOOLEAN"]>>)
add_call_chain(<<B,b,B,D,b,e>>)
generate_java_code
bool_value (true)
numerical_negation
type_check
add_call_chain(<<A,d,a,e,d,C>>)
add_call_chain(<<D,a,e,D,C>>)
int_value (10)
subtraction
numerical_negation
bool_value (false)
logical_negation
add_call_chain(<<C,B,B,b,BOOLEAN>>)
numerical_negation
generate_java_code
add_attribute("e", "C", "INTEGER")
add_call_chain(<<B,d,B,e,B,C,c>>)
numerical_negation
numerical_negation
generate_java_code
logical_negation
add_class(B)
numerical_negation
int_value (31)
add_call_chain(<<e,a,B,B,c,A,C,BOOLEAN,B>>)
add_attribute("BOOLEAN", "A", "a")
int_value (9)
add_attribute("INTEGER", "b", "BOOLEAN")
add_attribute("c", "b", "INTEGER")
conjunction
generate_java_code
greater_than
add_command("D", "c", <<["D", "d"], ["D", "INTEGER"], ["B", "BOOLEAN"], ["D", "BOOLEAN"]>>)
add_command("B", "d", <<["e", "BOOLEAN"]>>)
add_call_chain(<<d,A,B,A,INTEGER,C>>)
equals
add_attribute("b", "BOOLEAN", "a")
int_value (42)
generate_java_code
int_value (2)
int_value (16)
numerical_negation
less_than
add_call_chain(<<B,C,B,B,C,D,d,D,INTEGER>>)
add_call_chain(<<B,d,c,D,INTEGER,a>>)
logical_negation
logical_negation
add_call_chain(<<c,a,e,D,d,C,B,A,d>>)
add_command("D", "d", <<["c", "BOOLEAN"]>>)
add_query("c", "a", <<["B", "a"], ["c", "e"], ["e", "INTEGER"], ["B", "INTEGER"], ["C", "INTEGER"], ["B", "C"], ["e", "INTEGER"], ["a", "BOOLEAN"]>>, "d")
add_query("D", "D", <<["INTEGER", "INTEGER"], ["B", "INTEGER"], ["C", "D"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["c", "BOOLEAN"], ["c", "B"]>>, "b")
disjunction
add_command("B", "a", <<["A", "B"], ["d", "INTEGER"], ["C", "INTEGER"], ["D", "d"], ["D", "b"], ["c", "INTEGER"], ["D", "e"], ["d", "d"]>>)
add_query("A", "e", <<["c", "BOOLEAN"], ["a", "b"], ["C", "INTEGER"]>>, "A")
generate_java_code
add_call_chain(<<A>>)
add_command("d", "c", <<["e", "b"], ["A", "INTEGER"], ["b", "C"], ["d", "C"]>>)
subtraction
add_attribute("c", "b", "BOOLEAN")
add_call_chain(<<a,e>>)
bool_value (false)
add_call_chain(<<b,c,e,A>>)
bool_value (true)
add_call_chain(<<b,b,d,A,C>>)
generate_java_code
add_call_chain(<<c>>)
quotient
add_command("c", "A", <<["C", "BOOLEAN"], ["C", "INTEGER"], ["C", "INTEGER"], ["e", "INTEGER"], ["d", "D"]>>)
bool_value (false)
add_query("B", "c", <<["D", "C"], ["BOOLEAN", "D"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["B", "BOOLEAN"]>>, "INTEGER")
add_query("a", "c", <<["C", "BOOLEAN"], ["INTEGER", "A"], ["e", "BOOLEAN"], ["b", "BOOLEAN"]>>, "e")
subtraction
bool_value (false)
add_command("d", "C", <<["C", "B"], ["c", "BOOLEAN"], ["B", "INTEGER"], ["C", "B"], ["D", "B"], ["a", "BOOLEAN"], ["d", "INTEGER"], ["D", "INTEGER"]>>)
addition
add_query("B", "b", <<["B", "BOOLEAN"], ["A", "C"], ["B", "D"], ["a", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["B", "C"]>>, "A")
logical_negation
add_attribute("c", "BOOLEAN", "d")
