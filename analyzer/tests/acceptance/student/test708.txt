type_check
multiplication
add_call_chain(<<D,INTEGER,D,B>>)
logical_negation
add_attribute("d", "e", "INTEGER")
greater_than
add_query("d", "c", <<["BOOLEAN", "INTEGER"], ["B", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["C", "B"], ["e", "INTEGER"]>>, "d")
type_check
add_call_chain(<<INTEGER,a,b,b,a,a>>)
generate_java_code
add_query("D", "A", <<["d", "C"], ["d", "c"], ["b", "INTEGER"], ["A", "BOOLEAN"], ["d", "C"]>>, "BOOLEAN")
add_call_chain(<<C,d,A>>)
add_call_chain(<<C,C,INTEGER,a,A,D,d,B,C>>)
numerical_negation
logical_negation
add_command("C", "D", <<["b", "BOOLEAN"], ["B", "INTEGER"], ["C", "b"]>>)
equals
add_attribute("C", "D", "B")
add_attribute("a", "BOOLEAN", "BOOLEAN")
add_class(INTEGER)
numerical_negation
subtraction
int_value (4)
add_call_chain(<<e,D,e,B,b,d>>)
disjunction
int_value (13)
numerical_negation
add_class(A)
add_call_chain(<<D,c,BOOLEAN,c,B,c,d,b>>)
add_class(A)
add_call_chain(<<c,INTEGER,C,e,c,C>>)
add_attribute("D", "b", "INTEGER")
quotient
add_attribute("D", "d", "BOOLEAN")
logical_negation
equals
numerical_negation
add_call_chain(<<a,B,e,B,b,C,c>>)
numerical_negation
add_query("C", "D", <<["A", "INTEGER"], ["c", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "INTEGER"], ["B", "INTEGER"], ["d", "a"]>>, "e")
int_value (34)
add_call_chain(<<INTEGER,INTEGER,BOOLEAN,d,a>>)
add_call_chain(<<b,C,e,D,C,A,d,e>>)
add_call_chain(<<A,D,A,C,d,c,d>>)
add_command("C", "e", <<["c", "INTEGER"], ["d", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "INTEGER"], ["e", "INTEGER"], ["b", "d"]>>)
add_command("B", "BOOLEAN", <<["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "INTEGER"]>>)
logical_negation
int_value (20)
add_attribute("B", "INTEGER", "INTEGER")
multiplication
add_call_chain(<<C,e,B,B,BOOLEAN,b,C>>)
quotient
add_query("D", "c", <<["A", "C"], ["b", "INTEGER"], ["a", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "e"], ["c", "INTEGER"], ["d", "BOOLEAN"], ["D", "BOOLEAN"]>>, "A")
add_call_chain(<<c,D,d,e,b,b>>)
add_query("D", "b", <<["C", "BOOLEAN"], ["b", "BOOLEAN"], ["e", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "INTEGER"], ["d", "BOOLEAN"], ["C", "BOOLEAN"]>>, "A")
logical_negation
add_call_chain(<<c,b,b>>)
numerical_negation
int_value (26)
logical_negation
add_command("B", "e", <<["BOOLEAN", "INTEGER"], ["B", "INTEGER"]>>)
add_call_chain(<<d>>)
add_query("B", "A", <<["d", "BOOLEAN"], ["c", "INTEGER"], ["e", "e"], ["d", "INTEGER"], ["C", "INTEGER"], ["A", "D"]>>, "c")
bool_value (true)
int_value (20)
add_call_chain(<<c,BOOLEAN,c,d,D,e,INTEGER,b>>)
add_command("a", "e", <<["e", "BOOLEAN"], ["a", "INTEGER"]>>)
add_call_chain(<<D,c,d>>)
generate_java_code
addition
add_command("D", "a", <<["B", "BOOLEAN"], ["B", "INTEGER"], ["d", "INTEGER"], ["A", "B"]>>)
add_attribute("a", "a", "INTEGER")
logical_negation
numerical_negation
numerical_negation
int_value (32)
add_attribute("C", "c", "INTEGER")
type_check
add_query("c", "B", <<["b", "INTEGER"]>>, "e")
add_class(a)
add_command("a", "C", <<["B", "B"], ["d", "INTEGER"], ["e", "e"], ["C", "BOOLEAN"], ["B", "a"], ["BOOLEAN", "INTEGER"]>>)
add_call_chain(<<A>>)
add_command("e", "c", <<["B", "BOOLEAN"]>>)
bool_value (false)
bool_value (false)
numerical_negation
add_attribute("c", "d", "B")
add_query("d", "D", <<["D", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "a"], ["B", "BOOLEAN"], ["D", "INTEGER"], ["b", "d"]>>, "B")
numerical_negation
generate_java_code
add_attribute("d", "e", "INTEGER")
add_call_chain(<<B,BOOLEAN,d,b>>)
generate_java_code
add_call_chain(<<A>>)
int_value (7)
add_command("b", "D", <<["e", "B"], ["e", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["A", "d"]>>)
bool_value (true)
add_query("b", "INTEGER", <<["c", "B"]>>, "C")
bool_value (false)
add_call_chain(<<D,c>>)
generate_java_code
add_class(A)
add_attribute("B", "d", "INTEGER")
type_check
int_value (14)
modulo
add_call_chain(<<BOOLEAN,D,b>>)
equals
numerical_negation
int_value (32)
add_query("b", "e", <<["a", "BOOLEAN"], ["c", "INTEGER"], ["A", "b"]>>, "b")
numerical_negation
int_value (2)
add_attribute("C", "D", "B")
add_attribute("b", "C", "B")
add_command("C", "A", <<["a", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "INTEGER"]>>)
add_query("D", "A", <<["b", "INTEGER"], ["c", "c"], ["c", "BOOLEAN"], ["B", "INTEGER"], ["B", "INTEGER"], ["D", "BOOLEAN"]>>, "B")
add_attribute("D", "B", "INTEGER")
equals
int_value (36)
add_call_chain(<<C,INTEGER,B,B,d>>)
add_call_chain(<<INTEGER,e>>)
add_attribute("D", "e", "INTEGER")
add_attribute("e", "b", "BOOLEAN")
logical_negation
add_class(A)
add_command("B", "BOOLEAN", <<["B", "BOOLEAN"], ["e", "e"], ["e", "a"], ["e", "BOOLEAN"], ["INTEGER", "INTEGER"]>>)
equals
bool_value (true)
add_command("c", "d", <<["d", "BOOLEAN"]>>)
multiplication
equals
add_call_chain(<<B,INTEGER,D,D,a,e,D,A,INTEGER>>)
add_query("B", "B", <<["c", "BOOLEAN"]>>, "a")
add_command("e", "C", <<["a", "A"], ["c", "BOOLEAN"], ["b", "INTEGER"], ["INTEGER", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "INTEGER"], ["b", "C"], ["e", "BOOLEAN"], ["D", "BOOLEAN"]>>)
bool_value (true)
add_call_chain(<<A,D,D,B>>)
bool_value (false)
int_value (11)
add_attribute("INTEGER", "e", "BOOLEAN")
modulo
numerical_negation
disjunction
add_class(INTEGER)
add_command("a", "d", <<["b", "A"], ["D", "a"], ["A", "BOOLEAN"], ["D", "a"], ["A", "INTEGER"], ["a", "INTEGER"], ["A", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["D", "BOOLEAN"]>>)
add_query("e", "C", <<["C", "INTEGER"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "B"]>>, "c")
add_command("A", "d", <<["b", "INTEGER"], ["d", "A"], ["D", "d"]>>)
type_check
add_query("C", "d", <<["c", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "INTEGER"]>>, "c")
add_call_chain(<<e,C,A,D,BOOLEAN,BOOLEAN,A,a>>)
addition
numerical_negation
numerical_negation
add_query("C", "C", <<["e", "BOOLEAN"], ["D", "INTEGER"]>>, "a")
numerical_negation
add_command("BOOLEAN", "A", <<["B", "INTEGER"], ["e", "INTEGER"], ["B", "INTEGER"], ["D", "b"], ["a", "D"], ["B", "INTEGER"], ["A", "INTEGER"], ["B", "INTEGER"], ["b", "BOOLEAN"]>>)
add_call_chain(<<d,C,d,a>>)
less_than
add_call_chain(<<B,A,d,d,INTEGER>>)
add_call_chain(<<e,D,B,a,c>>)
add_call_chain(<<e,c,c,B,A>>)
add_query("B", "A", <<["B", "INTEGER"], ["e", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "INTEGER"]>>, "a")
add_attribute("d", "B", "INTEGER")
add_query("C", "INTEGER", <<["C", "BOOLEAN"], ["e", "c"], ["C", "INTEGER"]>>, "b")
type_check
add_query("a", "b", <<["c", "BOOLEAN"], ["a", "BOOLEAN"], ["BOOLEAN", "d"], ["BOOLEAN", "D"], ["B", "INTEGER"], ["b", "INTEGER"], ["e", "BOOLEAN"], ["INTEGER", "INTEGER"]>>, "INTEGER")
numerical_negation
add_attribute("c", "b", "INTEGER")
generate_java_code
generate_java_code
generate_java_code
int_value (35)
add_attribute("B", "C", "INTEGER")
generate_java_code
type_check
add_command("B", "b", <<["e", "D"], ["B", "BOOLEAN"], ["b", "c"], ["b", "INTEGER"], ["e", "a"], ["b", "INTEGER"], ["e", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
bool_value (false)
less_than
numerical_negation
generate_java_code
add_call_chain(<<B>>)
add_class(e)
add_attribute("e", "C", "INTEGER")
less_than
int_value (12)
add_attribute("a", "b", "INTEGER")
bool_value (true)
add_command("C", "b", <<["e", "e"], ["INTEGER", "D"], ["b", "BOOLEAN"]>>)
generate_java_code
modulo
add_query("d", "a", <<["A", "BOOLEAN"]>>, "b")
add_query("b", "D", <<["INTEGER", "BOOLEAN"], ["BOOLEAN", "d"], ["BOOLEAN", "a"], ["c", "b"], ["B", "INTEGER"], ["b", "BOOLEAN"], ["B", "c"], ["D", "INTEGER"], ["D", "BOOLEAN"]>>, "B")
bool_value (false)
add_attribute("B", "b", "D")
numerical_negation
int_value (5)
add_attribute("D", "C", "INTEGER")
add_call_chain(<<C,BOOLEAN,INTEGER,b>>)
add_class(A)
int_value (41)
add_command("C", "c", <<["A", "BOOLEAN"], ["C", "BOOLEAN"], ["d", "BOOLEAN"]>>)
numerical_negation
add_query("a", "A", <<["BOOLEAN", "BOOLEAN"], ["B", "INTEGER"], ["d", "B"], ["A", "BOOLEAN"], ["d", "INTEGER"], ["e", "INTEGER"], ["INTEGER", "b"], ["BOOLEAN", "A"]>>, "A")
add_command("e", "C", <<["d", "BOOLEAN"], ["INTEGER", "INTEGER"], ["e", "d"], ["b", "INTEGER"], ["e", "INTEGER"], ["A", "INTEGER"]>>)
add_command("A", "b", <<["INTEGER", "BOOLEAN"], ["C", "INTEGER"], ["C", "INTEGER"], ["A", "a"], ["c", "INTEGER"], ["e", "INTEGER"]>>)
add_command("e", "e", <<["D", "INTEGER"]>>)
generate_java_code
logical_negation
bool_value (false)
int_value (35)
logical_negation
add_command("A", "BOOLEAN", <<["d", "a"], ["BOOLEAN", "INTEGER"]>>)
int_value (40)
bool_value (true)
type_check
bool_value (true)
int_value (3)
conjunction
add_query("C", "d", <<["C", "BOOLEAN"], ["e", "B"], ["d", "a"], ["A", "BOOLEAN"], ["C", "BOOLEAN"]>>, "e")
add_class(A)
add_attribute("c", "e", "D")
addition
disjunction
add_call_chain(<<d,INTEGER,INTEGER,d,c,INTEGER,B>>)
bool_value (false)
add_query("e", "B", <<["B", "INTEGER"], ["D", "INTEGER"], ["INTEGER", "A"]>>, "B")
generate_java_code
bool_value (false)
logical_negation
type_check
logical_negation
add_call_chain(<<a,B,INTEGER>>)
