add_query("d", "e", <<["e", "BOOLEAN"]>>, "c")
logical_negation
add_query("b", "A", <<["b", "BOOLEAN"], ["D", "BOOLEAN"]>>, "BOOLEAN")
numerical_negation
conjunction
add_call_chain(<<a,A,c,a,B>>)
numerical_negation
add_call_chain(<<A,A>>)
add_command("INTEGER", "d", <<["D", "INTEGER"], ["D", "c"], ["e", "b"], ["d", "D"], ["B", "INTEGER"], ["B", "b"], ["B", "d"], ["A", "INTEGER"], ["C", "d"]>>)
bool_value (true)
add_attribute("e", "A", "BOOLEAN")
numerical_negation
add_command("c", "b", <<["c", "BOOLEAN"], ["D", "INTEGER"], ["D", "d"], ["BOOLEAN", "B"], ["B", "BOOLEAN"], ["B", "INTEGER"], ["c", "BOOLEAN"]>>)
bool_value (false)
add_attribute("d", "D", "BOOLEAN")
bool_value (true)
add_query("C", "INTEGER", <<["d", "INTEGER"], ["c", "BOOLEAN"], ["d", "D"], ["d", "d"], ["A", "INTEGER"]>>, "d")
add_query("d", "D", <<["c", "INTEGER"], ["D", "INTEGER"], ["a", "d"], ["D", "e"]>>, "A")
add_call_chain(<<b,A,e,d,c,a>>)
bool_value (true)
add_command("B", "BOOLEAN", <<["C", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>)
add_attribute("B", "C", "C")
int_value (16)
modulo
type_check
add_query("a", "C", <<["C", "A"], ["b", "e"], ["D", "INTEGER"], ["INTEGER", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>, "d")
int_value (14)
numerical_negation
add_query("D", "B", <<["e", "A"], ["c", "BOOLEAN"], ["e", "INTEGER"], ["A", "INTEGER"], ["e", "BOOLEAN"], ["a", "BOOLEAN"], ["b", "INTEGER"]>>, "A")
add_query("C", "d", <<["B", "INTEGER"]>>, "d")
numerical_negation
add_command("e", "A", <<["a", "BOOLEAN"], ["c", "INTEGER"], ["INTEGER", "BOOLEAN"], ["c", "BOOLEAN"], ["c", "INTEGER"], ["e", "B"], ["d", "C"]>>)
int_value (19)
add_query("B", "B", <<["b", "BOOLEAN"], ["A", "e"], ["A", "INTEGER"], ["BOOLEAN", "INTEGER"], ["a", "BOOLEAN"], ["D", "BOOLEAN"]>>, "c")
equals
add_command("INTEGER", "A", <<["A", "a"], ["A", "BOOLEAN"], ["a", "BOOLEAN"], ["b", "INTEGER"], ["B", "b"], ["INTEGER", "B"], ["C", "BOOLEAN"], ["d", "INTEGER"], ["B", "BOOLEAN"]>>)
add_class(INTEGER)
add_query("B", "c", <<["BOOLEAN", "BOOLEAN"], ["d", "INTEGER"]>>, "a")
add_command("e", "e", <<["BOOLEAN", "BOOLEAN"], ["INTEGER", "C"], ["c", "BOOLEAN"], ["a", "BOOLEAN"]>>)
add_call_chain(<<c,b,BOOLEAN,d>>)
add_attribute("a", "a", "INTEGER")
logical_negation
add_call_chain(<<b,B,b,D,BOOLEAN,c,c>>)
logical_negation
bool_value (true)
int_value (26)
logical_negation
bool_value (true)
add_query("c", "d", <<["D", "INTEGER"], ["INTEGER", "d"]>>, "a")
add_call_chain(<<c,C>>)
add_command("B", "INTEGER", <<["b", "INTEGER"], ["b", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "BOOLEAN"], ["d", "BOOLEAN"]>>)
logical_negation
logical_negation
logical_negation
int_value (23)
multiplication
add_call_chain(<<c,d,e,C,BOOLEAN,D,d,B,B>>)
add_call_chain(<<B,d>>)
add_call_chain(<<d>>)
add_attribute("c", "b", "C")
bool_value (false)
add_command("b", "D", <<["b", "INTEGER"], ["a", "INTEGER"], ["b", "INTEGER"]>>)
add_command("BOOLEAN", "A", <<["C", "A"], ["e", "BOOLEAN"], ["a", "INTEGER"], ["a", "BOOLEAN"], ["a", "c"], ["e", "INTEGER"], ["a", "BOOLEAN"], ["INTEGER", "a"]>>)
conjunction
bool_value (false)
numerical_negation
add_call_chain(<<INTEGER,b,a>>)
less_than
logical_negation
add_query("D", "e", <<["C", "BOOLEAN"], ["a", "BOOLEAN"]>>, "B")
int_value (38)
add_attribute("e", "C", "INTEGER")
numerical_negation
disjunction
add_command("a", "e", <<["e", "INTEGER"], ["b", "INTEGER"], ["e", "C"], ["a", "d"], ["BOOLEAN", "INTEGER"], ["d", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>)
add_attribute("B", "INTEGER", "BOOLEAN")
add_call_chain(<<BOOLEAN,B,b,INTEGER,B>>)
add_call_chain(<<C,A,C,B,INTEGER,c,a,d,b>>)
add_class(INTEGER)
add_query("D", "B", <<["c", "e"], ["A", "BOOLEAN"], ["b", "B"], ["e", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "INTEGER"], ["e", "B"], ["b", "INTEGER"]>>, "A")
add_call_chain(<<b,A,a,c,A,B>>)
less_than
type_check
add_attribute("d", "D", "BOOLEAN")
bool_value (true)
numerical_negation
generate_java_code
add_query("A", "c", <<["BOOLEAN", "INTEGER"], ["c", "INTEGER"], ["A", "INTEGER"]>>, "B")
type_check
greater_than
conjunction
add_class(a)
conjunction
add_call_chain(<<INTEGER,e,d>>)
add_call_chain(<<B,c,C>>)
bool_value (true)
bool_value (false)
add_query("a", "a", <<["A", "INTEGER"], ["C", "B"], ["c", "A"], ["d", "a"], ["A", "INTEGER"]>>, "A")
numerical_negation
add_call_chain(<<A,b>>)
subtraction
numerical_negation
add_attribute("B", "a", "BOOLEAN")
int_value (15)
bool_value (true)
numerical_negation
add_call_chain(<<D,a,e,e,a,D,a>>)
add_call_chain(<<e,e,C,b,D,B>>)
add_class(d)
generate_java_code
less_than
addition
add_command("a", "e", <<["C", "B"]>>)
type_check
logical_negation
add_call_chain(<<INTEGER,e,C>>)
generate_java_code
add_call_chain(<<a,b,C>>)
type_check
type_check
type_check
int_value (48)
add_query("D", "a", <<["a", "e"], ["d", "c"], ["BOOLEAN", "INTEGER"]>>, "a")
add_call_chain(<<C>>)
add_command("INTEGER", "BOOLEAN", <<["A", "BOOLEAN"], ["b", "d"], ["b", "d"], ["e", "INTEGER"], ["d", "BOOLEAN"]>>)
less_than
add_query("B", "d", <<["D", "c"], ["c", "B"], ["D", "INTEGER"]>>, "B")
generate_java_code
add_call_chain(<<D,B>>)
logical_negation
less_than
add_call_chain(<<c>>)
add_attribute("b", "c", "INTEGER")
add_attribute("e", "e", "c")
add_call_chain(<<C,c,c,a>>)
subtraction
add_attribute("c", "A", "B")
bool_value (true)
less_than
int_value (34)
greater_than
int_value (6)
add_class(C)
numerical_negation
add_call_chain(<<a,c>>)
bool_value (true)
disjunction
logical_negation
less_than
add_class(B)
int_value (25)
less_than
add_command("e", "a", <<["B", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["c", "INTEGER"], ["e", "d"], ["e", "INTEGER"], ["c", "INTEGER"]>>)
add_query("A", "a", <<["e", "INTEGER"], ["D", "d"], ["a", "INTEGER"], ["e", "B"], ["c", "B"]>>, "B")
add_call_chain(<<a,A,B,C,B,B,INTEGER,a>>)
quotient
bool_value (false)
add_command("C", "A", <<["A", "A"]>>)
add_call_chain(<<a,A,e,D>>)
add_call_chain(<<C,B,BOOLEAN,BOOLEAN,a,a,A,B>>)
add_attribute("c", "c", "INTEGER")
add_command("B", "D", <<["A", "INTEGER"]>>)
add_call_chain(<<B,B,d,D,C,c,a>>)
add_call_chain(<<d,d,D,e,b>>)
generate_java_code
add_query("b", "D", <<["e", "e"], ["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "INTEGER"], ["C", "BOOLEAN"], ["e", "INTEGER"]>>, "a")
add_class(a)
add_call_chain(<<a,B,A,A,D,D,d>>)
add_call_chain(<<c,b,D,INTEGER,C,C,A>>)
add_command("A", "A", <<["C", "INTEGER"]>>)
bool_value (true)
type_check
add_attribute("e", "B", "C")
logical_negation
logical_negation
bool_value (true)
add_command("D", "INTEGER", <<["A", "INTEGER"], ["b", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "INTEGER"]>>)
add_attribute("e", "A", "BOOLEAN")
add_call_chain(<<A,b>>)
int_value (44)
add_query("d", "INTEGER", <<["A", "INTEGER"], ["B", "INTEGER"], ["c", "INTEGER"]>>, "b")
add_class(a)
equals
add_query("b", "C", <<["C", "INTEGER"], ["A", "INTEGER"], ["C", "INTEGER"]>>, "B")
int_value (14)
add_call_chain(<<A>>)
add_class(a)
conjunction
logical_negation
add_call_chain(<<D,C>>)
add_attribute("d", "B", "BOOLEAN")
add_call_chain(<<b>>)
type_check
numerical_negation
int_value (39)
add_attribute("B", "b", "b")
add_class(B)
add_attribute("A", "d", "INTEGER")
disjunction
add_class(b)
add_command("INTEGER", "C", <<["C", "B"], ["B", "INTEGER"], ["A", "D"], ["B", "INTEGER"], ["C", "BOOLEAN"]>>)
add_call_chain(<<B,d,A,INTEGER>>)
disjunction
greater_than
add_query("INTEGER", "c", <<["e", "a"], ["d", "BOOLEAN"]>>, "C")
equals
add_class(INTEGER)
logical_negation
add_query("c", "D", <<["d", "c"], ["C", "BOOLEAN"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["B", "A"]>>, "A")
add_class(A)
add_call_chain(<<c,D,D,c,A,C,a,c>>)
generate_java_code
int_value (45)
add_call_chain(<<d,c,B>>)
add_call_chain(<<INTEGER,d,b,b,d,a,C,B,C>>)
