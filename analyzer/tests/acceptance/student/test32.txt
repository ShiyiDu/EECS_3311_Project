add_attribute("B", "c", "BOOLEAN")
add_query("d", "A", <<["a", "b"], ["b", "INTEGER"], ["B", "BOOLEAN"], ["e", "INTEGER"]>>, "d")
add_class(e)
bool_value (true)
add_command("C", "A", <<["INTEGER", "INTEGER"], ["BOOLEAN", "B"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["D", "INTEGER"], ["C", "BOOLEAN"]>>)
add_attribute("c", "e", "INTEGER")
int_value (22)
generate_java_code
add_query("A", "D", <<["B", "BOOLEAN"], ["A", "INTEGER"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["A", "a"], ["BOOLEAN", "INTEGER"], ["B", "BOOLEAN"], ["e", "INTEGER"], ["d", "INTEGER"]>>, "b")
conjunction
addition
conjunction
bool_value (true)
generate_java_code
generate_java_code
add_query("B", "d", <<["c", "INTEGER"], ["c", "INTEGER"], ["D", "INTEGER"], ["e", "INTEGER"], ["A", "BOOLEAN"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["C", "BOOLEAN"]>>, "INTEGER")
bool_value (false)
add_call_chain(<<A,d,A,C>>)
logical_negation
add_command("C", "BOOLEAN", <<["d", "INTEGER"], ["D", "INTEGER"], ["BOOLEAN", "INTEGER"]>>)
add_command("D", "A", <<["a", "BOOLEAN"], ["a", "INTEGER"], ["D", "B"], ["B", "A"]>>)
add_query("b", "a", <<["e", "e"]>>, "e")
add_attribute("b", "c", "d")
add_attribute("D", "C", "d")
numerical_negation
logical_negation
less_than
numerical_negation
numerical_negation
add_attribute("e", "B", "D")
add_call_chain(<<D,A,A,B,d,D,b,b>>)
logical_negation
logical_negation
generate_java_code
bool_value (true)
add_query("c", "a", <<["a", "e"], ["B", "INTEGER"], ["INTEGER", "INTEGER"], ["c", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["b", "BOOLEAN"], ["C", "INTEGER"]>>, "e")
int_value (25)
add_query("c", "A", <<["a", "INTEGER"], ["b", "D"], ["D", "BOOLEAN"], ["c", "D"], ["D", "INTEGER"], ["c", "INTEGER"], ["d", "BOOLEAN"], ["D", "BOOLEAN"], ["INTEGER", "d"]>>, "B")
add_class(BOOLEAN)
add_call_chain(<<c,B,B,d,B,INTEGER,INTEGER>>)
add_attribute("D", "BOOLEAN", "BOOLEAN")
add_call_chain(<<B,BOOLEAN>>)
add_query("B", "d", <<["d", "INTEGER"], ["a", "BOOLEAN"], ["B", "INTEGER"], ["A", "INTEGER"], ["b", "BOOLEAN"], ["B", "BOOLEAN"]>>, "A")
add_call_chain(<<e,d,C>>)
add_call_chain(<<d,A,D,c,e,A,A>>)
add_query("e", "c", <<["D", "INTEGER"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["D", "A"], ["C", "BOOLEAN"], ["a", "INTEGER"]>>, "c")
type_check
add_query("B", "b", <<["e", "B"]>>, "a")
add_attribute("C", "INTEGER", "a")
int_value (32)
generate_java_code
add_attribute("A", "a", "INTEGER")
add_attribute("a", "c", "INTEGER")
add_command("BOOLEAN", "D", <<["c", "BOOLEAN"]>>)
add_command("C", "D", <<["a", "BOOLEAN"]>>)
add_class(a)
add_query("BOOLEAN", "INTEGER", <<["d", "B"], ["d", "INTEGER"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["D", "C"]>>, "e")
int_value (34)
logical_negation
bool_value (false)
type_check
add_call_chain(<<A,c,BOOLEAN,e,e,e>>)
conjunction
bool_value (true)
type_check
numerical_negation
disjunction
add_call_chain(<<a,d,C,d,C>>)
numerical_negation
disjunction
less_than
add_query("a", "A", <<["a", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["b", "a"], ["e", "BOOLEAN"], ["A", "BOOLEAN"]>>, "A")
add_attribute("B", "B", "INTEGER")
logical_negation
quotient
type_check
add_class(b)
add_class(C)
add_command("d", "INTEGER", <<["D", "INTEGER"], ["b", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "c"], ["D", "c"]>>)
add_call_chain(<<d,c,A,BOOLEAN,A,C,A,INTEGER>>)
add_call_chain(<<b,A,D,d>>)
add_attribute("a", "B", "BOOLEAN")
add_call_chain(<<A,BOOLEAN,A,INTEGER>>)
add_query("A", "a", <<["e", "BOOLEAN"]>>, "A")
add_call_chain(<<BOOLEAN,INTEGER,c,C,c,e,D,e>>)
add_call_chain(<<D,e,A,INTEGER,b,INTEGER,b,BOOLEAN,d>>)
add_attribute("A", "C", "INTEGER")
bool_value (false)
add_command("b", "b", <<["D", "d"], ["e", "BOOLEAN"], ["C", "BOOLEAN"], ["INTEGER", "c"]>>)
add_attribute("A", "b", "c")
add_query("A", "b", <<["D", "INTEGER"], ["e", "INTEGER"], ["D", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["INTEGER", "INTEGER"], ["A", "BOOLEAN"]>>, "e")
add_class(b)
add_call_chain(<<C,c,C,d,d,a>>)
add_command("A", "C", <<["C", "BOOLEAN"], ["b", "INTEGER"], ["a", "a"], ["C", "d"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["a", "A"]>>)
add_class(C)
add_query("C", "a", <<["A", "BOOLEAN"], ["a", "BOOLEAN"]>>, "B")
bool_value (false)
add_command("A", "A", <<["INTEGER", "B"], ["C", "C"], ["d", "b"], ["d", "d"]>>)
greater_than
numerical_negation
add_attribute("INTEGER", "A", "BOOLEAN")
generate_java_code
add_query("D", "e", <<["b", "d"], ["e", "A"], ["b", "BOOLEAN"], ["d", "d"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "BOOLEAN"]>>, "INTEGER")
add_call_chain(<<C,d,C,INTEGER,D,C>>)
add_query("a", "d", <<["a", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "INTEGER"], ["e", "B"], ["D", "INTEGER"]>>, "A")
disjunction
int_value (1)
int_value (22)
add_command("D", "B", <<["a", "INTEGER"]>>)
add_class(A)
int_value (30)
bool_value (false)
add_command("INTEGER", "D", <<["a", "D"], ["e", "INTEGER"], ["a", "INTEGER"], ["e", "BOOLEAN"], ["c", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>)
add_attribute("c", "C", "BOOLEAN")
disjunction
add_attribute("d", "d", "INTEGER")
multiplication
logical_negation
add_command("INTEGER", "c", <<["e", "d"], ["a", "BOOLEAN"], ["a", "INTEGER"], ["d", "BOOLEAN"], ["INTEGER", "INTEGER"], ["D", "BOOLEAN"], ["C", "INTEGER"]>>)
add_call_chain(<<B,a,A,e,A,a,D>>)
add_call_chain(<<INTEGER,C,c,a,A,C,c,INTEGER>>)
conjunction
add_command("A", "D", <<["e", "d"], ["D", "C"], ["b", "BOOLEAN"], ["a", "a"], ["B", "INTEGER"], ["b", "B"]>>)
add_call_chain(<<D>>)
add_call_chain(<<b,a,B,c,c,d,C,c>>)
subtraction
conjunction
add_query("d", "b", <<["a", "B"], ["a", "BOOLEAN"], ["a", "INTEGER"], ["b", "BOOLEAN"], ["A", "e"], ["C", "BOOLEAN"], ["c", "a"], ["a", "d"]>>, "C")
add_command("a", "C", <<["d", "BOOLEAN"], ["C", "d"], ["C", "BOOLEAN"], ["d", "C"], ["C", "BOOLEAN"], ["C", "c"], ["c", "INTEGER"], ["C", "c"]>>)
add_call_chain(<<e,A,BOOLEAN>>)
quotient
logical_negation
int_value (36)
add_command("D", "A", <<["e", "d"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["a", "INTEGER"], ["B", "INTEGER"], ["C", "b"], ["e", "D"], ["e", "INTEGER"]>>)
add_attribute("e", "b", "BOOLEAN")
bool_value (true)
add_call_chain(<<a,A,b,c,c,d,A>>)
add_call_chain(<<e,e,A,d,a,BOOLEAN>>)
type_check
add_class(B)
numerical_negation
add_command("B", "c", <<["C", "BOOLEAN"], ["b", "D"], ["A", "BOOLEAN"], ["D", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["B", "INTEGER"], ["BOOLEAN", "a"]>>)
add_query("a", "e", <<["b", "INTEGER"], ["d", "BOOLEAN"], ["b", "A"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "D"], ["B", "BOOLEAN"], ["d", "e"]>>, "INTEGER")
add_class(e)
type_check
add_attribute("C", "d", "BOOLEAN")
less_than
add_call_chain(<<b,e,B,A,A>>)
add_query("b", "e", <<["D", "INTEGER"], ["c", "INTEGER"], ["INTEGER", "INTEGER"], ["D", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["A", "C"], ["BOOLEAN", "A"]>>, "b")
type_check
add_call_chain(<<d,d>>)
multiplication
add_attribute("INTEGER", "C", "C")
add_query("C", "D", <<["A", "INTEGER"]>>, "A")
equals
generate_java_code
numerical_negation
add_attribute("D", "D", "INTEGER")
add_query("A", "b", <<["B", "BOOLEAN"], ["D", "INTEGER"], ["d", "C"], ["A", "BOOLEAN"]>>, "D")
add_query("c", "a", <<["b", "C"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["INTEGER", "D"], ["a", "INTEGER"]>>, "b")
quotient
add_attribute("D", "A", "INTEGER")
add_command("a", "B", <<["B", "C"], ["A", "BOOLEAN"], ["c", "e"], ["C", "BOOLEAN"], ["c", "INTEGER"], ["e", "INTEGER"], ["C", "d"], ["C", "d"], ["D", "BOOLEAN"]>>)
type_check
greater_than
add_class(B)
add_query("e", "A", <<["B", "BOOLEAN"]>>, "c")
type_check
bool_value (false)
logical_negation
int_value (26)
int_value (38)
add_class(C)
add_class(A)
int_value (49)
add_query("d", "A", <<["e", "INTEGER"], ["c", "BOOLEAN"]>>, "e")
add_call_chain(<<c>>)
add_query("BOOLEAN", "e", <<["BOOLEAN", "BOOLEAN"], ["D", "INTEGER"], ["A", "INTEGER"], ["c", "INTEGER"], ["A", "c"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["D", "C"], ["c", "e"]>>, "B")
bool_value (false)
add_query("b", "a", <<["INTEGER", "BOOLEAN"], ["e", "INTEGER"], ["a", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "INTEGER"]>>, "b")
int_value (25)
subtraction
add_attribute("d", "C", "BOOLEAN")
add_command("e", "A", <<["b", "D"], ["c", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "INTEGER"], ["c", "A"], ["B", "BOOLEAN"]>>)
add_call_chain(<<B,A,BOOLEAN>>)
logical_negation
add_query("B", "B", <<["a", "INTEGER"], ["b", "b"], ["d", "d"], ["a", "BOOLEAN"], ["b", "BOOLEAN"], ["INTEGER", "C"], ["B", "BOOLEAN"]>>, "b")
int_value (44)
numerical_negation
type_check
add_call_chain(<<BOOLEAN,c,c,d,e,BOOLEAN,INTEGER,BOOLEAN>>)
add_call_chain(<<B,A,e,B>>)
numerical_negation
generate_java_code
numerical_negation
type_check
add_attribute("D", "a", "INTEGER")
add_call_chain(<<d,INTEGER,A,b,c,BOOLEAN>>)
add_class(a)
int_value (18)
add_call_chain(<<c,A,c,b,A,C>>)
bool_value (true)
add_class(a)
add_call_chain(<<C,C,A,D>>)
numerical_negation
numerical_negation
add_attribute("B", "a", "INTEGER")
numerical_negation
bool_value (false)
add_query("b", "e", <<["BOOLEAN", "BOOLEAN"]>>, "B")
add_command("D", "B", <<["B", "BOOLEAN"], ["INTEGER", "b"], ["B", "BOOLEAN"], ["d", "INTEGER"]>>)
add_query("C", "B", <<["B", "BOOLEAN"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["c", "INTEGER"]>>, "C")
add_class(c)
add_call_chain(<<A,INTEGER,C,BOOLEAN,d,e,B,a,d>>)
equals
add_query("A", "B", <<["c", "d"], ["b", "INTEGER"], ["B", "INTEGER"], ["D", "INTEGER"], ["e", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "d"], ["C", "b"]>>, "A")
add_query("b", "e", <<["C", "BOOLEAN"], ["B", "INTEGER"]>>, "A")
subtraction
add_query("B", "e", <<["B", "BOOLEAN"], ["b", "INTEGER"], ["e", "BOOLEAN"], ["d", "INTEGER"], ["b", "BOOLEAN"]>>, "a")
add_command("A", "a", <<["a", "INTEGER"], ["A", "A"], ["B", "a"], ["D", "INTEGER"], ["B", "INTEGER"], ["e", "INTEGER"]>>)
numerical_negation
type_check
add_call_chain(<<D,A,e,e,c,e,D>>)
numerical_negation
add_query("C", "D", <<["D", "BOOLEAN"], ["a", "BOOLEAN"]>>, "BOOLEAN")
bool_value (true)
add_command("C", "C", <<["c", "INTEGER"], ["A", "BOOLEAN"], ["a", "d"], ["e", "BOOLEAN"], ["A", "c"], ["a", "c"]>>)
logical_negation
add_query("e", "C", <<["A", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["d", "c"], ["C", "D"], ["e", "BOOLEAN"]>>, "d")
int_value (31)
add_query("A", "C", <<["c", "A"], ["c", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["A", "INTEGER"]>>, "d")
add_attribute("INTEGER", "c", "D")
add_call_chain(<<D,d>>)
int_value (20)
add_query("c", "D", <<["A", "INTEGER"], ["INTEGER", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "a"], ["b", "D"], ["B", "BOOLEAN"], ["e", "INTEGER"], ["C", "BOOLEAN"], ["b", "BOOLEAN"]>>, "C")
generate_java_code
disjunction
add_query("b", "c", <<["a", "A"]>>, "d")
add_query("d", "e", <<["C", "INTEGER"], ["b", "BOOLEAN"], ["a", "BOOLEAN"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["C", "BOOLEAN"]>>, "a")
numerical_negation
add_command("d", "BOOLEAN", <<["B", "INTEGER"], ["C", "INTEGER"], ["D", "INTEGER"], ["d", "BOOLEAN"]>>)
add_call_chain(<<BOOLEAN,C,a>>)
add_call_chain(<<C,e,A,C,B,c,D>>)
multiplication
numerical_negation
add_call_chain(<<e>>)
add_query("d", "a", <<["BOOLEAN", "INTEGER"], ["BOOLEAN", "A"]>>, "B")
add_class(e)
add_attribute("B", "b", "INTEGER")
add_attribute("A", "A", "A")
logical_negation
add_call_chain(<<C>>)
type_check
logical_negation
add_call_chain(<<C,B,d>>)
add_attribute("B", "e", "D")
bool_value (true)
add_call_chain(<<D,BOOLEAN,B,a,C,D,D,C>>)
greater_than
logical_negation
add_query("BOOLEAN", "A", <<["D", "INTEGER"]>>, "b")
disjunction
bool_value (true)
multiplication
add_attribute("INTEGER", "e", "BOOLEAN")
type_check
