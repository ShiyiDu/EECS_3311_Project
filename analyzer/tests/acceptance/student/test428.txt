bool_value (false)
add_call_chain(<<b,a,e,b,C>>)
int_value (30)
less_than
numerical_negation
bool_value (false)
add_attribute("D", "c", "INTEGER")
add_attribute("D", "d", "INTEGER")
add_class(C)
conjunction
logical_negation
add_query("BOOLEAN", "C", <<["D", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "d"], ["b", "BOOLEAN"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["B", "INTEGER"]>>, "INTEGER")
add_attribute("c", "c", "INTEGER")
generate_java_code
add_command("e", "A", <<["a", "INTEGER"], ["B", "INTEGER"], ["D", "B"], ["a", "c"], ["c", "D"], ["D", "INTEGER"]>>)
disjunction
bool_value (false)
add_class(d)
bool_value (false)
add_class(BOOLEAN)
add_call_chain(<<c,A,A,A,C,b,b>>)
bool_value (true)
generate_java_code
bool_value (true)
type_check
add_attribute("e", "b", "BOOLEAN")
add_attribute("e", "c", "d")
numerical_negation
add_command("b", "e", <<["D", "BOOLEAN"], ["e", "c"], ["B", "BOOLEAN"]>>)
logical_negation
logical_negation
add_call_chain(<<A,b,b>>)
numerical_negation
add_query("B", "B", <<["e", "C"], ["INTEGER", "BOOLEAN"], ["C", "INTEGER"], ["A", "INTEGER"]>>, "A")
quotient
int_value (22)
bool_value (true)
add_call_chain(<<C,A,B,INTEGER>>)
disjunction
add_call_chain(<<a,a,INTEGER,a,B,INTEGER,e>>)
quotient
add_query("B", "a", <<["D", "BOOLEAN"]>>, "a")
add_class(B)
add_query("D", "C", <<["e", "B"], ["a", "INTEGER"], ["B", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["D", "BOOLEAN"]>>, "c")
numerical_negation
add_query("b", "e", <<["A", "BOOLEAN"], ["e", "INTEGER"], ["d", "BOOLEAN"], ["e", "D"], ["A", "BOOLEAN"]>>, "a")
int_value (18)
add_call_chain(<<INTEGER,A,c,e,B,D,B>>)
less_than
add_command("a", "A", <<["A", "B"]>>)
equals
numerical_negation
add_attribute("INTEGER", "e", "BOOLEAN")
add_command("D", "B", <<["B", "BOOLEAN"], ["b", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
add_call_chain(<<e>>)
add_call_chain(<<C,e,d,D,e,A,D>>)
add_call_chain(<<e>>)
add_call_chain(<<D,A,c,d,e,b,C>>)
type_check
add_call_chain(<<BOOLEAN,D,a,c,e>>)
add_call_chain(<<D,c,b,e,b,b,A,C>>)
add_command("c", "e", <<["a", "INTEGER"], ["b", "a"], ["BOOLEAN", "INTEGER"], ["b", "D"], ["B", "BOOLEAN"], ["b", "B"], ["c", "BOOLEAN"], ["C", "INTEGER"]>>)
add_call_chain(<<BOOLEAN,b,e,b>>)
int_value (7)
numerical_negation
bool_value (true)
disjunction
conjunction
add_command("A", "A", <<["C", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "BOOLEAN"]>>)
add_query("a", "BOOLEAN", <<["INTEGER", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>, "e")
add_query("a", "INTEGER", <<["b", "a"], ["A", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>, "c")
add_attribute("INTEGER", "e", "BOOLEAN")
int_value (8)
add_attribute("c", "b", "a")
add_call_chain(<<c,d,D,a,b,C>>)
bool_value (false)
numerical_negation
add_class(b)
addition
numerical_negation
modulo
add_call_chain(<<b,B>>)
add_call_chain(<<B,a,D,BOOLEAN,c,c,d,C>>)
add_class(INTEGER)
add_query("e", "e", <<["d", "INTEGER"], ["e", "BOOLEAN"], ["A", "c"]>>, "BOOLEAN")
int_value (15)
add_query("a", "d", <<["A", "B"], ["b", "a"], ["e", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "A"]>>, "B")
add_query("b", "B", <<["b", "BOOLEAN"], ["a", "INTEGER"], ["d", "B"]>>, "D")
int_value (28)
type_check
add_call_chain(<<D>>)
int_value (25)
add_query("d", "B", <<["b", "INTEGER"], ["e", "BOOLEAN"], ["a", "BOOLEAN"]>>, "C")
add_attribute("A", "a", "BOOLEAN")
add_class(c)
add_call_chain(<<D>>)
bool_value (false)
generate_java_code
add_query("A", "A", <<["c", "INTEGER"], ["C", "b"], ["c", "BOOLEAN"], ["INTEGER", "INTEGER"], ["C", "INTEGER"], ["a", "D"], ["b", "BOOLEAN"], ["INTEGER", "c"], ["e", "BOOLEAN"]>>, "A")
add_call_chain(<<D,B,e,e,a,C>>)
add_command("c", "a", <<["C", "INTEGER"], ["C", "BOOLEAN"], ["c", "BOOLEAN"]>>)
int_value (11)
numerical_negation
add_attribute("A", "c", "d")
int_value (25)
add_query("a", "C", <<["a", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "BOOLEAN"]>>, "B")
add_command("b", "c", <<["D", "A"], ["a", "INTEGER"], ["d", "INTEGER"], ["d", "INTEGER"], ["d", "INTEGER"], ["D", "B"], ["d", "INTEGER"]>>)
add_call_chain(<<INTEGER,e,b,D,D,A,a>>)
numerical_negation
addition
add_query("e", "BOOLEAN", <<["C", "INTEGER"], ["C", "INTEGER"], ["B", "INTEGER"], ["e", "INTEGER"], ["C", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "INTEGER"], ["e", "c"], ["A", "INTEGER"]>>, "a")
greater_than
add_command("d", "e", <<["d", "D"], ["a", "d"], ["C", "INTEGER"], ["D", "C"], ["A", "a"]>>)
numerical_negation
add_command("d", "C", <<["INTEGER", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
bool_value (true)
generate_java_code
disjunction
type_check
type_check
add_command("A", "d", <<["e", "BOOLEAN"], ["a", "INTEGER"], ["C", "B"], ["b", "e"], ["D", "d"], ["e", "BOOLEAN"], ["a", "B"], ["b", "BOOLEAN"], ["A", "INTEGER"]>>)
conjunction
logical_negation
add_call_chain(<<e,e>>)
add_query("D", "e", <<["A", "BOOLEAN"], ["e", "INTEGER"], ["b", "INTEGER"]>>, "c")
add_call_chain(<<a,D,b,c,B,a,B,D,A>>)
multiplication
add_call_chain(<<A,B>>)
int_value (15)
add_call_chain(<<C,d,D,C,D,A,A>>)
bool_value (false)
int_value (13)
add_call_chain(<<b,B,b,D,a,B,D,A,D>>)
logical_negation
add_query("b", "c", <<["b", "INTEGER"], ["D", "b"], ["D", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "INTEGER"], ["a", "BOOLEAN"], ["D", "D"]>>, "A")
add_command("a", "c", <<["c", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "C"], ["BOOLEAN", "BOOLEAN"], ["b", "BOOLEAN"]>>)
logical_negation
type_check
disjunction
conjunction
bool_value (false)
numerical_negation
add_attribute("e", "A", "INTEGER")
add_attribute("A", "D", "e")
add_call_chain(<<d,b,c,c,B,d,D,C,b>>)
add_attribute("a", "a", "e")
add_call_chain(<<a,B,b,e,INTEGER,B>>)
numerical_negation
add_call_chain(<<d,INTEGER,c>>)
add_query("d", "b", <<["C", "INTEGER"], ["a", "BOOLEAN"]>>, "b")
add_command("C", "D", <<["e", "INTEGER"], ["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "b"], ["d", "INTEGER"], ["INTEGER", "A"], ["D", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>)
disjunction
addition
less_than
disjunction
add_call_chain(<<B,e>>)
add_class(a)
bool_value (false)
add_command("d", "BOOLEAN", <<["B", "BOOLEAN"], ["INTEGER", "INTEGER"], ["B", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["e", "C"], ["C", "BOOLEAN"], ["b", "BOOLEAN"]>>)
add_call_chain(<<C,b>>)
add_command("B", "INTEGER", <<["e", "BOOLEAN"], ["e", "INTEGER"], ["INTEGER", "c"], ["B", "b"], ["a", "BOOLEAN"]>>)
bool_value (false)
add_attribute("A", "a", "BOOLEAN")
add_call_chain(<<c,B,b,INTEGER,INTEGER,BOOLEAN,e,c,B>>)
add_attribute("C", "A", "BOOLEAN")
int_value (1)
bool_value (true)
bool_value (true)
add_call_chain(<<B,b,D,a,A,b,d,B,C>>)
less_than
add_query("INTEGER", "B", <<["a", "INTEGER"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["INTEGER", "A"], ["BOOLEAN", "INTEGER"], ["D", "D"], ["c", "INTEGER"], ["B", "BOOLEAN"], ["B", "BOOLEAN"]>>, "B")
add_command("b", "a", <<["BOOLEAN", "INTEGER"], ["INTEGER", "INTEGER"], ["e", "BOOLEAN"], ["D", "INTEGER"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "INTEGER"], ["c", "BOOLEAN"]>>)
bool_value (false)
logical_negation
addition
type_check
type_check
bool_value (false)
bool_value (false)
int_value (3)
conjunction
logical_negation
add_command("INTEGER", "e", <<["e", "INTEGER"]>>)
int_value (47)
int_value (2)
add_call_chain(<<b,B,b,B>>)
add_call_chain(<<B,C,A,C>>)
generate_java_code
add_attribute("a", "a", "INTEGER")
add_query("a", "c", <<["C", "INTEGER"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "INTEGER"]>>, "d")
less_than
logical_negation
int_value (28)
generate_java_code
add_query("B", "A", <<["c", "INTEGER"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["e", "INTEGER"], ["A", "b"], ["e", "BOOLEAN"], ["B", "INTEGER"], ["INTEGER", "D"]>>, "a")
subtraction
int_value (30)
add_call_chain(<<d,a>>)
add_call_chain(<<c,B,e>>)
type_check
add_query("C", "d", <<["c", "D"], ["c", "A"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["b", "INTEGER"], ["A", "INTEGER"], ["c", "INTEGER"], ["a", "INTEGER"], ["d", "BOOLEAN"]>>, "B")
numerical_negation
addition
type_check
add_query("A", "d", <<["B", "B"], ["c", "INTEGER"], ["c", "INTEGER"], ["a", "INTEGER"], ["a", "INTEGER"]>>, "D")
add_call_chain(<<b,d,A,e,D>>)
add_query("B", "a", <<["e", "BOOLEAN"], ["BOOLEAN", "B"], ["a", "BOOLEAN"], ["INTEGER", "D"]>>, "D")
add_query("e", "B", <<["b", "INTEGER"]>>, "BOOLEAN")
add_call_chain(<<a,d,INTEGER,c>>)
add_query("B", "A", <<["D", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "A"], ["C", "B"], ["a", "INTEGER"], ["C", "b"], ["b", "d"], ["A", "BOOLEAN"]>>, "e")
add_query("d", "B", <<["B", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "INTEGER"], ["C", "A"]>>, "a")
add_command("B", "B", <<["A", "INTEGER"], ["c", "D"]>>)
int_value (39)
add_class(d)
add_command("D", "a", <<["A", "INTEGER"], ["d", "BOOLEAN"]>>)
add_command("e", "B", <<["d", "A"], ["C", "BOOLEAN"], ["c", "BOOLEAN"]>>)
numerical_negation
add_query("c", "c", <<["C", "D"], ["B", "INTEGER"], ["a", "B"], ["c", "D"], ["e", "INTEGER"]>>, "BOOLEAN")
add_command("C", "B", <<["B", "BOOLEAN"], ["a", "INTEGER"], ["b", "INTEGER"], ["c", "BOOLEAN"]>>)
numerical_negation
logical_negation
type_check
add_query("b", "c", <<["d", "INTEGER"], ["c", "BOOLEAN"]>>, "INTEGER")
add_call_chain(<<e,D,c,b>>)
logical_negation
bool_value (false)
add_call_chain(<<D,D>>)
add_command("INTEGER", "a", <<["b", "c"], ["C", "BOOLEAN"], ["A", "D"], ["D", "INTEGER"], ["e", "c"], ["INTEGER", "INTEGER"], ["a", "BOOLEAN"], ["e", "C"]>>)
add_class(d)
int_value (21)
add_class(B)
numerical_negation
logical_negation
