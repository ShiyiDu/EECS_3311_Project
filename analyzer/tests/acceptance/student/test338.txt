bool_value (false)
modulo
int_value (21)
add_query("A", "D", <<["c", "D"], ["b", "A"], ["c", "A"]>>, "A")
add_call_chain(<<e,a,e,b>>)
numerical_negation
add_command("BOOLEAN", "e", <<["e", "A"]>>)
add_query("a", "A", <<["BOOLEAN", "INTEGER"], ["e", "a"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["B", "C"], ["C", "A"]>>, "D")
type_check
add_command("d", "C", <<["D", "BOOLEAN"], ["d", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["c", "a"], ["c", "BOOLEAN"]>>)
logical_negation
greater_than
add_query("A", "C", <<["b", "INTEGER"], ["INTEGER", "INTEGER"], ["C", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "e"], ["c", "BOOLEAN"], ["C", "e"], ["b", "BOOLEAN"]>>, "D")
add_call_chain(<<B,d,BOOLEAN,e,BOOLEAN,A,A,A,b>>)
bool_value (true)
add_call_chain(<<A,B,A,d>>)
add_call_chain(<<d,b,D,A,A,BOOLEAN>>)
int_value (30)
add_query("C", "A", <<["d", "INTEGER"], ["INTEGER", "BOOLEAN"], ["a", "a"], ["INTEGER", "INTEGER"], ["c", "BOOLEAN"], ["B", "C"], ["A", "B"]>>, "b")
generate_java_code
quotient
bool_value (true)
add_call_chain(<<b,C>>)
add_attribute("c", "A", "BOOLEAN")
bool_value (false)
numerical_negation
add_query("D", "c", <<["c", "c"], ["a", "B"], ["c", "BOOLEAN"]>>, "INTEGER")
add_command("C", "B", <<["A", "INTEGER"], ["BOOLEAN", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
conjunction
generate_java_code
type_check
logical_negation
int_value (39)
numerical_negation
add_query("A", "d", <<["C", "a"], ["B", "BOOLEAN"], ["d", "b"]>>, "D")
add_call_chain(<<A,d,d,BOOLEAN>>)
bool_value (true)
numerical_negation
add_class(a)
add_command("C", "a", <<["A", "B"], ["D", "INTEGER"]>>)
add_attribute("d", "c", "INTEGER")
bool_value (true)
add_call_chain(<<D,d,b,A,B,b,D,A,C>>)
bool_value (false)
int_value (41)
add_class(d)
generate_java_code
bool_value (true)
add_call_chain(<<a,B,b,D,b,C,BOOLEAN,c>>)
add_call_chain(<<A>>)
disjunction
add_call_chain(<<c,A,e,D,A,BOOLEAN>>)
add_attribute("D", "B", "BOOLEAN")
type_check
logical_negation
add_attribute("d", "e", "e")
generate_java_code
add_query("a", "INTEGER", <<["C", "BOOLEAN"], ["c", "INTEGER"], ["A", "INTEGER"], ["b", "C"], ["c", "INTEGER"], ["C", "INTEGER"]>>, "C")
add_command("B", "BOOLEAN", <<["D", "d"], ["a", "INTEGER"], ["c", "INTEGER"], ["A", "INTEGER"], ["b", "INTEGER"], ["B", "c"]>>)
logical_negation
add_query("e", "d", <<["B", "a"], ["c", "BOOLEAN"]>>, "B")
addition
add_call_chain(<<b,A,C,a,c,C,d,C,c>>)
add_command("b", "C", <<["C", "INTEGER"], ["c", "C"], ["A", "INTEGER"], ["C", "INTEGER"], ["INTEGER", "BOOLEAN"], ["e", "B"]>>)
add_call_chain(<<C>>)
less_than
conjunction
add_call_chain(<<D,D,B>>)
int_value (7)
add_query("C", "B", <<["C", "d"]>>, "e")
int_value (22)
logical_negation
less_than
add_query("b", "D", <<["b", "C"]>>, "D")
generate_java_code
add_call_chain(<<a,e,D>>)
add_call_chain(<<BOOLEAN,D,BOOLEAN,b>>)
type_check
int_value (22)
bool_value (true)
add_call_chain(<<A,D,C,INTEGER,B,INTEGER>>)
bool_value (true)
add_query("B", "BOOLEAN", <<["a", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["e", "INTEGER"], ["C", "INTEGER"]>>, "c")
add_attribute("B", "D", "BOOLEAN")
add_class(c)
bool_value (false)
logical_negation
add_call_chain(<<D,A,C,A,C,e,BOOLEAN,A,e>>)
disjunction
type_check
greater_than
add_attribute("d", "d", "INTEGER")
greater_than
multiplication
add_call_chain(<<e,b,b,b,B,B>>)
numerical_negation
add_call_chain(<<B,a>>)
add_class(e)
add_command("B", "INTEGER", <<["c", "INTEGER"], ["B", "c"], ["D", "BOOLEAN"], ["C", "e"], ["B", "B"], ["d", "B"], ["B", "C"], ["D", "INTEGER"], ["e", "BOOLEAN"]>>)
equals
bool_value (false)
add_command("b", "C", <<["B", "INTEGER"], ["a", "BOOLEAN"], ["a", "INTEGER"], ["INTEGER", "b"], ["B", "b"], ["B", "e"]>>)
add_attribute("D", "C", "INTEGER")
add_call_chain(<<d,d,b>>)
add_call_chain(<<D,C>>)
int_value (36)
generate_java_code
logical_negation
add_attribute("b", "D", "INTEGER")
greater_than
type_check
add_call_chain(<<b,C,C,B>>)
add_call_chain(<<a,b,a,INTEGER,c>>)
bool_value (true)
disjunction
add_call_chain(<<D,B>>)
add_call_chain(<<B,e,a,INTEGER,c,C,b>>)
less_than
logical_negation
add_call_chain(<<b,B,D,D,d,A,A>>)
greater_than
conjunction
conjunction
bool_value (true)
add_call_chain(<<D,INTEGER>>)
generate_java_code
equals
disjunction
type_check
add_call_chain(<<B,B>>)
add_call_chain(<<d,D,a,C>>)
bool_value (false)
add_class(a)
add_call_chain(<<b,C,INTEGER,D>>)
generate_java_code
add_command("a", "A", <<["e", "C"], ["d", "BOOLEAN"], ["b", "BOOLEAN"], ["INTEGER", "INTEGER"], ["C", "INTEGER"], ["b", "BOOLEAN"], ["B", "B"]>>)
add_call_chain(<<C,INTEGER,d,b,B,C,B,d,e>>)
modulo
quotient
add_call_chain(<<d>>)
type_check
add_call_chain(<<c,c,D,b>>)
numerical_negation
bool_value (true)
int_value (17)
numerical_negation
add_class(c)
add_command("D", "C", <<["C", "e"], ["D", "INTEGER"], ["d", "INTEGER"], ["d", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["d", "BOOLEAN"], ["BOOLEAN", "b"], ["INTEGER", "BOOLEAN"]>>)
add_query("b", "BOOLEAN", <<["C", "INTEGER"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["C", "e"], ["c", "e"], ["C", "b"], ["c", "b"]>>, "D")
type_check
add_call_chain(<<d,D,c,d,d,D,e>>)
generate_java_code
type_check
add_attribute("d", "A", "BOOLEAN")
add_command("D", "C", <<["C", "INTEGER"], ["C", "INTEGER"]>>)
logical_negation
modulo
add_call_chain(<<B,A,B,C,B,c,e,A,d>>)
add_class(d)
add_query("c", "d", <<["D", "INTEGER"], ["d", "C"], ["A", "BOOLEAN"]>>, "INTEGER")
add_command("C", "C", <<["C", "BOOLEAN"], ["c", "INTEGER"], ["c", "BOOLEAN"], ["b", "INTEGER"], ["b", "BOOLEAN"]>>)
add_query("C", "A", <<["e", "INTEGER"]>>, "B")
add_attribute("a", "C", "INTEGER")
logical_negation
add_command("A", "d", <<["d", "A"]>>)
add_call_chain(<<INTEGER,e,A,A,INTEGER,a>>)
conjunction
type_check
logical_negation
add_call_chain(<<c,D,A,C,BOOLEAN,a>>)
numerical_negation
int_value (24)
add_attribute("d", "d", "INTEGER")
add_call_chain(<<C,A>>)
less_than
add_attribute("A", "b", "INTEGER")
bool_value (true)
int_value (4)
disjunction
add_class(A)
add_call_chain(<<C,B>>)
add_call_chain(<<A,B,a,INTEGER,a,C>>)
type_check
conjunction
add_command("d", "D", <<["C", "INTEGER"], ["c", "c"], ["B", "d"], ["e", "BOOLEAN"], ["A", "C"], ["b", "INTEGER"], ["e", "INTEGER"], ["e", "A"]>>)
quotient
add_query("A", "D", <<["B", "a"], ["D", "INTEGER"]>>, "A")
add_class(e)
disjunction
add_query("A", "B", <<["C", "d"], ["C", "INTEGER"], ["e", "BOOLEAN"]>>, "e")
greater_than
type_check
add_query("A", "c", <<["B", "INTEGER"], ["B", "BOOLEAN"]>>, "a")
add_command("e", "D", <<["e", "a"], ["INTEGER", "INTEGER"], ["d", "INTEGER"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "BOOLEAN"]>>)
numerical_negation
type_check
add_command("INTEGER", "C", <<["c", "b"], ["A", "BOOLEAN"], ["d", "INTEGER"], ["c", "BOOLEAN"], ["D", "INTEGER"]>>)
add_class(B)
add_query("c", "BOOLEAN", <<["A", "INTEGER"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["d", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "D"], ["e", "BOOLEAN"]>>, "A")
less_than
type_check
generate_java_code
add_attribute("e", "D", "B")
int_value (38)
bool_value (false)
add_call_chain(<<e,e,C,BOOLEAN,BOOLEAN,A,C,e,D>>)
type_check
add_call_chain(<<D,d,d,INTEGER,e,c,e,D>>)
bool_value (false)
generate_java_code
type_check
add_command("d", "a", <<["B", "INTEGER"]>>)
add_call_chain(<<b,c>>)
add_call_chain(<<BOOLEAN,e,BOOLEAN,e,C,D>>)
add_query("A", "C", <<["B", "BOOLEAN"], ["INTEGER", "INTEGER"], ["c", "BOOLEAN"], ["c", "c"], ["INTEGER", "a"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["INTEGER", "BOOLEAN"]>>, "b")
add_command("B", "C", <<["INTEGER", "BOOLEAN"], ["b", "INTEGER"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "INTEGER"], ["C", "BOOLEAN"]>>)
add_command("b", "D", <<["b", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "INTEGER"], ["b", "BOOLEAN"], ["C", "A"], ["B", "d"], ["A", "BOOLEAN"]>>)
add_call_chain(<<D,D,D,INTEGER,A,B>>)
equals
add_command("c", "INTEGER", <<["b", "INTEGER"], ["b", "A"], ["B", "INTEGER"], ["a", "INTEGER"], ["c", "INTEGER"], ["c", "INTEGER"]>>)
greater_than
add_class(INTEGER)
add_command("B", "BOOLEAN", <<["d", "a"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "B"], ["a", "INTEGER"], ["INTEGER", "B"], ["c", "B"], ["d", "BOOLEAN"]>>)
add_call_chain(<<a,c,A,A>>)
add_query("B", "b", <<["INTEGER", "BOOLEAN"], ["d", "INTEGER"], ["C", "BOOLEAN"], ["c", "INTEGER"], ["e", "INTEGER"], ["d", "c"], ["B", "C"]>>, "A")
add_call_chain(<<D,A>>)
subtraction
add_class(D)
add_command("A", "B", <<["a", "B"], ["INTEGER", "BOOLEAN"], ["B", "BOOLEAN"], ["INTEGER", "INTEGER"]>>)
add_call_chain(<<BOOLEAN,e,D,c,A,C,b,B>>)
add_command("d", "a", <<["e", "BOOLEAN"], ["e", "INTEGER"], ["d", "INTEGER"], ["INTEGER", "INTEGER"], ["c", "d"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["D", "BOOLEAN"]>>)
modulo
add_attribute("b", "e", "INTEGER")
quotient
int_value (19)
