disjunction
add_attribute("a", "d", "d")
add_command("B", "B", <<["c", "B"], ["d", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "BOOLEAN"], ["a", "INTEGER"], ["e", "a"], ["d", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "BOOLEAN"]>>)
add_command("B", "a", <<["A", "INTEGER"], ["D", "INTEGER"]>>)
int_value (13)
int_value (20)
numerical_negation
bool_value (true)
conjunction
int_value (43)
bool_value (false)
generate_java_code
logical_negation
int_value (39)
add_command("D", "c", <<["e", "D"]>>)
add_query("C", "B", <<["B", "INTEGER"], ["D", "BOOLEAN"]>>, "e")
logical_negation
add_class(A)
int_value (17)
add_query("B", "e", <<["d", "INTEGER"], ["d", "INTEGER"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["C", "C"], ["c", "c"]>>, "C")
conjunction
add_command("B", "b", <<["C", "BOOLEAN"]>>)
add_query("b", "e", <<["c", "BOOLEAN"], ["B", "d"], ["B", "a"]>>, "d")
add_call_chain(<<d,d,A,D,INTEGER>>)
conjunction
int_value (7)
less_than
int_value (18)
subtraction
add_call_chain(<<a,a>>)
type_check
type_check
logical_negation
add_call_chain(<<C,B,BOOLEAN,d>>)
int_value (26)
bool_value (false)
add_attribute("A", "b", "INTEGER")
logical_negation
generate_java_code
disjunction
add_class(B)
conjunction
type_check
conjunction
add_class(A)
add_call_chain(<<B,BOOLEAN,A,c,d,d,A>>)
modulo
add_call_chain(<<d,b>>)
add_class(b)
add_command("e", "d", <<["D", "A"], ["e", "INTEGER"], ["b", "INTEGER"], ["BOOLEAN", "INTEGER"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["INTEGER", "B"]>>)
add_call_chain(<<D,B,d,d,b,C,c>>)
add_query("B", "a", <<["e", "a"], ["e", "B"]>>, "B")
bool_value (false)
int_value (31)
multiplication
add_call_chain(<<D,B,B,B,e,A,d>>)
int_value (25)
quotient
int_value (38)
disjunction
numerical_negation
add_call_chain(<<BOOLEAN,BOOLEAN,B,d,D,C,A,D,D>>)
add_command("e", "D", <<["B", "D"], ["b", "D"]>>)
subtraction
add_attribute("D", "INTEGER", "INTEGER")
numerical_negation
type_check
add_query("d", "A", <<["C", "INTEGER"], ["D", "C"], ["b", "BOOLEAN"], ["e", "INTEGER"], ["D", "BOOLEAN"], ["e", "a"]>>, "D")
add_query("C", "a", <<["INTEGER", "BOOLEAN"], ["b", "b"], ["e", "B"], ["A", "e"], ["a", "BOOLEAN"], ["e", "D"], ["B", "BOOLEAN"], ["a", "BOOLEAN"]>>, "B")
add_class(INTEGER)
bool_value (true)
add_call_chain(<<e,B,C,B,b,D>>)
int_value (20)
modulo
subtraction
disjunction
int_value (29)
int_value (37)
greater_than
add_query("A", "B", <<["C", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "B"], ["b", "d"], ["B", "INTEGER"], ["A", "d"], ["c", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "INTEGER"]>>, "A")
less_than
add_call_chain(<<INTEGER,C,d,B>>)
bool_value (true)
logical_negation
add_query("B", "D", <<["b", "BOOLEAN"], ["D", "BOOLEAN"]>>, "A")
add_call_chain(<<e,a,b,e>>)
add_class(d)
add_command("b", "b", <<["B", "BOOLEAN"], ["e", "d"], ["A", "INTEGER"], ["b", "BOOLEAN"], ["b", "e"], ["d", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "B"]>>)
add_command("BOOLEAN", "A", <<["e", "INTEGER"], ["B", "c"], ["B", "BOOLEAN"], ["e", "d"], ["c", "INTEGER"], ["c", "BOOLEAN"], ["c", "INTEGER"]>>)
int_value (20)
add_query("e", "A", <<["C", "a"], ["c", "BOOLEAN"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["b", "D"], ["d", "INTEGER"], ["b", "C"], ["C", "d"], ["e", "A"]>>, "c")
disjunction
add_command("B", "B", <<["e", "C"], ["D", "A"], ["d", "BOOLEAN"], ["e", "INTEGER"], ["B", "INTEGER"], ["c", "c"], ["b", "BOOLEAN"], ["B", "D"]>>)
add_attribute("b", "d", "INTEGER")
add_command("b", "A", <<["C", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "INTEGER"], ["b", "BOOLEAN"], ["c", "BOOLEAN"], ["d", "D"], ["C", "INTEGER"], ["a", "INTEGER"]>>)
disjunction
numerical_negation
add_call_chain(<<d,a,A,a,INTEGER,A,C>>)
add_query("D", "INTEGER", <<["c", "B"], ["C", "e"], ["c", "B"], ["d", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["b", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "d"], ["A", "INTEGER"]>>, "c")
add_query("C", "B", <<["D", "INTEGER"], ["e", "INTEGER"], ["c", "A"], ["D", "INTEGER"]>>, "d")
add_query("b", "B", <<["INTEGER", "INTEGER"], ["c", "D"], ["INTEGER", "INTEGER"]>>, "BOOLEAN")
add_call_chain(<<C>>)
add_command("e", "b", <<["d", "INTEGER"], ["INTEGER", "INTEGER"], ["d", "BOOLEAN"], ["b", "INTEGER"], ["A", "BOOLEAN"], ["b", "BOOLEAN"]>>)
int_value (11)
logical_negation
bool_value (false)
add_attribute("a", "c", "INTEGER")
add_attribute("C", "C", "INTEGER")
generate_java_code
add_attribute("B", "A", "INTEGER")
add_call_chain(<<A,C,a,C,e,D,B,a>>)
logical_negation
add_command("C", "A", <<["INTEGER", "b"], ["BOOLEAN", "b"]>>)
type_check
disjunction
conjunction
add_call_chain(<<C>>)
type_check
bool_value (false)
add_query("b", "d", <<["C", "C"], ["INTEGER", "b"], ["a", "b"], ["A", "BOOLEAN"], ["a", "BOOLEAN"]>>, "a")
type_check
add_query("b", "d", <<["a", "INTEGER"]>>, "c")
add_call_chain(<<b,INTEGER,A,d,A>>)
generate_java_code
add_call_chain(<<C>>)
add_class(e)
less_than
add_class(D)
greater_than
bool_value (true)
type_check
add_call_chain(<<e,BOOLEAN,d,d,b,A,INTEGER,a>>)
add_attribute("D", "d", "A")
add_call_chain(<<B,a>>)
add_command("e", "D", <<["C", "A"]>>)
add_call_chain(<<A,C,d,B,C,D,b>>)
add_call_chain(<<BOOLEAN,A,BOOLEAN,B,B>>)
logical_negation
add_command("A", "B", <<["INTEGER", "D"], ["C", "b"]>>)
disjunction
add_command("B", "BOOLEAN", <<["a", "INTEGER"], ["D", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["c", "INTEGER"], ["d", "c"], ["INTEGER", "b"], ["e", "INTEGER"]>>)
quotient
generate_java_code
add_query("BOOLEAN", "B", <<["C", "a"], ["e", "c"], ["d", "BOOLEAN"], ["a", "INTEGER"], ["C", "BOOLEAN"], ["B", "e"], ["b", "C"], ["a", "A"], ["BOOLEAN", "INTEGER"]>>, "e")
less_than
add_attribute("c", "BOOLEAN", "INTEGER")
add_command("e", "d", <<["b", "e"]>>)
add_call_chain(<<BOOLEAN,a,c,C,e,e,D>>)
type_check
add_call_chain(<<C,BOOLEAN,b,c>>)
add_class(D)
add_query("a", "C", <<["INTEGER", "BOOLEAN"], ["e", "BOOLEAN"]>>, "B")
add_class(INTEGER)
add_attribute("B", "c", "a")
add_call_chain(<<D,BOOLEAN,a,a,D>>)
add_attribute("A", "e", "e")
add_attribute("B", "a", "C")
add_call_chain(<<a,BOOLEAN,D,e,e,B,e,e>>)
generate_java_code
add_query("b", "D", <<["B", "A"], ["d", "d"]>>, "A")
type_check
logical_negation
add_call_chain(<<b,BOOLEAN,d,B,c,BOOLEAN,INTEGER,B,D>>)
add_command("d", "e", <<["C", "B"], ["b", "BOOLEAN"], ["e", "BOOLEAN"]>>)
type_check
bool_value (true)
numerical_negation
bool_value (false)
less_than
bool_value (true)
add_query("C", "C", <<["d", "INTEGER"], ["B", "INTEGER"], ["a", "INTEGER"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["B", "A"], ["C", "BOOLEAN"], ["D", "INTEGER"]>>, "b")
type_check
type_check
equals
numerical_negation
add_call_chain(<<C,A,A,C,d>>)
type_check
conjunction
bool_value (false)
bool_value (true)
less_than
add_call_chain(<<a>>)
logical_negation
add_attribute("b", "A", "INTEGER")
generate_java_code
equals
equals
bool_value (false)
equals
add_call_chain(<<a,B,B,C,BOOLEAN,e>>)
add_command("D", "d", <<["A", "e"], ["D", "d"], ["e", "C"], ["e", "INTEGER"], ["D", "D"], ["D", "b"], ["D", "BOOLEAN"], ["a", "BOOLEAN"]>>)
int_value (10)
type_check
add_call_chain(<<e>>)
logical_negation
add_query("D", "b", <<["c", "INTEGER"]>>, "B")
bool_value (true)
type_check
int_value (39)
int_value (24)
add_command("C", "a", <<["D", "b"], ["d", "e"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["c", "INTEGER"]>>)
add_class(INTEGER)
add_query("C", "C", <<["C", "B"], ["A", "INTEGER"], ["b", "BOOLEAN"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["C", "A"], ["a", "INTEGER"]>>, "c")
add_query("b", "d", <<["B", "INTEGER"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["d", "BOOLEAN"], ["a", "A"], ["BOOLEAN", "INTEGER"]>>, "d")
logical_negation
add_attribute("C", "D", "INTEGER")
bool_value (false)
numerical_negation
int_value (31)
quotient
quotient
generate_java_code
add_call_chain(<<A,C>>)
add_call_chain(<<D,C,d,BOOLEAN,C>>)
logical_negation
