conjunction
bool_value (true)
add_call_chain(<<B,A,c,C,INTEGER>>)
add_attribute("D", "d", "e")
disjunction
add_command("d", "D", <<["B", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["d", "b"], ["INTEGER", "C"], ["d", "A"]>>)
add_call_chain(<<d,d,B,b>>)
add_attribute("C", "C", "a")
add_attribute("e", "C", "BOOLEAN")
int_value (15)
add_call_chain(<<BOOLEAN,e>>)
int_value (43)
logical_negation
greater_than
quotient
add_call_chain(<<C,d,D,INTEGER,A,INTEGER,c>>)
type_check
add_command("C", "c", <<["a", "INTEGER"], ["a", "BOOLEAN"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "INTEGER"]>>)
add_class(a)
int_value (2)
add_attribute("BOOLEAN", "C", "B")
int_value (18)
int_value (4)
numerical_negation
logical_negation
bool_value (false)
int_value (7)
add_attribute("C", "e", "BOOLEAN")
disjunction
add_query("D", "b", <<["D", "BOOLEAN"], ["d", "INTEGER"], ["e", "A"], ["B", "d"], ["D", "BOOLEAN"]>>, "a")
add_attribute("b", "D", "b")
numerical_negation
add_attribute("c", "a", "BOOLEAN")
conjunction
add_class(d)
add_call_chain(<<A,C,A,A>>)
add_query("A", "b", <<["A", "a"], ["D", "BOOLEAN"]>>, "e")
add_attribute("b", "D", "B")
int_value (26)
add_call_chain(<<C,c,BOOLEAN,B,A>>)
add_call_chain(<<C,D,B,C,D,c,A,INTEGER,A>>)
multiplication
greater_than
logical_negation
add_call_chain(<<B,c,D,BOOLEAN,e,a,B>>)
add_call_chain(<<b,d,A,C,d,d,c>>)
numerical_negation
generate_java_code
add_call_chain(<<C,b,C,d>>)
add_attribute("C", "a", "BOOLEAN")
add_call_chain(<<INTEGER,A,b,d,A,B>>)
add_call_chain(<<INTEGER,A>>)
add_query("c", "c", <<["c", "BOOLEAN"], ["b", "BOOLEAN"], ["e", "e"], ["c", "INTEGER"], ["B", "c"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["C", "BOOLEAN"]>>, "D")
add_attribute("A", "INTEGER", "C")
disjunction
int_value (20)
add_call_chain(<<D,A,d,INTEGER,C,B,C>>)
equals
add_query("A", "B", <<["C", "C"], ["C", "INTEGER"], ["d", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["a", "BOOLEAN"]>>, "e")
subtraction
add_command("A", "A", <<["e", "BOOLEAN"], ["b", "A"], ["B", "INTEGER"], ["INTEGER", "C"], ["C", "A"], ["e", "a"], ["D", "a"]>>)
add_call_chain(<<b,A,B,d>>)
subtraction
type_check
numerical_negation
int_value (20)
modulo
add_attribute("C", "e", "C")
add_command("INTEGER", "C", <<["e", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["c", "d"], ["a", "D"], ["d", "BOOLEAN"], ["d", "BOOLEAN"]>>)
add_query("d", "B", <<["INTEGER", "BOOLEAN"], ["a", "INTEGER"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "b"], ["B", "B"], ["e", "D"]>>, "b")
add_class(B)
add_call_chain(<<A,D,BOOLEAN,BOOLEAN,C>>)
int_value (44)
logical_negation
add_query("D", "D", <<["a", "BOOLEAN"]>>, "D")
add_call_chain(<<D,C,b,B,A,D,b,a,B>>)
add_query("e", "C", <<["e", "BOOLEAN"], ["a", "BOOLEAN"], ["INTEGER", "INTEGER"], ["B", "BOOLEAN"], ["A", "b"]>>, "B")
add_attribute("a", "c", "INTEGER")
type_check
add_call_chain(<<e>>)
generate_java_code
type_check
add_query("C", "D", <<["c", "D"], ["C", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["D", "D"], ["c", "BOOLEAN"]>>, "C")
add_attribute("A", "D", "INTEGER")
add_class(B)
equals
add_command("B", "B", <<["d", "INTEGER"], ["a", "BOOLEAN"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["C", "b"], ["A", "B"], ["b", "e"], ["d", "BOOLEAN"], ["C", "INTEGER"]>>)
conjunction
type_check
add_class(B)
generate_java_code
add_attribute("A", "c", "INTEGER")
less_than
add_command("A", "D", <<["d", "BOOLEAN"], ["a", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["A", "b"]>>)
generate_java_code
add_query("B", "d", <<["A", "d"], ["B", "A"], ["INTEGER", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["e", "INTEGER"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["A", "INTEGER"]>>, "C")
add_command("a", "b", <<["d", "INTEGER"]>>)
add_command("BOOLEAN", "B", <<["BOOLEAN", "INTEGER"], ["BOOLEAN", "C"], ["D", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["A", "INTEGER"], ["a", "BOOLEAN"], ["B", "BOOLEAN"]>>)
disjunction
int_value (43)
add_call_chain(<<b,A>>)
equals
add_command("a", "D", <<["c", "INTEGER"], ["a", "INTEGER"], ["b", "BOOLEAN"]>>)
generate_java_code
add_attribute("e", "a", "BOOLEAN")
type_check
generate_java_code
add_query("c", "C", <<["A", "BOOLEAN"], ["C", "INTEGER"], ["b", "A"], ["C", "INTEGER"], ["A", "B"], ["C", "INTEGER"], ["b", "BOOLEAN"]>>, "d")
add_call_chain(<<D,e,C,b,a,e,d>>)
add_call_chain(<<B,A,a,c,a,D,c>>)
logical_negation
generate_java_code
add_call_chain(<<D>>)
generate_java_code
int_value (38)
add_attribute("d", "C", "INTEGER")
add_call_chain(<<e,BOOLEAN,c,C,c,A,D,A>>)
logical_negation
numerical_negation
add_call_chain(<<D,b,c,e,A,A,A,b>>)
logical_negation
add_command("e", "D", <<["C", "BOOLEAN"], ["b", "C"], ["c", "INTEGER"], ["a", "INTEGER"], ["A", "c"], ["C", "BOOLEAN"], ["A", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["C", "INTEGER"]>>)
logical_negation
numerical_negation
add_query("B", "b", <<["a", "INTEGER"], ["b", "c"], ["INTEGER", "a"], ["C", "INTEGER"]>>, "a")
add_class(d)
numerical_negation
add_command("e", "d", <<["b", "BOOLEAN"], ["C", "c"], ["A", "INTEGER"], ["c", "INTEGER"], ["B", "B"], ["B", "C"]>>)
add_call_chain(<<BOOLEAN,d,e,BOOLEAN,B,b,a,c>>)
add_call_chain(<<BOOLEAN,B,b,A,INTEGER,D>>)
generate_java_code
less_than
add_attribute("b", "e", "B")
add_query("d", "b", <<["C", "INTEGER"], ["b", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["A", "INTEGER"], ["A", "INTEGER"]>>, "b")
less_than
add_class(d)
add_call_chain(<<d,A,C,a,C,d,BOOLEAN,BOOLEAN>>)
greater_than
int_value (29)
add_attribute("BOOLEAN", "B", "b")
add_query("a", "c", <<["A", "INTEGER"], ["C", "A"], ["A", "INTEGER"], ["d", "D"], ["a", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["A", "C"]>>, "D")
add_query("D", "e", <<["b", "c"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["D", "d"], ["A", "B"], ["A", "INTEGER"], ["e", "C"], ["D", "BOOLEAN"], ["b", "INTEGER"]>>, "B")
logical_negation
addition
bool_value (true)
logical_negation
int_value (2)
numerical_negation
addition
add_call_chain(<<INTEGER,BOOLEAN,D,e,C,INTEGER,B>>)
equals
bool_value (true)
add_attribute("C", "D", "BOOLEAN")
bool_value (true)
add_attribute("B", "D", "b")
type_check
bool_value (true)
numerical_negation
add_command("d", "D", <<["D", "INTEGER"], ["B", "INTEGER"], ["C", "e"], ["D", "BOOLEAN"], ["D", "BOOLEAN"], ["INTEGER", "INTEGER"], ["A", "INTEGER"], ["D", "D"], ["B", "BOOLEAN"]>>)
generate_java_code
add_command("A", "d", <<["b", "INTEGER"]>>)
add_attribute("e", "b", "INTEGER")
logical_negation
add_command("c", "A", <<["c", "INTEGER"], ["BOOLEAN", "C"], ["b", "INTEGER"], ["B", "INTEGER"], ["D", "B"]>>)
add_query("B", "B", <<["C", "INTEGER"], ["B", "INTEGER"], ["b", "BOOLEAN"], ["B", "b"], ["C", "BOOLEAN"]>>, "a")
add_query("A", "BOOLEAN", <<["d", "BOOLEAN"]>>, "e")
subtraction
addition
add_class(D)
bool_value (false)
generate_java_code
add_call_chain(<<b,D,a>>)
int_value (36)
add_call_chain(<<D,INTEGER,d,d,B,C,a>>)
bool_value (true)
add_query("C", "c", <<["a", "INTEGER"]>>, "b")
modulo
generate_java_code
add_command("c", "A", <<["e", "INTEGER"], ["b", "D"], ["e", "C"], ["a", "BOOLEAN"], ["b", "INTEGER"], ["d", "INTEGER"], ["A", "INTEGER"], ["a", "BOOLEAN"], ["A", "BOOLEAN"]>>)
add_command("B", "e", <<["C", "e"], ["a", "BOOLEAN"], ["b", "INTEGER"], ["C", "INTEGER"], ["b", "INTEGER"], ["D", "BOOLEAN"], ["d", "c"], ["a", "BOOLEAN"]>>)
add_call_chain(<<b,B,d,D,C,C,D,c>>)
add_attribute("b", "A", "b")
add_call_chain(<<c,a,A,A,d,c,d>>)
add_call_chain(<<e,b,a,c>>)
bool_value (false)
add_command("e", "a", <<["D", "B"], ["C", "B"], ["e", "INTEGER"], ["A", "C"], ["A", "INTEGER"], ["A", "B"], ["b", "INTEGER"], ["C", "INTEGER"]>>)
disjunction
greater_than
bool_value (true)
bool_value (true)
add_command("e", "e", <<["e", "C"], ["a", "INTEGER"], ["BOOLEAN", "D"], ["b", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["a", "INTEGER"]>>)
logical_negation
logical_negation
numerical_negation
add_query("A", "B", <<["C", "BOOLEAN"], ["a", "C"], ["c", "INTEGER"], ["c", "INTEGER"], ["a", "INTEGER"]>>, "BOOLEAN")
add_attribute("a", "INTEGER", "INTEGER")
add_query("D", "e", <<["D", "INTEGER"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["c", "D"], ["C", "BOOLEAN"], ["D", "BOOLEAN"]>>, "b")
add_call_chain(<<a,d,A,c,e,d,d>>)
add_call_chain(<<e,D,A,BOOLEAN>>)
add_command("B", "e", <<["e", "INTEGER"], ["A", "INTEGER"], ["b", "a"], ["INTEGER", "INTEGER"]>>)
add_class(c)
type_check
bool_value (false)
int_value (13)
type_check
add_query("b", "A", <<["e", "INTEGER"], ["e", "BOOLEAN"]>>, "BOOLEAN")
add_attribute("A", "a", "BOOLEAN")
numerical_negation
add_query("c", "e", <<["d", "D"], ["D", "B"], ["d", "INTEGER"], ["B", "C"]>>, "D")
logical_negation
bool_value (false)
add_class(A)
greater_than
add_attribute("BOOLEAN", "INTEGER", "INTEGER")
generate_java_code
bool_value (false)
add_command("C", "D", <<["D", "e"], ["B", "b"], ["C", "C"]>>)
int_value (42)
int_value (42)
logical_negation
add_command("d", "A", <<["e", "INTEGER"], ["c", "e"], ["d", "BOOLEAN"], ["a", "e"], ["b", "INTEGER"]>>)
logical_negation
add_call_chain(<<a,C,A,a,C>>)
add_attribute("B", "C", "BOOLEAN")
logical_negation
int_value (37)
numerical_negation
