add_command("INTEGER", "D", <<["b", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "BOOLEAN"]>>)
add_class(d)
generate_java_code
addition
generate_java_code
int_value (26)
numerical_negation
add_call_chain(<<D,a,c,b,c,BOOLEAN,a,d,b>>)
equals
add_call_chain(<<c,BOOLEAN,A,BOOLEAN,INTEGER,b>>)
add_command("BOOLEAN", "a", <<["e", "INTEGER"], ["d", "a"], ["A", "INTEGER"], ["a", "INTEGER"], ["b", "INTEGER"], ["D", "BOOLEAN"]>>)
numerical_negation
add_class(C)
add_call_chain(<<C,e,d,d,a,D>>)
add_command("d", "b", <<["a", "e"], ["C", "BOOLEAN"], ["A", "b"]>>)
add_call_chain(<<C,c,B,d,D,INTEGER,c>>)
add_query("D", "C", <<["B", "INTEGER"], ["INTEGER", "INTEGER"], ["A", "a"], ["b", "C"], ["c", "b"], ["b", "c"], ["a", "INTEGER"], ["a", "BOOLEAN"]>>, "b")
int_value (10)
add_command("c", "B", <<["B", "d"], ["BOOLEAN", "BOOLEAN"], ["c", "INTEGER"], ["a", "BOOLEAN"], ["BOOLEAN", "b"], ["D", "INTEGER"], ["b", "INTEGER"], ["c", "INTEGER"]>>)
add_query("BOOLEAN", "a", <<["e", "INTEGER"], ["D", "a"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["e", "INTEGER"], ["C", "INTEGER"], ["e", "INTEGER"], ["d", "BOOLEAN"]>>, "c")
less_than
bool_value (true)
add_command("e", "D", <<["INTEGER", "BOOLEAN"], ["b", "INTEGER"], ["A", "INTEGER"], ["a", "INTEGER"], ["e", "INTEGER"], ["D", "BOOLEAN"], ["e", "A"], ["A", "b"]>>)
bool_value (false)
int_value (11)
add_query("a", "a", <<["b", "BOOLEAN"]>>, "a")
bool_value (false)
add_query("a", "d", <<["b", "e"], ["B", "A"], ["b", "INTEGER"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["c", "c"], ["d", "B"]>>, "c")
add_command("C", "d", <<["d", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "BOOLEAN"], ["d", "D"], ["b", "BOOLEAN"]>>)
add_class(B)
logical_negation
numerical_negation
subtraction
add_command("c", "C", <<["D", "A"], ["B", "BOOLEAN"], ["b", "D"], ["B", "INTEGER"]>>)
add_query("C", "INTEGER", <<["A", "INTEGER"], ["e", "INTEGER"], ["d", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["e", "BOOLEAN"], ["a", "BOOLEAN"]>>, "a")
add_class(a)
type_check
add_attribute("d", "A", "BOOLEAN")
int_value (20)
add_call_chain(<<D,c,b,e,INTEGER,B,e,e,d>>)
logical_negation
add_query("C", "a", <<["e", "A"], ["C", "c"], ["c", "INTEGER"], ["BOOLEAN", "d"]>>, "e")
add_query("D", "A", <<["A", "A"], ["e", "b"]>>, "INTEGER")
conjunction
add_class(B)
equals
add_call_chain(<<B,A,c,A,A,a,D>>)
bool_value (true)
add_attribute("INTEGER", "C", "c")
logical_negation
int_value (20)
type_check
add_query("a", "b", <<["BOOLEAN", "C"], ["d", "a"]>>, "c")
type_check
int_value (26)
add_call_chain(<<B,b>>)
add_call_chain(<<D,e,A,a,B,e,d,d>>)
modulo
add_command("B", "BOOLEAN", <<["d", "INTEGER"], ["B", "BOOLEAN"], ["INTEGER", "INTEGER"], ["B", "BOOLEAN"], ["b", "e"], ["B", "BOOLEAN"], ["C", "INTEGER"], ["a", "INTEGER"]>>)
type_check
bool_value (true)
add_command("A", "d", <<["B", "B"], ["a", "BOOLEAN"], ["D", "INTEGER"], ["C", "INTEGER"], ["b", "INTEGER"]>>)
equals
logical_negation
add_query("C", "D", <<["d", "INTEGER"], ["B", "BOOLEAN"], ["C", "D"], ["C", "INTEGER"], ["B", "INTEGER"], ["a", "BOOLEAN"], ["d", "INTEGER"]>>, "C")
generate_java_code
add_query("C", "BOOLEAN", <<["A", "BOOLEAN"], ["d", "D"], ["D", "d"]>>, "b")
add_command("D", "A", <<["A", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["C", "A"], ["c", "C"], ["c", "INTEGER"], ["e", "BOOLEAN"]>>)
add_query("a", "b", <<["a", "b"], ["A", "BOOLEAN"], ["b", "C"], ["B", "e"]>>, "d")
generate_java_code
addition
int_value (6)
add_class(e)
generate_java_code
int_value (24)
add_call_chain(<<INTEGER,a>>)
logical_negation
add_call_chain(<<B,B,B>>)
generate_java_code
add_attribute("C", "BOOLEAN", "c")
add_attribute("a", "BOOLEAN", "INTEGER")
bool_value (true)
bool_value (true)
quotient
greater_than
add_query("C", "C", <<["d", "INTEGER"], ["INTEGER", "BOOLEAN"], ["d", "INTEGER"], ["a", "a"], ["A", "BOOLEAN"], ["C", "BOOLEAN"]>>, "B")
add_command("A", "B", <<["A", "INTEGER"], ["B", "d"], ["b", "c"], ["A", "BOOLEAN"]>>)
greater_than
add_call_chain(<<D,D,D,b,e,D,e,C>>)
int_value (17)
logical_negation
logical_negation
numerical_negation
bool_value (true)
logical_negation
add_call_chain(<<e,C,B,b>>)
add_call_chain(<<d,A,B,B,d,c,e,b>>)
logical_negation
add_call_chain(<<INTEGER,e>>)
add_call_chain(<<INTEGER,b,A>>)
bool_value (false)
add_attribute("A", "B", "INTEGER")
add_command("A", "C", <<["BOOLEAN", "C"], ["INTEGER", "INTEGER"], ["B", "BOOLEAN"], ["b", "BOOLEAN"], ["INTEGER", "C"]>>)
add_attribute("e", "A", "D")
type_check
add_query("B", "b", <<["C", "INTEGER"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["B", "B"], ["D", "BOOLEAN"], ["a", "D"]>>, "C")
add_attribute("INTEGER", "A", "d")
int_value (4)
bool_value (false)
add_call_chain(<<e,B,c,d,a,A,C,a,c>>)
generate_java_code
add_class(D)
add_class(e)
add_query("D", "c", <<["a", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "b"]>>, "C")
numerical_negation
disjunction
int_value (17)
int_value (10)
logical_negation
bool_value (true)
add_call_chain(<<A,C,C,a,D,c>>)
logical_negation
generate_java_code
add_attribute("a", "a", "BOOLEAN")
disjunction
add_command("D", "b", <<["B", "INTEGER"], ["A", "b"], ["B", "BOOLEAN"], ["c", "BOOLEAN"]>>)
add_command("D", "D", <<["C", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "BOOLEAN"]>>)
add_call_chain(<<b,b,d,c,INTEGER,c,C,A,A>>)
add_query("d", "b", <<["C", "BOOLEAN"], ["b", "C"], ["d", "BOOLEAN"], ["BOOLEAN", "e"]>>, "C")
generate_java_code
disjunction
bool_value (true)
add_attribute("D", "D", "C")
type_check
int_value (23)
add_query("BOOLEAN", "B", <<["INTEGER", "b"], ["B", "INTEGER"], ["e", "INTEGER"], ["c", "BOOLEAN"], ["B", "INTEGER"], ["D", "INTEGER"]>>, "BOOLEAN")
add_command("a", "B", <<["B", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["a", "C"], ["a", "INTEGER"]>>)
generate_java_code
numerical_negation
add_query("D", "INTEGER", <<["b", "D"], ["e", "INTEGER"]>>, "e")
bool_value (false)
add_query("D", "e", <<["c", "A"], ["C", "a"], ["C", "BOOLEAN"], ["e", "INTEGER"], ["B", "a"], ["d", "B"], ["c", "a"]>>, "e")
equals
equals
add_call_chain(<<D,b>>)
add_call_chain(<<C,B,INTEGER,c,c>>)
add_command("A", "C", <<["A", "BOOLEAN"], ["e", "INTEGER"], ["D", "INTEGER"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["a", "b"], ["D", "BOOLEAN"]>>)
add_attribute("e", "B", "BOOLEAN")
int_value (41)
conjunction
add_command("D", "B", <<["BOOLEAN", "BOOLEAN"]>>)
add_call_chain(<<c,B,A,BOOLEAN,D,INTEGER,A>>)
add_class(c)
add_attribute("B", "c", "BOOLEAN")
logical_negation
numerical_negation
generate_java_code
add_call_chain(<<BOOLEAN,d,A,d>>)
multiplication
add_command("c", "C", <<["a", "d"], ["BOOLEAN", "INTEGER"], ["c", "INTEGER"], ["a", "BOOLEAN"], ["D", "A"], ["b", "BOOLEAN"]>>)
int_value (4)
add_class(C)
modulo
numerical_negation
numerical_negation
add_class(INTEGER)
add_query("A", "A", <<["c", "B"], ["a", "INTEGER"], ["a", "A"], ["d", "INTEGER"], ["A", "INTEGER"]>>, "d")
add_call_chain(<<D,C,C,e,e,B>>)
logical_negation
add_call_chain(<<C,B,d,B,D,C,B,a>>)
add_command("b", "C", <<["B", "INTEGER"], ["A", "INTEGER"]>>)
add_call_chain(<<D,a,b,d,INTEGER,D,a,B,A>>)
add_command("e", "B", <<["e", "INTEGER"], ["A", "BOOLEAN"], ["d", "e"]>>)
generate_java_code
bool_value (true)
add_command("B", "c", <<["A", "B"], ["INTEGER", "INTEGER"], ["C", "BOOLEAN"], ["D", "e"], ["A", "BOOLEAN"]>>)
bool_value (false)
int_value (36)
add_attribute("a", "A", "INTEGER")
int_value (36)
conjunction
bool_value (false)
add_class(C)
add_command("e", "B", <<["d", "BOOLEAN"], ["d", "BOOLEAN"]>>)
add_call_chain(<<B,BOOLEAN,c,B>>)
add_call_chain(<<C,d,D,a,d>>)
add_query("B", "C", <<["D", "d"], ["INTEGER", "BOOLEAN"], ["c", "A"], ["c", "BOOLEAN"], ["b", "BOOLEAN"], ["d", "INTEGER"]>>, "a")
int_value (46)
bool_value (false)
add_query("b", "b", <<["D", "a"], ["a", "INTEGER"], ["A", "BOOLEAN"], ["C", "e"], ["C", "INTEGER"], ["INTEGER", "BOOLEAN"], ["d", "B"]>>, "A")
equals
add_call_chain(<<a,A,A,B,B,C>>)
add_call_chain(<<e,e,e,e,B,A,d>>)
less_than
add_query("C", "BOOLEAN", <<["A", "C"], ["e", "BOOLEAN"], ["B", "b"], ["B", "c"], ["BOOLEAN", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "BOOLEAN"]>>, "c")
conjunction
add_attribute("b", "D", "INTEGER")
add_class(a)
add_class(BOOLEAN)
add_query("c", "a", <<["A", "INTEGER"], ["C", "INTEGER"], ["D", "D"]>>, "a")
equals
add_attribute("c", "c", "BOOLEAN")
conjunction
int_value (4)
bool_value (false)
bool_value (true)
bool_value (true)
add_command("d", "B", <<["INTEGER", "INTEGER"], ["a", "BOOLEAN"], ["a", "INTEGER"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["a", "a"], ["d", "INTEGER"], ["a", "BOOLEAN"], ["e", "c"]>>)
add_command("B", "d", <<["B", "INTEGER"], ["A", "c"]>>)
bool_value (false)
add_call_chain(<<a,a,BOOLEAN>>)
add_command("A", "D", <<["c", "c"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["d", "D"], ["a", "d"], ["A", "BOOLEAN"], ["b", "INTEGER"], ["c", "BOOLEAN"]>>)
add_command("BOOLEAN", "c", <<["D", "C"], ["A", "d"], ["e", "INTEGER"], ["d", "BOOLEAN"], ["B", "INTEGER"], ["B", "INTEGER"], ["D", "INTEGER"], ["c", "INTEGER"]>>)
add_attribute("B", "B", "INTEGER")
add_command("C", "BOOLEAN", <<["b", "B"], ["B", "a"], ["b", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["c", "INTEGER"], ["D", "C"], ["d", "BOOLEAN"], ["D", "b"], ["D", "BOOLEAN"]>>)
logical_negation
add_command("D", "d", <<["a", "a"], ["A", "A"], ["A", "b"], ["INTEGER", "INTEGER"]>>)
add_attribute("c", "BOOLEAN", "c")
logical_negation
add_query("c", "A", <<["e", "BOOLEAN"], ["D", "BOOLEAN"]>>, "b")
logical_negation
logical_negation
numerical_negation
add_attribute("d", "C", "INTEGER")
quotient
add_query("A", "b", <<["C", "BOOLEAN"], ["a", "INTEGER"], ["b", "d"], ["A", "e"], ["c", "INTEGER"]>>, "B")
add_attribute("A", "a", "INTEGER")
add_class(BOOLEAN)
add_attribute("b", "a", "BOOLEAN")
modulo
int_value (26)
logical_negation
add_call_chain(<<b,c>>)
numerical_negation
add_call_chain(<<B>>)
numerical_negation
add_command("A", "C", <<["b", "a"], ["C", "INTEGER"], ["INTEGER", "c"], ["e", "BOOLEAN"], ["A", "BOOLEAN"]>>)
generate_java_code
add_command("a", "B", <<["B", "BOOLEAN"], ["C", "BOOLEAN"]>>)
add_attribute("A", "BOOLEAN", "INTEGER")
add_attribute("INTEGER", "e", "BOOLEAN")
add_query("A", "B", <<["a", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "INTEGER"], ["INTEGER", "INTEGER"], ["e", "C"], ["c", "INTEGER"]>>, "e")
add_command("c", "B", <<["B", "D"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "e"], ["D", "D"], ["A", "BOOLEAN"], ["b", "d"]>>)
add_call_chain(<<B>>)
add_call_chain(<<e,A,B,D,c>>)
int_value (44)
generate_java_code
add_attribute("D", "BOOLEAN", "INTEGER")
add_query("D", "C", <<["c", "INTEGER"], ["a", "D"], ["INTEGER", "D"], ["d", "BOOLEAN"], ["C", "a"], ["c", "BOOLEAN"], ["a", "BOOLEAN"]>>, "e")
numerical_negation
