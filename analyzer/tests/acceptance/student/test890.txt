generate_java_code
logical_negation
addition
add_command("e", "b", <<["C", "BOOLEAN"], ["d", "INTEGER"], ["d", "INTEGER"], ["A", "INTEGER"], ["A", "INTEGER"], ["C", "BOOLEAN"]>>)
numerical_negation
add_command("D", "e", <<["d", "INTEGER"], ["B", "c"], ["b", "INTEGER"], ["c", "b"], ["c", "INTEGER"], ["a", "INTEGER"], ["a", "A"], ["C", "d"]>>)
bool_value (true)
add_call_chain(<<a,B,d,d>>)
add_query("BOOLEAN", "a", <<["d", "e"], ["A", "INTEGER"], ["A", "BOOLEAN"], ["c", "INTEGER"]>>, "B")
add_call_chain(<<D,d,A,A,A,B,A,C,C>>)
add_command("D", "a", <<["INTEGER", "INTEGER"], ["D", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "INTEGER"]>>)
modulo
multiplication
add_call_chain(<<d,e,C,D,d,C,e,B>>)
int_value (48)
add_command("BOOLEAN", "a", <<["A", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "A"], ["e", "e"]>>)
add_call_chain(<<c,c,B>>)
generate_java_code
numerical_negation
add_command("e", "a", <<["B", "INTEGER"], ["d", "BOOLEAN"], ["a", "C"], ["c", "A"], ["B", "BOOLEAN"], ["c", "C"], ["INTEGER", "INTEGER"], ["C", "e"]>>)
logical_negation
add_attribute("d", "a", "BOOLEAN")
int_value (18)
add_attribute("D", "A", "INTEGER")
add_command("A", "A", <<["B", "INTEGER"], ["b", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["D", "e"]>>)
equals
numerical_negation
add_call_chain(<<e>>)
int_value (47)
numerical_negation
generate_java_code
add_call_chain(<<c,b,D>>)
bool_value (false)
add_call_chain(<<a>>)
equals
numerical_negation
add_call_chain(<<c,b,C,BOOLEAN,C,A,INTEGER,a,B>>)
less_than
add_call_chain(<<B,e,b,B,B,A,A>>)
numerical_negation
add_call_chain(<<c,B,e>>)
add_query("D", "c", <<["INTEGER", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "e"], ["C", "C"], ["b", "BOOLEAN"]>>, "A")
modulo
conjunction
int_value (34)
conjunction
greater_than
add_attribute("B", "D", "INTEGER")
modulo
add_attribute("D", "INTEGER", "D")
type_check
conjunction
bool_value (false)
add_class(d)
int_value (41)
add_command("C", "BOOLEAN", <<["b", "a"], ["A", "INTEGER"], ["d", "d"], ["B", "INTEGER"], ["C", "BOOLEAN"], ["c", "INTEGER"], ["b", "INTEGER"]>>)
add_call_chain(<<D,a,C,e,b,d,c,A>>)
bool_value (true)
add_class(a)
bool_value (false)
add_attribute("b", "c", "BOOLEAN")
numerical_negation
add_attribute("C", "D", "BOOLEAN")
conjunction
less_than
add_command("C", "d", <<["d", "A"], ["d", "INTEGER"], ["b", "B"]>>)
add_call_chain(<<d,C,B,A>>)
add_command("c", "d", <<["B", "b"], ["BOOLEAN", "BOOLEAN"], ["D", "C"], ["c", "d"], ["B", "BOOLEAN"], ["c", "INTEGER"], ["A", "BOOLEAN"], ["A", "BOOLEAN"]>>)
add_call_chain(<<b,INTEGER,e,B,d,e,a,B>>)
add_command("b", "INTEGER", <<["b", "B"], ["B", "d"], ["d", "D"], ["D", "INTEGER"], ["e", "d"], ["D", "A"], ["b", "BOOLEAN"], ["e", "e"], ["d", "A"]>>)
add_command("B", "BOOLEAN", <<["A", "B"], ["D", "INTEGER"], ["a", "BOOLEAN"], ["C", "INTEGER"], ["C", "c"], ["c", "c"], ["d", "INTEGER"], ["BOOLEAN", "INTEGER"], ["A", "INTEGER"]>>)
add_attribute("d", "a", "INTEGER")
int_value (32)
add_command("D", "B", <<["d", "INTEGER"], ["e", "D"], ["INTEGER", "BOOLEAN"], ["B", "e"], ["b", "A"], ["C", "BOOLEAN"], ["d", "BOOLEAN"]>>)
add_query("b", "d", <<["a", "BOOLEAN"], ["d", "C"], ["C", "BOOLEAN"], ["B", "BOOLEAN"]>>, "C")
add_command("INTEGER", "D", <<["c", "d"], ["e", "BOOLEAN"], ["b", "A"]>>)
generate_java_code
bool_value (true)
add_call_chain(<<B,D,d,B,c,e,INTEGER>>)
add_attribute("C", "C", "b")
logical_negation
add_call_chain(<<B,B,a,BOOLEAN,a,A>>)
int_value (15)
bool_value (true)
add_attribute("d", "BOOLEAN", "INTEGER")
equals
add_command("c", "C", <<["A", "C"], ["e", "INTEGER"], ["e", "a"], ["BOOLEAN", "INTEGER"]>>)
numerical_negation
add_class(e)
add_call_chain(<<C>>)
add_call_chain(<<b,a,D>>)
logical_negation
add_call_chain(<<e,e,b,BOOLEAN,A,a>>)
subtraction
add_attribute("B", "e", "INTEGER")
bool_value (false)
numerical_negation
add_query("B", "BOOLEAN", <<["a", "d"], ["d", "INTEGER"], ["a", "BOOLEAN"], ["D", "BOOLEAN"], ["d", "INTEGER"]>>, "B")
add_query("c", "c", <<["b", "C"], ["d", "BOOLEAN"], ["BOOLEAN", "A"], ["INTEGER", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "C"]>>, "D")
int_value (29)
generate_java_code
add_attribute("A", "INTEGER", "INTEGER")
add_class(c)
add_call_chain(<<c,B,e>>)
bool_value (false)
add_command("A", "a", <<["d", "BOOLEAN"]>>)
add_call_chain(<<c,BOOLEAN,B>>)
add_call_chain(<<A,INTEGER,B,a,a,c,A>>)
bool_value (false)
logical_negation
quotient
add_call_chain(<<A,D,D,B>>)
type_check
bool_value (false)
add_attribute("d", "b", "BOOLEAN")
int_value (34)
add_attribute("b", "b", "d")
type_check
add_attribute("c", "c", "BOOLEAN")
numerical_negation
numerical_negation
add_attribute("b", "e", "b")
add_attribute("INTEGER", "d", "INTEGER")
add_attribute("C", "A", "BOOLEAN")
numerical_negation
add_query("b", "A", <<["A", "INTEGER"]>>, "D")
add_command("BOOLEAN", "e", <<["C", "D"], ["d", "BOOLEAN"]>>)
add_call_chain(<<A,e,e,b,C>>)
add_call_chain(<<A,c,B,e,C,C>>)
add_call_chain(<<A,d,C,c,b,A>>)
less_than
bool_value (false)
int_value (35)
disjunction
add_class(b)
equals
addition
add_query("BOOLEAN", "B", <<["A", "d"], ["b", "INTEGER"], ["A", "BOOLEAN"]>>, "a")
quotient
add_query("BOOLEAN", "c", <<["b", "INTEGER"], ["e", "BOOLEAN"], ["D", "a"], ["c", "INTEGER"]>>, "BOOLEAN")
int_value (2)
bool_value (false)
int_value (21)
add_call_chain(<<c,e,e,e,INTEGER,B,a,INTEGER,e>>)
logical_negation
add_attribute("B", "a", "INTEGER")
add_call_chain(<<c,C,C,INTEGER,A>>)
addition
add_command("C", "b", <<["c", "INTEGER"], ["D", "BOOLEAN"], ["C", "BOOLEAN"], ["INTEGER", "INTEGER"], ["e", "BOOLEAN"], ["b", "b"]>>)
add_query("e", "D", <<["d", "INTEGER"], ["b", "INTEGER"], ["D", "C"]>>, "INTEGER")
add_query("A", "B", <<["D", "e"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "INTEGER"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "e"]>>, "C")
add_call_chain(<<d,a>>)
add_call_chain(<<C,e,e>>)
numerical_negation
add_command("BOOLEAN", "BOOLEAN", <<["D", "INTEGER"], ["b", "INTEGER"]>>)
add_command("B", "B", <<["A", "BOOLEAN"], ["e", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["d", "B"], ["d", "INTEGER"], ["d", "C"]>>)
bool_value (true)
bool_value (false)
add_call_chain(<<c,e,B,d,b,b,e,B,b>>)
multiplication
add_call_chain(<<C>>)
add_query("B", "B", <<["A", "b"], ["C", "e"], ["B", "BOOLEAN"], ["c", "INTEGER"], ["d", "BOOLEAN"], ["c", "c"], ["e", "INTEGER"], ["a", "e"]>>, "D")
add_command("A", "INTEGER", <<["A", "BOOLEAN"], ["e", "BOOLEAN"], ["a", "INTEGER"], ["A", "INTEGER"], ["b", "BOOLEAN"], ["A", "INTEGER"], ["A", "D"]>>)
logical_negation
add_class(B)
int_value (17)
add_call_chain(<<a,c,b,A,INTEGER,A>>)
multiplication
numerical_negation
add_call_chain(<<B,B,D,e,INTEGER,e,D,d,D>>)
add_call_chain(<<d,a,b,A>>)
bool_value (true)
bool_value (false)
logical_negation
logical_negation
add_command("BOOLEAN", "b", <<["INTEGER", "A"], ["d", "b"], ["c", "INTEGER"], ["C", "b"], ["D", "BOOLEAN"], ["A", "b"], ["b", "D"]>>)
generate_java_code
add_attribute("C", "A", "BOOLEAN")
add_query("INTEGER", "INTEGER", <<["C", "BOOLEAN"], ["b", "d"], ["A", "INTEGER"], ["c", "INTEGER"], ["C", "INTEGER"], ["D", "INTEGER"], ["C", "INTEGER"], ["A", "D"]>>, "C")
add_query("B", "c", <<["c", "BOOLEAN"], ["D", "INTEGER"]>>, "A")
add_attribute("D", "B", "INTEGER")
add_query("A", "D", <<["D", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "b"], ["b", "INTEGER"], ["INTEGER", "d"], ["a", "B"], ["C", "d"], ["d", "BOOLEAN"]>>, "A")
add_class(d)
logical_negation
add_command("BOOLEAN", "C", <<["c", "INTEGER"], ["D", "BOOLEAN"], ["c", "INTEGER"], ["A", "A"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["c", "INTEGER"], ["a", "BOOLEAN"], ["d", "BOOLEAN"]>>)
logical_negation
less_than
add_call_chain(<<b,B,A>>)
type_check
add_attribute("b", "e", "C")
add_command("a", "e", <<["d", "C"], ["B", "INTEGER"], ["B", "BOOLEAN"]>>)
add_call_chain(<<a,A>>)
add_command("c", "A", <<["A", "BOOLEAN"], ["C", "BOOLEAN"], ["BOOLEAN", "e"], ["d", "BOOLEAN"]>>)
add_call_chain(<<e,b,INTEGER,d,C>>)
add_call_chain(<<C,e>>)
logical_negation
logical_negation
bool_value (true)
type_check
int_value (28)
less_than
add_command("B", "INTEGER", <<["A", "BOOLEAN"], ["C", "b"], ["a", "INTEGER"], ["D", "C"], ["C", "C"], ["b", "BOOLEAN"], ["D", "e"]>>)
add_query("D", "B", <<["e", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "B"]>>, "INTEGER")
add_command("BOOLEAN", "C", <<["C", "INTEGER"], ["INTEGER", "e"], ["A", "INTEGER"]>>)
disjunction
multiplication
add_class(B)
add_class(B)
add_command("e", "B", <<["B", "BOOLEAN"], ["A", "D"], ["c", "BOOLEAN"], ["C", "INTEGER"], ["c", "INTEGER"], ["B", "C"], ["A", "INTEGER"], ["e", "A"], ["BOOLEAN", "INTEGER"]>>)
add_call_chain(<<c,a,C,c,BOOLEAN,BOOLEAN,C>>)
bool_value (false)
add_call_chain(<<B,INTEGER>>)
add_attribute("d", "d", "INTEGER")
add_command("d", "e", <<["e", "INTEGER"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["e", "INTEGER"], ["C", "INTEGER"], ["d", "INTEGER"]>>)
type_check
add_attribute("C", "C", "INTEGER")
bool_value (true)
int_value (29)
bool_value (true)
greater_than
add_command("C", "c", <<["A", "C"], ["C", "a"], ["b", "BOOLEAN"]>>)
bool_value (false)
equals
bool_value (false)
add_command("A", "e", <<["b", "INTEGER"], ["B", "D"], ["B", "BOOLEAN"]>>)
numerical_negation
add_class(BOOLEAN)
generate_java_code
equals
logical_negation
conjunction
add_command("INTEGER", "BOOLEAN", <<["C", "INTEGER"]>>)
add_call_chain(<<c,d,D,C,B,A>>)
logical_negation
add_call_chain(<<d,INTEGER,B,b,d,e>>)
add_attribute("C", "A", "D")
add_attribute("B", "A", "INTEGER")
logical_negation
add_call_chain(<<d,C,B,D,a,d,e,BOOLEAN>>)
bool_value (true)
add_command("C", "A", <<["A", "INTEGER"], ["D", "INTEGER"], ["a", "e"], ["c", "e"], ["c", "e"], ["C", "INTEGER"], ["b", "BOOLEAN"]>>)
bool_value (true)
add_call_chain(<<b,D,INTEGER,d,INTEGER,c,A,e,e>>)
add_query("INTEGER", "b", <<["A", "INTEGER"], ["b", "BOOLEAN"]>>, "C")
add_attribute("d", "BOOLEAN", "INTEGER")
add_call_chain(<<a,b,c,A,b,D,A,D,D>>)
bool_value (true)
numerical_negation
add_attribute("INTEGER", "d", "INTEGER")
add_query("D", "A", <<["c", "INTEGER"]>>, "B")
equals
type_check
int_value (31)
add_command("B", "c", <<["d", "INTEGER"], ["c", "INTEGER"], ["B", "B"], ["e", "B"], ["b", "b"], ["b", "INTEGER"], ["D", "c"], ["B", "B"]>>)
add_query("d", "e", <<["e", "INTEGER"], ["c", "B"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["e", "INTEGER"], ["A", "BOOLEAN"]>>, "b")
logical_negation
add_attribute("d", "b", "D")
bool_value (true)
add_call_chain(<<BOOLEAN,B,a,e,A,C,e>>)
