add_class(c)
add_query("b", "B", <<["e", "B"], ["d", "BOOLEAN"], ["D", "C"], ["BOOLEAN", "BOOLEAN"], ["b", "d"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["B", "B"]>>, "d")
int_value (35)
equals
add_query("D", "D", <<["B", "INTEGER"]>>, "a")
type_check
add_class(c)
disjunction
add_attribute("d", "d", "BOOLEAN")
numerical_negation
int_value (10)
bool_value (true)
add_call_chain(<<d>>)
logical_negation
bool_value (true)
bool_value (false)
add_query("B", "B", <<["C", "A"], ["D", "c"]>>, "c")
disjunction
add_call_chain(<<c,D,A>>)
bool_value (true)
int_value (12)
generate_java_code
add_call_chain(<<b,BOOLEAN,C,b,b,A,c,C,A>>)
quotient
add_command("c", "d", <<["c", "INTEGER"], ["B", "BOOLEAN"], ["e", "INTEGER"]>>)
numerical_negation
int_value (21)
generate_java_code
numerical_negation
multiplication
add_attribute("b", "d", "INTEGER")
bool_value (false)
add_call_chain(<<B,b,C,b,C,BOOLEAN,e,B>>)
add_call_chain(<<C,e,c,C,D,d,B,d,C>>)
add_command("A", "c", <<["e", "BOOLEAN"], ["b", "INTEGER"], ["d", "INTEGER"], ["D", "A"], ["A", "A"]>>)
add_query("D", "c", <<["C", "INTEGER"], ["BOOLEAN", "d"], ["e", "INTEGER"], ["B", "e"], ["b", "BOOLEAN"], ["e", "BOOLEAN"], ["a", "b"]>>, "C")
logical_negation
subtraction
add_command("e", "a", <<["D", "INTEGER"], ["d", "INTEGER"], ["C", "INTEGER"]>>)
int_value (19)
logical_negation
add_class(B)
bool_value (false)
disjunction
type_check
add_class(A)
add_call_chain(<<B,B,C>>)
add_command("e", "c", <<["B", "BOOLEAN"]>>)
int_value (45)
add_call_chain(<<a,A,d,A,b,c,D,e,C>>)
logical_negation
add_call_chain(<<e,A,B,D,d,a,b>>)
greater_than
disjunction
disjunction
addition
add_call_chain(<<c,D>>)
bool_value (true)
add_query("B", "B", <<["B", "B"], ["C", "a"], ["C", "D"], ["C", "BOOLEAN"], ["a", "BOOLEAN"]>>, "C")
logical_negation
add_command("e", "c", <<["A", "a"], ["d", "BOOLEAN"]>>)
add_command("D", "b", <<["C", "BOOLEAN"], ["B", "B"], ["e", "INTEGER"]>>)
less_than
add_call_chain(<<C,a,A,C,B,C,d,INTEGER,D>>)
numerical_negation
bool_value (false)
bool_value (true)
add_attribute("a", "c", "INTEGER")
generate_java_code
add_call_chain(<<B,A>>)
generate_java_code
numerical_negation
add_call_chain(<<A>>)
int_value (39)
numerical_negation
add_call_chain(<<B,D>>)
bool_value (false)
numerical_negation
logical_negation
logical_negation
int_value (10)
numerical_negation
add_command("C", "a", <<["BOOLEAN", "INTEGER"], ["d", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "BOOLEAN"], ["d", "INTEGER"], ["D", "INTEGER"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "BOOLEAN"]>>)
logical_negation
disjunction
add_call_chain(<<B,A,d>>)
add_query("e", "INTEGER", <<["b", "INTEGER"], ["A", "BOOLEAN"], ["a", "a"], ["c", "e"]>>, "C")
add_call_chain(<<d,A,B,BOOLEAN,INTEGER,D,b>>)
add_call_chain(<<D,B,D,c,A>>)
add_call_chain(<<d,B,B,INTEGER>>)
bool_value (false)
add_call_chain(<<D,A,a,a,b,d,B,BOOLEAN,e>>)
bool_value (true)
greater_than
type_check
add_query("B", "C", <<["INTEGER", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["e", "a"], ["e", "e"]>>, "e")
generate_java_code
add_call_chain(<<c,D,b,C,B>>)
add_call_chain(<<C,A,BOOLEAN,B,INTEGER,e,d>>)
numerical_negation
int_value (1)
generate_java_code
numerical_negation
int_value (15)
add_query("C", "b", <<["b", "BOOLEAN"], ["B", "D"], ["e", "INTEGER"], ["C", "a"], ["INTEGER", "INTEGER"], ["A", "INTEGER"]>>, "A")
add_command("a", "B", <<["a", "e"], ["e", "INTEGER"], ["INTEGER", "BOOLEAN"], ["e", "b"], ["INTEGER", "B"], ["d", "INTEGER"], ["B", "BOOLEAN"], ["b", "A"], ["D", "INTEGER"]>>)
logical_negation
add_command("BOOLEAN", "B", <<["B", "B"], ["a", "INTEGER"], ["a", "BOOLEAN"], ["c", "INTEGER"]>>)
numerical_negation
add_attribute("B", "d", "INTEGER")
int_value (17)
add_attribute("INTEGER", "C", "INTEGER")
int_value (1)
quotient
greater_than
add_attribute("a", "a", "INTEGER")
add_command("c", "a", <<["C", "BOOLEAN"], ["B", "INTEGER"]>>)
logical_negation
add_attribute("e", "d", "INTEGER")
add_call_chain(<<B,D,B,INTEGER,A,c>>)
add_class(A)
generate_java_code
add_query("c", "e", <<["BOOLEAN", "D"], ["B", "d"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "INTEGER"]>>, "B")
bool_value (false)
add_command("C", "BOOLEAN", <<["a", "INTEGER"], ["d", "INTEGER"]>>)
disjunction
add_call_chain(<<a,A,C,b>>)
add_call_chain(<<D,A,BOOLEAN,b,c,d,c,e,e>>)
numerical_negation
add_command("b", "e", <<["d", "INTEGER"], ["a", "A"], ["c", "c"], ["c", "d"], ["B", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["INTEGER", "INTEGER"]>>)
type_check
modulo
quotient
greater_than
add_command("d", "D", <<["d", "A"]>>)
numerical_negation
add_attribute("d", "a", "INTEGER")
add_call_chain(<<b,d,a,D,B,A,A,c>>)
bool_value (false)
add_query("A", "e", <<["B", "A"], ["C", "INTEGER"], ["D", "INTEGER"], ["b", "C"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["D", "INTEGER"], ["a", "c"]>>, "d")
add_command("A", "C", <<["b", "BOOLEAN"], ["c", "INTEGER"], ["INTEGER", "BOOLEAN"], ["D", "INTEGER"], ["BOOLEAN", "INTEGER"], ["B", "INTEGER"], ["b", "INTEGER"], ["e", "BOOLEAN"], ["C", "INTEGER"]>>)
bool_value (true)
add_attribute("a", "a", "INTEGER")
add_query("B", "BOOLEAN", <<["B", "A"], ["B", "INTEGER"]>>, "d")
generate_java_code
bool_value (false)
add_query("C", "a", <<["b", "BOOLEAN"], ["C", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>, "b")
int_value (43)
add_call_chain(<<d,C,e>>)
add_attribute("e", "C", "BOOLEAN")
add_call_chain(<<d,e>>)
add_command("d", "c", <<["A", "INTEGER"], ["e", "c"], ["e", "BOOLEAN"], ["B", "INTEGER"], ["b", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "e"], ["e", "b"], ["d", "c"]>>)
add_call_chain(<<INTEGER,INTEGER,A,b>>)
int_value (48)
numerical_negation
bool_value (false)
bool_value (false)
add_attribute("D", "BOOLEAN", "INTEGER")
int_value (10)
logical_negation
disjunction
add_attribute("d", "BOOLEAN", "INTEGER")
add_command("A", "D", <<["INTEGER", "a"], ["D", "INTEGER"], ["d", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "INTEGER"]>>)
int_value (41)
bool_value (false)
add_call_chain(<<INTEGER,c,e,A,b,BOOLEAN,B,B,B>>)
add_call_chain(<<B,C,a,c,d,C,d,b>>)
logical_negation
add_command("D", "e", <<["B", "BOOLEAN"], ["c", "D"], ["C", "INTEGER"], ["D", "e"], ["c", "INTEGER"], ["b", "a"], ["D", "INTEGER"], ["c", "BOOLEAN"], ["b", "INTEGER"]>>)
add_query("D", "A", <<["e", "e"], ["D", "INTEGER"], ["e", "BOOLEAN"]>>, "C")
add_attribute("e", "C", "INTEGER")
add_call_chain(<<b,a,B,b>>)
numerical_negation
generate_java_code
add_command("d", "A", <<["b", "INTEGER"], ["a", "d"], ["a", "INTEGER"], ["d", "INTEGER"], ["e", "a"], ["BOOLEAN", "d"], ["b", "A"]>>)
less_than
generate_java_code
add_call_chain(<<A,c,d,B,C,INTEGER,A,A,C>>)
int_value (38)
generate_java_code
add_query("d", "a", <<["INTEGER", "BOOLEAN"], ["B", "INTEGER"], ["A", "INTEGER"], ["a", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["A", "C"]>>, "C")
generate_java_code
numerical_negation
add_call_chain(<<B,A,A,B,C,C,a,a>>)
int_value (22)
add_attribute("e", "C", "INTEGER")
generate_java_code
generate_java_code
int_value (27)
numerical_negation
add_attribute("A", "e", "INTEGER")
equals
add_command("D", "b", <<["D", "D"], ["B", "INTEGER"], ["C", "BOOLEAN"], ["B", "INTEGER"], ["e", "b"], ["a", "e"]>>)
greater_than
less_than
add_class(INTEGER)
add_query("a", "C", <<["d", "BOOLEAN"], ["a", "INTEGER"], ["b", "INTEGER"]>>, "e")
int_value (33)
add_class(d)
bool_value (true)
add_call_chain(<<b,C,C>>)
add_query("A", "a", <<["B", "C"], ["e", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["d", "BOOLEAN"]>>, "D")
add_attribute("D", "BOOLEAN", "a")
add_call_chain(<<A,D,A,d,A,d>>)
logical_negation
numerical_negation
add_call_chain(<<a,A,B,INTEGER>>)
logical_negation
int_value (31)
add_query("A", "C", <<["d", "BOOLEAN"]>>, "C")
less_than
add_call_chain(<<BOOLEAN,C,D,A,BOOLEAN>>)
type_check
add_call_chain(<<d,D,B,B,C>>)
add_call_chain(<<e>>)
add_class(A)
numerical_negation
generate_java_code
disjunction
