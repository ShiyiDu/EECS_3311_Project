add_query("b", "INTEGER", <<["A", "INTEGER"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["c", "INTEGER"], ["e", "e"], ["INTEGER", "INTEGER"]>>, "C")
multiplication
modulo
add_command("C", "e", <<["A", "INTEGER"], ["D", "B"], ["e", "c"], ["C", "BOOLEAN"], ["B", "BOOLEAN"]>>)
add_command("C", "e", <<["e", "C"], ["e", "BOOLEAN"], ["D", "C"], ["a", "BOOLEAN"], ["a", "INTEGER"], ["BOOLEAN", "c"]>>)
int_value (40)
add_command("a", "B", <<["B", "A"], ["d", "BOOLEAN"]>>)
int_value (46)
add_call_chain(<<e,BOOLEAN,e,A,e,a,BOOLEAN>>)
generate_java_code
conjunction
numerical_negation
disjunction
add_attribute("c", "C", "c")
type_check
add_call_chain(<<B,d,c,C>>)
generate_java_code
int_value (32)
add_query("C", "A", <<["b", "BOOLEAN"], ["A", "BOOLEAN"]>>, "BOOLEAN")
bool_value (true)
numerical_negation
add_attribute("c", "e", "c")
add_call_chain(<<e,a,e,d,B,C,A,A>>)
numerical_negation
add_call_chain(<<e,b,A,c,D,e,d>>)
add_query("D", "b", <<["INTEGER", "INTEGER"], ["C", "C"], ["C", "INTEGER"], ["A", "b"], ["e", "BOOLEAN"], ["D", "INTEGER"]>>, "INTEGER")
add_call_chain(<<D,A,C,d>>)
numerical_negation
add_call_chain(<<B,a>>)
multiplication
int_value (16)
add_call_chain(<<c,c,c,a,b>>)
greater_than
add_attribute("e", "b", "C")
add_call_chain(<<a,e>>)
logical_negation
add_command("c", "INTEGER", <<["C", "c"], ["b", "INTEGER"], ["e", "INTEGER"], ["C", "A"], ["C", "BOOLEAN"], ["D", "INTEGER"]>>)
conjunction
generate_java_code
numerical_negation
add_call_chain(<<d,e,D>>)
subtraction
equals
add_attribute("c", "A", "INTEGER")
add_call_chain(<<a,C,A,INTEGER,a,BOOLEAN,c,a>>)
add_call_chain(<<B,c,d,b,d>>)
add_call_chain(<<e,e,d,B,d,D,a>>)
disjunction
add_call_chain(<<D,INTEGER,A,BOOLEAN,INTEGER,A>>)
add_call_chain(<<d,A,B,B,c,C,d>>)
logical_negation
bool_value (true)
int_value (46)
add_attribute("e", "d", "BOOLEAN")
generate_java_code
add_attribute("c", "A", "INTEGER")
add_attribute("c", "c", "INTEGER")
add_command("d", "B", <<["b", "b"], ["INTEGER", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["a", "BOOLEAN"], ["c", "A"], ["D", "BOOLEAN"], ["D", "d"]>>)
generate_java_code
add_command("d", "B", <<["B", "INTEGER"], ["C", "a"], ["A", "D"], ["BOOLEAN", "BOOLEAN"], ["b", "BOOLEAN"], ["d", "INTEGER"]>>)
add_call_chain(<<A,C,d,e,B,c,A,BOOLEAN>>)
int_value (10)
logical_negation
numerical_negation
add_query("b", "e", <<["B", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["d", "INTEGER"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["e", "C"]>>, "B")
add_command("C", "C", <<["C", "INTEGER"], ["BOOLEAN", "d"], ["C", "BOOLEAN"], ["c", "INTEGER"], ["C", "BOOLEAN"], ["c", "d"]>>)
add_class(INTEGER)
add_attribute("e", "d", "B")
add_call_chain(<<B,D>>)
add_command("b", "d", <<["e", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "A"], ["a", "B"]>>)
add_class(A)
disjunction
add_call_chain(<<B,B,e,b>>)
add_call_chain(<<C,a,e>>)
int_value (20)
bool_value (false)
logical_negation
add_attribute("BOOLEAN", "d", "BOOLEAN")
numerical_negation
generate_java_code
generate_java_code
add_query("D", "e", <<["C", "e"], ["d", "INTEGER"], ["B", "BOOLEAN"]>>, "a")
add_call_chain(<<D,INTEGER,B,C,d,A>>)
add_command("a", "B", <<["D", "INTEGER"], ["B", "INTEGER"], ["B", "b"], ["C", "B"], ["d", "B"], ["a", "BOOLEAN"], ["c", "INTEGER"]>>)
add_call_chain(<<d,C,e,D,e,B>>)
numerical_negation
add_command("A", "b", <<["A", "D"], ["e", "INTEGER"], ["INTEGER", "INTEGER"], ["e", "BOOLEAN"]>>)
logical_negation
int_value (16)
add_call_chain(<<e,D,C>>)
greater_than
modulo
add_call_chain(<<B,b,C,INTEGER,b,b,C>>)
logical_negation
add_call_chain(<<e,c,e,c,a,a>>)
int_value (38)
numerical_negation
add_attribute("INTEGER", "d", "BOOLEAN")
numerical_negation
add_call_chain(<<BOOLEAN,a,d,d,e,b,d,B,b>>)
add_call_chain(<<d,C>>)
add_attribute("A", "e", "INTEGER")
add_command("C", "a", <<["C", "c"], ["B", "INTEGER"], ["INTEGER", "INTEGER"], ["D", "A"], ["c", "e"], ["b", "INTEGER"], ["C", "C"]>>)
add_call_chain(<<e,d,d,a,e,B,C,B>>)
add_attribute("a", "A", "BOOLEAN")
numerical_negation
add_query("c", "B", <<["C", "D"], ["a", "INTEGER"], ["B", "INTEGER"], ["B", "D"], ["e", "INTEGER"], ["A", "INTEGER"], ["b", "INTEGER"], ["a", "e"], ["A", "BOOLEAN"]>>, "A")
add_attribute("D", "b", "A")
numerical_negation
disjunction
quotient
bool_value (false)
add_query("B", "INTEGER", <<["INTEGER", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "a"]>>, "b")
logical_negation
int_value (27)
add_attribute("C", "BOOLEAN", "C")
int_value (45)
add_attribute("d", "A", "INTEGER")
bool_value (true)
bool_value (false)
multiplication
disjunction
int_value (30)
logical_negation
add_call_chain(<<C,a,C,INTEGER,BOOLEAN,c,A,BOOLEAN>>)
add_attribute("a", "A", "INTEGER")
type_check
add_query("B", "c", <<["A", "INTEGER"], ["INTEGER", "BOOLEAN"], ["C", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>, "D")
numerical_negation
add_attribute("d", "D", "BOOLEAN")
add_call_chain(<<d,INTEGER,A,B,e,B>>)
bool_value (false)
add_attribute("B", "INTEGER", "INTEGER")
add_call_chain(<<e,B,C,e,b,B,e,b>>)
bool_value (true)
numerical_negation
add_call_chain(<<B,e>>)
int_value (25)
logical_negation
add_class(d)
add_query("a", "e", <<["a", "BOOLEAN"], ["c", "BOOLEAN"], ["a", "INTEGER"], ["b", "c"]>>, "BOOLEAN")
add_class(B)
type_check
numerical_negation
int_value (35)
add_attribute("INTEGER", "e", "BOOLEAN")
equals
numerical_negation
conjunction
bool_value (false)
add_class(B)
type_check
add_query("e", "B", <<["b", "BOOLEAN"], ["d", "BOOLEAN"], ["e", "INTEGER"]>>, "e")
type_check
add_query("C", "B", <<["a", "INTEGER"], ["c", "INTEGER"]>>, "d")
int_value (8)
add_command("D", "d", <<["A", "INTEGER"], ["e", "BOOLEAN"]>>)
greater_than
add_command("e", "B", <<["B", "BOOLEAN"], ["A", "INTEGER"], ["A", "INTEGER"], ["d", "INTEGER"], ["B", "INTEGER"], ["C", "INTEGER"]>>)
add_attribute("A", "B", "BOOLEAN")
generate_java_code
bool_value (true)
conjunction
add_query("a", "b", <<["A", "INTEGER"]>>, "C")
int_value (12)
add_call_chain(<<c,e,b,B,INTEGER,B,D,c,b>>)
equals
add_call_chain(<<b,a,D,BOOLEAN,b>>)
logical_negation
add_command("C", "A", <<["a", "b"], ["b", "b"]>>)
numerical_negation
add_command("B", "A", <<["D", "a"], ["d", "BOOLEAN"], ["A", "INTEGER"], ["b", "B"], ["b", "BOOLEAN"]>>)
int_value (5)
add_call_chain(<<c,B,BOOLEAN>>)
int_value (1)
bool_value (true)
numerical_negation
add_call_chain(<<e,d,c,D,b,c,B>>)
add_query("A", "e", <<["D", "a"], ["b", "INTEGER"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["e", "BOOLEAN"], ["D", "a"], ["C", "INTEGER"]>>, "d")
add_attribute("b", "C", "INTEGER")
logical_negation
add_call_chain(<<e,A,d,D,a,A>>)
int_value (3)
add_class(d)
add_call_chain(<<c,e,A,c,A,INTEGER,C,d>>)
logical_negation
equals
type_check
bool_value (true)
add_class(c)
add_call_chain(<<c,C>>)
add_command("BOOLEAN", "b", <<["BOOLEAN", "D"], ["b", "D"]>>)
bool_value (false)
add_attribute("D", "A", "BOOLEAN")
add_query("C", "BOOLEAN", <<["C", "b"], ["d", "D"], ["C", "INTEGER"], ["D", "b"]>>, "D")
logical_negation
int_value (14)
add_command("b", "INTEGER", <<["A", "BOOLEAN"], ["INTEGER", "INTEGER"], ["B", "BOOLEAN"], ["D", "B"], ["B", "BOOLEAN"]>>)
numerical_negation
greater_than
add_call_chain(<<C,d,e,BOOLEAN,B,B>>)
add_command("INTEGER", "A", <<["A", "b"], ["A", "d"]>>)
add_query("e", "B", <<["B", "BOOLEAN"], ["d", "INTEGER"], ["d", "BOOLEAN"]>>, "D")
