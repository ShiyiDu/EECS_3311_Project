type_check
less_than
int_value (39)
logical_negation
add_command("D", "B", <<["a", "INTEGER"], ["c", "INTEGER"], ["c", "d"], ["e", "INTEGER"], ["B", "BOOLEAN"], ["B", "INTEGER"]>>)
numerical_negation
less_than
add_call_chain(<<A,A,D,D,D,A,b,a,d>>)
int_value (38)
add_command("c", "C", <<["INTEGER", "INTEGER"], ["C", "INTEGER"]>>)
bool_value (false)
bool_value (true)
add_class(a)
add_query("d", "B", <<["C", "INTEGER"], ["A", "INTEGER"], ["e", "BOOLEAN"], ["B", "INTEGER"], ["d", "BOOLEAN"], ["C", "a"], ["A", "BOOLEAN"], ["C", "INTEGER"]>>, "d")
int_value (28)
bool_value (true)
generate_java_code
add_attribute("b", "c", "D")
add_query("A", "c", <<["B", "INTEGER"], ["b", "BOOLEAN"]>>, "d")
logical_negation
add_command("e", "d", <<["c", "INTEGER"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["C", "c"], ["INTEGER", "INTEGER"]>>)
add_call_chain(<<b,C,d,D,b>>)
int_value (13)
add_command("e", "a", <<["INTEGER", "INTEGER"], ["c", "INTEGER"], ["B", "B"], ["A", "D"], ["d", "C"], ["a", "INTEGER"]>>)
int_value (15)
add_command("b", "C", <<["C", "C"], ["INTEGER", "INTEGER"], ["A", "INTEGER"], ["d", "BOOLEAN"], ["BOOLEAN", "a"], ["b", "e"], ["B", "INTEGER"], ["d", "INTEGER"], ["B", "c"]>>)
add_attribute("b", "c", "A")
multiplication
greater_than
add_call_chain(<<INTEGER,a,B,d,e,e,a,a,e>>)
type_check
numerical_negation
logical_negation
greater_than
subtraction
add_command("d", "C", <<["BOOLEAN", "BOOLEAN"], ["C", "e"], ["D", "e"], ["e", "d"], ["b", "INTEGER"], ["A", "BOOLEAN"]>>)
addition
type_check
bool_value (false)
add_call_chain(<<e,D,c,C,b,BOOLEAN,d,c>>)
add_query("B", "b", <<["D", "A"], ["BOOLEAN", "INTEGER"], ["B", "BOOLEAN"]>>, "A")
add_query("BOOLEAN", "c", <<["d", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["A", "c"], ["c", "BOOLEAN"], ["c", "BOOLEAN"], ["b", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "c"], ["A", "e"]>>, "b")
type_check
add_call_chain(<<D,A,BOOLEAN,e,BOOLEAN,D,c,B>>)
add_call_chain(<<BOOLEAN,A>>)
generate_java_code
generate_java_code
int_value (18)
add_call_chain(<<c,a,D,e,c,b,A,a>>)
logical_negation
add_attribute("B", "INTEGER", "BOOLEAN")
add_call_chain(<<B,A,INTEGER,b,D,C,b,a>>)
logical_negation
add_call_chain(<<a,d,BOOLEAN,d,C,b,d,d,b>>)
add_call_chain(<<B,b,D,B,B,c,C>>)
add_call_chain(<<b,B,e,INTEGER,A,D,a,d>>)
add_query("d", "b", <<["a", "d"], ["b", "INTEGER"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["A", "INTEGER"], ["D", "INTEGER"], ["A", "BOOLEAN"]>>, "c")
logical_negation
add_attribute("b", "B", "e")
generate_java_code
numerical_negation
add_command("b", "A", <<["b", "D"], ["C", "c"], ["d", "BOOLEAN"], ["d", "INTEGER"], ["C", "INTEGER"], ["c", "A"]>>)
add_query("D", "BOOLEAN", <<["a", "BOOLEAN"], ["A", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["INTEGER", "BOOLEAN"], ["c", "BOOLEAN"]>>, "C")
add_attribute("D", "C", "BOOLEAN")
bool_value (false)
logical_negation
add_call_chain(<<a,B,BOOLEAN,b>>)
int_value (34)
logical_negation
add_call_chain(<<e,e,a,D>>)
bool_value (false)
numerical_negation
add_call_chain(<<e,A,c,a>>)
add_call_chain(<<d,b,b,d>>)
add_class(BOOLEAN)
type_check
add_query("b", "A", <<["b", "INTEGER"], ["A", "INTEGER"], ["A", "B"]>>, "a")
logical_negation
add_query("A", "A", <<["c", "INTEGER"], ["c", "INTEGER"], ["e", "BOOLEAN"], ["d", "INTEGER"], ["D", "e"], ["C", "BOOLEAN"], ["e", "BOOLEAN"], ["d", "BOOLEAN"]>>, "b")
equals
logical_negation
disjunction
int_value (23)
multiplication
disjunction
add_class(A)
add_attribute("D", "b", "INTEGER")
greater_than
bool_value (true)
add_attribute("b", "A", "BOOLEAN")
add_call_chain(<<e,D,b,d>>)
int_value (12)
int_value (30)
add_query("A", "D", <<["b", "BOOLEAN"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "INTEGER"], ["c", "INTEGER"]>>, "C")
add_query("C", "A", <<["e", "INTEGER"]>>, "B")
add_command("C", "b", <<["b", "BOOLEAN"], ["e", "INTEGER"], ["b", "INTEGER"], ["b", "BOOLEAN"], ["b", "INTEGER"], ["d", "INTEGER"], ["C", "BOOLEAN"], ["C", "C"]>>)
add_call_chain(<<e,d,A,a,INTEGER,B,b,INTEGER>>)
less_than
add_call_chain(<<D,c,d,D>>)
type_check
int_value (18)
type_check
add_command("A", "c", <<["d", "INTEGER"], ["C", "D"]>>)
add_command("D", "a", <<["A", "c"], ["e", "INTEGER"], ["c", "INTEGER"]>>)
add_attribute("b", "d", "INTEGER")
generate_java_code
logical_negation
numerical_negation
add_command("c", "C", <<["B", "A"], ["c", "BOOLEAN"], ["INTEGER", "A"], ["e", "INTEGER"], ["e", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
bool_value (false)
add_call_chain(<<INTEGER,BOOLEAN,B,D,e>>)
logical_negation
add_query("d", "C", <<["b", "INTEGER"], ["INTEGER", "INTEGER"], ["c", "INTEGER"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["b", "b"]>>, "e")
add_command("A", "BOOLEAN", <<["D", "B"]>>)
numerical_negation
type_check
add_query("C", "C", <<["a", "BOOLEAN"]>>, "C")
less_than
type_check
bool_value (true)
disjunction
add_call_chain(<<b,BOOLEAN,d,B,b>>)
quotient
add_call_chain(<<e,A,B,BOOLEAN,INTEGER,BOOLEAN>>)
add_call_chain(<<C,a,a,a,e,C,b,A>>)
add_call_chain(<<a,e,b,b,c>>)
bool_value (true)
add_call_chain(<<BOOLEAN,INTEGER>>)
equals
logical_negation
logical_negation
add_command("c", "C", <<["a", "B"], ["b", "BOOLEAN"], ["a", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "INTEGER"], ["d", "a"], ["A", "e"]>>)
numerical_negation
logical_negation
add_command("b", "c", <<["c", "BOOLEAN"]>>)
add_call_chain(<<D,B,a,c,C,INTEGER,d,e,e>>)
add_class(c)
equals
add_attribute("c", "a", "c")
type_check
add_command("D", "A", <<["e", "BOOLEAN"], ["c", "INTEGER"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["B", "INTEGER"]>>)
bool_value (true)
type_check
bool_value (false)
add_call_chain(<<D,A,D,BOOLEAN>>)
add_command("A", "A", <<["C", "d"], ["A", "B"], ["B", "BOOLEAN"], ["A", "B"]>>)
add_command("d", "D", <<["a", "INTEGER"], ["d", "BOOLEAN"], ["c", "INTEGER"], ["e", "INTEGER"]>>)
logical_negation
add_call_chain(<<a,BOOLEAN,c,b,B,B,A,a,C>>)
logical_negation
logical_negation
logical_negation
type_check
add_call_chain(<<A,d,A,C,d,c,B,d,b>>)
add_call_chain(<<A>>)
add_attribute("C", "D", "BOOLEAN")
add_call_chain(<<e,b,C,D,D,e,BOOLEAN,d>>)
add_query("D", "e", <<["C", "B"], ["D", "INTEGER"], ["INTEGER", "INTEGER"], ["c", "a"], ["c", "BOOLEAN"], ["A", "INTEGER"], ["a", "INTEGER"]>>, "C")
add_call_chain(<<BOOLEAN,b,C>>)
add_query("INTEGER", "c", <<["B", "INTEGER"], ["b", "BOOLEAN"]>>, "D")
add_command("c", "b", <<["B", "INTEGER"], ["e", "INTEGER"], ["A", "INTEGER"]>>)
int_value (48)
conjunction
subtraction
generate_java_code
conjunction
numerical_negation
add_call_chain(<<D,c,BOOLEAN,A>>)
multiplication
add_query("B", "C", <<["d", "BOOLEAN"], ["D", "A"], ["b", "INTEGER"], ["C", "e"], ["b", "INTEGER"], ["A", "BOOLEAN"], ["b", "INTEGER"]>>, "e")
add_command("c", "A", <<["d", "INTEGER"], ["C", "INTEGER"], ["e", "b"], ["b", "BOOLEAN"], ["D", "BOOLEAN"], ["a", "b"]>>)
add_attribute("A", "C", "INTEGER")
bool_value (false)
int_value (3)
add_call_chain(<<a,A,C>>)
add_command("C", "d", <<["e", "INTEGER"], ["d", "INTEGER"], ["c", "BOOLEAN"], ["a", "INTEGER"], ["A", "C"], ["C", "INTEGER"]>>)
add_attribute("BOOLEAN", "BOOLEAN", "A")
add_query("BOOLEAN", "b", <<["a", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["a", "e"], ["C", "INTEGER"]>>, "a")
int_value (7)
add_attribute("D", "b", "a")
add_query("INTEGER", "b", <<["d", "BOOLEAN"], ["c", "BOOLEAN"], ["c", "INTEGER"], ["D", "BOOLEAN"]>>, "e")
add_command("d", "c", <<["a", "INTEGER"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["A", "INTEGER"], ["b", "e"], ["C", "b"], ["B", "BOOLEAN"], ["A", "e"]>>)
numerical_negation
add_call_chain(<<b,d,b,C,C,d,B,c,D>>)
add_query("C", "D", <<["BOOLEAN", "a"]>>, "b")
type_check
add_attribute("a", "D", "BOOLEAN")
add_attribute("c", "d", "INTEGER")
type_check
numerical_negation
numerical_negation
add_command("B", "b", <<["INTEGER", "INTEGER"], ["C", "B"]>>)
int_value (29)
add_class(A)
add_call_chain(<<D,e,A>>)
bool_value (false)
conjunction
add_call_chain(<<C>>)
add_attribute("a", "B", "BOOLEAN")
conjunction
add_call_chain(<<e,A>>)
add_class(a)
type_check
less_than
equals
add_command("c", "c", <<["D", "BOOLEAN"], ["C", "INTEGER"], ["B", "d"], ["D", "INTEGER"]>>)
add_call_chain(<<c,c,b,D,C>>)
int_value (43)
add_command("d", "B", <<["B", "INTEGER"]>>)
bool_value (false)
