add_query("C", "e", <<["a", "INTEGER"], ["D", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["a", "D"], ["INTEGER", "INTEGER"], ["e", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "C"], ["a", "b"]>>, "a")
int_value (26)
logical_negation
add_call_chain(<<INTEGER,c,a,D,a>>)
bool_value (true)
add_query("a", "D", <<["INTEGER", "INTEGER"], ["a", "e"], ["d", "INTEGER"], ["C", "BOOLEAN"]>>, "c")
add_class(a)
add_command("e", "c", <<["d", "INTEGER"], ["A", "BOOLEAN"], ["B", "C"], ["c", "INTEGER"], ["d", "a"], ["c", "D"], ["B", "INTEGER"]>>)
numerical_negation
add_attribute("d", "D", "INTEGER")
add_query("b", "INTEGER", <<["b", "C"], ["d", "BOOLEAN"], ["d", "INTEGER"], ["C", "BOOLEAN"], ["d", "INTEGER"], ["b", "c"], ["b", "BOOLEAN"]>>, "D")
type_check
type_check
equals
int_value (48)
type_check
numerical_negation
type_check
add_command("B", "a", <<["C", "B"], ["c", "D"]>>)
conjunction
add_call_chain(<<b>>)
add_command("C", "A", <<["B", "c"], ["A", "INTEGER"], ["d", "INTEGER"]>>)
add_attribute("a", "e", "d")
quotient
add_call_chain(<<e,D,a>>)
logical_negation
disjunction
numerical_negation
add_command("b", "B", <<["INTEGER", "BOOLEAN"], ["e", "INTEGER"], ["B", "BOOLEAN"], ["d", "e"], ["B", "BOOLEAN"]>>)
generate_java_code
bool_value (true)
int_value (48)
add_call_chain(<<d,a>>)
type_check
int_value (4)
add_query("B", "e", <<["D", "BOOLEAN"], ["a", "c"], ["BOOLEAN", "INTEGER"], ["b", "D"], ["d", "c"], ["A", "d"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "BOOLEAN"]>>, "b")
add_query("d", "a", <<["d", "BOOLEAN"]>>, "d")
disjunction
add_command("a", "b", <<["BOOLEAN", "BOOLEAN"], ["BOOLEAN", "D"], ["c", "BOOLEAN"], ["BOOLEAN", "d"], ["b", "BOOLEAN"], ["c", "INTEGER"]>>)
add_call_chain(<<e,e,e,INTEGER,b,d,D,B,A>>)
bool_value (true)
add_command("a", "C", <<["B", "A"], ["C", "c"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["d", "BOOLEAN"], ["c", "C"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["d", "BOOLEAN"]>>)
add_call_chain(<<C,e,C,b,c,e,C,B,b>>)
logical_negation
bool_value (false)
add_command("d", "D", <<["INTEGER", "INTEGER"], ["A", "e"], ["B", "C"], ["INTEGER", "BOOLEAN"]>>)
bool_value (true)
numerical_negation
add_command("C", "e", <<["b", "BOOLEAN"], ["c", "D"]>>)
numerical_negation
add_query("B", "BOOLEAN", <<["d", "a"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["d", "INTEGER"]>>, "a")
subtraction
add_call_chain(<<B,c,A,A>>)
logical_negation
add_query("A", "B", <<["D", "e"], ["b", "INTEGER"], ["C", "c"], ["A", "B"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["c", "INTEGER"], ["d", "BOOLEAN"], ["C", "c"]>>, "a")
add_query("INTEGER", "a", <<["B", "INTEGER"], ["e", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "B"], ["C", "D"], ["a", "INTEGER"], ["a", "B"], ["C", "INTEGER"]>>, "a")
add_call_chain(<<A,B,D,d,b>>)
add_query("b", "D", <<["a", "INTEGER"], ["A", "A"], ["c", "D"], ["C", "INTEGER"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["d", "INTEGER"], ["e", "BOOLEAN"]>>, "a")
add_call_chain(<<d,D,d,C,e,C,C,d,e>>)
add_call_chain(<<B>>)
add_command("a", "c", <<["C", "INTEGER"], ["D", "INTEGER"], ["a", "INTEGER"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "INTEGER"], ["e", "INTEGER"]>>)
generate_java_code
int_value (9)
add_command("C", "d", <<["D", "C"], ["INTEGER", "INTEGER"], ["b", "c"], ["A", "INTEGER"], ["B", "INTEGER"], ["C", "BOOLEAN"], ["C", "a"]>>)
numerical_negation
add_query("B", "B", <<["B", "d"], ["d", "INTEGER"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "d"], ["b", "INTEGER"]>>, "e")
numerical_negation
add_call_chain(<<B,B,B,b,B,e,C>>)
numerical_negation
add_call_chain(<<e,d,D,a,C,B,b,d,A>>)
add_attribute("c", "a", "A")
add_class(a)
logical_negation
bool_value (false)
add_query("D", "BOOLEAN", <<["C", "B"], ["c", "BOOLEAN"], ["e", "INTEGER"], ["B", "INTEGER"], ["BOOLEAN", "A"]>>, "D")
add_query("C", "A", <<["d", "INTEGER"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["D", "INTEGER"], ["d", "BOOLEAN"], ["B", "INTEGER"]>>, "a")
numerical_negation
add_command("D", "a", <<["D", "INTEGER"], ["c", "INTEGER"], ["D", "INTEGER"], ["INTEGER", "INTEGER"], ["A", "BOOLEAN"], ["b", "INTEGER"], ["e", "BOOLEAN"]>>)
add_class(D)
add_call_chain(<<A,b,D,D,b>>)
add_command("C", "a", <<["A", "C"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["a", "b"], ["b", "BOOLEAN"]>>)
add_call_chain(<<D>>)
subtraction
add_call_chain(<<c,A,e,A,e,c,d,D,a>>)
disjunction
type_check
add_call_chain(<<BOOLEAN,B,b>>)
type_check
int_value (18)
bool_value (true)
conjunction
add_command("A", "c", <<["A", "BOOLEAN"], ["b", "INTEGER"]>>)
conjunction
conjunction
add_class(a)
add_attribute("A", "BOOLEAN", "INTEGER")
add_attribute("a", "c", "e")
conjunction
add_command("D", "A", <<["d", "a"], ["b", "INTEGER"], ["a", "c"], ["B", "BOOLEAN"]>>)
int_value (22)
add_command("b", "A", <<["D", "INTEGER"], ["BOOLEAN", "D"], ["A", "INTEGER"], ["e", "INTEGER"], ["c", "c"], ["C", "d"], ["D", "BOOLEAN"], ["b", "INTEGER"]>>)
int_value (12)
bool_value (true)
add_query("B", "C", <<["D", "BOOLEAN"], ["d", "BOOLEAN"], ["c", "a"], ["A", "BOOLEAN"], ["A", "d"], ["d", "INTEGER"], ["b", "c"]>>, "a")
add_call_chain(<<b,d,e,C>>)
int_value (6)
add_attribute("A", "e", "BOOLEAN")
addition
subtraction
add_query("c", "INTEGER", <<["C", "BOOLEAN"], ["D", "e"], ["A", "INTEGER"], ["c", "D"]>>, "c")
add_call_chain(<<D,e,B,a,a,A,INTEGER>>)
bool_value (false)
disjunction
generate_java_code
add_attribute("b", "INTEGER", "BOOLEAN")
add_attribute("B", "e", "BOOLEAN")
add_query("B", "a", <<["a", "a"], ["B", "D"]>>, "c")
add_attribute("b", "a", "BOOLEAN")
add_call_chain(<<e,BOOLEAN,c,D,b,e,e,B>>)
add_attribute("c", "B", "BOOLEAN")
add_call_chain(<<BOOLEAN,A,D>>)
add_attribute("c", "a", "B")
numerical_negation
addition
add_query("e", "B", <<["C", "a"], ["BOOLEAN", "b"], ["D", "BOOLEAN"], ["INTEGER", "A"], ["d", "INTEGER"], ["c", "B"], ["b", "INTEGER"]>>, "D")
int_value (26)
generate_java_code
add_call_chain(<<b>>)
add_call_chain(<<B,C,e>>)
disjunction
add_call_chain(<<D,a,D,A,b>>)
generate_java_code
subtraction
add_query("D", "d", <<["A", "B"]>>, "A")
numerical_negation
logical_negation
add_attribute("C", "B", "c")
bool_value (false)
add_attribute("C", "D", "BOOLEAN")
add_attribute("C", "INTEGER", "INTEGER")
add_call_chain(<<c,A,e,A,D,c,BOOLEAN,D>>)
add_call_chain(<<e,d,d,C,e,C>>)
add_call_chain(<<C,C>>)
add_command("C", "A", <<["c", "BOOLEAN"], ["INTEGER", "b"], ["INTEGER", "A"], ["C", "INTEGER"]>>)
add_command("D", "d", <<["D", "B"], ["e", "INTEGER"], ["B", "INTEGER"]>>)
subtraction
add_query("C", "B", <<["A", "d"], ["B", "INTEGER"], ["INTEGER", "INTEGER"], ["D", "BOOLEAN"], ["a", "D"], ["B", "a"]>>, "b")
type_check
modulo
bool_value (true)
add_attribute("B", "D", "BOOLEAN")
add_command("e", "B", <<["b", "BOOLEAN"], ["A", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["a", "INTEGER"], ["e", "a"], ["c", "INTEGER"], ["D", "b"]>>)
add_class(B)
add_query("B", "A", <<["B", "INTEGER"]>>, "d")
int_value (30)
bool_value (false)
multiplication
add_attribute("BOOLEAN", "A", "BOOLEAN")
add_query("B", "A", <<["BOOLEAN", "d"], ["e", "BOOLEAN"], ["e", "e"]>>, "INTEGER")
bool_value (true)
bool_value (true)
numerical_negation
type_check
add_attribute("c", "a", "INTEGER")
add_attribute("C", "INTEGER", "INTEGER")
bool_value (true)
type_check
logical_negation
int_value (38)
add_call_chain(<<b,c,BOOLEAN,e,b,C,A,C,C>>)
numerical_negation
generate_java_code
modulo
bool_value (false)
int_value (22)
add_command("b", "A", <<["D", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "INTEGER"]>>)
bool_value (false)
subtraction
add_query("d", "a", <<["e", "d"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["A", "d"], ["d", "BOOLEAN"], ["B", "INTEGER"], ["c", "BOOLEAN"], ["B", "INTEGER"]>>, "b")
equals
type_check
int_value (3)
add_attribute("D", "A", "INTEGER")
logical_negation
add_call_chain(<<c,c,B,B,A,C,D>>)
logical_negation
add_class(b)
generate_java_code
add_call_chain(<<B,C,c>>)
add_attribute("a", "B", "BOOLEAN")
add_call_chain(<<b,d,C,D,d,B>>)
bool_value (true)
add_query("D", "D", <<["c", "INTEGER"], ["e", "INTEGER"], ["D", "C"], ["A", "A"], ["B", "INTEGER"], ["e", "A"], ["BOOLEAN", "b"], ["e", "D"], ["INTEGER", "a"]>>, "C")
add_call_chain(<<B,INTEGER,C>>)
add_attribute("b", "INTEGER", "A")
bool_value (false)
type_check
add_call_chain(<<e,C,c,c,A,a,d>>)
add_query("e", "b", <<["d", "INTEGER"], ["A", "B"], ["e", "e"], ["A", "INTEGER"], ["C", "INTEGER"], ["B", "INTEGER"], ["d", "C"]>>, "d")
numerical_negation
add_command("C", "BOOLEAN", <<["A", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "INTEGER"], ["b", "INTEGER"], ["D", "BOOLEAN"]>>)
add_query("D", "b", <<["C", "C"], ["D", "c"], ["b", "INTEGER"], ["B", "INTEGER"]>>, "b")
add_command("e", "B", <<["a", "B"], ["A", "BOOLEAN"], ["D", "INTEGER"], ["b", "INTEGER"], ["b", "b"], ["D", "INTEGER"]>>)
add_query("e", "b", <<["C", "INTEGER"], ["e", "INTEGER"]>>, "d")
