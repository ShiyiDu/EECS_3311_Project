equals
add_command("A", "B", <<["A", "D"], ["e", "INTEGER"], ["a", "INTEGER"], ["C", "INTEGER"], ["A", "A"], ["C", "C"]>>)
add_attribute("d", "INTEGER", "BOOLEAN")
numerical_negation
type_check
int_value (41)
add_call_chain(<<d,a,A,B,INTEGER,d,C,D,c>>)
add_attribute("B", "A", "BOOLEAN")
add_attribute("B", "e", "BOOLEAN")
numerical_negation
add_query("BOOLEAN", "C", <<["D", "D"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["e", "BOOLEAN"], ["d", "INTEGER"], ["C", "INTEGER"], ["a", "d"], ["B", "BOOLEAN"], ["e", "BOOLEAN"]>>, "D")
int_value (46)
int_value (44)
int_value (42)
bool_value (false)
addition
add_call_chain(<<d,e,D,e,D,e,d,e,INTEGER>>)
add_query("C", "c", <<["B", "d"], ["A", "e"], ["A", "BOOLEAN"], ["d", "C"], ["c", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["e", "d"]>>, "B")
logical_negation
add_command("b", "BOOLEAN", <<["D", "INTEGER"], ["b", "BOOLEAN"]>>)
add_attribute("D", "B", "INTEGER")
multiplication
greater_than
add_call_chain(<<INTEGER,c,D,INTEGER,A,D,d,b,BOOLEAN>>)
add_attribute("c", "B", "BOOLEAN")
add_command("b", "e", <<["b", "d"]>>)
add_query("b", "D", <<["e", "BOOLEAN"]>>, "INTEGER")
generate_java_code
add_call_chain(<<BOOLEAN>>)
subtraction
numerical_negation
add_call_chain(<<C,a>>)
int_value (19)
disjunction
add_attribute("D", "d", "BOOLEAN")
addition
addition
logical_negation
add_attribute("B", "B", "INTEGER")
add_attribute("b", "a", "BOOLEAN")
bool_value (true)
bool_value (true)
type_check
add_call_chain(<<A,a,c,A,e,a,INTEGER>>)
generate_java_code
add_call_chain(<<A,b,d,C,A,B,b,c,a>>)
add_attribute("D", "B", "INTEGER")
add_attribute("d", "BOOLEAN", "b")
type_check
generate_java_code
bool_value (true)
add_attribute("B", "d", "A")
generate_java_code
add_attribute("B", "b", "BOOLEAN")
int_value (33)
add_query("b", "e", <<["B", "BOOLEAN"], ["a", "BOOLEAN"]>>, "b")
add_query("D", "C", <<["e", "INTEGER"], ["e", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["e", "b"], ["INTEGER", "BOOLEAN"], ["B", "e"], ["e", "INTEGER"], ["D", "INTEGER"]>>, "a")
subtraction
add_class(c)
generate_java_code
bool_value (true)
add_command("D", "d", <<["D", "BOOLEAN"], ["e", "a"], ["b", "INTEGER"], ["b", "B"], ["A", "BOOLEAN"], ["B", "BOOLEAN"]>>)
add_query("b", "B", <<["D", "BOOLEAN"], ["d", "e"], ["B", "C"], ["a", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["b", "INTEGER"], ["d", "INTEGER"], ["BOOLEAN", "INTEGER"]>>, "A")
disjunction
add_command("b", "c", <<["a", "C"], ["c", "INTEGER"], ["d", "INTEGER"], ["INTEGER", "BOOLEAN"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "INTEGER"]>>)
add_attribute("c", "B", "INTEGER")
add_attribute("A", "BOOLEAN", "INTEGER")
add_call_chain(<<A,BOOLEAN,b>>)
quotient
add_call_chain(<<B,e,C,a,D,b,C>>)
generate_java_code
add_call_chain(<<a,b,INTEGER,C,b,A,a,b>>)
add_command("D", "D", <<["INTEGER", "BOOLEAN"]>>)
add_attribute("INTEGER", "INTEGER", "BOOLEAN")
generate_java_code
logical_negation
bool_value (true)
bool_value (true)
add_command("A", "C", <<["D", "BOOLEAN"], ["e", "INTEGER"], ["b", "a"], ["c", "INTEGER"]>>)
equals
add_call_chain(<<e>>)
conjunction
int_value (34)
numerical_negation
add_call_chain(<<A,e,e,d,B,C,a,D,c>>)
add_call_chain(<<a>>)
add_command("e", "b", <<["a", "INTEGER"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["a", "c"], ["A", "INTEGER"], ["b", "C"]>>)
type_check
add_call_chain(<<d,B,a>>)
greater_than
int_value (6)
multiplication
generate_java_code
bool_value (true)
add_call_chain(<<A,B,C,a>>)
conjunction
add_call_chain(<<A,INTEGER>>)
add_command("A", "a", <<["C", "d"], ["A", "BOOLEAN"], ["a", "a"]>>)
subtraction
add_command("C", "INTEGER", <<["B", "c"], ["B", "INTEGER"], ["B", "INTEGER"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["a", "a"]>>)
add_call_chain(<<e>>)
add_attribute("d", "A", "BOOLEAN")
add_call_chain(<<INTEGER,A,C,B,e,b,B,D>>)
generate_java_code
add_class(B)
type_check
add_attribute("A", "A", "INTEGER")
conjunction
bool_value (true)
subtraction
add_command("C", "A", <<["e", "BOOLEAN"]>>)
add_call_chain(<<c>>)
add_class(e)
add_query("B", "e", <<["D", "BOOLEAN"], ["e", "INTEGER"], ["a", "BOOLEAN"], ["D", "INTEGER"], ["D", "BOOLEAN"]>>, "B")
int_value (37)
numerical_negation
logical_negation
add_class(BOOLEAN)
add_query("B", "d", <<["BOOLEAN", "BOOLEAN"], ["INTEGER", "INTEGER"], ["e", "INTEGER"]>>, "C")
add_query("B", "B", <<["b", "e"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["e", "C"], ["e", "BOOLEAN"], ["a", "A"], ["B", "C"], ["INTEGER", "D"]>>, "b")
generate_java_code
int_value (16)
logical_negation
numerical_negation
add_command("A", "A", <<["e", "BOOLEAN"], ["c", "BOOLEAN"], ["e", "BOOLEAN"], ["a", "INTEGER"]>>)
add_attribute("D", "C", "INTEGER")
add_call_chain(<<C>>)
add_query("a", "d", <<["B", "A"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["D", "BOOLEAN"]>>, "a")
add_call_chain(<<BOOLEAN,D,BOOLEAN,INTEGER,B,d>>)
add_query("c", "A", <<["INTEGER", "e"], ["D", "INTEGER"], ["b", "INTEGER"], ["INTEGER", "BOOLEAN"], ["b", "INTEGER"], ["BOOLEAN", "d"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["INTEGER", "INTEGER"]>>, "d")
int_value (34)
add_command("B", "A", <<["C", "INTEGER"], ["c", "INTEGER"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "a"], ["BOOLEAN", "BOOLEAN"], ["d", "BOOLEAN"]>>)
int_value (23)
disjunction
numerical_negation
generate_java_code
add_call_chain(<<A,c,INTEGER,INTEGER>>)
add_attribute("d", "INTEGER", "b")
add_attribute("d", "e", "BOOLEAN")
add_query("INTEGER", "B", <<["e", "BOOLEAN"], ["B", "c"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["B", "A"], ["C", "INTEGER"], ["c", "INTEGER"], ["INTEGER", "d"]>>, "a")
add_query("A", "c", <<["d", "INTEGER"], ["c", "BOOLEAN"], ["A", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["d", "INTEGER"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["c", "e"], ["BOOLEAN", "BOOLEAN"]>>, "b")
bool_value (false)
int_value (34)
type_check
int_value (40)
subtraction
add_call_chain(<<b>>)
add_attribute("d", "b", "INTEGER")
logical_negation
logical_negation
less_than
modulo
numerical_negation
add_command("C", "BOOLEAN", <<["D", "D"]>>)
add_call_chain(<<c,C,D,a,INTEGER,INTEGER,b>>)
add_query("C", "d", <<["c", "b"]>>, "A")
add_call_chain(<<c,e,A,B,e,B,e,d,c>>)
add_query("INTEGER", "a", <<["e", "BOOLEAN"]>>, "c")
add_call_chain(<<d>>)
add_command("INTEGER", "b", <<["BOOLEAN", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "b"]>>)
disjunction
add_call_chain(<<C,a,d,e,e,D,d,C>>)
conjunction
add_class(A)
add_call_chain(<<e,A,A,INTEGER,C,C,BOOLEAN,a,A>>)
int_value (47)
logical_negation
bool_value (false)
add_query("BOOLEAN", "d", <<["c", "BOOLEAN"]>>, "C")
generate_java_code
logical_negation
add_query("e", "B", <<["A", "D"], ["INTEGER", "INTEGER"], ["b", "b"], ["e", "b"], ["a", "BOOLEAN"]>>, "b")
disjunction
greater_than
disjunction
add_call_chain(<<a,C>>)
add_class(D)
add_attribute("A", "c", "INTEGER")
int_value (32)
add_command("d", "d", <<["b", "e"], ["a", "BOOLEAN"], ["C", "INTEGER"], ["d", "C"], ["C", "INTEGER"], ["e", "BOOLEAN"], ["D", "A"], ["b", "e"]>>)
add_attribute("C", "D", "INTEGER")
add_call_chain(<<A,b,C,d,a,d,A,e,e>>)
add_call_chain(<<d,D,C,d>>)
bool_value (true)
bool_value (false)
logical_negation
add_command("b", "b", <<["e", "INTEGER"], ["b", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "INTEGER"], ["D", "A"], ["a", "BOOLEAN"]>>)
add_query("C", "D", <<["c", "a"], ["B", "D"], ["A", "INTEGER"], ["b", "BOOLEAN"], ["e", "INTEGER"]>>, "d")
add_call_chain(<<B,INTEGER,b>>)
conjunction
logical_negation
add_command("D", "A", <<["BOOLEAN", "INTEGER"], ["B", "a"], ["b", "c"], ["C", "B"], ["B", "c"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["B", "INTEGER"], ["INTEGER", "INTEGER"]>>)
numerical_negation
int_value (49)
add_call_chain(<<d,d,a>>)
int_value (36)
logical_negation
