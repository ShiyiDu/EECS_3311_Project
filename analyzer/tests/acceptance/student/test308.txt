add_command("d", "d", <<["D", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "B"], ["A", "BOOLEAN"], ["BOOLEAN", "B"], ["C", "BOOLEAN"]>>)
numerical_negation
generate_java_code
add_call_chain(<<e,b>>)
add_call_chain(<<C,a,B,C,d,C,e>>)
logical_negation
add_command("b", "e", <<["A", "BOOLEAN"], ["C", "BOOLEAN"], ["INTEGER", "INTEGER"], ["b", "BOOLEAN"], ["B", "INTEGER"]>>)
generate_java_code
equals
add_attribute("e", "A", "c")
logical_negation
bool_value (false)
bool_value (true)
addition
logical_negation
int_value (17)
int_value (17)
disjunction
add_attribute("B", "d", "INTEGER")
add_call_chain(<<D,D,c,C,e>>)
add_call_chain(<<BOOLEAN,BOOLEAN,e,D>>)
add_query("INTEGER", "B", <<["D", "BOOLEAN"], ["B", "INTEGER"], ["b", "BOOLEAN"], ["B", "A"], ["INTEGER", "BOOLEAN"]>>, "A")
add_command("b", "A", <<["B", "INTEGER"], ["BOOLEAN", "INTEGER"], ["a", "b"], ["b", "INTEGER"], ["b", "a"], ["c", "BOOLEAN"]>>)
add_attribute("C", "e", "BOOLEAN")
add_class(C)
less_than
add_command("C", "D", <<["e", "INTEGER"], ["D", "B"], ["B", "INTEGER"]>>)
equals
add_call_chain(<<BOOLEAN,d,e,a,e,d>>)
generate_java_code
subtraction
add_query("e", "A", <<["a", "B"], ["d", "c"], ["e", "BOOLEAN"], ["INTEGER", "INTEGER"], ["c", "INTEGER"], ["a", "B"]>>, "BOOLEAN")
add_call_chain(<<B,C>>)
add_call_chain(<<e,C,C,A,e,A,B,c,b>>)
logical_negation
modulo
add_query("b", "A", <<["a", "INTEGER"], ["c", "BOOLEAN"], ["A", "INTEGER"]>>, "BOOLEAN")
add_command("e", "D", <<["A", "e"], ["A", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["D", "D"], ["d", "BOOLEAN"], ["d", "INTEGER"]>>)
add_command("D", "B", <<["D", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "b"], ["b", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["B", "C"]>>)
int_value (30)
add_class(B)
add_command("A", "b", <<["A", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "INTEGER"], ["C", "INTEGER"], ["A", "INTEGER"]>>)
add_attribute("a", "INTEGER", "C")
bool_value (true)
numerical_negation
add_attribute("e", "B", "BOOLEAN")
quotient
add_command("A", "a", <<["e", "INTEGER"], ["c", "INTEGER"], ["B", "INTEGER"], ["d", "INTEGER"]>>)
bool_value (true)
add_attribute("b", "b", "c")
int_value (5)
add_command("A", "A", <<["INTEGER", "B"], ["INTEGER", "d"]>>)
greater_than
add_attribute("BOOLEAN", "D", "C")
add_call_chain(<<D,C,a,e>>)
add_attribute("A", "B", "BOOLEAN")
add_class(INTEGER)
numerical_negation
subtraction
numerical_negation
add_call_chain(<<b,BOOLEAN,INTEGER,e,c,b,INTEGER,D>>)
bool_value (true)
add_call_chain(<<C>>)
add_class(d)
quotient
add_attribute("b", "B", "INTEGER")
add_attribute("d", "A", "INTEGER")
add_command("A", "INTEGER", <<["A", "e"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["c", "INTEGER"], ["b", "INTEGER"], ["e", "INTEGER"]>>)
int_value (14)
add_attribute("d", "c", "BOOLEAN")
numerical_negation
logical_negation
bool_value (false)
bool_value (true)
add_attribute("e", "BOOLEAN", "BOOLEAN")
add_command("e", "e", <<["b", "INTEGER"], ["A", "BOOLEAN"], ["D", "BOOLEAN"], ["INTEGER", "C"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["B", "BOOLEAN"]>>)
bool_value (false)
add_command("b", "D", <<["a", "INTEGER"]>>)
type_check
disjunction
type_check
add_class(C)
add_command("C", "c", <<["A", "C"], ["A", "INTEGER"]>>)
numerical_negation
add_attribute("A", "D", "BOOLEAN")
bool_value (true)
add_class(a)
disjunction
int_value (8)
add_attribute("b", "INTEGER", "BOOLEAN")
subtraction
add_call_chain(<<A,B,C,a,d,C,b,C,B>>)
greater_than
add_call_chain(<<D,c,b,C,e,d,BOOLEAN,A>>)
add_query("C", "C", <<["a", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "c"], ["INTEGER", "A"]>>, "B")
add_call_chain(<<B,b,BOOLEAN,c,e,c,a,d,a>>)
add_call_chain(<<C>>)
bool_value (true)
add_query("d", "D", <<["b", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["d", "BOOLEAN"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["C", "INTEGER"]>>, "B")
bool_value (false)
quotient
add_attribute("A", "D", "c")
addition
add_command("e", "B", <<["A", "a"], ["D", "BOOLEAN"]>>)
add_call_chain(<<B,a>>)
int_value (23)
subtraction
add_call_chain(<<D>>)
logical_negation
numerical_negation
add_call_chain(<<c,BOOLEAN>>)
add_command("B", "BOOLEAN", <<["b", "INTEGER"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "c"], ["a", "B"], ["C", "INTEGER"], ["e", "INTEGER"]>>)
conjunction
add_query("c", "d", <<["B", "BOOLEAN"], ["d", "b"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["b", "D"], ["C", "BOOLEAN"], ["a", "INTEGER"]>>, "A")
add_query("D", "b", <<["b", "INTEGER"], ["D", "B"], ["B", "A"], ["b", "INTEGER"], ["B", "INTEGER"]>>, "D")
add_call_chain(<<B,c,a,B,b,C,D>>)
add_call_chain(<<INTEGER,d,d>>)
numerical_negation
logical_negation
numerical_negation
modulo
add_command("B", "e", <<["a", "INTEGER"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "a"], ["B", "INTEGER"], ["e", "INTEGER"], ["C", "BOOLEAN"]>>)
int_value (5)
int_value (9)
logical_negation
add_query("D", "b", <<["C", "INTEGER"], ["D", "INTEGER"], ["INTEGER", "INTEGER"], ["d", "B"], ["INTEGER", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["e", "A"]>>, "B")
add_call_chain(<<a,e,b,D,B,a,D>>)
add_attribute("c", "D", "BOOLEAN")
int_value (39)
add_command("BOOLEAN", "B", <<["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "C"], ["C", "INTEGER"], ["a", "e"], ["b", "BOOLEAN"], ["D", "c"], ["D", "d"], ["e", "INTEGER"]>>)
type_check
add_call_chain(<<BOOLEAN,A,B,A,c,C,d,BOOLEAN,b>>)
add_command("b", "D", <<["b", "B"], ["a", "B"], ["b", "INTEGER"], ["A", "d"]>>)
type_check
add_attribute("c", "e", "C")
add_attribute("c", "C", "e")
generate_java_code
add_call_chain(<<c,INTEGER,BOOLEAN,A,C,d,D>>)
type_check
bool_value (true)
numerical_negation
add_class(C)
add_call_chain(<<D,BOOLEAN>>)
less_than
numerical_negation
add_call_chain(<<D,d,A>>)
add_call_chain(<<d,D,A,B,a,D,BOOLEAN,D>>)
logical_negation
add_class(a)
bool_value (false)
conjunction
int_value (20)
add_command("BOOLEAN", "B", <<["e", "C"], ["INTEGER", "BOOLEAN"], ["a", "B"]>>)
numerical_negation
add_call_chain(<<BOOLEAN,c,B>>)
add_query("A", "A", <<["INTEGER", "B"], ["A", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "b"]>>, "C")
less_than
numerical_negation
add_class(b)
add_command("A", "INTEGER", <<["BOOLEAN", "BOOLEAN"], ["d", "d"]>>)
add_call_chain(<<d,B,b,a,a,D,C>>)
add_call_chain(<<D,B,A,INTEGER,D,D,C,C>>)
add_query("B", "b", <<["INTEGER", "A"], ["INTEGER", "BOOLEAN"], ["b", "B"], ["INTEGER", "BOOLEAN"], ["e", "D"], ["d", "INTEGER"], ["a", "INTEGER"], ["e", "INTEGER"]>>, "C")
add_call_chain(<<c,D,D,A,C,c,B>>)
add_attribute("a", "e", "INTEGER")
add_command("e", "A", <<["B", "BOOLEAN"]>>)
generate_java_code
add_attribute("B", "d", "BOOLEAN")
add_query("D", "A", <<["a", "INTEGER"], ["B", "INTEGER"], ["e", "INTEGER"], ["a", "BOOLEAN"], ["c", "b"], ["e", "a"], ["A", "A"]>>, "b")
type_check
add_call_chain(<<b,a,A,INTEGER>>)
bool_value (false)
int_value (31)
add_call_chain(<<a,C,D,A,e,C,b,D,c>>)
int_value (23)
disjunction
subtraction
less_than
generate_java_code
add_query("d", "e", <<["A", "INTEGER"], ["D", "BOOLEAN"], ["INTEGER", "A"], ["c", "INTEGER"], ["BOOLEAN", "A"], ["C", "INTEGER"], ["e", "INTEGER"]>>, "e")
add_query("B", "C", <<["c", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "C"]>>, "INTEGER")
add_query("B", "A", <<["b", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["C", "A"]>>, "d")
add_attribute("b", "D", "BOOLEAN")
bool_value (false)
logical_negation
add_command("D", "B", <<["e", "BOOLEAN"], ["e", "INTEGER"]>>)
greater_than
addition
add_attribute("B", "B", "INTEGER")
add_query("C", "INTEGER", <<["a", "e"], ["a", "C"], ["b", "INTEGER"], ["INTEGER", "C"], ["d", "INTEGER"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["D", "D"]>>, "BOOLEAN")
add_call_chain(<<A,A,D,a,c,A>>)
add_attribute("B", "C", "INTEGER")
add_call_chain(<<e,b,b>>)
add_query("c", "d", <<["b", "BOOLEAN"], ["C", "c"], ["BOOLEAN", "INTEGER"], ["a", "a"]>>, "INTEGER")
bool_value (false)
add_class(a)
add_call_chain(<<BOOLEAN,D,d,B,B>>)
generate_java_code
add_attribute("BOOLEAN", "d", "BOOLEAN")
add_attribute("A", "C", "c")
add_attribute("C", "b", "a")
bool_value (true)
add_class(C)
logical_negation
add_attribute("a", "b", "D")
int_value (39)
type_check
add_call_chain(<<c>>)
add_query("C", "b", <<["a", "c"], ["b", "INTEGER"], ["A", "B"], ["INTEGER", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "BOOLEAN"]>>, "a")
add_class(C)
add_query("d", "C", <<["b", "INTEGER"], ["A", "A"], ["B", "d"], ["A", "INTEGER"], ["D", "INTEGER"], ["d", "BOOLEAN"]>>, "b")
less_than
greater_than
int_value (4)
add_call_chain(<<a,D,C>>)
numerical_negation
add_class(d)
int_value (2)
int_value (22)
add_query("A", "A", <<["b", "a"], ["A", "C"], ["B", "INTEGER"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["b", "INTEGER"]>>, "C")
conjunction
add_call_chain(<<e,B,c,BOOLEAN,D,D,b,b,B>>)
add_attribute("B", "d", "BOOLEAN")
numerical_negation
add_call_chain(<<A,e>>)
addition
add_call_chain(<<e,a,BOOLEAN,e,B,d,C>>)
add_attribute("a", "D", "B")
logical_negation
