add_attribute("A", "e", "C")
int_value (24)
generate_java_code
int_value (28)
multiplication
equals
add_class(d)
add_query("D", "C", <<["C", "INTEGER"]>>, "A")
type_check
less_than
numerical_negation
add_call_chain(<<d,c,A,D,b>>)
add_class(a)
add_call_chain(<<b,d,A,D>>)
add_query("c", "e", <<["a", "B"], ["b", "INTEGER"], ["A", "BOOLEAN"], ["c", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "C"], ["B", "BOOLEAN"]>>, "B")
add_call_chain(<<a,B,B,b,D>>)
add_attribute("a", "c", "INTEGER")
numerical_negation
add_command("BOOLEAN", "d", <<["A", "INTEGER"]>>)
add_query("e", "c", <<["e", "INTEGER"], ["C", "INTEGER"], ["e", "e"], ["a", "INTEGER"]>>, "b")
numerical_negation
add_query("C", "B", <<["D", "a"], ["a", "e"]>>, "INTEGER")
numerical_negation
numerical_negation
numerical_negation
add_command("c", "b", <<["c", "b"], ["e", "INTEGER"], ["e", "a"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["e", "c"], ["A", "C"], ["B", "BOOLEAN"], ["b", "INTEGER"]>>)
add_call_chain(<<B,B,C,e,c>>)
generate_java_code
disjunction
add_attribute("A", "a", "INTEGER")
int_value (32)
add_class(INTEGER)
add_call_chain(<<b,C>>)
add_query("C", "BOOLEAN", <<["C", "INTEGER"], ["c", "INTEGER"], ["a", "D"], ["c", "BOOLEAN"], ["BOOLEAN", "B"], ["c", "A"]>>, "BOOLEAN")
add_class(b)
add_query("b", "BOOLEAN", <<["b", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["A", "INTEGER"], ["c", "INTEGER"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["D", "BOOLEAN"]>>, "B")
int_value (8)
add_call_chain(<<D,a,a>>)
add_command("C", "C", <<["c", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "INTEGER"], ["c", "c"]>>)
add_call_chain(<<C,e,a,C>>)
type_check
generate_java_code
add_query("c", "a", <<["C", "e"]>>, "a")
bool_value (true)
numerical_negation
add_call_chain(<<d,A,BOOLEAN,C,B,a>>)
int_value (14)
bool_value (true)
int_value (10)
conjunction
logical_negation
bool_value (true)
conjunction
equals
bool_value (true)
int_value (35)
add_command("c", "C", <<["A", "INTEGER"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "e"], ["c", "b"], ["b", "B"]>>)
add_command("C", "BOOLEAN", <<["e", "INTEGER"], ["e", "INTEGER"], ["c", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "INTEGER"]>>)
disjunction
numerical_negation
add_call_chain(<<INTEGER,A>>)
numerical_negation
less_than
multiplication
generate_java_code
type_check
add_attribute("b", "d", "BOOLEAN")
add_call_chain(<<e>>)
type_check
generate_java_code
add_query("D", "D", <<["b", "BOOLEAN"]>>, "A")
bool_value (true)
bool_value (false)
add_class(d)
logical_negation
add_call_chain(<<c,c,A,B,B,c,e,d,c>>)
add_command("d", "a", <<["b", "INTEGER"], ["C", "C"]>>)
add_call_chain(<<INTEGER,C,B,b,A>>)
bool_value (true)
less_than
add_call_chain(<<e,d,C,B,d,d,e,A,d>>)
bool_value (false)
logical_negation
greater_than
generate_java_code
type_check
add_command("d", "a", <<["C", "INTEGER"]>>)
add_class(e)
add_attribute("e", "B", "BOOLEAN")
bool_value (true)
add_attribute("D", "C", "INTEGER")
equals
add_call_chain(<<D,D,c,A,D,A,D,b>>)
equals
add_attribute("C", "b", "INTEGER")
int_value (44)
add_call_chain(<<a,e,a>>)
numerical_negation
bool_value (false)
int_value (10)
disjunction
generate_java_code
add_command("A", "D", <<["A", "INTEGER"], ["A", "b"], ["b", "BOOLEAN"], ["A", "B"], ["e", "INTEGER"]>>)
disjunction
conjunction
logical_negation
int_value (1)
bool_value (true)
bool_value (true)
numerical_negation
add_command("d", "B", <<["D", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["d", "BOOLEAN"], ["d", "BOOLEAN"], ["d", "BOOLEAN"], ["e", "BOOLEAN"]>>)
logical_negation
quotient
add_attribute("e", "BOOLEAN", "BOOLEAN")
add_attribute("c", "a", "INTEGER")
add_call_chain(<<INTEGER,B,e,C,D,A,A>>)
generate_java_code
type_check
generate_java_code
add_call_chain(<<D,BOOLEAN,B,c,a,e,D>>)
bool_value (true)
add_call_chain(<<c,a,b,D>>)
add_attribute("c", "a", "d")
logical_negation
add_query("C", "A", <<["d", "BOOLEAN"], ["D", "INTEGER"], ["b", "B"], ["d", "BOOLEAN"]>>, "d")
int_value (36)
add_call_chain(<<BOOLEAN,e,a,A,a,D,A,e,c>>)
type_check
add_command("A", "a", <<["D", "INTEGER"], ["B", "INTEGER"], ["INTEGER", "c"], ["d", "B"], ["D", "INTEGER"], ["D", "INTEGER"], ["C", "c"], ["e", "INTEGER"]>>)
numerical_negation
add_command("B", "a", <<["a", "INTEGER"], ["A", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "INTEGER"], ["INTEGER", "BOOLEAN"], ["INTEGER", "B"], ["D", "BOOLEAN"], ["a", "D"], ["e", "BOOLEAN"]>>)
quotient
conjunction
int_value (28)
subtraction
generate_java_code
bool_value (true)
int_value (26)
add_call_chain(<<B,INTEGER,C,D,b,D,e,d,C>>)
add_call_chain(<<d,c,C,INTEGER,A>>)
type_check
add_call_chain(<<a,b,e,C,D>>)
generate_java_code
bool_value (true)
addition
add_query("B", "B", <<["C", "INTEGER"], ["B", "d"], ["e", "INTEGER"], ["B", "BOOLEAN"], ["a", "D"], ["c", "INTEGER"], ["D", "BOOLEAN"]>>, "A")
add_call_chain(<<D,d>>)
numerical_negation
bool_value (false)
generate_java_code
add_call_chain(<<A,D>>)
numerical_negation
type_check
logical_negation
add_command("C", "INTEGER", <<["d", "INTEGER"], ["D", "b"], ["B", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "BOOLEAN"], ["INTEGER", "INTEGER"]>>)
logical_negation
add_attribute("b", "c", "INTEGER")
less_than
add_query("B", "D", <<["e", "BOOLEAN"], ["B", "d"], ["d", "INTEGER"]>>, "A")
add_call_chain(<<B,C>>)
generate_java_code
generate_java_code
add_command("D", "C", <<["C", "BOOLEAN"], ["e", "INTEGER"], ["D", "INTEGER"], ["A", "a"], ["C", "INTEGER"]>>)
int_value (1)
add_call_chain(<<INTEGER>>)
add_attribute("C", "c", "BOOLEAN")
add_class(e)
greater_than
add_query("d", "C", <<["B", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["INTEGER", "BOOLEAN"], ["e", "c"], ["D", "INTEGER"], ["B", "BOOLEAN"], ["D", "BOOLEAN"]>>, "B")
add_command("D", "B", <<["C", "BOOLEAN"], ["B", "b"]>>)
add_query("d", "c", <<["a", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "INTEGER"]>>, "c")
bool_value (false)
conjunction
bool_value (false)
logical_negation
add_call_chain(<<INTEGER,D,A,A,b,B>>)
disjunction
add_call_chain(<<D,INTEGER,B,D,d,c>>)
add_call_chain(<<D,a,b,d,b>>)
add_call_chain(<<B>>)
logical_negation
add_call_chain(<<b,A>>)
numerical_negation
bool_value (true)
generate_java_code
add_class(D)
bool_value (false)
logical_negation
add_query("b", "A", <<["d", "B"], ["A", "a"], ["B", "INTEGER"]>>, "INTEGER")
bool_value (true)
int_value (1)
int_value (48)
add_command("INTEGER", "D", <<["d", "INTEGER"], ["D", "BOOLEAN"], ["C", "c"], ["c", "INTEGER"], ["a", "INTEGER"], ["B", "BOOLEAN"], ["c", "BOOLEAN"]>>)
numerical_negation
add_query("a", "c", <<["c", "INTEGER"]>>, "B")
logical_negation
generate_java_code
bool_value (false)
add_command("c", "a", <<["D", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "INTEGER"], ["C", "INTEGER"], ["BOOLEAN", "INTEGER"]>>)
int_value (6)
disjunction
int_value (1)
subtraction
int_value (21)
add_call_chain(<<B,d>>)
logical_negation
int_value (20)
int_value (27)
add_call_chain(<<e,a,a,A>>)
add_class(INTEGER)
add_class(c)
int_value (10)
add_query("B", "D", <<["e", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["c", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["B", "INTEGER"], ["B", "c"], ["d", "BOOLEAN"]>>, "b")
add_command("D", "c", <<["d", "BOOLEAN"], ["c", "INTEGER"], ["d", "C"], ["b", "D"], ["D", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "d"]>>)
numerical_negation
int_value (46)
conjunction
numerical_negation
quotient
add_call_chain(<<a,c,A,e,BOOLEAN,c>>)
add_attribute("D", "c", "A")
int_value (13)
type_check
add_command("d", "C", <<["B", "INTEGER"], ["c", "BOOLEAN"], ["D", "BOOLEAN"]>>)
less_than
numerical_negation
add_command("c", "c", <<["A", "INTEGER"], ["a", "INTEGER"], ["B", "INTEGER"], ["INTEGER", "A"], ["B", "INTEGER"]>>)
int_value (14)
add_call_chain(<<c,BOOLEAN,b,C,e,D>>)
add_command("D", "C", <<["B", "INTEGER"], ["c", "INTEGER"], ["BOOLEAN", "d"], ["C", "BOOLEAN"], ["INTEGER", "INTEGER"], ["a", "c"], ["D", "INTEGER"], ["e", "INTEGER"], ["C", "A"]>>)
conjunction
add_call_chain(<<d,d,c,C,a,e,c,INTEGER,B>>)
