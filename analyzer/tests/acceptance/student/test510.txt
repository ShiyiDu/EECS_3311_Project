generate_java_code
add_attribute("C", "a", "INTEGER")
conjunction
add_query("b", "b", <<["INTEGER", "BOOLEAN"], ["C", "INTEGER"], ["b", "INTEGER"]>>, "a")
add_query("e", "b", <<["D", "INTEGER"], ["C", "D"], ["a", "INTEGER"], ["e", "A"], ["b", "c"], ["A", "BOOLEAN"]>>, "a")
numerical_negation
bool_value (true)
logical_negation
int_value (23)
logical_negation
add_attribute("e", "A", "BOOLEAN")
logical_negation
greater_than
add_call_chain(<<D,A,D>>)
add_call_chain(<<A,A,A,A,D,D,B,INTEGER,C>>)
logical_negation
add_attribute("b", "INTEGER", "INTEGER")
add_command("A", "b", <<["d", "b"], ["INTEGER", "BOOLEAN"], ["INTEGER", "INTEGER"], ["D", "d"], ["D", "BOOLEAN"], ["d", "d"], ["C", "BOOLEAN"], ["B", "B"], ["d", "BOOLEAN"]>>)
add_call_chain(<<A,d,C,b>>)
add_query("INTEGER", "c", <<["b", "INTEGER"], ["a", "C"], ["D", "BOOLEAN"], ["b", "INTEGER"], ["e", "c"], ["D", "BOOLEAN"]>>, "c")
add_attribute("C", "B", "b")
conjunction
add_query("A", "e", <<["B", "a"], ["e", "b"]>>, "BOOLEAN")
logical_negation
add_call_chain(<<C>>)
bool_value (false)
add_call_chain(<<D>>)
less_than
int_value (39)
add_query("C", "a", <<["d", "INTEGER"], ["INTEGER", "c"], ["BOOLEAN", "INTEGER"], ["d", "INTEGER"], ["d", "BOOLEAN"]>>, "d")
add_command("a", "e", <<["D", "BOOLEAN"], ["c", "INTEGER"]>>)
add_class(B)
add_query("A", "C", <<["A", "INTEGER"], ["b", "a"], ["C", "BOOLEAN"], ["B", "INTEGER"], ["B", "B"], ["c", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["B", "BOOLEAN"]>>, "a")
add_attribute("c", "d", "INTEGER")
add_command("a", "D", <<["c", "INTEGER"], ["a", "BOOLEAN"], ["d", "BOOLEAN"]>>)
type_check
int_value (33)
logical_negation
less_than
add_attribute("b", "D", "BOOLEAN")
add_query("A", "INTEGER", <<["c", "INTEGER"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "INTEGER"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["e", "D"], ["a", "B"]>>, "B")
add_attribute("B", "D", "INTEGER")
add_attribute("e", "A", "BOOLEAN")
int_value (22)
logical_negation
add_command("c", "b", <<["A", "D"], ["d", "INTEGER"], ["a", "B"], ["INTEGER", "INTEGER"], ["b", "INTEGER"], ["A", "BOOLEAN"]>>)
add_attribute("A", "C", "e")
add_class(b)
bool_value (false)
int_value (7)
add_query("D", "a", <<["c", "c"], ["c", "e"], ["d", "BOOLEAN"], ["A", "INTEGER"], ["C", "INTEGER"], ["B", "a"]>>, "D")
logical_negation
logical_negation
modulo
bool_value (true)
int_value (2)
less_than
add_query("A", "A", <<["d", "BOOLEAN"], ["b", "INTEGER"], ["e", "BOOLEAN"], ["B", "INTEGER"], ["e", "INTEGER"], ["e", "d"], ["b", "BOOLEAN"], ["e", "B"], ["D", "b"]>>, "D")
add_command("C", "D", <<["A", "INTEGER"], ["a", "BOOLEAN"]>>)
disjunction
logical_negation
numerical_negation
numerical_negation
add_query("C", "D", <<["e", "INTEGER"], ["a", "INTEGER"], ["a", "INTEGER"], ["a", "INTEGER"], ["e", "INTEGER"], ["a", "INTEGER"], ["b", "BOOLEAN"]>>, "INTEGER")
less_than
add_command("d", "a", <<["a", "BOOLEAN"], ["e", "INTEGER"], ["c", "INTEGER"], ["b", "INTEGER"], ["b", "d"], ["a", "BOOLEAN"]>>)
conjunction
bool_value (false)
logical_negation
bool_value (false)
add_call_chain(<<INTEGER,c>>)
add_query("d", "c", <<["A", "B"], ["D", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["d", "INTEGER"], ["a", "BOOLEAN"], ["INTEGER", "e"]>>, "D")
bool_value (false)
logical_negation
add_class(INTEGER)
add_call_chain(<<a,A,b,b,e,C,a,INTEGER,e>>)
add_attribute("BOOLEAN", "B", "INTEGER")
add_call_chain(<<C,B,e,d,d>>)
add_call_chain(<<B,c>>)
type_check
add_call_chain(<<b,c,A,c,BOOLEAN,BOOLEAN>>)
bool_value (true)
add_attribute("C", "B", "e")
add_attribute("A", "B", "INTEGER")
add_attribute("A", "d", "BOOLEAN")
add_class(BOOLEAN)
add_call_chain(<<a,B,b,B,B,BOOLEAN,A,c>>)
add_class(e)
conjunction
add_query("D", "BOOLEAN", <<["e", "INTEGER"], ["C", "BOOLEAN"], ["d", "B"], ["B", "INTEGER"], ["INTEGER", "INTEGER"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["C", "BOOLEAN"]>>, "BOOLEAN")
add_call_chain(<<e,b,B,b,D>>)
add_call_chain(<<c,A,D,INTEGER,D>>)
int_value (39)
generate_java_code
bool_value (true)
bool_value (true)
add_class(b)
numerical_negation
logical_negation
logical_negation
multiplication
type_check
add_query("B", "d", <<["B", "INTEGER"], ["b", "A"], ["d", "INTEGER"], ["A", "BOOLEAN"], ["c", "BOOLEAN"]>>, "C")
addition
generate_java_code
add_command("C", "b", <<["c", "INTEGER"], ["c", "INTEGER"]>>)
add_query("B", "c", <<["c", "BOOLEAN"], ["A", "BOOLEAN"]>>, "B")
add_call_chain(<<c,b>>)
greater_than
add_call_chain(<<A,a,B,a,b,c,B>>)
add_call_chain(<<A,D,c,B,D,D>>)
add_attribute("c", "a", "BOOLEAN")
conjunction
add_command("d", "e", <<["e", "INTEGER"], ["c", "a"], ["BOOLEAN", "INTEGER"], ["a", "B"], ["c", "BOOLEAN"], ["B", "INTEGER"], ["b", "INTEGER"]>>)
add_attribute("b", "A", "b")
add_class(A)
less_than
logical_negation
bool_value (false)
add_class(c)
add_call_chain(<<A,C>>)
int_value (39)
add_class(D)
type_check
type_check
type_check
add_class(c)
add_attribute("d", "C", "BOOLEAN")
numerical_negation
numerical_negation
add_query("a", "c", <<["C", "BOOLEAN"]>>, "b")
numerical_negation
add_query("a", "INTEGER", <<["d", "BOOLEAN"], ["c", "INTEGER"], ["a", "INTEGER"]>>, "c")
numerical_negation
greater_than
bool_value (true)
add_query("C", "e", <<["a", "a"], ["B", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["C", "D"]>>, "a")
add_attribute("A", "C", "BOOLEAN")
int_value (44)
add_call_chain(<<d,A,A,c,INTEGER,c,A>>)
int_value (14)
add_class(D)
int_value (43)
add_query("b", "b", <<["C", "B"], ["BOOLEAN", "BOOLEAN"], ["B", "b"], ["A", "B"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["A", "INTEGER"], ["a", "BOOLEAN"], ["C", "b"]>>, "e")
int_value (37)
add_call_chain(<<a,BOOLEAN>>)
add_call_chain(<<a,BOOLEAN>>)
add_class(C)
generate_java_code
add_command("A", "B", <<["d", "D"], ["B", "d"], ["d", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "a"], ["e", "INTEGER"]>>)
add_attribute("d", "c", "B")
add_call_chain(<<c,b,D,A,e,b,b>>)
add_call_chain(<<B,A,e,C>>)
int_value (6)
disjunction
equals
add_call_chain(<<d>>)
generate_java_code
add_command("a", "B", <<["B", "B"], ["C", "INTEGER"], ["B", "B"], ["A", "B"]>>)
numerical_negation
int_value (3)
add_command("b", "e", <<["B", "BOOLEAN"], ["d", "INTEGER"], ["a", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["b", "B"], ["e", "BOOLEAN"], ["e", "B"], ["d", "e"]>>)
modulo
bool_value (false)
numerical_negation
add_command("A", "d", <<["C", "a"], ["D", "INTEGER"], ["C", "INTEGER"]>>)
add_query("B", "A", <<["INTEGER", "B"], ["a", "BOOLEAN"], ["b", "INTEGER"], ["C", "INTEGER"], ["INTEGER", "a"], ["D", "INTEGER"], ["C", "INTEGER"], ["D", "a"]>>, "B")
add_call_chain(<<B,a,b,C,e,D>>)
add_call_chain(<<e,a,B,d,A,e,c,d,a>>)
generate_java_code
add_query("C", "d", <<["BOOLEAN", "INTEGER"], ["c", "c"], ["c", "BOOLEAN"], ["a", "A"], ["e", "INTEGER"], ["D", "INTEGER"], ["B", "INTEGER"], ["INTEGER", "INTEGER"]>>, "D")
equals
generate_java_code
add_attribute("D", "D", "BOOLEAN")
add_query("b", "c", <<["b", "BOOLEAN"], ["b", "a"], ["c", "BOOLEAN"]>>, "C")
generate_java_code
add_query("INTEGER", "a", <<["A", "INTEGER"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "BOOLEAN"]>>, "e")
add_attribute("C", "a", "INTEGER")
add_class(C)
int_value (30)
numerical_negation
quotient
add_call_chain(<<c,a,D,C>>)
add_command("D", "d", <<["INTEGER", "BOOLEAN"], ["B", "INTEGER"], ["INTEGER", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "B"], ["a", "D"], ["d", "e"]>>)
add_class(A)
add_call_chain(<<INTEGER,D,e,c,b,c>>)
add_command("c", "D", <<["B", "BOOLEAN"], ["c", "C"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["a", "C"], ["D", "BOOLEAN"], ["B", "C"], ["e", "INTEGER"]>>)
add_query("B", "e", <<["A", "A"], ["e", "C"], ["B", "a"], ["c", "INTEGER"]>>, "D")
bool_value (true)
add_query("C", "C", <<["A", "INTEGER"], ["D", "BOOLEAN"]>>, "D")
generate_java_code
add_call_chain(<<B,C,b,B,B,B,c>>)
type_check
add_call_chain(<<D,e,INTEGER,e,C,B,e,d>>)
add_call_chain(<<c>>)
add_call_chain(<<c,e,C,INTEGER,A,A,a>>)
modulo
greater_than
logical_negation
type_check
subtraction
generate_java_code
conjunction
int_value (24)
conjunction
addition
add_call_chain(<<c,A,e>>)
add_call_chain(<<c,c,C,e,c,A,a,D>>)
logical_negation
generate_java_code
add_query("C", "B", <<["e", "D"], ["D", "B"], ["D", "INTEGER"], ["BOOLEAN", "c"], ["C", "INTEGER"], ["a", "INTEGER"]>>, "a")
numerical_negation
generate_java_code
add_command("b", "INTEGER", <<["BOOLEAN", "B"], ["a", "C"], ["b", "INTEGER"], ["d", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["INTEGER", "B"], ["c", "INTEGER"], ["e", "BOOLEAN"], ["e", "b"]>>)
add_call_chain(<<B,e,B,INTEGER,b,c,B,d,BOOLEAN>>)
add_command("C", "c", <<["D", "INTEGER"], ["b", "INTEGER"], ["D", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "INTEGER"], ["e", "C"], ["a", "a"], ["D", "c"], ["b", "INTEGER"]>>)
add_query("A", "c", <<["BOOLEAN", "B"], ["B", "BOOLEAN"], ["C", "C"], ["D", "INTEGER"], ["C", "INTEGER"], ["a", "INTEGER"], ["d", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "BOOLEAN"]>>, "A")
add_query("b", "INTEGER", <<["d", "INTEGER"], ["A", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "BOOLEAN"]>>, "c")
generate_java_code
bool_value (true)
logical_negation
add_call_chain(<<d,A,C,BOOLEAN,A,c,d,B,e>>)
add_query("b", "A", <<["e", "c"], ["A", "BOOLEAN"], ["A", "a"], ["D", "BOOLEAN"], ["B", "b"], ["d", "c"], ["B", "INTEGER"], ["INTEGER", "INTEGER"], ["b", "BOOLEAN"]>>, "c")
add_command("d", "d", <<["b", "INTEGER"], ["c", "c"]>>)
add_class(b)
add_query("INTEGER", "a", <<["BOOLEAN", "BOOLEAN"], ["b", "A"], ["C", "INTEGER"], ["c", "BOOLEAN"], ["A", "INTEGER"], ["B", "INTEGER"], ["e", "BOOLEAN"], ["INTEGER", "INTEGER"], ["a", "D"]>>, "BOOLEAN")
add_attribute("C", "d", "BOOLEAN")
add_command("C", "C", <<["A", "BOOLEAN"]>>)
add_call_chain(<<b,c,b,a,b,d,A>>)
add_command("A", "c", <<["A", "INTEGER"], ["c", "INTEGER"], ["a", "b"], ["a", "BOOLEAN"], ["e", "INTEGER"], ["B", "BOOLEAN"]>>)
generate_java_code
bool_value (false)
bool_value (true)
numerical_negation
add_command("A", "C", <<["c", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "INTEGER"], ["e", "INTEGER"], ["a", "b"], ["D", "INTEGER"]>>)
generate_java_code
logical_negation
