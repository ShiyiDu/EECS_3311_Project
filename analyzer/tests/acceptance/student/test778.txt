type_check
add_call_chain(<<B,d,a,b,B>>)
add_call_chain(<<C,INTEGER,C,c,d,INTEGER,e>>)
add_call_chain(<<C,C>>)
add_call_chain(<<c>>)
add_call_chain(<<a,C,d,a,d,e>>)
add_call_chain(<<d,A>>)
conjunction
type_check
less_than
type_check
bool_value (false)
add_query("B", "b", <<["BOOLEAN", "C"], ["b", "D"], ["d", "BOOLEAN"]>>, "D")
logical_negation
add_attribute("D", "a", "BOOLEAN")
modulo
type_check
int_value (5)
logical_negation
add_attribute("A", "c", "BOOLEAN")
conjunction
add_query("d", "c", <<["C", "e"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "e"], ["b", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "A"]>>, "INTEGER")
int_value (15)
add_class(e)
add_class(A)
add_call_chain(<<b,d,d>>)
generate_java_code
add_command("INTEGER", "a", <<["e", "INTEGER"], ["c", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "b"], ["d", "e"], ["A", "INTEGER"], ["d", "d"], ["INTEGER", "BOOLEAN"]>>)
add_call_chain(<<A,B>>)
add_query("c", "c", <<["B", "INTEGER"], ["INTEGER", "a"], ["c", "INTEGER"], ["e", "d"]>>, "d")
add_class(e)
int_value (29)
multiplication
add_class(d)
add_query("C", "b", <<["a", "e"], ["b", "INTEGER"], ["a", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>, "INTEGER")
int_value (4)
add_attribute("B", "BOOLEAN", "INTEGER")
add_query("B", "INTEGER", <<["d", "INTEGER"]>>, "C")
add_command("b", "D", <<["B", "INTEGER"], ["INTEGER", "BOOLEAN"], ["D", "INTEGER"], ["e", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "B"], ["a", "d"], ["e", "A"], ["D", "INTEGER"]>>)
multiplication
add_query("A", "e", <<["D", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "C"], ["D", "b"], ["INTEGER", "d"], ["INTEGER", "BOOLEAN"], ["BOOLEAN", "a"], ["e", "BOOLEAN"], ["A", "e"]>>, "e")
logical_negation
numerical_negation
add_command("b", "e", <<["C", "INTEGER"], ["c", "A"], ["B", "c"], ["e", "INTEGER"], ["C", "BOOLEAN"], ["A", "d"], ["d", "BOOLEAN"]>>)
generate_java_code
bool_value (false)
add_command("C", "d", <<["e", "BOOLEAN"]>>)
numerical_negation
generate_java_code
generate_java_code
type_check
add_attribute("A", "b", "BOOLEAN")
add_call_chain(<<C,e>>)
add_call_chain(<<D,C,B,B,C,B,c,d>>)
add_command("d", "c", <<["C", "a"], ["a", "a"], ["c", "A"], ["D", "a"], ["C", "INTEGER"], ["a", "BOOLEAN"]>>)
add_command("C", "BOOLEAN", <<["C", "C"], ["e", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "INTEGER"], ["e", "INTEGER"], ["B", "B"], ["D", "INTEGER"], ["e", "INTEGER"], ["B", "e"]>>)
add_call_chain(<<C,e,B,A,INTEGER,BOOLEAN>>)
add_query("C", "BOOLEAN", <<["e", "INTEGER"], ["B", "BOOLEAN"], ["e", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "INTEGER"]>>, "C")
add_class(D)
add_class(D)
add_call_chain(<<B,D,C,A,A>>)
add_call_chain(<<d,c,b,A,a,d,a,C,A>>)
greater_than
conjunction
add_command("C", "a", <<["a", "BOOLEAN"], ["e", "A"]>>)
type_check
add_call_chain(<<e,C,C,e,A,d,C>>)
add_attribute("A", "BOOLEAN", "INTEGER")
numerical_negation
int_value (41)
add_call_chain(<<d,D,d,b,e,a,e,a,B>>)
bool_value (true)
add_command("d", "b", <<["INTEGER", "A"], ["D", "INTEGER"]>>)
add_call_chain(<<D,d,B,c,e,D,b,A>>)
logical_negation
int_value (39)
numerical_negation
logical_negation
int_value (10)
add_attribute("e", "d", "INTEGER")
bool_value (false)
add_attribute("e", "b", "INTEGER")
numerical_negation
int_value (11)
add_call_chain(<<b,a,b,e,BOOLEAN,D,C,b>>)
add_query("d", "a", <<["b", "INTEGER"], ["D", "B"], ["b", "B"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["d", "e"], ["b", "C"], ["D", "BOOLEAN"], ["B", "D"]>>, "C")
bool_value (true)
add_command("D", "BOOLEAN", <<["b", "B"], ["d", "e"], ["d", "a"], ["D", "INTEGER"], ["e", "INTEGER"], ["D", "INTEGER"], ["a", "BOOLEAN"], ["c", "INTEGER"]>>)
add_attribute("D", "BOOLEAN", "BOOLEAN")
bool_value (false)
modulo
add_class(e)
add_call_chain(<<INTEGER,A,B,D,D,d>>)
type_check
disjunction
add_attribute("b", "d", "BOOLEAN")
multiplication
add_call_chain(<<a,D,C>>)
int_value (14)
numerical_negation
add_class(a)
conjunction
add_call_chain(<<A,c,BOOLEAN,INTEGER,d,INTEGER,D>>)
generate_java_code
int_value (35)
add_attribute("e", "B", "INTEGER")
add_command("e", "a", <<["INTEGER", "A"], ["c", "INTEGER"], ["c", "INTEGER"], ["c", "c"]>>)
bool_value (false)
bool_value (false)
bool_value (true)
add_class(BOOLEAN)
add_call_chain(<<b,D,B,B,a,c,c,A,INTEGER>>)
add_call_chain(<<D>>)
add_call_chain(<<C,B,d,A,D>>)
add_query("b", "C", <<["B", "INTEGER"], ["A", "BOOLEAN"], ["c", "BOOLEAN"], ["b", "INTEGER"], ["d", "BOOLEAN"], ["c", "c"], ["c", "C"]>>, "a")
int_value (1)
add_call_chain(<<INTEGER,e>>)
type_check
logical_negation
add_query("D", "b", <<["BOOLEAN", "BOOLEAN"], ["C", "b"], ["INTEGER", "INTEGER"], ["a", "INTEGER"], ["C", "INTEGER"], ["e", "a"]>>, "A")
logical_negation
add_query("C", "INTEGER", <<["c", "INTEGER"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["D", "BOOLEAN"], ["D", "INTEGER"]>>, "B")
add_query("c", "e", <<["D", "A"], ["e", "C"], ["c", "INTEGER"], ["BOOLEAN", "c"]>>, "A")
generate_java_code
add_attribute("c", "D", "BOOLEAN")
add_query("A", "e", <<["d", "INTEGER"], ["D", "BOOLEAN"], ["c", "INTEGER"], ["BOOLEAN", "C"]>>, "a")
type_check
add_attribute("D", "D", "BOOLEAN")
add_call_chain(<<C,D,b>>)
int_value (32)
add_call_chain(<<e,D>>)
add_call_chain(<<B,c,C,b,C,b,e,b,a>>)
bool_value (false)
type_check
add_command("a", "d", <<["C", "INTEGER"]>>)
add_command("A", "C", <<["c", "INTEGER"], ["B", "INTEGER"], ["d", "INTEGER"]>>)
bool_value (false)
numerical_negation
add_query("B", "c", <<["e", "e"], ["b", "D"], ["A", "INTEGER"], ["BOOLEAN", "INTEGER"], ["c", "D"], ["D", "INTEGER"], ["d", "d"], ["e", "D"]>>, "e")
numerical_negation
add_query("d", "c", <<["C", "a"], ["e", "b"], ["D", "INTEGER"], ["B", "INTEGER"], ["b", "INTEGER"], ["B", "a"], ["INTEGER", "BOOLEAN"]>>, "a")
less_than
less_than
add_call_chain(<<C,b,B,D,d,C>>)
greater_than
add_attribute("b", "B", "BOOLEAN")
bool_value (true)
int_value (48)
logical_negation
bool_value (false)
add_call_chain(<<e,b>>)
modulo
numerical_negation
quotient
add_class(e)
add_query("INTEGER", "b", <<["INTEGER", "BOOLEAN"]>>, "b")
type_check
type_check
bool_value (false)
add_attribute("D", "INTEGER", "BOOLEAN")
add_call_chain(<<A>>)
generate_java_code
int_value (30)
add_attribute("B", "B", "C")
generate_java_code
generate_java_code
generate_java_code
int_value (24)
add_command("b", "D", <<["e", "INTEGER"], ["C", "BOOLEAN"], ["e", "e"], ["B", "INTEGER"], ["INTEGER", "INTEGER"]>>)
int_value (48)
add_attribute("a", "D", "c")
int_value (3)
add_call_chain(<<C,B,D,e,d,e,b,c,e>>)
generate_java_code
int_value (29)
bool_value (true)
add_query("c", "C", <<["C", "BOOLEAN"], ["e", "INTEGER"], ["b", "BOOLEAN"], ["e", "INTEGER"], ["C", "INTEGER"], ["c", "INTEGER"]>>, "b")
numerical_negation
add_class(a)
type_check
subtraction
subtraction
disjunction
type_check
generate_java_code
logical_negation
bool_value (false)
add_call_chain(<<C,D,e,A,A,A,B,d>>)
greater_than
add_call_chain(<<B,BOOLEAN,c,e,e,d,C>>)
numerical_negation
numerical_negation
add_attribute("B", "a", "INTEGER")
equals
int_value (7)
add_query("D", "A", <<["D", "C"]>>, "B")
add_call_chain(<<B,INTEGER>>)
int_value (32)
generate_java_code
add_class(e)
conjunction
generate_java_code
greater_than
logical_negation
add_query("c", "C", <<["B", "BOOLEAN"], ["e", "INTEGER"], ["C", "INTEGER"], ["B", "e"], ["a", "INTEGER"], ["d", "c"]>>, "A")
add_command("a", "C", <<["a", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "BOOLEAN"]>>)
add_query("d", "D", <<["b", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["e", "BOOLEAN"]>>, "B")
add_attribute("C", "A", "BOOLEAN")
add_query("b", "d", <<["e", "INTEGER"], ["c", "C"], ["c", "BOOLEAN"]>>, "BOOLEAN")
add_call_chain(<<D,B,b,e,a>>)
add_attribute("D", "b", "BOOLEAN")
add_call_chain(<<c,a,b,b,C>>)
add_class(b)
add_call_chain(<<B,BOOLEAN,c,e,a,B,B>>)
int_value (20)
add_query("c", "a", <<["A", "BOOLEAN"], ["b", "INTEGER"], ["e", "BOOLEAN"], ["A", "c"], ["e", "C"], ["B", "D"], ["e", "d"], ["c", "BOOLEAN"]>>, "B")
add_query("B", "d", <<["c", "INTEGER"], ["D", "c"], ["C", "BOOLEAN"], ["d", "INTEGER"], ["e", "BOOLEAN"]>>, "D")
add_call_chain(<<d,d,d,A>>)
addition
type_check
int_value (29)
add_query("D", "D", <<["e", "c"], ["B", "B"], ["d", "INTEGER"], ["A", "INTEGER"], ["B", "c"], ["e", "INTEGER"], ["A", "BOOLEAN"], ["B", "a"]>>, "INTEGER")
add_class(d)
less_than
modulo
numerical_negation
int_value (30)
int_value (13)
add_call_chain(<<b,A,e,INTEGER,C,B,D,INTEGER>>)
add_call_chain(<<e,a,B,d>>)
logical_negation
type_check
add_class(A)
add_query("INTEGER", "b", <<["a", "D"], ["D", "INTEGER"], ["c", "INTEGER"], ["d", "INTEGER"], ["d", "BOOLEAN"]>>, "INTEGER")
numerical_negation
int_value (41)
logical_negation
bool_value (true)
equals
bool_value (false)
disjunction
type_check
add_query("BOOLEAN", "D", <<["INTEGER", "BOOLEAN"]>>, "A")
add_command("B", "C", <<["c", "c"], ["C", "INTEGER"], ["b", "BOOLEAN"], ["e", "INTEGER"], ["a", "BOOLEAN"], ["C", "INTEGER"], ["B", "c"], ["C", "A"], ["B", "BOOLEAN"]>>)
generate_java_code
generate_java_code
int_value (32)
add_call_chain(<<B,e,D,D,B>>)
add_query("INTEGER", "B", <<["B", "INTEGER"], ["D", "e"], ["B", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["d", "INTEGER"], ["a", "a"], ["D", "A"]>>, "INTEGER")
add_command("D", "b", <<["e", "INTEGER"], ["D", "BOOLEAN"], ["BOOLEAN", "D"], ["b", "a"], ["B", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "C"]>>)
logical_negation
add_call_chain(<<A,b,c,B,d,a>>)
