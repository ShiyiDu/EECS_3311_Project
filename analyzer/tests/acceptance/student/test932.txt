numerical_negation
type_check
equals
generate_java_code
add_command("c", "e", <<["b", "d"], ["d", "BOOLEAN"], ["B", "INTEGER"], ["c", "b"], ["B", "INTEGER"]>>)
add_query("D", "a", <<["a", "BOOLEAN"], ["b", "INTEGER"], ["c", "INTEGER"], ["D", "INTEGER"], ["b", "D"], ["b", "BOOLEAN"], ["e", "c"], ["B", "C"]>>, "a")
add_call_chain(<<d,e,INTEGER,A>>)
add_call_chain(<<b,a,A,INTEGER,C,e,b,C,D>>)
modulo
type_check
equals
logical_negation
add_query("A", "c", <<["a", "BOOLEAN"], ["B", "BOOLEAN"], ["INTEGER", "INTEGER"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["A", "c"], ["INTEGER", "INTEGER"], ["C", "INTEGER"]>>, "A")
disjunction
int_value (4)
add_class(INTEGER)
int_value (7)
add_call_chain(<<B,B,A>>)
int_value (43)
type_check
add_call_chain(<<d,a,b,c>>)
numerical_negation
numerical_negation
add_call_chain(<<C,B,e,A,a,A,A>>)
add_attribute("d", "D", "BOOLEAN")
less_than
logical_negation
generate_java_code
add_class(C)
add_attribute("C", "INTEGER", "INTEGER")
add_attribute("BOOLEAN", "b", "BOOLEAN")
conjunction
add_call_chain(<<e>>)
add_command("b", "D", <<["INTEGER", "A"], ["A", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "d"]>>)
add_attribute("BOOLEAN", "a", "BOOLEAN")
add_attribute("e", "e", "INTEGER")
add_attribute("c", "D", "BOOLEAN")
add_attribute("D", "b", "c")
add_class(c)
int_value (38)
add_command("D", "INTEGER", <<["c", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "c"]>>)
int_value (32)
numerical_negation
int_value (44)
add_call_chain(<<e>>)
add_attribute("a", "B", "INTEGER")
logical_negation
generate_java_code
add_call_chain(<<e,b,d,A,D,INTEGER,C>>)
add_call_chain(<<C>>)
bool_value (true)
add_call_chain(<<D>>)
quotient
add_class(a)
logical_negation
modulo
generate_java_code
logical_negation
bool_value (true)
int_value (48)
add_attribute("D", "C", "INTEGER")
add_call_chain(<<a,c,A,B,A,D,BOOLEAN,a>>)
add_command("B", "BOOLEAN", <<["A", "C"], ["B", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["a", "INTEGER"], ["D", "INTEGER"], ["BOOLEAN", "b"]>>)
subtraction
add_command("d", "C", <<["a", "BOOLEAN"], ["b", "INTEGER"], ["c", "B"], ["B", "BOOLEAN"]>>)
add_attribute("C", "e", "BOOLEAN")
add_call_chain(<<B>>)
add_command("e", "BOOLEAN", <<["b", "INTEGER"], ["C", "c"], ["b", "INTEGER"], ["e", "C"], ["C", "INTEGER"], ["C", "d"], ["b", "INTEGER"]>>)
multiplication
logical_negation
add_class(C)
add_attribute("d", "b", "BOOLEAN")
add_query("BOOLEAN", "d", <<["d", "INTEGER"], ["e", "BOOLEAN"]>>, "INTEGER")
generate_java_code
add_call_chain(<<C,B,INTEGER,e>>)
type_check
bool_value (true)
generate_java_code
conjunction
logical_negation
add_command("C", "B", <<["C", "INTEGER"], ["a", "INTEGER"], ["C", "D"], ["b", "B"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["BOOLEAN", "B"], ["A", "BOOLEAN"]>>)
add_query("INTEGER", "d", <<["e", "INTEGER"], ["C", "INTEGER"], ["e", "a"]>>, "B")
add_attribute("c", "e", "e")
add_query("a", "INTEGER", <<["A", "BOOLEAN"]>>, "D")
add_call_chain(<<c,e,D>>)
add_command("a", "d", <<["BOOLEAN", "C"], ["a", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "c"]>>)
add_call_chain(<<A,C,D,c>>)
add_class(d)
add_query("B", "D", <<["INTEGER", "c"], ["c", "INTEGER"], ["d", "INTEGER"], ["B", "d"], ["b", "C"], ["d", "BOOLEAN"]>>, "d")
add_command("B", "D", <<["b", "INTEGER"], ["b", "A"], ["c", "INTEGER"]>>)
add_command("A", "D", <<["D", "INTEGER"], ["a", "INTEGER"], ["D", "b"], ["a", "d"], ["b", "INTEGER"], ["a", "INTEGER"]>>)
add_call_chain(<<a,A>>)
add_call_chain(<<B,C,b,C,C,B>>)
add_class(c)
logical_negation
numerical_negation
quotient
logical_negation
bool_value (false)
add_query("BOOLEAN", "b", <<["e", "BOOLEAN"], ["b", "A"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["INTEGER", "A"], ["B", "D"], ["C", "INTEGER"], ["b", "BOOLEAN"], ["A", "BOOLEAN"]>>, "e")
generate_java_code
add_query("INTEGER", "D", <<["A", "INTEGER"], ["A", "INTEGER"], ["a", "BOOLEAN"]>>, "c")
bool_value (false)
int_value (48)
add_call_chain(<<d,B,d,A>>)
numerical_negation
add_command("e", "A", <<["e", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["e", "a"], ["a", "INTEGER"], ["A", "INTEGER"], ["B", "INTEGER"], ["e", "INTEGER"]>>)
add_query("B", "c", <<["A", "BOOLEAN"], ["e", "INTEGER"], ["D", "INTEGER"], ["B", "INTEGER"], ["e", "c"], ["b", "BOOLEAN"], ["C", "d"], ["e", "INTEGER"], ["D", "BOOLEAN"]>>, "INTEGER")
add_call_chain(<<B,b,D,d,A,BOOLEAN>>)
add_call_chain(<<d,INTEGER,B,D>>)
numerical_negation
add_attribute("B", "BOOLEAN", "BOOLEAN")
add_attribute("a", "C", "B")
add_command("b", "a", <<["e", "INTEGER"], ["c", "A"], ["b", "BOOLEAN"], ["C", "INTEGER"], ["b", "B"], ["B", "BOOLEAN"], ["b", "INTEGER"]>>)
add_query("C", "C", <<["D", "INTEGER"], ["D", "d"], ["e", "B"], ["d", "b"], ["e", "INTEGER"], ["B", "C"], ["d", "d"]>>, "C")
add_call_chain(<<B,e,e,a>>)
generate_java_code
add_class(a)
bool_value (true)
add_call_chain(<<a,b>>)
add_command("C", "D", <<["INTEGER", "INTEGER"], ["A", "BOOLEAN"], ["A", "INTEGER"], ["e", "BOOLEAN"]>>)
add_command("b", "BOOLEAN", <<["a", "INTEGER"], ["B", "d"], ["D", "a"], ["BOOLEAN", "INTEGER"]>>)
add_command("a", "e", <<["D", "BOOLEAN"], ["d", "BOOLEAN"], ["c", "INTEGER"], ["C", "INTEGER"], ["C", "a"], ["a", "BOOLEAN"]>>)
numerical_negation
generate_java_code
add_class(b)
add_query("A", "b", <<["INTEGER", "BOOLEAN"], ["a", "a"], ["b", "BOOLEAN"], ["d", "INTEGER"], ["C", "INTEGER"], ["b", "INTEGER"]>>, "A")
add_call_chain(<<c,C,A,b,C,BOOLEAN,b,d,a>>)
int_value (1)
bool_value (false)
numerical_negation
add_call_chain(<<A,B,A,e,INTEGER,A>>)
add_call_chain(<<INTEGER,D,A,D,BOOLEAN,D,C>>)
subtraction
generate_java_code
numerical_negation
add_command("a", "e", <<["a", "A"]>>)
add_command("d", "A", <<["C", "INTEGER"], ["B", "c"], ["D", "C"], ["B", "INTEGER"], ["d", "INTEGER"], ["c", "BOOLEAN"], ["a", "INTEGER"], ["C", "INTEGER"]>>)
multiplication
int_value (12)
int_value (31)
logical_negation
add_command("INTEGER", "D", <<["D", "INTEGER"], ["D", "INTEGER"], ["B", "B"], ["c", "INTEGER"], ["A", "C"]>>)
multiplication
numerical_negation
type_check
add_call_chain(<<B,D,D,C,C,INTEGER,d>>)
equals
add_query("b", "a", <<["C", "INTEGER"], ["d", "INTEGER"], ["A", "BOOLEAN"], ["c", "b"], ["e", "INTEGER"]>>, "c")
add_call_chain(<<d,C,A>>)
add_attribute("d", "A", "INTEGER")
generate_java_code
modulo
generate_java_code
add_command("C", "d", <<["d", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "INTEGER"], ["A", "INTEGER"], ["e", "C"]>>)
type_check
type_check
add_attribute("BOOLEAN", "c", "INTEGER")
bool_value (false)
type_check
add_attribute("d", "c", "B")
add_attribute("D", "e", "BOOLEAN")
add_call_chain(<<e,D,c,d,a,d,d,C>>)
generate_java_code
int_value (14)
bool_value (true)
add_command("BOOLEAN", "A", <<["B", "BOOLEAN"], ["C", "INTEGER"], ["a", "INTEGER"], ["A", "BOOLEAN"], ["BOOLEAN", "a"], ["b", "INTEGER"], ["D", "INTEGER"]>>)
add_attribute("c", "INTEGER", "BOOLEAN")
add_command("b", "C", <<["d", "BOOLEAN"]>>)
add_call_chain(<<D>>)
generate_java_code
type_check
add_command("B", "A", <<["BOOLEAN", "INTEGER"], ["c", "A"], ["C", "INTEGER"], ["A", "INTEGER"], ["d", "BOOLEAN"], ["B", "INTEGER"], ["a", "INTEGER"], ["e", "e"]>>)
type_check
add_call_chain(<<e,a,a>>)
disjunction
greater_than
add_call_chain(<<A,c,D>>)
numerical_negation
bool_value (false)
add_class(C)
bool_value (false)
bool_value (true)
add_class(C)
conjunction
logical_negation
type_check
add_query("b", "D", <<["A", "B"], ["C", "INTEGER"]>>, "e")
add_call_chain(<<B,d,c,c>>)
add_query("b", "C", <<["INTEGER", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "INTEGER"]>>, "BOOLEAN")
add_call_chain(<<D,B,a,e>>)
add_call_chain(<<c,c>>)
bool_value (false)
logical_negation
add_command("d", "b", <<["A", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "A"], ["BOOLEAN", "B"]>>)
numerical_negation
add_call_chain(<<e,a,d>>)
int_value (34)
add_attribute("BOOLEAN", "c", "c")
generate_java_code
numerical_negation
add_command("e", "B", <<["B", "d"], ["INTEGER", "INTEGER"], ["B", "BOOLEAN"], ["B", "BOOLEAN"]>>)
bool_value (false)
add_query("a", "B", <<["a", "a"], ["A", "D"], ["A", "A"], ["B", "INTEGER"], ["a", "b"], ["c", "INTEGER"], ["D", "INTEGER"]>>, "d")
int_value (9)
add_command("b", "D", <<["a", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["D", "INTEGER"], ["e", "INTEGER"], ["C", "BOOLEAN"], ["B", "INTEGER"], ["B", "INTEGER"], ["C", "D"]>>)
add_command("e", "e", <<["c", "INTEGER"], ["c", "C"]>>)
conjunction
add_query("A", "d", <<["B", "b"], ["e", "e"], ["C", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["e", "D"], ["c", "e"], ["a", "INTEGER"]>>, "b")
add_command("a", "c", <<["B", "BOOLEAN"]>>)
add_query("b", "B", <<["B", "INTEGER"], ["A", "INTEGER"], ["C", "INTEGER"], ["a", "BOOLEAN"], ["a", "a"], ["C", "INTEGER"]>>, "B")
add_command("BOOLEAN", "B", <<["INTEGER", "INTEGER"], ["INTEGER", "INTEGER"], ["c", "D"], ["C", "c"]>>)
type_check
int_value (28)
type_check
add_call_chain(<<c,B,e,e,B,D,b,b,d>>)
int_value (47)
add_query("D", "c", <<["e", "BOOLEAN"], ["e", "INTEGER"], ["b", "INTEGER"], ["e", "BOOLEAN"]>>, "BOOLEAN")
bool_value (false)
add_call_chain(<<e,D,e,b,d,A,BOOLEAN,a>>)
generate_java_code
greater_than
add_call_chain(<<c,BOOLEAN>>)
int_value (29)
add_attribute("INTEGER", "D", "BOOLEAN")
int_value (22)
multiplication
add_command("A", "INTEGER", <<["d", "INTEGER"], ["e", "B"], ["e", "INTEGER"], ["BOOLEAN", "C"], ["d", "BOOLEAN"], ["c", "INTEGER"], ["B", "A"], ["e", "BOOLEAN"]>>)
add_query("b", "c", <<["b", "INTEGER"], ["b", "INTEGER"], ["B", "BOOLEAN"], ["c", "INTEGER"]>>, "d")
add_class(a)
logical_negation
bool_value (false)
add_command("c", "C", <<["c", "INTEGER"]>>)
logical_negation
add_call_chain(<<C,A,INTEGER,D,C,B,B>>)
greater_than
numerical_negation
add_call_chain(<<D,INTEGER,C,B,C,a,a>>)
add_call_chain(<<D>>)
quotient
add_class(c)
add_call_chain(<<c,C,INTEGER,A,c,A,b>>)
type_check
add_call_chain(<<a,B,A,c,b,a,c,A,d>>)
add_call_chain(<<d,D,INTEGER>>)
logical_negation
add_call_chain(<<BOOLEAN,c,B,b>>)
generate_java_code
add_class(a)
add_call_chain(<<D,BOOLEAN,e,B,B,e,e>>)
add_attribute("A", "D", "BOOLEAN")
int_value (3)
add_command("A", "C", <<["e", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["A", "INTEGER"], ["b", "A"], ["C", "C"], ["a", "BOOLEAN"], ["c", "BOOLEAN"], ["d", "c"]>>)
equals
add_call_chain(<<C,e,d,a,d,BOOLEAN,a,A,A>>)
add_command("A", "d", <<["A", "INTEGER"], ["INTEGER", "BOOLEAN"], ["D", "INTEGER"], ["c", "INTEGER"], ["A", "C"], ["d", "INTEGER"], ["c", "A"], ["B", "BOOLEAN"]>>)
numerical_negation
add_class(A)
bool_value (false)
add_command("a", "B", <<["C", "D"], ["c", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "c"], ["A", "D"]>>)
logical_negation
subtraction
add_query("A", "D", <<["a", "BOOLEAN"]>>, "C")
add_call_chain(<<D,D,c,a,a,c,b>>)
