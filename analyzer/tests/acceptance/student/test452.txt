bool_value (false)
int_value (12)
add_call_chain(<<C,d,A,BOOLEAN,B,B,a>>)
add_query("D", "D", <<["d", "INTEGER"], ["b", "D"], ["a", "INTEGER"], ["INTEGER", "BOOLEAN"], ["B", "b"], ["c", "INTEGER"]>>, "BOOLEAN")
generate_java_code
add_command("e", "c", <<["D", "INTEGER"], ["C", "A"], ["d", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["A", "BOOLEAN"], ["e", "INTEGER"], ["C", "BOOLEAN"]>>)
conjunction
logical_negation
quotient
add_call_chain(<<b,e,e,C,C,A>>)
add_attribute("D", "e", "B")
add_command("c", "A", <<["a", "e"], ["c", "INTEGER"], ["INTEGER", "C"], ["D", "A"], ["a", "BOOLEAN"], ["A", "INTEGER"], ["d", "D"], ["e", "BOOLEAN"], ["C", "C"]>>)
add_call_chain(<<C,B>>)
add_call_chain(<<A,a,b,b,e>>)
numerical_negation
add_query("a", "C", <<["B", "c"], ["B", "BOOLEAN"], ["B", "BOOLEAN"]>>, "BOOLEAN")
add_command("e", "C", <<["C", "BOOLEAN"], ["d", "INTEGER"]>>)
add_attribute("C", "d", "D")
bool_value (true)
int_value (46)
add_attribute("B", "C", "A")
add_command("b", "B", <<["INTEGER", "B"], ["C", "BOOLEAN"], ["d", "INTEGER"], ["c", "INTEGER"]>>)
type_check
add_call_chain(<<INTEGER,B,D>>)
bool_value (false)
equals
add_call_chain(<<c,B,B,e,A,d,c,e,d>>)
less_than
bool_value (false)
greater_than
add_query("e", "e", <<["INTEGER", "B"], ["B", "B"], ["C", "A"], ["a", "INTEGER"], ["BOOLEAN", "INTEGER"], ["A", "INTEGER"], ["c", "INTEGER"]>>, "D")
int_value (29)
add_call_chain(<<C,B,b,c,INTEGER,B,b,c>>)
type_check
logical_negation
bool_value (false)
add_query("D", "e", <<["D", "D"], ["D", "e"]>>, "D")
less_than
add_query("INTEGER", "C", <<["a", "INTEGER"], ["e", "BOOLEAN"]>>, "B")
greater_than
add_attribute("BOOLEAN", "b", "INTEGER")
int_value (10)
add_class(A)
add_call_chain(<<D>>)
add_command("INTEGER", "C", <<["c", "BOOLEAN"], ["d", "BOOLEAN"], ["b", "INTEGER"], ["INTEGER", "BOOLEAN"], ["INTEGER", "INTEGER"], ["c", "b"], ["BOOLEAN", "d"]>>)
add_attribute("D", "e", "INTEGER")
add_call_chain(<<BOOLEAN,INTEGER,B,B,B,D>>)
add_call_chain(<<d,B,A,c,BOOLEAN>>)
numerical_negation
int_value (38)
add_query("C", "D", <<["a", "b"], ["a", "A"], ["c", "INTEGER"], ["D", "INTEGER"], ["INTEGER", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "B"]>>, "A")
disjunction
int_value (29)
disjunction
bool_value (false)
numerical_negation
numerical_negation
bool_value (false)
equals
add_command("b", "a", <<["c", "C"], ["A", "A"], ["c", "B"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["d", "D"]>>)
addition
logical_negation
quotient
add_call_chain(<<C,INTEGER,BOOLEAN,b,C>>)
add_call_chain(<<B,c,C,C,INTEGER,BOOLEAN>>)
add_attribute("a", "B", "d")
bool_value (false)
add_class(b)
add_call_chain(<<B,c,D,D,b>>)
generate_java_code
add_call_chain(<<D,a,INTEGER,e,a>>)
logical_negation
add_query("C", "e", <<["INTEGER", "BOOLEAN"], ["B", "INTEGER"], ["b", "BOOLEAN"], ["D", "B"], ["e", "D"], ["a", "INTEGER"], ["B", "C"]>>, "b")
add_query("d", "B", <<["c", "INTEGER"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "d"], ["C", "BOOLEAN"], ["A", "D"], ["a", "c"], ["A", "INTEGER"]>>, "C")
add_command("e", "a", <<["e", "INTEGER"], ["a", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "INTEGER"], ["d", "INTEGER"], ["A", "BOOLEAN"], ["a", "c"]>>)
add_call_chain(<<b,D,b,d,b>>)
numerical_negation
add_call_chain(<<B,D,d,B,e,D,d>>)
numerical_negation
int_value (24)
int_value (14)
add_attribute("D", "c", "C")
conjunction
add_query("INTEGER", "INTEGER", <<["c", "BOOLEAN"], ["e", "d"], ["b", "B"], ["a", "INTEGER"], ["d", "BOOLEAN"], ["D", "INTEGER"], ["A", "INTEGER"], ["C", "C"]>>, "A")
conjunction
logical_negation
add_attribute("BOOLEAN", "c", "B")
add_attribute("C", "b", "A")
bool_value (true)
add_call_chain(<<a,d,A>>)
int_value (30)
add_attribute("d", "C", "INTEGER")
add_query("c", "a", <<["A", "INTEGER"], ["INTEGER", "c"], ["INTEGER", "b"], ["c", "BOOLEAN"]>>, "C")
add_command("b", "B", <<["INTEGER", "BOOLEAN"], ["e", "e"], ["d", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "BOOLEAN"]>>)
type_check
add_query("B", "b", <<["D", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "INTEGER"]>>, "b")
type_check
bool_value (true)
int_value (44)
bool_value (true)
logical_negation
logical_negation
add_query("B", "d", <<["D", "INTEGER"], ["e", "INTEGER"], ["C", "INTEGER"]>>, "C")
numerical_negation
numerical_negation
add_attribute("A", "c", "BOOLEAN")
add_call_chain(<<B,C,c>>)
add_attribute("b", "C", "INTEGER")
add_call_chain(<<INTEGER>>)
add_class(a)
add_command("INTEGER", "b", <<["c", "INTEGER"], ["a", "INTEGER"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["e", "b"], ["c", "INTEGER"], ["d", "BOOLEAN"], ["D", "INTEGER"]>>)
add_query("A", "B", <<["c", "c"], ["C", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["C", "INTEGER"], ["c", "d"], ["d", "BOOLEAN"]>>, "A")
add_command("INTEGER", "b", <<["INTEGER", "b"], ["d", "d"], ["b", "BOOLEAN"], ["a", "INTEGER"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["b", "BOOLEAN"]>>)
add_command("a", "D", <<["e", "INTEGER"], ["B", "INTEGER"]>>)
add_call_chain(<<A,BOOLEAN>>)
generate_java_code
add_attribute("c", "e", "INTEGER")
generate_java_code
add_query("D", "C", <<["D", "A"], ["A", "BOOLEAN"], ["C", "BOOLEAN"]>>, "a")
int_value (1)
add_attribute("d", "e", "D")
generate_java_code
int_value (13)
add_call_chain(<<D,a,B,D,D>>)
generate_java_code
logical_negation
int_value (45)
conjunction
bool_value (false)
add_call_chain(<<D,BOOLEAN,A,A>>)
add_call_chain(<<INTEGER,b,B,A,c,INTEGER,BOOLEAN,D>>)
add_attribute("INTEGER", "A", "INTEGER")
add_attribute("C", "d", "B")
add_attribute("B", "B", "INTEGER")
generate_java_code
add_command("A", "c", <<["C", "a"], ["d", "INTEGER"], ["INTEGER", "BOOLEAN"], ["d", "d"], ["BOOLEAN", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["d", "BOOLEAN"], ["INTEGER", "A"]>>)
bool_value (true)
numerical_negation
int_value (25)
disjunction
numerical_negation
add_call_chain(<<A,D,BOOLEAN,C,a,A>>)
add_attribute("e", "D", "a")
add_command("d", "D", <<["e", "b"], ["b", "B"], ["D", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "A"], ["A", "BOOLEAN"], ["A", "INTEGER"], ["D", "e"]>>)
type_check
int_value (10)
logical_negation
add_query("b", "b", <<["D", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "d"], ["e", "BOOLEAN"], ["D", "INTEGER"], ["b", "INTEGER"]>>, "e")
add_query("BOOLEAN", "C", <<["e", "INTEGER"]>>, "c")
int_value (22)
less_than
add_command("a", "BOOLEAN", <<["BOOLEAN", "e"], ["b", "BOOLEAN"], ["e", "C"], ["B", "C"]>>)
add_call_chain(<<C,B,c>>)
bool_value (true)
numerical_negation
add_command("D", "e", <<["B", "INTEGER"], ["e", "BOOLEAN"], ["A", "INTEGER"]>>)
add_command("b", "d", <<["a", "C"], ["e", "INTEGER"], ["INTEGER", "INTEGER"], ["B", "A"], ["A", "BOOLEAN"]>>)
add_command("B", "c", <<["b", "A"], ["a", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["e", "INTEGER"], ["A", "INTEGER"]>>)
generate_java_code
disjunction
add_command("b", "A", <<["b", "BOOLEAN"], ["B", "INTEGER"], ["A", "INTEGER"], ["d", "BOOLEAN"]>>)
add_command("c", "a", <<["b", "c"]>>)
add_command("D", "D", <<["A", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "INTEGER"]>>)
add_command("A", "B", <<["C", "b"]>>)
bool_value (true)
numerical_negation
greater_than
add_call_chain(<<a>>)
equals
add_class(b)
logical_negation
logical_negation
type_check
add_attribute("a", "D", "BOOLEAN")
add_call_chain(<<c,a,D,A,a,A,b,B>>)
type_check
add_call_chain(<<A>>)
int_value (45)
add_query("B", "B", <<["e", "BOOLEAN"]>>, "A")
numerical_negation
numerical_negation
equals
int_value (29)
int_value (27)
add_command("a", "e", <<["b", "INTEGER"], ["b", "INTEGER"], ["B", "BOOLEAN"], ["B", "INTEGER"], ["b", "B"]>>)
int_value (30)
int_value (30)
add_attribute("d", "c", "INTEGER")
add_attribute("C", "BOOLEAN", "BOOLEAN")
bool_value (false)
logical_negation
add_query("b", "e", <<["d", "BOOLEAN"], ["c", "INTEGER"], ["c", "BOOLEAN"], ["A", "INTEGER"], ["B", "c"], ["c", "BOOLEAN"]>>, "c")
add_command("e", "A", <<["C", "INTEGER"], ["D", "d"], ["c", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["e", "INTEGER"], ["C", "BOOLEAN"]>>)
add_class(b)
add_attribute("C", "BOOLEAN", "BOOLEAN")
disjunction
add_attribute("B", "B", "d")
add_call_chain(<<c>>)
add_command("C", "B", <<["C", "a"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["c", "BOOLEAN"], ["c", "BOOLEAN"]>>)
add_command("b", "e", <<["A", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["BOOLEAN", "C"]>>)
greater_than
less_than
add_query("b", "A", <<["e", "BOOLEAN"], ["a", "A"], ["a", "BOOLEAN"], ["D", "D"], ["B", "b"]>>, "A")
logical_negation
add_query("e", "D", <<["d", "INTEGER"], ["B", "INTEGER"], ["D", "BOOLEAN"]>>, "e")
add_query("b", "c", <<["b", "BOOLEAN"], ["C", "B"], ["C", "b"], ["D", "D"], ["C", "A"], ["A", "e"]>>, "D")
numerical_negation
bool_value (true)
add_attribute("D", "e", "INTEGER")
add_command("d", "D", <<["C", "B"]>>)
add_command("c", "b", <<["C", "c"], ["d", "INTEGER"]>>)
add_call_chain(<<C,a,a,C,B,C,a,C,A>>)
add_call_chain(<<B,A,D,e,B,B>>)
add_call_chain(<<c,e,e,D>>)
add_command("D", "e", <<["D", "BOOLEAN"], ["d", "INTEGER"], ["a", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
int_value (5)
add_call_chain(<<a,e,b>>)
add_attribute("D", "C", "BOOLEAN")
type_check
bool_value (false)
