add_call_chain(<<e,A,c,D,a,a>>)
add_call_chain(<<D,B,C,INTEGER,e,d,BOOLEAN,B,b>>)
numerical_negation
disjunction
int_value (37)
logical_negation
add_call_chain(<<a,a,C,a>>)
add_attribute("e", "A", "BOOLEAN")
add_query("A", "A", <<["e", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "INTEGER"], ["d", "INTEGER"]>>, "b")
bool_value (false)
type_check
logical_negation
bool_value (false)
int_value (41)
add_call_chain(<<e,A,C,C,e,B,B,C,d>>)
add_attribute("a", "d", "C")
add_attribute("d", "d", "INTEGER")
equals
add_command("B", "BOOLEAN", <<["D", "e"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["A", "A"], ["BOOLEAN", "B"], ["e", "INTEGER"]>>)
add_call_chain(<<D,D,INTEGER,e>>)
add_call_chain(<<C,b>>)
add_attribute("e", "C", "INTEGER")
numerical_negation
add_call_chain(<<B,a,INTEGER,BOOLEAN>>)
addition
add_command("INTEGER", "C", <<["B", "B"]>>)
add_call_chain(<<D>>)
int_value (6)
bool_value (true)
numerical_negation
add_class(a)
add_command("INTEGER", "e", <<["b", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "INTEGER"], ["e", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "INTEGER"], ["D", "BOOLEAN"]>>)
add_command("BOOLEAN", "d", <<["e", "B"], ["c", "c"], ["B", "e"], ["A", "C"], ["C", "C"], ["c", "BOOLEAN"], ["c", "INTEGER"], ["a", "e"], ["e", "c"]>>)
equals
add_attribute("a", "INTEGER", "INTEGER")
type_check
add_attribute("e", "B", "INTEGER")
add_call_chain(<<INTEGER,C,b>>)
conjunction
bool_value (false)
add_command("a", "c", <<["e", "INTEGER"], ["b", "e"], ["b", "C"], ["C", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "INTEGER"], ["c", "BOOLEAN"]>>)
add_query("c", "d", <<["A", "INTEGER"], ["D", "B"]>>, "A")
add_query("D", "b", <<["d", "d"], ["B", "INTEGER"], ["C", "BOOLEAN"], ["A", "A"]>>, "A")
subtraction
add_command("c", "e", <<["A", "INTEGER"], ["e", "b"], ["A", "d"]>>)
numerical_negation
modulo
numerical_negation
generate_java_code
type_check
add_call_chain(<<b,c,INTEGER,BOOLEAN,C,C>>)
add_attribute("D", "d", "INTEGER")
add_command("c", "c", <<["D", "BOOLEAN"], ["e", "B"], ["A", "C"], ["d", "BOOLEAN"], ["INTEGER", "C"], ["A", "C"]>>)
add_attribute("b", "BOOLEAN", "BOOLEAN")
bool_value (false)
generate_java_code
bool_value (true)
add_command("b", "D", <<["D", "B"], ["d", "BOOLEAN"]>>)
add_attribute("b", "C", "BOOLEAN")
add_call_chain(<<B,A>>)
add_class(e)
add_query("B", "a", <<["BOOLEAN", "D"], ["b", "BOOLEAN"], ["d", "INTEGER"], ["INTEGER", "INTEGER"], ["B", "INTEGER"], ["B", "BOOLEAN"], ["C", "c"], ["INTEGER", "INTEGER"], ["D", "INTEGER"]>>, "D")
int_value (28)
add_call_chain(<<INTEGER,e,A,e,INTEGER,d,d,C,B>>)
int_value (10)
int_value (2)
add_query("C", "e", <<["b", "BOOLEAN"]>>, "b")
numerical_negation
logical_negation
disjunction
add_call_chain(<<B,d,a,A,a,e,C,B,a>>)
add_call_chain(<<C,B>>)
quotient
add_class(b)
int_value (3)
less_than
add_attribute("d", "A", "BOOLEAN")
add_attribute("INTEGER", "D", "BOOLEAN")
numerical_negation
add_command("c", "a", <<["a", "d"]>>)
add_command("c", "d", <<["INTEGER", "INTEGER"], ["B", "c"], ["B", "D"], ["B", "BOOLEAN"], ["C", "D"]>>)
bool_value (false)
int_value (33)
logical_negation
logical_negation
add_command("d", "d", <<["B", "BOOLEAN"], ["c", "INTEGER"], ["e", "INTEGER"], ["e", "INTEGER"], ["B", "e"], ["b", "BOOLEAN"], ["a", "BOOLEAN"]>>)
int_value (36)
add_command("C", "a", <<["D", "c"]>>)
add_call_chain(<<c,INTEGER,D,BOOLEAN,C,e,e>>)
bool_value (false)
int_value (34)
add_attribute("c", "A", "INTEGER")
equals
add_call_chain(<<a,A>>)
add_query("C", "BOOLEAN", <<["A", "C"], ["A", "A"], ["BOOLEAN", "BOOLEAN"]>>, "a")
addition
add_command("e", "A", <<["e", "B"]>>)
int_value (7)
multiplication
numerical_negation
add_attribute("INTEGER", "D", "c")
add_command("INTEGER", "A", <<["D", "INTEGER"], ["b", "INTEGER"]>>)
add_call_chain(<<c,d,BOOLEAN,c>>)
add_class(A)
add_command("c", "c", <<["D", "BOOLEAN"], ["a", "BOOLEAN"], ["BOOLEAN", "A"], ["D", "D"], ["e", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "a"], ["a", "B"]>>)
add_call_chain(<<c,C,D,A>>)
add_query("b", "c", <<["D", "INTEGER"], ["B", "INTEGER"], ["d", "C"], ["INTEGER", "INTEGER"], ["e", "B"], ["INTEGER", "B"], ["a", "C"]>>, "a")
logical_negation
add_call_chain(<<INTEGER,a,C,c,D,e>>)
greater_than
add_call_chain(<<INTEGER,e,D>>)
add_call_chain(<<A>>)
add_class(e)
add_class(B)
add_attribute("e", "d", "D")
bool_value (true)
subtraction
add_command("INTEGER", "A", <<["C", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "A"], ["C", "BOOLEAN"], ["c", "a"], ["D", "a"]>>)
add_call_chain(<<A>>)
bool_value (false)
logical_negation
add_attribute("e", "a", "BOOLEAN")
bool_value (true)
numerical_negation
conjunction
logical_negation
add_attribute("a", "a", "INTEGER")
disjunction
add_call_chain(<<d,c,b,D,c>>)
add_attribute("A", "B", "d")
type_check
int_value (9)
bool_value (false)
add_call_chain(<<D,A,B,C,BOOLEAN,A,c>>)
add_call_chain(<<A,A,c>>)
bool_value (false)
greater_than
add_query("C", "INTEGER", <<["BOOLEAN", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "b"], ["B", "INTEGER"]>>, "BOOLEAN")
logical_negation
generate_java_code
type_check
add_call_chain(<<D,a,c,D,d>>)
logical_negation
add_query("A", "C", <<["C", "INTEGER"], ["e", "BOOLEAN"]>>, "a")
disjunction
quotient
int_value (12)
add_query("c", "A", <<["C", "a"], ["D", "BOOLEAN"], ["e", "BOOLEAN"]>>, "b")
add_attribute("A", "INTEGER", "INTEGER")
add_command("BOOLEAN", "C", <<["c", "INTEGER"], ["INTEGER", "c"], ["B", "INTEGER"], ["B", "INTEGER"], ["B", "BOOLEAN"]>>)
add_query("A", "C", <<["c", "BOOLEAN"], ["e", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["D", "INTEGER"], ["a", "e"], ["B", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "A"]>>, "A")
add_attribute("BOOLEAN", "b", "BOOLEAN")
add_call_chain(<<a,A>>)
add_attribute("BOOLEAN", "A", "BOOLEAN")
add_command("A", "A", <<["B", "a"], ["c", "BOOLEAN"], ["C", "a"], ["e", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "BOOLEAN"], ["d", "B"]>>)
add_attribute("D", "C", "INTEGER")
add_command("A", "C", <<["e", "d"], ["C", "INTEGER"], ["b", "BOOLEAN"], ["D", "INTEGER"], ["a", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["C", "INTEGER"], ["B", "A"]>>)
add_call_chain(<<b,D,D,A,D>>)
int_value (30)
add_class(C)
int_value (38)
logical_negation
add_call_chain(<<d,a,B>>)
add_call_chain(<<b,b,d,d,c,c>>)
add_command("C", "c", <<["d", "INTEGER"], ["d", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["b", "INTEGER"], ["B", "d"]>>)
logical_negation
bool_value (true)
add_command("D", "C", <<["C", "INTEGER"], ["A", "d"], ["B", "INTEGER"], ["d", "INTEGER"], ["A", "BOOLEAN"], ["a", "C"]>>)
add_attribute("D", "a", "b")
add_call_chain(<<C,b,INTEGER>>)
add_query("C", "b", <<["B", "A"], ["d", "INTEGER"]>>, "D")
addition
add_class(A)
int_value (31)
int_value (6)
add_call_chain(<<B,b,c,d,A,e,d,b>>)
conjunction
add_query("c", "B", <<["d", "BOOLEAN"]>>, "d")
conjunction
add_class(C)
logical_negation
add_command("C", "D", <<["INTEGER", "INTEGER"], ["INTEGER", "A"], ["a", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["d", "INTEGER"]>>)
add_query("C", "D", <<["A", "a"]>>, "C")
add_attribute("BOOLEAN", "C", "INTEGER")
add_call_chain(<<a,A,INTEGER,B,b>>)
numerical_negation
bool_value (true)
logical_negation
add_call_chain(<<B,INTEGER,a,e,c>>)
add_call_chain(<<INTEGER,c,c,c,b,c,a,c,B>>)
numerical_negation
add_call_chain(<<e,BOOLEAN,A,e,D,B,d,a,b>>)
add_attribute("d", "e", "BOOLEAN")
add_call_chain(<<e,D>>)
add_call_chain(<<A,a,d,C,D,A,A>>)
numerical_negation
add_call_chain(<<D,b,B,e,INTEGER>>)
logical_negation
generate_java_code
int_value (29)
conjunction
generate_java_code
bool_value (true)
int_value (1)
add_query("e", "B", <<["c", "INTEGER"], ["D", "BOOLEAN"]>>, "D")
addition
generate_java_code
add_call_chain(<<a,A,B,B,b,C,b>>)
add_query("e", "INTEGER", <<["d", "e"], ["C", "BOOLEAN"], ["C", "BOOLEAN"]>>, "e")
bool_value (false)
less_than
disjunction
logical_negation
add_call_chain(<<A,C,A,D,e,d,d>>)
type_check
type_check
generate_java_code
generate_java_code
bool_value (true)
int_value (15)
add_query("a", "d", <<["e", "c"], ["c", "INTEGER"], ["e", "D"], ["C", "INTEGER"]>>, "INTEGER")
int_value (47)
generate_java_code
disjunction
add_call_chain(<<c,c,D,c,INTEGER,c,B,A>>)
logical_negation
add_attribute("d", "d", "INTEGER")
add_class(e)
int_value (31)
disjunction
add_class(c)
