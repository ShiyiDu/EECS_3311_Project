add_call_chain(<<D,d,c,C,BOOLEAN,c,D>>)
add_attribute("D", "a", "INTEGER")
numerical_negation
add_query("b", "d", <<["B", "C"], ["A", "A"], ["e", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["INTEGER", "INTEGER"], ["e", "D"]>>, "A")
logical_negation
add_query("B", "A", <<["b", "INTEGER"], ["A", "INTEGER"], ["BOOLEAN", "B"]>>, "c")
add_attribute("e", "INTEGER", "BOOLEAN")
numerical_negation
add_attribute("A", "C", "D")
add_command("B", "a", <<["D", "BOOLEAN"], ["B", "BOOLEAN"]>>)
add_command("A", "B", <<["e", "BOOLEAN"], ["a", "b"]>>)
add_command("b", "A", <<["b", "c"], ["D", "d"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "D"], ["d", "D"]>>)
int_value (31)
add_attribute("D", "a", "INTEGER")
numerical_negation
bool_value (true)
add_attribute("c", "c", "BOOLEAN")
add_call_chain(<<INTEGER,A,c,b,D,d,c>>)
add_call_chain(<<c,c,e>>)
greater_than
numerical_negation
int_value (4)
bool_value (false)
int_value (45)
add_attribute("a", "a", "INTEGER")
add_call_chain(<<BOOLEAN,d,BOOLEAN,c,D,D,A,a>>)
add_attribute("D", "d", "BOOLEAN")
greater_than
type_check
add_query("D", "b", <<["c", "BOOLEAN"], ["b", "D"], ["INTEGER", "INTEGER"], ["A", "B"], ["a", "e"], ["BOOLEAN", "BOOLEAN"], ["INTEGER", "INTEGER"], ["D", "BOOLEAN"], ["e", "BOOLEAN"]>>, "c")
add_command("b", "d", <<["b", "a"], ["c", "a"], ["C", "BOOLEAN"], ["c", "D"]>>)
add_call_chain(<<D,C,D,C,A>>)
add_command("INTEGER", "BOOLEAN", <<["c", "e"], ["B", "B"], ["B", "BOOLEAN"], ["c", "INTEGER"], ["b", "INTEGER"]>>)
less_than
add_class(BOOLEAN)
int_value (17)
add_attribute("d", "BOOLEAN", "BOOLEAN")
equals
generate_java_code
add_attribute("a", "c", "BOOLEAN")
less_than
bool_value (true)
add_call_chain(<<C,d,D,d,A,C,D>>)
generate_java_code
add_attribute("C", "c", "INTEGER")
add_query("C", "BOOLEAN", <<["C", "BOOLEAN"], ["b", "b"], ["e", "e"], ["B", "A"], ["a", "INTEGER"], ["a", "B"], ["c", "C"], ["C", "b"], ["d", "c"]>>, "a")
int_value (41)
add_attribute("C", "INTEGER", "b")
logical_negation
type_check
int_value (41)
multiplication
add_command("D", "C", <<["d", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>)
add_command("d", "e", <<["B", "BOOLEAN"], ["e", "A"], ["A", "A"], ["C", "INTEGER"], ["d", "BOOLEAN"], ["C", "A"], ["c", "INTEGER"], ["B", "INTEGER"]>>)
type_check
int_value (19)
numerical_negation
add_command("e", "INTEGER", <<["d", "BOOLEAN"], ["A", "BOOLEAN"], ["INTEGER", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>)
add_query("d", "D", <<["B", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "b"], ["d", "INTEGER"], ["B", "BOOLEAN"], ["b", "C"], ["d", "BOOLEAN"], ["b", "BOOLEAN"]>>, "BOOLEAN")
disjunction
add_attribute("B", "d", "BOOLEAN")
add_call_chain(<<D,INTEGER>>)
add_class(D)
numerical_negation
bool_value (false)
add_attribute("D", "b", "INTEGER")
add_call_chain(<<d,BOOLEAN,BOOLEAN,B,e,D,B,BOOLEAN>>)
type_check
add_command("A", "A", <<["b", "INTEGER"], ["e", "BOOLEAN"]>>)
add_call_chain(<<C,C,B,d,b,e,A,C>>)
type_check
logical_negation
add_call_chain(<<e,A,B,D,D,e,B>>)
add_query("B", "A", <<["A", "C"], ["D", "BOOLEAN"], ["c", "C"], ["INTEGER", "D"], ["INTEGER", "INTEGER"], ["a", "BOOLEAN"], ["C", "INTEGER"], ["c", "D"], ["e", "A"]>>, "c")
add_command("c", "B", <<["d", "BOOLEAN"]>>)
generate_java_code
add_query("e", "A", <<["c", "e"], ["c", "C"], ["BOOLEAN", "BOOLEAN"]>>, "d")
addition
int_value (43)
int_value (4)
add_call_chain(<<C,a,D>>)
numerical_negation
numerical_negation
add_class(e)
add_attribute("e", "INTEGER", "A")
add_query("D", "D", <<["C", "INTEGER"], ["INTEGER", "b"], ["e", "e"], ["D", "D"], ["a", "INTEGER"], ["INTEGER", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["D", "INTEGER"]>>, "c")
add_call_chain(<<b,BOOLEAN>>)
add_query("e", "BOOLEAN", <<["d", "BOOLEAN"], ["D", "INTEGER"], ["c", "INTEGER"], ["b", "C"], ["C", "C"], ["b", "BOOLEAN"], ["d", "b"]>>, "b")
logical_negation
add_command("a", "c", <<["b", "BOOLEAN"], ["d", "B"], ["d", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>)
addition
add_attribute("a", "INTEGER", "e")
add_class(B)
logical_negation
add_call_chain(<<BOOLEAN,D,c,b,B,B,INTEGER,BOOLEAN,e>>)
type_check
add_command("e", "BOOLEAN", <<["D", "INTEGER"], ["C", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["D", "INTEGER"], ["a", "INTEGER"], ["C", "BOOLEAN"], ["D", "INTEGER"]>>)
add_attribute("d", "A", "BOOLEAN")
type_check
add_command("e", "BOOLEAN", <<["A", "INTEGER"], ["A", "INTEGER"], ["D", "e"], ["A", "BOOLEAN"], ["C", "B"], ["C", "BOOLEAN"]>>)
logical_negation
add_command("A", "A", <<["A", "INTEGER"], ["D", "BOOLEAN"], ["D", "BOOLEAN"]>>)
add_query("C", "A", <<["d", "d"], ["b", "C"], ["D", "C"], ["A", "INTEGER"]>>, "d")
logical_negation
int_value (48)
bool_value (true)
add_attribute("INTEGER", "e", "BOOLEAN")
type_check
less_than
add_call_chain(<<BOOLEAN,c,e,d,c,BOOLEAN>>)
numerical_negation
add_call_chain(<<A,a,c>>)
generate_java_code
add_query("D", "d", <<["e", "BOOLEAN"], ["B", "b"], ["a", "BOOLEAN"]>>, "b")
generate_java_code
generate_java_code
bool_value (true)
add_attribute("c", "B", "C")
add_command("C", "A", <<["A", "INTEGER"], ["b", "B"], ["A", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["e", "INTEGER"], ["B", "BOOLEAN"], ["e", "INTEGER"], ["B", "INTEGER"]>>)
add_query("d", "a", <<["e", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "BOOLEAN"]>>, "B")
numerical_negation
add_attribute("d", "INTEGER", "INTEGER")
add_query("INTEGER", "a", <<["C", "BOOLEAN"], ["B", "b"], ["B", "B"], ["D", "BOOLEAN"], ["INTEGER", "INTEGER"], ["D", "BOOLEAN"]>>, "D")
add_attribute("c", "INTEGER", "BOOLEAN")
bool_value (false)
add_query("A", "e", <<["b", "a"], ["D", "INTEGER"], ["e", "BOOLEAN"]>>, "B")
numerical_negation
add_attribute("C", "c", "INTEGER")
bool_value (false)
disjunction
add_command("d", "d", <<["B", "INTEGER"], ["B", "BOOLEAN"], ["b", "c"], ["D", "b"]>>)
type_check
add_call_chain(<<e,B,b,C,D>>)
add_command("a", "e", <<["b", "INTEGER"], ["BOOLEAN", "INTEGER"], ["c", "INTEGER"]>>)
numerical_negation
add_attribute("D", "C", "C")
logical_negation
bool_value (false)
add_class(B)
add_call_chain(<<d,a>>)
add_call_chain(<<d,e,a,c,a,e,A,A>>)
add_command("C", "A", <<["b", "INTEGER"], ["D", "BOOLEAN"], ["e", "INTEGER"], ["INTEGER", "a"], ["INTEGER", "INTEGER"]>>)
add_call_chain(<<A,e,A>>)
add_attribute("B", "c", "INTEGER")
add_class(e)
logical_negation
conjunction
greater_than
type_check
add_query("B", "C", <<["C", "INTEGER"], ["a", "INTEGER"], ["INTEGER", "B"], ["INTEGER", "BOOLEAN"]>>, "e")
int_value (32)
bool_value (false)
add_call_chain(<<a,b,A,A,A,d,B>>)
bool_value (true)
conjunction
logical_negation
add_query("d", "C", <<["e", "BOOLEAN"], ["C", "a"]>>, "c")
conjunction
add_command("C", "B", <<["D", "BOOLEAN"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["B", "d"], ["b", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "e"]>>)
int_value (1)
bool_value (true)
numerical_negation
add_class(B)
add_query("D", "INTEGER", <<["C", "BOOLEAN"]>>, "D")
add_query("d", "e", <<["b", "INTEGER"], ["BOOLEAN", "a"], ["b", "BOOLEAN"], ["b", "INTEGER"], ["A", "d"]>>, "a")
add_query("C", "d", <<["A", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "d"], ["a", "INTEGER"], ["INTEGER", "BOOLEAN"], ["a", "INTEGER"], ["d", "INTEGER"], ["B", "BOOLEAN"]>>, "d")
add_attribute("C", "D", "D")
add_call_chain(<<c>>)
numerical_negation
add_call_chain(<<D,A,D>>)
disjunction
add_call_chain(<<INTEGER,D,D,c,A,a>>)
logical_negation
generate_java_code
add_call_chain(<<INTEGER,d,INTEGER,C>>)
add_command("e", "A", <<["a", "INTEGER"]>>)
type_check
bool_value (true)
add_attribute("C", "A", "e")
numerical_negation
add_query("B", "C", <<["e", "INTEGER"], ["A", "B"]>>, "C")
modulo
add_attribute("b", "a", "BOOLEAN")
int_value (18)
add_command("BOOLEAN", "D", <<["d", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "B"], ["BOOLEAN", "INTEGER"], ["c", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "INTEGER"], ["D", "C"], ["B", "INTEGER"]>>)
add_attribute("INTEGER", "B", "INTEGER")
multiplication
numerical_negation
logical_negation
add_attribute("a", "a", "INTEGER")
generate_java_code
type_check
int_value (30)
numerical_negation
int_value (35)
subtraction
add_command("d", "b", <<["D", "INTEGER"]>>)
add_call_chain(<<d,b,e,C,C,D,INTEGER,D,d>>)
logical_negation
multiplication
add_call_chain(<<B,A,b,A,e,D>>)
numerical_negation
add_call_chain(<<a,d>>)
add_call_chain(<<c,BOOLEAN,C,B,d,B,B,INTEGER,a>>)
add_class(B)
addition
add_attribute("B", "D", "INTEGER")
bool_value (true)
int_value (21)
add_class(A)
bool_value (true)
disjunction
generate_java_code
add_class(a)
add_query("e", "A", <<["c", "INTEGER"]>>, "e")
add_class(B)
less_than
numerical_negation
add_query("C", "b", <<["a", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "INTEGER"], ["B", "BOOLEAN"]>>, "A")
add_query("c", "c", <<["INTEGER", "BOOLEAN"], ["a", "INTEGER"], ["D", "A"], ["BOOLEAN", "INTEGER"], ["D", "INTEGER"], ["a", "BOOLEAN"], ["d", "B"]>>, "INTEGER")
add_call_chain(<<INTEGER,D,C,a,A,A,INTEGER,B>>)
quotient
add_command("b", "d", <<["A", "A"]>>)
logical_negation
int_value (35)
add_attribute("d", "D", "C")
add_call_chain(<<D>>)
bool_value (false)
add_command("C", "C", <<["b", "a"]>>)
add_call_chain(<<B,b,BOOLEAN,INTEGER,c,a>>)
bool_value (false)
quotient
