add_command("A", "C", <<["b", "BOOLEAN"], ["a", "C"], ["C", "D"], ["B", "C"]>>)
logical_negation
add_call_chain(<<b>>)
int_value (8)
add_call_chain(<<D,d,D,d,c,e,a>>)
quotient
add_attribute("A", "A", "INTEGER")
add_attribute("c", "d", "BOOLEAN")
int_value (4)
logical_negation
add_command("D", "b", <<["d", "A"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["e", "A"], ["c", "BOOLEAN"], ["C", "INTEGER"]>>)
add_command("d", "D", <<["B", "INTEGER"], ["INTEGER", "B"], ["e", "BOOLEAN"], ["b", "a"], ["C", "INTEGER"], ["c", "INTEGER"]>>)
add_command("a", "C", <<["b", "INTEGER"], ["B", "A"], ["A", "INTEGER"], ["d", "b"], ["C", "INTEGER"], ["b", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
bool_value (false)
conjunction
int_value (11)
disjunction
numerical_negation
numerical_negation
add_attribute("C", "B", "INTEGER")
add_call_chain(<<a,D,D,a>>)
add_call_chain(<<d,D,B,b,D,a,C>>)
greater_than
quotient
add_command("BOOLEAN", "A", <<["D", "BOOLEAN"]>>)
add_call_chain(<<C,B,D,INTEGER,a,d>>)
add_attribute("BOOLEAN", "C", "B")
add_call_chain(<<C,D,BOOLEAN>>)
add_attribute("c", "A", "b")
add_command("e", "C", <<["C", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
add_command("a", "A", <<["d", "BOOLEAN"], ["a", "e"]>>)
type_check
add_query("c", "A", <<["C", "C"], ["c", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["e", "INTEGER"], ["d", "BOOLEAN"], ["INTEGER", "a"]>>, "d")
bool_value (false)
int_value (11)
int_value (31)
generate_java_code
add_call_chain(<<C,c,e,B,A>>)
subtraction
int_value (30)
numerical_negation
add_attribute("a", "e", "b")
add_call_chain(<<A>>)
add_class(c)
add_attribute("b", "B", "INTEGER")
numerical_negation
type_check
int_value (20)
add_attribute("INTEGER", "C", "BOOLEAN")
conjunction
addition
logical_negation
generate_java_code
numerical_negation
int_value (45)
numerical_negation
add_call_chain(<<e,C,d,b,D,b>>)
type_check
add_attribute("B", "C", "C")
add_attribute("C", "d", "d")
int_value (33)
add_attribute("d", "e", "B")
add_call_chain(<<D,A,e,D,A,C,A,d>>)
add_query("C", "D", <<["B", "BOOLEAN"], ["e", "a"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "A"]>>, "B")
add_attribute("INTEGER", "INTEGER", "B")
add_class(e)
add_command("c", "b", <<["INTEGER", "BOOLEAN"], ["B", "BOOLEAN"]>>)
add_call_chain(<<d,a,A,B,A,e,d,e>>)
add_command("BOOLEAN", "B", <<["BOOLEAN", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["BOOLEAN", "INTEGER"], ["a", "BOOLEAN"], ["C", "BOOLEAN"], ["INTEGER", "INTEGER"], ["A", "INTEGER"]>>)
add_attribute("INTEGER", "C", "B")
add_call_chain(<<A,b,B,A,a,c>>)
add_call_chain(<<D,c,A,D,C>>)
int_value (23)
generate_java_code
bool_value (true)
add_command("INTEGER", "d", <<["b", "D"], ["A", "INTEGER"]>>)
bool_value (false)
numerical_negation
generate_java_code
add_query("D", "d", <<["A", "INTEGER"], ["B", "A"], ["D", "BOOLEAN"], ["d", "BOOLEAN"], ["c", "INTEGER"]>>, "e")
numerical_negation
add_call_chain(<<d>>)
add_command("d", "d", <<["d", "A"], ["D", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "C"], ["a", "b"], ["c", "INTEGER"], ["C", "INTEGER"], ["C", "BOOLEAN"]>>)
add_class(B)
numerical_negation
add_query("b", "A", <<["d", "BOOLEAN"], ["INTEGER", "INTEGER"], ["B", "BOOLEAN"]>>, "e")
add_class(INTEGER)
add_class(a)
add_call_chain(<<c,BOOLEAN,B,c,D,C,BOOLEAN,d,a>>)
addition
less_than
add_command("B", "c", <<["D", "BOOLEAN"], ["B", "INTEGER"], ["BOOLEAN", "INTEGER"], ["d", "c"], ["d", "C"], ["b", "INTEGER"]>>)
add_call_chain(<<e>>)
add_command("D", "d", <<["a", "D"]>>)
logical_negation
bool_value (true)
add_attribute("e", "a", "BOOLEAN")
int_value (37)
add_call_chain(<<e,e,B,C,C,B,D,b,INTEGER>>)
add_class(e)
multiplication
conjunction
numerical_negation
add_call_chain(<<c,b>>)
add_command("D", "D", <<["a", "B"], ["D", "b"]>>)
bool_value (false)
int_value (25)
bool_value (false)
add_call_chain(<<e,a,a,A,C>>)
add_command("INTEGER", "b", <<["BOOLEAN", "INTEGER"]>>)
add_query("d", "A", <<["INTEGER", "a"], ["B", "a"], ["a", "A"], ["B", "INTEGER"], ["a", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "D"], ["b", "BOOLEAN"], ["d", "INTEGER"]>>, "A")
add_call_chain(<<D,b,C>>)
add_attribute("c", "A", "INTEGER")
add_command("d", "c", <<["b", "INTEGER"], ["A", "INTEGER"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["B", "BOOLEAN"], ["a", "a"]>>)
add_call_chain(<<C,d,B,d,a>>)
add_call_chain(<<d,D,BOOLEAN,B,c,c,A>>)
add_call_chain(<<e,c,D,B,C>>)
int_value (17)
logical_negation
add_command("B", "d", <<["c", "BOOLEAN"], ["a", "BOOLEAN"], ["b", "INTEGER"], ["B", "BOOLEAN"], ["e", "INTEGER"], ["d", "INTEGER"], ["C", "INTEGER"]>>)
logical_negation
add_call_chain(<<b,D,e,A,A,c,e,b,b>>)
numerical_negation
add_attribute("C", "c", "INTEGER")
equals
numerical_negation
generate_java_code
add_command("a", "D", <<["BOOLEAN", "INTEGER"], ["a", "b"], ["e", "B"], ["C", "INTEGER"], ["d", "INTEGER"], ["a", "d"], ["c", "INTEGER"]>>)
generate_java_code
type_check
numerical_negation
numerical_negation
greater_than
add_class(B)
add_call_chain(<<d,b,C,BOOLEAN,BOOLEAN,C>>)
int_value (32)
int_value (19)
disjunction
bool_value (false)
add_query("d", "a", <<["C", "BOOLEAN"], ["D", "INTEGER"], ["A", "a"], ["d", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["c", "INTEGER"], ["B", "BOOLEAN"], ["c", "BOOLEAN"]>>, "B")
add_class(B)
type_check
add_command("INTEGER", "b", <<["c", "INTEGER"], ["c", "INTEGER"], ["e", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "b"]>>)
add_class(A)
add_call_chain(<<e,c,c>>)
bool_value (false)
add_call_chain(<<a,c,C,D>>)
generate_java_code
add_query("C", "B", <<["B", "BOOLEAN"], ["d", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "BOOLEAN"]>>, "INTEGER")
multiplication
numerical_negation
logical_negation
bool_value (true)
type_check
numerical_negation
add_call_chain(<<D,A,A>>)
int_value (15)
add_call_chain(<<d,a,BOOLEAN>>)
subtraction
add_attribute("c", "D", "INTEGER")
add_call_chain(<<D,B,D,B,c,C,A>>)
numerical_negation
numerical_negation
type_check
quotient
add_call_chain(<<d,D,D,d,C,a,A,D>>)
logical_negation
add_command("b", "D", <<["B", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "A"], ["D", "INTEGER"], ["A", "INTEGER"]>>)
add_attribute("B", "e", "INTEGER")
bool_value (true)
bool_value (false)
bool_value (false)
int_value (21)
numerical_negation
add_call_chain(<<D,A>>)
add_attribute("c", "b", "C")
add_class(d)
add_query("b", "c", <<["C", "a"], ["C", "INTEGER"], ["B", "INTEGER"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["B", "B"], ["e", "d"]>>, "c")
less_than
add_call_chain(<<a,INTEGER,A,BOOLEAN,e,A,a,a>>)
add_query("a", "C", <<["B", "BOOLEAN"]>>, "d")
logical_negation
generate_java_code
add_attribute("A", "c", "INTEGER")
bool_value (true)
greater_than
subtraction
add_call_chain(<<e,a,BOOLEAN,A,d,B>>)
add_class(c)
add_command("c", "B", <<["a", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "INTEGER"], ["a", "INTEGER"]>>)
int_value (41)
add_call_chain(<<b>>)
int_value (43)
logical_negation
greater_than
int_value (45)
int_value (12)
numerical_negation
logical_negation
add_query("INTEGER", "B", <<["e", "e"], ["c", "INTEGER"], ["a", "D"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["d", "b"], ["D", "D"], ["e", "B"], ["b", "BOOLEAN"]>>, "A")
add_query("D", "B", <<["b", "BOOLEAN"], ["B", "BOOLEAN"]>>, "D")
bool_value (false)
type_check
int_value (39)
