generate_java_code
int_value (36)
add_command("C", "b", <<["d", "BOOLEAN"]>>)
add_query("D", "A", <<["c", "b"], ["INTEGER", "BOOLEAN"], ["A", "A"], ["C", "BOOLEAN"], ["INTEGER", "INTEGER"], ["D", "INTEGER"], ["A", "d"]>>, "e")
add_attribute("D", "C", "INTEGER")
numerical_negation
int_value (37)
add_command("BOOLEAN", "d", <<["b", "BOOLEAN"], ["D", "INTEGER"], ["e", "BOOLEAN"], ["d", "e"], ["e", "BOOLEAN"]>>)
add_query("b", "a", <<["C", "D"], ["C", "BOOLEAN"], ["e", "c"], ["C", "c"]>>, "a")
add_call_chain(<<a,INTEGER,b,b,B,e,b,A>>)
add_command("a", "b", <<["INTEGER", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "INTEGER"], ["D", "e"], ["b", "INTEGER"], ["b", "BOOLEAN"]>>)
equals
addition
generate_java_code
numerical_negation
add_class(c)
add_call_chain(<<b,INTEGER,D,B,A,a,c>>)
add_query("A", "a", <<["A", "INTEGER"], ["C", "BOOLEAN"], ["D", "c"], ["b", "BOOLEAN"]>>, "A")
add_attribute("e", "a", "INTEGER")
generate_java_code
bool_value (true)
add_attribute("a", "BOOLEAN", "INTEGER")
add_call_chain(<<d,D,b,b>>)
add_command("D", "a", <<["a", "BOOLEAN"], ["INTEGER", "INTEGER"], ["C", "A"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "INTEGER"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["c", "INTEGER"]>>)
add_command("c", "B", <<["a", "D"]>>)
generate_java_code
add_command("e", "e", <<["d", "INTEGER"], ["B", "b"], ["A", "BOOLEAN"], ["b", "A"], ["e", "BOOLEAN"], ["b", "BOOLEAN"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["B", "BOOLEAN"]>>)
add_class(e)
add_query("d", "e", <<["B", "INTEGER"], ["C", "INTEGER"], ["e", "INTEGER"], ["b", "BOOLEAN"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["d", "BOOLEAN"]>>, "A")
add_call_chain(<<BOOLEAN,B,d,A,A,B,B>>)
add_class(D)
subtraction
logical_negation
logical_negation
conjunction
add_attribute("D", "BOOLEAN", "INTEGER")
add_call_chain(<<b,A,a,A,C,b,BOOLEAN,c>>)
add_query("C", "A", <<["d", "BOOLEAN"], ["c", "INTEGER"], ["D", "INTEGER"], ["INTEGER", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"], ["b", "INTEGER"], ["c", "INTEGER"], ["A", "BOOLEAN"]>>, "D")
bool_value (false)
add_command("A", "c", <<["B", "b"], ["a", "INTEGER"]>>)
add_call_chain(<<A,c,B,D,d,d>>)
add_call_chain(<<B>>)
add_attribute("c", "B", "BOOLEAN")
add_query("e", "a", <<["d", "INTEGER"], ["A", "d"], ["A", "INTEGER"], ["c", "INTEGER"], ["e", "INTEGER"], ["INTEGER", "INTEGER"], ["D", "C"], ["b", "INTEGER"], ["INTEGER", "INTEGER"]>>, "b")
int_value (4)
add_command("C", "b", <<["B", "BOOLEAN"], ["e", "INTEGER"], ["B", "INTEGER"], ["D", "INTEGER"], ["B", "INTEGER"], ["d", "INTEGER"]>>)
multiplication
less_than
add_query("A", "a", <<["C", "BOOLEAN"], ["c", "e"], ["D", "A"], ["INTEGER", "BOOLEAN"], ["A", "INTEGER"]>>, "c")
logical_negation
add_call_chain(<<A,d,c,D,A,A>>)
generate_java_code
add_command("D", "D", <<["B", "BOOLEAN"], ["d", "INTEGER"], ["C", "a"], ["A", "BOOLEAN"], ["A", "BOOLEAN"]>>)
add_query("B", "a", <<["c", "BOOLEAN"], ["c", "D"], ["B", "d"]>>, "c")
generate_java_code
type_check
int_value (6)
logical_negation
multiplication
add_command("b", "A", <<["a", "B"], ["D", "INTEGER"], ["b", "A"], ["C", "C"], ["A", "INTEGER"], ["d", "INTEGER"]>>)
disjunction
add_class(e)
add_command("d", "d", <<["b", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["d", "d"]>>)
int_value (7)
add_call_chain(<<e,d>>)
add_command("B", "C", <<["a", "BOOLEAN"], ["c", "A"], ["B", "a"]>>)
add_attribute("b", "C", "BOOLEAN")
bool_value (false)
add_call_chain(<<C,d,b,d>>)
add_command("B", "C", <<["b", "INTEGER"], ["d", "BOOLEAN"], ["e", "a"], ["C", "A"], ["B", "BOOLEAN"]>>)
conjunction
subtraction
add_call_chain(<<a,e,a,A,A>>)
add_query("A", "C", <<["A", "BOOLEAN"], ["A", "C"], ["D", "BOOLEAN"]>>, "BOOLEAN")
bool_value (true)
add_command("D", "A", <<["B", "D"], ["d", "BOOLEAN"], ["b", "INTEGER"], ["B", "BOOLEAN"]>>)
logical_negation
greater_than
add_class(c)
add_call_chain(<<c,A,INTEGER,C,C,D,C,b,B>>)
add_class(d)
add_call_chain(<<c,d,c,B,e,d,b>>)
add_call_chain(<<A,C,C,e,c,b,D,B,c>>)
numerical_negation
conjunction
add_call_chain(<<e,c,e,C,B,C,c,b>>)
disjunction
conjunction
bool_value (true)
subtraction
add_command("b", "e", <<["B", "BOOLEAN"], ["b", "C"], ["a", "a"]>>)
type_check
generate_java_code
bool_value (false)
bool_value (false)
add_call_chain(<<BOOLEAN,d,d>>)
numerical_negation
add_call_chain(<<e,B,c>>)
logical_negation
add_command("C", "e", <<["B", "INTEGER"], ["D", "INTEGER"]>>)
type_check
logical_negation
add_query("c", "d", <<["B", "BOOLEAN"], ["d", "c"], ["b", "INTEGER"], ["a", "INTEGER"], ["c", "INTEGER"], ["C", "C"], ["C", "BOOLEAN"], ["A", "a"]>>, "B")
logical_negation
numerical_negation
add_class(D)
add_command("b", "d", <<["b", "a"]>>)
add_call_chain(<<b,b,D,c,D,B,D,d,D>>)
int_value (43)
add_class(D)
add_command("C", "INTEGER", <<["B", "B"], ["d", "C"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["B", "INTEGER"], ["a", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "INTEGER"]>>)
type_check
add_call_chain(<<e,INTEGER,C,a,A>>)
type_check
bool_value (false)
add_call_chain(<<e,c,D>>)
bool_value (true)
add_call_chain(<<BOOLEAN,e,D,d,INTEGER,INTEGER,d,C,a>>)
int_value (19)
bool_value (true)
logical_negation
logical_negation
bool_value (false)
int_value (37)
equals
add_call_chain(<<c,B,C,a,C,BOOLEAN,BOOLEAN>>)
logical_negation
type_check
add_command("a", "INTEGER", <<["e", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["D", "INTEGER"], ["d", "INTEGER"], ["B", "INTEGER"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["B", "BOOLEAN"]>>)
type_check
numerical_negation
add_call_chain(<<BOOLEAN,a,B,a,B,INTEGER>>)
logical_negation
add_query("c", "INTEGER", <<["d", "BOOLEAN"]>>, "B")
add_call_chain(<<e,c,d,a>>)
add_call_chain(<<D,B,A,D,A,A,b>>)
type_check
bool_value (false)
multiplication
logical_negation
add_call_chain(<<b,e>>)
int_value (44)
addition
numerical_negation
add_call_chain(<<b,INTEGER>>)
numerical_negation
add_call_chain(<<d,BOOLEAN,A,a,INTEGER>>)
int_value (37)
numerical_negation
add_query("A", "e", <<["a", "INTEGER"], ["A", "INTEGER"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["B", "BOOLEAN"], ["e", "D"], ["D", "c"], ["e", "a"]>>, "a")
add_command("b", "A", <<["A", "a"], ["c", "A"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "INTEGER"]>>)
bool_value (false)
logical_negation
numerical_negation
int_value (14)
add_query("b", "A", <<["d", "INTEGER"], ["c", "C"], ["b", "d"], ["D", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "C"], ["e", "INTEGER"], ["a", "C"]>>, "d")
add_class(C)
add_command("D", "BOOLEAN", <<["D", "e"], ["B", "C"], ["A", "INTEGER"], ["B", "INTEGER"], ["B", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["c", "INTEGER"], ["b", "INTEGER"]>>)
type_check
int_value (30)
type_check
add_class(b)
add_call_chain(<<A,B,B,D,A,C,C,B,INTEGER>>)
int_value (7)
addition
add_query("a", "e", <<["e", "BOOLEAN"]>>, "e")
generate_java_code
equals
numerical_negation
quotient
add_call_chain(<<A,b,c>>)
bool_value (true)
greater_than
add_call_chain(<<A>>)
add_query("B", "B", <<["e", "C"], ["d", "INTEGER"], ["e", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["C", "INTEGER"]>>, "D")
add_call_chain(<<b>>)
quotient
add_call_chain(<<B,D,D>>)
subtraction
equals
add_call_chain(<<c,a,B,C,D>>)
add_command("b", "B", <<["BOOLEAN", "BOOLEAN"], ["B", "INTEGER"]>>)
generate_java_code
bool_value (false)
logical_negation
conjunction
numerical_negation
add_query("B", "A", <<["d", "INTEGER"], ["e", "BOOLEAN"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["A", "INTEGER"], ["D", "INTEGER"], ["b", "c"], ["e", "BOOLEAN"], ["B", "B"]>>, "B")
addition
add_query("B", "e", <<["INTEGER", "B"], ["c", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["A", "INTEGER"]>>, "BOOLEAN")
add_call_chain(<<D,c,A,INTEGER,c>>)
logical_negation
add_class(D)
add_attribute("D", "B", "BOOLEAN")
add_call_chain(<<D,b,e,e,d,B>>)
int_value (41)
add_attribute("c", "BOOLEAN", "BOOLEAN")
bool_value (false)
bool_value (false)
generate_java_code
generate_java_code
add_attribute("D", "c", "B")
logical_negation
generate_java_code
int_value (23)
add_attribute("C", "d", "e")
int_value (9)
quotient
add_query("e", "d", <<["D", "INTEGER"], ["D", "INTEGER"], ["C", "INTEGER"], ["d", "INTEGER"], ["b", "BOOLEAN"], ["A", "c"]>>, "D")
logical_negation
add_command("A", "a", <<["B", "a"], ["d", "BOOLEAN"]>>)
add_command("c", "A", <<["INTEGER", "BOOLEAN"], ["d", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "B"], ["D", "C"], ["BOOLEAN", "BOOLEAN"], ["C", "INTEGER"], ["c", "BOOLEAN"], ["c", "BOOLEAN"]>>)
add_call_chain(<<a>>)
add_command("INTEGER", "a", <<["C", "BOOLEAN"], ["d", "c"], ["C", "INTEGER"], ["D", "C"], ["a", "INTEGER"], ["C", "INTEGER"], ["a", "INTEGER"]>>)
numerical_negation
bool_value (false)
bool_value (false)
add_query("c", "D", <<["e", "INTEGER"], ["C", "INTEGER"], ["c", "INTEGER"]>>, "C")
int_value (15)
logical_negation
