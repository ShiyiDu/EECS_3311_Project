add_query("B", "d", <<["BOOLEAN", "BOOLEAN"], ["c", "INTEGER"], ["a", "B"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["e", "a"]>>, "B")
bool_value (true)
logical_negation
numerical_negation
add_query("c", "BOOLEAN", <<["a", "BOOLEAN"]>>, "C")
logical_negation
quotient
int_value (8)
add_attribute("a", "INTEGER", "INTEGER")
addition
add_call_chain(<<b,b,c,d,B,b,B,C>>)
generate_java_code
int_value (4)
add_call_chain(<<INTEGER>>)
generate_java_code
add_command("D", "a", <<["A", "INTEGER"], ["D", "BOOLEAN"], ["INTEGER", "INTEGER"], ["D", "A"], ["c", "INTEGER"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "INTEGER"], ["a", "c"]>>)
add_attribute("B", "C", "d")
add_attribute("A", "a", "INTEGER")
add_query("C", "a", <<["C", "INTEGER"], ["c", "D"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["A", "b"], ["D", "INTEGER"]>>, "A")
add_command("e", "c", <<["C", "BOOLEAN"], ["e", "BOOLEAN"], ["d", "BOOLEAN"], ["b", "INTEGER"], ["d", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "d"], ["B", "B"], ["A", "BOOLEAN"]>>)
add_attribute("C", "e", "D")
bool_value (true)
numerical_negation
quotient
add_command("D", "c", <<["B", "INTEGER"], ["e", "e"], ["C", "c"], ["e", "INTEGER"], ["B", "INTEGER"], ["BOOLEAN", "a"]>>)
add_attribute("B", "a", "a")
modulo
int_value (48)
add_attribute("B", "BOOLEAN", "BOOLEAN")
add_call_chain(<<B,B,A,B,c>>)
less_than
add_query("C", "c", <<["c", "BOOLEAN"], ["b", "INTEGER"]>>, "D")
add_query("c", "A", <<["D", "BOOLEAN"], ["A", "D"], ["B", "B"]>>, "B")
type_check
add_attribute("a", "D", "c")
add_command("C", "A", <<["B", "C"], ["D", "INTEGER"], ["D", "B"], ["b", "BOOLEAN"], ["e", "INTEGER"], ["a", "B"]>>)
add_query("C", "c", <<["b", "INTEGER"]>>, "C")
bool_value (true)
add_class(a)
disjunction
add_attribute("c", "c", "BOOLEAN")
add_query("D", "a", <<["A", "a"], ["a", "C"], ["INTEGER", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "INTEGER"], ["B", "c"]>>, "C")
add_call_chain(<<e,e,b,A>>)
add_attribute("e", "D", "A")
add_call_chain(<<B>>)
add_class(B)
add_query("B", "D", <<["d", "INTEGER"]>>, "B")
add_query("A", "A", <<["A", "B"], ["D", "INTEGER"], ["A", "BOOLEAN"]>>, "d")
multiplication
add_call_chain(<<C>>)
generate_java_code
add_command("A", "D", <<["d", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "c"], ["B", "BOOLEAN"]>>)
add_query("c", "B", <<["e", "BOOLEAN"], ["A", "INTEGER"], ["d", "INTEGER"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["e", "d"], ["A", "INTEGER"], ["C", "INTEGER"], ["A", "BOOLEAN"]>>, "e")
bool_value (true)
numerical_negation
add_attribute("b", "B", "A")
numerical_negation
generate_java_code
add_command("d", "INTEGER", <<["e", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["c", "INTEGER"], ["c", "INTEGER"], ["B", "BOOLEAN"], ["b", "A"]>>)
numerical_negation
bool_value (true)
add_command("C", "B", <<["C", "BOOLEAN"], ["d", "BOOLEAN"]>>)
bool_value (true)
generate_java_code
add_call_chain(<<b,c>>)
int_value (26)
add_call_chain(<<D,D,B,BOOLEAN,B,C,D,C,D>>)
int_value (9)
add_call_chain(<<c,B,b,D,D,C,C>>)
add_class(A)
add_call_chain(<<c,e,D,A>>)
generate_java_code
generate_java_code
bool_value (true)
add_command("A", "C", <<["d", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "b"], ["A", "INTEGER"], ["b", "INTEGER"], ["B", "b"], ["e", "INTEGER"], ["b", "INTEGER"]>>)
add_call_chain(<<a,e,BOOLEAN,A,A,b,A,D,C>>)
quotient
int_value (42)
int_value (14)
logical_negation
logical_negation
multiplication
numerical_negation
numerical_negation
numerical_negation
add_command("B", "e", <<["B", "A"], ["b", "c"], ["b", "BOOLEAN"], ["D", "INTEGER"]>>)
add_attribute("d", "e", "B")
add_call_chain(<<INTEGER,C,A,c,C,C,d,D,a>>)
numerical_negation
add_command("d", "D", <<["C", "B"], ["BOOLEAN", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["D", "BOOLEAN"]>>)
add_command("c", "e", <<["D", "BOOLEAN"]>>)
conjunction
add_command("b", "INTEGER", <<["a", "INTEGER"]>>)
add_call_chain(<<c,B,INTEGER>>)
generate_java_code
quotient
subtraction
add_call_chain(<<INTEGER,b,c,B,e,C,BOOLEAN>>)
generate_java_code
add_query("a", "B", <<["A", "INTEGER"], ["A", "INTEGER"], ["C", "D"], ["a", "INTEGER"], ["b", "BOOLEAN"], ["b", "BOOLEAN"], ["e", "e"]>>, "a")
add_attribute("a", "B", "INTEGER")
add_call_chain(<<C,INTEGER,d,A,A,b,C,b,D>>)
add_attribute("C", "d", "INTEGER")
type_check
add_command("c", "a", <<["D", "INTEGER"], ["BOOLEAN", "INTEGER"]>>)
int_value (41)
add_call_chain(<<e,b>>)
add_query("a", "b", <<["D", "D"], ["B", "BOOLEAN"]>>, "b")
add_call_chain(<<d>>)
numerical_negation
logical_negation
disjunction
numerical_negation
bool_value (true)
add_attribute("e", "d", "a")
add_call_chain(<<d,D>>)
add_class(a)
add_command("C", "c", <<["b", "INTEGER"], ["a", "c"], ["BOOLEAN", "INTEGER"], ["a", "INTEGER"], ["C", "INTEGER"], ["INTEGER", "D"], ["d", "INTEGER"], ["BOOLEAN", "INTEGER"], ["BOOLEAN", "INTEGER"]>>)
bool_value (false)
add_command("A", "b", <<["b", "INTEGER"]>>)
add_query("B", "a", <<["C", "INTEGER"], ["C", "BOOLEAN"]>>, "INTEGER")
int_value (6)
add_attribute("C", "B", "INTEGER")
add_query("B", "INTEGER", <<["C", "D"]>>, "C")
type_check
add_query("b", "e", <<["b", "a"], ["A", "INTEGER"], ["D", "INTEGER"], ["C", "INTEGER"], ["B", "B"], ["c", "INTEGER"], ["c", "A"]>>, "d")
add_class(A)
bool_value (true)
add_query("a", "B", <<["B", "BOOLEAN"]>>, "A")
add_query("b", "a", <<["B", "C"], ["d", "INTEGER"], ["A", "INTEGER"], ["D", "C"], ["D", "BOOLEAN"], ["a", "e"], ["d", "INTEGER"], ["D", "INTEGER"], ["BOOLEAN", "a"]>>, "C")
generate_java_code
add_command("D", "B", <<["C", "BOOLEAN"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["b", "INTEGER"]>>)
add_call_chain(<<A,A,e,c,C,C,D,A,D>>)
add_call_chain(<<D,c,C,c,a>>)
equals
add_class(e)
add_class(d)
subtraction
add_call_chain(<<C,INTEGER,C,INTEGER,A,a,a,d>>)
add_attribute("D", "D", "BOOLEAN")
numerical_negation
bool_value (false)
add_class(b)
numerical_negation
add_query("C", "B", <<["a", "D"], ["B", "INTEGER"], ["a", "a"], ["D", "A"], ["B", "A"], ["INTEGER", "A"], ["d", "BOOLEAN"]>>, "a")
bool_value (true)
int_value (34)
bool_value (false)
add_call_chain(<<A>>)
add_attribute("C", "C", "BOOLEAN")
add_command("b", "A", <<["e", "INTEGER"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["INTEGER", "B"], ["e", "d"], ["INTEGER", "INTEGER"]>>)
add_query("e", "c", <<["c", "INTEGER"], ["b", "C"], ["c", "d"], ["D", "e"], ["a", "INTEGER"]>>, "B")
add_query("a", "d", <<["B", "C"], ["BOOLEAN", "INTEGER"], ["c", "BOOLEAN"], ["C", "INTEGER"], ["BOOLEAN", "a"]>>, "INTEGER")
logical_negation
equals
add_query("d", "A", <<["A", "INTEGER"], ["C", "BOOLEAN"]>>, "a")
add_call_chain(<<D,d,C>>)
add_attribute("e", "d", "BOOLEAN")
add_command("B", "c", <<["C", "BOOLEAN"], ["a", "INTEGER"], ["a", "INTEGER"], ["D", "BOOLEAN"], ["b", "INTEGER"], ["d", "INTEGER"], ["a", "INTEGER"]>>)
modulo
add_call_chain(<<c,D>>)
bool_value (true)
logical_negation
add_call_chain(<<INTEGER,d,a,C,d,c,INTEGER,B>>)
int_value (12)
generate_java_code
greater_than
type_check
add_command("INTEGER", "C", <<["b", "INTEGER"], ["e", "INTEGER"], ["a", "BOOLEAN"], ["b", "INTEGER"], ["BOOLEAN", "INTEGER"], ["d", "INTEGER"], ["A", "BOOLEAN"], ["D", "B"], ["a", "INTEGER"]>>)
generate_java_code
generate_java_code
type_check
add_attribute("D", "a", "A")
add_command("BOOLEAN", "b", <<["a", "B"], ["c", "e"], ["d", "BOOLEAN"], ["c", "B"], ["a", "e"]>>)
int_value (13)
add_command("C", "B", <<["B", "BOOLEAN"], ["e", "INTEGER"], ["A", "INTEGER"], ["D", "B"], ["a", "d"], ["A", "INTEGER"], ["a", "INTEGER"], ["D", "BOOLEAN"]>>)
add_command("BOOLEAN", "B", <<["c", "c"], ["c", "d"], ["b", "BOOLEAN"], ["A", "INTEGER"], ["B", "INTEGER"], ["B", "C"], ["BOOLEAN", "BOOLEAN"]>>)
int_value (4)
add_query("b", "C", <<["INTEGER", "BOOLEAN"], ["D", "INTEGER"]>>, "A")
addition
add_class(B)
add_query("B", "INTEGER", <<["D", "INTEGER"]>>, "B")
add_class(d)
int_value (22)
logical_negation
conjunction
generate_java_code
numerical_negation
generate_java_code
add_attribute("D", "D", "c")
add_class(C)
conjunction
add_attribute("B", "B", "A")
int_value (33)
conjunction
bool_value (true)
bool_value (false)
add_command("BOOLEAN", "e", <<["A", "A"]>>)
add_command("A", "a", <<["b", "INTEGER"], ["b", "BOOLEAN"], ["a", "INTEGER"], ["B", "e"], ["a", "INTEGER"], ["b", "INTEGER"], ["b", "a"], ["d", "INTEGER"], ["C", "INTEGER"]>>)
add_query("INTEGER", "c", <<["BOOLEAN", "BOOLEAN"], ["a", "INTEGER"], ["B", "BOOLEAN"], ["c", "BOOLEAN"]>>, "A")
generate_java_code
add_call_chain(<<A,BOOLEAN,BOOLEAN,D,e,c>>)
add_call_chain(<<D,C,a,b,INTEGER,D,C,D,b>>)
generate_java_code
add_call_chain(<<e,d>>)
disjunction
less_than
type_check
logical_negation
generate_java_code
conjunction
type_check
numerical_negation
int_value (18)
type_check
add_call_chain(<<e,B,d,A,C,b,BOOLEAN,C,b>>)
add_call_chain(<<B,c,a>>)
logical_negation
equals
add_call_chain(<<A,c,a,C,d,A,b>>)
bool_value (true)
add_attribute("D", "c", "BOOLEAN")
numerical_negation
add_query("a", "INTEGER", <<["d", "BOOLEAN"], ["d", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "d"], ["D", "D"], ["a", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "INTEGER"], ["e", "BOOLEAN"]>>, "INTEGER")
add_call_chain(<<b,C,d,c,b,d,INTEGER,c,B>>)
