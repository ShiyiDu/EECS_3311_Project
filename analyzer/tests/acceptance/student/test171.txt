add_class(A)
logical_negation
disjunction
add_command("INTEGER", "A", <<["A", "a"], ["e", "INTEGER"]>>)
int_value (44)
add_command("b", "c", <<["A", "INTEGER"]>>)
multiplication
int_value (16)
add_attribute("b", "b", "BOOLEAN")
add_class(b)
add_query("B", "e", <<["A", "C"]>>, "C")
add_command("A", "C", <<["e", "INTEGER"]>>)
bool_value (false)
greater_than
bool_value (false)
add_query("D", "INTEGER", <<["e", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "D"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["B", "B"], ["C", "BOOLEAN"]>>, "c")
add_query("C", "a", <<["D", "a"], ["a", "INTEGER"], ["B", "BOOLEAN"], ["A", "d"], ["BOOLEAN", "INTEGER"], ["B", "BOOLEAN"], ["C", "a"], ["a", "e"], ["c", "INTEGER"]>>, "INTEGER")
bool_value (true)
conjunction
type_check
add_query("c", "B", <<["B", "INTEGER"], ["e", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "d"], ["b", "BOOLEAN"], ["c", "D"]>>, "A")
numerical_negation
add_call_chain(<<d>>)
numerical_negation
add_class(INTEGER)
numerical_negation
add_attribute("b", "D", "C")
bool_value (false)
add_query("D", "e", <<["A", "INTEGER"], ["c", "INTEGER"], ["D", "INTEGER"], ["e", "BOOLEAN"], ["d", "INTEGER"]>>, "e")
int_value (40)
add_attribute("BOOLEAN", "b", "INTEGER")
add_command("e", "C", <<["a", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["c", "e"], ["c", "BOOLEAN"]>>)
logical_negation
add_query("B", "a", <<["B", "c"], ["INTEGER", "b"], ["B", "INTEGER"], ["B", "INTEGER"], ["a", "c"], ["d", "INTEGER"], ["c", "D"], ["d", "b"], ["d", "INTEGER"]>>, "B")
add_call_chain(<<C,b,e,C,a>>)
add_query("B", "B", <<["D", "BOOLEAN"], ["D", "INTEGER"], ["A", "INTEGER"], ["a", "BOOLEAN"], ["INTEGER", "a"], ["B", "BOOLEAN"], ["C", "d"], ["a", "B"]>>, "D")
add_attribute("b", "d", "BOOLEAN")
logical_negation
generate_java_code
modulo
add_call_chain(<<e,b,b,e,B,e,A,BOOLEAN>>)
add_command("B", "C", <<["A", "c"], ["a", "a"], ["c", "D"], ["b", "BOOLEAN"], ["a", "INTEGER"], ["D", "e"], ["b", "INTEGER"], ["c", "c"], ["D", "BOOLEAN"]>>)
add_query("A", "C", <<["A", "BOOLEAN"], ["d", "INTEGER"], ["e", "INTEGER"], ["A", "BOOLEAN"], ["c", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["D", "A"], ["e", "INTEGER"]>>, "D")
greater_than
modulo
add_call_chain(<<c,C>>)
int_value (15)
int_value (41)
conjunction
add_attribute("a", "e", "INTEGER")
quotient
add_attribute("a", "e", "C")
add_call_chain(<<d,e,e,A,c,b,a,B,b>>)
addition
add_call_chain(<<C,e,D,D,B>>)
add_query("c", "BOOLEAN", <<["a", "INTEGER"], ["A", "B"], ["e", "INTEGER"], ["e", "INTEGER"], ["e", "c"], ["D", "BOOLEAN"]>>, "A")
logical_negation
conjunction
add_attribute("INTEGER", "A", "b")
logical_negation
int_value (48)
type_check
add_call_chain(<<D>>)
add_query("D", "a", <<["C", "BOOLEAN"], ["B", "INTEGER"], ["b", "INTEGER"], ["D", "INTEGER"], ["INTEGER", "INTEGER"], ["D", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "INTEGER"], ["e", "D"]>>, "c")
add_class(a)
add_call_chain(<<A,d,b,C,c,d>>)
add_call_chain(<<a,c,e>>)
bool_value (false)
disjunction
logical_negation
int_value (7)
numerical_negation
generate_java_code
add_call_chain(<<D,B,d,D,d,A,B,a>>)
add_class(d)
type_check
int_value (21)
type_check
int_value (24)
int_value (33)
multiplication
less_than
add_class(d)
add_call_chain(<<C,C,A,b,e>>)
logical_negation
add_call_chain(<<A,e>>)
add_command("e", "D", <<["c", "a"], ["b", "C"], ["c", "BOOLEAN"], ["e", "B"]>>)
int_value (49)
equals
less_than
add_query("a", "d", <<["INTEGER", "b"], ["e", "BOOLEAN"], ["e", "BOOLEAN"], ["INTEGER", "c"], ["INTEGER", "INTEGER"]>>, "a")
add_attribute("A", "c", "INTEGER")
modulo
add_attribute("c", "B", "INTEGER")
add_call_chain(<<d,B,INTEGER,d,A,d>>)
bool_value (false)
subtraction
add_attribute("B", "c", "INTEGER")
logical_negation
modulo
add_class(D)
bool_value (false)
add_attribute("a", "INTEGER", "BOOLEAN")
add_call_chain(<<BOOLEAN>>)
add_command("b", "d", <<["c", "INTEGER"], ["d", "INTEGER"], ["c", "INTEGER"], ["C", "B"], ["b", "BOOLEAN"], ["A", "BOOLEAN"]>>)
add_attribute("D", "d", "INTEGER")
bool_value (false)
generate_java_code
type_check
add_call_chain(<<INTEGER,a,e,c,d,D,c,D>>)
int_value (4)
add_call_chain(<<D,A>>)
int_value (18)
add_call_chain(<<B,c,d,a>>)
bool_value (true)
add_attribute("b", "e", "INTEGER")
bool_value (true)
generate_java_code
bool_value (true)
add_call_chain(<<B,d,e,B,d,BOOLEAN,A,BOOLEAN>>)
addition
logical_negation
numerical_negation
numerical_negation
numerical_negation
add_command("e", "d", <<["a", "C"], ["A", "B"], ["b", "d"], ["c", "B"], ["D", "a"], ["c", "INTEGER"], ["INTEGER", "BOOLEAN"], ["B", "B"]>>)
add_query("D", "b", <<["e", "e"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["a", "INTEGER"], ["B", "INTEGER"]>>, "a")
add_call_chain(<<b,BOOLEAN,D,B,b,C>>)
add_call_chain(<<A,C,A>>)
int_value (4)
add_class(c)
equals
disjunction
add_call_chain(<<d,d,A,C,b>>)
add_class(a)
logical_negation
int_value (32)
add_call_chain(<<e,B,D,A>>)
add_attribute("a", "B", "INTEGER")
numerical_negation
add_attribute("d", "B", "b")
add_attribute("c", "e", "d")
add_attribute("b", "c", "INTEGER")
int_value (47)
add_attribute("B", "A", "BOOLEAN")
type_check
add_query("e", "c", <<["INTEGER", "INTEGER"], ["d", "BOOLEAN"], ["b", "INTEGER"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["c", "a"], ["D", "BOOLEAN"]>>, "c")
add_command("D", "a", <<["a", "INTEGER"], ["INTEGER", "c"], ["D", "C"], ["BOOLEAN", "BOOLEAN"], ["INTEGER", "INTEGER"]>>)
int_value (46)
add_call_chain(<<A,A,D,b,C,BOOLEAN>>)
logical_negation
type_check
add_call_chain(<<A,a,a,B,C,C,B>>)
type_check
numerical_negation
add_call_chain(<<e,d,c,A,e,D,D,b>>)
bool_value (true)
int_value (29)
type_check
logical_negation
add_command("d", "INTEGER", <<["C", "INTEGER"], ["B", "e"], ["D", "INTEGER"], ["b", "INTEGER"], ["b", "BOOLEAN"]>>)
add_attribute("e", "a", "e")
logical_negation
bool_value (true)
add_attribute("INTEGER", "B", "INTEGER")
int_value (49)
add_query("e", "b", <<["e", "BOOLEAN"], ["B", "e"], ["a", "B"], ["c", "C"], ["A", "INTEGER"]>>, "b")
int_value (1)
greater_than
bool_value (true)
equals
int_value (41)
greater_than
bool_value (false)
add_class(b)
greater_than
add_query("d", "a", <<["b", "BOOLEAN"]>>, "a")
generate_java_code
numerical_negation
add_command("B", "d", <<["A", "INTEGER"], ["BOOLEAN", "INTEGER"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["b", "a"]>>)
numerical_negation
type_check
int_value (17)
add_class(b)
bool_value (false)
less_than
add_attribute("C", "B", "BOOLEAN")
numerical_negation
logical_negation
add_query("b", "D", <<["a", "D"], ["B", "INTEGER"], ["d", "A"], ["b", "BOOLEAN"], ["c", "INTEGER"]>>, "D")
type_check
bool_value (true)
add_call_chain(<<B,BOOLEAN,BOOLEAN>>)
type_check
add_attribute("c", "C", "INTEGER")
add_attribute("c", "d", "INTEGER")
bool_value (false)
type_check
type_check
add_call_chain(<<c,c>>)
logical_negation
equals
generate_java_code
numerical_negation
add_command("D", "a", <<["d", "BOOLEAN"], ["c", "INTEGER"], ["c", "BOOLEAN"]>>)
add_call_chain(<<b,C,D,b,A,e,D>>)
generate_java_code
bool_value (true)
disjunction
bool_value (false)
logical_negation
disjunction
bool_value (false)
conjunction
add_call_chain(<<C>>)
add_class(C)
disjunction
generate_java_code
int_value (20)
