int_value (19)
add_call_chain(<<A,D,A,d>>)
add_command("INTEGER", "D", <<["D", "INTEGER"], ["D", "B"], ["D", "c"], ["e", "a"], ["a", "e"], ["BOOLEAN", "INTEGER"], ["c", "A"]>>)
bool_value (false)
conjunction
bool_value (false)
generate_java_code
logical_negation
bool_value (true)
add_query("a", "d", <<["D", "INTEGER"], ["e", "a"], ["D", "INTEGER"], ["A", "c"], ["A", "INTEGER"], ["D", "INTEGER"], ["A", "INTEGER"], ["A", "BOOLEAN"]>>, "d")
type_check
logical_negation
greater_than
greater_than
add_call_chain(<<d,D,D>>)
add_call_chain(<<BOOLEAN,A,A,D,B,C,c>>)
add_call_chain(<<d,INTEGER,c,D>>)
bool_value (false)
type_check
logical_negation
bool_value (false)
add_command("D", "A", <<["C", "d"], ["C", "INTEGER"]>>)
add_call_chain(<<e,C,C,a,e>>)
numerical_negation
addition
add_command("e", "e", <<["A", "C"], ["A", "d"], ["C", "INTEGER"], ["A", "INTEGER"], ["c", "INTEGER"], ["D", "B"], ["c", "INTEGER"]>>)
logical_negation
add_call_chain(<<INTEGER,e,b,C,A,d,c>>)
add_call_chain(<<e,d,c,d,D,INTEGER,a>>)
bool_value (true)
less_than
add_attribute("b", "e", "D")
generate_java_code
bool_value (false)
add_attribute("a", "A", "D")
add_command("A", "B", <<["C", "INTEGER"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "BOOLEAN"]>>)
quotient
add_call_chain(<<a,d,A,B,D>>)
add_command("C", "a", <<["e", "d"], ["D", "A"], ["C", "e"], ["a", "INTEGER"]>>)
add_call_chain(<<e>>)
add_query("a", "C", <<["A", "INTEGER"], ["e", "INTEGER"], ["c", "BOOLEAN"]>>, "B")
conjunction
add_command("b", "e", <<["a", "BOOLEAN"], ["A", "C"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["b", "BOOLEAN"], ["e", "BOOLEAN"]>>)
add_call_chain(<<c,b,a,INTEGER,B,e,d,C>>)
int_value (33)
multiplication
add_attribute("B", "e", "A")
add_attribute("B", "C", "A")
add_class(D)
add_call_chain(<<c,B,D,A,c,b>>)
add_class(e)
add_class(INTEGER)
add_query("B", "a", <<["B", "INTEGER"], ["B", "BOOLEAN"]>>, "A")
bool_value (false)
type_check
add_query("c", "BOOLEAN", <<["a", "e"], ["d", "BOOLEAN"], ["c", "INTEGER"], ["C", "A"], ["e", "INTEGER"], ["B", "D"]>>, "a")
add_query("A", "e", <<["c", "BOOLEAN"], ["d", "B"], ["D", "A"]>>, "d")
numerical_negation
disjunction
bool_value (false)
int_value (18)
add_query("e", "c", <<["d", "INTEGER"], ["a", "D"], ["c", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "c"], ["C", "INTEGER"], ["c", "BOOLEAN"]>>, "e")
add_command("D", "INTEGER", <<["INTEGER", "INTEGER"], ["D", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "INTEGER"]>>)
bool_value (false)
less_than
add_call_chain(<<a,INTEGER,b,B,a,D,B>>)
bool_value (true)
logical_negation
add_call_chain(<<INTEGER,b,a,d,A,B,e,A>>)
int_value (46)
add_command("C", "A", <<["C", "INTEGER"], ["c", "C"]>>)
disjunction
numerical_negation
type_check
greater_than
disjunction
logical_negation
add_call_chain(<<B,d,D,a,D,A,B,B,A>>)
add_command("b", "A", <<["A", "INTEGER"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["D", "BOOLEAN"]>>)
logical_negation
generate_java_code
add_attribute("a", "C", "BOOLEAN")
bool_value (false)
add_attribute("e", "b", "INTEGER")
add_call_chain(<<e,A,A,B,e>>)
add_call_chain(<<b,B,c>>)
generate_java_code
subtraction
add_command("A", "BOOLEAN", <<["BOOLEAN", "BOOLEAN"], ["A", "INTEGER"]>>)
int_value (28)
add_query("D", "D", <<["c", "INTEGER"], ["C", "e"]>>, "a")
add_call_chain(<<D>>)
add_attribute("A", "c", "D")
add_class(D)
add_class(BOOLEAN)
add_call_chain(<<b>>)
int_value (22)
add_query("INTEGER", "e", <<["B", "b"], ["b", "a"], ["d", "INTEGER"], ["INTEGER", "BOOLEAN"], ["b", "a"]>>, "D")
add_attribute("A", "C", "INTEGER")
add_query("A", "c", <<["C", "B"], ["A", "INTEGER"], ["B", "INTEGER"], ["C", "BOOLEAN"]>>, "C")
generate_java_code
add_query("B", "d", <<["D", "INTEGER"], ["D", "INTEGER"], ["A", "BOOLEAN"], ["a", "A"]>>, "a")
generate_java_code
add_call_chain(<<c,C,e,a>>)
bool_value (true)
add_query("INTEGER", "BOOLEAN", <<["e", "INTEGER"], ["a", "INTEGER"], ["b", "INTEGER"], ["e", "e"], ["A", "e"], ["a", "INTEGER"], ["A", "INTEGER"], ["e", "BOOLEAN"], ["d", "INTEGER"]>>, "INTEGER")
add_query("D", "B", <<["d", "BOOLEAN"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["B", "B"], ["d", "BOOLEAN"], ["d", "INTEGER"]>>, "d")
numerical_negation
bool_value (false)
add_call_chain(<<A,C,A,D,C,INTEGER>>)
add_call_chain(<<a,D>>)
type_check
logical_negation
logical_negation
add_attribute("INTEGER", "BOOLEAN", "BOOLEAN")
logical_negation
add_class(BOOLEAN)
add_call_chain(<<C,e,d>>)
add_call_chain(<<c,b,d,c,c,b,INTEGER,c,d>>)
bool_value (true)
generate_java_code
disjunction
logical_negation
logical_negation
add_command("A", "A", <<["B", "INTEGER"]>>)
bool_value (true)
generate_java_code
numerical_negation
add_call_chain(<<a,BOOLEAN,BOOLEAN,C>>)
add_call_chain(<<d,d,A,b>>)
type_check
add_command("B", "A", <<["B", "BOOLEAN"], ["D", "INTEGER"], ["C", "c"], ["BOOLEAN", "D"]>>)
generate_java_code
add_query("A", "C", <<["D", "c"], ["a", "BOOLEAN"], ["d", "INTEGER"], ["B", "INTEGER"], ["b", "a"], ["e", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "INTEGER"]>>, "A")
add_class(b)
add_class(d)
numerical_negation
add_class(A)
add_query("INTEGER", "D", <<["D", "d"], ["c", "BOOLEAN"], ["e", "BOOLEAN"], ["d", "INTEGER"], ["b", "b"], ["INTEGER", "C"]>>, "C")
numerical_negation
type_check
add_attribute("d", "D", "INTEGER")
add_command("a", "a", <<["a", "INTEGER"], ["D", "INTEGER"], ["B", "INTEGER"], ["C", "INTEGER"], ["c", "BOOLEAN"]>>)
numerical_negation
add_command("D", "A", <<["C", "B"], ["B", "INTEGER"], ["d", "INTEGER"], ["C", "INTEGER"], ["B", "BOOLEAN"]>>)
add_query("C", "INTEGER", <<["e", "C"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["B", "a"], ["c", "INTEGER"], ["C", "b"], ["d", "BOOLEAN"], ["B", "B"], ["e", "BOOLEAN"]>>, "A")
bool_value (true)
add_query("B", "e", <<["c", "INTEGER"], ["D", "A"], ["e", "INTEGER"], ["C", "INTEGER"], ["a", "BOOLEAN"]>>, "B")
add_call_chain(<<B>>)
add_call_chain(<<C,D,b,B,b,c,d>>)
bool_value (false)
numerical_negation
add_call_chain(<<BOOLEAN,b,C,C,A,b,B,e,C>>)
numerical_negation
int_value (23)
generate_java_code
add_attribute("B", "d", "BOOLEAN")
numerical_negation
equals
numerical_negation
add_query("A", "INTEGER", <<["BOOLEAN", "BOOLEAN"], ["d", "BOOLEAN"], ["c", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "INTEGER"], ["d", "BOOLEAN"]>>, "d")
bool_value (false)
greater_than
greater_than
add_attribute("BOOLEAN", "A", "BOOLEAN")
int_value (48)
greater_than
add_call_chain(<<e,A,d>>)
add_call_chain(<<b,BOOLEAN,D,e>>)
add_call_chain(<<a,A,b,B,C,b,a,INTEGER,d>>)
bool_value (false)
int_value (27)
bool_value (true)
add_attribute("e", "BOOLEAN", "INTEGER")
add_call_chain(<<C,D>>)
add_command("e", "c", <<["d", "INTEGER"], ["a", "INTEGER"], ["e", "INTEGER"]>>)
numerical_negation
add_query("e", "INTEGER", <<["C", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["c", "BOOLEAN"], ["c", "INTEGER"], ["C", "INTEGER"], ["b", "INTEGER"], ["INTEGER", "BOOLEAN"]>>, "b")
int_value (49)
add_attribute("c", "d", "INTEGER")
add_call_chain(<<C,c,B,C,A,D,b,D,c>>)
numerical_negation
disjunction
add_class(D)
add_call_chain(<<d,A,B,D,d>>)
add_attribute("d", "BOOLEAN", "INTEGER")
add_class(A)
add_attribute("A", "BOOLEAN", "C")
add_call_chain(<<b,D>>)
numerical_negation
greater_than
add_query("A", "a", <<["a", "d"], ["e", "INTEGER"], ["d", "INTEGER"], ["D", "b"]>>, "INTEGER")
type_check
add_query("B", "A", <<["D", "BOOLEAN"], ["D", "A"], ["INTEGER", "BOOLEAN"], ["A", "INTEGER"]>>, "INTEGER")
add_query("d", "A", <<["A", "BOOLEAN"], ["d", "A"], ["a", "C"], ["C", "C"]>>, "c")
bool_value (true)
disjunction
add_class(C)
bool_value (false)
add_class(B)
type_check
quotient
conjunction
logical_negation
add_class(b)
type_check
int_value (6)
generate_java_code
add_attribute("A", "A", "BOOLEAN")
int_value (29)
int_value (5)
add_call_chain(<<e,b,A,C,D,C,D,C>>)
bool_value (false)
add_command("e", "B", <<["BOOLEAN", "BOOLEAN"], ["a", "BOOLEAN"], ["BOOLEAN", "B"], ["INTEGER", "INTEGER"], ["A", "BOOLEAN"], ["D", "d"], ["INTEGER", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "INTEGER"]>>)
numerical_negation
int_value (31)
conjunction
add_command("a", "B", <<["INTEGER", "d"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["c", "INTEGER"]>>)
generate_java_code
add_command("e", "a", <<["A", "INTEGER"], ["A", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "c"], ["e", "C"]>>)
add_attribute("a", "INTEGER", "INTEGER")
add_command("b", "d", <<["A", "c"]>>)
logical_negation
int_value (40)
logical_negation
add_attribute("INTEGER", "b", "BOOLEAN")
bool_value (false)
generate_java_code
add_query("e", "B", <<["A", "BOOLEAN"]>>, "b")
greater_than
bool_value (false)
logical_negation
add_query("C", "B", <<["BOOLEAN", "BOOLEAN"], ["a", "INTEGER"]>>, "b")
add_class(A)
bool_value (false)
numerical_negation
add_command("b", "B", <<["C", "c"], ["B", "BOOLEAN"], ["C", "INTEGER"], ["c", "BOOLEAN"]>>)
add_attribute("b", "B", "INTEGER")
add_query("d", "A", <<["d", "BOOLEAN"], ["e", "INTEGER"], ["B", "a"], ["a", "e"], ["BOOLEAN", "INTEGER"]>>, "d")
add_call_chain(<<D,D,A,e,D,B>>)
generate_java_code
add_query("A", "A", <<["b", "INTEGER"], ["c", "D"], ["A", "a"]>>, "d")
bool_value (true)
add_query("C", "a", <<["A", "d"], ["d", "e"]>>, "B")
numerical_negation
