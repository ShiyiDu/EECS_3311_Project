add_attribute("A", "d", "INTEGER")
modulo
bool_value (true)
numerical_negation
add_attribute("a", "a", "d")
logical_negation
add_class(c)
add_call_chain(<<c>>)
add_query("c", "BOOLEAN", <<["D", "d"], ["C", "a"], ["BOOLEAN", "BOOLEAN"], ["b", "BOOLEAN"], ["d", "INTEGER"]>>, "D")
add_call_chain(<<B,c,C,INTEGER,c,C,D,b>>)
add_attribute("C", "C", "BOOLEAN")
addition
add_command("a", "a", <<["e", "D"], ["a", "BOOLEAN"], ["D", "INTEGER"], ["B", "BOOLEAN"]>>)
add_command("C", "D", <<["D", "BOOLEAN"], ["e", "a"], ["D", "INTEGER"], ["c", "BOOLEAN"], ["A", "INTEGER"], ["a", "INTEGER"], ["d", "d"]>>)
int_value (18)
add_query("A", "A", <<["BOOLEAN", "INTEGER"], ["C", "C"], ["c", "BOOLEAN"], ["d", "C"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["e", "INTEGER"], ["A", "BOOLEAN"]>>, "A")
add_attribute("D", "e", "INTEGER")
add_call_chain(<<c,C,a,a,b,C,D,A,C>>)
add_query("e", "c", <<["e", "A"], ["e", "BOOLEAN"], ["b", "INTEGER"], ["e", "BOOLEAN"], ["e", "B"], ["b", "e"]>>, "A")
equals
bool_value (false)
add_attribute("b", "A", "D")
int_value (5)
add_command("D", "b", <<["e", "INTEGER"], ["B", "INTEGER"], ["b", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "INTEGER"], ["a", "INTEGER"], ["B", "D"], ["b", "D"]>>)
less_than
add_command("b", "D", <<["e", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "B"], ["BOOLEAN", "INTEGER"], ["A", "b"], ["d", "BOOLEAN"], ["A", "INTEGER"], ["INTEGER", "c"]>>)
numerical_negation
conjunction
add_command("b", "A", <<["d", "BOOLEAN"], ["INTEGER", "B"], ["A", "a"], ["e", "INTEGER"], ["A", "BOOLEAN"]>>)
add_call_chain(<<INTEGER>>)
int_value (45)
add_class(a)
add_call_chain(<<A,c,d,C,B,B>>)
generate_java_code
bool_value (false)
add_call_chain(<<INTEGER,a,a,d,INTEGER,D,e,C>>)
add_attribute("e", "INTEGER", "INTEGER")
numerical_negation
add_call_chain(<<C,d,d,A,d,c,BOOLEAN>>)
bool_value (true)
add_command("BOOLEAN", "A", <<["C", "INTEGER"], ["A", "D"], ["BOOLEAN", "INTEGER"], ["c", "BOOLEAN"], ["e", "C"]>>)
add_class(a)
add_call_chain(<<D>>)
generate_java_code
conjunction
int_value (6)
type_check
less_than
generate_java_code
greater_than
numerical_negation
numerical_negation
int_value (31)
add_query("D", "C", <<["b", "INTEGER"], ["d", "INTEGER"], ["d", "INTEGER"], ["INTEGER", "INTEGER"], ["c", "INTEGER"], ["C", "C"], ["B", "A"]>>, "C")
bool_value (false)
add_query("D", "BOOLEAN", <<["c", "b"], ["A", "INTEGER"]>>, "BOOLEAN")
add_attribute("a", "D", "B")
int_value (12)
add_call_chain(<<d,c,C,e,C,e,d>>)
add_call_chain(<<d,INTEGER,d,e,B,d,d,e>>)
add_class(C)
equals
addition
add_command("D", "d", <<["c", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "e"], ["A", "BOOLEAN"], ["D", "INTEGER"], ["a", "a"], ["C", "e"]>>)
numerical_negation
modulo
numerical_negation
logical_negation
type_check
add_query("D", "INTEGER", <<["e", "INTEGER"], ["A", "INTEGER"], ["C", "d"], ["b", "A"], ["a", "INTEGER"], ["e", "INTEGER"], ["C", "d"], ["d", "BOOLEAN"], ["c", "INTEGER"]>>, "D")
add_attribute("b", "e", "INTEGER")
int_value (17)
add_query("C", "C", <<["A", "d"]>>, "BOOLEAN")
add_call_chain(<<b,e>>)
type_check
add_attribute("e", "C", "A")
add_query("c", "A", <<["C", "D"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["INTEGER", "BOOLEAN"]>>, "D")
int_value (19)
conjunction
add_call_chain(<<A,C,A,D,D,BOOLEAN,INTEGER,B,b>>)
add_command("a", "B", <<["INTEGER", "INTEGER"], ["d", "e"], ["e", "d"]>>)
add_attribute("d", "BOOLEAN", "INTEGER")
bool_value (true)
int_value (34)
add_command("A", "A", <<["D", "a"], ["C", "INTEGER"]>>)
add_class(INTEGER)
generate_java_code
add_attribute("INTEGER", "A", "BOOLEAN")
add_attribute("A", "C", "INTEGER")
bool_value (false)
bool_value (false)
add_call_chain(<<B,d>>)
add_attribute("d", "BOOLEAN", "A")
add_class(A)
add_query("b", "D", <<["e", "BOOLEAN"], ["e", "INTEGER"], ["A", "BOOLEAN"]>>, "A")
add_command("B", "INTEGER", <<["d", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "BOOLEAN"], ["c", "A"], ["B", "INTEGER"], ["INTEGER", "b"], ["c", "INTEGER"], ["b", "BOOLEAN"]>>)
generate_java_code
numerical_negation
add_call_chain(<<C,e,b,A,d,A,B>>)
numerical_negation
add_call_chain(<<c,d,INTEGER,e>>)
numerical_negation
add_call_chain(<<C,e,A,B,c,b,d>>)
disjunction
quotient
int_value (27)
greater_than
add_query("C", "a", <<["A", "BOOLEAN"], ["a", "b"], ["B", "INTEGER"], ["D", "INTEGER"], ["B", "BOOLEAN"], ["A", "BOOLEAN"]>>, "INTEGER")
int_value (44)
add_call_chain(<<d>>)
add_call_chain(<<b,A>>)
add_attribute("b", "B", "INTEGER")
int_value (1)
add_command("B", "e", <<["a", "BOOLEAN"]>>)
add_command("e", "e", <<["e", "INTEGER"]>>)
disjunction
add_attribute("B", "a", "BOOLEAN")
bool_value (false)
int_value (25)
add_call_chain(<<INTEGER,A,e,d,D>>)
int_value (23)
add_query("a", "BOOLEAN", <<["B", "BOOLEAN"], ["c", "INTEGER"], ["a", "BOOLEAN"], ["C", "INTEGER"], ["b", "e"], ["D", "INTEGER"], ["B", "B"]>>, "d")
add_call_chain(<<B,b,C,C,e,B,B,a>>)
add_command("D", "A", <<["e", "INTEGER"], ["B", "e"], ["a", "B"], ["a", "C"], ["D", "D"], ["B", "d"]>>)
add_query("d", "d", <<["A", "INTEGER"]>>, "INTEGER")
bool_value (false)
type_check
logical_negation
numerical_negation
equals
numerical_negation
add_command("C", "BOOLEAN", <<["D", "BOOLEAN"], ["e", "D"], ["c", "BOOLEAN"], ["a", "B"], ["A", "INTEGER"]>>)
add_call_chain(<<d,e,C>>)
add_command("INTEGER", "C", <<["BOOLEAN", "INTEGER"]>>)
add_query("D", "e", <<["d", "BOOLEAN"]>>, "D")
add_query("C", "A", <<["b", "BOOLEAN"], ["D", "BOOLEAN"], ["a", "B"], ["d", "INTEGER"], ["e", "INTEGER"], ["B", "d"], ["b", "INTEGER"]>>, "C")
add_command("e", "b", <<["e", "INTEGER"], ["B", "C"], ["d", "INTEGER"], ["A", "BOOLEAN"], ["C", "e"], ["a", "INTEGER"]>>)
add_class(c)
less_than
add_command("D", "b", <<["D", "INTEGER"], ["B", "BOOLEAN"]>>)
bool_value (false)
logical_negation
add_call_chain(<<C,b,B,BOOLEAN,A,B,INTEGER,a,e>>)
bool_value (true)
add_command("BOOLEAN", "c", <<["e", "D"], ["A", "b"], ["e", "BOOLEAN"], ["e", "BOOLEAN"], ["c", "A"], ["INTEGER", "C"]>>)
add_call_chain(<<e,b>>)
numerical_negation
multiplication
add_attribute("A", "C", "b")
add_attribute("c", "c", "INTEGER")
greater_than
add_call_chain(<<d,d,a,B,b>>)
int_value (12)
bool_value (true)
conjunction
logical_negation
add_command("B", "C", <<["D", "BOOLEAN"], ["e", "a"], ["e", "a"], ["A", "A"], ["B", "a"], ["D", "B"]>>)
add_attribute("d", "A", "A")
add_attribute("B", "e", "b")
add_call_chain(<<d,BOOLEAN,INTEGER,C,e,b,e,c,d>>)
int_value (29)
add_attribute("BOOLEAN", "A", "INTEGER")
add_call_chain(<<b,a,A,A,e,D,e,C>>)
add_class(D)
int_value (38)
add_query("b", "B", <<["a", "B"], ["a", "INTEGER"], ["b", "C"], ["D", "b"], ["a", "INTEGER"], ["e", "INTEGER"], ["d", "BOOLEAN"], ["a", "e"], ["a", "d"]>>, "d")
bool_value (false)
logical_negation
bool_value (false)
logical_negation
add_query("D", "d", <<["b", "c"], ["C", "INTEGER"], ["e", "BOOLEAN"], ["b", "INTEGER"], ["C", "INTEGER"], ["C", "B"], ["A", "BOOLEAN"], ["e", "BOOLEAN"]>>, "a")
numerical_negation
add_call_chain(<<e,b,B,D,e,d>>)
bool_value (false)
bool_value (false)
add_class(c)
add_call_chain(<<e,D,c,e,B,c>>)
add_attribute("C", "C", "INTEGER")
logical_negation
bool_value (false)
add_call_chain(<<d,D,c,A,D,e,c>>)
add_attribute("INTEGER", "B", "BOOLEAN")
bool_value (true)
greater_than
numerical_negation
add_call_chain(<<A,a,e,C,c,A>>)
bool_value (false)
logical_negation
disjunction
add_attribute("c", "A", "BOOLEAN")
type_check
modulo
add_command("A", "a", <<["b", "D"], ["c", "INTEGER"], ["INTEGER", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "c"], ["b", "INTEGER"]>>)
greater_than
add_class(A)
multiplication
type_check
add_command("D", "c", <<["D", "INTEGER"], ["INTEGER", "BOOLEAN"], ["b", "BOOLEAN"], ["BOOLEAN", "D"], ["C", "INTEGER"], ["BOOLEAN", "B"], ["a", "BOOLEAN"]>>)
add_attribute("A", "b", "e")
add_attribute("A", "d", "INTEGER")
add_attribute("e", "b", "INTEGER")
int_value (38)
int_value (41)
add_command("C", "INTEGER", <<["e", "a"], ["B", "C"], ["C", "BOOLEAN"], ["B", "D"], ["B", "BOOLEAN"], ["c", "INTEGER"], ["C", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "BOOLEAN"]>>)
add_command("BOOLEAN", "b", <<["d", "BOOLEAN"], ["d", "a"], ["e", "b"], ["A", "INTEGER"], ["A", "D"], ["b", "BOOLEAN"]>>)
add_query("d", "C", <<["C", "INTEGER"], ["a", "INTEGER"], ["d", "BOOLEAN"], ["A", "d"], ["B", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "INTEGER"]>>, "d")
add_call_chain(<<b,c,d>>)
int_value (4)
add_call_chain(<<D,C,e,b,c>>)
generate_java_code
conjunction
conjunction
add_query("c", "a", <<["B", "INTEGER"], ["BOOLEAN", "d"]>>, "c")
type_check
add_call_chain(<<D,D>>)
generate_java_code
add_command("b", "A", <<["D", "INTEGER"], ["b", "BOOLEAN"], ["D", "BOOLEAN"]>>)
bool_value (false)
add_query("B", "D", <<["D", "B"], ["B", "BOOLEAN"], ["D", "D"], ["B", "INTEGER"], ["C", "INTEGER"], ["A", "D"]>>, "d")
numerical_negation
add_attribute("c", "a", "INTEGER")
add_attribute("b", "b", "INTEGER")
int_value (1)
logical_negation
add_command("D", "A", <<["D", "BOOLEAN"], ["C", "INTEGER"]>>)
equals
add_call_chain(<<D,BOOLEAN,a>>)
add_command("A", "BOOLEAN", <<["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "INTEGER"]>>)
add_call_chain(<<c,d>>)
bool_value (false)
add_command("INTEGER", "a", <<["c", "BOOLEAN"], ["A", "INTEGER"], ["BOOLEAN", "C"], ["INTEGER", "BOOLEAN"]>>)
bool_value (true)
add_attribute("A", "e", "INTEGER")
multiplication
add_command("A", "BOOLEAN", <<["A", "BOOLEAN"]>>)
quotient
