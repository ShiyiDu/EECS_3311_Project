add_command("a", "D", <<["d", "INTEGER"], ["a", "INTEGER"], ["e", "BOOLEAN"], ["b", "INTEGER"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["BOOLEAN", "c"], ["c", "INTEGER"], ["A", "D"]>>)
add_call_chain(<<B,e>>)
generate_java_code
less_than
numerical_negation
add_call_chain(<<BOOLEAN,a,C,d,D,a,a,e>>)
numerical_negation
type_check
add_call_chain(<<c,C,B,d,a,INTEGER,INTEGER,D>>)
add_query("d", "b", <<["BOOLEAN", "BOOLEAN"], ["c", "D"]>>, "INTEGER")
generate_java_code
add_command("A", "D", <<["a", "BOOLEAN"], ["b", "c"], ["INTEGER", "C"], ["A", "BOOLEAN"], ["A", "BOOLEAN"]>>)
add_call_chain(<<B,a,a,e,c,b,d,e>>)
add_query("BOOLEAN", "INTEGER", <<["INTEGER", "C"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["e", "e"], ["c", "INTEGER"], ["C", "BOOLEAN"], ["B", "INTEGER"], ["A", "D"]>>, "A")
numerical_negation
multiplication
add_attribute("A", "D", "BOOLEAN")
int_value (30)
logical_negation
add_call_chain(<<B,b,A,BOOLEAN,d,B,B>>)
add_call_chain(<<B>>)
add_command("D", "B", <<["A", "INTEGER"], ["e", "BOOLEAN"], ["c", "BOOLEAN"], ["c", "INTEGER"], ["B", "INTEGER"], ["d", "INTEGER"], ["a", "INTEGER"]>>)
add_call_chain(<<D,b>>)
int_value (2)
generate_java_code
numerical_negation
disjunction
add_command("D", "c", <<["B", "B"], ["B", "INTEGER"], ["b", "B"], ["c", "BOOLEAN"], ["A", "BOOLEAN"]>>)
add_query("d", "A", <<["B", "INTEGER"], ["e", "INTEGER"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "C"]>>, "c")
multiplication
add_query("B", "d", <<["B", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>, "e")
generate_java_code
generate_java_code
bool_value (false)
type_check
int_value (11)
bool_value (false)
add_command("d", "D", <<["a", "INTEGER"], ["INTEGER", "INTEGER"], ["c", "e"], ["C", "a"]>>)
add_class(INTEGER)
numerical_negation
generate_java_code
generate_java_code
disjunction
add_call_chain(<<A,BOOLEAN,c,a,b,A,b,B>>)
add_call_chain(<<B,D,e,c>>)
add_class(e)
add_attribute("BOOLEAN", "C", "BOOLEAN")
int_value (24)
add_call_chain(<<B,BOOLEAN>>)
add_query("b", "d", <<["A", "BOOLEAN"]>>, "b")
add_query("A", "d", <<["b", "BOOLEAN"], ["B", "INTEGER"], ["D", "D"], ["d", "c"]>>, "B")
add_attribute("A", "A", "C")
logical_negation
add_query("B", "b", <<["a", "D"], ["C", "BOOLEAN"]>>, "C")
bool_value (false)
add_call_chain(<<A>>)
logical_negation
disjunction
add_attribute("c", "e", "BOOLEAN")
add_command("C", "b", <<["a", "a"], ["A", "BOOLEAN"], ["BOOLEAN", "B"], ["a", "BOOLEAN"], ["e", "INTEGER"], ["a", "c"], ["INTEGER", "INTEGER"], ["e", "C"]>>)
int_value (23)
add_call_chain(<<C,C,D>>)
add_command("D", "B", <<["a", "A"], ["b", "BOOLEAN"], ["e", "B"]>>)
numerical_negation
logical_negation
logical_negation
bool_value (true)
numerical_negation
less_than
subtraction
int_value (23)
bool_value (true)
add_attribute("b", "B", "INTEGER")
numerical_negation
add_class(BOOLEAN)
add_call_chain(<<INTEGER,d,D,BOOLEAN,C,d,d,D>>)
addition
add_call_chain(<<C,b,b,INTEGER,A,a>>)
int_value (13)
add_call_chain(<<B,BOOLEAN,d,d>>)
bool_value (true)
disjunction
add_call_chain(<<b,c,d,e,a,a,B>>)
logical_negation
addition
generate_java_code
bool_value (true)
add_query("C", "A", <<["e", "d"], ["D", "INTEGER"], ["b", "a"], ["B", "BOOLEAN"], ["INTEGER", "c"]>>, "C")
add_call_chain(<<c,D,d,c,D>>)
add_query("INTEGER", "C", <<["D", "INTEGER"], ["a", "BOOLEAN"], ["A", "e"], ["c", "INTEGER"], ["b", "BOOLEAN"], ["c", "INTEGER"]>>, "b")
add_command("B", "b", <<["D", "B"], ["d", "BOOLEAN"]>>)
add_call_chain(<<c>>)
disjunction
logical_negation
logical_negation
generate_java_code
add_call_chain(<<BOOLEAN,a,D,c,b,a>>)
add_command("B", "d", <<["A", "INTEGER"]>>)
add_attribute("b", "A", "INTEGER")
add_attribute("b", "INTEGER", "INTEGER")
type_check
add_call_chain(<<b,B,D>>)
generate_java_code
bool_value (false)
generate_java_code
add_query("BOOLEAN", "a", <<["BOOLEAN", "INTEGER"], ["a", "BOOLEAN"], ["B", "A"]>>, "b")
add_command("d", "A", <<["A", "C"], ["C", "BOOLEAN"], ["A", "c"], ["BOOLEAN", "BOOLEAN"], ["a", "INTEGER"], ["d", "INTEGER"], ["a", "A"], ["BOOLEAN", "e"], ["c", "BOOLEAN"]>>)
add_command("e", "d", <<["b", "BOOLEAN"], ["c", "d"], ["C", "b"], ["e", "BOOLEAN"], ["c", "BOOLEAN"]>>)
add_attribute("b", "d", "INTEGER")
add_command("b", "D", <<["B", "INTEGER"], ["b", "INTEGER"], ["INTEGER", "A"], ["b", "INTEGER"], ["b", "BOOLEAN"], ["b", "INTEGER"], ["C", "INTEGER"], ["A", "B"]>>)
add_call_chain(<<INTEGER,A,INTEGER,a,B,b,A,b>>)
add_command("B", "C", <<["BOOLEAN", "INTEGER"], ["C", "INTEGER"], ["D", "a"]>>)
bool_value (true)
add_call_chain(<<C,e,B,b,A>>)
numerical_negation
generate_java_code
add_call_chain(<<C,B>>)
type_check
add_call_chain(<<a>>)
bool_value (false)
type_check
add_call_chain(<<e,A,D>>)
multiplication
less_than
add_query("d", "e", <<["A", "INTEGER"], ["d", "D"], ["BOOLEAN", "INTEGER"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["D", "INTEGER"]>>, "a")
greater_than
add_call_chain(<<e,a,D,B,D,C,BOOLEAN>>)
conjunction
logical_negation
add_command("b", "B", <<["INTEGER", "D"], ["e", "BOOLEAN"]>>)
add_query("B", "INTEGER", <<["C", "B"], ["A", "C"], ["C", "d"], ["b", "BOOLEAN"], ["D", "d"], ["d", "INTEGER"], ["D", "BOOLEAN"], ["a", "BOOLEAN"]>>, "B")
add_call_chain(<<d,BOOLEAN,D,BOOLEAN,B,C>>)
add_call_chain(<<e,A,A,C,D>>)
logical_negation
add_query("a", "d", <<["b", "INTEGER"], ["e", "BOOLEAN"], ["e", "B"], ["C", "INTEGER"], ["b", "INTEGER"], ["b", "c"], ["D", "BOOLEAN"], ["c", "BOOLEAN"], ["INTEGER", "INTEGER"]>>, "C")
int_value (32)
add_class(B)
add_attribute("A", "D", "INTEGER")
add_call_chain(<<b,C,D,d,d,B,d>>)
add_command("A", "D", <<["INTEGER", "BOOLEAN"], ["D", "BOOLEAN"], ["d", "b"]>>)
add_query("INTEGER", "BOOLEAN", <<["B", "BOOLEAN"], ["e", "C"], ["B", "B"], ["e", "BOOLEAN"]>>, "C")
add_class(d)
add_attribute("a", "INTEGER", "BOOLEAN")
bool_value (true)
equals
add_class(C)
numerical_negation
numerical_negation
numerical_negation
int_value (26)
type_check
add_call_chain(<<d,b,D,INTEGER>>)
add_attribute("e", "BOOLEAN", "BOOLEAN")
equals
add_command("b", "c", <<["C", "BOOLEAN"]>>)
add_query("D", "BOOLEAN", <<["e", "INTEGER"], ["d", "INTEGER"], ["a", "INTEGER"], ["A", "BOOLEAN"], ["D", "D"]>>, "e")
bool_value (false)
bool_value (true)
int_value (1)
add_call_chain(<<A,b,a>>)
type_check
add_attribute("D", "A", "BOOLEAN")
type_check
add_attribute("d", "C", "BOOLEAN")
type_check
add_command("b", "c", <<["a", "C"], ["BOOLEAN", "INTEGER"], ["b", "BOOLEAN"], ["b", "BOOLEAN"]>>)
logical_negation
add_query("e", "e", <<["e", "INTEGER"], ["A", "INTEGER"], ["INTEGER", "c"], ["C", "A"], ["c", "INTEGER"], ["C", "C"], ["D", "BOOLEAN"], ["C", "BOOLEAN"]>>, "D")
add_class(A)
disjunction
numerical_negation
less_than
add_call_chain(<<a>>)
add_command("D", "e", <<["A", "INTEGER"], ["D", "BOOLEAN"]>>)
add_call_chain(<<e,B,D,e,A>>)
add_call_chain(<<d,D,A,D,e,B,D,BOOLEAN>>)
bool_value (true)
generate_java_code
type_check
add_call_chain(<<C,d,BOOLEAN,INTEGER>>)
bool_value (true)
generate_java_code
disjunction
add_class(INTEGER)
numerical_negation
int_value (9)
modulo
add_call_chain(<<A,b>>)
bool_value (true)
bool_value (true)
add_attribute("a", "INTEGER", "e")
add_attribute("INTEGER", "d", "INTEGER")
numerical_negation
add_call_chain(<<B>>)
add_query("C", "d", <<["A", "BOOLEAN"], ["D", "B"], ["D", "BOOLEAN"], ["A", "d"]>>, "d")
numerical_negation
generate_java_code
greater_than
add_attribute("C", "BOOLEAN", "INTEGER")
add_call_chain(<<A,A,C>>)
type_check
int_value (24)
add_command("a", "C", <<["BOOLEAN", "INTEGER"], ["d", "BOOLEAN"], ["A", "INTEGER"], ["D", "B"], ["b", "BOOLEAN"]>>)
add_call_chain(<<BOOLEAN,C,e,b,B,d,e,D>>)
bool_value (true)
type_check
logical_negation
type_check
bool_value (true)
bool_value (false)
int_value (32)
addition
generate_java_code
add_query("a", "A", <<["e", "e"]>>, "INTEGER")
less_than
generate_java_code
numerical_negation
add_attribute("A", "D", "INTEGER")
add_command("a", "C", <<["c", "c"], ["d", "INTEGER"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["C", "INTEGER"], ["B", "INTEGER"], ["d", "INTEGER"], ["B", "BOOLEAN"]>>)
add_call_chain(<<BOOLEAN,A,INTEGER,B>>)
add_call_chain(<<B,c,c>>)
conjunction
add_command("D", "C", <<["BOOLEAN", "INTEGER"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["d", "BOOLEAN"], ["c", "A"], ["D", "INTEGER"], ["A", "B"], ["C", "b"], ["D", "c"]>>)
bool_value (false)
add_query("c", "B", <<["C", "BOOLEAN"], ["c", "B"], ["e", "INTEGER"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["C", "INTEGER"], ["INTEGER", "d"]>>, "C")
logical_negation
add_query("C", "B", <<["INTEGER", "INTEGER"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["INTEGER", "b"], ["A", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["C", "INTEGER"], ["C", "INTEGER"]>>, "D")
add_query("B", "B", <<["d", "A"], ["d", "D"], ["A", "BOOLEAN"], ["d", "c"], ["d", "BOOLEAN"], ["D", "INTEGER"]>>, "c")
int_value (29)
logical_negation
generate_java_code
add_attribute("d", "d", "INTEGER")
numerical_negation
add_command("C", "d", <<["C", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "BOOLEAN"]>>)
numerical_negation
equals
less_than
add_call_chain(<<e,INTEGER,D>>)
add_call_chain(<<B,INTEGER>>)
int_value (22)
add_command("B", "b", <<["e", "INTEGER"], ["d", "BOOLEAN"], ["D", "A"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "INTEGER"], ["B", "e"], ["C", "BOOLEAN"]>>)
add_call_chain(<<INTEGER,D,e,A,a,b>>)
