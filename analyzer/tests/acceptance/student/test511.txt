int_value (32)
logical_negation
add_query("C", "C", <<["c", "d"], ["C", "BOOLEAN"], ["d", "INTEGER"], ["A", "INTEGER"], ["D", "B"], ["c", "INTEGER"], ["A", "INTEGER"], ["e", "D"], ["C", "INTEGER"]>>, "e")
add_command("B", "BOOLEAN", <<["C", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "BOOLEAN"], ["b", "e"], ["C", "BOOLEAN"], ["B", "INTEGER"]>>)
logical_negation
add_attribute("C", "a", "INTEGER")
add_call_chain(<<e>>)
add_call_chain(<<d,A,B,d,INTEGER,C,D,BOOLEAN>>)
add_class(B)
subtraction
add_call_chain(<<C>>)
int_value (5)
logical_negation
equals
int_value (9)
modulo
add_query("INTEGER", "c", <<["e", "D"], ["b", "INTEGER"], ["e", "d"], ["INTEGER", "a"], ["a", "D"], ["c", "A"], ["D", "BOOLEAN"], ["c", "b"], ["D", "BOOLEAN"]>>, "a")
generate_java_code
bool_value (false)
logical_negation
add_attribute("D", "a", "d")
bool_value (true)
add_attribute("B", "B", "INTEGER")
conjunction
modulo
add_call_chain(<<a,B,INTEGER,e,A,c,c,b,B>>)
add_call_chain(<<c>>)
add_query("INTEGER", "c", <<["b", "INTEGER"], ["a", "BOOLEAN"], ["b", "INTEGER"]>>, "e")
numerical_negation
multiplication
type_check
type_check
disjunction
add_query("C", "e", <<["c", "BOOLEAN"], ["D", "INTEGER"], ["C", "d"], ["b", "d"], ["BOOLEAN", "INTEGER"], ["b", "A"], ["d", "BOOLEAN"]>>, "c")
logical_negation
add_call_chain(<<e,INTEGER,a,e,a,BOOLEAN,b,a,c>>)
generate_java_code
add_call_chain(<<BOOLEAN,D>>)
generate_java_code
add_class(B)
add_command("a", "c", <<["D", "A"], ["e", "BOOLEAN"], ["d", "BOOLEAN"]>>)
add_call_chain(<<B,a,A,INTEGER,e>>)
bool_value (false)
add_call_chain(<<C,A,a,e,c,a,C>>)
add_attribute("a", "d", "INTEGER")
add_class(A)
add_call_chain(<<e,C,BOOLEAN,d,INTEGER,A,B,D>>)
int_value (5)
add_attribute("INTEGER", "d", "BOOLEAN")
add_query("e", "A", <<["D", "BOOLEAN"], ["b", "INTEGER"], ["INTEGER", "b"], ["c", "INTEGER"], ["D", "e"], ["A", "BOOLEAN"], ["D", "INTEGER"], ["a", "INTEGER"], ["b", "BOOLEAN"]>>, "C")
add_command("c", "C", <<["e", "INTEGER"], ["b", "A"], ["a", "b"], ["A", "INTEGER"]>>)
logical_negation
numerical_negation
int_value (24)
numerical_negation
bool_value (false)
logical_negation
bool_value (false)
add_call_chain(<<D,d,INTEGER,A>>)
type_check
add_query("A", "e", <<["BOOLEAN", "INTEGER"], ["d", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["A", "c"], ["b", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "BOOLEAN"]>>, "A")
add_attribute("C", "D", "BOOLEAN")
add_attribute("C", "D", "INTEGER")
int_value (2)
add_attribute("e", "a", "INTEGER")
add_class(c)
logical_negation
greater_than
numerical_negation
type_check
add_call_chain(<<B,D,a,A>>)
add_command("D", "D", <<["B", "b"], ["B", "INTEGER"], ["d", "INTEGER"], ["c", "d"], ["BOOLEAN", "INTEGER"], ["b", "a"], ["C", "a"], ["A", "B"]>>)
add_call_chain(<<C,e,b,D>>)
type_check
add_command("c", "d", <<["B", "INTEGER"], ["B", "A"], ["A", "INTEGER"], ["B", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>)
add_class(C)
logical_negation
add_attribute("e", "d", "B")
add_query("c", "INTEGER", <<["c", "BOOLEAN"], ["A", "BOOLEAN"]>>, "C")
logical_negation
add_query("d", "b", <<["b", "BOOLEAN"], ["C", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "B"], ["a", "BOOLEAN"], ["b", "INTEGER"], ["d", "INTEGER"], ["C", "e"]>>, "a")
numerical_negation
bool_value (true)
bool_value (true)
add_command("b", "C", <<["c", "INTEGER"], ["D", "INTEGER"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["BOOLEAN", "INTEGER"], ["INTEGER", "b"]>>)
add_attribute("INTEGER", "C", "BOOLEAN")
bool_value (false)
logical_negation
add_command("c", "BOOLEAN", <<["a", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "INTEGER"], ["BOOLEAN", "c"], ["d", "INTEGER"], ["C", "INTEGER"], ["INTEGER", "B"], ["b", "BOOLEAN"]>>)
numerical_negation
add_call_chain(<<c,c,a,BOOLEAN,e,INTEGER,C,C>>)
numerical_negation
add_command("B", "C", <<["C", "A"], ["e", "INTEGER"], ["a", "c"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["C", "d"]>>)
generate_java_code
bool_value (false)
int_value (38)
add_call_chain(<<e,B,a,b>>)
add_command("b", "A", <<["c", "B"], ["b", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "INTEGER"], ["A", "c"], ["e", "INTEGER"], ["d", "D"]>>)
add_command("b", "C", <<["C", "INTEGER"], ["a", "BOOLEAN"], ["BOOLEAN", "c"], ["INTEGER", "INTEGER"]>>)
add_class(A)
add_call_chain(<<A,e,BOOLEAN,C>>)
numerical_negation
add_call_chain(<<a,INTEGER,e,d,D>>)
add_attribute("d", "D", "B")
add_call_chain(<<D,c,C,A>>)
bool_value (true)
add_query("a", "a", <<["d", "d"], ["A", "INTEGER"], ["D", "a"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["A", "BOOLEAN"], ["e", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "BOOLEAN"]>>, "d")
less_than
type_check
add_call_chain(<<e,D>>)
add_attribute("C", "e", "e")
add_call_chain(<<A,D,A,c,d>>)
int_value (23)
add_query("b", "INTEGER", <<["d", "BOOLEAN"], ["a", "INTEGER"], ["b", "D"]>>, "D")
add_command("b", "D", <<["b", "BOOLEAN"], ["d", "INTEGER"], ["d", "e"], ["c", "b"], ["e", "b"], ["c", "B"], ["B", "INTEGER"], ["e", "BOOLEAN"]>>)
add_attribute("d", "D", "D")
logical_negation
add_attribute("d", "a", "BOOLEAN")
addition
add_attribute("d", "B", "BOOLEAN")
conjunction
int_value (39)
type_check
add_command("b", "B", <<["d", "INTEGER"], ["e", "BOOLEAN"], ["D", "INTEGER"], ["B", "BOOLEAN"], ["e", "INTEGER"], ["e", "C"], ["e", "c"], ["e", "BOOLEAN"]>>)
bool_value (false)
add_query("c", "b", <<["C", "BOOLEAN"], ["D", "B"]>>, "e")
add_call_chain(<<D,D,BOOLEAN,c,b,d,b>>)
add_attribute("B", "b", "D")
bool_value (false)
add_query("B", "C", <<["d", "BOOLEAN"]>>, "C")
logical_negation
add_call_chain(<<c,A,e,d,c,A,B>>)
modulo
bool_value (true)
logical_negation
bool_value (true)
numerical_negation
bool_value (false)
disjunction
bool_value (false)
type_check
add_call_chain(<<INTEGER,B,BOOLEAN>>)
add_call_chain(<<d,b,A,A,B>>)
add_call_chain(<<A,INTEGER,b,B,c>>)
add_command("e", "BOOLEAN", <<["d", "BOOLEAN"], ["c", "INTEGER"]>>)
numerical_negation
modulo
logical_negation
addition
add_command("C", "C", <<["e", "C"], ["B", "e"], ["C", "a"], ["C", "e"]>>)
add_command("e", "d", <<["e", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
greater_than
generate_java_code
add_command("BOOLEAN", "b", <<["d", "INTEGER"], ["c", "C"], ["D", "BOOLEAN"]>>)
bool_value (true)
add_call_chain(<<e,BOOLEAN>>)
int_value (27)
int_value (6)
add_query("e", "b", <<["b", "BOOLEAN"], ["C", "e"], ["b", "c"], ["B", "C"]>>, "a")
add_command("INTEGER", "e", <<["BOOLEAN", "INTEGER"], ["D", "INTEGER"], ["A", "d"], ["d", "BOOLEAN"], ["d", "BOOLEAN"]>>)
add_attribute("b", "A", "BOOLEAN")
add_call_chain(<<a,B,C,a,a,D,INTEGER,C>>)
bool_value (false)
type_check
add_query("a", "B", <<["D", "A"], ["D", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "INTEGER"], ["c", "a"], ["d", "B"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "BOOLEAN"]>>, "A")
add_command("c", "A", <<["d", "a"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "B"], ["d", "BOOLEAN"], ["D", "D"]>>)
add_query("d", "C", <<["b", "D"], ["d", "D"], ["b", "BOOLEAN"], ["a", "a"], ["b", "BOOLEAN"]>>, "e")
add_class(BOOLEAN)
numerical_negation
add_call_chain(<<A,A,d,A>>)
bool_value (false)
add_command("BOOLEAN", "A", <<["B", "BOOLEAN"], ["a", "a"], ["B", "INTEGER"], ["C", "INTEGER"], ["d", "BOOLEAN"], ["a", "INTEGER"]>>)
add_call_chain(<<b,C,A>>)
bool_value (false)
add_query("C", "a", <<["A", "INTEGER"], ["A", "A"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "A"], ["e", "INTEGER"], ["c", "BOOLEAN"]>>, "a")
add_call_chain(<<B>>)
type_check
greater_than
add_query("a", "c", <<["C", "D"], ["c", "d"], ["B", "INTEGER"], ["D", "INTEGER"], ["a", "INTEGER"], ["D", "INTEGER"], ["C", "INTEGER"], ["e", "e"]>>, "C")
logical_negation
numerical_negation
logical_negation
add_attribute("BOOLEAN", "C", "e")
add_call_chain(<<a,INTEGER,C,c,B,a,D>>)
type_check
add_class(e)
add_command("C", "b", <<["c", "A"], ["B", "a"]>>)
disjunction
type_check
conjunction
bool_value (true)
conjunction
add_call_chain(<<C,B,d,D,INTEGER,d>>)
add_command("a", "e", <<["D", "B"], ["C", "BOOLEAN"], ["d", "D"], ["B", "BOOLEAN"]>>)
bool_value (false)
add_call_chain(<<D,e,C,e>>)
bool_value (false)
disjunction
conjunction
type_check
less_than
add_call_chain(<<a,C,d,d,d,e>>)
numerical_negation
add_class(D)
logical_negation
numerical_negation
numerical_negation
logical_negation
type_check
add_attribute("c", "B", "INTEGER")
add_call_chain(<<D>>)
add_call_chain(<<C,B,D,d,c>>)
int_value (12)
add_class(A)
add_call_chain(<<D,B,e,C,INTEGER,a>>)
add_call_chain(<<B,c,b,e,D,c,A>>)
bool_value (false)
equals
add_attribute("b", "D", "INTEGER")
add_attribute("BOOLEAN", "c", "d")
bool_value (true)
int_value (49)
add_call_chain(<<C,c,BOOLEAN,BOOLEAN>>)
int_value (7)
numerical_negation
multiplication
add_attribute("e", "b", "BOOLEAN")
add_class(C)
logical_negation
quotient
add_call_chain(<<A,D,c,A,C,e>>)
type_check
add_query("A", "a", <<["D", "b"], ["B", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["A", "BOOLEAN"]>>, "A")
add_call_chain(<<D>>)
add_call_chain(<<A,c>>)
add_command("A", "b", <<["A", "INTEGER"], ["INTEGER", "C"], ["d", "INTEGER"], ["A", "d"], ["D", "INTEGER"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["e", "BOOLEAN"], ["c", "INTEGER"]>>)
add_command("d", "A", <<["B", "B"], ["c", "INTEGER"]>>)
add_query("C", "A", <<["a", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "a"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["INTEGER", "B"]>>, "c")
add_class(e)
add_query("b", "e", <<["A", "A"], ["A", "B"], ["d", "INTEGER"], ["INTEGER", "INTEGER"]>>, "e")
add_call_chain(<<e,e,A,C,B,e,C,D,D>>)
add_class(D)
int_value (23)
add_query("B", "e", <<["b", "INTEGER"]>>, "a")
add_call_chain(<<INTEGER,A,B,INTEGER,D,C,c,c,D>>)
type_check
bool_value (true)
add_query("d", "b", <<["e", "c"], ["A", "BOOLEAN"]>>, "b")
type_check
add_call_chain(<<B,C,C>>)
logical_negation
add_command("d", "B", <<["b", "BOOLEAN"], ["a", "INTEGER"], ["b", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "INTEGER"]>>)
add_attribute("e", "D", "BOOLEAN")
disjunction
generate_java_code
add_class(B)
modulo
