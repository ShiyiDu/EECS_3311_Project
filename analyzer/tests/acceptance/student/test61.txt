numerical_negation
bool_value (false)
less_than
subtraction
bool_value (false)
add_attribute("C", "INTEGER", "BOOLEAN")
add_query("C", "b", <<["c", "INTEGER"], ["INTEGER", "c"]>>, "d")
generate_java_code
add_command("a", "INTEGER", <<["e", "BOOLEAN"], ["A", "INTEGER"]>>)
int_value (49)
add_call_chain(<<B,C,B,e,e,INTEGER>>)
bool_value (true)
add_call_chain(<<a,BOOLEAN,a,D>>)
int_value (9)
logical_negation
quotient
int_value (32)
bool_value (true)
logical_negation
add_call_chain(<<A>>)
add_attribute("A", "e", "INTEGER")
bool_value (false)
add_attribute("INTEGER", "D", "BOOLEAN")
add_call_chain(<<A,d,c,c,e,c,D,D,C>>)
add_command("D", "d", <<["e", "C"], ["b", "BOOLEAN"], ["c", "b"], ["e", "C"], ["B", "INTEGER"], ["a", "INTEGER"], ["INTEGER", "b"], ["C", "INTEGER"], ["d", "INTEGER"]>>)
add_command("C", "B", <<["e", "INTEGER"], ["C", "INTEGER"], ["e", "BOOLEAN"], ["D", "A"], ["d", "BOOLEAN"]>>)
add_command("B", "D", <<["B", "a"], ["C", "BOOLEAN"], ["c", "INTEGER"], ["INTEGER", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "INTEGER"], ["e", "INTEGER"], ["a", "BOOLEAN"]>>)
modulo
add_attribute("D", "B", "A")
conjunction
numerical_negation
type_check
bool_value (true)
add_call_chain(<<b,b,C,D,c,D>>)
add_query("d", "b", <<["B", "INTEGER"], ["d", "INTEGER"], ["D", "INTEGER"]>>, "a")
numerical_negation
add_call_chain(<<d,BOOLEAN,c,b,B,INTEGER,B,c>>)
disjunction
add_call_chain(<<BOOLEAN,B,d,c>>)
disjunction
logical_negation
int_value (6)
add_command("d", "B", <<["e", "BOOLEAN"], ["A", "D"], ["d", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["C", "INTEGER"]>>)
add_attribute("A", "D", "BOOLEAN")
add_attribute("A", "D", "C")
int_value (45)
add_call_chain(<<C,a,D>>)
add_attribute("e", "D", "BOOLEAN")
add_query("a", "d", <<["a", "d"], ["d", "BOOLEAN"]>>, "d")
add_attribute("A", "b", "BOOLEAN")
add_class(BOOLEAN)
int_value (15)
type_check
add_command("e", "b", <<["b", "INTEGER"], ["D", "INTEGER"], ["A", "b"], ["B", "e"]>>)
add_command("C", "a", <<["INTEGER", "INTEGER"], ["C", "d"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "a"]>>)
disjunction
add_attribute("e", "d", "BOOLEAN")
numerical_negation
add_command("D", "C", <<["BOOLEAN", "D"], ["D", "A"], ["A", "INTEGER"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["B", "BOOLEAN"], ["D", "BOOLEAN"]>>)
int_value (40)
add_call_chain(<<A,e,B,b,B,C,A>>)
add_call_chain(<<e,D>>)
int_value (41)
add_call_chain(<<C,C,A,c,D,c,A,c,d>>)
add_call_chain(<<a,b,d,A,INTEGER,D,D,B,B>>)
add_call_chain(<<D,C,a,b,d>>)
add_call_chain(<<B,A>>)
add_call_chain(<<c,B>>)
numerical_negation
quotient
add_call_chain(<<d,A,B,INTEGER>>)
disjunction
add_class(C)
type_check
numerical_negation
add_class(A)
add_command("INTEGER", "B", <<["B", "INTEGER"], ["B", "INTEGER"], ["C", "BOOLEAN"], ["D", "a"]>>)
add_query("B", "c", <<["c", "D"], ["d", "INTEGER"], ["D", "BOOLEAN"]>>, "c")
add_command("B", "D", <<["B", "BOOLEAN"], ["d", "INTEGER"], ["b", "BOOLEAN"]>>)
add_command("C", "B", <<["INTEGER", "A"], ["d", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["c", "INTEGER"], ["BOOLEAN", "a"], ["C", "BOOLEAN"], ["D", "e"], ["C", "e"]>>)
add_class(C)
numerical_negation
numerical_negation
add_query("c", "c", <<["b", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>, "c")
add_attribute("c", "INTEGER", "BOOLEAN")
add_call_chain(<<A,INTEGER,C,INTEGER,A,BOOLEAN,b,e>>)
add_attribute("INTEGER", "a", "INTEGER")
conjunction
disjunction
add_attribute("BOOLEAN", "a", "INTEGER")
add_query("c", "d", <<["A", "INTEGER"]>>, "d")
add_attribute("d", "d", "INTEGER")
generate_java_code
int_value (31)
add_command("a", "a", <<["c", "A"], ["INTEGER", "B"], ["c", "BOOLEAN"], ["A", "B"], ["c", "INTEGER"]>>)
logical_negation
greater_than
add_command("INTEGER", "a", <<["D", "BOOLEAN"], ["e", "INTEGER"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["C", "a"], ["c", "BOOLEAN"], ["b", "BOOLEAN"]>>)
add_call_chain(<<D,c,A,D,e,C,B>>)
add_query("a", "c", <<["e", "BOOLEAN"], ["BOOLEAN", "d"], ["d", "d"], ["c", "A"], ["c", "c"]>>, "C")
bool_value (true)
int_value (10)
add_attribute("d", "C", "INTEGER")
add_attribute("C", "e", "INTEGER")
int_value (2)
int_value (26)
logical_negation
int_value (10)
add_query("B", "INTEGER", <<["A", "D"], ["d", "C"], ["B", "BOOLEAN"], ["INTEGER", "INTEGER"], ["b", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "C"], ["d", "a"], ["B", "B"]>>, "e")
add_call_chain(<<a,C>>)
greater_than
bool_value (true)
numerical_negation
numerical_negation
disjunction
add_call_chain(<<D,d,d,d,d,C,BOOLEAN,B,A>>)
add_command("A", "D", <<["A", "B"], ["D", "c"]>>)
add_call_chain(<<d,B,A,C,A,B,e,C>>)
generate_java_code
type_check
bool_value (true)
add_call_chain(<<D,c>>)
modulo
logical_negation
add_class(b)
addition
add_call_chain(<<e,C,B,INTEGER,e,c>>)
bool_value (true)
bool_value (true)
add_query("C", "d", <<["c", "INTEGER"], ["A", "BOOLEAN"], ["d", "b"], ["D", "D"], ["a", "BOOLEAN"], ["A", "BOOLEAN"]>>, "C")
add_call_chain(<<a,a,b,D,a,a,c>>)
conjunction
int_value (11)
logical_negation
add_call_chain(<<INTEGER,b>>)
add_attribute("c", "b", "BOOLEAN")
generate_java_code
int_value (32)
bool_value (false)
add_attribute("INTEGER", "C", "a")
disjunction
add_class(B)
quotient
add_query("D", "e", <<["B", "BOOLEAN"], ["B", "C"], ["C", "A"], ["d", "BOOLEAN"]>>, "c")
add_call_chain(<<B,e,D,D,c,b,b,d>>)
bool_value (true)
equals
generate_java_code
add_query("e", "INTEGER", <<["BOOLEAN", "B"], ["A", "c"], ["A", "INTEGER"]>>, "c")
add_call_chain(<<a>>)
int_value (46)
add_call_chain(<<c,BOOLEAN,A,a,c>>)
conjunction
add_attribute("INTEGER", "b", "e")
less_than
add_attribute("D", "D", "BOOLEAN")
add_call_chain(<<D,B,a,INTEGER>>)
add_attribute("D", "B", "BOOLEAN")
add_call_chain(<<INTEGER,B,A,C,INTEGER,INTEGER,c>>)
generate_java_code
add_command("C", "d", <<["C", "BOOLEAN"], ["d", "INTEGER"], ["INTEGER", "a"], ["D", "e"]>>)
numerical_negation
quotient
numerical_negation
add_attribute("a", "A", "e")
add_class(BOOLEAN)
type_check
bool_value (true)
add_attribute("c", "C", "BOOLEAN")
add_call_chain(<<B,C,e,e,a,c>>)
add_command("D", "b", <<["C", "INTEGER"], ["d", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "INTEGER"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["e", "BOOLEAN"]>>)
greater_than
int_value (49)
generate_java_code
generate_java_code
add_call_chain(<<B,B,B,b>>)
add_query("B", "A", <<["A", "INTEGER"], ["e", "C"], ["B", "INTEGER"], ["c", "INTEGER"], ["D", "INTEGER"]>>, "b")
add_class(c)
add_attribute("d", "C", "BOOLEAN")
logical_negation
add_command("e", "B", <<["A", "INTEGER"], ["a", "BOOLEAN"], ["C", "C"]>>)
logical_negation
numerical_negation
add_query("c", "b", <<["c", "INTEGER"], ["a", "A"], ["C", "INTEGER"], ["B", "a"]>>, "D")
int_value (27)
bool_value (false)
add_attribute("a", "a", "INTEGER")
logical_negation
add_class(A)
add_command("A", "c", <<["c", "C"], ["a", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["D", "c"], ["BOOLEAN", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "BOOLEAN"]>>)
int_value (27)
add_call_chain(<<C,c,B,C,e,B>>)
add_attribute("B", "c", "BOOLEAN")
add_call_chain(<<D,d,C,C>>)
add_query("d", "D", <<["A", "INTEGER"], ["B", "INTEGER"], ["a", "BOOLEAN"], ["d", "BOOLEAN"]>>, "B")
numerical_negation
numerical_negation
numerical_negation
subtraction
int_value (22)
numerical_negation
bool_value (false)
add_query("C", "C", <<["B", "INTEGER"], ["A", "e"], ["c", "BOOLEAN"]>>, "B")
add_query("D", "B", <<["c", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "BOOLEAN"]>>, "A")
int_value (26)
generate_java_code
equals
add_call_chain(<<e,B>>)
type_check
add_call_chain(<<C,e,d,e,c,a>>)
numerical_negation
add_call_chain(<<B,b,C,A,D,INTEGER>>)
add_attribute("B", "d", "d")
add_call_chain(<<B,a,c,D,d,A,a,A,d>>)
logical_negation
add_call_chain(<<e>>)
add_call_chain(<<C,D,B,C,C,e,e,BOOLEAN>>)
add_class(INTEGER)
add_query("A", "B", <<["B", "a"], ["a", "C"], ["c", "BOOLEAN"], ["e", "BOOLEAN"], ["d", "BOOLEAN"], ["b", "C"], ["D", "BOOLEAN"], ["B", "INTEGER"]>>, "B")
conjunction
add_query("BOOLEAN", "B", <<["B", "BOOLEAN"]>>, "B")
equals
int_value (21)
add_attribute("B", "b", "INTEGER")
int_value (42)
add_query("A", "B", <<["D", "e"], ["e", "b"], ["a", "INTEGER"]>>, "A")
bool_value (true)
addition
add_attribute("d", "B", "BOOLEAN")
add_call_chain(<<A,BOOLEAN,d,a,e,a,d,c>>)
numerical_negation
add_attribute("c", "BOOLEAN", "BOOLEAN")
logical_negation
add_command("A", "C", <<["D", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["D", "INTEGER"]>>)
type_check
add_command("e", "A", <<["INTEGER", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "BOOLEAN"], ["INTEGER", "c"], ["D", "BOOLEAN"]>>)
add_call_chain(<<A,b,D,INTEGER,d,B,A,b>>)
