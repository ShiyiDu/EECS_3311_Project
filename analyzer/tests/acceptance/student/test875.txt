add_command("C", "A", <<["b", "e"], ["D", "B"], ["D", "INTEGER"], ["A", "D"], ["INTEGER", "INTEGER"], ["BOOLEAN", "INTEGER"], ["INTEGER", "INTEGER"]>>)
add_query("A", "a", <<["BOOLEAN", "BOOLEAN"], ["a", "INTEGER"]>>, "B")
numerical_negation
generate_java_code
add_call_chain(<<c,d,e,a,D,B,a>>)
add_call_chain(<<INTEGER,d,d>>)
generate_java_code
add_call_chain(<<b,d,B,e>>)
logical_negation
add_attribute("b", "A", "BOOLEAN")
add_attribute("INTEGER", "d", "b")
generate_java_code
logical_negation
type_check
add_command("a", "e", <<["A", "d"], ["B", "INTEGER"], ["C", "INTEGER"], ["d", "INTEGER"], ["d", "b"], ["B", "BOOLEAN"], ["B", "A"], ["a", "INTEGER"], ["A", "e"]>>)
generate_java_code
add_query("D", "C", <<["INTEGER", "INTEGER"], ["a", "a"], ["a", "INTEGER"], ["A", "d"], ["b", "INTEGER"], ["C", "BOOLEAN"]>>, "b")
add_call_chain(<<b,b>>)
numerical_negation
add_call_chain(<<B>>)
conjunction
int_value (23)
add_class(D)
add_call_chain(<<C,a,C,b,INTEGER,c,BOOLEAN>>)
add_call_chain(<<INTEGER,c,BOOLEAN,INTEGER,c,a,c,A>>)
add_attribute("B", "B", "INTEGER")
add_call_chain(<<A,C,INTEGER,D,C,a,e,A>>)
add_query("c", "BOOLEAN", <<["C", "INTEGER"], ["A", "BOOLEAN"]>>, "d")
numerical_negation
greater_than
add_command("A", "c", <<["B", "C"], ["d", "BOOLEAN"]>>)
add_command("b", "B", <<["D", "c"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["D", "a"], ["D", "BOOLEAN"], ["d", "INTEGER"]>>)
type_check
multiplication
add_query("e", "a", <<["INTEGER", "a"], ["e", "INTEGER"], ["C", "e"], ["A", "INTEGER"], ["B", "C"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["D", "INTEGER"]>>, "c")
equals
add_command("C", "B", <<["A", "INTEGER"], ["C", "INTEGER"], ["c", "D"]>>)
add_attribute("C", "d", "INTEGER")
add_command("B", "b", <<["b", "A"], ["A", "BOOLEAN"], ["a", "BOOLEAN"]>>)
add_call_chain(<<c,e,BOOLEAN>>)
int_value (39)
add_class(B)
numerical_negation
add_call_chain(<<c,d,b,e,e,C,B,b>>)
equals
multiplication
add_query("A", "A", <<["a", "e"]>>, "D")
int_value (15)
logical_negation
add_attribute("D", "C", "BOOLEAN")
modulo
add_attribute("c", "A", "INTEGER")
bool_value (false)
add_call_chain(<<a,C,INTEGER,a,D,C,INTEGER,c,e>>)
multiplication
numerical_negation
type_check
add_command("b", "d", <<["A", "INTEGER"], ["d", "BOOLEAN"], ["d", "INTEGER"], ["d", "INTEGER"], ["D", "BOOLEAN"], ["a", "d"], ["C", "INTEGER"], ["B", "B"], ["D", "C"]>>)
bool_value (true)
add_attribute("BOOLEAN", "A", "BOOLEAN")
quotient
bool_value (false)
add_attribute("A", "D", "BOOLEAN")
add_attribute("D", "D", "INTEGER")
add_class(C)
add_call_chain(<<A,A,C,b,d,A,b,B,INTEGER>>)
add_command("B", "c", <<["d", "C"], ["D", "c"], ["c", "INTEGER"], ["B", "C"], ["C", "INTEGER"], ["A", "b"], ["b", "A"], ["A", "BOOLEAN"]>>)
generate_java_code
greater_than
add_attribute("D", "INTEGER", "c")
add_attribute("A", "A", "BOOLEAN")
logical_negation
add_attribute("a", "C", "BOOLEAN")
numerical_negation
bool_value (true)
add_attribute("D", "d", "D")
add_query("a", "c", <<["D", "INTEGER"]>>, "d")
add_class(a)
add_call_chain(<<b,B,A,b,c>>)
bool_value (true)
bool_value (false)
greater_than
equals
add_call_chain(<<C,A,d,D>>)
bool_value (false)
logical_negation
int_value (11)
add_command("C", "C", <<["INTEGER", "c"], ["b", "c"], ["D", "a"], ["A", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "BOOLEAN"], ["d", "a"], ["D", "INTEGER"], ["C", "INTEGER"]>>)
add_call_chain(<<C,C,A>>)
modulo
generate_java_code
greater_than
numerical_negation
add_query("A", "C", <<["d", "BOOLEAN"], ["c", "B"], ["D", "INTEGER"], ["A", "BOOLEAN"], ["b", "INTEGER"]>>, "B")
add_call_chain(<<c,e,BOOLEAN,e>>)
conjunction
disjunction
int_value (48)
add_call_chain(<<d,BOOLEAN,C>>)
add_class(e)
int_value (20)
add_call_chain(<<a,a,A,B,A>>)
add_call_chain(<<BOOLEAN,B,INTEGER,d,A,C,a,A>>)
add_command("A", "A", <<["D", "BOOLEAN"], ["B", "d"], ["BOOLEAN", "B"], ["b", "INTEGER"], ["A", "INTEGER"], ["c", "A"]>>)
add_command("a", "e", <<["c", "D"], ["INTEGER", "BOOLEAN"]>>)
add_call_chain(<<a,BOOLEAN,C>>)
bool_value (true)
add_command("d", "e", <<["b", "a"], ["C", "INTEGER"], ["c", "BOOLEAN"], ["b", "BOOLEAN"], ["d", "INTEGER"], ["c", "INTEGER"]>>)
bool_value (false)
add_query("A", "b", <<["d", "INTEGER"]>>, "C")
add_call_chain(<<a,D>>)
numerical_negation
add_query("D", "C", <<["A", "BOOLEAN"]>>, "a")
modulo
add_attribute("A", "D", "BOOLEAN")
disjunction
bool_value (false)
greater_than
bool_value (false)
add_query("D", "A", <<["C", "INTEGER"], ["c", "INTEGER"], ["d", "c"]>>, "INTEGER")
add_command("D", "A", <<["A", "BOOLEAN"], ["B", "INTEGER"], ["C", "INTEGER"], ["b", "A"], ["a", "INTEGER"], ["B", "BOOLEAN"], ["b", "b"], ["A", "c"], ["e", "INTEGER"]>>)
add_command("BOOLEAN", "a", <<["B", "a"], ["e", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "BOOLEAN"]>>)
type_check
add_call_chain(<<e,d,B,INTEGER>>)
type_check
add_call_chain(<<c,a,b>>)
add_command("A", "D", <<["c", "b"]>>)
type_check
numerical_negation
add_attribute("d", "c", "BOOLEAN")
add_class(D)
equals
add_command("A", "INTEGER", <<["c", "INTEGER"], ["d", "c"], ["BOOLEAN", "INTEGER"], ["e", "BOOLEAN"]>>)
type_check
add_attribute("d", "b", "BOOLEAN")
add_attribute("e", "d", "BOOLEAN")
add_call_chain(<<d,c,a,A,a,e,b,c,A>>)
add_class(D)
addition
int_value (12)
type_check
bool_value (false)
numerical_negation
numerical_negation
add_class(C)
add_call_chain(<<A,A>>)
int_value (10)
add_call_chain(<<a>>)
generate_java_code
add_class(B)
bool_value (false)
numerical_negation
add_call_chain(<<C>>)
greater_than
type_check
logical_negation
bool_value (true)
add_command("BOOLEAN", "e", <<["C", "INTEGER"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["a", "b"]>>)
add_call_chain(<<e,A,b,d,d,c,b>>)
numerical_negation
add_class(BOOLEAN)
add_call_chain(<<D,d>>)
bool_value (true)
add_query("a", "BOOLEAN", <<["A", "INTEGER"], ["C", "C"], ["INTEGER", "INTEGER"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["b", "INTEGER"]>>, "D")
generate_java_code
logical_negation
add_query("D", "a", <<["b", "BOOLEAN"], ["INTEGER", "c"], ["INTEGER", "B"], ["D", "D"], ["INTEGER", "BOOLEAN"]>>, "b")
add_attribute("a", "c", "INTEGER")
greater_than
add_command("C", "A", <<["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "INTEGER"], ["D", "A"], ["A", "e"], ["B", "INTEGER"]>>)
logical_negation
add_call_chain(<<a,a,A,c,C,C,A>>)
add_query("d", "D", <<["e", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "a"], ["D", "BOOLEAN"]>>, "C")
add_query("c", "B", <<["B", "BOOLEAN"], ["b", "INTEGER"], ["D", "BOOLEAN"]>>, "e")
int_value (33)
less_than
disjunction
add_attribute("D", "b", "INTEGER")
add_call_chain(<<b,BOOLEAN,e,e,D,BOOLEAN>>)
add_call_chain(<<e,a,c,b,e,C,d>>)
bool_value (false)
int_value (35)
numerical_negation
type_check
add_command("A", "d", <<["b", "INTEGER"], ["INTEGER", "BOOLEAN"], ["D", "INTEGER"], ["a", "BOOLEAN"], ["a", "BOOLEAN"]>>)
bool_value (true)
numerical_negation
add_call_chain(<<A,e,C,C,D,e,b,A,A>>)
add_attribute("C", "B", "B")
add_query("C", "b", <<["B", "INTEGER"], ["d", "d"], ["a", "e"], ["D", "C"]>>, "C")
int_value (38)
int_value (4)
type_check
generate_java_code
bool_value (false)
equals
int_value (8)
greater_than
int_value (9)
numerical_negation
add_call_chain(<<b>>)
numerical_negation
add_command("INTEGER", "e", <<["c", "A"], ["D", "c"], ["A", "BOOLEAN"], ["a", "C"], ["c", "INTEGER"], ["d", "B"], ["INTEGER", "INTEGER"], ["C", "INTEGER"]>>)
add_command("D", "e", <<["a", "INTEGER"]>>)
add_call_chain(<<INTEGER,d>>)
type_check
add_call_chain(<<INTEGER,D,A,C,A,B>>)
generate_java_code
bool_value (true)
type_check
conjunction
add_class(c)
generate_java_code
disjunction
add_call_chain(<<c,D>>)
logical_negation
numerical_negation
numerical_negation
int_value (25)
add_call_chain(<<INTEGER,a,a,c>>)
type_check
bool_value (true)
add_attribute("D", "C", "BOOLEAN")
add_attribute("A", "C", "e")
bool_value (false)
