add_command("c", "b", <<["D", "INTEGER"], ["B", "A"], ["d", "INTEGER"], ["C", "e"], ["C", "BOOLEAN"], ["d", "BOOLEAN"], ["c", "c"], ["C", "INTEGER"]>>)
add_query("d", "INTEGER", <<["a", "INTEGER"], ["B", "INTEGER"], ["B", "BOOLEAN"], ["BOOLEAN", "C"], ["BOOLEAN", "A"], ["c", "BOOLEAN"], ["B", "D"]>>, "A")
equals
add_query("D", "BOOLEAN", <<["BOOLEAN", "a"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "a"], ["A", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>, "A")
logical_negation
less_than
logical_negation
int_value (13)
disjunction
add_class(A)
add_call_chain(<<B,b,c,D,a,e>>)
add_query("A", "d", <<["b", "BOOLEAN"]>>, "BOOLEAN")
add_class(d)
bool_value (true)
add_call_chain(<<a>>)
add_class(C)
add_call_chain(<<b>>)
add_command("e", "A", <<["d", "a"]>>)
generate_java_code
add_attribute("b", "A", "A")
add_call_chain(<<A,D,B,A,B,A,B>>)
add_class(A)
add_class(b)
numerical_negation
add_call_chain(<<a,D,e,a,D>>)
equals
bool_value (true)
conjunction
logical_negation
add_call_chain(<<BOOLEAN,C,B>>)
add_class(B)
add_call_chain(<<BOOLEAN,D>>)
int_value (21)
generate_java_code
add_call_chain(<<e,d,BOOLEAN,BOOLEAN,B>>)
bool_value (false)
add_command("INTEGER", "B", <<["INTEGER", "BOOLEAN"], ["c", "INTEGER"], ["B", "INTEGER"]>>)
add_query("c", "A", <<["D", "INTEGER"]>>, "d")
add_query("e", "b", <<["d", "INTEGER"], ["b", "INTEGER"]>>, "b")
add_command("b", "c", <<["d", "b"], ["a", "INTEGER"], ["C", "INTEGER"], ["INTEGER", "BOOLEAN"], ["b", "INTEGER"], ["D", "BOOLEAN"]>>)
bool_value (false)
add_call_chain(<<A>>)
add_call_chain(<<a,D,B,BOOLEAN,A>>)
numerical_negation
conjunction
numerical_negation
add_query("d", "B", <<["A", "BOOLEAN"], ["d", "B"], ["b", "BOOLEAN"], ["C", "INTEGER"]>>, "e")
add_query("A", "INTEGER", <<["A", "b"]>>, "INTEGER")
bool_value (false)
add_query("b", "A", <<["c", "d"], ["B", "BOOLEAN"], ["e", "BOOLEAN"], ["c", "BOOLEAN"], ["c", "INTEGER"], ["d", "INTEGER"], ["BOOLEAN", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["B", "INTEGER"]>>, "D")
add_attribute("INTEGER", "a", "a")
conjunction
add_command("a", "a", <<["d", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "BOOLEAN"], ["c", "D"], ["c", "B"], ["c", "INTEGER"], ["b", "INTEGER"], ["c", "INTEGER"]>>)
generate_java_code
add_call_chain(<<A,C,d,BOOLEAN>>)
add_command("B", "c", <<["B", "INTEGER"], ["d", "BOOLEAN"], ["INTEGER", "d"], ["d", "C"], ["INTEGER", "INTEGER"], ["c", "BOOLEAN"], ["B", "a"]>>)
bool_value (false)
addition
type_check
disjunction
bool_value (true)
add_call_chain(<<B,d,INTEGER,e>>)
logical_negation
add_class(C)
add_command("A", "B", <<["B", "BOOLEAN"], ["INTEGER", "a"], ["b", "b"], ["e", "INTEGER"]>>)
type_check
bool_value (false)
numerical_negation
int_value (37)
numerical_negation
add_command("B", "d", <<["D", "INTEGER"], ["BOOLEAN", "INTEGER"], ["D", "A"], ["C", "c"], ["c", "INTEGER"], ["d", "BOOLEAN"], ["d", "INTEGER"], ["c", "INTEGER"]>>)
type_check
equals
subtraction
add_query("D", "e", <<["INTEGER", "BOOLEAN"], ["INTEGER", "c"], ["B", "INTEGER"], ["C", "BOOLEAN"], ["d", "BOOLEAN"], ["c", "INTEGER"], ["e", "e"], ["c", "INTEGER"]>>, "e")
add_call_chain(<<b>>)
add_command("C", "d", <<["C", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "D"], ["c", "INTEGER"], ["e", "BOOLEAN"]>>)
add_query("B", "a", <<["A", "INTEGER"], ["b", "INTEGER"], ["B", "INTEGER"], ["c", "INTEGER"], ["b", "BOOLEAN"], ["C", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["INTEGER", "INTEGER"]>>, "c")
add_attribute("B", "A", "BOOLEAN")
add_class(B)
add_command("D", "b", <<["c", "INTEGER"], ["e", "INTEGER"], ["D", "b"], ["c", "BOOLEAN"]>>)
add_attribute("d", "C", "INTEGER")
add_call_chain(<<D,D>>)
add_attribute("e", "b", "INTEGER")
add_attribute("c", "D", "INTEGER")
equals
equals
subtraction
add_attribute("INTEGER", "INTEGER", "INTEGER")
add_call_chain(<<B,a,B,C,A,INTEGER,BOOLEAN,c>>)
add_attribute("a", "a", "BOOLEAN")
generate_java_code
numerical_negation
add_command("b", "A", <<["d", "INTEGER"], ["C", "b"]>>)
bool_value (false)
bool_value (true)
add_call_chain(<<e>>)
add_command("C", "c", <<["c", "C"], ["B", "BOOLEAN"], ["C", "BOOLEAN"], ["BOOLEAN", "D"], ["INTEGER", "INTEGER"], ["b", "INTEGER"], ["A", "A"], ["B", "C"]>>)
add_query("d", "C", <<["b", "BOOLEAN"], ["d", "INTEGER"]>>, "B")
add_call_chain(<<A,a,A,d,d>>)
add_query("D", "a", <<["a", "INTEGER"], ["C", "INTEGER"], ["c", "BOOLEAN"], ["e", "e"], ["B", "e"], ["a", "A"], ["A", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["A", "BOOLEAN"]>>, "a")
add_class(B)
multiplication
bool_value (false)
numerical_negation
add_class(d)
add_query("c", "c", <<["a", "BOOLEAN"], ["c", "INTEGER"], ["D", "a"], ["B", "INTEGER"]>>, "C")
add_command("C", "C", <<["C", "BOOLEAN"]>>)
equals
add_command("c", "d", <<["B", "BOOLEAN"], ["D", "d"], ["c", "INTEGER"], ["a", "BOOLEAN"], ["b", "c"], ["b", "BOOLEAN"], ["A", "d"], ["C", "INTEGER"]>>)
add_call_chain(<<d,d,A,D,B,C,C,BOOLEAN>>)
logical_negation
add_query("C", "c", <<["b", "C"], ["INTEGER", "INTEGER"], ["e", "BOOLEAN"]>>, "A")
add_call_chain(<<B,d>>)
add_call_chain(<<C>>)
add_call_chain(<<a,INTEGER,D,BOOLEAN,C>>)
generate_java_code
type_check
add_call_chain(<<C,b,D,a>>)
generate_java_code
numerical_negation
numerical_negation
add_query("D", "B", <<["c", "B"], ["B", "A"], ["B", "INTEGER"], ["d", "BOOLEAN"]>>, "INTEGER")
add_class(C)
add_call_chain(<<BOOLEAN,A>>)
disjunction
add_query("b", "b", <<["C", "BOOLEAN"]>>, "B")
add_call_chain(<<A>>)
int_value (28)
add_command("c", "A", <<["A", "INTEGER"], ["e", "INTEGER"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "INTEGER"], ["b", "C"], ["a", "BOOLEAN"], ["D", "INTEGER"]>>)
subtraction
add_call_chain(<<d,BOOLEAN,a,C,a,c,d,BOOLEAN>>)
int_value (5)
conjunction
type_check
add_attribute("d", "a", "INTEGER")
add_query("A", "BOOLEAN", <<["B", "INTEGER"], ["INTEGER", "INTEGER"], ["A", "INTEGER"], ["a", "B"], ["a", "INTEGER"], ["C", "INTEGER"]>>, "b")
add_query("C", "e", <<["BOOLEAN", "d"], ["C", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["d", "BOOLEAN"], ["e", "INTEGER"], ["INTEGER", "b"]>>, "INTEGER")
add_call_chain(<<INTEGER,b,b,d>>)
int_value (28)
add_query("B", "d", <<["C", "INTEGER"], ["e", "D"], ["A", "D"]>>, "D")
bool_value (false)
add_query("INTEGER", "INTEGER", <<["c", "INTEGER"], ["B", "INTEGER"], ["a", "INTEGER"], ["b", "INTEGER"], ["A", "INTEGER"], ["e", "BOOLEAN"], ["c", "INTEGER"]>>, "b")
generate_java_code
numerical_negation
add_command("b", "A", <<["e", "INTEGER"], ["c", "BOOLEAN"], ["a", "A"], ["C", "c"], ["B", "INTEGER"], ["a", "e"]>>)
greater_than
conjunction
add_query("c", "e", <<["C", "BOOLEAN"], ["c", "INTEGER"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["b", "INTEGER"]>>, "BOOLEAN")
add_query("C", "B", <<["b", "INTEGER"]>>, "C")
numerical_negation
bool_value (false)
int_value (49)
bool_value (false)
conjunction
bool_value (true)
add_attribute("c", "D", "BOOLEAN")
add_query("c", "c", <<["B", "BOOLEAN"], ["D", "INTEGER"], ["e", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "INTEGER"], ["INTEGER", "BOOLEAN"], ["B", "INTEGER"]>>, "A")
bool_value (false)
add_query("d", "A", <<["b", "INTEGER"], ["e", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "INTEGER"]>>, "d")
add_query("A", "b", <<["BOOLEAN", "BOOLEAN"], ["c", "INTEGER"]>>, "A")
add_query("e", "B", <<["d", "INTEGER"], ["BOOLEAN", "INTEGER"], ["e", "INTEGER"], ["e", "BOOLEAN"], ["e", "D"], ["A", "INTEGER"], ["a", "INTEGER"], ["C", "BOOLEAN"]>>, "D")
add_query("b", "e", <<["INTEGER", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "BOOLEAN"]>>, "BOOLEAN")
type_check
type_check
add_attribute("C", "e", "INTEGER")
type_check
numerical_negation
int_value (10)
quotient
add_call_chain(<<B>>)
logical_negation
add_call_chain(<<D>>)
add_query("a", "C", <<["e", "BOOLEAN"], ["A", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>, "c")
add_command("d", "C", <<["a", "BOOLEAN"], ["a", "BOOLEAN"]>>)
int_value (39)
numerical_negation
addition
int_value (2)
add_call_chain(<<c,b,A,BOOLEAN>>)
add_call_chain(<<A,e>>)
conjunction
bool_value (false)
logical_negation
int_value (8)
type_check
conjunction
numerical_negation
add_call_chain(<<D,C,b,A,b>>)
add_command("B", "B", <<["e", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "B"], ["e", "INTEGER"]>>)
add_query("A", "C", <<["A", "a"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["e", "b"]>>, "c")
greater_than
conjunction
logical_negation
bool_value (false)
add_class(INTEGER)
disjunction
int_value (31)
disjunction
add_call_chain(<<BOOLEAN,INTEGER,C,c,d>>)
add_attribute("e", "d", "BOOLEAN")
bool_value (false)
add_call_chain(<<A>>)
