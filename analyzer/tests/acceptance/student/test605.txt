add_query("D", "C", <<["c", "BOOLEAN"], ["d", "INTEGER"]>>, "B")
logical_negation
type_check
add_attribute("A", "b", "BOOLEAN")
add_class(C)
int_value (49)
add_call_chain(<<C,b>>)
bool_value (false)
add_call_chain(<<c>>)
quotient
add_query("b", "d", <<["INTEGER", "e"], ["e", "BOOLEAN"], ["B", "a"], ["B", "BOOLEAN"], ["BOOLEAN", "c"], ["C", "INTEGER"]>>, "B")
add_command("e", "A", <<["D", "D"], ["A", "BOOLEAN"], ["e", "a"], ["INTEGER", "INTEGER"], ["e", "BOOLEAN"]>>)
add_attribute("e", "D", "BOOLEAN")
numerical_negation
add_command("b", "D", <<["A", "c"], ["c", "INTEGER"], ["b", "BOOLEAN"], ["b", "BOOLEAN"], ["e", "INTEGER"], ["b", "BOOLEAN"], ["D", "INTEGER"], ["D", "INTEGER"], ["e", "A"]>>)
add_query("B", "a", <<["d", "c"], ["A", "e"], ["b", "INTEGER"], ["c", "BOOLEAN"]>>, "D")
bool_value (true)
type_check
add_class(e)
add_call_chain(<<d,a,B,c,A,b,a,d,B>>)
addition
quotient
less_than
bool_value (true)
add_call_chain(<<c>>)
add_query("B", "C", <<["C", "b"], ["B", "INTEGER"], ["e", "e"], ["d", "INTEGER"]>>, "d")
add_query("B", "C", <<["c", "D"], ["d", "INTEGER"], ["d", "BOOLEAN"], ["A", "B"], ["BOOLEAN", "BOOLEAN"]>>, "e")
bool_value (false)
add_call_chain(<<D>>)
add_command("A", "D", <<["D", "BOOLEAN"]>>)
add_attribute("e", "e", "BOOLEAN")
add_class(B)
int_value (49)
add_call_chain(<<A,d,b,A,D,c,A,e>>)
add_query("INTEGER", "A", <<["b", "BOOLEAN"]>>, "e")
less_than
add_command("b", "B", <<["INTEGER", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "B"]>>)
add_attribute("D", "D", "a")
add_attribute("e", "D", "B")
bool_value (false)
greater_than
add_class(a)
add_attribute("a", "d", "INTEGER")
addition
generate_java_code
add_query("e", "a", <<["c", "BOOLEAN"]>>, "a")
add_command("D", "A", <<["B", "BOOLEAN"], ["d", "INTEGER"], ["e", "B"], ["B", "BOOLEAN"], ["e", "e"], ["e", "d"], ["e", "d"], ["C", "INTEGER"], ["A", "BOOLEAN"]>>)
add_attribute("A", "A", "INTEGER")
add_query("INTEGER", "d", <<["A", "INTEGER"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "INTEGER"]>>, "D")
numerical_negation
conjunction
add_command("b", "D", <<["e", "C"]>>)
generate_java_code
add_attribute("b", "C", "BOOLEAN")
add_query("A", "a", <<["a", "D"], ["B", "INTEGER"], ["a", "BOOLEAN"], ["BOOLEAN", "A"], ["INTEGER", "INTEGER"], ["a", "INTEGER"]>>, "B")
int_value (19)
add_call_chain(<<a,b,c>>)
add_query("a", "BOOLEAN", <<["e", "BOOLEAN"], ["a", "b"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["b", "INTEGER"], ["c", "d"], ["a", "a"]>>, "a")
int_value (47)
bool_value (false)
add_query("B", "b", <<["b", "INTEGER"], ["INTEGER", "BOOLEAN"]>>, "B")
int_value (21)
add_call_chain(<<b,d,C,D,D,e,INTEGER,d,INTEGER>>)
add_call_chain(<<a,c,e,A>>)
modulo
numerical_negation
add_attribute("B", "B", "BOOLEAN")
int_value (46)
numerical_negation
int_value (23)
numerical_negation
add_query("A", "a", <<["e", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "INTEGER"], ["B", "a"], ["b", "INTEGER"], ["e", "b"], ["d", "INTEGER"], ["BOOLEAN", "A"], ["e", "INTEGER"]>>, "C")
numerical_negation
add_class(a)
int_value (28)
numerical_negation
add_command("c", "A", <<["B", "BOOLEAN"], ["INTEGER", "INTEGER"], ["b", "C"], ["D", "BOOLEAN"], ["C", "BOOLEAN"]>>)
bool_value (true)
add_call_chain(<<A,B,e,B,c,d,a,D>>)
add_query("e", "b", <<["b", "INTEGER"], ["a", "d"], ["C", "e"], ["b", "d"], ["BOOLEAN", "INTEGER"], ["B", "b"], ["C", "a"]>>, "C")
add_query("a", "B", <<["D", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "INTEGER"]>>, "INTEGER")
generate_java_code
add_attribute("d", "D", "INTEGER")
generate_java_code
bool_value (true)
bool_value (false)
add_attribute("c", "D", "INTEGER")
add_call_chain(<<D,B,e,B>>)
logical_negation
add_call_chain(<<B,D,BOOLEAN,A,e,a,B,a,BOOLEAN>>)
add_query("d", "B", <<["D", "B"]>>, "b")
numerical_negation
conjunction
add_attribute("BOOLEAN", "e", "BOOLEAN")
numerical_negation
add_call_chain(<<A,a,e,d,c,b,A,c,D>>)
add_command("b", "D", <<["c", "INTEGER"], ["e", "INTEGER"], ["d", "INTEGER"], ["A", "BOOLEAN"], ["b", "BOOLEAN"], ["b", "INTEGER"]>>)
add_call_chain(<<INTEGER,d>>)
numerical_negation
logical_negation
disjunction
add_attribute("d", "e", "D")
greater_than
add_attribute("e", "C", "INTEGER")
bool_value (true)
add_class(A)
bool_value (false)
int_value (26)
add_call_chain(<<C,c,d,c,a,A,B,b,a>>)
add_attribute("a", "D", "INTEGER")
add_call_chain(<<C,B,a,e,BOOLEAN,B>>)
int_value (44)
bool_value (true)
numerical_negation
add_call_chain(<<c,B,D,e,c,B,B>>)
int_value (34)
add_query("C", "A", <<["e", "INTEGER"], ["d", "C"], ["D", "INTEGER"]>>, "D")
int_value (15)
disjunction
add_attribute("a", "A", "INTEGER")
type_check
add_command("e", "B", <<["c", "D"], ["INTEGER", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "BOOLEAN"]>>)
numerical_negation
bool_value (false)
add_call_chain(<<C,BOOLEAN,C,a,C,B,c>>)
int_value (17)
numerical_negation
equals
add_query("C", "A", <<["c", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "D"], ["a", "INTEGER"], ["INTEGER", "a"], ["C", "INTEGER"], ["B", "B"], ["B", "D"], ["b", "BOOLEAN"]>>, "a")
add_call_chain(<<B,d,c,a,c,D,D,b>>)
add_command("c", "C", <<["BOOLEAN", "c"], ["C", "BOOLEAN"], ["a", "INTEGER"], ["e", "INTEGER"], ["D", "INTEGER"], ["a", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "BOOLEAN"]>>)
bool_value (false)
add_query("d", "a", <<["c", "BOOLEAN"], ["c", "INTEGER"], ["a", "BOOLEAN"], ["A", "INTEGER"], ["D", "C"], ["C", "INTEGER"]>>, "e")
add_attribute("D", "d", "a")
multiplication
type_check
generate_java_code
add_command("b", "b", <<["A", "BOOLEAN"]>>)
add_call_chain(<<D,c>>)
add_class(e)
add_call_chain(<<c,BOOLEAN,e,d,a>>)
type_check
logical_negation
type_check
add_attribute("B", "e", "b")
numerical_negation
logical_negation
greater_than
add_query("C", "c", <<["a", "b"]>>, "e")
add_call_chain(<<INTEGER,b,c,D,B,b,e,C,e>>)
add_command("A", "C", <<["a", "INTEGER"], ["A", "BOOLEAN"], ["D", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "INTEGER"], ["BOOLEAN", "INTEGER"], ["B", "c"]>>)
add_query("d", "A", <<["C", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "A"], ["b", "INTEGER"], ["c", "INTEGER"], ["BOOLEAN", "INTEGER"], ["INTEGER", "INTEGER"], ["e", "b"]>>, "C")
add_call_chain(<<B,A,c>>)
add_attribute("b", "A", "BOOLEAN")
int_value (34)
add_command("B", "BOOLEAN", <<["D", "A"], ["A", "a"]>>)
add_class(b)
add_call_chain(<<b,d,D,INTEGER,B,D,BOOLEAN,BOOLEAN,e>>)
int_value (11)
type_check
add_command("d", "D", <<["INTEGER", "BOOLEAN"], ["A", "e"], ["A", "BOOLEAN"]>>)
bool_value (false)
type_check
logical_negation
subtraction
add_call_chain(<<A,e>>)
logical_negation
type_check
add_call_chain(<<A,e,e,b,B,B,C>>)
less_than
add_command("INTEGER", "A", <<["C", "BOOLEAN"], ["c", "INTEGER"], ["BOOLEAN", "INTEGER"], ["C", "BOOLEAN"], ["a", "INTEGER"], ["C", "A"]>>)
add_call_chain(<<C,BOOLEAN,A,BOOLEAN,C,d>>)
add_attribute("INTEGER", "D", "BOOLEAN")
int_value (17)
greater_than
bool_value (false)
add_call_chain(<<INTEGER,BOOLEAN,D,B,A>>)
add_call_chain(<<e,D,BOOLEAN,e,d>>)
add_call_chain(<<INTEGER,B,D,b,e,d,a,c>>)
add_attribute("d", "C", "D")
add_attribute("BOOLEAN", "c", "INTEGER")
add_command("b", "e", <<["B", "INTEGER"], ["c", "INTEGER"], ["A", "INTEGER"], ["e", "INTEGER"], ["C", "C"], ["d", "BOOLEAN"], ["d", "d"], ["c", "INTEGER"]>>)
add_call_chain(<<a,e>>)
numerical_negation
type_check
add_call_chain(<<a>>)
type_check
add_query("D", "INTEGER", <<["a", "B"], ["A", "BOOLEAN"], ["C", "a"], ["A", "INTEGER"], ["D", "D"], ["d", "INTEGER"], ["d", "INTEGER"]>>, "C")
type_check
add_class(INTEGER)
multiplication
logical_negation
add_query("C", "D", <<["e", "INTEGER"], ["B", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["B", "e"], ["D", "INTEGER"], ["a", "BOOLEAN"], ["e", "BOOLEAN"]>>, "D")
equals
add_query("a", "a", <<["e", "INTEGER"], ["b", "D"], ["C", "BOOLEAN"]>>, "a")
add_attribute("A", "D", "INTEGER")
logical_negation
add_query("A", "B", <<["e", "B"], ["BOOLEAN", "a"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["e", "C"]>>, "A")
add_attribute("b", "A", "BOOLEAN")
int_value (48)
add_call_chain(<<a,BOOLEAN,c,B>>)
add_command("BOOLEAN", "A", <<["A", "INTEGER"]>>)
addition
add_attribute("C", "d", "BOOLEAN")
bool_value (false)
less_than
add_command("a", "C", <<["c", "INTEGER"], ["D", "d"], ["A", "INTEGER"], ["d", "A"], ["a", "INTEGER"]>>)
add_query("INTEGER", "b", <<["D", "INTEGER"], ["d", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "A"], ["c", "BOOLEAN"]>>, "C")
add_call_chain(<<C,C>>)
add_attribute("d", "e", "c")
add_call_chain(<<D,e,C>>)
less_than
disjunction
add_query("BOOLEAN", "D", <<["A", "BOOLEAN"], ["c", "INTEGER"], ["b", "c"], ["A", "c"], ["C", "BOOLEAN"], ["BOOLEAN", "D"], ["b", "INTEGER"], ["b", "BOOLEAN"]>>, "B")
add_query("B", "b", <<["C", "BOOLEAN"], ["D", "b"], ["B", "BOOLEAN"], ["B", "INTEGER"]>>, "C")
bool_value (false)
bool_value (true)
logical_negation
add_call_chain(<<C,B>>)
add_call_chain(<<a,c,a,D,e,a,b,a,c>>)
generate_java_code
add_query("B", "C", <<["c", "INTEGER"], ["C", "C"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["B", "INTEGER"], ["d", "BOOLEAN"], ["c", "d"], ["d", "INTEGER"], ["b", "c"]>>, "BOOLEAN")
less_than
add_command("C", "a", <<["c", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "C"], ["d", "INTEGER"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["A", "d"]>>)
add_class(B)
add_call_chain(<<e,C,B,BOOLEAN>>)
conjunction
add_class(D)
add_call_chain(<<D>>)
numerical_negation
int_value (47)
add_attribute("D", "a", "BOOLEAN")
generate_java_code
addition
generate_java_code
add_command("C", "a", <<["b", "BOOLEAN"]>>)
add_command("D", "C", <<["A", "INTEGER"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["A", "a"]>>)
add_attribute("A", "A", "a")
add_attribute("A", "c", "e")
add_query("B", "b", <<["D", "BOOLEAN"], ["b", "b"], ["A", "c"], ["c", "BOOLEAN"], ["A", "c"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["e", "B"]>>, "a")
bool_value (true)
add_command("B", "c", <<["BOOLEAN", "BOOLEAN"], ["C", "BOOLEAN"]>>)
less_than
logical_negation
add_attribute("a", "a", "BOOLEAN")
type_check
int_value (32)
add_attribute("A", "c", "INTEGER")
bool_value (false)
