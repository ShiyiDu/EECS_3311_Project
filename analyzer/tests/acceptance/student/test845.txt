add_attribute("A", "b", "INTEGER")
int_value (11)
bool_value (false)
less_than
bool_value (true)
add_command("A", "d", <<["d", "INTEGER"], ["C", "C"], ["b", "INTEGER"], ["e", "INTEGER"]>>)
quotient
add_command("D", "B", <<["B", "D"]>>)
add_call_chain(<<d,A,a>>)
generate_java_code
add_query("a", "c", <<["a", "INTEGER"], ["c", "BOOLEAN"], ["d", "a"], ["D", "BOOLEAN"], ["A", "D"], ["d", "INTEGER"], ["e", "BOOLEAN"]>>, "A")
add_command("INTEGER", "A", <<["INTEGER", "A"], ["D", "D"], ["C", "B"], ["c", "C"], ["A", "INTEGER"], ["A", "a"]>>)
generate_java_code
add_attribute("B", "c", "BOOLEAN")
disjunction
bool_value (false)
type_check
conjunction
int_value (45)
add_call_chain(<<C,B,D>>)
generate_java_code
add_attribute("INTEGER", "C", "INTEGER")
numerical_negation
add_class(D)
generate_java_code
add_attribute("c", "c", "BOOLEAN")
add_call_chain(<<c,INTEGER,a>>)
add_query("B", "b", <<["d", "INTEGER"], ["b", "BOOLEAN"], ["B", "A"], ["c", "BOOLEAN"]>>, "d")
int_value (3)
add_query("A", "A", <<["b", "c"]>>, "C")
numerical_negation
type_check
add_attribute("e", "A", "BOOLEAN")
logical_negation
subtraction
add_attribute("INTEGER", "D", "INTEGER")
add_attribute("D", "D", "INTEGER")
add_call_chain(<<C,b,d,a,B>>)
add_query("d", "B", <<["B", "b"], ["e", "INTEGER"], ["e", "a"], ["b", "d"], ["C", "a"], ["c", "b"], ["C", "INTEGER"]>>, "b")
add_query("b", "e", <<["d", "BOOLEAN"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "b"], ["c", "C"], ["D", "INTEGER"], ["B", "BOOLEAN"], ["C", "BOOLEAN"]>>, "b")
bool_value (false)
add_call_chain(<<c,e,A,D,INTEGER,e,c,c,d>>)
add_attribute("c", "BOOLEAN", "INTEGER")
bool_value (false)
add_attribute("BOOLEAN", "C", "BOOLEAN")
disjunction
addition
generate_java_code
add_query("b", "d", <<["C", "B"], ["C", "A"], ["A", "c"], ["B", "C"], ["C", "BOOLEAN"], ["A", "C"], ["D", "BOOLEAN"]>>, "c")
equals
bool_value (true)
add_call_chain(<<D,D,e,e>>)
add_call_chain(<<D,BOOLEAN,b,e,a,D>>)
conjunction
add_call_chain(<<B,INTEGER,B,b,a,d>>)
logical_negation
add_query("d", "INTEGER", <<["C", "BOOLEAN"]>>, "c")
add_class(d)
add_call_chain(<<e,c,a,D,B,C,d,INTEGER,c>>)
bool_value (false)
logical_negation
generate_java_code
conjunction
add_call_chain(<<B>>)
add_call_chain(<<d,b>>)
int_value (16)
logical_negation
numerical_negation
add_query("e", "d", <<["A", "BOOLEAN"]>>, "A")
add_call_chain(<<d,d,b,D,A,B,BOOLEAN,BOOLEAN,b>>)
add_attribute("d", "d", "INTEGER")
add_attribute("C", "c", "INTEGER")
add_attribute("c", "d", "BOOLEAN")
logical_negation
equals
add_call_chain(<<D,A>>)
generate_java_code
add_query("B", "BOOLEAN", <<["b", "BOOLEAN"], ["e", "INTEGER"], ["INTEGER", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>, "c")
add_command("INTEGER", "B", <<["C", "BOOLEAN"], ["D", "INTEGER"]>>)
add_call_chain(<<B,A,B,BOOLEAN>>)
add_query("B", "INTEGER", <<["a", "c"], ["BOOLEAN", "INTEGER"], ["e", "BOOLEAN"]>>, "a")
add_call_chain(<<D,INTEGER,D,C,C,b,D>>)
logical_negation
add_query("A", "C", <<["D", "INTEGER"], ["C", "a"], ["BOOLEAN", "d"], ["INTEGER", "BOOLEAN"], ["e", "D"], ["c", "INTEGER"], ["e", "B"]>>, "c")
int_value (23)
generate_java_code
add_query("A", "b", <<["d", "INTEGER"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "INTEGER"], ["B", "INTEGER"], ["b", "b"]>>, "B")
add_class(C)
bool_value (true)
bool_value (true)
add_call_chain(<<d,b,INTEGER,BOOLEAN>>)
bool_value (false)
add_command("b", "D", <<["a", "INTEGER"], ["c", "b"], ["d", "d"], ["b", "BOOLEAN"], ["c", "INTEGER"], ["b", "b"], ["B", "BOOLEAN"]>>)
add_class(e)
conjunction
add_attribute("A", "C", "INTEGER")
logical_negation
conjunction
add_call_chain(<<a,D>>)
int_value (9)
less_than
type_check
bool_value (true)
type_check
disjunction
add_command("D", "A", <<["c", "b"], ["D", "D"], ["INTEGER", "c"]>>)
numerical_negation
add_query("e", "c", <<["d", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["b", "INTEGER"], ["BOOLEAN", "B"]>>, "a")
numerical_negation
add_query("C", "INTEGER", <<["a", "INTEGER"], ["c", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["C", "INTEGER"], ["A", "INTEGER"], ["d", "INTEGER"], ["C", "b"], ["e", "BOOLEAN"]>>, "b")
add_query("c", "B", <<["B", "INTEGER"], ["D", "c"], ["a", "INTEGER"], ["c", "b"], ["a", "BOOLEAN"], ["C", "b"], ["BOOLEAN", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "d"]>>, "a")
add_query("b", "INTEGER", <<["C", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["D", "INTEGER"], ["d", "BOOLEAN"], ["d", "D"], ["a", "INTEGER"], ["d", "BOOLEAN"]>>, "c")
add_call_chain(<<a>>)
int_value (12)
logical_negation
bool_value (false)
type_check
logical_negation
subtraction
add_class(A)
bool_value (true)
less_than
add_call_chain(<<B,A,b,d,D,C,b>>)
quotient
conjunction
bool_value (false)
int_value (22)
numerical_negation
int_value (39)
add_call_chain(<<C,D,b,a,A,b,D,c>>)
add_command("A", "b", <<["C", "INTEGER"], ["C", "INTEGER"], ["a", "a"], ["e", "D"], ["A", "INTEGER"]>>)
generate_java_code
add_attribute("BOOLEAN", "B", "d")
add_command("C", "D", <<["BOOLEAN", "b"], ["D", "b"]>>)
numerical_negation
type_check
add_attribute("a", "e", "d")
numerical_negation
add_command("c", "B", <<["D", "INTEGER"], ["D", "d"], ["e", "INTEGER"]>>)
add_call_chain(<<b,BOOLEAN,D,e,BOOLEAN>>)
generate_java_code
generate_java_code
numerical_negation
add_command("C", "D", <<["A", "BOOLEAN"], ["C", "INTEGER"], ["c", "e"], ["INTEGER", "INTEGER"], ["a", "INTEGER"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["c", "BOOLEAN"], ["D", "e"]>>)
logical_negation
type_check
add_call_chain(<<a,b,D,C,c>>)
type_check
generate_java_code
add_call_chain(<<B,a>>)
add_query("B", "C", <<["e", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "e"], ["D", "BOOLEAN"], ["C", "INTEGER"]>>, "D")
bool_value (true)
add_class(a)
add_call_chain(<<B,INTEGER,b,a,C,C>>)
add_class(a)
less_than
add_command("a", "b", <<["A", "INTEGER"], ["D", "INTEGER"], ["A", "INTEGER"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["d", "BOOLEAN"], ["A", "c"], ["b", "BOOLEAN"]>>)
add_attribute("e", "B", "INTEGER")
type_check
add_class(A)
add_attribute("B", "C", "BOOLEAN")
numerical_negation
add_class(INTEGER)
add_call_chain(<<C,d>>)
int_value (7)
numerical_negation
add_command("c", "D", <<["e", "BOOLEAN"], ["A", "d"], ["e", "a"], ["e", "INTEGER"], ["A", "BOOLEAN"], ["d", "BOOLEAN"], ["e", "INTEGER"]>>)
add_call_chain(<<C,C,D,b,b>>)
add_command("d", "B", <<["e", "d"], ["B", "INTEGER"], ["INTEGER", "c"], ["INTEGER", "BOOLEAN"], ["A", "C"], ["A", "a"], ["B", "INTEGER"], ["a", "INTEGER"]>>)
type_check
add_attribute("A", "D", "d")
add_call_chain(<<BOOLEAN,b,e,d,A,B,e,C>>)
add_class(d)
bool_value (false)
add_query("b", "a", <<["D", "c"], ["D", "INTEGER"], ["c", "INTEGER"]>>, "c")
int_value (48)
disjunction
add_call_chain(<<e,C,c,e,e,A>>)
int_value (45)
bool_value (false)
numerical_negation
numerical_negation
quotient
add_call_chain(<<d,D,d,d,a,D,C,INTEGER,d>>)
int_value (40)
add_command("e", "C", <<["INTEGER", "BOOLEAN"], ["B", "e"]>>)
add_attribute("e", "b", "BOOLEAN")
int_value (43)
generate_java_code
less_than
add_call_chain(<<b,B,D,b,INTEGER,d,A>>)
equals
disjunction
add_attribute("B", "b", "INTEGER")
logical_negation
int_value (10)
type_check
int_value (12)
add_call_chain(<<a,C,b,c,b,d>>)
add_command("a", "D", <<["a", "INTEGER"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["c", "BOOLEAN"], ["b", "INTEGER"], ["C", "INTEGER"], ["d", "INTEGER"], ["C", "INTEGER"]>>)
add_query("d", "c", <<["B", "BOOLEAN"], ["A", "INTEGER"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["BOOLEAN", "C"], ["D", "BOOLEAN"]>>, "B")
add_call_chain(<<c,B,D,C,D,d,c,C>>)
add_call_chain(<<A>>)
