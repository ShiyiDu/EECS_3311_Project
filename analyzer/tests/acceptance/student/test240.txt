add_query("e", "B", <<["c", "INTEGER"], ["d", "INTEGER"], ["d", "INTEGER"], ["d", "B"], ["A", "BOOLEAN"], ["b", "INTEGER"], ["B", "C"]>>, "e")
add_call_chain(<<d,A,a,A,B,d,a,c,B>>)
disjunction
type_check
add_call_chain(<<D,BOOLEAN,A,D>>)
numerical_negation
add_call_chain(<<D,A,A,b,B,INTEGER,B,d,b>>)
bool_value (false)
add_call_chain(<<b,D,c,D,D,INTEGER,b>>)
less_than
conjunction
add_call_chain(<<B,D,a>>)
add_attribute("A", "BOOLEAN", "INTEGER")
numerical_negation
bool_value (true)
disjunction
int_value (9)
numerical_negation
int_value (6)
add_query("D", "B", <<["C", "BOOLEAN"], ["a", "INTEGER"], ["B", "INTEGER"], ["a", "INTEGER"], ["d", "BOOLEAN"]>>, "D")
logical_negation
add_query("A", "A", <<["D", "INTEGER"], ["D", "INTEGER"], ["e", "INTEGER"], ["e", "BOOLEAN"], ["B", "B"], ["d", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>, "b")
add_call_chain(<<D,e,b,B,b,B,e,a,D>>)
add_attribute("d", "D", "INTEGER")
add_call_chain(<<d>>)
add_call_chain(<<e,C,B,a,A>>)
add_command("B", "C", <<["A", "b"], ["e", "BOOLEAN"], ["B", "d"], ["A", "INTEGER"]>>)
numerical_negation
numerical_negation
int_value (16)
less_than
add_call_chain(<<B,a,B,C,d,e,c,c,INTEGER>>)
add_call_chain(<<a,BOOLEAN,b,c,C,a,B>>)
int_value (2)
add_call_chain(<<c,B,BOOLEAN,D,e,B,A,C,C>>)
add_class(e)
logical_negation
add_class(C)
type_check
addition
bool_value (true)
add_call_chain(<<C,d>>)
logical_negation
disjunction
add_call_chain(<<BOOLEAN,a,C,b,A,B,B,B>>)
greater_than
add_class(B)
add_query("a", "A", <<["A", "D"], ["C", "INTEGER"], ["C", "INTEGER"], ["D", "B"], ["B", "INTEGER"], ["BOOLEAN", "INTEGER"], ["e", "BOOLEAN"]>>, "C")
bool_value (true)
add_call_chain(<<INTEGER,D>>)
add_call_chain(<<e>>)
type_check
bool_value (true)
add_query("BOOLEAN", "A", <<["e", "e"], ["A", "INTEGER"], ["c", "INTEGER"]>>, "B")
add_call_chain(<<a,c>>)
add_attribute("INTEGER", "d", "INTEGER")
add_attribute("c", "d", "INTEGER")
int_value (46)
numerical_negation
bool_value (false)
subtraction
add_call_chain(<<b,e,d,C,b,B,D,BOOLEAN>>)
add_call_chain(<<c,d,e>>)
modulo
numerical_negation
bool_value (false)
add_call_chain(<<b,BOOLEAN>>)
add_attribute("a", "e", "C")
add_attribute("c", "C", "BOOLEAN")
conjunction
bool_value (false)
add_query("D", "C", <<["D", "INTEGER"], ["A", "B"], ["B", "INTEGER"]>>, "C")
add_command("b", "b", <<["d", "INTEGER"], ["INTEGER", "BOOLEAN"], ["D", "A"]>>)
add_call_chain(<<e,C,D,c,c,B,C,C,b>>)
add_call_chain(<<b,BOOLEAN,a,B>>)
add_query("D", "A", <<["A", "INTEGER"], ["a", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "INTEGER"], ["d", "B"], ["a", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "INTEGER"]>>, "d")
add_call_chain(<<INTEGER>>)
bool_value (true)
type_check
type_check
logical_negation
add_query("a", "C", <<["c", "a"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["b", "BOOLEAN"], ["d", "b"], ["BOOLEAN", "INTEGER"]>>, "b")
add_attribute("B", "b", "INTEGER")
add_call_chain(<<D,d,e>>)
numerical_negation
int_value (41)
add_call_chain(<<C,b,D,d,D,B,c>>)
add_call_chain(<<C,C,B>>)
addition
add_query("C", "e", <<["B", "BOOLEAN"], ["a", "INTEGER"]>>, "a")
greater_than
numerical_negation
bool_value (true)
add_query("D", "b", <<["BOOLEAN", "BOOLEAN"], ["d", "d"], ["C", "BOOLEAN"], ["e", "d"], ["A", "INTEGER"], ["b", "INTEGER"]>>, "a")
numerical_negation
int_value (3)
add_command("D", "a", <<["INTEGER", "INTEGER"], ["d", "b"]>>)
type_check
bool_value (false)
type_check
add_command("e", "C", <<["A", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "b"], ["INTEGER", "INTEGER"], ["a", "INTEGER"]>>)
type_check
add_class(INTEGER)
add_call_chain(<<B,B>>)
add_query("c", "b", <<["D", "BOOLEAN"]>>, "B")
add_attribute("D", "d", "A")
logical_negation
conjunction
add_command("b", "D", <<["A", "BOOLEAN"]>>)
add_attribute("e", "d", "BOOLEAN")
type_check
add_class(b)
type_check
add_call_chain(<<e>>)
add_query("A", "C", <<["C", "INTEGER"], ["B", "D"]>>, "A")
modulo
add_attribute("D", "a", "BOOLEAN")
numerical_negation
add_command("A", "a", <<["D", "INTEGER"], ["e", "BOOLEAN"], ["D", "C"], ["A", "INTEGER"], ["d", "c"], ["BOOLEAN", "D"], ["a", "BOOLEAN"], ["a", "B"], ["C", "c"]>>)
logical_negation
add_attribute("c", "C", "INTEGER")
add_query("d", "d", <<["B", "BOOLEAN"], ["B", "B"], ["b", "e"], ["a", "INTEGER"], ["D", "a"], ["c", "INTEGER"], ["c", "BOOLEAN"], ["A", "b"], ["a", "INTEGER"]>>, "D")
add_command("b", "A", <<["A", "BOOLEAN"], ["c", "BOOLEAN"], ["INTEGER", "d"], ["c", "INTEGER"]>>)
add_command("a", "A", <<["a", "INTEGER"], ["A", "INTEGER"], ["e", "B"], ["a", "A"]>>)
add_call_chain(<<e>>)
type_check
type_check
bool_value (false)
bool_value (false)
add_command("D", "a", <<["C", "C"], ["c", "BOOLEAN"], ["BOOLEAN", "b"], ["D", "BOOLEAN"], ["INTEGER", "INTEGER"], ["a", "INTEGER"], ["INTEGER", "e"], ["B", "INTEGER"]>>)
bool_value (true)
add_call_chain(<<D,B,B,B,e,D>>)
int_value (21)
bool_value (true)
add_call_chain(<<A,a>>)
add_query("e", "b", <<["d", "BOOLEAN"], ["B", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["A", "d"], ["b", "d"]>>, "a")
logical_negation
numerical_negation
add_attribute("D", "C", "BOOLEAN")
add_call_chain(<<a,a,d,b,B>>)
int_value (11)
generate_java_code
greater_than
logical_negation
add_call_chain(<<BOOLEAN,B,B,D,d,BOOLEAN,b,b>>)
type_check
add_call_chain(<<a,c,e,a,A>>)
int_value (26)
add_call_chain(<<d,D,D,INTEGER>>)
logical_negation
add_attribute("d", "B", "d")
add_call_chain(<<BOOLEAN,INTEGER,d,a,A,d,B,b,BOOLEAN>>)
int_value (9)
type_check
add_command("D", "a", <<["B", "INTEGER"]>>)
add_call_chain(<<A,B>>)
less_than
add_call_chain(<<INTEGER,INTEGER>>)
add_call_chain(<<D,A,c>>)
logical_negation
add_command("D", "D", <<["INTEGER", "INTEGER"], ["A", "BOOLEAN"], ["b", "e"]>>)
numerical_negation
add_attribute("e", "INTEGER", "c")
add_call_chain(<<A,BOOLEAN>>)
greater_than
add_attribute("BOOLEAN", "A", "BOOLEAN")
conjunction
add_command("BOOLEAN", "d", <<["A", "BOOLEAN"]>>)
int_value (38)
numerical_negation
int_value (39)
add_query("B", "C", <<["INTEGER", "BOOLEAN"], ["A", "d"], ["A", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["D", "B"], ["C", "INTEGER"], ["C", "INTEGER"], ["a", "BOOLEAN"], ["A", "BOOLEAN"]>>, "c")
add_call_chain(<<b>>)
add_command("C", "A", <<["B", "BOOLEAN"], ["BOOLEAN", "d"], ["d", "INTEGER"], ["A", "INTEGER"]>>)
generate_java_code
add_command("a", "C", <<["D", "e"], ["A", "a"], ["A", "e"], ["e", "d"], ["D", "INTEGER"], ["c", "INTEGER"], ["b", "BOOLEAN"], ["b", "D"], ["INTEGER", "BOOLEAN"]>>)
add_call_chain(<<C,d,b>>)
add_command("B", "c", <<["A", "D"]>>)
generate_java_code
add_call_chain(<<e,b>>)
disjunction
greater_than
add_class(a)
generate_java_code
add_attribute("a", "A", "BOOLEAN")
bool_value (true)
int_value (34)
logical_negation
int_value (4)
logical_negation
add_call_chain(<<c,B,b>>)
disjunction
int_value (20)
bool_value (true)
numerical_negation
disjunction
bool_value (true)
add_call_chain(<<C,C,C,a,D,b>>)
add_call_chain(<<d,b,C,A>>)
add_attribute("BOOLEAN", "BOOLEAN", "INTEGER")
type_check
generate_java_code
add_command("A", "d", <<["b", "INTEGER"], ["b", "INTEGER"], ["d", "C"]>>)
add_command("e", "e", <<["b", "INTEGER"], ["C", "INTEGER"], ["a", "BOOLEAN"], ["d", "BOOLEAN"]>>)
logical_negation
type_check
add_class(b)
greater_than
int_value (10)
add_call_chain(<<D,D,C,A,B,A,B>>)
modulo
numerical_negation
less_than
add_attribute("e", "a", "INTEGER")
add_call_chain(<<d,D,A,b,B>>)
add_query("INTEGER", "C", <<["C", "INTEGER"], ["a", "BOOLEAN"], ["A", "INTEGER"], ["D", "INTEGER"], ["A", "BOOLEAN"], ["D", "INTEGER"], ["B", "BOOLEAN"]>>, "e")
add_call_chain(<<B>>)
add_attribute("a", "A", "BOOLEAN")
add_query("a", "e", <<["B", "INTEGER"], ["d", "a"]>>, "C")
less_than
add_call_chain(<<C,INTEGER,a>>)
numerical_negation
logical_negation
generate_java_code
multiplication
add_call_chain(<<b,e,C,INTEGER,c,c,D,B,a>>)
type_check
add_call_chain(<<b,a,BOOLEAN>>)
numerical_negation
bool_value (false)
add_command("c", "d", <<["C", "INTEGER"], ["a", "BOOLEAN"], ["b", "D"], ["A", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>)
logical_negation
add_command("a", "D", <<["C", "A"]>>)
bool_value (true)
numerical_negation
int_value (16)
bool_value (true)
add_query("e", "b", <<["e", "INTEGER"], ["a", "e"], ["D", "B"], ["c", "INTEGER"], ["C", "INTEGER"], ["b", "INTEGER"], ["c", "C"]>>, "b")
logical_negation
modulo
int_value (22)
add_attribute("d", "C", "A")
generate_java_code
add_call_chain(<<d,d,A,d,C,D>>)
add_query("b", "D", <<["b", "INTEGER"], ["INTEGER", "BOOLEAN"], ["B", "INTEGER"], ["b", "INTEGER"], ["BOOLEAN", "INTEGER"], ["BOOLEAN", "INTEGER"], ["c", "INTEGER"], ["a", "BOOLEAN"], ["C", "INTEGER"]>>, "INTEGER")
logical_negation
disjunction
add_query("B", "A", <<["b", "BOOLEAN"], ["e", "BOOLEAN"]>>, "D")
bool_value (true)
int_value (43)
add_class(e)
add_call_chain(<<A,c,b,A,C,d,D>>)
add_call_chain(<<b,d>>)
type_check
add_call_chain(<<b,A,INTEGER,A>>)
