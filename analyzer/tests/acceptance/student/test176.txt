add_class(b)
less_than
type_check
add_call_chain(<<B,d,D,C,c>>)
add_class(a)
add_command("e", "c", <<["B", "A"], ["b", "A"], ["A", "BOOLEAN"], ["A", "INTEGER"]>>)
add_call_chain(<<a,d,A,c,d>>)
add_call_chain(<<e,b,B,B,a,BOOLEAN,D,C>>)
add_attribute("BOOLEAN", "C", "INTEGER")
addition
add_query("e", "a", <<["c", "INTEGER"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "BOOLEAN"]>>, "B")
add_query("b", "a", <<["d", "INTEGER"], ["c", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "INTEGER"], ["B", "BOOLEAN"]>>, "a")
logical_negation
add_call_chain(<<c>>)
add_command("C", "B", <<["b", "INTEGER"], ["A", "INTEGER"], ["INTEGER", "BOOLEAN"], ["e", "INTEGER"], ["A", "a"], ["e", "BOOLEAN"], ["c", "BOOLEAN"]>>)
add_attribute("C", "b", "INTEGER")
add_class(c)
add_call_chain(<<e,d,B,d>>)
logical_negation
add_call_chain(<<B,B,e,b,e>>)
generate_java_code
add_query("b", "BOOLEAN", <<["b", "B"], ["c", "A"]>>, "e")
add_call_chain(<<a,B,d>>)
add_command("D", "A", <<["C", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "BOOLEAN"], ["d", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "a"]>>)
numerical_negation
logical_negation
add_attribute("A", "A", "BOOLEAN")
logical_negation
add_call_chain(<<c,b,e>>)
add_call_chain(<<e,e>>)
disjunction
add_query("c", "C", <<["a", "BOOLEAN"], ["c", "INTEGER"], ["b", "D"], ["D", "INTEGER"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["e", "BOOLEAN"]>>, "A")
int_value (3)
add_attribute("D", "D", "INTEGER")
bool_value (true)
type_check
add_query("C", "d", <<["B", "INTEGER"], ["A", "BOOLEAN"], ["b", "C"], ["C", "BOOLEAN"], ["e", "A"], ["A", "BOOLEAN"], ["A", "INTEGER"], ["B", "INTEGER"], ["B", "BOOLEAN"]>>, "C")
add_command("C", "d", <<["e", "INTEGER"], ["d", "BOOLEAN"], ["B", "INTEGER"]>>)
type_check
add_attribute("BOOLEAN", "B", "INTEGER")
bool_value (false)
add_query("a", "d", <<["c", "BOOLEAN"], ["c", "INTEGER"], ["A", "BOOLEAN"], ["d", "b"], ["A", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["D", "INTEGER"], ["B", "BOOLEAN"]>>, "C")
disjunction
add_call_chain(<<b,B,b,C,B,A,b,BOOLEAN>>)
add_query("d", "a", <<["c", "BOOLEAN"], ["D", "INTEGER"], ["B", "BOOLEAN"], ["A", "INTEGER"]>>, "d")
logical_negation
add_call_chain(<<B,C,A,a,d,B,D>>)
add_query("a", "C", <<["B", "D"], ["b", "A"]>>, "b")
disjunction
conjunction
int_value (49)
add_call_chain(<<D,a,C,c,C,C>>)
add_query("c", "A", <<["D", "INTEGER"], ["A", "INTEGER"], ["a", "INTEGER"], ["B", "c"]>>, "D")
add_attribute("C", "b", "A")
add_command("A", "A", <<["d", "BOOLEAN"], ["d", "b"], ["A", "INTEGER"]>>)
add_call_chain(<<C,A,A,B,a,c>>)
add_command("B", "d", <<["d", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "A"], ["d", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "INTEGER"], ["a", "A"]>>)
less_than
disjunction
add_command("e", "e", <<["B", "BOOLEAN"], ["B", "BOOLEAN"], ["BOOLEAN", "C"], ["d", "D"], ["A", "INTEGER"], ["B", "c"]>>)
add_command("A", "b", <<["b", "INTEGER"], ["A", "BOOLEAN"], ["d", "BOOLEAN"], ["INTEGER", "INTEGER"], ["b", "INTEGER"], ["B", "B"], ["C", "INTEGER"], ["C", "b"]>>)
int_value (19)
generate_java_code
conjunction
numerical_negation
generate_java_code
type_check
add_query("e", "e", <<["a", "INTEGER"], ["c", "INTEGER"]>>, "D")
add_command("c", "e", <<["c", "INTEGER"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["c", "BOOLEAN"], ["A", "C"], ["D", "D"], ["c", "A"], ["INTEGER", "d"], ["INTEGER", "BOOLEAN"]>>)
add_query("A", "A", <<["B", "INTEGER"], ["b", "c"], ["c", "BOOLEAN"]>>, "B")
add_class(D)
bool_value (false)
add_query("C", "d", <<["a", "BOOLEAN"], ["INTEGER", "INTEGER"], ["c", "c"], ["B", "INTEGER"], ["a", "A"]>>, "C")
int_value (17)
logical_negation
logical_negation
generate_java_code
add_call_chain(<<a,b,BOOLEAN,c,a,d,c,C,b>>)
disjunction
add_query("C", "b", <<["INTEGER", "A"], ["D", "INTEGER"], ["B", "C"], ["B", "BOOLEAN"], ["A", "e"]>>, "A")
generate_java_code
int_value (21)
conjunction
add_class(C)
greater_than
int_value (29)
add_query("c", "a", <<["b", "INTEGER"]>>, "INTEGER")
add_class(C)
add_attribute("B", "C", "B")
add_class(d)
add_class(a)
bool_value (true)
add_call_chain(<<d,A,A>>)
bool_value (false)
generate_java_code
add_command("C", "BOOLEAN", <<["c", "INTEGER"], ["A", "d"], ["b", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "INTEGER"]>>)
numerical_negation
add_query("b", "d", <<["D", "INTEGER"], ["D", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "INTEGER"], ["INTEGER", "BOOLEAN"]>>, "C")
numerical_negation
add_call_chain(<<B,D,A,D,d,A,e,B>>)
numerical_negation
generate_java_code
generate_java_code
add_call_chain(<<INTEGER,A,BOOLEAN,c,d,a,c>>)
type_check
add_attribute("INTEGER", "a", "INTEGER")
add_call_chain(<<A,c,e,c,a,b,a,B>>)
generate_java_code
add_command("e", "D", <<["A", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "d"], ["c", "BOOLEAN"], ["D", "INTEGER"], ["D", "BOOLEAN"]>>)
add_command("c", "A", <<["C", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["e", "BOOLEAN"]>>)
add_call_chain(<<C,b,e,A,b,a>>)
add_class(D)
int_value (20)
modulo
numerical_negation
add_attribute("B", "B", "INTEGER")
multiplication
logical_negation
add_attribute("A", "BOOLEAN", "D")
add_class(c)
add_attribute("INTEGER", "D", "d")
equals
add_call_chain(<<d,C,B,c,d,c>>)
add_command("B", "D", <<["b", "A"]>>)
less_than
int_value (44)
generate_java_code
bool_value (true)
conjunction
generate_java_code
add_attribute("B", "A", "BOOLEAN")
add_query("D", "b", <<["c", "BOOLEAN"], ["C", "D"], ["D", "INTEGER"], ["d", "BOOLEAN"], ["e", "C"], ["d", "BOOLEAN"]>>, "D")
int_value (4)
bool_value (false)
add_call_chain(<<a,D,a,c,C,C>>)
add_query("B", "D", <<["a", "C"], ["BOOLEAN", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["B", "INTEGER"], ["B", "BOOLEAN"], ["C", "INTEGER"]>>, "D")
generate_java_code
less_than
add_attribute("A", "D", "BOOLEAN")
modulo
add_call_chain(<<INTEGER,BOOLEAN,A,C,A>>)
logical_negation
generate_java_code
add_call_chain(<<A,d>>)
conjunction
greater_than
logical_negation
bool_value (false)
add_attribute("c", "B", "B")
add_command("C", "D", <<["c", "c"], ["INTEGER", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "d"], ["a", "C"], ["C", "c"], ["INTEGER", "D"]>>)
add_command("c", "B", <<["a", "INTEGER"], ["BOOLEAN", "INTEGER"], ["e", "BOOLEAN"], ["D", "e"], ["BOOLEAN", "b"], ["b", "A"], ["BOOLEAN", "INTEGER"], ["d", "INTEGER"]>>)
int_value (16)
type_check
bool_value (true)
add_class(C)
numerical_negation
quotient
int_value (9)
add_call_chain(<<INTEGER>>)
generate_java_code
add_attribute("C", "D", "BOOLEAN")
int_value (3)
add_class(C)
add_command("a", "B", <<["c", "D"], ["c", "BOOLEAN"], ["D", "e"], ["c", "e"]>>)
numerical_negation
numerical_negation
greater_than
bool_value (false)
add_query("b", "c", <<["B", "BOOLEAN"], ["C", "INTEGER"], ["c", "INTEGER"], ["d", "B"]>>, "e")
generate_java_code
add_attribute("INTEGER", "a", "b")
add_command("D", "d", <<["C", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "C"]>>)
add_query("b", "D", <<["D", "a"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["a", "INTEGER"], ["c", "INTEGER"], ["BOOLEAN", "A"], ["b", "INTEGER"]>>, "C")
add_call_chain(<<A,c>>)
add_call_chain(<<A,A,INTEGER,C,d,a,B,e>>)
add_call_chain(<<c,b,BOOLEAN,C,BOOLEAN,b,B>>)
add_command("B", "B", <<["A", "INTEGER"], ["a", "BOOLEAN"], ["C", "INTEGER"]>>)
equals
add_query("A", "D", <<["c", "C"], ["d", "INTEGER"]>>, "B")
add_attribute("B", "B", "C")
conjunction
bool_value (false)
add_query("d", "C", <<["b", "c"], ["e", "INTEGER"], ["d", "D"], ["D", "INTEGER"], ["B", "INTEGER"], ["b", "BOOLEAN"], ["d", "BOOLEAN"], ["d", "BOOLEAN"]>>, "D")
generate_java_code
multiplication
add_attribute("d", "e", "INTEGER")
add_call_chain(<<B,B,A,B>>)
add_call_chain(<<B,A>>)
add_class(D)
add_command("D", "B", <<["e", "A"]>>)
add_query("C", "B", <<["A", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["A", "INTEGER"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["A", "INTEGER"], ["d", "B"], ["b", "BOOLEAN"], ["A", "C"]>>, "A")
generate_java_code
quotient
bool_value (true)
int_value (28)
add_attribute("BOOLEAN", "a", "BOOLEAN")
bool_value (true)
generate_java_code
add_call_chain(<<B,b,B,BOOLEAN,d>>)
addition
add_command("D", "e", <<["INTEGER", "INTEGER"], ["c", "INTEGER"], ["A", "A"], ["b", "BOOLEAN"], ["d", "C"], ["e", "INTEGER"], ["a", "INTEGER"]>>)
int_value (24)
int_value (43)
int_value (40)
add_class(a)
modulo
multiplication
numerical_negation
add_query("INTEGER", "C", <<["e", "INTEGER"], ["b", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "c"], ["C", "BOOLEAN"]>>, "B")
generate_java_code
bool_value (false)
add_query("b", "B", <<["A", "INTEGER"], ["A", "INTEGER"], ["C", "e"], ["e", "BOOLEAN"], ["c", "INTEGER"], ["D", "INTEGER"], ["c", "BOOLEAN"], ["A", "BOOLEAN"]>>, "e")
add_query("c", "c", <<["INTEGER", "BOOLEAN"]>>, "d")
int_value (46)
add_class(BOOLEAN)
modulo
add_call_chain(<<e,C,a,e>>)
bool_value (true)
multiplication
add_call_chain(<<a,a,A,b>>)
int_value (20)
bool_value (true)
logical_negation
add_call_chain(<<INTEGER,d,C,INTEGER>>)
numerical_negation
bool_value (false)
add_command("B", "b", <<["B", "c"], ["b", "e"]>>)
add_call_chain(<<C,BOOLEAN,B,C>>)
add_call_chain(<<a,INTEGER,b,C,d>>)
bool_value (true)
generate_java_code
add_call_chain(<<INTEGER,C>>)
add_call_chain(<<C,b,B,d,INTEGER>>)
generate_java_code
equals
add_call_chain(<<INTEGER,INTEGER,d,BOOLEAN,a,d>>)
add_class(C)
generate_java_code
add_attribute("e", "INTEGER", "B")
add_attribute("B", "A", "d")
add_class(C)
add_attribute("INTEGER", "d", "INTEGER")
add_query("D", "A", <<["B", "INTEGER"], ["d", "BOOLEAN"], ["b", "D"], ["C", "BOOLEAN"], ["e", "BOOLEAN"], ["a", "B"], ["A", "BOOLEAN"]>>, "C")
generate_java_code
disjunction
equals
