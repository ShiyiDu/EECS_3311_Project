add_attribute("C", "BOOLEAN", "BOOLEAN")
type_check
generate_java_code
type_check
bool_value (false)
logical_negation
add_query("C", "b", <<["b", "b"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["c", "C"], ["c", "BOOLEAN"], ["c", "INTEGER"], ["d", "a"], ["b", "INTEGER"], ["c", "b"]>>, "a")
add_attribute("c", "C", "INTEGER")
disjunction
add_class(c)
int_value (17)
add_call_chain(<<D,BOOLEAN,e,A,B,A,D,D,e>>)
int_value (35)
less_than
int_value (20)
bool_value (true)
add_call_chain(<<B,c,D,a>>)
int_value (21)
add_call_chain(<<D,C,D,A>>)
add_call_chain(<<b,INTEGER,BOOLEAN,D,INTEGER,b,D,c,b>>)
generate_java_code
add_call_chain(<<C,c,b,a,a,a,C,d>>)
logical_negation
add_attribute("D", "BOOLEAN", "D")
add_query("D", "C", <<["A", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["B", "INTEGER"]>>, "b")
add_attribute("e", "B", "INTEGER")
multiplication
numerical_negation
add_attribute("C", "C", "INTEGER")
add_class(D)
logical_negation
disjunction
add_command("b", "BOOLEAN", <<["C", "e"]>>)
add_command("b", "INTEGER", <<["e", "INTEGER"], ["e", "INTEGER"], ["C", "a"]>>)
add_attribute("A", "a", "BOOLEAN")
add_call_chain(<<b,B,D>>)
bool_value (false)
generate_java_code
add_call_chain(<<D>>)
add_query("INTEGER", "c", <<["a", "INTEGER"], ["d", "BOOLEAN"], ["b", "A"], ["B", "BOOLEAN"], ["d", "D"], ["c", "INTEGER"], ["C", "BOOLEAN"], ["a", "C"], ["b", "BOOLEAN"]>>, "D")
numerical_negation
add_attribute("e", "C", "INTEGER")
add_command("c", "INTEGER", <<["D", "a"]>>)
add_call_chain(<<A,D,INTEGER>>)
add_call_chain(<<INTEGER,D,INTEGER,b,b,INTEGER>>)
add_call_chain(<<INTEGER,e,B,B,INTEGER,e>>)
add_query("INTEGER", "B", <<["BOOLEAN", "BOOLEAN"], ["e", "BOOLEAN"], ["d", "e"], ["INTEGER", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "INTEGER"], ["A", "BOOLEAN"], ["a", "BOOLEAN"], ["b", "INTEGER"]>>, "INTEGER")
logical_negation
add_command("B", "A", <<["A", "BOOLEAN"], ["B", "BOOLEAN"], ["BOOLEAN", "a"], ["e", "BOOLEAN"], ["D", "INTEGER"], ["B", "INTEGER"]>>)
add_query("D", "A", <<["d", "INTEGER"], ["A", "BOOLEAN"], ["a", "a"]>>, "b")
add_query("C", "D", <<["B", "B"], ["A", "INTEGER"], ["D", "b"]>>, "A")
add_attribute("A", "D", "BOOLEAN")
modulo
add_attribute("C", "A", "D")
add_query("B", "d", <<["c", "INTEGER"], ["e", "BOOLEAN"], ["INTEGER", "D"], ["C", "BOOLEAN"], ["C", "b"], ["B", "D"], ["INTEGER", "BOOLEAN"]>>, "b")
add_query("C", "d", <<["c", "BOOLEAN"], ["e", "BOOLEAN"], ["c", "c"], ["D", "INTEGER"]>>, "A")
type_check
numerical_negation
add_attribute("c", "BOOLEAN", "INTEGER")
add_call_chain(<<A,B,d,C,b,D>>)
int_value (1)
numerical_negation
add_command("d", "C", <<["A", "INTEGER"], ["D", "INTEGER"]>>)
add_class(A)
add_attribute("C", "B", "INTEGER")
numerical_negation
bool_value (false)
int_value (32)
logical_negation
logical_negation
add_attribute("a", "B", "B")
numerical_negation
add_attribute("D", "D", "BOOLEAN")
bool_value (false)
int_value (37)
add_command("e", "d", <<["A", "c"], ["a", "D"], ["BOOLEAN", "INTEGER"], ["e", "INTEGER"]>>)
add_call_chain(<<C,b,b,b>>)
add_call_chain(<<A,A,c,e,a,B>>)
add_query("B", "A", <<["BOOLEAN", "BOOLEAN"], ["a", "B"], ["a", "BOOLEAN"], ["C", "B"], ["C", "BOOLEAN"], ["D", "BOOLEAN"]>>, "c")
bool_value (true)
add_call_chain(<<b,A>>)
add_call_chain(<<e,b,B>>)
greater_than
add_query("b", "c", <<["A", "c"], ["e", "A"]>>, "a")
add_attribute("B", "a", "a")
add_call_chain(<<C,D,e,A>>)
add_call_chain(<<a,A,a,b>>)
bool_value (false)
conjunction
add_command("b", "BOOLEAN", <<["e", "BOOLEAN"], ["B", "INTEGER"]>>)
add_query("B", "b", <<["b", "A"], ["D", "INTEGER"], ["d", "BOOLEAN"], ["B", "INTEGER"], ["INTEGER", "INTEGER"], ["b", "a"], ["a", "BOOLEAN"]>>, "B")
numerical_negation
add_attribute("B", "e", "INTEGER")
add_query("e", "A", <<["c", "a"], ["B", "INTEGER"], ["e", "BOOLEAN"], ["D", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["C", "INTEGER"]>>, "c")
greater_than
conjunction
add_call_chain(<<BOOLEAN,INTEGER,c,C,d,C,C,b>>)
add_call_chain(<<a,e>>)
int_value (20)
generate_java_code
conjunction
logical_negation
logical_negation
equals
add_class(e)
generate_java_code
bool_value (false)
int_value (15)
logical_negation
conjunction
numerical_negation
add_call_chain(<<D,a,d,C,c,c>>)
logical_negation
add_call_chain(<<C,e,B,b,c>>)
add_query("b", "C", <<["B", "INTEGER"], ["c", "INTEGER"]>>, "d")
add_call_chain(<<e,A,A,a,c,BOOLEAN,d,B>>)
int_value (27)
add_call_chain(<<INTEGER>>)
bool_value (true)
logical_negation
type_check
logical_negation
bool_value (false)
add_call_chain(<<B,d,d,A,D>>)
logical_negation
int_value (30)
add_attribute("b", "b", "a")
add_call_chain(<<D,B,BOOLEAN,d,d,e>>)
logical_negation
logical_negation
add_query("c", "C", <<["e", "BOOLEAN"], ["d", "c"], ["A", "B"], ["c", "INTEGER"], ["e", "INTEGER"], ["A", "c"], ["B", "BOOLEAN"], ["a", "INTEGER"]>>, "b")
add_command("a", "e", <<["C", "BOOLEAN"], ["b", "BOOLEAN"], ["b", "BOOLEAN"]>>)
add_call_chain(<<C,C,e,C,a,c>>)
add_class(C)
bool_value (false)
int_value (29)
add_call_chain(<<C,B,d,a>>)
add_command("e", "d", <<["C", "BOOLEAN"], ["C", "d"], ["e", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["a", "a"]>>)
less_than
disjunction
bool_value (true)
add_call_chain(<<e,e,A,a,a,BOOLEAN,a,D>>)
equals
add_class(b)
add_attribute("B", "b", "B")
numerical_negation
add_attribute("D", "INTEGER", "D")
add_query("A", "e", <<["d", "INTEGER"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["C", "INTEGER"]>>, "D")
int_value (48)
add_call_chain(<<C,C,B>>)
bool_value (true)
add_call_chain(<<INTEGER,a,a>>)
logical_negation
numerical_negation
add_query("INTEGER", "c", <<["B", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["INTEGER", "A"], ["e", "BOOLEAN"], ["A", "c"]>>, "C")
numerical_negation
less_than
add_call_chain(<<C,e,BOOLEAN>>)
add_command("b", "B", <<["BOOLEAN", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "INTEGER"], ["d", "INTEGER"], ["BOOLEAN", "d"], ["C", "B"], ["C", "BOOLEAN"], ["BOOLEAN", "B"], ["B", "BOOLEAN"]>>)
add_command("D", "c", <<["a", "INTEGER"], ["c", "INTEGER"], ["A", "INTEGER"], ["e", "d"], ["a", "BOOLEAN"], ["C", "BOOLEAN"]>>)
add_call_chain(<<D,a,C>>)
logical_negation
add_query("c", "C", <<["d", "B"], ["B", "b"], ["c", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["d", "INTEGER"], ["b", "BOOLEAN"], ["b", "INTEGER"], ["d", "INTEGER"]>>, "c")
add_attribute("a", "A", "INTEGER")
add_call_chain(<<B,BOOLEAN,a,C,BOOLEAN>>)
generate_java_code
add_call_chain(<<A,c,c,d>>)
numerical_negation
logical_negation
logical_negation
add_attribute("b", "D", "BOOLEAN")
add_call_chain(<<A,A,B,A,B,INTEGER,c>>)
add_query("D", "B", <<["b", "BOOLEAN"], ["B", "INTEGER"], ["C", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>, "b")
logical_negation
type_check
int_value (18)
int_value (34)
add_call_chain(<<D,C,D,b,b>>)
int_value (32)
add_command("a", "d", <<["a", "A"], ["D", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "INTEGER"], ["c", "INTEGER"], ["D", "C"], ["b", "BOOLEAN"], ["D", "INTEGER"]>>)
add_class(c)
quotient
add_attribute("B", "d", "INTEGER")
add_attribute("D", "C", "INTEGER")
add_attribute("b", "b", "D")
add_query("A", "B", <<["d", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "INTEGER"], ["e", "INTEGER"], ["B", "INTEGER"], ["b", "BOOLEAN"], ["b", "A"]>>, "C")
bool_value (false)
add_command("e", "e", <<["a", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["INTEGER", "INTEGER"], ["D", "BOOLEAN"]>>)
add_attribute("D", "C", "c")
add_call_chain(<<C>>)
numerical_negation
add_call_chain(<<A>>)
subtraction
add_call_chain(<<D,B,BOOLEAN,a>>)
quotient
disjunction
int_value (35)
add_call_chain(<<B,e,b,c>>)
disjunction
add_call_chain(<<B,d,A>>)
add_class(e)
int_value (46)
add_call_chain(<<c,c,INTEGER,c,b,b,b>>)
add_attribute("e", "b", "INTEGER")
add_call_chain(<<INTEGER,A,a,e,D,C,d,C,B>>)
type_check
conjunction
add_call_chain(<<d,e,C,D,C,INTEGER,D,D,a>>)
add_call_chain(<<e,D>>)
logical_negation
add_query("b", "e", <<["B", "INTEGER"], ["b", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["d", "B"], ["D", "INTEGER"]>>, "d")
add_call_chain(<<D,A,A,a,e>>)
add_call_chain(<<D,c,a,A,e,D>>)
add_attribute("A", "e", "INTEGER")
logical_negation
bool_value (true)
int_value (19)
int_value (38)
generate_java_code
int_value (18)
disjunction
add_query("C", "INTEGER", <<["b", "INTEGER"], ["a", "c"], ["BOOLEAN", "A"], ["a", "C"]>>, "D")
quotient
bool_value (false)
logical_negation
subtraction
add_class(a)
bool_value (false)
add_call_chain(<<d,A,e,b,A,INTEGER,e,e,c>>)
add_call_chain(<<d,a>>)
int_value (15)
conjunction
add_attribute("b", "C", "BOOLEAN")
int_value (26)
disjunction
multiplication
greater_than
add_query("C", "c", <<["B", "B"], ["c", "D"], ["B", "b"], ["e", "INTEGER"], ["D", "INTEGER"], ["c", "INTEGER"], ["d", "BOOLEAN"]>>, "D")
numerical_negation
int_value (7)
type_check
add_query("a", "e", <<["D", "INTEGER"], ["b", "BOOLEAN"]>>, "D")
type_check
add_call_chain(<<e,e,c,B,e,A,A,INTEGER,b>>)
add_command("d", "D", <<["d", "INTEGER"], ["C", "BOOLEAN"]>>)
add_call_chain(<<b,C,BOOLEAN,d,A,B,B>>)
add_command("a", "C", <<["d", "INTEGER"]>>)
add_query("c", "B", <<["D", "INTEGER"], ["B", "b"], ["A", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "INTEGER"], ["a", "BOOLEAN"], ["A", "A"], ["e", "BOOLEAN"]>>, "A")
add_call_chain(<<a,C,a,b,INTEGER,a,BOOLEAN>>)
add_query("C", "b", <<["C", "INTEGER"], ["A", "D"]>>, "c")
add_command("d", "d", <<["a", "INTEGER"], ["a", "C"], ["a", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "INTEGER"], ["c", "INTEGER"]>>)
add_call_chain(<<d,BOOLEAN,D>>)
int_value (32)
add_query("c", "e", <<["A", "A"], ["B", "C"], ["D", "BOOLEAN"], ["C", "b"], ["BOOLEAN", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["A", "BOOLEAN"]>>, "D")
add_command("b", "a", <<["e", "INTEGER"], ["D", "c"], ["INTEGER", "INTEGER"]>>)
add_call_chain(<<A,BOOLEAN,C,C,C,e,c,d>>)
logical_negation
add_call_chain(<<c,e,A>>)
subtraction
add_class(b)
add_call_chain(<<e,C,b,A>>)
add_query("c", "d", <<["BOOLEAN", "A"], ["B", "B"]>>, "b")
conjunction
add_call_chain(<<C,D>>)
generate_java_code
bool_value (true)
add_class(b)
add_query("A", "c", <<["b", "INTEGER"], ["D", "BOOLEAN"], ["INTEGER", "A"], ["b", "INTEGER"], ["D", "INTEGER"], ["C", "D"]>>, "e")
bool_value (true)
add_query("BOOLEAN", "A", <<["B", "INTEGER"], ["C", "b"], ["A", "BOOLEAN"]>>, "C")
disjunction
add_attribute("b", "D", "d")
less_than
numerical_negation
add_command("c", "e", <<["D", "INTEGER"], ["d", "BOOLEAN"]>>)
int_value (24)
less_than
