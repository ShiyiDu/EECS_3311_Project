type_check
numerical_negation
add_command("a", "BOOLEAN", <<["C", "e"], ["BOOLEAN", "INTEGER"], ["d", "INTEGER"], ["d", "A"], ["e", "BOOLEAN"], ["d", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["A", "INTEGER"]>>)
add_class(INTEGER)
add_class(c)
logical_negation
add_call_chain(<<D,c,c,A,d,BOOLEAN,c,b>>)
add_call_chain(<<e,e,D,INTEGER,A,B,a>>)
bool_value (true)
add_query("BOOLEAN", "b", <<["D", "BOOLEAN"], ["d", "INTEGER"], ["d", "BOOLEAN"], ["d", "c"], ["a", "C"]>>, "D")
conjunction
generate_java_code
bool_value (true)
add_attribute("C", "b", "BOOLEAN")
add_attribute("C", "A", "INTEGER")
bool_value (true)
bool_value (true)
less_than
add_class(c)
conjunction
int_value (49)
add_query("a", "B", <<["B", "BOOLEAN"], ["c", "INTEGER"]>>, "d")
add_query("b", "B", <<["C", "INTEGER"], ["b", "INTEGER"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "D"], ["A", "A"], ["B", "INTEGER"], ["A", "BOOLEAN"]>>, "b")
conjunction
add_class(D)
add_command("e", "D", <<["D", "D"], ["C", "INTEGER"], ["c", "INTEGER"], ["e", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["d", "INTEGER"]>>)
bool_value (true)
less_than
add_query("c", "A", <<["B", "BOOLEAN"], ["BOOLEAN", "A"], ["B", "INTEGER"], ["b", "INTEGER"], ["D", "e"], ["e", "BOOLEAN"], ["A", "D"], ["e", "BOOLEAN"], ["e", "BOOLEAN"]>>, "d")
add_query("a", "b", <<["C", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["A", "A"], ["d", "b"], ["B", "INTEGER"], ["A", "e"], ["a", "BOOLEAN"], ["INTEGER", "B"], ["C", "e"]>>, "B")
generate_java_code
add_command("INTEGER", "B", <<["b", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "a"], ["B", "INTEGER"], ["c", "INTEGER"]>>)
add_query("c", "a", <<["BOOLEAN", "BOOLEAN"], ["INTEGER", "C"], ["b", "b"], ["b", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>, "D")
add_attribute("INTEGER", "c", "INTEGER")
disjunction
add_attribute("BOOLEAN", "c", "BOOLEAN")
add_call_chain(<<D,c>>)
equals
generate_java_code
type_check
generate_java_code
int_value (22)
numerical_negation
add_command("d", "C", <<["c", "INTEGER"]>>)
bool_value (true)
add_call_chain(<<e,C,a,a,BOOLEAN,d,e,D,C>>)
numerical_negation
int_value (22)
greater_than
add_call_chain(<<A,D,c,D>>)
add_query("D", "C", <<["a", "BOOLEAN"], ["BOOLEAN", "c"], ["a", "INTEGER"], ["A", "INTEGER"], ["d", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>, "C")
logical_negation
add_call_chain(<<c,C,c,BOOLEAN,B>>)
subtraction
add_call_chain(<<a,b>>)
add_call_chain(<<c>>)
generate_java_code
add_command("a", "B", <<["c", "INTEGER"], ["B", "d"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["d", "INTEGER"], ["D", "BOOLEAN"], ["e", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>)
add_command("D", "D", <<["e", "INTEGER"], ["A", "b"], ["C", "BOOLEAN"]>>)
conjunction
type_check
logical_negation
bool_value (true)
int_value (18)
int_value (7)
greater_than
logical_negation
conjunction
add_query("C", "B", <<["e", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "BOOLEAN"], ["INTEGER", "INTEGER"], ["C", "e"], ["A", "INTEGER"], ["D", "D"], ["C", "a"], ["c", "D"]>>, "B")
int_value (34)
type_check
add_call_chain(<<B,D>>)
add_call_chain(<<d>>)
add_attribute("b", "B", "D")
equals
add_attribute("C", "B", "a")
numerical_negation
add_query("a", "C", <<["b", "BOOLEAN"]>>, "B")
add_class(D)
type_check
add_call_chain(<<b,BOOLEAN,C,D,D,a,B,d>>)
logical_negation
disjunction
bool_value (true)
add_attribute("e", "d", "INTEGER")
add_call_chain(<<C,d,C>>)
add_command("c", "BOOLEAN", <<["e", "d"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["C", "INTEGER"], ["b", "A"], ["a", "INTEGER"], ["D", "d"], ["a", "INTEGER"]>>)
add_call_chain(<<e,INTEGER,B>>)
add_attribute("c", "D", "INTEGER")
int_value (24)
add_attribute("BOOLEAN", "INTEGER", "BOOLEAN")
add_call_chain(<<e,c,c,C,B,C,b>>)
add_attribute("b", "B", "b")
numerical_negation
numerical_negation
logical_negation
add_attribute("C", "c", "e")
add_command("INTEGER", "C", <<["D", "BOOLEAN"], ["D", "BOOLEAN"], ["a", "A"]>>)
add_command("C", "C", <<["INTEGER", "d"], ["b", "INTEGER"], ["A", "BOOLEAN"], ["D", "C"], ["b", "INTEGER"], ["e", "BOOLEAN"], ["a", "b"]>>)
add_attribute("c", "a", "B")
add_call_chain(<<D,a>>)
bool_value (false)
add_query("INTEGER", "C", <<["D", "INTEGER"]>>, "D")
add_command("b", "a", <<["a", "BOOLEAN"]>>)
numerical_negation
numerical_negation
add_query("C", "C", <<["b", "b"], ["C", "b"]>>, "D")
logical_negation
add_call_chain(<<c,e,a,b,c,A>>)
int_value (46)
numerical_negation
generate_java_code
disjunction
int_value (49)
type_check
add_class(e)
add_attribute("c", "d", "INTEGER")
bool_value (true)
add_class(D)
add_call_chain(<<D,b,D,b,a,D,D>>)
add_class(C)
add_call_chain(<<e,b,D,D,D>>)
add_call_chain(<<a,A,c,INTEGER,D,B>>)
add_command("c", "d", <<["b", "B"], ["C", "INTEGER"], ["e", "INTEGER"], ["a", "INTEGER"], ["B", "BOOLEAN"]>>)
numerical_negation
greater_than
add_call_chain(<<B,C,e>>)
add_command("BOOLEAN", "a", <<["A", "A"], ["D", "INTEGER"], ["e", "BOOLEAN"], ["e", "b"], ["A", "BOOLEAN"], ["d", "INTEGER"], ["A", "INTEGER"], ["BOOLEAN", "INTEGER"], ["d", "BOOLEAN"]>>)
less_than
add_command("D", "e", <<["BOOLEAN", "INTEGER"], ["b", "INTEGER"], ["a", "BOOLEAN"], ["c", "INTEGER"], ["C", "INTEGER"], ["e", "BOOLEAN"]>>)
type_check
numerical_negation
add_attribute("a", "C", "BOOLEAN")
logical_negation
add_command("c", "b", <<["D", "c"], ["b", "d"], ["b", "BOOLEAN"], ["b", "c"]>>)
add_command("c", "A", <<["C", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "INTEGER"], ["C", "A"], ["b", "INTEGER"], ["B", "INTEGER"], ["b", "BOOLEAN"]>>)
bool_value (true)
add_attribute("b", "B", "A")
numerical_negation
add_call_chain(<<A,D>>)
add_call_chain(<<a>>)
addition
add_query("D", "e", <<["C", "INTEGER"], ["B", "C"]>>, "INTEGER")
add_call_chain(<<INTEGER,INTEGER,c,D,A>>)
add_query("d", "b", <<["c", "INTEGER"], ["D", "d"]>>, "D")
add_call_chain(<<D,e,A,d,D,B,a>>)
add_query("B", "BOOLEAN", <<["c", "INTEGER"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "C"], ["B", "BOOLEAN"], ["e", "INTEGER"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["C", "BOOLEAN"]>>, "c")
add_class(C)
add_attribute("INTEGER", "A", "BOOLEAN")
int_value (10)
numerical_negation
generate_java_code
add_query("a", "BOOLEAN", <<["C", "C"], ["b", "BOOLEAN"], ["b", "A"], ["D", "b"], ["B", "BOOLEAN"], ["C", "BOOLEAN"]>>, "b")
add_command("D", "e", <<["A", "D"]>>)
add_call_chain(<<a,C,A>>)
add_call_chain(<<b,e,C>>)
int_value (22)
type_check
add_command("BOOLEAN", "D", <<["C", "BOOLEAN"], ["c", "INTEGER"]>>)
logical_negation
logical_negation
int_value (40)
add_class(A)
generate_java_code
greater_than
generate_java_code
add_call_chain(<<C,c,c,D,c,B,e,D,a>>)
add_call_chain(<<b>>)
add_attribute("e", "c", "c")
logical_negation
type_check
numerical_negation
modulo
int_value (47)
int_value (27)
generate_java_code
add_call_chain(<<b,b,a,a,A>>)
numerical_negation
add_query("a", "C", <<["c", "C"], ["e", "d"], ["c", "BOOLEAN"], ["a", "INTEGER"], ["B", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "BOOLEAN"]>>, "INTEGER")
logical_negation
add_attribute("INTEGER", "d", "d")
add_call_chain(<<b,B>>)
type_check
bool_value (true)
generate_java_code
add_query("d", "b", <<["C", "e"], ["a", "INTEGER"], ["d", "INTEGER"], ["e", "INTEGER"], ["b", "BOOLEAN"], ["C", "c"], ["c", "d"]>>, "INTEGER")
add_call_chain(<<A,e,A,C,INTEGER>>)
bool_value (false)
add_command("C", "d", <<["b", "INTEGER"], ["e", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["B", "BOOLEAN"], ["B", "INTEGER"]>>)
add_call_chain(<<B,INTEGER,D,A>>)
add_command("B", "c", <<["c", "D"], ["D", "INTEGER"], ["b", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "INTEGER"]>>)
less_than
add_command("INTEGER", "C", <<["a", "INTEGER"], ["B", "b"], ["C", "BOOLEAN"], ["A", "B"]>>)
add_call_chain(<<b,A,d,A,BOOLEAN,c,e,d,BOOLEAN>>)
