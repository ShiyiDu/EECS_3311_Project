greater_than
add_call_chain(<<INTEGER,b,c,INTEGER,A,A,c,a,a>>)
add_query("A", "INTEGER", <<["D", "b"], ["C", "B"], ["d", "INTEGER"], ["d", "INTEGER"]>>, "INTEGER")
type_check
logical_negation
bool_value (false)
add_call_chain(<<e,A,e,D,A>>)
add_query("D", "D", <<["a", "BOOLEAN"], ["c", "INTEGER"], ["D", "BOOLEAN"]>>, "c")
int_value (25)
add_call_chain(<<d,C,e,C,BOOLEAN>>)
logical_negation
add_query("b", "B", <<["INTEGER", "INTEGER"], ["a", "BOOLEAN"], ["B", "A"], ["B", "D"], ["D", "A"], ["e", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["A", "c"], ["D", "INTEGER"]>>, "BOOLEAN")
logical_negation
add_command("c", "D", <<["e", "D"]>>)
type_check
numerical_negation
generate_java_code
add_call_chain(<<A>>)
conjunction
type_check
type_check
int_value (38)
bool_value (true)
type_check
add_query("D", "c", <<["b", "C"], ["C", "INTEGER"], ["d", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["c", "C"], ["A", "BOOLEAN"], ["a", "B"], ["C", "BOOLEAN"], ["b", "b"]>>, "A")
add_attribute("B", "b", "INTEGER")
numerical_negation
modulo
generate_java_code
generate_java_code
disjunction
add_class(d)
int_value (5)
less_than
add_command("d", "d", <<["B", "BOOLEAN"]>>)
add_command("d", "INTEGER", <<["A", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["INTEGER", "INTEGER"], ["B", "BOOLEAN"]>>)
add_attribute("c", "C", "c")
bool_value (false)
add_attribute("D", "BOOLEAN", "BOOLEAN")
type_check
add_attribute("D", "D", "INTEGER")
add_call_chain(<<A,BOOLEAN,C,C>>)
int_value (10)
numerical_negation
add_class(B)
int_value (41)
logical_negation
numerical_negation
add_command("A", "C", <<["C", "INTEGER"], ["A", "INTEGER"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["B", "C"], ["B", "BOOLEAN"]>>)
type_check
add_query("D", "A", <<["d", "BOOLEAN"], ["c", "BOOLEAN"], ["d", "INTEGER"]>>, "B")
subtraction
numerical_negation
logical_negation
add_call_chain(<<c,INTEGER,A,D,D,a,c,INTEGER,d>>)
add_call_chain(<<d,d,b,c,d,a,BOOLEAN>>)
bool_value (true)
bool_value (true)
add_command("B", "b", <<["C", "INTEGER"], ["INTEGER", "a"]>>)
add_attribute("BOOLEAN", "c", "BOOLEAN")
add_call_chain(<<D,c,a>>)
addition
add_call_chain(<<c,B,BOOLEAN>>)
equals
numerical_negation
type_check
add_command("INTEGER", "c", <<["BOOLEAN", "INTEGER"]>>)
generate_java_code
generate_java_code
int_value (9)
numerical_negation
bool_value (true)
equals
bool_value (true)
add_attribute("d", "A", "INTEGER")
add_query("D", "C", <<["c", "BOOLEAN"], ["A", "INTEGER"], ["c", "c"]>>, "a")
add_attribute("d", "BOOLEAN", "d")
add_query("d", "c", <<["c", "e"], ["C", "d"], ["d", "BOOLEAN"], ["e", "INTEGER"], ["D", "B"], ["B", "d"], ["INTEGER", "INTEGER"], ["d", "BOOLEAN"]>>, "e")
add_class(INTEGER)
numerical_negation
add_call_chain(<<A,d,D>>)
addition
add_command("C", "INTEGER", <<["A", "INTEGER"], ["a", "A"], ["c", "BOOLEAN"], ["d", "INTEGER"], ["d", "d"], ["D", "INTEGER"]>>)
bool_value (true)
add_call_chain(<<D,b,B,D,BOOLEAN,BOOLEAN>>)
add_query("A", "B", <<["D", "a"], ["A", "INTEGER"]>>, "c")
numerical_negation
less_than
bool_value (true)
logical_negation
generate_java_code
int_value (45)
int_value (30)
bool_value (true)
logical_negation
add_call_chain(<<b,B,b,D,C,d>>)
less_than
add_query("C", "C", <<["d", "BOOLEAN"], ["d", "INTEGER"], ["D", "BOOLEAN"], ["C", "b"], ["D", "INTEGER"], ["b", "B"], ["a", "INTEGER"]>>, "e")
int_value (21)
add_call_chain(<<A>>)
add_query("C", "A", <<["B", "INTEGER"], ["a", "D"], ["e", "BOOLEAN"]>>, "e")
add_call_chain(<<D,e,C,D,a,d,D,B>>)
add_command("e", "c", <<["c", "c"], ["b", "b"], ["b", "INTEGER"]>>)
generate_java_code
less_than
add_command("B", "d", <<["c", "BOOLEAN"]>>)
logical_negation
logical_negation
add_command("e", "C", <<["D", "D"], ["D", "INTEGER"], ["a", "e"], ["B", "A"], ["A", "BOOLEAN"], ["A", "B"]>>)
add_class(BOOLEAN)
int_value (41)
bool_value (true)
add_call_chain(<<D,BOOLEAN,a,b,BOOLEAN,INTEGER,C>>)
add_attribute("c", "D", "INTEGER")
generate_java_code
int_value (3)
addition
add_command("e", "d", <<["b", "B"], ["e", "INTEGER"], ["e", "BOOLEAN"], ["e", "B"], ["D", "BOOLEAN"], ["e", "INTEGER"], ["b", "B"]>>)
add_call_chain(<<c,c,d>>)
conjunction
add_call_chain(<<d,B,D>>)
add_query("a", "A", <<["a", "BOOLEAN"], ["A", "BOOLEAN"]>>, "C")
type_check
numerical_negation
add_class(D)
add_call_chain(<<D>>)
add_call_chain(<<a,BOOLEAN,C,B,a,D,A,d>>)
int_value (24)
generate_java_code
add_query("D", "INTEGER", <<["b", "B"], ["a", "D"], ["a", "INTEGER"]>>, "B")
int_value (6)
add_call_chain(<<C,c,c,A>>)
numerical_negation
bool_value (false)
generate_java_code
generate_java_code
add_query("a", "d", <<["D", "INTEGER"], ["A", "INTEGER"], ["c", "INTEGER"], ["B", "a"]>>, "d")
conjunction
bool_value (true)
generate_java_code
generate_java_code
add_attribute("C", "BOOLEAN", "BOOLEAN")
generate_java_code
numerical_negation
add_attribute("a", "b", "BOOLEAN")
conjunction
generate_java_code
add_attribute("d", "d", "B")
quotient
int_value (3)
add_command("A", "b", <<["a", "BOOLEAN"], ["d", "e"], ["B", "INTEGER"], ["e", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "D"], ["A", "b"]>>)
add_call_chain(<<C,BOOLEAN,e,a>>)
add_command("e", "B", <<["D", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "B"], ["A", "INTEGER"], ["b", "BOOLEAN"]>>)
modulo
add_attribute("d", "B", "INTEGER")
bool_value (false)
bool_value (false)
generate_java_code
add_call_chain(<<B>>)
add_call_chain(<<a>>)
add_call_chain(<<B>>)
add_attribute("e", "B", "INTEGER")
add_query("INTEGER", "C", <<["b", "BOOLEAN"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["d", "C"], ["B", "c"], ["b", "A"], ["a", "INTEGER"], ["b", "INTEGER"], ["B", "BOOLEAN"]>>, "e")
add_command("b", "B", <<["INTEGER", "INTEGER"], ["e", "INTEGER"], ["D", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["INTEGER", "C"], ["D", "D"], ["C", "d"]>>)
numerical_negation
less_than
greater_than
add_query("A", "A", <<["B", "INTEGER"], ["c", "INTEGER"], ["A", "BOOLEAN"], ["C", "c"], ["B", "BOOLEAN"], ["INTEGER", "INTEGER"], ["A", "d"], ["C", "INTEGER"]>>, "c")
add_query("B", "A", <<["d", "BOOLEAN"], ["B", "INTEGER"], ["c", "BOOLEAN"]>>, "B")
logical_negation
int_value (16)
add_call_chain(<<b>>)
add_class(a)
generate_java_code
add_query("A", "D", <<["d", "INTEGER"], ["d", "BOOLEAN"], ["d", "INTEGER"], ["b", "INTEGER"], ["A", "A"]>>, "A")
type_check
add_query("b", "INTEGER", <<["D", "INTEGER"], ["A", "BOOLEAN"]>>, "d")
add_command("B", "a", <<["c", "BOOLEAN"], ["e", "INTEGER"], ["C", "BOOLEAN"], ["BOOLEAN", "b"], ["c", "D"], ["e", "BOOLEAN"]>>)
add_query("c", "e", <<["C", "INTEGER"], ["A", "INTEGER"], ["C", "C"], ["B", "INTEGER"], ["e", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "BOOLEAN"], ["c", "INTEGER"]>>, "b")
equals
add_call_chain(<<e,e,b>>)
numerical_negation
int_value (40)
less_than
add_command("d", "a", <<["B", "INTEGER"], ["D", "BOOLEAN"]>>)
type_check
multiplication
add_command("c", "C", <<["C", "a"], ["b", "BOOLEAN"]>>)
add_call_chain(<<B,d,D,BOOLEAN,c>>)
add_call_chain(<<b,BOOLEAN,c,A,B,e,a,a>>)
equals
add_query("a", "b", <<["d", "INTEGER"], ["BOOLEAN", "INTEGER"], ["b", "BOOLEAN"], ["a", "BOOLEAN"]>>, "B")
bool_value (false)
add_attribute("d", "BOOLEAN", "b")
add_call_chain(<<b,e,A,BOOLEAN,e,INTEGER,BOOLEAN,d>>)
conjunction
add_call_chain(<<D,d,INTEGER,C,B>>)
equals
add_call_chain(<<d,INTEGER,c,b,b,C,a,C>>)
add_call_chain(<<c>>)
add_query("d", "a", <<["d", "INTEGER"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "D"]>>, "C")
type_check
bool_value (true)
add_query("B", "c", <<["INTEGER", "BOOLEAN"], ["B", "BOOLEAN"]>>, "A")
add_attribute("c", "d", "b")
logical_negation
add_call_chain(<<B,b,C,D,A,a,d,c,e>>)
conjunction
add_command("a", "A", <<["D", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["e", "INTEGER"], ["a", "BOOLEAN"]>>)
add_call_chain(<<B,c,D>>)
conjunction
type_check
add_command("C", "d", <<["B", "INTEGER"], ["BOOLEAN", "B"], ["d", "D"], ["e", "a"]>>)
add_command("A", "C", <<["A", "INTEGER"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["C", "BOOLEAN"], ["A", "BOOLEAN"], ["INTEGER", "D"], ["A", "B"], ["b", "e"], ["a", "b"]>>)
add_command("b", "D", <<["c", "BOOLEAN"], ["a", "INTEGER"], ["BOOLEAN", "INTEGER"], ["B", "b"], ["A", "b"], ["c", "A"], ["b", "INTEGER"], ["C", "B"]>>)
int_value (5)
