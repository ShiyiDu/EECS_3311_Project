add_call_chain(<<C,D,c,C,c,b,A,e>>)
add_call_chain(<<C,B,C>>)
add_class(BOOLEAN)
int_value (24)
add_command("e", "A", <<["e", "c"], ["d", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["c", "C"], ["INTEGER", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "C"]>>)
add_call_chain(<<C,a,d,a,c,C,e,C>>)
logical_negation
less_than
addition
numerical_negation
generate_java_code
bool_value (true)
generate_java_code
type_check
generate_java_code
int_value (34)
add_query("c", "d", <<["BOOLEAN", "a"], ["B", "BOOLEAN"], ["a", "INTEGER"], ["a", "INTEGER"], ["b", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "c"], ["a", "INTEGER"], ["D", "D"]>>, "C")
add_call_chain(<<C,d>>)
int_value (49)
add_attribute("A", "A", "c")
add_call_chain(<<C,d,A,b,b>>)
logical_negation
bool_value (true)
add_class(B)
add_query("b", "e", <<["B", "C"]>>, "D")
bool_value (false)
bool_value (false)
add_class(a)
add_call_chain(<<b,D,INTEGER,B>>)
bool_value (false)
add_query("C", "A", <<["C", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["B", "BOOLEAN"], ["D", "e"]>>, "a")
add_class(B)
greater_than
int_value (24)
add_command("BOOLEAN", "A", <<["c", "INTEGER"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["e", "INTEGER"], ["d", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["c", "BOOLEAN"], ["B", "BOOLEAN"]>>)
int_value (44)
add_attribute("B", "B", "BOOLEAN")
modulo
type_check
logical_negation
numerical_negation
conjunction
add_query("a", "D", <<["c", "INTEGER"], ["D", "D"], ["D", "B"], ["d", "D"], ["A", "D"]>>, "A")
logical_negation
disjunction
numerical_negation
less_than
add_call_chain(<<e,c,A,c,INTEGER,A,B,e,d>>)
add_command("A", "A", <<["A", "INTEGER"], ["D", "c"], ["c", "BOOLEAN"], ["c", "B"], ["B", "BOOLEAN"], ["c", "D"]>>)
add_query("B", "c", <<["e", "a"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["B", "INTEGER"], ["d", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "BOOLEAN"]>>, "D")
bool_value (false)
add_class(D)
generate_java_code
type_check
bool_value (true)
generate_java_code
generate_java_code
int_value (36)
add_call_chain(<<c,d,A,D>>)
add_query("C", "A", <<["e", "A"]>>, "d")
add_command("e", "b", <<["D", "INTEGER"], ["A", "INTEGER"]>>)
add_class(c)
add_call_chain(<<A,B,INTEGER,a>>)
generate_java_code
add_call_chain(<<B,a,c,b,B,e>>)
add_attribute("A", "c", "BOOLEAN")
bool_value (false)
add_call_chain(<<c,D,BOOLEAN,B>>)
type_check
add_attribute("c", "C", "D")
add_attribute("B", "INTEGER", "INTEGER")
add_attribute("e", "D", "BOOLEAN")
add_class(d)
type_check
add_query("BOOLEAN", "BOOLEAN", <<["a", "BOOLEAN"]>>, "A")
quotient
disjunction
add_call_chain(<<INTEGER,a,e,A,d>>)
add_query("b", "BOOLEAN", <<["D", "INTEGER"], ["a", "BOOLEAN"], ["a", "INTEGER"], ["a", "INTEGER"]>>, "b")
generate_java_code
add_command("INTEGER", "BOOLEAN", <<["d", "INTEGER"], ["B", "c"], ["C", "INTEGER"], ["INTEGER", "INTEGER"], ["C", "BOOLEAN"], ["C", "BOOLEAN"]>>)
type_check
less_than
add_call_chain(<<D,B,BOOLEAN,c>>)
add_call_chain(<<e,D>>)
add_command("A", "c", <<["c", "INTEGER"], ["c", "INTEGER"], ["D", "BOOLEAN"], ["e", "B"], ["D", "INTEGER"], ["C", "INTEGER"]>>)
numerical_negation
greater_than
generate_java_code
add_call_chain(<<B>>)
int_value (7)
modulo
add_command("D", "INTEGER", <<["C", "INTEGER"], ["C", "INTEGER"], ["c", "e"], ["A", "BOOLEAN"], ["A", "INTEGER"]>>)
add_call_chain(<<c,b,e,D>>)
disjunction
numerical_negation
generate_java_code
add_class(B)
add_call_chain(<<D,INTEGER,a>>)
add_call_chain(<<c,b,d>>)
add_query("C", "INTEGER", <<["A", "A"], ["C", "D"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["D", "c"]>>, "BOOLEAN")
type_check
add_call_chain(<<A,D,e,BOOLEAN,B,d,D,B,e>>)
addition
add_call_chain(<<A,a,C,d,A,C,INTEGER>>)
add_class(c)
conjunction
add_attribute("D", "B", "e")
add_attribute("e", "C", "BOOLEAN")
logical_negation
generate_java_code
int_value (32)
modulo
bool_value (true)
add_call_chain(<<B>>)
multiplication
conjunction
logical_negation
generate_java_code
add_command("B", "d", <<["A", "A"], ["A", "INTEGER"], ["e", "d"], ["e", "c"]>>)
add_call_chain(<<A,c,C,BOOLEAN,a,b,a>>)
bool_value (true)
add_call_chain(<<D,B>>)
type_check
type_check
add_call_chain(<<BOOLEAN,BOOLEAN,c,B>>)
add_command("d", "b", <<["c", "INTEGER"], ["e", "BOOLEAN"], ["C", "INTEGER"]>>)
subtraction
bool_value (false)
int_value (2)
add_class(d)
less_than
int_value (16)
add_command("B", "b", <<["C", "INTEGER"]>>)
disjunction
type_check
add_call_chain(<<B,b>>)
int_value (13)
numerical_negation
add_command("C", "c", <<["c", "C"], ["A", "INTEGER"], ["b", "BOOLEAN"]>>)
add_call_chain(<<b,BOOLEAN,e,B,BOOLEAN>>)
disjunction
int_value (27)
add_call_chain(<<C,b>>)
generate_java_code
conjunction
add_call_chain(<<c,a>>)
quotient
numerical_negation
type_check
generate_java_code
logical_negation
add_query("B", "b", <<["a", "e"], ["B", "INTEGER"], ["b", "INTEGER"], ["BOOLEAN", "INTEGER"], ["a", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "BOOLEAN"]>>, "c")
add_attribute("e", "B", "b")
add_call_chain(<<B,a,b,D,INTEGER,b>>)
type_check
add_command("b", "d", <<["B", "BOOLEAN"], ["c", "d"], ["b", "D"], ["B", "BOOLEAN"], ["C", "BOOLEAN"]>>)
type_check
add_call_chain(<<a>>)
add_class(D)
modulo
add_class(e)
logical_negation
int_value (49)
add_call_chain(<<A,d,e,D>>)
add_attribute("B", "b", "BOOLEAN")
equals
add_call_chain(<<INTEGER>>)
int_value (33)
logical_negation
bool_value (false)
add_query("INTEGER", "A", <<["e", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["b", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "BOOLEAN"], ["c", "C"], ["D", "INTEGER"], ["c", "INTEGER"], ["A", "BOOLEAN"]>>, "d")
subtraction
add_call_chain(<<d>>)
add_call_chain(<<A,c,d>>)
generate_java_code
add_call_chain(<<D,D,e>>)
add_query("a", "a", <<["a", "C"], ["e", "INTEGER"], ["e", "INTEGER"]>>, "B")
add_attribute("c", "b", "INTEGER")
add_query("INTEGER", "D", <<["e", "BOOLEAN"], ["C", "INTEGER"], ["D", "INTEGER"], ["b", "A"], ["INTEGER", "INTEGER"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "A"], ["a", "INTEGER"]>>, "a")
numerical_negation
add_call_chain(<<c,C,d,e,d,C>>)
greater_than
int_value (1)
add_call_chain(<<INTEGER,d>>)
add_call_chain(<<B>>)
generate_java_code
add_attribute("c", "C", "a")
add_query("C", "A", <<["A", "INTEGER"], ["B", "B"], ["C", "D"], ["e", "INTEGER"], ["a", "INTEGER"], ["b", "A"]>>, "e")
equals
multiplication
add_command("B", "A", <<["b", "INTEGER"], ["C", "c"]>>)
add_attribute("INTEGER", "c", "A")
logical_negation
add_class(A)
type_check
int_value (22)
add_call_chain(<<a,B>>)
subtraction
add_query("d", "B", <<["d", "C"], ["b", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "INTEGER"], ["a", "INTEGER"]>>, "BOOLEAN")
bool_value (false)
bool_value (true)
add_call_chain(<<C>>)
add_class(e)
less_than
int_value (38)
add_command("C", "d", <<["A", "BOOLEAN"]>>)
add_attribute("b", "a", "BOOLEAN")
generate_java_code
add_class(D)
add_call_chain(<<C,A>>)
equals
add_attribute("B", "C", "INTEGER")
logical_negation
type_check
add_query("BOOLEAN", "BOOLEAN", <<["D", "INTEGER"], ["b", "INTEGER"], ["A", "a"], ["BOOLEAN", "INTEGER"], ["a", "INTEGER"], ["d", "INTEGER"], ["a", "INTEGER"], ["INTEGER", "INTEGER"], ["b", "b"]>>, "d")
add_attribute("A", "D", "INTEGER")
add_command("a", "e", <<["a", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["INTEGER", "c"], ["BOOLEAN", "INTEGER"], ["D", "BOOLEAN"]>>)
add_class(INTEGER)
add_call_chain(<<INTEGER,C,a,a>>)
numerical_negation
disjunction
add_call_chain(<<D,B,B>>)
type_check
add_call_chain(<<B,b>>)
add_call_chain(<<d,INTEGER,C,C,D>>)
int_value (25)
add_call_chain(<<D,B,b,A>>)
greater_than
