add_query("e", "D", <<["D", "BOOLEAN"], ["B", "INTEGER"]>>, "C")
logical_negation
logical_negation
add_attribute("D", "c", "INTEGER")
add_call_chain(<<a,e,a,B,c,BOOLEAN,D,b>>)
int_value (37)
int_value (23)
logical_negation
int_value (7)
generate_java_code
bool_value (true)
add_attribute("INTEGER", "D", "INTEGER")
int_value (17)
add_call_chain(<<e,INTEGER>>)
add_command("C", "A", <<["d", "INTEGER"]>>)
int_value (43)
numerical_negation
add_query("D", "e", <<["A", "A"]>>, "INTEGER")
add_attribute("c", "B", "INTEGER")
numerical_negation
add_command("b", "a", <<["e", "BOOLEAN"], ["INTEGER", "INTEGER"], ["C", "b"]>>)
add_command("a", "c", <<["B", "BOOLEAN"], ["B", "INTEGER"], ["C", "INTEGER"], ["e", "A"], ["d", "A"], ["BOOLEAN", "INTEGER"], ["D", "INTEGER"], ["a", "INTEGER"]>>)
conjunction
add_call_chain(<<C,c,INTEGER,d,D,b>>)
numerical_negation
add_class(D)
add_call_chain(<<C>>)
add_class(e)
equals
type_check
add_attribute("e", "B", "e")
less_than
int_value (12)
logical_negation
add_attribute("b", "a", "BOOLEAN")
add_attribute("D", "c", "BOOLEAN")
generate_java_code
type_check
add_class(D)
int_value (25)
add_call_chain(<<c,e,B,BOOLEAN,D,d,B,D,a>>)
add_attribute("INTEGER", "c", "B")
generate_java_code
add_query("B", "d", <<["C", "BOOLEAN"], ["A", "d"], ["A", "BOOLEAN"], ["A", "INTEGER"], ["C", "b"], ["B", "BOOLEAN"], ["e", "B"], ["B", "C"], ["b", "BOOLEAN"]>>, "e")
add_command("A", "D", <<["c", "A"], ["B", "C"], ["b", "INTEGER"], ["B", "A"], ["D", "BOOLEAN"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["C", "BOOLEAN"]>>)
conjunction
add_call_chain(<<c,C,C,a>>)
add_call_chain(<<A,a,B,a>>)
type_check
add_command("C", "A", <<["INTEGER", "C"], ["e", "D"], ["A", "INTEGER"]>>)
int_value (41)
numerical_negation
logical_negation
numerical_negation
add_command("b", "A", <<["C", "BOOLEAN"]>>)
add_call_chain(<<b,b,BOOLEAN,D,D,b,D,A,c>>)
conjunction
add_command("e", "c", <<["b", "INTEGER"], ["a", "INTEGER"], ["a", "INTEGER"], ["d", "INTEGER"], ["d", "B"], ["C", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["B", "INTEGER"], ["C", "INTEGER"]>>)
bool_value (false)
generate_java_code
logical_negation
type_check
add_attribute("C", "D", "INTEGER")
add_class(BOOLEAN)
int_value (32)
generate_java_code
add_call_chain(<<d,d,d,b,B,e,C>>)
int_value (39)
bool_value (true)
modulo
add_call_chain(<<b,B>>)
modulo
add_query("A", "BOOLEAN", <<["d", "INTEGER"], ["INTEGER", "INTEGER"], ["D", "INTEGER"]>>, "c")
int_value (18)
add_call_chain(<<d,b,A,b,C,c,b,A,d>>)
type_check
add_command("B", "D", <<["A", "a"], ["C", "BOOLEAN"]>>)
add_query("A", "d", <<["d", "INTEGER"], ["D", "B"]>>, "A")
add_call_chain(<<d,INTEGER,b,C,e,e,D>>)
logical_negation
add_command("e", "d", <<["B", "D"], ["e", "INTEGER"], ["C", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "INTEGER"]>>)
add_class(B)
disjunction
logical_negation
int_value (13)
add_command("d", "e", <<["a", "a"]>>)
add_command("b", "a", <<["c", "BOOLEAN"]>>)
generate_java_code
type_check
greater_than
add_call_chain(<<b,INTEGER,a,BOOLEAN,D,c,a,e>>)
add_class(D)
less_than
add_attribute("a", "B", "INTEGER")
logical_negation
add_command("c", "B", <<["BOOLEAN", "BOOLEAN"], ["b", "BOOLEAN"], ["b", "INTEGER"], ["e", "INTEGER"], ["a", "INTEGER"]>>)
type_check
bool_value (false)
bool_value (false)
add_query("D", "A", <<["D", "BOOLEAN"], ["A", "B"], ["c", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "A"], ["c", "BOOLEAN"], ["c", "INTEGER"], ["A", "INTEGER"], ["B", "INTEGER"]>>, "b")
add_query("D", "c", <<["e", "d"], ["c", "a"], ["A", "INTEGER"], ["B", "INTEGER"], ["c", "d"], ["BOOLEAN", "INTEGER"], ["C", "BOOLEAN"], ["INTEGER", "INTEGER"]>>, "e")
add_query("e", "C", <<["a", "INTEGER"], ["a", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "e"], ["C", "INTEGER"]>>, "D")
type_check
add_call_chain(<<d,D,A,C,A>>)
type_check
add_query("C", "d", <<["BOOLEAN", "INTEGER"], ["A", "INTEGER"], ["INTEGER", "BOOLEAN"], ["D", "A"], ["a", "C"], ["BOOLEAN", "a"], ["b", "c"], ["d", "D"], ["c", "INTEGER"]>>, "C")
add_query("A", "D", <<["e", "C"]>>, "INTEGER")
int_value (6)
add_class(d)
addition
bool_value (true)
logical_negation
numerical_negation
logical_negation
type_check
add_query("C", "C", <<["c", "BOOLEAN"], ["a", "D"]>>, "d")
add_query("A", "c", <<["a", "INTEGER"], ["A", "BOOLEAN"], ["D", "C"], ["A", "INTEGER"], ["a", "INTEGER"]>>, "D")
add_command("C", "B", <<["e", "INTEGER"], ["c", "e"], ["c", "B"], ["d", "INTEGER"], ["C", "BOOLEAN"]>>)
disjunction
add_call_chain(<<B,e>>)
add_query("b", "d", <<["BOOLEAN", "INTEGER"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "INTEGER"], ["C", "INTEGER"], ["a", "BOOLEAN"]>>, "A")
add_call_chain(<<INTEGER,d,d,D>>)
add_call_chain(<<C,e,D,c,A,B,B,C,D>>)
generate_java_code
disjunction
add_command("C", "C", <<["D", "B"], ["a", "INTEGER"], ["BOOLEAN", "C"], ["d", "INTEGER"], ["BOOLEAN", "C"]>>)
add_call_chain(<<b,INTEGER,A,A,D,a,A,c,INTEGER>>)
add_query("e", "A", <<["b", "d"], ["D", "BOOLEAN"], ["BOOLEAN", "A"], ["A", "C"], ["d", "BOOLEAN"]>>, "b")
int_value (18)
bool_value (true)
add_call_chain(<<A,a,A,c>>)
add_command("A", "b", <<["d", "D"], ["B", "INTEGER"], ["BOOLEAN", "d"], ["A", "INTEGER"], ["B", "INTEGER"], ["c", "A"]>>)
multiplication
disjunction
type_check
generate_java_code
add_call_chain(<<C>>)
multiplication
less_than
add_command("c", "a", <<["a", "INTEGER"], ["e", "C"], ["a", "BOOLEAN"], ["C", "INTEGER"], ["d", "INTEGER"]>>)
int_value (49)
type_check
add_query("a", "A", <<["D", "INTEGER"], ["c", "c"]>>, "A")
add_class(B)
add_command("A", "c", <<["c", "BOOLEAN"], ["e", "BOOLEAN"]>>)
bool_value (false)
bool_value (false)
quotient
add_command("c", "D", <<["b", "BOOLEAN"], ["D", "A"], ["D", "A"]>>)
add_call_chain(<<A>>)
add_attribute("e", "e", "INTEGER")
logical_negation
add_command("B", "A", <<["INTEGER", "A"], ["b", "A"]>>)
add_call_chain(<<C,a,C,A>>)
add_attribute("e", "c", "INTEGER")
bool_value (true)
add_call_chain(<<c,B,c,B>>)
add_query("INTEGER", "BOOLEAN", <<["C", "e"], ["INTEGER", "b"], ["D", "INTEGER"], ["A", "BOOLEAN"]>>, "D")
numerical_negation
int_value (31)
add_class(INTEGER)
disjunction
bool_value (true)
add_attribute("A", "b", "INTEGER")
conjunction
add_call_chain(<<B,B,D,c,c,D,d>>)
numerical_negation
add_call_chain(<<b,D,B,a,D,d,d>>)
add_attribute("C", "A", "INTEGER")
add_call_chain(<<a,b,c,C,INTEGER,INTEGER,C,A>>)
add_command("BOOLEAN", "A", <<["C", "a"], ["D", "INTEGER"], ["a", "INTEGER"], ["d", "INTEGER"], ["B", "BOOLEAN"], ["e", "c"], ["b", "BOOLEAN"]>>)
greater_than
type_check
add_call_chain(<<BOOLEAN,b,D,b,D>>)
less_than
add_call_chain(<<B,b>>)
bool_value (false)
add_class(b)
less_than
numerical_negation
add_call_chain(<<A,d>>)
type_check
add_attribute("d", "a", "BOOLEAN")
type_check
logical_negation
add_call_chain(<<BOOLEAN,c,c>>)
logical_negation
add_command("A", "a", <<["D", "BOOLEAN"]>>)
add_class(B)
add_command("A", "D", <<["C", "A"], ["D", "BOOLEAN"], ["b", "INTEGER"]>>)
add_query("b", "B", <<["c", "INTEGER"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "C"], ["A", "INTEGER"], ["c", "BOOLEAN"]>>, "b")
add_call_chain(<<B,B,BOOLEAN>>)
generate_java_code
conjunction
add_call_chain(<<e,D>>)
add_class(B)
generate_java_code
add_query("B", "C", <<["a", "INTEGER"], ["d", "INTEGER"], ["C", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "A"], ["b", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "BOOLEAN"]>>, "e")
int_value (6)
bool_value (false)
add_call_chain(<<B,B,c,a,D,A>>)
add_query("C", "d", <<["e", "BOOLEAN"], ["C", "B"], ["c", "e"]>>, "a")
disjunction
add_attribute("a", "e", "INTEGER")
int_value (17)
add_call_chain(<<B,B>>)
add_attribute("e", "c", "C")
int_value (12)
add_query("A", "C", <<["A", "c"], ["e", "INTEGER"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["INTEGER", "e"]>>, "a")
disjunction
add_attribute("d", "A", "A")
add_command("B", "C", <<["INTEGER", "BOOLEAN"], ["INTEGER", "d"]>>)
multiplication
add_command("b", "b", <<["d", "INTEGER"], ["INTEGER", "A"], ["e", "C"], ["A", "d"], ["C", "BOOLEAN"], ["e", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["B", "c"], ["A", "BOOLEAN"]>>)
generate_java_code
add_attribute("INTEGER", "C", "BOOLEAN")
generate_java_code
add_query("a", "d", <<["d", "INTEGER"], ["d", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["A", "c"], ["D", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["e", "INTEGER"], ["INTEGER", "e"]>>, "e")
add_attribute("a", "C", "a")
logical_negation
add_call_chain(<<B,d,C,B,a,A>>)
bool_value (false)
add_command("B", "B", <<["D", "INTEGER"], ["b", "BOOLEAN"], ["B", "D"], ["C", "C"], ["e", "d"], ["A", "INTEGER"]>>)
add_attribute("INTEGER", "B", "A")
quotient
add_call_chain(<<a,b,e,b,e,C,b,D,A>>)
conjunction
add_call_chain(<<BOOLEAN,a,d,BOOLEAN,d,B,d>>)
add_command("BOOLEAN", "c", <<["A", "BOOLEAN"], ["e", "a"], ["b", "D"], ["d", "INTEGER"], ["e", "INTEGER"], ["e", "d"], ["B", "INTEGER"], ["a", "B"], ["B", "BOOLEAN"]>>)
numerical_negation
bool_value (false)
add_call_chain(<<b,D,C,D>>)
add_class(c)
generate_java_code
add_command("BOOLEAN", "c", <<["e", "a"], ["B", "BOOLEAN"], ["c", "INTEGER"], ["A", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "B"], ["a", "INTEGER"]>>)
greater_than
add_call_chain(<<B,C,C,D,c>>)
generate_java_code
add_command("b", "B", <<["A", "BOOLEAN"], ["B", "e"], ["D", "e"], ["D", "c"], ["d", "INTEGER"], ["e", "BOOLEAN"], ["c", "INTEGER"], ["C", "B"], ["A", "e"]>>)
disjunction
add_attribute("B", "C", "BOOLEAN")
add_command("C", "a", <<["B", "BOOLEAN"], ["a", "INTEGER"]>>)
addition
add_attribute("B", "e", "BOOLEAN")
numerical_negation
add_command("C", "c", <<["D", "B"], ["e", "INTEGER"], ["A", "A"], ["B", "INTEGER"], ["D", "C"], ["B", "INTEGER"], ["BOOLEAN", "INTEGER"], ["BOOLEAN", "e"], ["e", "BOOLEAN"]>>)
add_call_chain(<<A,BOOLEAN>>)
int_value (27)
add_call_chain(<<B,D,e,INTEGER,C,B>>)
bool_value (true)
subtraction
bool_value (true)
type_check
add_call_chain(<<C,e,BOOLEAN,c,INTEGER,INTEGER,c>>)
add_call_chain(<<B,c,B,a,A,a,e>>)
generate_java_code
add_call_chain(<<D,b,B,C>>)
int_value (41)
add_attribute("c", "d", "A")
greater_than
disjunction
disjunction
logical_negation
add_command("A", "D", <<["c", "BOOLEAN"], ["C", "BOOLEAN"]>>)
add_attribute("A", "BOOLEAN", "INTEGER")
add_class(D)
add_call_chain(<<D,b,A,e,INTEGER,B,BOOLEAN>>)
add_query("C", "D", <<["b", "e"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["A", "A"], ["c", "BOOLEAN"], ["D", "B"]>>, "A")
numerical_negation
add_attribute("c", "C", "INTEGER")
add_query("INTEGER", "e", <<["b", "INTEGER"]>>, "c")
add_attribute("e", "C", "A")
add_call_chain(<<b,D,A,e,INTEGER>>)
add_class(B)
add_command("c", "B", <<["c", "C"], ["B", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "e"], ["b", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["INTEGER", "C"]>>)
int_value (33)
add_query("c", "e", <<["BOOLEAN", "D"], ["D", "BOOLEAN"]>>, "A")
add_command("D", "INTEGER", <<["C", "INTEGER"], ["C", "INTEGER"], ["A", "B"], ["e", "A"], ["A", "BOOLEAN"], ["D", "b"], ["INTEGER", "INTEGER"], ["e", "b"]>>)
add_query("B", "B", <<["e", "INTEGER"], ["C", "BOOLEAN"], ["INTEGER", "INTEGER"], ["c", "D"], ["e", "BOOLEAN"], ["B", "B"], ["d", "BOOLEAN"], ["c", "D"], ["c", "BOOLEAN"]>>, "B")
add_call_chain(<<e,e>>)
generate_java_code
add_query("C", "B", <<["BOOLEAN", "INTEGER"], ["B", "a"], ["B", "INTEGER"], ["d", "B"], ["BOOLEAN", "B"], ["BOOLEAN", "b"], ["a", "INTEGER"]>>, "a")
int_value (10)
