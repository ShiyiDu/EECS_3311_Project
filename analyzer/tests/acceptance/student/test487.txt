int_value (31)
type_check
int_value (46)
bool_value (true)
logical_negation
add_class(B)
add_command("d", "c", <<["INTEGER", "BOOLEAN"], ["c", "BOOLEAN"], ["INTEGER", "INTEGER"], ["INTEGER", "BOOLEAN"], ["B", "c"], ["d", "INTEGER"], ["A", "BOOLEAN"]>>)
add_call_chain(<<D,BOOLEAN,INTEGER,e>>)
greater_than
add_query("D", "C", <<["D", "INTEGER"], ["a", "b"]>>, "e")
numerical_negation
add_command("C", "C", <<["a", "A"], ["a", "BOOLEAN"], ["e", "A"], ["C", "C"]>>)
multiplication
add_command("e", "c", <<["D", "INTEGER"], ["b", "BOOLEAN"], ["e", "INTEGER"]>>)
add_query("a", "e", <<["e", "INTEGER"], ["C", "C"]>>, "a")
add_command("d", "e", <<["e", "BOOLEAN"], ["a", "C"], ["c", "INTEGER"], ["b", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "INTEGER"], ["b", "INTEGER"], ["d", "BOOLEAN"]>>)
subtraction
add_query("BOOLEAN", "A", <<["d", "A"], ["a", "BOOLEAN"]>>, "a")
type_check
int_value (36)
add_call_chain(<<a,C,INTEGER,INTEGER,d>>)
int_value (40)
int_value (40)
add_attribute("D", "C", "b")
bool_value (true)
add_command("c", "e", <<["BOOLEAN", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "INTEGER"], ["C", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
generate_java_code
add_command("BOOLEAN", "D", <<["c", "BOOLEAN"]>>)
add_call_chain(<<BOOLEAN,INTEGER,b>>)
type_check
add_call_chain(<<c,BOOLEAN,BOOLEAN,d,INTEGER,INTEGER>>)
conjunction
generate_java_code
add_command("C", "c", <<["e", "BOOLEAN"], ["B", "INTEGER"], ["b", "A"], ["c", "BOOLEAN"], ["C", "INTEGER"], ["c", "D"], ["INTEGER", "BOOLEAN"], ["D", "BOOLEAN"], ["a", "INTEGER"]>>)
add_query("a", "BOOLEAN", <<["b", "BOOLEAN"], ["b", "C"], ["INTEGER", "BOOLEAN"]>>, "B")
bool_value (true)
equals
type_check
add_attribute("e", "B", "A")
add_attribute("D", "D", "INTEGER")
subtraction
generate_java_code
add_query("a", "a", <<["e", "BOOLEAN"]>>, "C")
add_query("D", "e", <<["D", "e"], ["c", "b"], ["b", "A"], ["A", "BOOLEAN"]>>, "D")
int_value (44)
add_query("A", "INTEGER", <<["B", "D"], ["BOOLEAN", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "INTEGER"]>>, "D")
add_call_chain(<<BOOLEAN,c,e,D,b,c,A,B,B>>)
add_command("c", "B", <<["C", "d"], ["A", "INTEGER"], ["C", "INTEGER"]>>)
less_than
add_query("B", "A", <<["INTEGER", "INTEGER"], ["c", "INTEGER"], ["c", "a"], ["C", "e"]>>, "b")
add_call_chain(<<a,e,b,c,D>>)
equals
int_value (14)
int_value (19)
add_query("A", "a", <<["INTEGER", "BOOLEAN"], ["c", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["b", "INTEGER"], ["B", "INTEGER"], ["B", "BOOLEAN"], ["A", "INTEGER"]>>, "d")
bool_value (true)
add_attribute("D", "B", "D")
logical_negation
add_query("A", "b", <<["a", "BOOLEAN"], ["d", "INTEGER"], ["INTEGER", "INTEGER"]>>, "INTEGER")
modulo
add_attribute("D", "b", "BOOLEAN")
logical_negation
add_class(e)
type_check
add_command("c", "d", <<["INTEGER", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["b", "D"], ["a", "INTEGER"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["a", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
add_attribute("B", "B", "INTEGER")
int_value (41)
add_attribute("d", "D", "BOOLEAN")
bool_value (false)
int_value (33)
numerical_negation
conjunction
logical_negation
bool_value (true)
addition
modulo
add_command("A", "D", <<["C", "BOOLEAN"], ["b", "e"], ["INTEGER", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "INTEGER"]>>)
add_query("d", "d", <<["C", "BOOLEAN"], ["D", "c"], ["A", "d"]>>, "C")
generate_java_code
generate_java_code
add_query("d", "A", <<["b", "BOOLEAN"], ["D", "INTEGER"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["a", "INTEGER"]>>, "INTEGER")
add_query("D", "C", <<["D", "INTEGER"], ["b", "C"], ["e", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["C", "D"], ["D", "BOOLEAN"]>>, "c")
add_attribute("A", "D", "C")
bool_value (true)
add_call_chain(<<a,a,c,D,c,C,d,A>>)
add_call_chain(<<c,a,b,D>>)
add_attribute("C", "a", "B")
bool_value (false)
add_command("B", "C", <<["b", "INTEGER"], ["a", "c"], ["e", "INTEGER"], ["BOOLEAN", "INTEGER"]>>)
disjunction
disjunction
int_value (42)
numerical_negation
add_call_chain(<<BOOLEAN,A,D,A,B,A>>)
add_query("D", "D", <<["a", "INTEGER"], ["a", "INTEGER"], ["D", "e"], ["c", "BOOLEAN"]>>, "A")
add_attribute("b", "B", "BOOLEAN")
logical_negation
add_command("INTEGER", "C", <<["D", "INTEGER"], ["D", "BOOLEAN"], ["D", "b"], ["d", "A"], ["D", "INTEGER"]>>)
add_call_chain(<<c,a,B,B,C,D,C,a,e>>)
add_call_chain(<<B,A,b,e,BOOLEAN,D,a,D,e>>)
add_attribute("INTEGER", "d", "b")
add_attribute("c", "B", "INTEGER")
logical_negation
add_call_chain(<<INTEGER,d>>)
add_query("a", "A", <<["B", "INTEGER"], ["D", "INTEGER"], ["c", "a"], ["B", "b"]>>, "INTEGER")
add_attribute("D", "B", "BOOLEAN")
equals
add_command("D", "c", <<["D", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "BOOLEAN"]>>)
add_command("e", "D", <<["B", "INTEGER"], ["d", "b"], ["A", "e"], ["e", "BOOLEAN"], ["c", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["D", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
generate_java_code
logical_negation
generate_java_code
equals
add_call_chain(<<A,D,B,c>>)
add_attribute("c", "C", "e")
bool_value (true)
numerical_negation
logical_negation
add_call_chain(<<B,B,d,d>>)
add_query("BOOLEAN", "B", <<["b", "BOOLEAN"], ["B", "BOOLEAN"]>>, "A")
generate_java_code
add_call_chain(<<B,D,e,INTEGER,d,b,A,b>>)
add_command("b", "INTEGER", <<["d", "INTEGER"]>>)
int_value (43)
numerical_negation
disjunction
greater_than
int_value (17)
bool_value (false)
bool_value (false)
int_value (27)
greater_than
add_call_chain(<<a,A,C,c,c>>)
add_call_chain(<<e>>)
bool_value (true)
add_attribute("A", "C", "BOOLEAN")
greater_than
numerical_negation
add_class(D)
add_call_chain(<<A,D,b,b,D>>)
generate_java_code
int_value (4)
add_call_chain(<<B>>)
add_class(c)
add_class(C)
int_value (5)
add_query("a", "d", <<["BOOLEAN", "BOOLEAN"], ["a", "INTEGER"], ["INTEGER", "BOOLEAN"], ["A", "c"], ["e", "INTEGER"], ["b", "BOOLEAN"], ["e", "b"], ["a", "BOOLEAN"]>>, "BOOLEAN")
numerical_negation
add_call_chain(<<INTEGER,A,B,D,a,B,INTEGER,A,d>>)
logical_negation
logical_negation
add_attribute("INTEGER", "D", "BOOLEAN")
add_call_chain(<<A,c,b>>)
add_call_chain(<<A,D,e>>)
greater_than
add_command("c", "B", <<["c", "INTEGER"], ["b", "BOOLEAN"], ["B", "b"], ["B", "INTEGER"], ["c", "INTEGER"], ["D", "B"], ["a", "C"], ["INTEGER", "INTEGER"], ["INTEGER", "c"]>>)
add_call_chain(<<d,BOOLEAN>>)
add_call_chain(<<C,A,B,C,b,b,B,b>>)
add_command("d", "e", <<["d", "e"], ["A", "D"], ["d", "d"], ["D", "D"], ["d", "INTEGER"], ["d", "BOOLEAN"], ["D", "BOOLEAN"]>>)
bool_value (true)
add_query("INTEGER", "e", <<["c", "INTEGER"], ["C", "INTEGER"], ["B", "INTEGER"], ["a", "INTEGER"], ["a", "BOOLEAN"], ["D", "A"]>>, "c")
add_call_chain(<<B,e,b,d,c,e,C,B,D>>)
addition
disjunction
generate_java_code
add_call_chain(<<d,B,e,C,c>>)
conjunction
greater_than
generate_java_code
logical_negation
add_command("d", "D", <<["d", "INTEGER"], ["c", "INTEGER"], ["D", "INTEGER"], ["D", "INTEGER"], ["D", "INTEGER"], ["A", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
add_query("A", "B", <<["b", "INTEGER"], ["a", "INTEGER"], ["C", "INTEGER"], ["e", "INTEGER"], ["B", "BOOLEAN"], ["c", "c"], ["BOOLEAN", "INTEGER"]>>, "a")
add_attribute("INTEGER", "INTEGER", "BOOLEAN")
add_attribute("c", "BOOLEAN", "BOOLEAN")
bool_value (false)
add_attribute("b", "B", "BOOLEAN")
add_class(C)
add_query("INTEGER", "D", <<["A", "INTEGER"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["C", "a"], ["D", "INTEGER"], ["D", "C"], ["e", "BOOLEAN"], ["D", "INTEGER"]>>, "A")
add_call_chain(<<c,a,C,D,d,D,A>>)
add_call_chain(<<e,e>>)
int_value (49)
int_value (19)
add_query("C", "A", <<["d", "INTEGER"]>>, "BOOLEAN")
add_call_chain(<<C,INTEGER,B,C,BOOLEAN,e,B,e>>)
add_attribute("INTEGER", "e", "D")
multiplication
bool_value (true)
less_than
numerical_negation
bool_value (true)
add_query("INTEGER", "b", <<["b", "d"], ["C", "INTEGER"], ["a", "c"], ["c", "BOOLEAN"], ["C", "d"], ["c", "c"], ["c", "INTEGER"], ["D", "INTEGER"]>>, "e")
int_value (18)
add_call_chain(<<D,a,a,a,d,D,C,BOOLEAN,c>>)
logical_negation
logical_negation
bool_value (false)
add_command("INTEGER", "BOOLEAN", <<["e", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
logical_negation
add_call_chain(<<c,b>>)
add_call_chain(<<b,c,c>>)
subtraction
add_command("c", "A", <<["d", "BOOLEAN"]>>)
add_attribute("B", "c", "BOOLEAN")
int_value (2)
add_query("d", "c", <<["A", "b"], ["b", "BOOLEAN"], ["A", "e"], ["B", "D"], ["A", "BOOLEAN"], ["INTEGER", "D"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["B", "A"]>>, "C")
logical_negation
add_call_chain(<<B,d,e>>)
bool_value (false)
conjunction
add_call_chain(<<d,b,C,a,BOOLEAN,B,a,A,e>>)
add_query("c", "A", <<["D", "INTEGER"], ["e", "INTEGER"], ["e", "BOOLEAN"], ["d", "B"], ["d", "D"], ["c", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "A"], ["C", "BOOLEAN"]>>, "e")
multiplication
bool_value (false)
numerical_negation
add_call_chain(<<A,INTEGER,d,C,c,c,B,b>>)
add_command("A", "B", <<["C", "BOOLEAN"], ["e", "INTEGER"], ["c", "INTEGER"], ["d", "INTEGER"], ["e", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "INTEGER"], ["c", "BOOLEAN"], ["B", "BOOLEAN"]>>)
type_check
add_attribute("A", "b", "A")
less_than
add_command("A", "D", <<["A", "INTEGER"], ["d", "C"], ["B", "INTEGER"], ["a", "BOOLEAN"], ["C", "c"], ["BOOLEAN", "INTEGER"]>>)
add_command("A", "B", <<["A", "b"], ["b", "BOOLEAN"], ["BOOLEAN", "A"]>>)
add_call_chain(<<b,e,d,a,B>>)
add_command("C", "A", <<["BOOLEAN", "D"], ["c", "c"], ["c", "d"], ["b", "INTEGER"], ["c", "INTEGER"], ["c", "INTEGER"], ["B", "INTEGER"]>>)
add_command("B", "e", <<["c", "INTEGER"], ["A", "D"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["A", "BOOLEAN"], ["e", "INTEGER"], ["C", "INTEGER"], ["A", "b"]>>)
numerical_negation
add_call_chain(<<D>>)
less_than
add_query("b", "b", <<["B", "INTEGER"], ["d", "e"], ["BOOLEAN", "BOOLEAN"]>>, "c")
generate_java_code
generate_java_code
generate_java_code
add_call_chain(<<a,C,B,b,A,b,INTEGER,c,b>>)
add_query("D", "B", <<["C", "b"], ["D", "d"], ["BOOLEAN", "A"], ["a", "BOOLEAN"], ["B", "INTEGER"], ["d", "B"], ["C", "BOOLEAN"]>>, "A")
numerical_negation
int_value (36)
generate_java_code
generate_java_code
add_attribute("e", "C", "INTEGER")
add_attribute("e", "a", "INTEGER")
numerical_negation
add_attribute("D", "b", "INTEGER")
add_class(A)
add_command("B", "a", <<["C", "BOOLEAN"], ["a", "INTEGER"]>>)
