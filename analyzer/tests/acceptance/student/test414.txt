add_query("BOOLEAN", "A", <<["d", "BOOLEAN"], ["e", "e"], ["c", "BOOLEAN"], ["C", "INTEGER"], ["C", "A"], ["a", "INTEGER"]>>, "d")
add_call_chain(<<b>>)
add_class(e)
add_query("A", "b", <<["d", "BOOLEAN"], ["c", "BOOLEAN"], ["d", "INTEGER"], ["A", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "INTEGER"]>>, "A")
bool_value (false)
add_attribute("D", "b", "INTEGER")
logical_negation
type_check
bool_value (true)
add_call_chain(<<A,a,C>>)
modulo
greater_than
add_call_chain(<<a,d,c,c,e,a,A,e>>)
disjunction
conjunction
add_class(b)
add_command("d", "C", <<["D", "e"], ["BOOLEAN", "D"], ["B", "D"], ["B", "INTEGER"], ["A", "INTEGER"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["d", "INTEGER"]>>)
add_query("e", "b", <<["INTEGER", "C"], ["c", "C"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["c", "BOOLEAN"], ["D", "d"], ["A", "BOOLEAN"]>>, "B")
add_call_chain(<<D,e,c,D,c,a,C,a,d>>)
add_command("c", "C", <<["a", "BOOLEAN"], ["C", "BOOLEAN"], ["d", "INTEGER"], ["B", "BOOLEAN"], ["c", "B"], ["A", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>)
add_call_chain(<<A,d,A,INTEGER,A>>)
logical_negation
int_value (9)
conjunction
conjunction
numerical_negation
add_query("C", "B", <<["INTEGER", "BOOLEAN"], ["e", "INTEGER"], ["c", "C"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["INTEGER", "INTEGER"], ["D", "b"], ["A", "INTEGER"], ["a", "INTEGER"]>>, "b")
add_call_chain(<<B,A,c>>)
add_attribute("A", "C", "INTEGER")
add_query("C", "a", <<["a", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "a"], ["a", "BOOLEAN"], ["BOOLEAN", "B"]>>, "d")
bool_value (true)
add_attribute("B", "C", "INTEGER")
add_command("a", "C", <<["C", "INTEGER"], ["b", "C"], ["BOOLEAN", "BOOLEAN"], ["A", "INTEGER"], ["B", "e"], ["C", "BOOLEAN"]>>)
addition
add_query("b", "a", <<["e", "a"], ["C", "d"], ["C", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["d", "d"]>>, "INTEGER")
generate_java_code
add_command("D", "a", <<["C", "BOOLEAN"], ["a", "INTEGER"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["BOOLEAN", "c"], ["e", "INTEGER"], ["a", "INTEGER"]>>)
add_call_chain(<<B,INTEGER,D,a,D,B,A,B>>)
modulo
add_command("c", "C", <<["b", "e"]>>)
conjunction
bool_value (true)
bool_value (false)
bool_value (true)
greater_than
add_query("D", "C", <<["B", "INTEGER"]>>, "INTEGER")
conjunction
add_attribute("b", "C", "INTEGER")
add_command("d", "C", <<["d", "INTEGER"], ["C", "BOOLEAN"], ["C", "c"], ["b", "e"], ["C", "a"], ["A", "A"], ["a", "INTEGER"], ["D", "BOOLEAN"]>>)
add_call_chain(<<A,C,INTEGER,A>>)
numerical_negation
numerical_negation
logical_negation
generate_java_code
numerical_negation
add_call_chain(<<D,B,c,e>>)
add_call_chain(<<C,A,c>>)
add_command("d", "a", <<["d", "c"], ["BOOLEAN", "A"], ["a", "BOOLEAN"], ["d", "INTEGER"], ["e", "d"]>>)
add_call_chain(<<c,D,b,A,D,B,D>>)
type_check
generate_java_code
add_call_chain(<<C,a,c>>)
add_call_chain(<<C,d,D,C>>)
add_call_chain(<<C,c,b,B,INTEGER,D,d>>)
add_call_chain(<<B,e,c,D,B,d,e>>)
add_command("C", "C", <<["A", "d"]>>)
int_value (48)
numerical_negation
quotient
generate_java_code
type_check
add_attribute("C", "C", "INTEGER")
conjunction
add_class(b)
add_query("INTEGER", "d", <<["B", "B"], ["c", "INTEGER"]>>, "A")
add_command("d", "D", <<["INTEGER", "BOOLEAN"], ["b", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "BOOLEAN"]>>)
add_query("A", "C", <<["d", "INTEGER"], ["a", "BOOLEAN"], ["a", "A"], ["a", "BOOLEAN"], ["B", "INTEGER"]>>, "C")
add_call_chain(<<INTEGER>>)
quotient
numerical_negation
add_call_chain(<<d,INTEGER>>)
add_call_chain(<<a,D,a,c,B,b,B,b,BOOLEAN>>)
bool_value (true)
add_query("D", "B", <<["b", "INTEGER"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["e", "BOOLEAN"]>>, "D")
int_value (16)
add_query("e", "e", <<["C", "INTEGER"], ["a", "c"]>>, "C")
add_call_chain(<<e,c,a,b>>)
numerical_negation
add_attribute("B", "c", "INTEGER")
add_command("BOOLEAN", "A", <<["B", "INTEGER"], ["d", "BOOLEAN"], ["d", "INTEGER"], ["B", "BOOLEAN"], ["B", "c"], ["A", "INTEGER"]>>)
add_command("C", "C", <<["B", "B"], ["B", "INTEGER"], ["A", "e"], ["b", "e"], ["B", "BOOLEAN"], ["a", "INTEGER"], ["d", "BOOLEAN"], ["b", "INTEGER"], ["b", "BOOLEAN"]>>)
numerical_negation
add_query("d", "e", <<["c", "b"], ["C", "INTEGER"], ["a", "INTEGER"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["INTEGER", "C"]>>, "B")
numerical_negation
type_check
bool_value (true)
type_check
bool_value (false)
add_call_chain(<<D,b,A,a,d,b,a,a>>)
add_call_chain(<<a,a,D,b,A,D,A,B>>)
add_query("A", "INTEGER", <<["a", "d"], ["D", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "D"], ["b", "BOOLEAN"], ["c", "INTEGER"], ["a", "BOOLEAN"], ["INTEGER", "c"]>>, "c")
add_attribute("c", "b", "INTEGER")
numerical_negation
type_check
add_attribute("e", "b", "INTEGER")
bool_value (true)
add_class(BOOLEAN)
add_call_chain(<<BOOLEAN,A>>)
add_command("D", "BOOLEAN", <<["A", "INTEGER"], ["c", "D"], ["C", "INTEGER"], ["b", "d"]>>)
generate_java_code
add_call_chain(<<A,D,a,B,D,a,D,D>>)
add_attribute("A", "D", "BOOLEAN")
add_query("A", "C", <<["b", "c"], ["A", "INTEGER"], ["d", "INTEGER"]>>, "A")
conjunction
numerical_negation
modulo
generate_java_code
add_call_chain(<<C,C,e,a,c,B>>)
logical_negation
add_call_chain(<<BOOLEAN>>)
bool_value (true)
bool_value (false)
numerical_negation
add_call_chain(<<D,BOOLEAN,BOOLEAN,C,c,B,c>>)
generate_java_code
bool_value (false)
numerical_negation
add_call_chain(<<C,D,d,e,A,B,C,B,B>>)
disjunction
add_class(e)
bool_value (true)
logical_negation
numerical_negation
int_value (36)
add_call_chain(<<C,a,C,B,A,c,c,d>>)
add_command("BOOLEAN", "B", <<["D", "D"], ["B", "BOOLEAN"], ["BOOLEAN", "c"], ["BOOLEAN", "INTEGER"], ["B", "b"], ["d", "INTEGER"], ["B", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>)
add_query("D", "C", <<["INTEGER", "BOOLEAN"], ["C", "B"], ["BOOLEAN", "BOOLEAN"], ["A", "B"]>>, "INTEGER")
type_check
add_call_chain(<<D,b,B,A,a,c,A>>)
add_command("D", "a", <<["b", "INTEGER"], ["e", "BOOLEAN"], ["d", "BOOLEAN"], ["d", "BOOLEAN"], ["d", "INTEGER"], ["A", "D"]>>)
add_query("b", "D", <<["INTEGER", "INTEGER"], ["c", "B"], ["D", "C"], ["INTEGER", "b"], ["d", "D"], ["B", "BOOLEAN"], ["C", "b"], ["a", "c"]>>, "D")
add_attribute("a", "c", "INTEGER")
add_query("A", "A", <<["B", "INTEGER"], ["e", "B"], ["c", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "a"], ["B", "A"], ["b", "BOOLEAN"], ["D", "INTEGER"]>>, "A")
add_call_chain(<<d,d>>)
add_attribute("d", "D", "INTEGER")
multiplication
add_attribute("D", "C", "e")
bool_value (false)
add_call_chain(<<D,C,a,a,e>>)
logical_negation
add_attribute("a", "C", "BOOLEAN")
logical_negation
add_query("C", "a", <<["C", "INTEGER"], ["D", "INTEGER"], ["b", "c"], ["A", "C"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "INTEGER"], ["e", "INTEGER"], ["a", "D"]>>, "BOOLEAN")
add_command("D", "a", <<["c", "A"], ["B", "c"], ["B", "BOOLEAN"], ["D", "b"], ["BOOLEAN", "b"], ["e", "INTEGER"]>>)
add_attribute("D", "d", "d")
int_value (5)
logical_negation
add_query("a", "e", <<["C", "A"], ["b", "BOOLEAN"], ["d", "e"], ["b", "INTEGER"], ["d", "d"], ["b", "INTEGER"], ["b", "BOOLEAN"], ["C", "BOOLEAN"]>>, "C")
add_command("A", "e", <<["c", "INTEGER"], ["C", "C"], ["b", "C"], ["INTEGER", "BOOLEAN"]>>)
disjunction
bool_value (false)
bool_value (true)
numerical_negation
add_call_chain(<<C,e,D>>)
add_call_chain(<<C,C,b,B,d>>)
add_command("D", "e", <<["D", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["d", "d"], ["c", "BOOLEAN"], ["b", "e"], ["b", "INTEGER"], ["a", "BOOLEAN"]>>)
logical_negation
add_command("B", "d", <<["C", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
add_call_chain(<<d,c,a,d,C,BOOLEAN>>)
add_class(b)
add_attribute("B", "C", "B")
subtraction
add_query("d", "e", <<["b", "INTEGER"], ["D", "INTEGER"], ["b", "BOOLEAN"], ["b", "INTEGER"], ["d", "a"], ["c", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "INTEGER"], ["e", "INTEGER"]>>, "D")
add_call_chain(<<a,D,B,b,A>>)
add_query("a", "BOOLEAN", <<["b", "e"], ["c", "BOOLEAN"], ["c", "BOOLEAN"], ["b", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["a", "INTEGER"], ["B", "INTEGER"]>>, "d")
add_attribute("d", "d", "e")
add_call_chain(<<C,A,e>>)
numerical_negation
add_query("C", "d", <<["a", "d"], ["d", "BOOLEAN"]>>, "a")
generate_java_code
add_command("c", "b", <<["a", "BOOLEAN"]>>)
bool_value (false)
add_class(C)
add_query("a", "B", <<["B", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["a", "INTEGER"], ["C", "INTEGER"], ["a", "INTEGER"], ["C", "BOOLEAN"], ["e", "BOOLEAN"]>>, "A")
add_class(c)
numerical_negation
add_command("C", "e", <<["e", "INTEGER"], ["b", "B"], ["B", "D"], ["d", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["d", "INTEGER"]>>)
add_attribute("C", "b", "D")
add_query("C", "c", <<["b", "BOOLEAN"]>>, "INTEGER")
add_query("B", "D", <<["INTEGER", "B"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "INTEGER"], ["b", "BOOLEAN"]>>, "B")
add_call_chain(<<D,C,c,A,C,d,B,a>>)
add_query("C", "A", <<["D", "b"], ["BOOLEAN", "C"], ["a", "BOOLEAN"]>>, "B")
add_attribute("a", "a", "INTEGER")
logical_negation
add_class(D)
add_call_chain(<<c,D,d,e,A,A,A,a,A>>)
less_than
add_attribute("c", "d", "BOOLEAN")
equals
bool_value (true)
bool_value (false)
add_attribute("A", "A", "BOOLEAN")
add_attribute("D", "c", "BOOLEAN")
add_class(d)
add_call_chain(<<D,C>>)
generate_java_code
add_call_chain(<<B>>)
add_command("B", "BOOLEAN", <<["D", "A"], ["A", "INTEGER"], ["a", "D"], ["D", "BOOLEAN"], ["b", "A"], ["c", "BOOLEAN"], ["A", "INTEGER"]>>)
bool_value (false)
equals
bool_value (false)
conjunction
conjunction
conjunction
int_value (36)
disjunction
type_check
generate_java_code
add_attribute("d", "D", "D")
add_call_chain(<<c,d,INTEGER,a,D,A,a,D>>)
add_call_chain(<<C,A,A>>)
add_call_chain(<<b,B,a,b,C,c,D,BOOLEAN>>)
add_command("B", "d", <<["B", "INTEGER"], ["BOOLEAN", "INTEGER"]>>)
numerical_negation
add_command("D", "a", <<["A", "BOOLEAN"], ["d", "C"], ["b", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "d"], ["A", "BOOLEAN"], ["e", "C"], ["a", "BOOLEAN"]>>)
add_attribute("B", "D", "BOOLEAN")
quotient
bool_value (true)
logical_negation
add_attribute("c", "C", "INTEGER")
bool_value (true)
int_value (43)
quotient
add_query("e", "C", <<["a", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "INTEGER"], ["c", "d"]>>, "C")
add_attribute("B", "C", "BOOLEAN")
bool_value (true)
add_query("a", "A", <<["d", "BOOLEAN"], ["a", "b"], ["d", "C"], ["A", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["c", "D"], ["A", "b"]>>, "b")
quotient
add_call_chain(<<C,a,A,d>>)
add_call_chain(<<D,C>>)
add_call_chain(<<c,a,B,C,b,B>>)
logical_negation
