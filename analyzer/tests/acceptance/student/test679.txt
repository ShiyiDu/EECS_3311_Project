add_call_chain(<<b>>)
add_query("d", "D", <<["B", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["d", "INTEGER"], ["e", "INTEGER"], ["a", "BOOLEAN"], ["c", "INTEGER"]>>, "d")
greater_than
bool_value (true)
subtraction
numerical_negation
subtraction
disjunction
generate_java_code
add_class(INTEGER)
add_attribute("A", "C", "INTEGER")
type_check
type_check
add_command("e", "d", <<["A", "b"], ["D", "D"], ["d", "BOOLEAN"]>>)
add_call_chain(<<c,c,d,INTEGER,e,BOOLEAN>>)
bool_value (true)
bool_value (false)
int_value (2)
add_command("B", "a", <<["b", "BOOLEAN"], ["B", "b"], ["c", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "c"], ["b", "BOOLEAN"]>>)
int_value (5)
add_call_chain(<<c,BOOLEAN,B,b,d,C,B,a,b>>)
add_command("B", "B", <<["A", "BOOLEAN"], ["A", "e"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["C", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["A", "INTEGER"]>>)
add_call_chain(<<C,INTEGER,A>>)
logical_negation
add_command("A", "a", <<["D", "INTEGER"], ["D", "d"], ["C", "INTEGER"], ["b", "INTEGER"]>>)
add_call_chain(<<c,D>>)
add_call_chain(<<B,b>>)
logical_negation
add_command("C", "A", <<["e", "c"], ["B", "INTEGER"]>>)
quotient
bool_value (true)
generate_java_code
generate_java_code
add_attribute("b", "d", "INTEGER")
logical_negation
conjunction
add_call_chain(<<b>>)
add_attribute("A", "B", "A")
bool_value (true)
add_call_chain(<<B,d,D,BOOLEAN>>)
modulo
generate_java_code
add_call_chain(<<b>>)
add_query("C", "b", <<["INTEGER", "INTEGER"], ["B", "c"], ["A", "A"], ["C", "b"], ["a", "BOOLEAN"]>>, "a")
add_query("INTEGER", "a", <<["b", "INTEGER"], ["c", "INTEGER"], ["D", "D"]>>, "B")
bool_value (true)
add_call_chain(<<d,D,b,INTEGER>>)
add_attribute("c", "C", "BOOLEAN")
numerical_negation
numerical_negation
type_check
logical_negation
logical_negation
int_value (13)
add_command("d", "e", <<["A", "INTEGER"], ["B", "BOOLEAN"], ["e", "BOOLEAN"]>>)
conjunction
add_class(a)
add_attribute("c", "BOOLEAN", "BOOLEAN")
add_attribute("d", "D", "BOOLEAN")
bool_value (false)
add_query("d", "B", <<["A", "BOOLEAN"], ["C", "A"], ["b", "BOOLEAN"], ["b", "INTEGER"], ["BOOLEAN", "b"], ["B", "INTEGER"]>>, "e")
numerical_negation
add_attribute("B", "a", "d")
type_check
bool_value (false)
add_attribute("A", "BOOLEAN", "INTEGER")
add_command("B", "C", <<["e", "INTEGER"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["B", "B"]>>)
add_query("c", "c", <<["INTEGER", "INTEGER"], ["a", "INTEGER"], ["d", "BOOLEAN"], ["A", "c"], ["A", "BOOLEAN"]>>, "B")
bool_value (true)
add_class(B)
add_call_chain(<<c,B,d>>)
add_command("d", "INTEGER", <<["B", "BOOLEAN"], ["e", "INTEGER"], ["D", "b"], ["b", "INTEGER"], ["b", "INTEGER"], ["C", "D"], ["c", "INTEGER"]>>)
generate_java_code
add_attribute("C", "B", "BOOLEAN")
bool_value (false)
numerical_negation
add_call_chain(<<A,d,b,e,a,B,A,B,B>>)
add_query("BOOLEAN", "C", <<["e", "INTEGER"], ["d", "INTEGER"], ["B", "BOOLEAN"], ["A", "INTEGER"]>>, "INTEGER")
disjunction
add_command("a", "BOOLEAN", <<["a", "c"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["B", "INTEGER"], ["B", "INTEGER"], ["a", "B"], ["e", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "A"]>>)
add_attribute("a", "C", "BOOLEAN")
disjunction
add_class(a)
add_call_chain(<<C,D,a,e,b,d>>)
bool_value (true)
numerical_negation
add_attribute("e", "BOOLEAN", "INTEGER")
add_query("A", "A", <<["D", "BOOLEAN"], ["b", "d"], ["c", "BOOLEAN"]>>, "B")
bool_value (true)
modulo
add_class(A)
disjunction
equals
int_value (40)
add_query("d", "C", <<["D", "INTEGER"], ["b", "INTEGER"], ["e", "INTEGER"]>>, "d")
add_call_chain(<<INTEGER>>)
add_attribute("D", "C", "INTEGER")
add_call_chain(<<b,A,b,A,A>>)
logical_negation
greater_than
bool_value (true)
add_query("C", "b", <<["b", "BOOLEAN"], ["a", "INTEGER"], ["c", "INTEGER"], ["c", "BOOLEAN"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["D", "BOOLEAN"]>>, "d")
add_call_chain(<<A,BOOLEAN,C>>)
multiplication
numerical_negation
add_call_chain(<<e,D,e,B>>)
int_value (32)
add_command("e", "c", <<["d", "INTEGER"], ["D", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "INTEGER"], ["A", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
add_call_chain(<<BOOLEAN,A>>)
add_call_chain(<<B,b,c,e,B>>)
add_call_chain(<<D,C,D,d,a,a,A>>)
add_query("C", "A", <<["a", "D"], ["e", "INTEGER"], ["A", "e"], ["d", "INTEGER"], ["d", "BOOLEAN"], ["e", "BOOLEAN"], ["d", "INTEGER"], ["B", "B"]>>, "a")
add_class(B)
generate_java_code
less_than
numerical_negation
int_value (2)
bool_value (false)
add_call_chain(<<b,b,C,a,e,C,D,c>>)
add_attribute("INTEGER", "d", "INTEGER")
add_query("C", "e", <<["D", "BOOLEAN"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["D", "INTEGER"], ["B", "e"], ["BOOLEAN", "BOOLEAN"]>>, "B")
logical_negation
less_than
add_command("e", "e", <<["b", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "INTEGER"], ["d", "A"], ["b", "BOOLEAN"], ["c", "INTEGER"], ["BOOLEAN", "INTEGER"], ["A", "INTEGER"], ["c", "BOOLEAN"]>>)
add_call_chain(<<b,b,b,D,C,B,D,a>>)
add_query("BOOLEAN", "a", <<["INTEGER", "INTEGER"], ["c", "BOOLEAN"], ["a", "INTEGER"], ["a", "INTEGER"]>>, "B")
conjunction
int_value (6)
add_call_chain(<<B,BOOLEAN,A,e,b,D,c>>)
add_query("B", "D", <<["b", "D"], ["a", "BOOLEAN"]>>, "c")
type_check
add_call_chain(<<b,c,A,BOOLEAN,a,d,BOOLEAN,BOOLEAN,b>>)
int_value (13)
numerical_negation
logical_negation
logical_negation
generate_java_code
logical_negation
add_command("D", "C", <<["A", "e"]>>)
add_call_chain(<<B,D,c,B,a,d,a>>)
type_check
add_command("B", "D", <<["C", "BOOLEAN"], ["a", "INTEGER"], ["a", "BOOLEAN"], ["b", "INTEGER"], ["a", "BOOLEAN"], ["e", "A"], ["a", "INTEGER"], ["B", "INTEGER"]>>)
add_call_chain(<<D,C,INTEGER,d,C,e,B,a>>)
bool_value (false)
add_command("c", "C", <<["a", "INTEGER"], ["C", "BOOLEAN"], ["C", "D"], ["c", "A"], ["b", "BOOLEAN"]>>)
add_call_chain(<<D,a,C,d,c,c>>)
add_query("C", "d", <<["INTEGER", "A"], ["b", "INTEGER"], ["B", "A"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["C", "B"], ["A", "INTEGER"]>>, "a")
generate_java_code
add_query("d", "B", <<["A", "INTEGER"], ["B", "BOOLEAN"], ["a", "d"], ["A", "BOOLEAN"], ["c", "B"], ["B", "B"], ["c", "BOOLEAN"], ["a", "INTEGER"], ["C", "D"]>>, "a")
bool_value (true)
add_attribute("B", "C", "BOOLEAN")
add_call_chain(<<BOOLEAN,a,C,A,D,c>>)
add_command("d", "b", <<["e", "A"], ["A", "INTEGER"], ["INTEGER", "A"]>>)
logical_negation
add_attribute("C", "d", "INTEGER")
add_command("INTEGER", "BOOLEAN", <<["A", "A"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["A", "INTEGER"], ["C", "BOOLEAN"]>>)
conjunction
add_class(B)
logical_negation
greater_than
generate_java_code
add_call_chain(<<D,B,C,A>>)
bool_value (true)
add_query("e", "BOOLEAN", <<["e", "INTEGER"], ["A", "BOOLEAN"], ["BOOLEAN", "c"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["INTEGER", "D"], ["d", "BOOLEAN"]>>, "c")
add_query("b", "b", <<["D", "b"], ["d", "INTEGER"], ["D", "BOOLEAN"], ["c", "INTEGER"], ["INTEGER", "D"], ["b", "A"], ["B", "INTEGER"]>>, "B")
add_query("D", "A", <<["D", "INTEGER"]>>, "B")
type_check
generate_java_code
add_attribute("d", "d", "b")
add_command("C", "a", <<["D", "BOOLEAN"], ["A", "b"], ["D", "INTEGER"], ["c", "INTEGER"], ["B", "INTEGER"], ["c", "BOOLEAN"], ["a", "INTEGER"], ["D", "INTEGER"]>>)
add_command("d", "A", <<["e", "C"], ["D", "BOOLEAN"], ["b", "INTEGER"], ["INTEGER", "INTEGER"], ["c", "C"], ["A", "e"], ["A", "D"]>>)
add_query("INTEGER", "B", <<["C", "INTEGER"], ["B", "c"], ["e", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "b"], ["b", "BOOLEAN"]>>, "e")
add_call_chain(<<B,c>>)
less_than
bool_value (true)
subtraction
add_call_chain(<<C,c,b,b,d,INTEGER,a,c>>)
add_call_chain(<<A,D,e,c,d,A>>)
bool_value (false)
add_call_chain(<<b,D,d,B>>)
addition
generate_java_code
add_query("c", "D", <<["b", "BOOLEAN"], ["A", "INTEGER"], ["a", "a"], ["b", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "A"], ["b", "D"], ["INTEGER", "A"]>>, "D")
logical_negation
type_check
add_query("c", "B", <<["d", "BOOLEAN"], ["c", "D"], ["d", "b"], ["INTEGER", "BOOLEAN"]>>, "B")
logical_negation
add_command("C", "c", <<["BOOLEAN", "BOOLEAN"], ["B", "INTEGER"], ["BOOLEAN", "INTEGER"], ["b", "INTEGER"], ["b", "INTEGER"], ["INTEGER", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "INTEGER"]>>)
logical_negation
add_command("c", "B", <<["c", "INTEGER"], ["C", "A"], ["A", "D"], ["C", "b"]>>)
add_call_chain(<<B,A>>)
add_call_chain(<<D,D,B,C,a,b,b,B,B>>)
int_value (13)
add_attribute("A", "C", "INTEGER")
generate_java_code
add_query("INTEGER", "C", <<["A", "c"], ["a", "BOOLEAN"], ["B", "B"], ["e", "INTEGER"]>>, "b")
add_call_chain(<<BOOLEAN,C,d,c>>)
add_call_chain(<<C,INTEGER,BOOLEAN,BOOLEAN,A,C>>)
add_call_chain(<<B>>)
equals
numerical_negation
logical_negation
add_attribute("D", "d", "INTEGER")
add_command("BOOLEAN", "B", <<["c", "INTEGER"], ["D", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "D"], ["C", "A"]>>)
add_query("D", "a", <<["e", "INTEGER"], ["a", "BOOLEAN"], ["C", "INTEGER"], ["c", "BOOLEAN"], ["b", "BOOLEAN"]>>, "b")
generate_java_code
modulo
add_query("c", "e", <<["c", "BOOLEAN"], ["a", "INTEGER"]>>, "e")
bool_value (true)
add_attribute("a", "BOOLEAN", "A")
add_call_chain(<<d,b,c>>)
add_command("C", "a", <<["D", "INTEGER"], ["B", "INTEGER"]>>)
add_command("A", "c", <<["b", "BOOLEAN"], ["d", "INTEGER"], ["INTEGER", "a"], ["A", "a"], ["C", "BOOLEAN"]>>)
int_value (26)
add_class(BOOLEAN)
generate_java_code
subtraction
equals
generate_java_code
bool_value (false)
add_query("C", "A", <<["b", "INTEGER"], ["D", "INTEGER"], ["b", "BOOLEAN"]>>, "INTEGER")
disjunction
