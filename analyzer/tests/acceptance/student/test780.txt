int_value (11)
add_query("e", "b", <<["a", "INTEGER"], ["B", "b"], ["A", "INTEGER"]>>, "B")
generate_java_code
numerical_negation
generate_java_code
add_command("c", "b", <<["e", "B"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "d"], ["d", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "BOOLEAN"]>>)
add_call_chain(<<e,C,C,b,c,D,d>>)
add_attribute("C", "c", "BOOLEAN")
int_value (27)
add_query("e", "D", <<["a", "BOOLEAN"], ["d", "b"], ["b", "BOOLEAN"], ["D", "b"], ["D", "INTEGER"], ["e", "B"], ["b", "BOOLEAN"]>>, "d")
logical_negation
int_value (27)
add_query("d", "b", <<["b", "INTEGER"], ["D", "INTEGER"], ["e", "INTEGER"], ["a", "INTEGER"], ["C", "INTEGER"], ["b", "B"]>>, "e")
numerical_negation
numerical_negation
bool_value (true)
add_query("a", "INTEGER", <<["B", "INTEGER"], ["b", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "e"], ["INTEGER", "INTEGER"], ["c", "BOOLEAN"], ["a", "a"]>>, "a")
quotient
numerical_negation
add_attribute("B", "D", "D")
int_value (13)
add_command("BOOLEAN", "C", <<["D", "BOOLEAN"], ["a", "c"], ["e", "C"], ["e", "INTEGER"], ["INTEGER", "BOOLEAN"], ["D", "c"], ["C", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["C", "A"]>>)
int_value (6)
add_query("d", "D", <<["B", "INTEGER"], ["C", "D"], ["A", "A"], ["BOOLEAN", "d"], ["B", "INTEGER"], ["INTEGER", "INTEGER"], ["e", "a"]>>, "d")
disjunction
int_value (1)
add_call_chain(<<d,A,e,d,B>>)
bool_value (true)
add_query("c", "C", <<["a", "BOOLEAN"], ["c", "b"], ["A", "B"], ["e", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "B"]>>, "b")
add_command("e", "b", <<["a", "INTEGER"], ["e", "INTEGER"], ["A", "BOOLEAN"]>>)
greater_than
add_command("B", "A", <<["a", "BOOLEAN"], ["C", "d"]>>)
type_check
add_attribute("C", "d", "INTEGER")
conjunction
multiplication
add_class(e)
add_attribute("a", "D", "BOOLEAN")
bool_value (false)
int_value (42)
type_check
add_call_chain(<<a,INTEGER,D,e,A,b>>)
type_check
type_check
subtraction
equals
int_value (41)
generate_java_code
add_class(A)
add_query("D", "C", <<["d", "BOOLEAN"], ["B", "INTEGER"]>>, "a")
add_query("e", "B", <<["b", "INTEGER"], ["C", "e"], ["A", "e"], ["A", "INTEGER"], ["INTEGER", "BOOLEAN"], ["b", "INTEGER"], ["C", "A"], ["D", "INTEGER"]>>, "INTEGER")
int_value (45)
bool_value (false)
disjunction
add_command("C", "C", <<["C", "INTEGER"], ["C", "BOOLEAN"]>>)
bool_value (true)
logical_negation
disjunction
int_value (47)
logical_negation
int_value (23)
conjunction
add_query("c", "e", <<["b", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "INTEGER"], ["D", "INTEGER"], ["A", "b"], ["b", "A"], ["C", "BOOLEAN"], ["C", "INTEGER"]>>, "B")
add_call_chain(<<e>>)
numerical_negation
add_command("e", "INTEGER", <<["INTEGER", "INTEGER"], ["c", "BOOLEAN"], ["b", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "INTEGER"], ["b", "INTEGER"]>>)
bool_value (false)
add_query("c", "D", <<["A", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "INTEGER"]>>, "b")
add_attribute("D", "D", "INTEGER")
bool_value (false)
add_call_chain(<<D>>)
bool_value (false)
equals
numerical_negation
add_call_chain(<<e,D,B,B,d,d,C>>)
less_than
bool_value (false)
bool_value (true)
add_class(C)
numerical_negation
add_command("D", "B", <<["D", "INTEGER"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["a", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["A", "INTEGER"], ["a", "INTEGER"], ["a", "b"], ["b", "INTEGER"]>>)
logical_negation
numerical_negation
add_command("B", "D", <<["A", "BOOLEAN"], ["b", "a"], ["INTEGER", "D"], ["d", "D"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["c", "BOOLEAN"], ["b", "BOOLEAN"], ["b", "INTEGER"]>>)
add_call_chain(<<A,D,a,D,c,a,c,e>>)
add_attribute("B", "c", "INTEGER")
add_attribute("b", "e", "BOOLEAN")
type_check
equals
bool_value (false)
add_attribute("A", "BOOLEAN", "BOOLEAN")
less_than
addition
add_command("INTEGER", "e", <<["A", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "a"], ["a", "BOOLEAN"], ["BOOLEAN", "C"], ["a", "INTEGER"], ["C", "INTEGER"], ["a", "INTEGER"]>>)
add_call_chain(<<A,b,A,a,C,A>>)
add_call_chain(<<c,e,B,d>>)
greater_than
add_call_chain(<<c,D,D,C>>)
numerical_negation
add_call_chain(<<D,a,A,A,e>>)
add_call_chain(<<A,B>>)
disjunction
generate_java_code
add_attribute("D", "A", "BOOLEAN")
subtraction
add_query("B", "D", <<["B", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "INTEGER"], ["b", "c"], ["B", "INTEGER"]>>, "c")
numerical_negation
conjunction
logical_negation
add_call_chain(<<A,b,A,C,B>>)
add_call_chain(<<d,a,a,c,d,D,d>>)
add_attribute("C", "C", "INTEGER")
add_call_chain(<<b,C,d>>)
bool_value (true)
add_attribute("A", "A", "INTEGER")
add_call_chain(<<A,d,C,C,a,A>>)
logical_negation
add_command("A", "e", <<["c", "INTEGER"], ["a", "INTEGER"]>>)
add_call_chain(<<e,C>>)
type_check
type_check
numerical_negation
add_command("c", "d", <<["D", "c"]>>)
add_command("a", "C", <<["C", "BOOLEAN"], ["B", "INTEGER"], ["D", "INTEGER"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "INTEGER"]>>)
add_query("D", "BOOLEAN", <<["c", "a"], ["c", "d"], ["c", "A"], ["INTEGER", "BOOLEAN"], ["C", "B"], ["c", "B"]>>, "c")
add_query("a", "b", <<["d", "D"], ["a", "c"], ["C", "D"], ["d", "BOOLEAN"], ["BOOLEAN", "b"], ["A", "BOOLEAN"], ["e", "e"], ["A", "BOOLEAN"], ["BOOLEAN", "d"]>>, "B")
add_attribute("C", "D", "BOOLEAN")
logical_negation
add_class(C)
disjunction
bool_value (false)
int_value (49)
add_call_chain(<<b,B,D,e,C,c,D,C>>)
conjunction
generate_java_code
int_value (29)
add_call_chain(<<B,b,e,A,C,b,D,B,a>>)
add_query("B", "A", <<["e", "BOOLEAN"], ["e", "B"], ["e", "INTEGER"], ["d", "INTEGER"], ["c", "BOOLEAN"]>>, "INTEGER")
add_attribute("d", "BOOLEAN", "INTEGER")
less_than
subtraction
int_value (42)
add_attribute("d", "C", "BOOLEAN")
add_call_chain(<<b,e,INTEGER>>)
numerical_negation
int_value (7)
add_command("e", "e", <<["B", "INTEGER"], ["C", "A"], ["B", "INTEGER"], ["INTEGER", "BOOLEAN"], ["c", "B"], ["INTEGER", "BOOLEAN"], ["C", "c"], ["A", "B"]>>)
add_command("c", "INTEGER", <<["A", "D"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["a", "BOOLEAN"], ["A", "INTEGER"]>>)
add_call_chain(<<B,d,d,BOOLEAN,D,C,b>>)
conjunction
numerical_negation
logical_negation
add_class(A)
add_query("INTEGER", "D", <<["a", "A"], ["A", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>, "BOOLEAN")
add_call_chain(<<c,b,B,B,A,e>>)
generate_java_code
add_attribute("BOOLEAN", "D", "INTEGER")
add_call_chain(<<C,A,D,b,c,c,a,A,e>>)
generate_java_code
int_value (26)
add_call_chain(<<a,A,b,c,d,D,b>>)
