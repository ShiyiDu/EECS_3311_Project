numerical_negation
type_check
add_command("C", "e", <<["D", "INTEGER"]>>)
logical_negation
numerical_negation
add_call_chain(<<e>>)
int_value (20)
greater_than
int_value (22)
add_call_chain(<<b,INTEGER,D,d,e,c,b,D>>)
bool_value (true)
add_command("e", "B", <<["B", "INTEGER"], ["A", "INTEGER"], ["a", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["c", "a"], ["B", "INTEGER"], ["b", "INTEGER"], ["D", "INTEGER"], ["a", "INTEGER"]>>)
numerical_negation
int_value (35)
add_command("BOOLEAN", "A", <<["BOOLEAN", "C"]>>)
add_command("c", "e", <<["B", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["B", "INTEGER"], ["B", "INTEGER"], ["c", "INTEGER"], ["B", "INTEGER"]>>)
numerical_negation
logical_negation
numerical_negation
int_value (15)
bool_value (true)
generate_java_code
bool_value (false)
add_attribute("e", "b", "BOOLEAN")
add_attribute("B", "B", "BOOLEAN")
int_value (45)
logical_negation
add_query("C", "e", <<["b", "d"]>>, "d")
bool_value (false)
numerical_negation
add_call_chain(<<e,e,D,d,INTEGER,b,A,C,B>>)
bool_value (true)
add_call_chain(<<BOOLEAN,d,B,a,B,C>>)
generate_java_code
add_command("d", "B", <<["e", "INTEGER"], ["D", "BOOLEAN"], ["BOOLEAN", "b"], ["C", "D"], ["C", "BOOLEAN"], ["a", "BOOLEAN"]>>)
add_call_chain(<<BOOLEAN,c,D,e,c>>)
add_query("D", "C", <<["C", "BOOLEAN"], ["D", "INTEGER"]>>, "A")
numerical_negation
type_check
add_command("C", "d", <<["B", "INTEGER"], ["A", "BOOLEAN"]>>)
logical_negation
addition
add_call_chain(<<BOOLEAN,BOOLEAN,d>>)
type_check
less_than
add_query("A", "C", <<["c", "e"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["d", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "c"], ["c", "D"]>>, "B")
bool_value (true)
add_query("c", "B", <<["BOOLEAN", "INTEGER"], ["A", "e"]>>, "D")
add_call_chain(<<a,A,BOOLEAN,b,c,b,b,c>>)
disjunction
add_class(C)
add_call_chain(<<a,INTEGER>>)
numerical_negation
subtraction
subtraction
add_query("A", "b", <<["e", "INTEGER"], ["INTEGER", "INTEGER"], ["C", "BOOLEAN"], ["B", "INTEGER"], ["D", "BOOLEAN"]>>, "b")
add_attribute("e", "c", "D")
less_than
bool_value (true)
add_class(A)
modulo
add_call_chain(<<c,D,d,B,d,B,C>>)
type_check
int_value (3)
int_value (12)
bool_value (false)
add_command("d", "c", <<["D", "INTEGER"]>>)
add_command("A", "b", <<["a", "INTEGER"], ["B", "A"]>>)
bool_value (true)
add_command("D", "e", <<["d", "BOOLEAN"], ["A", "A"], ["d", "INTEGER"], ["b", "INTEGER"], ["A", "INTEGER"], ["c", "D"], ["b", "c"], ["d", "c"], ["b", "c"]>>)
bool_value (false)
add_command("INTEGER", "e", <<["B", "BOOLEAN"], ["B", "INTEGER"], ["d", "BOOLEAN"], ["INTEGER", "b"], ["A", "BOOLEAN"], ["A", "A"]>>)
add_command("B", "B", <<["b", "INTEGER"], ["A", "a"], ["c", "BOOLEAN"], ["d", "b"], ["A", "BOOLEAN"], ["b", "c"], ["D", "BOOLEAN"]>>)
add_call_chain(<<b,C,D,A,c,a>>)
add_class(D)
add_attribute("b", "c", "c")
disjunction
add_attribute("B", "e", "BOOLEAN")
generate_java_code
add_call_chain(<<B,c,b,a,B,B>>)
add_command("B", "c", <<["C", "c"], ["D", "A"], ["C", "BOOLEAN"]>>)
add_query("a", "B", <<["C", "A"], ["C", "BOOLEAN"], ["b", "BOOLEAN"]>>, "D")
int_value (48)
numerical_negation
disjunction
add_query("e", "c", <<["D", "A"], ["c", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["c", "a"]>>, "C")
add_command("BOOLEAN", "e", <<["c", "INTEGER"], ["e", "INTEGER"], ["B", "INTEGER"], ["B", "BOOLEAN"], ["B", "A"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["d", "INTEGER"], ["A", "INTEGER"]>>)
add_query("e", "b", <<["b", "INTEGER"]>>, "e")
type_check
logical_negation
add_class(D)
numerical_negation
add_query("c", "a", <<["c", "A"], ["c", "BOOLEAN"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["b", "b"]>>, "b")
addition
int_value (44)
numerical_negation
int_value (5)
add_query("B", "c", <<["D", "INTEGER"], ["e", "BOOLEAN"], ["d", "BOOLEAN"], ["c", "A"], ["B", "BOOLEAN"], ["B", "A"], ["c", "a"], ["b", "BOOLEAN"], ["a", "A"]>>, "a")
bool_value (true)
add_command("D", "D", <<["B", "d"]>>)
logical_negation
add_attribute("c", "c", "A")
numerical_negation
int_value (14)
add_class(d)
bool_value (false)
add_attribute("A", "D", "BOOLEAN")
add_class(B)
add_call_chain(<<A,b,INTEGER,A,a,a>>)
add_command("D", "C", <<["e", "INTEGER"], ["C", "e"], ["B", "INTEGER"], ["c", "INTEGER"], ["d", "b"], ["C", "A"], ["A", "a"], ["c", "A"]>>)
add_command("BOOLEAN", "BOOLEAN", <<["c", "e"], ["B", "BOOLEAN"], ["C", "INTEGER"], ["a", "A"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["A", "C"]>>)
add_attribute("d", "B", "BOOLEAN")
bool_value (false)
bool_value (true)
type_check
generate_java_code
add_class(a)
type_check
logical_negation
disjunction
add_query("BOOLEAN", "D", <<["e", "INTEGER"], ["A", "INTEGER"]>>, "B")
add_call_chain(<<B,C,a,D,A,BOOLEAN,c,C>>)
add_call_chain(<<b,a,D,c,a>>)
add_query("C", "e", <<["b", "INTEGER"], ["B", "BOOLEAN"]>>, "e")
logical_negation
type_check
add_command("B", "INTEGER", <<["D", "A"], ["INTEGER", "A"], ["d", "BOOLEAN"], ["B", "INTEGER"]>>)
logical_negation
bool_value (true)
add_attribute("B", "d", "BOOLEAN")
add_attribute("D", "b", "BOOLEAN")
add_call_chain(<<INTEGER,e,b>>)
logical_negation
numerical_negation
add_query("a", "A", <<["B", "b"], ["C", "INTEGER"], ["d", "D"], ["C", "BOOLEAN"], ["b", "b"], ["c", "BOOLEAN"], ["e", "INTEGER"], ["C", "BOOLEAN"], ["A", "b"]>>, "e")
add_attribute("e", "e", "B")
bool_value (false)
add_command("INTEGER", "A", <<["d", "BOOLEAN"], ["a", "BOOLEAN"]>>)
add_query("a", "a", <<["B", "c"], ["c", "INTEGER"]>>, "C")
generate_java_code
add_call_chain(<<BOOLEAN,B,a,A,c,b,b>>)
conjunction
logical_negation
add_query("C", "c", <<["c", "INTEGER"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["e", "BOOLEAN"], ["e", "d"]>>, "D")
modulo
bool_value (false)
logical_negation
add_query("a", "b", <<["B", "C"], ["a", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>, "INTEGER")
add_class(D)
type_check
add_call_chain(<<D,BOOLEAN,A,a,B,b>>)
add_query("B", "c", <<["C", "INTEGER"], ["e", "D"], ["c", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "a"]>>, "C")
generate_java_code
add_call_chain(<<d,B,a>>)
add_attribute("C", "c", "c")
add_call_chain(<<c,e,C>>)
add_call_chain(<<B,BOOLEAN,C,c,c,INTEGER,INTEGER>>)
add_command("D", "C", <<["B", "e"], ["C", "INTEGER"]>>)
logical_negation
numerical_negation
numerical_negation
logical_negation
add_command("BOOLEAN", "D", <<["B", "BOOLEAN"], ["C", "INTEGER"], ["e", "c"]>>)
int_value (44)
type_check
add_attribute("A", "A", "INTEGER")
int_value (17)
add_attribute("C", "B", "INTEGER")
add_attribute("e", "C", "c")
bool_value (false)
add_call_chain(<<b,B,D,D,b,d,D,D>>)
add_command("b", "B", <<["c", "INTEGER"], ["d", "b"], ["A", "BOOLEAN"]>>)
add_attribute("C", "a", "INTEGER")
type_check
generate_java_code
add_attribute("c", "A", "INTEGER")
add_call_chain(<<d,C,B,B,b,b,B,a>>)
numerical_negation
disjunction
int_value (21)
add_query("INTEGER", "d", <<["c", "BOOLEAN"]>>, "d")
add_query("b", "b", <<["d", "BOOLEAN"], ["b", "INTEGER"], ["a", "C"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "c"]>>, "A")
logical_negation
add_call_chain(<<A,A,e,a,C,BOOLEAN,A,C>>)
int_value (28)
add_call_chain(<<BOOLEAN,B,a,INTEGER>>)
add_command("b", "B", <<["C", "BOOLEAN"]>>)
add_call_chain(<<e,D,b,A,A,c,c>>)
bool_value (false)
disjunction
add_call_chain(<<b,d,A>>)
numerical_negation
numerical_negation
quotient
bool_value (false)
int_value (43)
less_than
conjunction
add_command("INTEGER", "B", <<["D", "INTEGER"], ["C", "a"], ["a", "BOOLEAN"], ["B", "A"], ["b", "BOOLEAN"], ["B", "a"]>>)
generate_java_code
add_call_chain(<<C>>)
numerical_negation
equals
bool_value (true)
add_query("a", "a", <<["c", "D"]>>, "d")
type_check
int_value (33)
add_attribute("d", "c", "BOOLEAN")
numerical_negation
