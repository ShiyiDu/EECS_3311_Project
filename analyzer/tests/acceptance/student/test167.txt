disjunction
logical_negation
add_call_chain(<<b,D,A>>)
type_check
add_command("e", "e", <<["C", "INTEGER"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["A", "INTEGER"], ["d", "INTEGER"], ["b", "INTEGER"], ["A", "e"]>>)
disjunction
equals
int_value (2)
bool_value (false)
generate_java_code
bool_value (false)
bool_value (true)
generate_java_code
add_command("C", "a", <<["A", "BOOLEAN"], ["c", "C"], ["C", "A"], ["a", "BOOLEAN"], ["D", "b"], ["b", "A"], ["a", "BOOLEAN"], ["C", "INTEGER"]>>)
add_attribute("BOOLEAN", "b", "INTEGER")
modulo
modulo
type_check
add_call_chain(<<d,B,e>>)
numerical_negation
numerical_negation
numerical_negation
bool_value (false)
generate_java_code
add_call_chain(<<A,d,b,B,C,A,D>>)
add_command("C", "b", <<["b", "c"], ["B", "BOOLEAN"], ["BOOLEAN", "a"], ["c", "INTEGER"]>>)
modulo
equals
add_query("B", "d", <<["D", "BOOLEAN"], ["B", "BOOLEAN"], ["INTEGER", "e"], ["B", "INTEGER"], ["c", "C"]>>, "A")
bool_value (false)
add_query("D", "d", <<["d", "D"], ["a", "BOOLEAN"], ["B", "INTEGER"], ["a", "INTEGER"], ["b", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "c"]>>, "C")
int_value (16)
bool_value (false)
add_command("e", "c", <<["D", "BOOLEAN"], ["c", "A"], ["d", "BOOLEAN"]>>)
generate_java_code
add_attribute("C", "A", "B")
bool_value (false)
add_command("D", "D", <<["b", "c"], ["b", "INTEGER"]>>)
type_check
add_call_chain(<<c,B,A,D,a,c>>)
disjunction
logical_negation
add_command("a", "e", <<["b", "BOOLEAN"], ["B", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["c", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "B"], ["d", "INTEGER"], ["INTEGER", "INTEGER"]>>)
add_attribute("A", "e", "B")
int_value (4)
modulo
bool_value (true)
add_call_chain(<<d,e,a,BOOLEAN>>)
numerical_negation
add_call_chain(<<b,e,a>>)
numerical_negation
conjunction
add_call_chain(<<D,C,d,C,a>>)
type_check
add_query("a", "b", <<["BOOLEAN", "INTEGER"], ["C", "a"], ["d", "INTEGER"], ["d", "d"]>>, "D")
add_command("INTEGER", "a", <<["A", "B"], ["d", "INTEGER"], ["b", "BOOLEAN"], ["d", "INTEGER"], ["d", "BOOLEAN"], ["a", "c"], ["C", "BOOLEAN"]>>)
add_attribute("a", "e", "BOOLEAN")
add_call_chain(<<c,a>>)
add_query("a", "D", <<["e", "a"], ["a", "INTEGER"], ["e", "INTEGER"]>>, "B")
bool_value (true)
add_command("d", "c", <<["D", "INTEGER"], ["e", "c"], ["A", "INTEGER"], ["D", "B"], ["D", "BOOLEAN"]>>)
add_call_chain(<<B,A,C,b,b,BOOLEAN,e,d,INTEGER>>)
int_value (5)
type_check
add_call_chain(<<D,INTEGER,a,a,c>>)
equals
bool_value (true)
add_query("d", "B", <<["b", "BOOLEAN"], ["B", "INTEGER"], ["BOOLEAN", "INTEGER"], ["INTEGER", "INTEGER"], ["c", "BOOLEAN"], ["c", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "C"], ["a", "INTEGER"]>>, "d")
disjunction
conjunction
int_value (21)
add_query("C", "e", <<["a", "D"], ["b", "e"], ["D", "BOOLEAN"], ["c", "c"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["d", "INTEGER"]>>, "d")
add_call_chain(<<D,D,BOOLEAN,C,D,d,B>>)
int_value (34)
type_check
logical_negation
add_attribute("INTEGER", "BOOLEAN", "BOOLEAN")
bool_value (false)
add_call_chain(<<C,e,c,B,a,INTEGER>>)
add_class(e)
type_check
add_query("C", "e", <<["b", "C"], ["A", "INTEGER"], ["B", "B"], ["C", "INTEGER"], ["c", "BOOLEAN"], ["D", "INTEGER"], ["c", "d"], ["a", "BOOLEAN"], ["b", "INTEGER"]>>, "b")
bool_value (true)
logical_negation
add_attribute("e", "C", "BOOLEAN")
add_class(e)
add_query("BOOLEAN", "C", <<["c", "B"], ["c", "BOOLEAN"]>>, "c")
add_query("C", "d", <<["B", "INTEGER"], ["d", "INTEGER"], ["BOOLEAN", "INTEGER"], ["e", "INTEGER"], ["b", "C"], ["BOOLEAN", "INTEGER"], ["b", "BOOLEAN"], ["B", "INTEGER"]>>, "b")
bool_value (true)
int_value (33)
add_command("e", "A", <<["C", "INTEGER"], ["D", "BOOLEAN"], ["BOOLEAN", "a"], ["B", "BOOLEAN"], ["A", "BOOLEAN"]>>)
int_value (22)
add_query("A", "D", <<["C", "INTEGER"], ["INTEGER", "INTEGER"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["e", "INTEGER"]>>, "d")
type_check
add_query("d", "D", <<["A", "B"], ["e", "A"], ["c", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["b", "INTEGER"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["INTEGER", "INTEGER"]>>, "INTEGER")
add_call_chain(<<c,a,a>>)
int_value (20)
add_command("d", "B", <<["D", "INTEGER"]>>)
numerical_negation
generate_java_code
add_command("D", "INTEGER", <<["d", "INTEGER"], ["A", "INTEGER"]>>)
logical_negation
add_command("A", "B", <<["INTEGER", "A"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["d", "BOOLEAN"]>>)
add_class(D)
add_query("e", "d", <<["A", "BOOLEAN"]>>, "e")
conjunction
generate_java_code
conjunction
numerical_negation
add_command("A", "B", <<["BOOLEAN", "B"]>>)
add_query("A", "d", <<["A", "d"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["d", "INTEGER"], ["a", "BOOLEAN"], ["b", "BOOLEAN"]>>, "A")
bool_value (true)
generate_java_code
add_call_chain(<<A,d,INTEGER,b,e,a,D,B,D>>)
bool_value (false)
bool_value (true)
conjunction
add_call_chain(<<B,b,D,a>>)
add_attribute("B", "D", "D")
logical_negation
add_query("D", "A", <<["e", "INTEGER"], ["d", "B"], ["C", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "BOOLEAN"], ["e", "INTEGER"]>>, "d")
numerical_negation
add_class(a)
logical_negation
less_than
add_command("d", "b", <<["D", "INTEGER"], ["A", "B"], ["c", "BOOLEAN"], ["a", "A"], ["D", "INTEGER"], ["B", "INTEGER"], ["c", "A"]>>)
bool_value (false)
multiplication
add_call_chain(<<D,C,BOOLEAN,A>>)
add_call_chain(<<BOOLEAN,d,d,c,e,e>>)
numerical_negation
modulo
add_attribute("B", "D", "INTEGER")
add_call_chain(<<INTEGER,B,a,c,c,D,INTEGER,BOOLEAN>>)
quotient
add_call_chain(<<e,a,D,A>>)
quotient
add_class(e)
add_call_chain(<<D,BOOLEAN,B,C,A,d,C,C,b>>)
int_value (42)
numerical_negation
add_call_chain(<<c>>)
add_attribute("b", "C", "A")
generate_java_code
bool_value (true)
modulo
add_call_chain(<<d,d,B,c>>)
equals
add_attribute("C", "c", "D")
logical_negation
addition
add_command("c", "B", <<["B", "INTEGER"], ["D", "B"], ["b", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "INTEGER"], ["c", "INTEGER"], ["d", "e"], ["e", "BOOLEAN"], ["C", "INTEGER"]>>)
int_value (42)
numerical_negation
bool_value (false)
add_call_chain(<<a,B,INTEGER,e,d,A>>)
int_value (41)
add_class(c)
bool_value (true)
logical_negation
greater_than
modulo
int_value (24)
generate_java_code
less_than
int_value (43)
type_check
add_call_chain(<<d,B,d,D,C,BOOLEAN,B,C,a>>)
equals
add_call_chain(<<B,e,INTEGER,D,B>>)
add_call_chain(<<A,d,a,D,B>>)
subtraction
logical_negation
int_value (20)
add_call_chain(<<B,B,B,BOOLEAN,D,c,b,d>>)
add_query("d", "D", <<["e", "a"], ["INTEGER", "INTEGER"], ["B", "INTEGER"], ["b", "B"], ["INTEGER", "BOOLEAN"], ["d", "BOOLEAN"], ["e", "A"]>>, "D")
disjunction
add_call_chain(<<a,INTEGER,D,e,BOOLEAN>>)
add_call_chain(<<e,e,d,c,A,BOOLEAN,B>>)
int_value (49)
logical_negation
type_check
conjunction
modulo
int_value (26)
add_command("C", "b", <<["D", "C"], ["c", "A"], ["A", "B"], ["BOOLEAN", "D"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["e", "C"]>>)
generate_java_code
add_attribute("BOOLEAN", "C", "INTEGER")
add_attribute("e", "e", "BOOLEAN")
logical_negation
add_query("BOOLEAN", "c", <<["INTEGER", "INTEGER"], ["e", "INTEGER"]>>, "d")
bool_value (true)
logical_negation
type_check
addition
add_query("A", "b", <<["A", "INTEGER"], ["c", "INTEGER"], ["A", "D"], ["e", "BOOLEAN"], ["D", "A"]>>, "d")
add_call_chain(<<c,A,D,D,e,A,D,BOOLEAN>>)
add_call_chain(<<a,c,d,d,a,b,e>>)
disjunction
add_call_chain(<<e>>)
add_class(B)
add_query("e", "e", <<["B", "B"], ["B", "INTEGER"], ["B", "BOOLEAN"]>>, "a")
add_call_chain(<<A,D,INTEGER,D,INTEGER>>)
bool_value (false)
add_command("C", "C", <<["C", "b"], ["d", "BOOLEAN"]>>)
add_attribute("e", "BOOLEAN", "INTEGER")
add_query("e", "a", <<["C", "INTEGER"], ["A", "INTEGER"], ["a", "d"], ["d", "INTEGER"]>>, "D")
add_query("B", "c", <<["a", "BOOLEAN"], ["e", "d"], ["C", "INTEGER"], ["B", "INTEGER"], ["BOOLEAN", "a"], ["B", "INTEGER"], ["BOOLEAN", "INTEGER"], ["BOOLEAN", "INTEGER"], ["D", "BOOLEAN"]>>, "e")
add_call_chain(<<e,B,B,b,B,B,C,B>>)
disjunction
generate_java_code
add_query("A", "C", <<["e", "A"], ["D", "INTEGER"], ["C", "d"]>>, "D")
int_value (26)
logical_negation
bool_value (false)
type_check
bool_value (false)
int_value (14)
numerical_negation
add_command("C", "b", <<["a", "BOOLEAN"], ["c", "a"], ["INTEGER", "a"], ["C", "BOOLEAN"], ["a", "b"], ["a", "C"]>>)
add_query("b", "C", <<["d", "BOOLEAN"], ["B", "d"], ["A", "BOOLEAN"], ["D", "INTEGER"], ["b", "INTEGER"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "BOOLEAN"]>>, "B")
logical_negation
add_call_chain(<<INTEGER,d,D,C,INTEGER>>)
conjunction
add_call_chain(<<D,A,d,A,e>>)
add_command("A", "C", <<["B", "BOOLEAN"], ["D", "C"], ["c", "A"], ["e", "BOOLEAN"]>>)
numerical_negation
modulo
bool_value (true)
multiplication
less_than
generate_java_code
add_command("C", "A", <<["INTEGER", "D"], ["d", "BOOLEAN"], ["b", "INTEGER"], ["a", "e"], ["C", "INTEGER"]>>)
type_check
add_class(A)
add_call_chain(<<C>>)
int_value (16)
add_call_chain(<<C,e,b,D,B,A,d>>)
add_command("e", "B", <<["B", "INTEGER"], ["C", "c"], ["BOOLEAN", "BOOLEAN"], ["D", "D"], ["c", "INTEGER"], ["A", "D"]>>)
add_query("BOOLEAN", "D", <<["D", "B"], ["e", "D"], ["b", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "e"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["D", "a"]>>, "BOOLEAN")
add_call_chain(<<B>>)
