add_command("BOOLEAN", "B", <<["A", "INTEGER"], ["A", "INTEGER"], ["c", "INTEGER"]>>)
add_call_chain(<<INTEGER,b,a,C>>)
generate_java_code
bool_value (false)
logical_negation
disjunction
numerical_negation
type_check
add_attribute("C", "A", "C")
add_class(c)
bool_value (true)
int_value (43)
bool_value (true)
logical_negation
conjunction
add_call_chain(<<INTEGER,D,c,D,a,D,e>>)
add_attribute("a", "C", "INTEGER")
generate_java_code
greater_than
add_call_chain(<<B,D,c,e>>)
int_value (4)
add_command("D", "A", <<["a", "B"], ["a", "INTEGER"]>>)
add_class(d)
logical_negation
add_call_chain(<<B,b,a,INTEGER,c,BOOLEAN,B,c,a>>)
add_call_chain(<<B,D,INTEGER,c,b,C,A,a,c>>)
logical_negation
generate_java_code
bool_value (true)
add_query("c", "C", <<["e", "b"], ["b", "INTEGER"], ["e", "INTEGER"]>>, "a")
numerical_negation
add_call_chain(<<D,e,A,A,d,c,A,A>>)
greater_than
add_class(INTEGER)
disjunction
add_call_chain(<<C,a,a,e,A>>)
add_call_chain(<<e,C,e,b,INTEGER,C,A,C>>)
disjunction
bool_value (false)
add_attribute("b", "b", "A")
numerical_negation
logical_negation
bool_value (true)
bool_value (true)
add_class(a)
add_call_chain(<<b,INTEGER,C,b,C>>)
add_query("INTEGER", "a", <<["A", "BOOLEAN"], ["c", "B"], ["b", "INTEGER"]>>, "B")
add_call_chain(<<B,b,D,INTEGER>>)
add_query("D", "D", <<["d", "INTEGER"], ["B", "INTEGER"], ["C", "C"]>>, "a")
greater_than
numerical_negation
add_attribute("d", "c", "BOOLEAN")
add_query("A", "e", <<["A", "BOOLEAN"], ["C", "INTEGER"], ["b", "BOOLEAN"], ["D", "INTEGER"], ["C", "INTEGER"]>>, "C")
add_call_chain(<<c,a,c,d,B,INTEGER,d,a>>)
add_call_chain(<<B,b,D,e,A,B,c,D>>)
numerical_negation
add_command("a", "D", <<["e", "INTEGER"], ["d", "INTEGER"], ["INTEGER", "A"], ["INTEGER", "INTEGER"], ["C", "INTEGER"]>>)
add_call_chain(<<B,D,a,e>>)
add_class(c)
add_query("B", "b", <<["e", "C"], ["D", "a"], ["a", "b"], ["B", "INTEGER"]>>, "b")
add_call_chain(<<a,c,BOOLEAN,e,C,c>>)
bool_value (true)
add_call_chain(<<B,D>>)
generate_java_code
less_than
greater_than
int_value (26)
type_check
add_query("A", "A", <<["e", "INTEGER"], ["A", "INTEGER"]>>, "c")
add_attribute("a", "B", "BOOLEAN")
bool_value (false)
type_check
add_class(d)
generate_java_code
add_call_chain(<<c,a,c,a,A,A,BOOLEAN,C>>)
bool_value (true)
disjunction
type_check
add_attribute("B", "c", "INTEGER")
add_attribute("B", "e", "INTEGER")
numerical_negation
subtraction
numerical_negation
numerical_negation
add_query("e", "C", <<["e", "BOOLEAN"], ["C", "INTEGER"]>>, "e")
add_query("a", "e", <<["a", "INTEGER"], ["d", "BOOLEAN"], ["b", "INTEGER"], ["BOOLEAN", "INTEGER"], ["b", "C"]>>, "a")
add_class(c)
quotient
numerical_negation
int_value (19)
numerical_negation
conjunction
add_command("BOOLEAN", "c", <<["INTEGER", "BOOLEAN"], ["e", "a"], ["A", "INTEGER"], ["A", "BOOLEAN"], ["a", "C"]>>)
add_query("e", "b", <<["A", "A"], ["a", "BOOLEAN"], ["e", "INTEGER"], ["a", "d"], ["BOOLEAN", "INTEGER"], ["C", "e"], ["B", "b"], ["D", "BOOLEAN"], ["e", "A"]>>, "a")
add_command("C", "B", <<["C", "INTEGER"], ["BOOLEAN", "INTEGER"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["INTEGER", "INTEGER"], ["d", "INTEGER"], ["D", "C"], ["A", "a"]>>)
add_call_chain(<<D,d,a,e,d,B,B,C>>)
type_check
add_call_chain(<<D,BOOLEAN,INTEGER,d,D>>)
add_command("d", "D", <<["A", "b"], ["d", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "BOOLEAN"]>>)
bool_value (false)
add_attribute("d", "A", "BOOLEAN")
add_call_chain(<<B,A>>)
add_call_chain(<<C>>)
bool_value (false)
add_attribute("c", "A", "INTEGER")
add_query("A", "D", <<["C", "INTEGER"], ["D", "b"], ["e", "BOOLEAN"], ["D", "b"], ["c", "a"]>>, "c")
add_call_chain(<<INTEGER,b,a,c,d,a>>)
add_class(C)
logical_negation
logical_negation
bool_value (false)
bool_value (true)
type_check
numerical_negation
int_value (19)
bool_value (true)
add_attribute("D", "D", "INTEGER")
numerical_negation
add_query("b", "b", <<["D", "INTEGER"], ["b", "D"], ["c", "INTEGER"], ["D", "INTEGER"], ["d", "INTEGER"]>>, "c")
add_query("BOOLEAN", "D", <<["D", "BOOLEAN"], ["c", "INTEGER"], ["a", "BOOLEAN"], ["A", "INTEGER"], ["d", "C"], ["a", "BOOLEAN"], ["b", "INTEGER"], ["a", "A"], ["D", "a"]>>, "C")
add_call_chain(<<a>>)
add_attribute("b", "A", "BOOLEAN")
conjunction
type_check
add_query("C", "C", <<["B", "d"], ["A", "INTEGER"], ["b", "INTEGER"]>>, "c")
add_class(B)
add_attribute("e", "a", "BOOLEAN")
add_query("d", "B", <<["A", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "INTEGER"]>>, "b")
numerical_negation
conjunction
add_call_chain(<<d,c,b,e,A,INTEGER,b,C,A>>)
logical_negation
add_attribute("a", "C", "INTEGER")
int_value (20)
subtraction
generate_java_code
addition
add_command("A", "d", <<["a", "INTEGER"]>>)
add_call_chain(<<e,d,A,B,c,C,a,e,D>>)
generate_java_code
bool_value (true)
add_attribute("d", "a", "INTEGER")
bool_value (true)
add_class(A)
type_check
add_command("BOOLEAN", "C", <<["C", "c"], ["A", "BOOLEAN"], ["e", "BOOLEAN"]>>)
add_class(C)
add_call_chain(<<C,d,D,a,e>>)
int_value (7)
bool_value (false)
add_attribute("C", "a", "BOOLEAN")
add_query("B", "b", <<["d", "BOOLEAN"]>>, "b")
add_query("c", "b", <<["A", "BOOLEAN"]>>, "INTEGER")
bool_value (false)
add_attribute("e", "c", "INTEGER")
numerical_negation
add_call_chain(<<e>>)
add_command("B", "B", <<["e", "BOOLEAN"]>>)
generate_java_code
bool_value (false)
add_query("D", "e", <<["b", "A"], ["C", "BOOLEAN"], ["e", "d"], ["a", "b"]>>, "C")
add_attribute("a", "a", "c")
add_class(A)
subtraction
generate_java_code
logical_negation
add_query("C", "B", <<["BOOLEAN", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["INTEGER", "d"], ["d", "BOOLEAN"]>>, "D")
less_than
add_query("C", "d", <<["D", "b"], ["B", "INTEGER"], ["C", "BOOLEAN"], ["d", "b"], ["B", "BOOLEAN"], ["a", "INTEGER"], ["D", "BOOLEAN"]>>, "d")
add_attribute("D", "C", "BOOLEAN")
subtraction
add_call_chain(<<B>>)
type_check
add_query("b", "b", <<["c", "BOOLEAN"], ["d", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>, "A")
add_command("c", "e", <<["b", "d"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["b", "BOOLEAN"], ["d", "INTEGER"], ["a", "C"], ["BOOLEAN", "BOOLEAN"]>>)
add_command("C", "b", <<["C", "INTEGER"], ["A", "D"], ["B", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["A", "BOOLEAN"]>>)
add_call_chain(<<c,C,a>>)
add_command("b", "a", <<["e", "INTEGER"], ["c", "INTEGER"], ["INTEGER", "BOOLEAN"], ["e", "INTEGER"], ["B", "INTEGER"], ["C", "b"], ["d", "BOOLEAN"], ["B", "e"], ["b", "BOOLEAN"]>>)
add_attribute("b", "a", "a")
add_call_chain(<<B,d,a,C,C,c,b>>)
int_value (1)
add_call_chain(<<e>>)
add_class(D)
add_call_chain(<<D>>)
int_value (18)
add_class(C)
greater_than
greater_than
add_call_chain(<<e,INTEGER,A>>)
addition
add_call_chain(<<B,e>>)
add_call_chain(<<c,A,c>>)
bool_value (false)
add_call_chain(<<B,a,INTEGER,d,A,e>>)
quotient
logical_negation
add_attribute("a", "INTEGER", "INTEGER")
type_check
add_command("c", "b", <<["BOOLEAN", "BOOLEAN"], ["b", "INTEGER"], ["c", "B"], ["c", "BOOLEAN"], ["D", "b"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["A", "c"], ["D", "A"]>>)
add_call_chain(<<e,e>>)
add_query("e", "C", <<["INTEGER", "INTEGER"], ["A", "c"]>>, "B")
numerical_negation
add_attribute("A", "INTEGER", "B")
type_check
numerical_negation
generate_java_code
numerical_negation
disjunction
add_call_chain(<<d,a,C,c>>)
greater_than
add_call_chain(<<d,e,c,D>>)
int_value (30)
add_query("D", "B", <<["e", "INTEGER"], ["D", "INTEGER"], ["INTEGER", "A"], ["A", "BOOLEAN"], ["BOOLEAN", "C"], ["d", "c"], ["D", "BOOLEAN"]>>, "d")
numerical_negation
add_command("c", "A", <<["INTEGER", "BOOLEAN"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["INTEGER", "INTEGER"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["B", "BOOLEAN"]>>)
add_class(B)
add_call_chain(<<d,e,B,B,c,C,d>>)
add_class(d)
bool_value (false)
add_command("c", "A", <<["d", "INTEGER"], ["b", "INTEGER"], ["C", "BOOLEAN"]>>)
addition
generate_java_code
add_call_chain(<<e,A,e,A,D>>)
logical_negation
bool_value (true)
add_call_chain(<<b,C,D,c,c,c,a,B>>)
disjunction
add_query("D", "D", <<["B", "BOOLEAN"], ["b", "INTEGER"], ["e", "c"], ["c", "c"], ["a", "INTEGER"]>>, "C")
greater_than
bool_value (true)
add_call_chain(<<C>>)
conjunction
add_call_chain(<<a,B,C,a,B,C,BOOLEAN,C>>)
add_class(C)
bool_value (false)
