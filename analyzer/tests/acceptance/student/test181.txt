less_than
logical_negation
add_query("b", "a", <<["A", "B"], ["INTEGER", "INTEGER"], ["B", "INTEGER"], ["e", "BOOLEAN"], ["a", "INTEGER"], ["B", "d"], ["C", "INTEGER"], ["C", "BOOLEAN"]>>, "D")
add_call_chain(<<A,d,e,B>>)
add_call_chain(<<c,D>>)
add_command("A", "B", <<["b", "a"], ["c", "INTEGER"], ["D", "BOOLEAN"]>>)
add_call_chain(<<b,B,D,C,c,d,D>>)
disjunction
int_value (7)
add_call_chain(<<d,b,d,INTEGER,A,D,b>>)
equals
type_check
add_query("C", "D", <<["D", "BOOLEAN"], ["a", "B"]>>, "D")
add_command("C", "a", <<["c", "INTEGER"], ["b", "BOOLEAN"], ["e", "INTEGER"], ["b", "BOOLEAN"], ["b", "e"], ["c", "INTEGER"]>>)
greater_than
int_value (44)
bool_value (true)
add_call_chain(<<e,e,INTEGER,a>>)
type_check
addition
add_call_chain(<<A,A,A>>)
type_check
less_than
add_attribute("b", "A", "BOOLEAN")
addition
int_value (6)
generate_java_code
generate_java_code
add_attribute("C", "c", "BOOLEAN")
add_command("d", "c", <<["B", "INTEGER"], ["B", "INTEGER"], ["b", "BOOLEAN"], ["B", "a"], ["A", "INTEGER"], ["a", "d"], ["A", "BOOLEAN"]>>)
less_than
logical_negation
add_command("D", "C", <<["c", "c"], ["C", "B"], ["B", "C"], ["b", "B"], ["d", "a"], ["D", "INTEGER"], ["A", "BOOLEAN"]>>)
add_call_chain(<<a,INTEGER>>)
add_query("c", "B", <<["BOOLEAN", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["e", "b"], ["BOOLEAN", "INTEGER"], ["B", "INTEGER"]>>, "A")
greater_than
add_command("INTEGER", "e", <<["INTEGER", "b"], ["e", "INTEGER"], ["D", "INTEGER"], ["B", "c"]>>)
generate_java_code
numerical_negation
int_value (34)
disjunction
logical_negation
int_value (35)
int_value (3)
conjunction
numerical_negation
add_command("d", "BOOLEAN", <<["a", "BOOLEAN"], ["INTEGER", "INTEGER"], ["C", "INTEGER"]>>)
bool_value (false)
add_call_chain(<<D>>)
int_value (4)
logical_negation
int_value (1)
add_call_chain(<<b,B,INTEGER,B>>)
logical_negation
add_call_chain(<<d>>)
add_call_chain(<<D,a,b,C,e,D,C>>)
add_class(B)
add_command("B", "a", <<["INTEGER", "BOOLEAN"], ["b", "BOOLEAN"], ["c", "INTEGER"], ["B", "A"], ["b", "BOOLEAN"], ["C", "c"], ["a", "B"], ["A", "BOOLEAN"]>>)
int_value (24)
add_attribute("D", "b", "INTEGER")
add_call_chain(<<INTEGER,C,D,B,A,a,d>>)
add_call_chain(<<B,A,C,a,BOOLEAN,D,D,INTEGER>>)
generate_java_code
add_call_chain(<<D,B,e,a,C,B,d>>)
add_call_chain(<<c,b,A,d,b,A,INTEGER,c>>)
add_command("B", "A", <<["INTEGER", "A"], ["B", "BOOLEAN"], ["D", "BOOLEAN"]>>)
conjunction
logical_negation
multiplication
logical_negation
multiplication
int_value (10)
bool_value (false)
add_attribute("b", "b", "b")
logical_negation
logical_negation
numerical_negation
disjunction
disjunction
add_command("B", "A", <<["d", "c"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["c", "INTEGER"], ["D", "BOOLEAN"], ["a", "A"], ["A", "INTEGER"], ["d", "b"]>>)
add_query("INTEGER", "C", <<["a", "INTEGER"], ["INTEGER", "BOOLEAN"], ["c", "B"], ["c", "C"], ["D", "D"], ["d", "BOOLEAN"]>>, "e")
add_attribute("A", "c", "BOOLEAN")
add_attribute("INTEGER", "b", "D")
type_check
bool_value (false)
bool_value (false)
add_call_chain(<<C,C,INTEGER,C,b,A>>)
numerical_negation
add_call_chain(<<C,D,A,c,e,D>>)
bool_value (true)
int_value (48)
add_class(c)
disjunction
type_check
add_call_chain(<<b,D,D,a,e>>)
int_value (38)
add_call_chain(<<D,B,A,C,a,D,A,c,C>>)
add_command("C", "b", <<["d", "C"], ["e", "INTEGER"], ["A", "INTEGER"], ["c", "C"], ["A", "BOOLEAN"], ["d", "A"]>>)
logical_negation
add_command("b", "BOOLEAN", <<["a", "BOOLEAN"], ["a", "INTEGER"], ["C", "BOOLEAN"], ["C", "C"], ["d", "BOOLEAN"]>>)
add_class(C)
add_command("b", "C", <<["BOOLEAN", "a"], ["e", "a"], ["A", "INTEGER"], ["D", "BOOLEAN"]>>)
greater_than
generate_java_code
add_class(A)
add_class(INTEGER)
add_query("D", "d", <<["D", "INTEGER"]>>, "b")
add_command("a", "A", <<["BOOLEAN", "INTEGER"], ["d", "B"], ["B", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["A", "e"], ["C", "C"], ["e", "INTEGER"], ["B", "INTEGER"]>>)
numerical_negation
add_command("D", "INTEGER", <<["B", "BOOLEAN"], ["d", "INTEGER"], ["A", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "BOOLEAN"], ["a", "INTEGER"]>>)
disjunction
logical_negation
add_command("D", "c", <<["A", "INTEGER"]>>)
add_call_chain(<<D,B>>)
modulo
conjunction
add_command("a", "C", <<["d", "e"]>>)
logical_negation
int_value (19)
numerical_negation
int_value (16)
less_than
add_command("A", "B", <<["c", "INTEGER"], ["B", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["A", "INTEGER"], ["e", "C"], ["b", "BOOLEAN"], ["d", "BOOLEAN"]>>)
add_attribute("INTEGER", "INTEGER", "INTEGER")
add_call_chain(<<D,B>>)
conjunction
bool_value (true)
add_query("c", "BOOLEAN", <<["c", "A"], ["c", "BOOLEAN"], ["b", "A"], ["A", "BOOLEAN"], ["INTEGER", "D"]>>, "C")
generate_java_code
type_check
generate_java_code
add_call_chain(<<d,C,B,a>>)
add_query("INTEGER", "e", <<["d", "INTEGER"], ["a", "BOOLEAN"], ["C", "BOOLEAN"], ["d", "b"]>>, "d")
add_query("C", "b", <<["b", "d"], ["e", "a"], ["C", "a"], ["b", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "e"], ["INTEGER", "B"], ["D", "b"], ["a", "d"]>>, "C")
bool_value (true)
add_command("C", "D", <<["C", "d"]>>)
add_query("B", "D", <<["C", "D"], ["d", "BOOLEAN"]>>, "B")
add_command("D", "c", <<["c", "c"], ["C", "BOOLEAN"], ["d", "B"], ["B", "INTEGER"], ["B", "BOOLEAN"]>>)
add_call_chain(<<A>>)
add_attribute("b", "e", "BOOLEAN")
logical_negation
bool_value (false)
add_attribute("c", "D", "BOOLEAN")
quotient
logical_negation
add_call_chain(<<C,B,d>>)
equals
numerical_negation
add_call_chain(<<e,e,A,B,A,C,e>>)
multiplication
int_value (2)
bool_value (true)
add_command("d", "D", <<["e", "BOOLEAN"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["a", "BOOLEAN"]>>)
equals
int_value (13)
numerical_negation
generate_java_code
int_value (23)
add_class(A)
conjunction
add_query("D", "a", <<["d", "BOOLEAN"], ["BOOLEAN", "A"], ["A", "C"], ["d", "INTEGER"], ["C", "a"], ["c", "BOOLEAN"]>>, "D")
add_attribute("a", "B", "e")
add_class(d)
bool_value (true)
add_call_chain(<<B,D,d,e,d,c,B,BOOLEAN>>)
generate_java_code
logical_negation
equals
add_command("A", "c", <<["b", "b"], ["e", "BOOLEAN"]>>)
greater_than
add_command("A", "INTEGER", <<["e", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["INTEGER", "e"], ["D", "BOOLEAN"], ["b", "INTEGER"], ["d", "BOOLEAN"]>>)
add_class(C)
conjunction
generate_java_code
int_value (1)
add_class(b)
add_query("D", "c", <<["a", "b"], ["c", "C"], ["c", "e"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["d", "INTEGER"], ["c", "INTEGER"]>>, "b")
multiplication
add_attribute("INTEGER", "D", "d")
less_than
add_query("A", "D", <<["C", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "A"], ["C", "A"], ["a", "c"], ["A", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "A"], ["C", "INTEGER"]>>, "e")
modulo
add_call_chain(<<B,D,B,c,d>>)
numerical_negation
int_value (30)
add_command("d", "a", <<["b", "A"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["C", "INTEGER"], ["D", "b"], ["INTEGER", "INTEGER"], ["b", "BOOLEAN"], ["a", "INTEGER"]>>)
add_attribute("d", "BOOLEAN", "INTEGER")
bool_value (true)
add_call_chain(<<BOOLEAN,d>>)
