int_value (7)
add_call_chain(<<A>>)
generate_java_code
add_call_chain(<<c,b,B,D,C,B,e>>)
add_attribute("C", "C", "d")
add_attribute("a", "a", "C")
addition
greater_than
type_check
add_command("a", "INTEGER", <<["B", "D"], ["D", "INTEGER"], ["a", "BOOLEAN"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["INTEGER", "INTEGER"]>>)
add_command("a", "A", <<["B", "d"], ["BOOLEAN", "BOOLEAN"], ["A", "INTEGER"], ["e", "INTEGER"]>>)
generate_java_code
int_value (27)
logical_negation
add_command("D", "c", <<["d", "D"], ["B", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "INTEGER"]>>)
equals
add_call_chain(<<BOOLEAN,C,c,B,A,b,d>>)
add_attribute("a", "D", "BOOLEAN")
add_call_chain(<<b,INTEGER,d,D,a,B,B>>)
logical_negation
add_attribute("A", "INTEGER", "BOOLEAN")
add_call_chain(<<d,e,D,a,A,d,c>>)
int_value (4)
bool_value (true)
add_class(d)
add_call_chain(<<C,D,a>>)
add_command("INTEGER", "d", <<["d", "INTEGER"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["d", "INTEGER"], ["B", "INTEGER"], ["e", "BOOLEAN"], ["c", "BOOLEAN"], ["c", "BOOLEAN"]>>)
type_check
int_value (28)
multiplication
add_query("C", "b", <<["e", "INTEGER"], ["D", "INTEGER"]>>, "d")
numerical_negation
disjunction
numerical_negation
addition
add_call_chain(<<B,C>>)
add_call_chain(<<d>>)
add_call_chain(<<a,a,A,D,a,C,e,b,A>>)
add_attribute("a", "BOOLEAN", "BOOLEAN")
type_check
add_attribute("B", "BOOLEAN", "A")
add_query("B", "C", <<["c", "BOOLEAN"], ["d", "B"]>>, "C")
bool_value (true)
generate_java_code
add_call_chain(<<b,A,b,B,D,D,b,c,A>>)
add_class(e)
bool_value (false)
bool_value (false)
add_call_chain(<<A,D,e,B,b,a,b,d,D>>)
add_query("C", "D", <<["C", "e"], ["A", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "BOOLEAN"]>>, "c")
numerical_negation
multiplication
subtraction
add_command("BOOLEAN", "D", <<["C", "c"], ["c", "BOOLEAN"], ["a", "INTEGER"], ["b", "INTEGER"], ["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "BOOLEAN"]>>)
add_call_chain(<<BOOLEAN,C>>)
logical_negation
add_attribute("C", "c", "B")
generate_java_code
add_call_chain(<<a,BOOLEAN,D,A,C,e,D,e>>)
numerical_negation
add_class(e)
add_command("BOOLEAN", "C", <<["C", "INTEGER"], ["INTEGER", "A"], ["A", "B"]>>)
int_value (11)
add_query("D", "B", <<["C", "BOOLEAN"], ["d", "INTEGER"], ["c", "B"], ["b", "INTEGER"], ["d", "INTEGER"], ["a", "BOOLEAN"], ["INTEGER", "INTEGER"]>>, "b")
add_call_chain(<<a,a,C,d,d,c>>)
generate_java_code
disjunction
add_command("c", "d", <<["d", "INTEGER"], ["B", "INTEGER"]>>)
add_call_chain(<<b,b,c>>)
add_class(c)
subtraction
numerical_negation
bool_value (true)
type_check
generate_java_code
add_attribute("b", "c", "INTEGER")
logical_negation
add_query("C", "b", <<["C", "BOOLEAN"], ["b", "b"], ["C", "e"], ["BOOLEAN", "D"]>>, "b")
add_attribute("B", "e", "INTEGER")
generate_java_code
int_value (12)
add_command("C", "e", <<["c", "INTEGER"], ["C", "INTEGER"], ["e", "BOOLEAN"], ["d", "INTEGER"], ["e", "INTEGER"], ["c", "BOOLEAN"], ["BOOLEAN", "a"]>>)
add_call_chain(<<D,c>>)
add_attribute("D", "D", "INTEGER")
generate_java_code
add_command("d", "A", <<["B", "INTEGER"], ["a", "INTEGER"], ["d", "INTEGER"], ["b", "INTEGER"], ["b", "B"], ["a", "a"], ["a", "INTEGER"], ["C", "INTEGER"]>>)
int_value (15)
logical_negation
add_call_chain(<<A,A>>)
numerical_negation
equals
logical_negation
quotient
add_attribute("c", "d", "INTEGER")
type_check
add_class(e)
add_query("D", "B", <<["b", "BOOLEAN"]>>, "d")
add_call_chain(<<INTEGER,d,A,c,INTEGER,a,a,a>>)
int_value (23)
add_call_chain(<<D,B,B,D,A,C,b>>)
int_value (13)
add_query("B", "D", <<["C", "INTEGER"], ["a", "C"], ["D", "C"], ["D", "INTEGER"], ["e", "C"], ["C", "C"]>>, "D")
generate_java_code
int_value (27)
int_value (14)
add_query("D", "e", <<["a", "BOOLEAN"], ["e", "A"], ["BOOLEAN", "BOOLEAN"], ["B", "INTEGER"], ["BOOLEAN", "INTEGER"]>>, "a")
add_query("b", "e", <<["e", "INTEGER"], ["d", "B"], ["d", "INTEGER"]>>, "C")
type_check
numerical_negation
bool_value (true)
type_check
greater_than
disjunction
add_class(B)
bool_value (false)
add_attribute("d", "a", "BOOLEAN")
add_call_chain(<<D,A,D,D>>)
add_command("D", "e", <<["C", "D"], ["A", "BOOLEAN"]>>)
add_call_chain(<<BOOLEAN,D,d>>)
add_call_chain(<<B,B>>)
add_command("c", "D", <<["a", "INTEGER"], ["A", "BOOLEAN"], ["D", "INTEGER"], ["B", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
add_command("e", "B", <<["e", "INTEGER"]>>)
add_call_chain(<<A,B,C,B,C,A,C,C>>)
add_query("a", "a", <<["e", "INTEGER"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["B", "e"], ["e", "a"], ["C", "INTEGER"], ["A", "B"], ["c", "BOOLEAN"], ["A", "INTEGER"]>>, "D")
logical_negation
add_call_chain(<<C,e,INTEGER,c,B>>)
add_attribute("INTEGER", "A", "BOOLEAN")
add_call_chain(<<C,INTEGER,A,e,B,A,D>>)
add_call_chain(<<C>>)
add_command("A", "B", <<["BOOLEAN", "b"]>>)
conjunction
equals
bool_value (true)
bool_value (true)
add_query("d", "c", <<["D", "INTEGER"], ["D", "e"], ["D", "INTEGER"], ["A", "INTEGER"], ["INTEGER", "B"], ["c", "INTEGER"], ["D", "BOOLEAN"]>>, "a")
add_command("C", "D", <<["d", "INTEGER"], ["D", "INTEGER"], ["A", "BOOLEAN"], ["c", "e"], ["C", "A"], ["B", "INTEGER"], ["A", "INTEGER"], ["C", "BOOLEAN"]>>)
add_call_chain(<<D,BOOLEAN,B,BOOLEAN,A,d,C>>)
int_value (47)
add_query("e", "c", <<["a", "e"], ["B", "INTEGER"], ["D", "INTEGER"]>>, "D")
logical_negation
add_call_chain(<<B,D,A,BOOLEAN,B>>)
numerical_negation
numerical_negation
add_class(c)
add_call_chain(<<INTEGER,a,c,c>>)
int_value (41)
numerical_negation
less_than
add_call_chain(<<B,b,C>>)
add_attribute("A", "a", "INTEGER")
logical_negation
int_value (33)
add_attribute("BOOLEAN", "B", "BOOLEAN")
add_query("c", "C", <<["d", "e"], ["b", "INTEGER"], ["d", "BOOLEAN"], ["a", "INTEGER"], ["C", "BOOLEAN"]>>, "A")
add_call_chain(<<B,C,A,BOOLEAN,A,B,D,C>>)
add_attribute("D", "INTEGER", "INTEGER")
add_command("INTEGER", "A", <<["C", "INTEGER"], ["c", "INTEGER"], ["A", "C"], ["INTEGER", "BOOLEAN"], ["b", "INTEGER"], ["C", "INTEGER"]>>)
conjunction
greater_than
logical_negation
less_than
add_call_chain(<<INTEGER,d,C,b,e,b,e,C>>)
generate_java_code
add_query("C", "D", <<["b", "BOOLEAN"], ["D", "INTEGER"], ["C", "INTEGER"], ["B", "BOOLEAN"]>>, "B")
add_command("a", "a", <<["C", "BOOLEAN"], ["c", "INTEGER"], ["B", "D"], ["b", "A"], ["d", "A"], ["BOOLEAN", "D"]>>)
int_value (45)
add_attribute("BOOLEAN", "a", "d")
add_call_chain(<<A,B,A,A,B,e,b,D,b>>)
greater_than
add_call_chain(<<A,c,C>>)
conjunction
equals
int_value (15)
addition
numerical_negation
add_call_chain(<<C,A,d,A,d,a,e,a>>)
logical_negation
type_check
add_attribute("d", "c", "BOOLEAN")
generate_java_code
add_query("b", "a", <<["c", "C"], ["d", "BOOLEAN"], ["d", "BOOLEAN"], ["d", "A"], ["e", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "c"], ["e", "BOOLEAN"]>>, "d")
add_call_chain(<<a,a>>)
type_check
add_call_chain(<<a,C,D,C,a,C,a>>)
add_call_chain(<<e,d,c,B,C,e,A,C>>)
int_value (37)
int_value (25)
add_attribute("c", "B", "BOOLEAN")
greater_than
modulo
conjunction
addition
type_check
disjunction
add_command("C", "A", <<["INTEGER", "INTEGER"]>>)
disjunction
type_check
add_call_chain(<<b,e,D,a,D,B>>)
add_call_chain(<<B,d,B>>)
generate_java_code
int_value (48)
type_check
add_call_chain(<<A,B,e,c>>)
add_query("b", "C", <<["INTEGER", "BOOLEAN"], ["C", "e"], ["d", "INTEGER"], ["c", "a"]>>, "b")
int_value (4)
generate_java_code
add_attribute("B", "A", "INTEGER")
generate_java_code
add_class(c)
numerical_negation
disjunction
add_call_chain(<<c,C,c,INTEGER,a,b,D>>)
type_check
add_attribute("B", "b", "INTEGER")
add_query("e", "A", <<["d", "e"], ["a", "INTEGER"], ["A", "INTEGER"], ["C", "INTEGER"], ["D", "INTEGER"]>>, "D")
add_command("A", "C", <<["d", "BOOLEAN"], ["a", "A"], ["B", "INTEGER"], ["d", "INTEGER"], ["b", "INTEGER"], ["e", "INTEGER"], ["d", "c"]>>)
add_call_chain(<<C,D,D,d,A>>)
add_call_chain(<<c,BOOLEAN,C,A,D,BOOLEAN>>)
add_call_chain(<<c,B>>)
add_call_chain(<<e,c,C,BOOLEAN,A>>)
add_attribute("D", "a", "BOOLEAN")
add_call_chain(<<A,d,a,B>>)
logical_negation
add_attribute("e", "b", "d")
generate_java_code
generate_java_code
bool_value (false)
multiplication
greater_than
add_call_chain(<<c,d,a,b,c,a,c>>)
multiplication
bool_value (false)
int_value (34)
add_call_chain(<<BOOLEAN,A,A>>)
logical_negation
add_query("d", "b", <<["b", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["B", "b"], ["A", "BOOLEAN"], ["C", "a"]>>, "BOOLEAN")
add_query("INTEGER", "D", <<["B", "BOOLEAN"]>>, "A")
add_query("d", "d", <<["D", "B"], ["A", "e"], ["B", "d"], ["BOOLEAN", "INTEGER"], ["C", "B"], ["c", "BOOLEAN"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["B", "a"]>>, "B")
logical_negation
add_call_chain(<<B,C,A,B,c>>)
add_query("c", "B", <<["C", "BOOLEAN"], ["A", "INTEGER"], ["BOOLEAN", "INTEGER"], ["a", "INTEGER"], ["D", "INTEGER"], ["b", "BOOLEAN"], ["a", "INTEGER"], ["INTEGER", "D"]>>, "A")
add_attribute("a", "e", "INTEGER")
add_class(a)
add_query("A", "c", <<["b", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "d"], ["A", "BOOLEAN"]>>, "d")
add_call_chain(<<C,b,B,a,c,B>>)
bool_value (true)
bool_value (true)
numerical_negation
disjunction
numerical_negation
add_command("D", "b", <<["B", "a"], ["d", "INTEGER"], ["B", "c"], ["b", "INTEGER"], ["d", "INTEGER"], ["BOOLEAN", "INTEGER"], ["b", "INTEGER"], ["C", "INTEGER"]>>)
add_call_chain(<<a,b,D,c>>)
add_class(D)
bool_value (true)
add_attribute("INTEGER", "c", "a")
add_query("BOOLEAN", "A", <<["d", "C"]>>, "d")
int_value (40)
numerical_negation
add_query("A", "D", <<["c", "BOOLEAN"], ["D", "BOOLEAN"], ["INTEGER", "INTEGER"], ["A", "d"], ["a", "INTEGER"], ["D", "e"]>>, "e")
add_call_chain(<<b,b,INTEGER,a>>)
add_query("D", "D", <<["d", "BOOLEAN"]>>, "A")
add_query("d", "c", <<["A", "BOOLEAN"], ["a", "D"], ["b", "BOOLEAN"], ["d", "A"]>>, "c")
add_call_chain(<<a,A>>)
numerical_negation
