add_call_chain(<<BOOLEAN,A,C,b,c,b,d,C>>)
add_query("b", "e", <<["INTEGER", "BOOLEAN"], ["INTEGER", "INTEGER"], ["INTEGER", "BOOLEAN"], ["e", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "D"], ["c", "INTEGER"], ["a", "INTEGER"]>>, "B")
add_call_chain(<<b,B,A,D,c,A,a,D>>)
add_attribute("D", "BOOLEAN", "INTEGER")
add_attribute("e", "BOOLEAN", "INTEGER")
generate_java_code
add_query("e", "b", <<["b", "INTEGER"], ["D", "a"], ["e", "B"], ["INTEGER", "INTEGER"], ["C", "BOOLEAN"]>>, "B")
add_attribute("e", "A", "BOOLEAN")
add_class(A)
add_query("B", "B", <<["a", "BOOLEAN"], ["A", "INTEGER"], ["B", "INTEGER"]>>, "c")
add_command("e", "a", <<["c", "BOOLEAN"], ["A", "INTEGER"], ["d", "BOOLEAN"], ["c", "INTEGER"], ["c", "BOOLEAN"]>>)
greater_than
int_value (40)
logical_negation
add_attribute("B", "d", "a")
add_call_chain(<<e,c,c,e>>)
add_query("A", "b", <<["BOOLEAN", "INTEGER"], ["B", "BOOLEAN"], ["c", "a"]>>, "a")
numerical_negation
type_check
equals
add_attribute("B", "C", "INTEGER")
int_value (21)
add_call_chain(<<A,A>>)
bool_value (false)
int_value (12)
add_command("INTEGER", "c", <<["e", "INTEGER"], ["e", "c"], ["a", "A"]>>)
bool_value (true)
add_attribute("B", "b", "INTEGER")
add_attribute("A", "a", "D")
generate_java_code
numerical_negation
add_call_chain(<<B,B,A,d,A>>)
type_check
logical_negation
numerical_negation
logical_negation
add_class(c)
add_command("e", "d", <<["D", "BOOLEAN"], ["c", "BOOLEAN"], ["INTEGER", "INTEGER"], ["C", "INTEGER"], ["B", "INTEGER"], ["d", "A"], ["a", "d"], ["B", "BOOLEAN"], ["b", "b"]>>)
less_than
add_attribute("B", "d", "INTEGER")
add_query("a", "B", <<["d", "d"], ["D", "BOOLEAN"], ["D", "d"], ["a", "C"], ["c", "INTEGER"], ["C", "INTEGER"]>>, "a")
add_command("a", "d", <<["A", "INTEGER"], ["c", "c"]>>)
addition
add_call_chain(<<c,INTEGER,B,a,D,c,C,b,B>>)
add_call_chain(<<D,c,e,B,BOOLEAN,D,INTEGER>>)
add_command("D", "B", <<["c", "C"], ["e", "a"]>>)
generate_java_code
int_value (2)
add_command("d", "e", <<["d", "INTEGER"], ["b", "BOOLEAN"], ["b", "BOOLEAN"]>>)
add_attribute("c", "c", "BOOLEAN")
add_command("A", "INTEGER", <<["a", "INTEGER"], ["d", "c"], ["d", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "e"], ["BOOLEAN", "INTEGER"], ["A", "BOOLEAN"]>>)
add_command("a", "e", <<["B", "INTEGER"], ["BOOLEAN", "b"], ["e", "INTEGER"], ["A", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "C"], ["d", "INTEGER"]>>)
add_class(C)
add_call_chain(<<A,B,b,D>>)
add_call_chain(<<C,BOOLEAN,e,B>>)
add_call_chain(<<c>>)
type_check
add_attribute("D", "D", "D")
bool_value (true)
add_call_chain(<<D,c,A,e,A,d>>)
add_attribute("A", "d", "a")
add_attribute("e", "C", "INTEGER")
add_query("c", "D", <<["b", "INTEGER"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "INTEGER"], ["B", "INTEGER"], ["A", "A"]>>, "D")
bool_value (false)
logical_negation
add_attribute("A", "A", "a")
bool_value (false)
int_value (10)
add_class(INTEGER)
bool_value (true)
conjunction
add_query("a", "D", <<["B", "INTEGER"], ["d", "B"], ["A", "e"]>>, "A")
add_query("B", "C", <<["C", "c"]>>, "B")
logical_negation
type_check
generate_java_code
greater_than
add_call_chain(<<b,D,b,A,a,e,b,a,B>>)
add_query("B", "A", <<["e", "BOOLEAN"], ["a", "D"], ["e", "INTEGER"], ["b", "BOOLEAN"]>>, "C")
add_attribute("b", "c", "C")
logical_negation
add_call_chain(<<BOOLEAN>>)
int_value (32)
add_command("B", "a", <<["c", "INTEGER"]>>)
add_call_chain(<<B>>)
add_call_chain(<<b,A,d,INTEGER>>)
add_call_chain(<<b,BOOLEAN,D,c,INTEGER,e>>)
add_attribute("A", "D", "a")
greater_than
add_class(D)
add_query("A", "b", <<["C", "BOOLEAN"], ["A", "INTEGER"], ["c", "b"], ["A", "e"], ["C", "c"], ["INTEGER", "C"], ["d", "INTEGER"], ["b", "INTEGER"], ["D", "INTEGER"]>>, "d")
add_attribute("C", "D", "INTEGER")
add_class(e)
add_query("D", "D", <<["c", "BOOLEAN"], ["INTEGER", "INTEGER"], ["a", "d"], ["D", "BOOLEAN"], ["D", "INTEGER"]>>, "a")
numerical_negation
add_query("D", "C", <<["d", "d"], ["A", "BOOLEAN"], ["b", "BOOLEAN"], ["d", "A"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "INTEGER"], ["b", "BOOLEAN"]>>, "B")
generate_java_code
logical_negation
type_check
logical_negation
numerical_negation
add_call_chain(<<b,BOOLEAN,d,D,c,b,B>>)
type_check
add_call_chain(<<b,C,B>>)
add_query("c", "B", <<["c", "a"], ["a", "INTEGER"], ["C", "INTEGER"], ["e", "BOOLEAN"], ["c", "C"], ["e", "D"]>>, "c")
add_call_chain(<<B,D,D,D,e,c,c>>)
int_value (2)
modulo
numerical_negation
add_call_chain(<<c,INTEGER,B,d,e>>)
add_query("D", "c", <<["C", "INTEGER"]>>, "A")
less_than
type_check
add_call_chain(<<c>>)
bool_value (true)
disjunction
numerical_negation
type_check
add_call_chain(<<D,C,a,C>>)
add_command("D", "A", <<["C", "B"], ["d", "BOOLEAN"], ["b", "INTEGER"], ["A", "BOOLEAN"], ["A", "INTEGER"], ["b", "B"], ["BOOLEAN", "BOOLEAN"]>>)
add_call_chain(<<a>>)
add_call_chain(<<A,C,BOOLEAN,C,a,e,d,BOOLEAN,d>>)
add_call_chain(<<d,a,A>>)
add_query("C", "A", <<["D", "A"], ["e", "d"]>>, "d")
add_call_chain(<<d,D,a>>)
multiplication
add_class(a)
add_command("a", "e", <<["A", "BOOLEAN"], ["C", "C"], ["e", "INTEGER"], ["A", "B"], ["d", "BOOLEAN"], ["B", "BOOLEAN"]>>)
logical_negation
numerical_negation
add_call_chain(<<A,INTEGER,INTEGER,d,INTEGER>>)
int_value (7)
type_check
less_than
disjunction
add_command("D", "c", <<["e", "A"]>>)
add_call_chain(<<e>>)
bool_value (true)
add_query("e", "D", <<["D", "BOOLEAN"], ["D", "a"]>>, "INTEGER")
add_attribute("A", "b", "A")
generate_java_code
add_attribute("e", "A", "c")
bool_value (true)
numerical_negation
bool_value (true)
int_value (39)
add_command("A", "b", <<["b", "BOOLEAN"], ["b", "INTEGER"], ["INTEGER", "INTEGER"], ["d", "BOOLEAN"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["e", "BOOLEAN"]>>)
bool_value (false)
add_call_chain(<<A,d,INTEGER,b,B,INTEGER,B,D,A>>)
disjunction
numerical_negation
int_value (36)
add_call_chain(<<C,INTEGER>>)
logical_negation
type_check
disjunction
add_call_chain(<<e,B,B,A>>)
int_value (24)
subtraction
add_call_chain(<<D,C>>)
greater_than
add_call_chain(<<b,BOOLEAN,A,c,A,C>>)
add_call_chain(<<c,A,a,c,a,B,c>>)
disjunction
quotient
conjunction
add_attribute("C", "B", "INTEGER")
add_command("a", "c", <<["d", "INTEGER"], ["b", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "INTEGER"]>>)
add_call_chain(<<A,D,A,D>>)
add_call_chain(<<INTEGER,B>>)
bool_value (false)
type_check
add_attribute("C", "B", "INTEGER")
add_class(d)
add_class(a)
add_attribute("B", "e", "INTEGER")
add_call_chain(<<a,INTEGER,C,B,INTEGER>>)
bool_value (true)
add_call_chain(<<A,c,C,INTEGER,b,INTEGER,C,a>>)
add_command("D", "b", <<["b", "C"], ["B", "INTEGER"], ["a", "INTEGER"], ["a", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>)
bool_value (false)
add_call_chain(<<d,e>>)
add_call_chain(<<C,c,INTEGER,e>>)
logical_negation
int_value (45)
greater_than
conjunction
logical_negation
numerical_negation
add_attribute("c", "a", "INTEGER")
add_query("c", "INTEGER", <<["C", "INTEGER"]>>, "C")
int_value (11)
add_query("B", "A", <<["INTEGER", "INTEGER"]>>, "d")
int_value (47)
add_call_chain(<<e>>)
int_value (19)
bool_value (true)
add_command("a", "e", <<["e", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "a"], ["A", "INTEGER"]>>)
add_attribute("A", "d", "A")
add_attribute("D", "a", "BOOLEAN")
subtraction
add_call_chain(<<INTEGER,d,D,BOOLEAN,INTEGER>>)
logical_negation
add_call_chain(<<a,D,e,D>>)
bool_value (false)
type_check
add_call_chain(<<INTEGER,b,e,D,B,d>>)
add_attribute("b", "B", "BOOLEAN")
add_class(BOOLEAN)
conjunction
add_attribute("D", "a", "INTEGER")
type_check
multiplication
add_call_chain(<<B,B,c,a>>)
bool_value (true)
add_call_chain(<<e,B,c,a,d,a,B>>)
add_call_chain(<<d,b,e>>)
conjunction
int_value (6)
add_attribute("D", "c", "c")
numerical_negation
numerical_negation
add_attribute("b", "D", "BOOLEAN")
int_value (2)
add_attribute("B", "B", "INTEGER")
type_check
numerical_negation
add_query("A", "BOOLEAN", <<["D", "INTEGER"]>>, "e")
generate_java_code
add_attribute("B", "b", "INTEGER")
add_command("b", "c", <<["B", "b"], ["d", "d"], ["A", "BOOLEAN"], ["A", "INTEGER"]>>)
bool_value (false)
add_attribute("D", "C", "INTEGER")
int_value (16)
add_class(INTEGER)
disjunction
add_call_chain(<<BOOLEAN,B,b,INTEGER>>)
numerical_negation
bool_value (false)
int_value (38)
add_call_chain(<<A,D,a,C,B,d,C,d,D>>)
add_call_chain(<<b,A,B,INTEGER>>)
conjunction
generate_java_code
type_check
logical_negation
add_command("b", "D", <<["c", "INTEGER"], ["B", "c"], ["C", "BOOLEAN"], ["INTEGER", "INTEGER"], ["e", "INTEGER"], ["d", "INTEGER"], ["e", "BOOLEAN"]>>)
bool_value (true)
add_class(a)
numerical_negation
bool_value (true)
numerical_negation
int_value (39)
subtraction
add_command("B", "C", <<["a", "INTEGER"], ["B", "D"], ["c", "BOOLEAN"], ["BOOLEAN", "b"], ["d", "D"]>>)
add_query("c", "B", <<["d", "D"], ["C", "b"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "INTEGER"], ["A", "INTEGER"], ["e", "BOOLEAN"]>>, "c")
add_query("BOOLEAN", "D", <<["d", "BOOLEAN"], ["b", "b"], ["d", "INTEGER"], ["b", "BOOLEAN"], ["C", "INTEGER"]>>, "b")
bool_value (false)
logical_negation
add_call_chain(<<C,B,D,B,b>>)
bool_value (true)
generate_java_code
bool_value (false)
add_command("e", "e", <<["C", "C"], ["b", "INTEGER"], ["A", "BOOLEAN"], ["b", "d"], ["D", "INTEGER"]>>)
bool_value (false)
int_value (21)
type_check
add_query("C", "a", <<["C", "INTEGER"], ["C", "b"], ["c", "A"]>>, "d")
equals
conjunction
bool_value (true)
int_value (45)
add_attribute("B", "B", "INTEGER")
add_query("BOOLEAN", "A", <<["D", "b"], ["e", "INTEGER"], ["C", "INTEGER"], ["e", "INTEGER"], ["c", "B"], ["B", "BOOLEAN"], ["INTEGER", "A"], ["e", "BOOLEAN"]>>, "a")
add_query("d", "B", <<["A", "D"], ["D", "C"], ["e", "BOOLEAN"], ["b", "INTEGER"], ["c", "C"], ["D", "d"], ["c", "INTEGER"], ["a", "B"], ["C", "BOOLEAN"]>>, "c")
numerical_negation
int_value (4)
numerical_negation
add_call_chain(<<B,BOOLEAN,a,B,B>>)
logical_negation
int_value (32)
add_command("B", "B", <<["a", "D"], ["d", "INTEGER"]>>)
add_command("A", "A", <<["d", "BOOLEAN"]>>)
add_query("B", "BOOLEAN", <<["D", "INTEGER"]>>, "D")
add_attribute("A", "d", "INTEGER")
logical_negation
int_value (11)
numerical_negation
add_attribute("D", "C", "BOOLEAN")
int_value (5)
