numerical_negation
add_attribute("b", "C", "BOOLEAN")
add_query("b", "BOOLEAN", <<["D", "BOOLEAN"], ["a", "INTEGER"]>>, "d")
add_class(e)
add_attribute("B", "d", "BOOLEAN")
numerical_negation
add_call_chain(<<INTEGER,b,C,e>>)
add_call_chain(<<b,D,B,a>>)
type_check
numerical_negation
equals
add_command("d", "d", <<["C", "INTEGER"]>>)
int_value (4)
add_call_chain(<<b,b,INTEGER,c,BOOLEAN,A>>)
int_value (41)
numerical_negation
int_value (11)
logical_negation
numerical_negation
generate_java_code
numerical_negation
add_attribute("a", "B", "BOOLEAN")
type_check
add_attribute("B", "A", "e")
add_attribute("B", "a", "INTEGER")
add_command("C", "c", <<["c", "BOOLEAN"], ["e", "d"], ["B", "c"], ["BOOLEAN", "C"]>>)
int_value (37)
add_call_chain(<<B>>)
int_value (37)
bool_value (false)
add_query("c", "B", <<["D", "BOOLEAN"], ["b", "BOOLEAN"], ["d", "BOOLEAN"], ["b", "BOOLEAN"], ["b", "D"], ["b", "BOOLEAN"], ["a", "INTEGER"], ["C", "d"], ["B", "INTEGER"]>>, "b")
add_call_chain(<<A,a,A>>)
add_attribute("a", "c", "INTEGER")
add_call_chain(<<D,C,d>>)
add_query("INTEGER", "A", <<["B", "INTEGER"], ["d", "INTEGER"], ["b", "B"], ["b", "INTEGER"], ["a", "BOOLEAN"], ["C", "INTEGER"]>>, "A")
numerical_negation
numerical_negation
add_command("BOOLEAN", "C", <<["C", "b"], ["e", "B"], ["B", "INTEGER"]>>)
add_command("C", "B", <<["BOOLEAN", "BOOLEAN"], ["B", "a"], ["INTEGER", "BOOLEAN"], ["D", "INTEGER"], ["INTEGER", "C"], ["C", "A"], ["a", "e"], ["D", "BOOLEAN"]>>)
int_value (28)
add_call_chain(<<B,D,c>>)
equals
add_command("D", "d", <<["C", "INTEGER"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["BOOLEAN", "INTEGER"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
greater_than
logical_negation
add_call_chain(<<e,B>>)
disjunction
bool_value (true)
add_command("C", "e", <<["a", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "INTEGER"], ["C", "B"], ["A", "INTEGER"], ["A", "INTEGER"], ["C", "d"], ["B", "INTEGER"], ["C", "BOOLEAN"]>>)
disjunction
type_check
add_call_chain(<<e,B>>)
add_call_chain(<<B,c,INTEGER>>)
add_call_chain(<<c>>)
logical_negation
generate_java_code
greater_than
add_command("A", "a", <<["D", "d"]>>)
quotient
bool_value (false)
add_call_chain(<<c,C,B,B>>)
add_call_chain(<<a,B,D,d,a,C,D,a,B>>)
add_command("C", "d", <<["a", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "d"]>>)
greater_than
add_command("D", "d", <<["e", "INTEGER"], ["b", "INTEGER"], ["e", "INTEGER"], ["b", "D"], ["C", "C"]>>)
generate_java_code
add_class(b)
generate_java_code
add_command("D", "c", <<["C", "A"], ["d", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>)
add_call_chain(<<d>>)
bool_value (true)
logical_negation
add_class(INTEGER)
add_class(C)
generate_java_code
add_call_chain(<<INTEGER,a,b>>)
conjunction
int_value (8)
add_attribute("A", "a", "B")
conjunction
add_attribute("c", "A", "B")
add_attribute("A", "A", "INTEGER")
addition
add_attribute("BOOLEAN", "e", "A")
greater_than
disjunction
generate_java_code
add_attribute("INTEGER", "e", "INTEGER")
numerical_negation
add_query("d", "D", <<["d", "INTEGER"], ["A", "BOOLEAN"]>>, "c")
add_query("D", "B", <<["C", "B"], ["A", "INTEGER"], ["B", "INTEGER"], ["d", "BOOLEAN"], ["INTEGER", "d"], ["C", "C"], ["a", "INTEGER"]>>, "d")
add_query("D", "a", <<["c", "d"], ["b", "INTEGER"], ["a", "BOOLEAN"], ["B", "INTEGER"], ["D", "INTEGER"], ["A", "BOOLEAN"]>>, "e")
int_value (48)
generate_java_code
add_command("C", "A", <<["a", "e"], ["D", "a"], ["C", "BOOLEAN"], ["B", "c"]>>)
add_call_chain(<<e>>)
equals
int_value (33)
bool_value (true)
type_check
bool_value (false)
add_attribute("A", "e", "c")
multiplication
int_value (28)
logical_negation
disjunction
type_check
greater_than
subtraction
bool_value (false)
int_value (18)
generate_java_code
int_value (19)
add_call_chain(<<B,c,C,A,A,d>>)
add_command("A", "B", <<["a", "c"], ["b", "BOOLEAN"]>>)
greater_than
int_value (27)
add_attribute("d", "D", "C")
add_command("d", "d", <<["B", "INTEGER"], ["INTEGER", "BOOLEAN"], ["D", "INTEGER"], ["a", "INTEGER"], ["b", "INTEGER"], ["d", "INTEGER"], ["a", "d"], ["BOOLEAN", "INTEGER"], ["a", "B"]>>)
type_check
add_query("d", "C", <<["c", "INTEGER"], ["d", "INTEGER"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["a", "D"]>>, "a")
bool_value (true)
add_attribute("b", "A", "BOOLEAN")
add_query("d", "d", <<["BOOLEAN", "INTEGER"], ["a", "INTEGER"], ["C", "BOOLEAN"], ["d", "INTEGER"], ["e", "INTEGER"], ["C", "INTEGER"]>>, "e")
add_class(a)
add_command("C", "d", <<["d", "BOOLEAN"], ["b", "A"], ["A", "INTEGER"], ["d", "INTEGER"], ["A", "BOOLEAN"], ["INTEGER", "A"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "BOOLEAN"]>>)
int_value (1)
numerical_negation
logical_negation
add_command("BOOLEAN", "d", <<["d", "INTEGER"]>>)
logical_negation
add_command("B", "e", <<["C", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "C"], ["C", "BOOLEAN"]>>)
add_query("INTEGER", "a", <<["A", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "BOOLEAN"]>>, "c")
add_call_chain(<<A>>)
add_call_chain(<<A,e,B,C>>)
add_class(INTEGER)
add_attribute("B", "B", "INTEGER")
add_class(BOOLEAN)
add_attribute("e", "A", "BOOLEAN")
multiplication
add_call_chain(<<A,d,A,d,D,b,d,C,e>>)
numerical_negation
bool_value (true)
add_attribute("C", "A", "BOOLEAN")
generate_java_code
add_query("C", "BOOLEAN", <<["D", "A"], ["C", "INTEGER"], ["d", "INTEGER"]>>, "c")
int_value (39)
logical_negation
int_value (29)
add_attribute("C", "c", "BOOLEAN")
greater_than
add_call_chain(<<B,A>>)
logical_negation
add_query("A", "d", <<["a", "C"], ["d", "b"], ["D", "A"], ["D", "d"], ["d", "A"], ["c", "D"], ["A", "INTEGER"], ["B", "INTEGER"]>>, "d")
add_call_chain(<<d,e,a,C,e,A,D,C>>)
type_check
add_call_chain(<<c,C,a>>)
add_call_chain(<<A,a,d>>)
add_attribute("A", "a", "INTEGER")
add_attribute("INTEGER", "a", "BOOLEAN")
add_attribute("a", "B", "INTEGER")
add_command("b", "INTEGER", <<["B", "B"], ["C", "D"], ["B", "INTEGER"], ["B", "INTEGER"], ["d", "BOOLEAN"]>>)
add_call_chain(<<D,c,B,D,c,D>>)
add_call_chain(<<D,B,D,INTEGER,D,B,e,D,d>>)
disjunction
subtraction
generate_java_code
add_command("b", "e", <<["A", "INTEGER"]>>)
bool_value (true)
disjunction
numerical_negation
bool_value (false)
bool_value (true)
add_command("e", "B", <<["b", "b"], ["C", "BOOLEAN"], ["d", "INTEGER"]>>)
add_command("INTEGER", "C", <<["C", "BOOLEAN"], ["d", "INTEGER"], ["B", "C"], ["c", "BOOLEAN"], ["C", "C"], ["C", "b"]>>)
add_class(a)
generate_java_code
greater_than
generate_java_code
add_query("C", "C", <<["B", "INTEGER"]>>, "a")
add_command("a", "A", <<["C", "INTEGER"], ["a", "BOOLEAN"], ["B", "INTEGER"], ["B", "B"], ["D", "INTEGER"]>>)
bool_value (true)
add_attribute("A", "b", "BOOLEAN")
add_query("D", "C", <<["C", "B"], ["INTEGER", "b"], ["a", "INTEGER"]>>, "D")
logical_negation
subtraction
logical_negation
int_value (23)
add_query("d", "c", <<["BOOLEAN", "b"], ["A", "INTEGER"], ["D", "b"], ["A", "INTEGER"], ["c", "b"], ["C", "BOOLEAN"], ["d", "INTEGER"], ["INTEGER", "INTEGER"]>>, "A")
type_check
bool_value (false)
add_command("B", "C", <<["d", "a"], ["a", "BOOLEAN"], ["A", "d"], ["b", "e"], ["C", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "D"], ["BOOLEAN", "INTEGER"]>>)
disjunction
equals
add_class(C)
add_call_chain(<<C>>)
add_query("b", "c", <<["A", "d"], ["a", "A"], ["e", "B"], ["d", "D"], ["C", "INTEGER"]>>, "d")
add_call_chain(<<b,C,b,D,A>>)
int_value (29)
int_value (29)
numerical_negation
numerical_negation
logical_negation
bool_value (false)
