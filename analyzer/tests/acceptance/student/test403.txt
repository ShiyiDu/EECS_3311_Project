bool_value (true)
add_query("d", "d", <<["B", "INTEGER"], ["B", "A"]>>, "D")
add_call_chain(<<B,D,BOOLEAN,b>>)
numerical_negation
add_query("a", "C", <<["BOOLEAN", "d"], ["a", "BOOLEAN"], ["D", "e"], ["e", "D"], ["c", "INTEGER"]>>, "D")
add_query("d", "D", <<["e", "INTEGER"], ["e", "BOOLEAN"], ["a", "INTEGER"], ["b", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["A", "INTEGER"], ["a", "INTEGER"]>>, "d")
generate_java_code
less_than
add_call_chain(<<BOOLEAN,C,a,B,b,B,D>>)
add_query("b", "e", <<["BOOLEAN", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "INTEGER"], ["D", "INTEGER"], ["c", "BOOLEAN"], ["C", "INTEGER"]>>, "c")
add_class(A)
int_value (1)
quotient
add_call_chain(<<A,c>>)
add_command("a", "A", <<["D", "INTEGER"], ["D", "INTEGER"], ["a", "INTEGER"], ["B", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "INTEGER"], ["a", "INTEGER"]>>)
numerical_negation
numerical_negation
bool_value (true)
add_call_chain(<<a,d>>)
add_call_chain(<<e>>)
int_value (19)
add_command("C", "d", <<["INTEGER", "INTEGER"], ["A", "BOOLEAN"], ["INTEGER", "INTEGER"], ["D", "BOOLEAN"], ["A", "a"], ["e", "A"], ["D", "BOOLEAN"]>>)
bool_value (false)
generate_java_code
add_call_chain(<<b,b>>)
add_call_chain(<<b,e,c>>)
int_value (2)
bool_value (true)
add_call_chain(<<e,BOOLEAN,c,e>>)
modulo
logical_negation
equals
conjunction
add_attribute("D", "INTEGER", "A")
add_command("D", "C", <<["a", "BOOLEAN"], ["c", "D"], ["D", "BOOLEAN"]>>)
add_attribute("B", "e", "INTEGER")
greater_than
logical_negation
type_check
add_call_chain(<<D,D,b,C,a>>)
bool_value (false)
add_command("A", "c", <<["D", "C"], ["INTEGER", "INTEGER"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["d", "INTEGER"], ["INTEGER", "INTEGER"], ["D", "B"]>>)
less_than
logical_negation
add_attribute("c", "a", "BOOLEAN")
add_query("C", "d", <<["b", "INTEGER"], ["D", "c"], ["C", "d"], ["c", "INTEGER"], ["INTEGER", "INTEGER"]>>, "d")
generate_java_code
add_attribute("b", "A", "INTEGER")
type_check
add_query("BOOLEAN", "b", <<["D", "INTEGER"], ["a", "A"], ["BOOLEAN", "A"], ["e", "INTEGER"]>>, "B")
add_command("e", "d", <<["c", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["c", "BOOLEAN"], ["C", "d"], ["C", "BOOLEAN"]>>)
equals
add_call_chain(<<BOOLEAN,D,D,A,b,C,A>>)
logical_negation
generate_java_code
add_attribute("d", "A", "C")
int_value (40)
numerical_negation
add_attribute("e", "C", "INTEGER")
add_query("d", "BOOLEAN", <<["d", "B"], ["INTEGER", "e"]>>, "C")
int_value (5)
int_value (23)
add_call_chain(<<d,e,d,C>>)
add_command("d", "B", <<["a", "a"], ["d", "BOOLEAN"], ["A", "BOOLEAN"]>>)
add_query("D", "D", <<["A", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["D", "C"], ["B", "INTEGER"], ["d", "INTEGER"], ["INTEGER", "INTEGER"], ["D", "INTEGER"]>>, "C")
add_call_chain(<<b>>)
int_value (14)
bool_value (false)
conjunction
add_command("d", "C", <<["c", "C"], ["C", "BOOLEAN"], ["D", "b"], ["d", "INTEGER"], ["C", "BOOLEAN"], ["A", "B"], ["b", "c"]>>)
addition
add_command("e", "BOOLEAN", <<["B", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "INTEGER"], ["B", "B"], ["e", "BOOLEAN"], ["e", "INTEGER"], ["A", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "BOOLEAN"]>>)
add_query("B", "e", <<["e", "INTEGER"], ["BOOLEAN", "INTEGER"], ["c", "INTEGER"], ["e", "D"], ["A", "INTEGER"]>>, "B")
bool_value (true)
numerical_negation
add_command("a", "a", <<["D", "C"], ["A", "BOOLEAN"], ["d", "a"], ["A", "e"]>>)
add_attribute("b", "C", "BOOLEAN")
int_value (45)
type_check
int_value (34)
add_command("B", "D", <<["A", "INTEGER"], ["b", "B"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["a", "b"], ["e", "c"], ["D", "BOOLEAN"]>>)
numerical_negation
logical_negation
less_than
add_query("A", "e", <<["e", "d"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["D", "b"], ["c", "BOOLEAN"], ["c", "BOOLEAN"]>>, "C")
bool_value (false)
add_command("d", "D", <<["b", "A"], ["c", "INTEGER"], ["a", "INTEGER"], ["c", "e"], ["d", "a"]>>)
type_check
add_attribute("INTEGER", "A", "INTEGER")
add_query("c", "a", <<["A", "A"], ["e", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "A"], ["d", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "INTEGER"], ["d", "BOOLEAN"]>>, "a")
logical_negation
add_command("b", "C", <<["C", "BOOLEAN"], ["b", "INTEGER"], ["D", "INTEGER"]>>)
generate_java_code
numerical_negation
logical_negation
add_class(C)
add_call_chain(<<INTEGER>>)
add_call_chain(<<BOOLEAN,INTEGER,d>>)
numerical_negation
int_value (47)
add_class(B)
generate_java_code
add_command("B", "B", <<["a", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["C", "b"], ["C", "INTEGER"], ["B", "INTEGER"], ["B", "INTEGER"]>>)
add_attribute("A", "A", "INTEGER")
add_command("b", "D", <<["c", "BOOLEAN"], ["d", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "c"], ["A", "INTEGER"]>>)
add_attribute("a", "e", "INTEGER")
disjunction
type_check
add_query("b", "c", <<["b", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["b", "d"]>>, "C")
int_value (28)
add_query("D", "c", <<["b", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "d"]>>, "D")
add_call_chain(<<e,INTEGER,C,C,D>>)
int_value (1)
add_attribute("d", "D", "D")
add_call_chain(<<A,D,A>>)
add_command("A", "C", <<["C", "a"]>>)
add_command("INTEGER", "INTEGER", <<["INTEGER", "a"], ["B", "d"], ["e", "BOOLEAN"], ["e", "a"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["B", "C"]>>)
add_call_chain(<<d,a,D,e,INTEGER,a,d>>)
numerical_negation
equals
generate_java_code
add_call_chain(<<a,INTEGER,e,a,d,c>>)
add_class(c)
add_call_chain(<<e,e,D,BOOLEAN,d,BOOLEAN,b,e,B>>)
bool_value (true)
add_query("A", "d", <<["a", "INTEGER"], ["b", "b"], ["INTEGER", "INTEGER"], ["d", "INTEGER"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["e", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["d", "BOOLEAN"]>>, "INTEGER")
conjunction
add_attribute("a", "B", "BOOLEAN")
generate_java_code
logical_negation
add_call_chain(<<c,A>>)
generate_java_code
numerical_negation
add_call_chain(<<B,BOOLEAN,d,B,C,C>>)
add_command("C", "c", <<["b", "INTEGER"], ["INTEGER", "INTEGER"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["A", "e"]>>)
add_query("d", "D", <<["b", "A"], ["B", "INTEGER"], ["e", "INTEGER"], ["a", "BOOLEAN"], ["c", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>, "D")
add_attribute("D", "BOOLEAN", "BOOLEAN")
add_call_chain(<<a,BOOLEAN,BOOLEAN,b,B>>)
add_call_chain(<<C,A,b>>)
type_check
numerical_negation
type_check
numerical_negation
add_call_chain(<<e,B,d,a,b,A,d>>)
generate_java_code
add_query("C", "c", <<["D", "BOOLEAN"], ["D", "INTEGER"], ["b", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "B"], ["A", "A"], ["A", "BOOLEAN"]>>, "c")
add_command("e", "b", <<["BOOLEAN", "BOOLEAN"], ["d", "INTEGER"]>>)
bool_value (false)
bool_value (true)
add_command("d", "INTEGER", <<["B", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "INTEGER"], ["c", "INTEGER"], ["D", "INTEGER"], ["e", "INTEGER"]>>)
generate_java_code
bool_value (true)
add_query("BOOLEAN", "e", <<["C", "INTEGER"], ["A", "B"], ["A", "A"], ["B", "e"], ["c", "BOOLEAN"], ["C", "A"], ["A", "BOOLEAN"]>>, "c")
type_check
add_class(C)
logical_negation
add_call_chain(<<BOOLEAN,c,A>>)
add_call_chain(<<A,a,a,D,a,A,D>>)
add_call_chain(<<C,b,a,e>>)
add_attribute("b", "c", "INTEGER")
bool_value (false)
add_attribute("e", "a", "BOOLEAN")
int_value (34)
addition
add_attribute("c", "e", "BOOLEAN")
less_than
numerical_negation
int_value (4)
add_query("B", "a", <<["B", "C"], ["INTEGER", "BOOLEAN"], ["BOOLEAN", "b"]>>, "A")
add_attribute("a", "D", "BOOLEAN")
conjunction
bool_value (false)
add_query("e", "c", <<["C", "BOOLEAN"], ["A", "b"], ["A", "INTEGER"], ["c", "INTEGER"], ["C", "c"], ["D", "INTEGER"], ["INTEGER", "e"]>>, "B")
greater_than
add_call_chain(<<INTEGER,c,d,B,c,d,D,B>>)
add_command("d", "C", <<["C", "BOOLEAN"], ["e", "D"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["a", "INTEGER"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["D", "BOOLEAN"]>>)
add_call_chain(<<a,C,A,a,INTEGER,D>>)
numerical_negation
add_call_chain(<<A,B,b,a>>)
add_attribute("c", "d", "BOOLEAN")
conjunction
numerical_negation
add_query("c", "INTEGER", <<["d", "BOOLEAN"], ["e", "INTEGER"], ["e", "INTEGER"], ["B", "INTEGER"], ["d", "A"], ["INTEGER", "c"]>>, "B")
add_command("B", "D", <<["e", "INTEGER"], ["B", "BOOLEAN"], ["d", "INTEGER"]>>)
add_attribute("b", "INTEGER", "INTEGER")
add_call_chain(<<d,D,a,a>>)
int_value (44)
add_attribute("INTEGER", "INTEGER", "INTEGER")
logical_negation
numerical_negation
add_command("d", "A", <<["e", "BOOLEAN"]>>)
add_attribute("e", "c", "A")
logical_negation
conjunction
add_class(e)
add_query("b", "INTEGER", <<["A", "BOOLEAN"], ["d", "INTEGER"], ["A", "c"], ["e", "d"], ["C", "a"], ["c", "C"], ["e", "c"], ["e", "BOOLEAN"]>>, "INTEGER")
add_attribute("INTEGER", "d", "C")
add_call_chain(<<D,b,B,d,A,c,B,B>>)
disjunction
add_attribute("b", "INTEGER", "A")
add_command("a", "B", <<["D", "INTEGER"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["A", "B"]>>)
add_call_chain(<<c,a,d,c,BOOLEAN>>)
add_attribute("C", "b", "INTEGER")
add_attribute("B", "d", "INTEGER")
add_attribute("a", "BOOLEAN", "BOOLEAN")
generate_java_code
bool_value (true)
add_command("C", "A", <<["d", "BOOLEAN"], ["e", "B"], ["INTEGER", "BOOLEAN"], ["b", "BOOLEAN"], ["b", "INTEGER"], ["e", "b"]>>)
add_command("e", "c", <<["BOOLEAN", "INTEGER"], ["d", "INTEGER"], ["a", "INTEGER"], ["a", "A"], ["INTEGER", "A"], ["A", "BOOLEAN"]>>)
bool_value (true)
add_call_chain(<<b,D,e,INTEGER,B,b,A>>)
add_query("c", "c", <<["D", "d"], ["d", "INTEGER"], ["e", "C"], ["B", "BOOLEAN"], ["c", "e"], ["A", "BOOLEAN"]>>, "e")
numerical_negation
add_command("INTEGER", "e", <<["b", "d"], ["BOOLEAN", "BOOLEAN"], ["c", "e"], ["c", "INTEGER"]>>)
int_value (15)
generate_java_code
add_query("e", "a", <<["B", "BOOLEAN"], ["B", "C"], ["e", "INTEGER"], ["c", "e"], ["D", "INTEGER"], ["C", "A"]>>, "INTEGER")
equals
int_value (29)
