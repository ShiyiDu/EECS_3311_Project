numerical_negation
add_command("INTEGER", "INTEGER", <<["e", "INTEGER"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "INTEGER"], ["d", "INTEGER"], ["e", "a"], ["d", "C"], ["d", "BOOLEAN"], ["c", "a"]>>)
add_attribute("c", "d", "A")
bool_value (false)
add_call_chain(<<a,b,INTEGER,A,INTEGER,b,B>>)
equals
add_query("a", "e", <<["A", "INTEGER"], ["D", "d"], ["b", "d"], ["C", "BOOLEAN"], ["A", "INTEGER"]>>, "c")
equals
add_command("INTEGER", "B", <<["c", "INTEGER"], ["A", "A"], ["A", "c"]>>)
greater_than
add_attribute("e", "A", "INTEGER")
add_attribute("A", "e", "INTEGER")
add_query("c", "B", <<["d", "BOOLEAN"], ["a", "c"], ["C", "INTEGER"], ["c", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "BOOLEAN"], ["b", "INTEGER"], ["b", "BOOLEAN"], ["c", "BOOLEAN"]>>, "c")
bool_value (false)
add_class(C)
generate_java_code
add_call_chain(<<a,d,C,c,C,C,B,c,e>>)
add_call_chain(<<d>>)
disjunction
add_query("b", "C", <<["BOOLEAN", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "BOOLEAN"], ["a", "A"], ["A", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "INTEGER"]>>, "INTEGER")
add_command("c", "C", <<["D", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "b"], ["a", "INTEGER"], ["D", "BOOLEAN"]>>)
logical_negation
add_command("a", "a", <<["d", "INTEGER"], ["C", "BOOLEAN"]>>)
add_query("b", "D", <<["C", "INTEGER"], ["INTEGER", "INTEGER"], ["B", "INTEGER"]>>, "BOOLEAN")
type_check
add_query("D", "C", <<["d", "INTEGER"]>>, "C")
bool_value (false)
logical_negation
add_call_chain(<<d,B,b,b,B,A,A>>)
add_attribute("a", "INTEGER", "INTEGER")
generate_java_code
add_call_chain(<<A,C,b>>)
type_check
quotient
add_attribute("e", "c", "INTEGER")
type_check
numerical_negation
int_value (3)
logical_negation
int_value (1)
add_command("d", "D", <<["e", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "c"]>>)
add_attribute("e", "A", "INTEGER")
add_command("A", "B", <<["d", "a"], ["C", "BOOLEAN"]>>)
add_call_chain(<<B,B,B,BOOLEAN>>)
add_call_chain(<<e,b,A,C,D,b>>)
add_attribute("C", "B", "BOOLEAN")
numerical_negation
type_check
type_check
generate_java_code
add_attribute("a", "c", "BOOLEAN")
generate_java_code
logical_negation
logical_negation
type_check
generate_java_code
quotient
int_value (21)
add_query("BOOLEAN", "C", <<["c", "d"], ["A", "BOOLEAN"], ["C", "BOOLEAN"]>>, "D")
add_query("INTEGER", "C", <<["D", "INTEGER"], ["C", "BOOLEAN"], ["A", "C"], ["a", "INTEGER"]>>, "c")
bool_value (true)
add_class(d)
add_call_chain(<<D,a,e,D,c,A,d,C>>)
equals
disjunction
int_value (9)
add_query("A", "c", <<["B", "C"], ["A", "INTEGER"], ["a", "A"], ["D", "b"], ["C", "INTEGER"], ["BOOLEAN", "A"]>>, "INTEGER")
logical_negation
add_call_chain(<<c,c>>)
type_check
type_check
numerical_negation
add_command("D", "A", <<["e", "e"], ["d", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["c", "INTEGER"]>>)
add_attribute("a", "B", "BOOLEAN")
add_class(BOOLEAN)
add_attribute("e", "A", "INTEGER")
add_call_chain(<<INTEGER,e,B>>)
add_attribute("C", "d", "D")
add_call_chain(<<a,e,A,C,a,c>>)
bool_value (true)
numerical_negation
add_attribute("C", "C", "C")
add_call_chain(<<b,c,e,a>>)
numerical_negation
disjunction
add_attribute("D", "b", "A")
add_command("INTEGER", "b", <<["a", "D"], ["b", "BOOLEAN"], ["B", "BOOLEAN"]>>)
add_query("C", "INTEGER", <<["a", "d"]>>, "b")
bool_value (true)
add_attribute("BOOLEAN", "B", "B")
bool_value (false)
type_check
add_command("C", "c", <<["BOOLEAN", "b"], ["B", "BOOLEAN"], ["B", "INTEGER"], ["b", "b"], ["A", "C"], ["d", "INTEGER"], ["C", "BOOLEAN"]>>)
logical_negation
generate_java_code
int_value (10)
add_attribute("BOOLEAN", "a", "INTEGER")
add_attribute("C", "D", "BOOLEAN")
disjunction
add_command("C", "BOOLEAN", <<["d", "INTEGER"], ["b", "BOOLEAN"]>>)
generate_java_code
add_command("d", "A", <<["A", "INTEGER"], ["e", "BOOLEAN"], ["B", "INTEGER"], ["e", "A"], ["a", "C"], ["D", "a"], ["A", "INTEGER"], ["d", "c"]>>)
int_value (37)
equals
int_value (8)
add_query("D", "D", <<["a", "INTEGER"], ["INTEGER", "C"], ["C", "INTEGER"], ["b", "INTEGER"], ["C", "C"], ["BOOLEAN", "BOOLEAN"], ["D", "C"]>>, "D")
conjunction
add_command("d", "C", <<["BOOLEAN", "e"], ["b", "INTEGER"], ["a", "INTEGER"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["e", "C"], ["d", "BOOLEAN"]>>)
subtraction
bool_value (true)
equals
add_attribute("INTEGER", "e", "BOOLEAN")
add_call_chain(<<d,b,a,D,D,a,a,B,C>>)
add_call_chain(<<a,a>>)
add_call_chain(<<d,BOOLEAN,C,b,D,D,B>>)
add_attribute("D", "c", "C")
add_query("c", "a", <<["A", "BOOLEAN"], ["c", "INTEGER"], ["b", "B"], ["C", "C"], ["BOOLEAN", "a"], ["A", "b"], ["c", "D"], ["e", "D"], ["B", "INTEGER"]>>, "a")
add_call_chain(<<e,B,D,A,D,C>>)
logical_negation
add_query("e", "b", <<["a", "C"], ["C", "e"], ["a", "BOOLEAN"], ["B", "b"], ["b", "e"], ["b", "BOOLEAN"]>>, "e")
type_check
bool_value (false)
numerical_negation
add_attribute("C", "a", "INTEGER")
add_attribute("A", "C", "BOOLEAN")
type_check
add_command("B", "D", <<["A", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["d", "INTEGER"], ["e", "C"], ["a", "INTEGER"], ["c", "INTEGER"]>>)
add_attribute("b", "INTEGER", "INTEGER")
bool_value (false)
generate_java_code
add_class(D)
disjunction
bool_value (false)
add_call_chain(<<B,d,B,A,a>>)
type_check
add_call_chain(<<D,d,B,A,c,C,e,D,D>>)
type_check
disjunction
bool_value (false)
bool_value (false)
add_attribute("b", "INTEGER", "BOOLEAN")
add_query("C", "c", <<["D", "BOOLEAN"], ["D", "INTEGER"], ["c", "C"], ["b", "BOOLEAN"], ["D", "BOOLEAN"]>>, "INTEGER")
add_class(c)
logical_negation
generate_java_code
numerical_negation
numerical_negation
add_attribute("e", "b", "BOOLEAN")
add_call_chain(<<B,D,C,e,C,d>>)
conjunction
int_value (3)
add_call_chain(<<b,INTEGER>>)
logical_negation
add_command("A", "B", <<["B", "B"], ["b", "INTEGER"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["c", "BOOLEAN"], ["c", "INTEGER"]>>)
add_command("e", "B", <<["b", "INTEGER"], ["A", "b"], ["e", "b"], ["a", "INTEGER"], ["INTEGER", "BOOLEAN"], ["A", "BOOLEAN"]>>)
numerical_negation
int_value (31)
int_value (24)
logical_negation
add_query("C", "B", <<["A", "c"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["A", "INTEGER"], ["b", "BOOLEAN"], ["a", "BOOLEAN"]>>, "a")
generate_java_code
add_attribute("A", "a", "BOOLEAN")
add_command("e", "a", <<["e", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
add_query("C", "e", <<["A", "a"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["B", "D"], ["C", "BOOLEAN"], ["d", "BOOLEAN"]>>, "b")
add_command("d", "A", <<["C", "C"], ["d", "BOOLEAN"], ["INTEGER", "INTEGER"], ["A", "INTEGER"], ["a", "d"], ["b", "BOOLEAN"]>>)
add_command("b", "C", <<["e", "d"], ["INTEGER", "BOOLEAN"], ["a", "B"]>>)
logical_negation
bool_value (false)
type_check
add_command("D", "e", <<["a", "INTEGER"], ["a", "d"]>>)
bool_value (true)
int_value (7)
add_attribute("A", "b", "BOOLEAN")
conjunction
add_call_chain(<<e,INTEGER,B,a,d,BOOLEAN,INTEGER,d,b>>)
multiplication
add_call_chain(<<e>>)
add_command("A", "C", <<["D", "BOOLEAN"], ["A", "INTEGER"], ["C", "INTEGER"]>>)
logical_negation
add_query("c", "e", <<["B", "INTEGER"], ["b", "BOOLEAN"], ["INTEGER", "D"], ["B", "b"], ["B", "BOOLEAN"], ["D", "A"], ["C", "INTEGER"]>>, "B")
logical_negation
conjunction
add_call_chain(<<C,B,e>>)
generate_java_code
type_check
equals
add_call_chain(<<A,c>>)
int_value (28)
addition
add_attribute("D", "C", "INTEGER")
subtraction
add_command("d", "d", <<["C", "d"], ["INTEGER", "BOOLEAN"], ["A", "e"], ["C", "BOOLEAN"]>>)
add_call_chain(<<D,a,C,e,c,e>>)
add_attribute("b", "B", "BOOLEAN")
type_check
add_call_chain(<<a,C,C,A,D,e,a>>)
greater_than
type_check
add_call_chain(<<INTEGER,D,c,B>>)
add_query("A", "a", <<["e", "BOOLEAN"], ["C", "D"], ["d", "d"], ["c", "BOOLEAN"]>>, "B")
type_check
add_call_chain(<<c>>)
type_check
add_command("d", "INTEGER", <<["d", "INTEGER"], ["C", "INTEGER"], ["d", "BOOLEAN"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["B", "e"], ["C", "c"]>>)
add_command("e", "c", <<["b", "b"]>>)
add_command("A", "b", <<["a", "BOOLEAN"], ["a", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["B", "BOOLEAN"], ["BOOLEAN", "C"], ["c", "INTEGER"]>>)
numerical_negation
int_value (22)
generate_java_code
add_attribute("b", "a", "BOOLEAN")
add_query("b", "C", <<["d", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["D", "INTEGER"], ["d", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "BOOLEAN"]>>, "D")
add_attribute("B", "A", "INTEGER")
add_query("a", "d", <<["BOOLEAN", "INTEGER"]>>, "d")
add_query("D", "D", <<["c", "d"], ["B", "INTEGER"], ["C", "A"], ["A", "BOOLEAN"], ["C", "BOOLEAN"]>>, "c")
less_than
add_call_chain(<<D,C,B,BOOLEAN>>)
generate_java_code
bool_value (false)
add_attribute("b", "A", "INTEGER")
logical_negation
int_value (42)
logical_negation
add_call_chain(<<C,D,c,e,B,D,d,d>>)
int_value (29)
type_check
conjunction
add_attribute("c", "D", "INTEGER")
add_call_chain(<<D,c,B,b,d,a,INTEGER,A>>)
numerical_negation
quotient
