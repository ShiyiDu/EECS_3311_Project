add_command("c", "a", <<["c", "INTEGER"], ["B", "d"]>>)
generate_java_code
add_command("a", "A", <<["d", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["A", "BOOLEAN"], ["A", "INTEGER"]>>)
add_call_chain(<<c,B,d,d,a>>)
add_attribute("C", "D", "e")
less_than
logical_negation
add_command("INTEGER", "BOOLEAN", <<["e", "B"], ["D", "e"], ["d", "INTEGER"], ["b", "BOOLEAN"], ["c", "B"], ["a", "INTEGER"], ["B", "e"], ["C", "C"]>>)
add_call_chain(<<B,C>>)
add_query("B", "b", <<["A", "BOOLEAN"], ["D", "B"], ["B", "e"], ["C", "INTEGER"], ["e", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "INTEGER"]>>, "B")
add_attribute("b", "a", "BOOLEAN")
add_call_chain(<<BOOLEAN,d,D,b,INTEGER,d,C,A>>)
generate_java_code
disjunction
add_call_chain(<<INTEGER,B,c,C,e,BOOLEAN,e>>)
conjunction
generate_java_code
int_value (44)
conjunction
multiplication
add_call_chain(<<C,e,A,B,INTEGER,D,B,d>>)
add_call_chain(<<B,c,A,b,d,d,b>>)
add_class(C)
add_command("A", "b", <<["B", "BOOLEAN"], ["a", "c"], ["d", "BOOLEAN"], ["d", "a"], ["e", "INTEGER"], ["INTEGER", "C"]>>)
greater_than
type_check
add_command("C", "a", <<["d", "d"], ["B", "INTEGER"], ["e", "INTEGER"], ["c", "BOOLEAN"], ["d", "BOOLEAN"]>>)
add_call_chain(<<B,B>>)
add_attribute("C", "d", "INTEGER")
add_class(A)
int_value (31)
add_call_chain(<<a,D,e,A,B,D,D,B>>)
logical_negation
numerical_negation
add_query("d", "c", <<["B", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>, "d")
add_attribute("a", "C", "INTEGER")
add_command("D", "A", <<["a", "INTEGER"]>>)
int_value (18)
multiplication
modulo
add_query("e", "b", <<["e", "INTEGER"], ["D", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "B"], ["B", "INTEGER"], ["c", "INTEGER"]>>, "e")
add_query("C", "a", <<["C", "C"], ["INTEGER", "INTEGER"], ["A", "INTEGER"], ["C", "INTEGER"], ["D", "BOOLEAN"]>>, "BOOLEAN")
add_attribute("D", "D", "INTEGER")
add_attribute("BOOLEAN", "B", "B")
add_command("b", "C", <<["BOOLEAN", "INTEGER"]>>)
add_call_chain(<<b,b,C,C>>)
add_command("C", "D", <<["e", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "INTEGER"], ["b", "INTEGER"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["B", "C"]>>)
conjunction
add_command("A", "D", <<["D", "D"], ["e", "INTEGER"], ["A", "BOOLEAN"], ["B", "INTEGER"]>>)
add_attribute("c", "A", "c")
bool_value (true)
int_value (23)
add_attribute("d", "C", "BOOLEAN")
add_call_chain(<<c,c>>)
bool_value (false)
bool_value (true)
add_query("b", "C", <<["e", "B"], ["A", "BOOLEAN"], ["D", "INTEGER"], ["b", "BOOLEAN"], ["d", "a"], ["INTEGER", "INTEGER"]>>, "c")
add_call_chain(<<D>>)
numerical_negation
add_call_chain(<<C,a>>)
add_command("d", "D", <<["e", "A"], ["c", "INTEGER"]>>)
add_attribute("c", "B", "INTEGER")
add_command("INTEGER", "B", <<["a", "BOOLEAN"], ["d", "C"], ["b", "INTEGER"], ["c", "A"], ["C", "B"], ["b", "BOOLEAN"]>>)
int_value (40)
add_attribute("e", "B", "A")
add_attribute("B", "BOOLEAN", "BOOLEAN")
conjunction
add_call_chain(<<b,A,D,B,c,d>>)
add_attribute("d", "D", "A")
add_call_chain(<<e,D,INTEGER,b>>)
add_call_chain(<<e,C,e,D,b,A>>)
modulo
equals
bool_value (true)
add_call_chain(<<C,A,b,d>>)
add_attribute("C", "C", "BOOLEAN")
add_call_chain(<<d,A>>)
add_attribute("e", "B", "INTEGER")
int_value (28)
int_value (3)
add_call_chain(<<c,d>>)
numerical_negation
add_query("b", "D", <<["C", "d"], ["A", "INTEGER"]>>, "C")
generate_java_code
add_command("INTEGER", "C", <<["e", "d"], ["B", "INTEGER"], ["d", "D"], ["a", "A"], ["a", "BOOLEAN"], ["B", "BOOLEAN"], ["BOOLEAN", "d"], ["a", "BOOLEAN"]>>)
subtraction
numerical_negation
greater_than
add_command("d", "B", <<["INTEGER", "INTEGER"], ["C", "a"], ["D", "BOOLEAN"], ["c", "a"], ["C", "INTEGER"], ["e", "BOOLEAN"], ["D", "INTEGER"]>>)
generate_java_code
add_command("a", "BOOLEAN", <<["INTEGER", "d"], ["B", "a"], ["A", "BOOLEAN"], ["b", "e"], ["b", "BOOLEAN"]>>)
add_query("B", "a", <<["e", "a"], ["D", "INTEGER"]>>, "b")
add_call_chain(<<BOOLEAN,B,c,d,b,b>>)
bool_value (false)
int_value (14)
generate_java_code
disjunction
type_check
logical_negation
disjunction
add_attribute("C", "A", "a")
add_command("c", "c", <<["A", "INTEGER"], ["INTEGER", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["D", "INTEGER"], ["a", "INTEGER"], ["b", "INTEGER"], ["a", "BOOLEAN"], ["D", "INTEGER"]>>)
add_attribute("C", "A", "c")
bool_value (true)
logical_negation
less_than
bool_value (false)
add_attribute("B", "A", "a")
disjunction
add_class(e)
numerical_negation
add_call_chain(<<b,A>>)
add_attribute("c", "c", "INTEGER")
add_call_chain(<<a,C,b,d,C,b>>)
add_class(B)
add_call_chain(<<C,A,A,D,INTEGER,e,d,a,B>>)
add_call_chain(<<a,BOOLEAN>>)
modulo
int_value (45)
add_call_chain(<<b,d,d,B,D,d,D>>)
add_call_chain(<<d,D,B,D,C,c,c,BOOLEAN>>)
add_query("C", "e", <<["a", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "INTEGER"], ["d", "INTEGER"], ["B", "INTEGER"], ["a", "INTEGER"], ["b", "INTEGER"]>>, "B")
type_check
add_command("A", "C", <<["c", "INTEGER"], ["C", "B"], ["d", "A"], ["d", "C"]>>)
bool_value (false)
multiplication
equals
add_call_chain(<<e,C,A,A,D,A,e,e>>)
add_query("B", "INTEGER", <<["e", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["B", "INTEGER"], ["d", "INTEGER"], ["D", "INTEGER"], ["D", "BOOLEAN"]>>, "d")
logical_negation
add_attribute("B", "C", "INTEGER")
int_value (6)
add_call_chain(<<e,C,D,C,A,a,a,a>>)
add_attribute("INTEGER", "b", "BOOLEAN")
add_call_chain(<<D,b,c>>)
add_command("e", "c", <<["C", "INTEGER"], ["BOOLEAN", "e"]>>)
add_attribute("C", "e", "c")
numerical_negation
multiplication
bool_value (true)
less_than
add_command("d", "c", <<["B", "BOOLEAN"], ["BOOLEAN", "a"], ["a", "INTEGER"], ["b", "BOOLEAN"], ["d", "INTEGER"], ["B", "b"], ["B", "BOOLEAN"]>>)
bool_value (false)
add_query("e", "b", <<["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "INTEGER"]>>, "D")
add_call_chain(<<BOOLEAN,A,INTEGER,C,A,D>>)
bool_value (true)
int_value (12)
type_check
greater_than
numerical_negation
add_attribute("INTEGER", "B", "INTEGER")
logical_negation
type_check
add_call_chain(<<B,D,B,e,c,d,D,C,C>>)
add_call_chain(<<e,D,d,d,INTEGER>>)
numerical_negation
disjunction
add_call_chain(<<e,B,a,b>>)
add_call_chain(<<e,d,D,b,A,D,C>>)
disjunction
add_query("d", "c", <<["d", "INTEGER"], ["B", "D"], ["e", "BOOLEAN"], ["B", "INTEGER"], ["e", "INTEGER"]>>, "INTEGER")
add_command("a", "D", <<["D", "BOOLEAN"], ["b", "INTEGER"], ["A", "INTEGER"], ["B", "BOOLEAN"]>>)
int_value (21)
multiplication
add_call_chain(<<e,a,b,B>>)
add_query("a", "D", <<["a", "INTEGER"], ["INTEGER", "a"]>>, "c")
add_call_chain(<<d>>)
add_call_chain(<<BOOLEAN,c,C,INTEGER,d,A>>)
numerical_negation
generate_java_code
numerical_negation
logical_negation
add_attribute("D", "BOOLEAN", "INTEGER")
int_value (45)
bool_value (true)
logical_negation
add_call_chain(<<e,c,BOOLEAN,B,A,e,d>>)
add_query("D", "b", <<["a", "INTEGER"], ["A", "BOOLEAN"], ["B", "d"], ["D", "INTEGER"], ["B", "INTEGER"]>>, "a")
add_query("e", "e", <<["C", "INTEGER"], ["INTEGER", "INTEGER"], ["INTEGER", "INTEGER"], ["BOOLEAN", "INTEGER"]>>, "INTEGER")
add_command("D", "b", <<["C", "INTEGER"], ["a", "D"], ["A", "INTEGER"], ["A", "INTEGER"], ["B", "D"], ["e", "BOOLEAN"], ["D", "INTEGER"], ["A", "BOOLEAN"], ["B", "BOOLEAN"]>>)
add_class(A)
addition
add_query("d", "e", <<["B", "a"], ["a", "b"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "c"], ["INTEGER", "D"], ["c", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["BOOLEAN", "INTEGER"]>>, "C")
add_attribute("d", "D", "BOOLEAN")
add_class(D)
add_call_chain(<<d,A,C,A,d,B,e,B,C>>)
generate_java_code
add_query("BOOLEAN", "C", <<["A", "INTEGER"], ["D", "D"], ["c", "BOOLEAN"], ["A", "INTEGER"], ["d", "INTEGER"], ["D", "BOOLEAN"]>>, "C")
add_attribute("A", "A", "C")
add_call_chain(<<INTEGER,b,C,c>>)
add_attribute("A", "e", "c")
type_check
int_value (31)
generate_java_code
int_value (5)
add_attribute("e", "BOOLEAN", "d")
bool_value (false)
generate_java_code
type_check
add_command("INTEGER", "c", <<["a", "BOOLEAN"], ["d", "B"]>>)
logical_negation
generate_java_code
add_call_chain(<<B,D,a,b,b,D>>)
add_class(C)
add_attribute("d", "C", "INTEGER")
add_command("e", "a", <<["b", "BOOLEAN"], ["b", "B"], ["b", "d"], ["c", "b"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "a"], ["INTEGER", "INTEGER"]>>)
int_value (23)
add_class(D)
type_check
bool_value (true)
add_query("e", "b", <<["e", "C"], ["A", "BOOLEAN"]>>, "c")
subtraction
add_call_chain(<<D,c,a,d,a,d>>)
add_class(BOOLEAN)
logical_negation
add_query("A", "A", <<["INTEGER", "INTEGER"]>>, "d")
type_check
bool_value (false)
conjunction
add_attribute("D", "d", "BOOLEAN")
logical_negation
bool_value (true)
disjunction
subtraction
subtraction
add_command("D", "B", <<["a", "BOOLEAN"], ["e", "A"], ["A", "INTEGER"], ["a", "e"], ["B", "BOOLEAN"], ["c", "INTEGER"]>>)
add_call_chain(<<e,a,A,d,A,C,d>>)
add_command("d", "c", <<["D", "BOOLEAN"]>>)
add_command("d", "d", <<["a", "INTEGER"], ["B", "b"]>>)
add_class(a)
add_command("C", "b", <<["A", "INTEGER"], ["a", "BOOLEAN"], ["D", "INTEGER"], ["B", "INTEGER"], ["A", "A"], ["a", "BOOLEAN"], ["D", "BOOLEAN"]>>)
add_command("A", "c", <<["C", "INTEGER"], ["D", "INTEGER"], ["e", "C"], ["c", "INTEGER"], ["A", "B"]>>)
add_call_chain(<<INTEGER,B,a,INTEGER,c,b,C,D>>)
add_call_chain(<<a,e,B,C,A>>)
add_class(D)
int_value (44)
add_attribute("C", "C", "INTEGER")
add_class(A)
add_query("INTEGER", "d", <<["B", "INTEGER"], ["C", "BOOLEAN"]>>, "C")
equals
add_query("d", "B", <<["b", "INTEGER"], ["BOOLEAN", "e"], ["INTEGER", "c"]>>, "e")
add_class(a)
int_value (31)
add_query("a", "b", <<["B", "BOOLEAN"]>>, "a")
int_value (6)
add_command("e", "BOOLEAN", <<["b", "a"], ["INTEGER", "BOOLEAN"], ["D", "INTEGER"]>>)
generate_java_code
type_check
type_check
add_command("d", "A", <<["C", "INTEGER"], ["b", "D"], ["A", "C"], ["d", "INTEGER"], ["C", "BOOLEAN"], ["B", "INTEGER"]>>)
add_query("C", "b", <<["INTEGER", "INTEGER"], ["D", "INTEGER"]>>, "e")
quotient
add_attribute("e", "A", "INTEGER")
greater_than
quotient
int_value (42)
int_value (41)
add_command("d", "d", <<["C", "INTEGER"], ["A", "D"]>>)
add_command("a", "BOOLEAN", <<["C", "BOOLEAN"], ["d", "BOOLEAN"], ["b", "e"], ["C", "INTEGER"], ["C", "D"], ["e", "INTEGER"], ["D", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "BOOLEAN"]>>)
add_call_chain(<<B,c,BOOLEAN,INTEGER,a,d,A>>)
conjunction
equals
numerical_negation
add_call_chain(<<C,c,A,a,b,C,e,A,a>>)
bool_value (false)
add_call_chain(<<b,a,e,d>>)
add_call_chain(<<INTEGER,D,B,A,d,b,A,B>>)
equals
add_command("b", "b", <<["e", "BOOLEAN"], ["c", "A"], ["a", "c"], ["e", "C"], ["d", "e"]>>)
conjunction
bool_value (true)
bool_value (false)
generate_java_code
add_attribute("a", "D", "INTEGER")
add_query("c", "D", <<["BOOLEAN", "INTEGER"], ["A", "INTEGER"], ["a", "D"], ["D", "c"]>>, "d")
add_call_chain(<<C,D,INTEGER,A,d,d>>)
add_attribute("C", "a", "B")
numerical_negation
bool_value (true)
add_command("c", "A", <<["C", "INTEGER"], ["B", "BOOLEAN"], ["C", "d"], ["b", "A"], ["D", "a"], ["INTEGER", "D"], ["INTEGER", "BOOLEAN"]>>)
logical_negation
logical_negation
disjunction
add_call_chain(<<e,C>>)
numerical_negation
int_value (3)
