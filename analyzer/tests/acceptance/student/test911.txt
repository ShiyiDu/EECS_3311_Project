add_query("B", "d", <<["d", "INTEGER"], ["b", "BOOLEAN"], ["d", "B"], ["e", "INTEGER"], ["D", "INTEGER"], ["c", "BOOLEAN"]>>, "C")
add_command("d", "BOOLEAN", <<["B", "INTEGER"], ["B", "B"], ["d", "INTEGER"], ["a", "A"], ["e", "INTEGER"], ["b", "BOOLEAN"]>>)
generate_java_code
add_command("d", "c", <<["INTEGER", "b"], ["a", "BOOLEAN"], ["B", "INTEGER"], ["b", "e"], ["e", "A"], ["d", "INTEGER"], ["a", "B"]>>)
numerical_negation
add_attribute("b", "b", "B")
add_attribute("A", "A", "BOOLEAN")
add_call_chain(<<b,B,A,A,C,A>>)
add_class(D)
bool_value (true)
numerical_negation
add_call_chain(<<BOOLEAN,C,INTEGER>>)
numerical_negation
addition
add_command("b", "INTEGER", <<["a", "e"], ["B", "INTEGER"], ["C", "B"]>>)
add_call_chain(<<e,b,d,A,d,A,b>>)
int_value (38)
numerical_negation
add_command("B", "c", <<["B", "B"], ["BOOLEAN", "B"]>>)
type_check
conjunction
add_call_chain(<<d,A,A>>)
add_call_chain(<<e,B,BOOLEAN,b,c,A,INTEGER,BOOLEAN>>)
add_query("B", "B", <<["d", "BOOLEAN"], ["a", "INTEGER"]>>, "D")
add_attribute("INTEGER", "D", "D")
logical_negation
add_call_chain(<<e,c,C,C,B,b,D,c,C>>)
conjunction
add_class(C)
type_check
add_command("d", "D", <<["d", "b"], ["d", "A"]>>)
logical_negation
int_value (46)
add_command("D", "B", <<["e", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["B", "INTEGER"], ["b", "e"], ["INTEGER", "INTEGER"], ["a", "b"], ["B", "BOOLEAN"], ["c", "INTEGER"]>>)
disjunction
equals
numerical_negation
type_check
add_call_chain(<<b,C,a,a,c,d>>)
int_value (42)
add_attribute("b", "C", "INTEGER")
type_check
add_call_chain(<<a,c,d,C,e,c>>)
add_attribute("c", "d", "BOOLEAN")
add_call_chain(<<A,INTEGER,e,c,d,D,BOOLEAN,e>>)
numerical_negation
bool_value (false)
logical_negation
add_query("BOOLEAN", "D", <<["B", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["INTEGER", "b"], ["c", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "BOOLEAN"]>>, "a")
type_check
greater_than
add_query("e", "INTEGER", <<["B", "e"], ["D", "INTEGER"], ["e", "INTEGER"], ["D", "INTEGER"]>>, "C")
add_command("A", "a", <<["BOOLEAN", "BOOLEAN"]>>)
add_class(B)
bool_value (false)
type_check
int_value (3)
numerical_negation
add_call_chain(<<b,BOOLEAN,a>>)
add_query("B", "d", <<["c", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["d", "A"]>>, "A")
type_check
add_class(A)
add_call_chain(<<B,D,B,B,b,a,c>>)
logical_negation
type_check
generate_java_code
add_attribute("e", "INTEGER", "BOOLEAN")
add_attribute("d", "C", "INTEGER")
add_command("e", "INTEGER", <<["e", "INTEGER"], ["e", "b"], ["BOOLEAN", "INTEGER"]>>)
add_class(A)
add_query("b", "B", <<["D", "BOOLEAN"], ["a", "INTEGER"], ["e", "BOOLEAN"]>>, "B")
numerical_negation
add_attribute("A", "c", "a")
add_class(INTEGER)
modulo
add_query("c", "D", <<["d", "d"], ["A", "INTEGER"], ["b", "INTEGER"], ["a", "BOOLEAN"], ["C", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>, "A")
numerical_negation
add_call_chain(<<D,C>>)
conjunction
add_attribute("b", "B", "INTEGER")
add_call_chain(<<a,b>>)
add_command("C", "e", <<["BOOLEAN", "D"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["b", "INTEGER"], ["b", "BOOLEAN"], ["D", "INTEGER"], ["C", "INTEGER"], ["A", "INTEGER"], ["e", "INTEGER"]>>)
conjunction
add_call_chain(<<e,d,C,d,b,B,e>>)
add_call_chain(<<e>>)
generate_java_code
add_query("D", "B", <<["d", "BOOLEAN"], ["a", "INTEGER"]>>, "c")
add_command("e", "C", <<["c", "e"], ["a", "BOOLEAN"]>>)
add_command("c", "INTEGER", <<["B", "c"], ["d", "INTEGER"], ["D", "INTEGER"], ["d", "INTEGER"], ["INTEGER", "B"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["A", "INTEGER"]>>)
add_attribute("B", "d", "INTEGER")
add_class(d)
bool_value (true)
add_attribute("A", "e", "C")
numerical_negation
add_command("C", "C", <<["b", "INTEGER"], ["BOOLEAN", "C"], ["C", "INTEGER"]>>)
add_command("C", "c", <<["D", "BOOLEAN"]>>)
add_query("a", "e", <<["c", "BOOLEAN"], ["b", "INTEGER"]>>, "b")
add_call_chain(<<INTEGER,BOOLEAN,e,d,b>>)
add_call_chain(<<a,B,a,INTEGER,C>>)
int_value (49)
add_command("a", "D", <<["D", "INTEGER"], ["C", "C"], ["BOOLEAN", "INTEGER"], ["INTEGER", "c"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["D", "INTEGER"], ["a", "BOOLEAN"], ["d", "INTEGER"]>>)
add_class(D)
add_command("D", "e", <<["e", "INTEGER"], ["C", "BOOLEAN"], ["a", "c"], ["INTEGER", "BOOLEAN"]>>)
add_command("B", "B", <<["a", "C"], ["a", "INTEGER"], ["D", "BOOLEAN"], ["B", "A"]>>)
numerical_negation
int_value (7)
int_value (11)
add_command("C", "INTEGER", <<["b", "BOOLEAN"], ["C", "C"], ["b", "INTEGER"], ["b", "C"], ["B", "e"], ["C", "INTEGER"], ["a", "INTEGER"]>>)
bool_value (true)
logical_negation
add_command("b", "e", <<["BOOLEAN", "c"], ["A", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["B", "INTEGER"], ["D", "c"], ["b", "C"], ["a", "BOOLEAN"], ["C", "BOOLEAN"]>>)
numerical_negation
add_class(D)
logical_negation
greater_than
add_attribute("a", "A", "BOOLEAN")
int_value (15)
add_call_chain(<<e,A,INTEGER,e,b>>)
bool_value (true)
addition
generate_java_code
less_than
generate_java_code
add_query("INTEGER", "B", <<["C", "INTEGER"], ["b", "C"], ["d", "INTEGER"], ["C", "b"], ["A", "INTEGER"]>>, "INTEGER")
add_attribute("d", "C", "BOOLEAN")
modulo
add_command("b", "b", <<["C", "INTEGER"], ["B", "B"], ["A", "B"], ["b", "INTEGER"], ["d", "INTEGER"], ["d", "BOOLEAN"], ["b", "INTEGER"], ["a", "b"], ["C", "INTEGER"]>>)
add_call_chain(<<a,C,b>>)
add_command("INTEGER", "INTEGER", <<["c", "INTEGER"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["b", "INTEGER"], ["D", "D"], ["e", "INTEGER"]>>)
add_query("a", "D", <<["b", "BOOLEAN"], ["d", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "B"]>>, "D")
bool_value (false)
greater_than
bool_value (false)
add_command("e", "a", <<["a", "BOOLEAN"], ["a", "INTEGER"], ["e", "d"]>>)
int_value (44)
logical_negation
int_value (21)
int_value (46)
logical_negation
logical_negation
add_call_chain(<<b,b,D,A>>)
numerical_negation
add_attribute("c", "C", "A")
add_class(D)
add_query("A", "A", <<["C", "INTEGER"], ["B", "e"], ["B", "BOOLEAN"]>>, "B")
numerical_negation
add_call_chain(<<b,b,a,B,e>>)
type_check
numerical_negation
add_call_chain(<<e,D>>)
type_check
disjunction
add_call_chain(<<C>>)
add_attribute("INTEGER", "e", "INTEGER")
int_value (41)
type_check
numerical_negation
bool_value (true)
numerical_negation
numerical_negation
add_query("e", "A", <<["C", "c"], ["D", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "INTEGER"], ["A", "INTEGER"], ["a", "C"], ["b", "INTEGER"], ["C", "INTEGER"]>>, "c")
add_call_chain(<<a>>)
bool_value (false)
add_call_chain(<<A,INTEGER>>)
add_query("c", "B", <<["D", "C"], ["b", "b"], ["INTEGER", "INTEGER"], ["B", "BOOLEAN"], ["INTEGER", "INTEGER"], ["d", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>, "C")
addition
greater_than
logical_negation
disjunction
numerical_negation
add_call_chain(<<D,D>>)
add_command("D", "d", <<["A", "BOOLEAN"], ["d", "INTEGER"], ["d", "BOOLEAN"], ["B", "BOOLEAN"], ["INTEGER", "e"]>>)
add_call_chain(<<e,a,C,b,BOOLEAN>>)
bool_value (true)
int_value (36)
type_check
add_call_chain(<<C,C,c>>)
add_command("d", "D", <<["D", "INTEGER"], ["d", "BOOLEAN"], ["a", "INTEGER"], ["e", "INTEGER"], ["d", "D"], ["a", "BOOLEAN"], ["c", "INTEGER"], ["c", "BOOLEAN"], ["B", "INTEGER"]>>)
bool_value (true)
int_value (1)
add_call_chain(<<c,D,C,C,a>>)
add_call_chain(<<A,INTEGER,A,a,INTEGER,B>>)
add_call_chain(<<b,d>>)
add_command("d", "C", <<["C", "BOOLEAN"], ["C", "INTEGER"]>>)
multiplication
add_call_chain(<<c,A>>)
type_check
add_call_chain(<<D,INTEGER,D>>)
bool_value (false)
add_query("e", "BOOLEAN", <<["d", "B"], ["A", "BOOLEAN"], ["A", "D"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["c", "INTEGER"]>>, "a")
logical_negation
add_call_chain(<<d,c,b,D,D,e>>)
numerical_negation
multiplication
add_command("B", "C", <<["a", "BOOLEAN"]>>)
less_than
add_call_chain(<<B,d,D,C,c,d>>)
int_value (45)
quotient
add_call_chain(<<B,b,e,A>>)
multiplication
add_class(A)
bool_value (false)
numerical_negation
type_check
type_check
bool_value (true)
add_query("a", "C", <<["A", "BOOLEAN"], ["D", "INTEGER"], ["A", "d"], ["INTEGER", "INTEGER"], ["B", "D"], ["c", "BOOLEAN"]>>, "D")
numerical_negation
int_value (4)
logical_negation
add_call_chain(<<e,d,C,d,C,A,a,B>>)
add_query("B", "e", <<["C", "INTEGER"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "INTEGER"]>>, "a")
add_query("A", "D", <<["a", "INTEGER"], ["B", "INTEGER"], ["a", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "BOOLEAN"]>>, "e")
add_call_chain(<<c,INTEGER,a,e,a,d,b,B,INTEGER>>)
numerical_negation
less_than
bool_value (false)
add_query("e", "C", <<["e", "BOOLEAN"], ["B", "a"], ["c", "D"], ["e", "INTEGER"], ["e", "d"]>>, "d")
multiplication
add_call_chain(<<d>>)
add_attribute("B", "C", "e")
add_call_chain(<<A,C,d>>)
disjunction
conjunction
greater_than
add_attribute("B", "c", "BOOLEAN")
logical_negation
int_value (28)
add_call_chain(<<B,C,e,b,A,B,c,B>>)
add_attribute("A", "D", "C")
add_query("D", "A", <<["e", "BOOLEAN"], ["a", "e"], ["C", "INTEGER"]>>, "BOOLEAN")
add_class(BOOLEAN)
type_check
type_check
type_check
int_value (43)
add_class(BOOLEAN)
add_attribute("b", "c", "BOOLEAN")
add_command("BOOLEAN", "BOOLEAN", <<["a", "INTEGER"], ["B", "a"]>>)
add_call_chain(<<c,C,b,b,INTEGER,A,d,D>>)
add_call_chain(<<c,D,D,e,C,C,d,c>>)
add_command("C", "c", <<["D", "a"], ["BOOLEAN", "a"], ["INTEGER", "BOOLEAN"], ["BOOLEAN", "e"], ["D", "INTEGER"], ["D", "INTEGER"], ["a", "BOOLEAN"], ["C", "INTEGER"], ["BOOLEAN", "INTEGER"]>>)
add_call_chain(<<BOOLEAN>>)
add_command("A", "B", <<["A", "D"], ["D", "d"], ["B", "INTEGER"]>>)
add_command("e", "b", <<["B", "INTEGER"], ["A", "B"], ["e", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "INTEGER"], ["INTEGER", "BOOLEAN"], ["c", "BOOLEAN"], ["e", "BOOLEAN"]>>)
bool_value (true)
