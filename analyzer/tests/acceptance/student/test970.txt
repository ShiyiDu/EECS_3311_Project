add_command("a", "INTEGER", <<["d", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "INTEGER"], ["C", "INTEGER"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "d"]>>)
add_class(D)
add_attribute("C", "B", "INTEGER")
add_call_chain(<<A,B,c>>)
add_call_chain(<<BOOLEAN,d>>)
numerical_negation
generate_java_code
int_value (36)
add_command("D", "e", <<["B", "BOOLEAN"], ["d", "INTEGER"], ["B", "BOOLEAN"], ["b", "A"], ["c", "D"], ["BOOLEAN", "A"], ["A", "INTEGER"], ["d", "b"]>>)
add_attribute("d", "C", "INTEGER")
numerical_negation
generate_java_code
add_call_chain(<<b,c,B,a,B,INTEGER>>)
type_check
add_call_chain(<<C,a,C,BOOLEAN,A,BOOLEAN,a,A,d>>)
add_command("BOOLEAN", "a", <<["A", "INTEGER"], ["d", "INTEGER"], ["B", "BOOLEAN"], ["C", "D"], ["c", "b"], ["b", "INTEGER"], ["b", "INTEGER"]>>)
add_call_chain(<<B,A>>)
bool_value (false)
add_call_chain(<<d,b,c,b>>)
int_value (42)
add_query("B", "A", <<["C", "INTEGER"], ["A", "BOOLEAN"], ["c", "B"]>>, "A")
add_command("b", "C", <<["e", "a"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["c", "d"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "B"]>>)
int_value (43)
bool_value (true)
quotient
add_query("D", "d", <<["BOOLEAN", "INTEGER"], ["d", "c"], ["A", "A"], ["BOOLEAN", "BOOLEAN"]>>, "C")
logical_negation
add_command("D", "A", <<["b", "BOOLEAN"], ["e", "D"], ["c", "INTEGER"], ["INTEGER", "INTEGER"], ["B", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>)
add_class(B)
add_command("B", "d", <<["B", "INTEGER"], ["c", "d"], ["BOOLEAN", "B"], ["C", "INTEGER"], ["B", "INTEGER"], ["b", "BOOLEAN"], ["BOOLEAN", "A"]>>)
add_command("C", "d", <<["C", "C"], ["C", "INTEGER"], ["D", "BOOLEAN"]>>)
logical_negation
add_query("A", "a", <<["a", "BOOLEAN"], ["A", "B"], ["D", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "INTEGER"]>>, "C")
equals
add_call_chain(<<C,e,a,c,INTEGER,B,A>>)
add_query("C", "C", <<["D", "BOOLEAN"], ["d", "B"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["B", "A"], ["c", "BOOLEAN"], ["a", "a"], ["b", "BOOLEAN"], ["a", "BOOLEAN"]>>, "e")
add_call_chain(<<d,b,e,b,B,d,c,d>>)
logical_negation
int_value (19)
add_call_chain(<<C,a,D,a,A,C,BOOLEAN,d>>)
logical_negation
add_command("d", "d", <<["C", "BOOLEAN"], ["D", "D"], ["b", "INTEGER"]>>)
add_call_chain(<<BOOLEAN,C,d,c>>)
add_query("C", "e", <<["C", "BOOLEAN"], ["D", "BOOLEAN"]>>, "C")
add_query("D", "D", <<["A", "BOOLEAN"]>>, "d")
modulo
logical_negation
int_value (11)
add_query("B", "B", <<["b", "BOOLEAN"], ["b", "e"]>>, "c")
add_query("A", "d", <<["A", "BOOLEAN"], ["B", "INTEGER"], ["c", "BOOLEAN"], ["INTEGER", "INTEGER"], ["d", "B"], ["D", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "d"]>>, "d")
bool_value (false)
add_call_chain(<<D,INTEGER,C,c,A>>)
add_call_chain(<<INTEGER,D,b>>)
add_attribute("D", "A", "C")
add_command("B", "B", <<["B", "e"], ["c", "b"], ["INTEGER", "INTEGER"], ["A", "BOOLEAN"]>>)
logical_negation
modulo
add_command("a", "C", <<["b", "C"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["C", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>)
add_query("C", "B", <<["A", "INTEGER"], ["C", "INTEGER"], ["A", "D"], ["d", "a"], ["B", "INTEGER"], ["A", "c"], ["BOOLEAN", "BOOLEAN"]>>, "C")
quotient
add_call_chain(<<B,A>>)
logical_negation
logical_negation
int_value (31)
add_attribute("A", "A", "BOOLEAN")
add_query("e", "D", <<["b", "BOOLEAN"], ["INTEGER", "INTEGER"], ["e", "INTEGER"], ["B", "e"], ["D", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "INTEGER"], ["e", "BOOLEAN"], ["a", "INTEGER"]>>, "a")
bool_value (false)
logical_negation
add_attribute("d", "c", "INTEGER")
add_class(a)
int_value (5)
add_call_chain(<<b,C,B,e,d,c,INTEGER,a>>)
add_call_chain(<<a,A,BOOLEAN>>)
add_query("C", "e", <<["A", "e"]>>, "C")
add_query("B", "b", <<["a", "INTEGER"], ["d", "e"], ["D", "BOOLEAN"], ["a", "BOOLEAN"], ["INTEGER", "INTEGER"], ["A", "D"], ["INTEGER", "INTEGER"]>>, "a")
add_command("a", "B", <<["d", "BOOLEAN"]>>)
add_call_chain(<<D,B,B,e,A,e>>)
bool_value (false)
add_query("c", "d", <<["D", "BOOLEAN"]>>, "A")
add_call_chain(<<INTEGER,B,c>>)
bool_value (true)
add_call_chain(<<a,e,d,B,b,b,A>>)
add_call_chain(<<A,c>>)
disjunction
add_query("a", "e", <<["C", "BOOLEAN"], ["B", "BOOLEAN"]>>, "A")
add_call_chain(<<D,c,d,A,B,d,INTEGER>>)
addition
add_command("C", "c", <<["A", "INTEGER"]>>)
add_call_chain(<<B,e,A,D,c>>)
add_command("C", "C", <<["D", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "INTEGER"], ["INTEGER", "a"], ["d", "INTEGER"], ["e", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "BOOLEAN"]>>)
modulo
add_command("c", "d", <<["c", "D"], ["BOOLEAN", "BOOLEAN"], ["A", "D"], ["C", "INTEGER"], ["b", "INTEGER"], ["A", "INTEGER"], ["e", "INTEGER"], ["C", "e"]>>)
logical_negation
add_command("d", "c", <<["INTEGER", "INTEGER"], ["B", "BOOLEAN"], ["D", "INTEGER"], ["INTEGER", "BOOLEAN"], ["C", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
type_check
generate_java_code
add_call_chain(<<B,INTEGER,d,b>>)
less_than
int_value (4)
add_class(C)
add_command("b", "A", <<["C", "INTEGER"]>>)
add_query("D", "A", <<["a", "d"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>, "b")
int_value (14)
bool_value (false)
int_value (30)
add_call_chain(<<B,a>>)
add_attribute("A", "B", "INTEGER")
add_attribute("C", "e", "B")
add_query("a", "c", <<["e", "D"], ["a", "B"]>>, "A")
greater_than
numerical_negation
add_class(B)
conjunction
greater_than
add_call_chain(<<A,C,D,c,B,c,B>>)
add_class(C)
add_attribute("INTEGER", "e", "BOOLEAN")
add_call_chain(<<c,b,a,D,C>>)
int_value (3)
add_query("B", "INTEGER", <<["INTEGER", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["A", "C"], ["D", "INTEGER"], ["b", "BOOLEAN"]>>, "b")
add_query("a", "d", <<["C", "BOOLEAN"], ["a", "INTEGER"], ["d", "C"], ["c", "BOOLEAN"], ["D", "B"], ["a", "INTEGER"], ["d", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["A", "INTEGER"]>>, "BOOLEAN")
generate_java_code
generate_java_code
generate_java_code
add_attribute("C", "INTEGER", "BOOLEAN")
add_call_chain(<<D,a,C,A,D,C>>)
bool_value (false)
generate_java_code
logical_negation
add_command("BOOLEAN", "D", <<["c", "BOOLEAN"], ["D", "INTEGER"], ["e", "d"], ["A", "D"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["b", "BOOLEAN"]>>)
add_query("b", "C", <<["C", "BOOLEAN"]>>, "d")
logical_negation
int_value (48)
disjunction
logical_negation
add_call_chain(<<d,a>>)
bool_value (true)
logical_negation
bool_value (false)
add_attribute("D", "a", "INTEGER")
add_call_chain(<<B,INTEGER,d,A,d,D,e,e>>)
bool_value (true)
add_attribute("c", "C", "A")
type_check
numerical_negation
add_call_chain(<<B,d,BOOLEAN,B,b>>)
numerical_negation
bool_value (false)
add_attribute("c", "C", "BOOLEAN")
type_check
add_attribute("D", "INTEGER", "BOOLEAN")
add_query("INTEGER", "B", <<["d", "A"], ["D", "BOOLEAN"], ["B", "a"], ["C", "BOOLEAN"], ["A", "BOOLEAN"]>>, "a")
int_value (19)
add_command("A", "A", <<["INTEGER", "INTEGER"], ["B", "INTEGER"]>>)
quotient
logical_negation
add_command("b", "b", <<["e", "BOOLEAN"], ["INTEGER", "INTEGER"], ["A", "BOOLEAN"]>>)
generate_java_code
conjunction
bool_value (false)
equals
generate_java_code
logical_negation
type_check
type_check
type_check
add_call_chain(<<BOOLEAN,D,B,D,d,c,D,C>>)
int_value (23)
add_call_chain(<<e,INTEGER,b,b,b,BOOLEAN>>)
add_call_chain(<<b,D,D,INTEGER,D,d,D,c>>)
add_class(D)
add_call_chain(<<B,C>>)
logical_negation
bool_value (false)
type_check
add_command("d", "D", <<["c", "BOOLEAN"], ["a", "INTEGER"], ["c", "d"], ["D", "INTEGER"], ["b", "d"], ["D", "BOOLEAN"], ["d", "a"], ["a", "C"], ["a", "BOOLEAN"]>>)
add_class(b)
add_command("d", "d", <<["INTEGER", "b"], ["b", "INTEGER"]>>)
add_query("C", "d", <<["C", "INTEGER"], ["BOOLEAN", "INTEGER"], ["B", "INTEGER"], ["e", "INTEGER"], ["D", "BOOLEAN"]>>, "a")
add_query("e", "D", <<["INTEGER", "b"], ["a", "BOOLEAN"], ["C", "B"], ["A", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["e", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "d"]>>, "A")
add_call_chain(<<B,C,B,A,INTEGER,C,A>>)
type_check
add_query("C", "D", <<["a", "BOOLEAN"], ["d", "INTEGER"], ["D", "INTEGER"], ["b", "BOOLEAN"], ["e", "b"], ["e", "INTEGER"], ["B", "INTEGER"]>>, "b")
add_call_chain(<<d,C,b,b,D,BOOLEAN,INTEGER>>)
int_value (48)
disjunction
numerical_negation
add_call_chain(<<D,B,INTEGER>>)
add_attribute("B", "BOOLEAN", "b")
add_class(c)
numerical_negation
add_class(d)
add_call_chain(<<D>>)
add_command("a", "a", <<["A", "INTEGER"], ["c", "INTEGER"]>>)
greater_than
bool_value (false)
disjunction
multiplication
add_command("b", "C", <<["a", "D"], ["A", "INTEGER"]>>)
add_command("d", "A", <<["e", "INTEGER"], ["b", "INTEGER"], ["B", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
conjunction
bool_value (false)
int_value (33)
add_call_chain(<<b,A,e,B>>)
int_value (18)
subtraction
add_class(b)
disjunction
bool_value (true)
add_command("BOOLEAN", "D", <<["b", "INTEGER"]>>)
generate_java_code
numerical_negation
disjunction
add_call_chain(<<B>>)
generate_java_code
add_call_chain(<<BOOLEAN,D,C,d,b>>)
int_value (46)
logical_negation
add_attribute("d", "d", "INTEGER")
logical_negation
type_check
add_command("e", "A", <<["a", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "INTEGER"]>>)
int_value (21)
quotient
add_command("A", "b", <<["c", "D"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["a", "INTEGER"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["A", "INTEGER"]>>)
add_call_chain(<<B,B,D,e,c>>)
add_command("A", "D", <<["e", "c"], ["e", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "INTEGER"], ["b", "INTEGER"], ["d", "a"], ["d", "A"]>>)
add_call_chain(<<A,a,B,e,b,C,C,e>>)
add_command("d", "B", <<["a", "c"], ["C", "c"]>>)
type_check
bool_value (false)
