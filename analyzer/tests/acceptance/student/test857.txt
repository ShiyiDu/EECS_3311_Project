add_command("C", "A", <<["C", "INTEGER"], ["e", "BOOLEAN"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["D", "b"]>>)
add_command("B", "C", <<["D", "INTEGER"], ["a", "d"], ["d", "BOOLEAN"], ["D", "A"], ["B", "BOOLEAN"], ["D", "d"], ["d", "C"], ["e", "A"], ["a", "BOOLEAN"]>>)
bool_value (true)
addition
type_check
add_command("C", "c", <<["A", "INTEGER"], ["D", "INTEGER"], ["B", "A"], ["e", "BOOLEAN"], ["e", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["C", "INTEGER"], ["e", "BOOLEAN"], ["D", "c"]>>)
numerical_negation
type_check
generate_java_code
greater_than
add_call_chain(<<a,b,a,d,e,C,B,BOOLEAN>>)
bool_value (true)
generate_java_code
add_class(b)
add_call_chain(<<a,INTEGER,e>>)
multiplication
generate_java_code
conjunction
add_command("C", "INTEGER", <<["d", "BOOLEAN"], ["e", "INTEGER"], ["D", "e"], ["D", "BOOLEAN"], ["c", "BOOLEAN"], ["BOOLEAN", "D"], ["D", "BOOLEAN"]>>)
int_value (29)
add_command("A", "b", <<["b", "INTEGER"], ["c", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["d", "a"], ["BOOLEAN", "BOOLEAN"], ["B", "b"], ["a", "INTEGER"], ["A", "BOOLEAN"]>>)
add_call_chain(<<b,b,C,B,c,A,C,e,B>>)
add_call_chain(<<INTEGER,C,e,D,B,a,D,a,C>>)
add_call_chain(<<D,e,e,INTEGER,A,a,d,a>>)
int_value (18)
numerical_negation
logical_negation
add_call_chain(<<INTEGER,D,c,d>>)
add_attribute("A", "A", "INTEGER")
add_command("b", "d", <<["a", "BOOLEAN"], ["a", "INTEGER"], ["C", "a"], ["C", "D"]>>)
add_query("D", "INTEGER", <<["c", "INTEGER"], ["C", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "BOOLEAN"], ["INTEGER", "a"], ["BOOLEAN", "C"]>>, "A")
add_query("BOOLEAN", "B", <<["A", "BOOLEAN"], ["A", "INTEGER"], ["D", "INTEGER"], ["D", "B"], ["INTEGER", "INTEGER"], ["d", "BOOLEAN"]>>, "INTEGER")
logical_negation
add_command("A", "d", <<["A", "A"], ["B", "BOOLEAN"], ["B", "INTEGER"], ["C", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "INTEGER"]>>)
add_command("b", "INTEGER", <<["A", "INTEGER"], ["C", "INTEGER"]>>)
numerical_negation
add_query("BOOLEAN", "D", <<["d", "INTEGER"]>>, "B")
modulo
add_query("d", "D", <<["BOOLEAN", "e"], ["c", "INTEGER"], ["d", "INTEGER"], ["B", "INTEGER"], ["c", "BOOLEAN"], ["A", "INTEGER"], ["D", "BOOLEAN"]>>, "B")
type_check
add_class(INTEGER)
conjunction
logical_negation
int_value (17)
conjunction
logical_negation
bool_value (true)
add_query("D", "a", <<["b", "BOOLEAN"], ["D", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["B", "INTEGER"]>>, "A")
int_value (17)
add_command("C", "B", <<["D", "INTEGER"], ["A", "BOOLEAN"]>>)
bool_value (false)
int_value (8)
add_attribute("C", "D", "d")
bool_value (false)
add_attribute("A", "INTEGER", "A")
numerical_negation
bool_value (false)
logical_negation
int_value (4)
add_call_chain(<<BOOLEAN,C,a,D,C,C,INTEGER,c>>)
bool_value (true)
disjunction
add_query("BOOLEAN", "A", <<["D", "a"], ["INTEGER", "INTEGER"], ["A", "INTEGER"], ["C", "INTEGER"], ["BOOLEAN", "a"], ["d", "BOOLEAN"], ["a", "INTEGER"]>>, "c")
greater_than
bool_value (false)
generate_java_code
add_call_chain(<<C,b,d,B,D>>)
add_call_chain(<<C,BOOLEAN,D,INTEGER,a,c>>)
add_class(C)
less_than
disjunction
add_attribute("d", "INTEGER", "D")
int_value (22)
add_call_chain(<<a,INTEGER,b,B,A,A,d>>)
conjunction
generate_java_code
type_check
add_attribute("C", "D", "BOOLEAN")
logical_negation
addition
int_value (36)
add_command("A", "B", <<["C", "b"], ["BOOLEAN", "INTEGER"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "B"], ["A", "b"]>>)
bool_value (false)
disjunction
add_call_chain(<<INTEGER,BOOLEAN,B>>)
type_check
logical_negation
add_call_chain(<<B,b,D,a,B,C,D,c,A>>)
add_query("A", "c", <<["B", "e"], ["BOOLEAN", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "e"]>>, "d")
add_command("D", "INTEGER", <<["d", "INTEGER"], ["e", "BOOLEAN"], ["B", "INTEGER"], ["C", "BOOLEAN"], ["BOOLEAN", "A"], ["e", "BOOLEAN"]>>)
bool_value (true)
add_query("BOOLEAN", "BOOLEAN", <<["e", "D"], ["INTEGER", "INTEGER"], ["c", "d"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "D"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["A", "INTEGER"]>>, "C")
generate_java_code
subtraction
bool_value (false)
add_call_chain(<<b,A,INTEGER,c>>)
add_query("B", "e", <<["B", "INTEGER"], ["e", "c"], ["a", "B"], ["d", "b"], ["B", "INTEGER"], ["BOOLEAN", "INTEGER"], ["a", "BOOLEAN"], ["INTEGER", "a"], ["A", "e"]>>, "C")
add_call_chain(<<d,a>>)
int_value (10)
int_value (14)
multiplication
logical_negation
type_check
add_call_chain(<<D,d,D>>)
add_command("e", "d", <<["C", "INTEGER"]>>)
numerical_negation
type_check
add_attribute("C", "b", "d")
int_value (35)
add_call_chain(<<d,e,B,d,a,d,A>>)
add_command("b", "B", <<["D", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "a"], ["B", "D"], ["b", "INTEGER"]>>)
type_check
add_query("d", "B", <<["b", "D"], ["B", "INTEGER"], ["C", "b"], ["e", "A"], ["BOOLEAN", "b"], ["B", "INTEGER"], ["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "BOOLEAN"]>>, "INTEGER")
int_value (1)
int_value (41)
logical_negation
add_command("a", "D", <<["C", "INTEGER"], ["BOOLEAN", "INTEGER"], ["a", "INTEGER"], ["b", "INTEGER"], ["b", "BOOLEAN"]>>)
add_attribute("INTEGER", "B", "C")
numerical_negation
add_command("D", "D", <<["d", "BOOLEAN"], ["a", "INTEGER"], ["e", "INTEGER"]>>)
add_attribute("B", "A", "INTEGER")
add_attribute("d", "B", "BOOLEAN")
add_class(b)
bool_value (false)
add_command("d", "A", <<["C", "INTEGER"], ["e", "INTEGER"], ["b", "b"], ["a", "c"], ["b", "A"]>>)
logical_negation
disjunction
logical_negation
bool_value (true)
disjunction
add_call_chain(<<A>>)
numerical_negation
add_command("BOOLEAN", "c", <<["B", "BOOLEAN"], ["D", "BOOLEAN"]>>)
generate_java_code
generate_java_code
add_call_chain(<<b,b,A,c,b,a>>)
add_query("D", "c", <<["D", "A"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "INTEGER"]>>, "C")
add_command("BOOLEAN", "C", <<["A", "BOOLEAN"]>>)
add_attribute("INTEGER", "d", "C")
add_call_chain(<<C>>)
bool_value (true)
add_query("B", "C", <<["A", "INTEGER"], ["c", "c"], ["c", "a"], ["c", "INTEGER"], ["c", "BOOLEAN"]>>, "a")
add_call_chain(<<BOOLEAN,A,e,A,d,B,c,c>>)
add_call_chain(<<b,c,C,a,A,B,e>>)
add_call_chain(<<b,C,b>>)
add_call_chain(<<a,BOOLEAN,D,D,a,c,a>>)
bool_value (false)
less_than
int_value (33)
add_call_chain(<<A,b,e,D,e,A>>)
add_call_chain(<<A,c,c,B>>)
add_command("e", "A", <<["b", "c"]>>)
bool_value (true)
add_call_chain(<<e,C>>)
generate_java_code
quotient
numerical_negation
less_than
equals
bool_value (true)
type_check
add_attribute("BOOLEAN", "INTEGER", "INTEGER")
add_attribute("a", "e", "c")
add_command("B", "B", <<["b", "INTEGER"], ["B", "INTEGER"], ["e", "BOOLEAN"], ["c", "B"], ["d", "BOOLEAN"], ["a", "INTEGER"], ["b", "INTEGER"], ["BOOLEAN", "d"]>>)
add_query("C", "A", <<["BOOLEAN", "e"]>>, "d")
type_check
type_check
add_call_chain(<<D,A,c,d,C,b>>)
conjunction
add_command("b", "e", <<["c", "BOOLEAN"], ["BOOLEAN", "C"], ["e", "INTEGER"], ["e", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["A", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["INTEGER", "D"], ["C", "INTEGER"]>>)
multiplication
generate_java_code
bool_value (false)
disjunction
int_value (38)
add_call_chain(<<e,d>>)
add_call_chain(<<b,INTEGER,c,a,d,e,A,INTEGER>>)
numerical_negation
add_attribute("c", "a", "INTEGER")
type_check
addition
generate_java_code
type_check
generate_java_code
add_query("A", "C", <<["B", "INTEGER"], ["B", "d"], ["e", "INTEGER"], ["D", "INTEGER"]>>, "d")
logical_negation
type_check
generate_java_code
bool_value (true)
disjunction
bool_value (true)
add_command("C", "A", <<["C", "INTEGER"], ["b", "INTEGER"], ["c", "INTEGER"], ["b", "b"]>>)
add_command("a", "C", <<["A", "INTEGER"], ["b", "BOOLEAN"]>>)
add_call_chain(<<c,c,C,B,B,a,INTEGER,a,b>>)
int_value (21)
generate_java_code
modulo
generate_java_code
add_attribute("e", "e", "BOOLEAN")
add_call_chain(<<C,b,B,a>>)
disjunction
bool_value (true)
add_query("D", "A", <<["D", "BOOLEAN"], ["B", "b"], ["D", "BOOLEAN"], ["D", "a"], ["c", "B"], ["A", "c"], ["b", "BOOLEAN"], ["D", "D"]>>, "d")
add_query("D", "B", <<["b", "BOOLEAN"], ["INTEGER", "INTEGER"], ["C", "BOOLEAN"], ["BOOLEAN", "e"], ["b", "INTEGER"], ["b", "BOOLEAN"], ["b", "INTEGER"]>>, "a")
numerical_negation
add_attribute("B", "D", "INTEGER")
generate_java_code
equals
add_command("A", "D", <<["d", "a"], ["B", "INTEGER"], ["d", "INTEGER"], ["a", "BOOLEAN"], ["B", "D"], ["C", "INTEGER"]>>)
int_value (38)
add_class(c)
add_attribute("b", "B", "INTEGER")
generate_java_code
add_call_chain(<<B,D,A>>)
logical_negation
add_query("BOOLEAN", "c", <<["a", "INTEGER"], ["A", "BOOLEAN"], ["a", "A"], ["e", "b"], ["B", "INTEGER"]>>, "C")
add_call_chain(<<a,BOOLEAN,b,e,d,C,A,d,a>>)
less_than
int_value (34)
conjunction
add_call_chain(<<A,A,a,d,A,d>>)
add_attribute("d", "A", "BOOLEAN")
bool_value (false)
add_query("C", "C", <<["c", "C"]>>, "C")
bool_value (true)
add_attribute("B", "b", "INTEGER")
bool_value (false)
add_query("D", "e", <<["A", "BOOLEAN"], ["D", "C"], ["INTEGER", "INTEGER"]>>, "B")
numerical_negation
type_check
numerical_negation
generate_java_code
greater_than
add_attribute("C", "c", "BOOLEAN")
numerical_negation
less_than
add_class(a)
numerical_negation
multiplication
int_value (49)
add_command("B", "BOOLEAN", <<["c", "e"], ["c", "INTEGER"], ["b", "BOOLEAN"], ["a", "INTEGER"], ["a", "BOOLEAN"], ["BOOLEAN", "e"], ["d", "BOOLEAN"], ["C", "d"], ["d", "INTEGER"]>>)
add_attribute("d", "a", "INTEGER")
bool_value (true)
subtraction
add_command("C", "c", <<["D", "INTEGER"], ["c", "BOOLEAN"]>>)
add_query("B", "B", <<["e", "INTEGER"], ["d", "b"], ["c", "INTEGER"], ["D", "INTEGER"], ["A", "d"], ["INTEGER", "INTEGER"], ["C", "d"], ["D", "C"]>>, "C")
add_query("B", "B", <<["A", "C"]>>, "a")
less_than
add_command("C", "B", <<["b", "BOOLEAN"]>>)
subtraction
type_check
add_call_chain(<<D,D,D,c,b,C,C>>)
quotient
int_value (29)
bool_value (true)
bool_value (true)
add_call_chain(<<C,C>>)
add_query("A", "D", <<["D", "INTEGER"]>>, "b")
add_command("b", "d", <<["e", "D"]>>)
add_call_chain(<<C,C,C,D,e,C,A>>)
add_class(B)
bool_value (true)
add_query("B", "a", <<["D", "INTEGER"], ["INTEGER", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "INTEGER"], ["b", "BOOLEAN"], ["B", "BOOLEAN"]>>, "C")
numerical_negation
generate_java_code
logical_negation
add_attribute("A", "a", "BOOLEAN")
quotient
add_command("d", "B", <<["C", "INTEGER"]>>)
int_value (13)
bool_value (true)
numerical_negation
add_attribute("A", "b", "INTEGER")
int_value (26)
add_call_chain(<<B,C,e>>)
bool_value (true)
add_query("A", "a", <<["c", "d"], ["A", "INTEGER"], ["c", "e"], ["A", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "BOOLEAN"]>>, "e")
add_class(A)
int_value (31)
generate_java_code
int_value (29)
