bool_value (false)
add_call_chain(<<C,c,a,B,a,D>>)
add_class(C)
add_query("D", "a", <<["B", "INTEGER"], ["c", "INTEGER"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["B", "BOOLEAN"], ["e", "e"], ["INTEGER", "INTEGER"]>>, "BOOLEAN")
add_call_chain(<<C,BOOLEAN,d,INTEGER,D,c,C,D,b>>)
add_call_chain(<<c,C,b,A,e,B>>)
generate_java_code
logical_negation
add_query("B", "B", <<["a", "INTEGER"], ["c", "INTEGER"], ["B", "INTEGER"], ["a", "BOOLEAN"], ["C", "BOOLEAN"], ["INTEGER", "c"], ["b", "BOOLEAN"], ["C", "BOOLEAN"]>>, "A")
add_class(e)
add_query("C", "INTEGER", <<["C", "D"], ["C", "INTEGER"], ["BOOLEAN", "INTEGER"], ["INTEGER", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "INTEGER"], ["A", "D"]>>, "C")
add_query("A", "D", <<["c", "D"], ["e", "INTEGER"], ["b", "e"], ["B", "BOOLEAN"]>>, "B")
add_class(INTEGER)
numerical_negation
conjunction
greater_than
int_value (28)
add_call_chain(<<D,a,c,a,B,A>>)
disjunction
numerical_negation
int_value (3)
add_call_chain(<<d,D,a,d,A,BOOLEAN,D>>)
add_command("B", "BOOLEAN", <<["D", "INTEGER"], ["BOOLEAN", "e"]>>)
add_command("b", "a", <<["B", "d"], ["d", "INTEGER"], ["c", "B"], ["D", "INTEGER"]>>)
bool_value (true)
add_command("D", "C", <<["C", "BOOLEAN"], ["d", "BOOLEAN"]>>)
greater_than
int_value (44)
add_attribute("C", "b", "INTEGER")
generate_java_code
multiplication
add_attribute("d", "e", "D")
bool_value (false)
add_call_chain(<<INTEGER,A,D,a,D,A,INTEGER,a,C>>)
disjunction
add_query("a", "INTEGER", <<["A", "C"], ["c", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "A"], ["b", "B"], ["a", "BOOLEAN"]>>, "D")
add_class(A)
add_call_chain(<<e,B,A,c,c>>)
add_class(a)
conjunction
bool_value (false)
add_call_chain(<<B,D,INTEGER,d,c>>)
add_command("a", "D", <<["c", "BOOLEAN"], ["B", "INTEGER"], ["B", "INTEGER"], ["a", "BOOLEAN"], ["INTEGER", "e"], ["c", "BOOLEAN"]>>)
add_command("C", "c", <<["c", "B"]>>)
add_query("B", "A", <<["D", "BOOLEAN"], ["C", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>, "B")
add_class(e)
numerical_negation
add_attribute("e", "C", "b")
disjunction
add_command("e", "a", <<["A", "BOOLEAN"], ["A", "INTEGER"]>>)
numerical_negation
numerical_negation
add_call_chain(<<A,D,A,BOOLEAN,e,e,d>>)
greater_than
int_value (33)
int_value (38)
multiplication
type_check
int_value (44)
add_attribute("B", "c", "B")
disjunction
disjunction
generate_java_code
bool_value (false)
add_call_chain(<<BOOLEAN>>)
bool_value (true)
add_call_chain(<<A,BOOLEAN,b,D,D>>)
add_command("C", "d", <<["b", "INTEGER"], ["B", "INTEGER"], ["c", "INTEGER"], ["e", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "D"], ["B", "D"], ["c", "INTEGER"], ["a", "BOOLEAN"]>>)
type_check
greater_than
add_command("C", "d", <<["A", "INTEGER"], ["C", "BOOLEAN"], ["a", "A"]>>)
add_query("c", "a", <<["B", "BOOLEAN"], ["e", "B"], ["A", "INTEGER"], ["A", "b"]>>, "e")
add_call_chain(<<d,d,A,e,BOOLEAN,d,D,A>>)
logical_negation
add_command("B", "B", <<["B", "INTEGER"], ["D", "INTEGER"], ["b", "INTEGER"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "c"], ["C", "b"]>>)
add_call_chain(<<D,BOOLEAN,a,c,C,d,d,a>>)
logical_negation
type_check
add_class(B)
add_class(A)
logical_negation
add_attribute("c", "B", "d")
logical_negation
add_command("a", "C", <<["a", "INTEGER"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "INTEGER"], ["a", "BOOLEAN"], ["D", "e"], ["C", "BOOLEAN"], ["e", "BOOLEAN"]>>)
type_check
add_call_chain(<<INTEGER,C>>)
add_attribute("c", "b", "INTEGER")
disjunction
add_command("C", "C", <<["C", "INTEGER"], ["C", "d"]>>)
bool_value (true)
generate_java_code
generate_java_code
bool_value (true)
type_check
bool_value (false)
add_query("a", "c", <<["b", "C"], ["C", "e"], ["d", "BOOLEAN"], ["INTEGER", "INTEGER"], ["B", "INTEGER"], ["D", "INTEGER"], ["e", "INTEGER"]>>, "c")
add_command("e", "d", <<["c", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "INTEGER"], ["b", "BOOLEAN"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "D"], ["e", "BOOLEAN"]>>)
int_value (35)
numerical_negation
type_check
add_query("C", "D", <<["INTEGER", "d"], ["BOOLEAN", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["D", "BOOLEAN"]>>, "e")
numerical_negation
greater_than
type_check
add_command("A", "B", <<["B", "INTEGER"], ["A", "a"], ["D", "INTEGER"], ["INTEGER", "INTEGER"], ["BOOLEAN", "A"], ["B", "BOOLEAN"], ["b", "BOOLEAN"]>>)
add_attribute("INTEGER", "C", "INTEGER")
add_command("D", "A", <<["B", "INTEGER"], ["b", "INTEGER"], ["b", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "INTEGER"], ["A", "INTEGER"], ["A", "c"]>>)
add_call_chain(<<a,B,d,B,D,INTEGER,b>>)
add_call_chain(<<e>>)
bool_value (true)
add_query("C", "B", <<["B", "A"], ["A", "A"]>>, "BOOLEAN")
int_value (5)
add_query("a", "C", <<["C", "INTEGER"], ["A", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "INTEGER"], ["e", "d"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["BOOLEAN", "A"], ["a", "BOOLEAN"]>>, "D")
add_command("D", "B", <<["d", "INTEGER"], ["d", "INTEGER"], ["a", "INTEGER"], ["c", "INTEGER"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["BOOLEAN", "e"], ["b", "INTEGER"]>>)
add_call_chain(<<D,B,BOOLEAN>>)
add_query("A", "a", <<["a", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "e"], ["c", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["INTEGER", "B"]>>, "B")
add_command("e", "d", <<["d", "BOOLEAN"], ["A", "INTEGER"], ["d", "INTEGER"]>>)
generate_java_code
multiplication
greater_than
add_query("e", "a", <<["B", "INTEGER"], ["b", "d"], ["D", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "INTEGER"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>, "d")
int_value (2)
bool_value (false)
numerical_negation
logical_negation
add_call_chain(<<B,C,d>>)
generate_java_code
add_call_chain(<<c>>)
add_call_chain(<<e,d,b,A,d,BOOLEAN,D,a>>)
generate_java_code
add_call_chain(<<C,A,C,A,D,c,d,B>>)
add_call_chain(<<D,B,INTEGER,BOOLEAN,B,a>>)
logical_negation
add_attribute("A", "D", "INTEGER")
type_check
logical_negation
add_call_chain(<<A,C,A,b,b,A,c,c>>)
add_class(B)
modulo
add_call_chain(<<D,A,D,d,b>>)
conjunction
int_value (20)
bool_value (true)
add_call_chain(<<INTEGER,C,C,INTEGER,c,INTEGER,B,b,a>>)
bool_value (true)
logical_negation
add_command("a", "C", <<["BOOLEAN", "B"], ["C", "INTEGER"], ["BOOLEAN", "B"], ["C", "c"], ["c", "INTEGER"], ["b", "BOOLEAN"], ["C", "b"], ["B", "BOOLEAN"]>>)
add_command("B", "BOOLEAN", <<["C", "INTEGER"]>>)
logical_negation
int_value (19)
numerical_negation
logical_negation
type_check
equals
numerical_negation
numerical_negation
add_command("d", "a", <<["B", "BOOLEAN"], ["d", "a"]>>)
add_call_chain(<<BOOLEAN,BOOLEAN,D,d,a>>)
add_call_chain(<<a>>)
int_value (36)
int_value (47)
logical_negation
add_call_chain(<<A,B,B,D,b,c>>)
addition
type_check
add_call_chain(<<b,d>>)
int_value (16)
generate_java_code
add_command("B", "a", <<["D", "INTEGER"], ["C", "INTEGER"], ["d", "INTEGER"], ["d", "BOOLEAN"], ["a", "BOOLEAN"]>>)
add_command("e", "A", <<["D", "INTEGER"], ["BOOLEAN", "c"], ["e", "D"]>>)
add_call_chain(<<d,e,D,D,D,b>>)
add_query("B", "C", <<["a", "b"], ["c", "B"]>>, "C")
int_value (3)
add_attribute("e", "B", "BOOLEAN")
add_command("B", "B", <<["B", "INTEGER"], ["e", "BOOLEAN"], ["A", "INTEGER"]>>)
add_query("INTEGER", "a", <<["B", "BOOLEAN"], ["d", "INTEGER"], ["BOOLEAN", "a"], ["a", "a"], ["C", "e"]>>, "INTEGER")
add_query("a", "a", <<["d", "c"], ["a", "a"], ["e", "INTEGER"], ["A", "BOOLEAN"], ["a", "a"], ["a", "BOOLEAN"], ["b", "C"], ["D", "INTEGER"]>>, "C")
add_call_chain(<<D,a,a,B,b,a,B>>)
generate_java_code
disjunction
add_call_chain(<<e,INTEGER,C>>)
logical_negation
add_command("C", "D", <<["b", "B"], ["a", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "C"], ["D", "a"]>>)
numerical_negation
add_call_chain(<<A,A,A,d,A,d,A>>)
add_call_chain(<<B,a,BOOLEAN,e,b>>)
add_call_chain(<<d,A,D,B,a,d>>)
subtraction
add_command("D", "B", <<["d", "C"], ["B", "BOOLEAN"], ["a", "c"], ["e", "INTEGER"], ["a", "C"], ["BOOLEAN", "B"], ["b", "BOOLEAN"], ["A", "INTEGER"]>>)
bool_value (true)
logical_negation
add_call_chain(<<e,B,D,A>>)
add_command("b", "A", <<["D", "C"], ["B", "b"], ["C", "BOOLEAN"], ["INTEGER", "C"], ["a", "INTEGER"]>>)
add_call_chain(<<b,e,d,D,a,A,e,D,a>>)
type_check
add_class(a)
conjunction
add_command("b", "D", <<["C", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "BOOLEAN"]>>)
disjunction
numerical_negation
disjunction
modulo
add_call_chain(<<C,A,A>>)
bool_value (true)
add_call_chain(<<C,e,B,B>>)
bool_value (true)
numerical_negation
add_call_chain(<<B,C,b,D,e>>)
bool_value (false)
int_value (6)
logical_negation
add_call_chain(<<B,a,D,B,D,b>>)
greater_than
bool_value (true)
disjunction
int_value (31)
multiplication
add_call_chain(<<B,D,A>>)
add_query("B", "BOOLEAN", <<["d", "A"], ["a", "C"], ["d", "INTEGER"], ["D", "INTEGER"], ["B", "INTEGER"], ["A", "c"]>>, "b")
add_class(B)
add_command("B", "a", <<["d", "BOOLEAN"], ["e", "BOOLEAN"]>>)
add_call_chain(<<C,B,d>>)
add_attribute("c", "B", "INTEGER")
bool_value (true)
