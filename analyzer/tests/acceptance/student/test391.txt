add_command("D", "d", <<["e", "BOOLEAN"], ["c", "BOOLEAN"], ["b", "e"]>>)
generate_java_code
add_call_chain(<<e>>)
add_command("e", "b", <<["C", "BOOLEAN"], ["A", "INTEGER"], ["e", "INTEGER"], ["c", "INTEGER"], ["A", "d"], ["BOOLEAN", "C"]>>)
add_call_chain(<<c,b,b,C>>)
disjunction
add_call_chain(<<b,BOOLEAN,B,e,D,b,e>>)
numerical_negation
add_class(C)
add_command("BOOLEAN", "c", <<["d", "C"], ["a", "c"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["d", "INTEGER"], ["A", "INTEGER"], ["D", "INTEGER"], ["e", "D"], ["d", "C"]>>)
type_check
add_call_chain(<<B,B,b,C>>)
add_query("c", "D", <<["d", "INTEGER"], ["B", "A"]>>, "B")
logical_negation
add_call_chain(<<INTEGER,d,e,C,d,D,c>>)
logical_negation
bool_value (false)
type_check
int_value (21)
add_call_chain(<<D,b,b,d>>)
numerical_negation
type_check
logical_negation
add_attribute("A", "A", "BOOLEAN")
add_query("B", "a", <<["B", "INTEGER"], ["C", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "C"], ["e", "INTEGER"], ["b", "e"]>>, "A")
type_check
bool_value (false)
add_call_chain(<<d,d>>)
numerical_negation
int_value (18)
add_class(D)
int_value (4)
logical_negation
generate_java_code
type_check
type_check
numerical_negation
int_value (12)
type_check
add_call_chain(<<INTEGER,INTEGER,d,b>>)
generate_java_code
add_command("D", "e", <<["B", "INTEGER"], ["A", "A"], ["d", "BOOLEAN"], ["b", "INTEGER"], ["B", "INTEGER"], ["B", "c"]>>)
add_command("D", "e", <<["D", "INTEGER"], ["d", "INTEGER"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "D"]>>)
add_call_chain(<<C,C,c,d,C,BOOLEAN,C>>)
add_call_chain(<<C,e,b,A,c,C,C,B,c>>)
add_command("A", "D", <<["b", "BOOLEAN"]>>)
numerical_negation
int_value (15)
add_class(a)
add_query("e", "INTEGER", <<["BOOLEAN", "INTEGER"], ["c", "C"], ["e", "A"], ["a", "INTEGER"], ["B", "INTEGER"], ["c", "INTEGER"], ["a", "b"]>>, "c")
int_value (11)
bool_value (true)
subtraction
add_query("C", "BOOLEAN", <<["D", "B"], ["D", "BOOLEAN"]>>, "C")
logical_negation
add_call_chain(<<d,d,c,INTEGER,c,C>>)
addition
int_value (10)
generate_java_code
add_attribute("c", "c", "C")
add_command("c", "d", <<["b", "A"], ["A", "INTEGER"], ["BOOLEAN", "INTEGER"], ["c", "BOOLEAN"]>>)
int_value (26)
bool_value (true)
type_check
add_attribute("a", "A", "BOOLEAN")
modulo
bool_value (true)
add_command("D", "a", <<["e", "INTEGER"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["A", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "C"], ["e", "BOOLEAN"]>>)
add_query("e", "a", <<["b", "a"], ["D", "INTEGER"], ["B", "c"], ["C", "INTEGER"], ["a", "INTEGER"]>>, "INTEGER")
add_attribute("e", "d", "D")
add_command("D", "B", <<["C", "A"], ["e", "INTEGER"], ["D", "INTEGER"]>>)
add_command("B", "b", <<["INTEGER", "INTEGER"]>>)
add_query("b", "d", <<["a", "a"], ["d", "INTEGER"], ["e", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "INTEGER"]>>, "a")
quotient
numerical_negation
add_attribute("B", "D", "INTEGER")
modulo
logical_negation
add_attribute("D", "A", "A")
add_call_chain(<<C,e,a,BOOLEAN,b>>)
add_attribute("a", "INTEGER", "INTEGER")
int_value (32)
add_call_chain(<<e>>)
add_attribute("A", "A", "BOOLEAN")
type_check
logical_negation
bool_value (true)
add_query("D", "a", <<["b", "d"], ["d", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "INTEGER"], ["d", "INTEGER"]>>, "B")
logical_negation
greater_than
add_call_chain(<<B,A,C>>)
int_value (5)
add_call_chain(<<D>>)
bool_value (false)
add_command("e", "d", <<["B", "INTEGER"], ["C", "INTEGER"], ["b", "A"], ["a", "INTEGER"], ["B", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["c", "BOOLEAN"], ["c", "INTEGER"]>>)
add_class(B)
less_than
int_value (34)
int_value (18)
bool_value (false)
numerical_negation
add_call_chain(<<A>>)
add_command("d", "A", <<["c", "INTEGER"], ["INTEGER", "C"], ["A", "BOOLEAN"], ["A", "A"]>>)
int_value (44)
generate_java_code
add_attribute("b", "B", "d")
add_command("D", "e", <<["a", "e"], ["B", "INTEGER"], ["d", "BOOLEAN"], ["D", "A"]>>)
equals
generate_java_code
add_query("e", "A", <<["BOOLEAN", "INTEGER"], ["e", "d"], ["INTEGER", "D"]>>, "e")
type_check
numerical_negation
numerical_negation
disjunction
add_call_chain(<<e,A,b,c,A,c,B>>)
add_attribute("e", "a", "d")
type_check
add_attribute("INTEGER", "D", "BOOLEAN")
add_query("c", "INTEGER", <<["e", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "e"], ["C", "d"]>>, "A")
add_query("D", "a", <<["c", "INTEGER"], ["b", "A"], ["BOOLEAN", "a"], ["D", "INTEGER"], ["B", "INTEGER"], ["B", "BOOLEAN"], ["b", "b"], ["A", "INTEGER"]>>, "D")
type_check
int_value (18)
add_query("c", "b", <<["c", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "a"], ["BOOLEAN", "INTEGER"]>>, "c")
add_command("a", "C", <<["c", "BOOLEAN"], ["c", "D"], ["C", "INTEGER"], ["D", "INTEGER"], ["A", "B"], ["a", "e"], ["D", "INTEGER"]>>)
logical_negation
add_call_chain(<<e>>)
add_call_chain(<<C,b>>)
quotient
add_query("A", "e", <<["b", "INTEGER"], ["A", "e"], ["a", "b"], ["B", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "C"], ["e", "e"], ["d", "INTEGER"]>>, "b")
conjunction
bool_value (false)
add_attribute("A", "A", "INTEGER")
subtraction
bool_value (true)
add_call_chain(<<A,c,D,a,B,D>>)
add_call_chain(<<e,C,D,D,c,D>>)
add_call_chain(<<B,D>>)
logical_negation
add_command("C", "c", <<["BOOLEAN", "INTEGER"], ["a", "INTEGER"], ["D", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "INTEGER"], ["B", "INTEGER"], ["C", "BOOLEAN"]>>)
bool_value (false)
int_value (5)
int_value (15)
logical_negation
addition
add_query("B", "a", <<["D", "BOOLEAN"], ["d", "INTEGER"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["e", "INTEGER"], ["e", "INTEGER"]>>, "INTEGER")
add_call_chain(<<C,A,C,d,d,B,D>>)
add_query("INTEGER", "e", <<["A", "b"], ["C", "A"], ["d", "BOOLEAN"], ["D", "INTEGER"], ["D", "e"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "INTEGER"]>>, "a")
add_command("D", "e", <<["C", "BOOLEAN"], ["e", "INTEGER"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["e", "INTEGER"], ["A", "BOOLEAN"], ["INTEGER", "INTEGER"], ["A", "BOOLEAN"]>>)
subtraction
generate_java_code
int_value (44)
generate_java_code
add_call_chain(<<A,d,c>>)
logical_negation
int_value (24)
generate_java_code
numerical_negation
conjunction
type_check
add_call_chain(<<BOOLEAN,B,a>>)
add_attribute("B", "a", "d")
add_command("C", "A", <<["C", "BOOLEAN"], ["A", "A"], ["c", "d"], ["INTEGER", "INTEGER"], ["e", "INTEGER"], ["a", "INTEGER"], ["D", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "BOOLEAN"]>>)
add_call_chain(<<C,b>>)
int_value (39)
conjunction
quotient
add_call_chain(<<C,A>>)
generate_java_code
logical_negation
add_query("C", "d", <<["c", "c"], ["A", "C"], ["c", "A"], ["C", "C"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["INTEGER", "INTEGER"], ["b", "B"], ["A", "BOOLEAN"]>>, "B")
add_query("A", "a", <<["a", "D"], ["a", "D"], ["B", "BOOLEAN"], ["e", "B"], ["b", "INTEGER"], ["B", "INTEGER"]>>, "INTEGER")
generate_java_code
add_attribute("A", "C", "BOOLEAN")
numerical_negation
add_call_chain(<<B,a,D,e,e,e,BOOLEAN>>)
logical_negation
generate_java_code
add_attribute("d", "A", "INTEGER")
type_check
add_command("A", "C", <<["e", "B"], ["D", "A"]>>)
generate_java_code
add_call_chain(<<B,D,INTEGER,A,b,a>>)
int_value (21)
bool_value (false)
add_attribute("e", "a", "b")
add_command("b", "a", <<["BOOLEAN", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "C"], ["B", "B"], ["c", "A"], ["b", "a"], ["B", "a"], ["a", "a"]>>)
bool_value (false)
add_command("C", "c", <<["b", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
add_call_chain(<<B,d,D,D,a,a,C,b>>)
add_command("b", "c", <<["BOOLEAN", "BOOLEAN"], ["c", "INTEGER"], ["A", "INTEGER"], ["A", "INTEGER"], ["C", "INTEGER"], ["c", "e"], ["D", "INTEGER"], ["a", "C"], ["D", "BOOLEAN"]>>)
logical_negation
logical_negation
add_class(C)
add_query("BOOLEAN", "INTEGER", <<["a", "c"], ["B", "INTEGER"], ["B", "BOOLEAN"]>>, "b")
add_command("A", "a", <<["A", "INTEGER"], ["c", "INTEGER"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["BOOLEAN", "INTEGER"], ["a", "BOOLEAN"], ["D", "a"], ["C", "INTEGER"], ["INTEGER", "INTEGER"]>>)
multiplication
bool_value (false)
int_value (27)
add_call_chain(<<A,b,a,C,C,a,c>>)
int_value (13)
logical_negation
int_value (27)
add_command("b", "A", <<["b", "INTEGER"], ["D", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "INTEGER"], ["b", "INTEGER"]>>)
add_command("A", "e", <<["D", "INTEGER"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["C", "D"], ["c", "INTEGER"], ["D", "c"], ["B", "INTEGER"]>>)
bool_value (true)
int_value (41)
int_value (44)
subtraction
generate_java_code
modulo
add_attribute("INTEGER", "BOOLEAN", "c")
int_value (43)
addition
add_class(d)
numerical_negation
add_class(A)
add_call_chain(<<d,a,c,B,d,B,C,A>>)
add_query("e", "a", <<["d", "INTEGER"], ["c", "c"], ["c", "BOOLEAN"], ["B", "INTEGER"], ["e", "INTEGER"], ["B", "BOOLEAN"], ["c", "BOOLEAN"]>>, "c")
conjunction
bool_value (false)
add_call_chain(<<C,a,C,b>>)
add_call_chain(<<e,c,c,e,d>>)
add_query("A", "A", <<["c", "D"], ["d", "BOOLEAN"]>>, "B")
int_value (20)
add_call_chain(<<A,c,D,c,C>>)
generate_java_code
add_call_chain(<<e,C,A,c,INTEGER,A>>)
int_value (31)
add_call_chain(<<a,e,D>>)
numerical_negation
int_value (14)
add_call_chain(<<B,C,INTEGER,c>>)
numerical_negation
int_value (46)
type_check
equals
type_check
generate_java_code
add_call_chain(<<D,a,e,A>>)
less_than
less_than
add_command("B", "b", <<["b", "INTEGER"], ["C", "INTEGER"], ["c", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["e", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "A"], ["D", "BOOLEAN"], ["A", "BOOLEAN"]>>)
type_check
add_attribute("D", "B", "INTEGER")
greater_than
add_class(c)
add_attribute("e", "c", "BOOLEAN")
bool_value (true)
add_call_chain(<<c,INTEGER,a>>)
add_query("a", "c", <<["d", "INTEGER"], ["e", "INTEGER"], ["C", "BOOLEAN"], ["e", "BOOLEAN"]>>, "d")
add_class(C)
type_check
add_call_chain(<<C,d,C,B,B,b,D,C>>)
