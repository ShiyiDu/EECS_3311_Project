type_check
add_call_chain(<<d,b,D,C,d,e,B,b>>)
int_value (31)
addition
add_call_chain(<<INTEGER,C>>)
add_call_chain(<<D,B,d,BOOLEAN,A,C>>)
int_value (41)
int_value (16)
add_class(C)
int_value (32)
add_query("B", "c", <<["d", "D"], ["a", "BOOLEAN"], ["C", "a"], ["d", "D"], ["b", "D"], ["d", "BOOLEAN"]>>, "B")
equals
add_attribute("INTEGER", "B", "BOOLEAN")
logical_negation
add_call_chain(<<a,A,A,e,d>>)
logical_negation
equals
bool_value (true)
add_class(BOOLEAN)
multiplication
add_call_chain(<<D,c,D,INTEGER,d,d,b,d,INTEGER>>)
int_value (5)
add_query("C", "B", <<["a", "BOOLEAN"], ["C", "INTEGER"], ["b", "INTEGER"]>>, "a")
int_value (35)
add_class(a)
add_call_chain(<<d,D,B,BOOLEAN>>)
add_command("B", "e", <<["a", "A"], ["D", "BOOLEAN"], ["C", "B"], ["INTEGER", "C"], ["BOOLEAN", "INTEGER"], ["a", "BOOLEAN"]>>)
add_command("c", "INTEGER", <<["B", "INTEGER"], ["D", "BOOLEAN"]>>)
add_attribute("b", "D", "INTEGER")
bool_value (false)
logical_negation
add_query("D", "a", <<["a", "INTEGER"], ["c", "B"], ["D", "C"], ["e", "BOOLEAN"], ["INTEGER", "INTEGER"]>>, "D")
add_call_chain(<<a,a,b,a,C,c,A,BOOLEAN,d>>)
add_command("C", "a", <<["C", "INTEGER"], ["INTEGER", "A"], ["a", "INTEGER"]>>)
conjunction
add_attribute("C", "D", "c")
add_command("b", "B", <<["D", "BOOLEAN"], ["d", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["b", "INTEGER"], ["A", "INTEGER"], ["INTEGER", "INTEGER"], ["a", "BOOLEAN"], ["e", "INTEGER"]>>)
add_attribute("b", "c", "BOOLEAN")
add_class(e)
logical_negation
subtraction
logical_negation
add_command("D", "c", <<["D", "INTEGER"], ["b", "a"], ["B", "c"], ["A", "BOOLEAN"], ["D", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>)
generate_java_code
generate_java_code
add_command("C", "B", <<["d", "BOOLEAN"], ["D", "b"], ["C", "INTEGER"], ["e", "INTEGER"], ["d", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "A"], ["B", "INTEGER"]>>)
add_class(A)
add_call_chain(<<c,c,e,a,C,INTEGER,a>>)
bool_value (false)
type_check
add_query("b", "A", <<["e", "B"], ["B", "c"], ["a", "b"], ["c", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "A"]>>, "e")
generate_java_code
type_check
add_command("C", "B", <<["C", "d"], ["A", "INTEGER"], ["a", "C"], ["a", "BOOLEAN"], ["b", "a"], ["c", "BOOLEAN"], ["c", "INTEGER"]>>)
bool_value (true)
add_attribute("b", "A", "C")
add_call_chain(<<INTEGER,e,b,d,a,B,e,a>>)
add_class(e)
int_value (13)
add_attribute("C", "c", "BOOLEAN")
add_attribute("A", "d", "D")
add_attribute("C", "A", "BOOLEAN")
add_class(c)
add_command("B", "D", <<["e", "A"], ["B", "INTEGER"], ["D", "INTEGER"], ["b", "INTEGER"], ["C", "B"], ["c", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "BOOLEAN"]>>)
int_value (28)
equals
numerical_negation
int_value (45)
disjunction
int_value (34)
logical_negation
add_attribute("c", "d", "C")
add_command("d", "C", <<["D", "BOOLEAN"], ["C", "INTEGER"], ["c", "INTEGER"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["b", "INTEGER"], ["c", "B"], ["B", "d"]>>)
type_check
equals
type_check
int_value (45)
add_call_chain(<<c,A,c,e>>)
add_class(d)
add_attribute("b", "c", "B")
add_attribute("BOOLEAN", "A", "c")
generate_java_code
bool_value (true)
add_attribute("D", "A", "INTEGER")
add_call_chain(<<A,INTEGER,d,B>>)
add_attribute("B", "B", "INTEGER")
bool_value (true)
type_check
bool_value (false)
add_command("BOOLEAN", "d", <<["b", "c"], ["b", "BOOLEAN"], ["e", "D"]>>)
add_call_chain(<<A,BOOLEAN,A,b,D,A,D,b>>)
logical_negation
bool_value (true)
add_command("INTEGER", "A", <<["c", "D"], ["c", "D"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["b", "BOOLEAN"], ["A", "D"], ["C", "INTEGER"], ["e", "INTEGER"], ["D", "INTEGER"]>>)
int_value (4)
logical_negation
add_call_chain(<<e,D,a>>)
add_query("B", "B", <<["b", "BOOLEAN"], ["BOOLEAN", "a"]>>, "A")
generate_java_code
bool_value (true)
numerical_negation
add_command("C", "A", <<["D", "BOOLEAN"], ["c", "INTEGER"], ["e", "INTEGER"], ["e", "A"], ["A", "a"], ["d", "BOOLEAN"], ["D", "INTEGER"], ["C", "INTEGER"]>>)
add_attribute("A", "e", "BOOLEAN")
type_check
add_class(B)
numerical_negation
numerical_negation
add_class(C)
add_command("A", "e", <<["e", "D"], ["e", "INTEGER"], ["e", "b"], ["a", "BOOLEAN"], ["C", "B"], ["c", "INTEGER"], ["D", "INTEGER"], ["B", "INTEGER"]>>)
add_query("D", "A", <<["b", "D"], ["b", "INTEGER"], ["D", "a"], ["b", "BOOLEAN"], ["C", "a"], ["e", "BOOLEAN"], ["INTEGER", "b"], ["A", "INTEGER"], ["C", "INTEGER"]>>, "D")
logical_negation
bool_value (false)
type_check
add_attribute("C", "a", "a")
conjunction
quotient
greater_than
add_query("B", "b", <<["c", "c"], ["B", "D"], ["B", "INTEGER"]>>, "a")
generate_java_code
add_call_chain(<<BOOLEAN,C,INTEGER,b,e,d>>)
int_value (15)
add_attribute("B", "A", "C")
add_call_chain(<<b,C,A,c,A,BOOLEAN,C,A>>)
add_attribute("a", "A", "c")
add_command("D", "c", <<["B", "BOOLEAN"], ["A", "INTEGER"], ["B", "c"], ["d", "INTEGER"], ["d", "BOOLEAN"], ["A", "B"], ["e", "INTEGER"], ["c", "INTEGER"]>>)
add_call_chain(<<c,d,d,b,C,B,B>>)
add_attribute("d", "C", "a")
add_attribute("B", "a", "BOOLEAN")
add_call_chain(<<c,b,A>>)
add_query("b", "C", <<["c", "d"], ["A", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["D", "INTEGER"], ["a", "BOOLEAN"]>>, "c")
bool_value (true)
add_class(A)
logical_negation
add_query("c", "b", <<["e", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["D", "BOOLEAN"]>>, "B")
add_call_chain(<<A,a,A,d,d>>)
type_check
add_call_chain(<<B,D,a,c,a,d,b,c>>)
add_query("a", "a", <<["D", "A"], ["e", "BOOLEAN"], ["D", "b"], ["B", "c"], ["C", "INTEGER"]>>, "B")
add_command("a", "d", <<["B", "C"], ["d", "C"], ["B", "INTEGER"], ["B", "BOOLEAN"], ["b", "B"]>>)
add_class(C)
numerical_negation
bool_value (true)
add_class(C)
quotient
add_class(b)
equals
add_query("d", "d", <<["D", "BOOLEAN"], ["b", "d"], ["A", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "D"], ["D", "BOOLEAN"]>>, "A")
numerical_negation
add_attribute("C", "B", "b")
numerical_negation
add_call_chain(<<D,e,A,D,e,c,a,INTEGER>>)
add_call_chain(<<b,a,INTEGER,BOOLEAN,A>>)
add_attribute("BOOLEAN", "a", "c")
add_query("B", "a", <<["B", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "INTEGER"]>>, "c")
add_call_chain(<<C,C,C,B,A,B,D,BOOLEAN>>)
add_attribute("a", "C", "INTEGER")
add_call_chain(<<a,a,b,A>>)
add_query("C", "D", <<["e", "BOOLEAN"], ["C", "INTEGER"]>>, "b")
add_attribute("B", "d", "BOOLEAN")
int_value (3)
logical_negation
add_call_chain(<<D,d,e>>)
type_check
bool_value (false)
disjunction
int_value (45)
numerical_negation
add_command("INTEGER", "D", <<["C", "B"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["C", "BOOLEAN"], ["INTEGER", "INTEGER"], ["D", "D"]>>)
generate_java_code
logical_negation
numerical_negation
add_class(C)
add_command("B", "c", <<["A", "d"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["B", "INTEGER"]>>)
add_command("A", "d", <<["C", "INTEGER"], ["e", "BOOLEAN"], ["C", "C"], ["b", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "a"], ["c", "BOOLEAN"], ["C", "a"], ["A", "INTEGER"]>>)
add_query("b", "B", <<["d", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "BOOLEAN"]>>, "d")
add_call_chain(<<INTEGER>>)
int_value (21)
add_attribute("D", "a", "c")
add_call_chain(<<C,b,a,b,C,a>>)
int_value (32)
conjunction
bool_value (true)
add_query("BOOLEAN", "B", <<["D", "INTEGER"], ["A", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "INTEGER"], ["D", "e"], ["b", "A"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "INTEGER"]>>, "B")
add_command("BOOLEAN", "d", <<["c", "B"], ["e", "a"], ["e", "INTEGER"], ["B", "INTEGER"]>>)
add_class(e)
logical_negation
add_call_chain(<<c,D,e,C>>)
conjunction
logical_negation
add_query("C", "c", <<["D", "INTEGER"], ["INTEGER", "BOOLEAN"]>>, "C")
add_command("B", "b", <<["A", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "BOOLEAN"], ["a", "A"], ["b", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "BOOLEAN"]>>)
generate_java_code
bool_value (true)
add_attribute("BOOLEAN", "A", "BOOLEAN")
int_value (35)
add_call_chain(<<C,B,b,INTEGER,d,A,c,A,B>>)
numerical_negation
add_attribute("b", "C", "a")
generate_java_code
add_call_chain(<<B,BOOLEAN,C>>)
numerical_negation
add_call_chain(<<BOOLEAN,d,e,C>>)
greater_than
add_call_chain(<<e,b,d>>)
numerical_negation
disjunction
add_call_chain(<<d,d>>)
bool_value (true)
add_command("B", "d", <<["C", "INTEGER"], ["d", "INTEGER"], ["b", "e"], ["a", "BOOLEAN"], ["B", "BOOLEAN"]>>)
add_call_chain(<<D,d,B,d>>)
