add_call_chain(<<D,A,B,c,C,INTEGER,C,b,B>>)
equals
add_call_chain(<<A,a,C,b,b,e,D,e>>)
type_check
add_command("BOOLEAN", "A", <<["a", "BOOLEAN"], ["b", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "INTEGER"], ["b", "D"], ["INTEGER", "C"]>>)
add_command("C", "B", <<["B", "C"], ["a", "BOOLEAN"], ["d", "INTEGER"], ["c", "BOOLEAN"], ["C", "INTEGER"], ["a", "BOOLEAN"]>>)
numerical_negation
generate_java_code
add_attribute("A", "d", "INTEGER")
int_value (31)
add_call_chain(<<e>>)
add_call_chain(<<c,a,A,B,BOOLEAN,B,INTEGER,A,A>>)
bool_value (false)
subtraction
addition
conjunction
add_class(e)
add_attribute("a", "A", "BOOLEAN")
add_query("e", "d", <<["a", "INTEGER"], ["C", "BOOLEAN"], ["b", "e"], ["D", "BOOLEAN"]>>, "e")
add_attribute("BOOLEAN", "A", "INTEGER")
bool_value (true)
add_call_chain(<<A,INTEGER>>)
logical_negation
disjunction
logical_negation
bool_value (false)
add_call_chain(<<e,A,D,c,e,e,D,c,c>>)
type_check
add_call_chain(<<D,A,B,A,a,b,d,c,A>>)
conjunction
disjunction
generate_java_code
conjunction
add_query("c", "e", <<["B", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "c"], ["C", "BOOLEAN"], ["e", "C"], ["d", "D"], ["A", "INTEGER"], ["B", "B"]>>, "c")
add_call_chain(<<B,b,A,D,b>>)
add_query("B", "D", <<["C", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["B", "INTEGER"], ["b", "BOOLEAN"]>>, "D")
add_call_chain(<<D,D,a,INTEGER,D,C,A>>)
add_attribute("INTEGER", "A", "BOOLEAN")
add_call_chain(<<d,A>>)
type_check
multiplication
add_query("A", "a", <<["e", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "b"], ["a", "BOOLEAN"], ["A", "INTEGER"], ["d", "BOOLEAN"]>>, "C")
disjunction
add_command("D", "D", <<["d", "BOOLEAN"], ["C", "A"], ["c", "BOOLEAN"], ["d", "B"]>>)
int_value (15)
bool_value (false)
type_check
greater_than
add_query("e", "b", <<["c", "BOOLEAN"], ["b", "a"], ["a", "INTEGER"], ["BOOLEAN", "B"], ["c", "INTEGER"], ["a", "INTEGER"], ["d", "A"], ["A", "D"], ["B", "D"]>>, "C")
generate_java_code
add_attribute("e", "C", "B")
logical_negation
add_call_chain(<<A>>)
greater_than
add_command("D", "c", <<["B", "INTEGER"], ["a", "INTEGER"], ["C", "INTEGER"], ["e", "INTEGER"], ["e", "BOOLEAN"], ["INTEGER", "INTEGER"], ["e", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "INTEGER"]>>)
int_value (2)
logical_negation
add_query("a", "C", <<["c", "BOOLEAN"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["d", "INTEGER"], ["e", "INTEGER"], ["b", "BOOLEAN"], ["e", "b"]>>, "a")
disjunction
bool_value (true)
add_attribute("B", "D", "BOOLEAN")
add_class(C)
int_value (38)
generate_java_code
bool_value (false)
add_attribute("c", "e", "a")
add_call_chain(<<B,BOOLEAN>>)
add_call_chain(<<C,b,D,e,d,BOOLEAN>>)
add_query("B", "e", <<["d", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "c"], ["c", "INTEGER"], ["d", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "BOOLEAN"]>>, "C")
add_call_chain(<<c>>)
add_attribute("B", "B", "INTEGER")
add_query("A", "d", <<["C", "INTEGER"], ["b", "INTEGER"], ["b", "d"], ["INTEGER", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "INTEGER"], ["B", "B"]>>, "a")
logical_negation
add_attribute("d", "B", "c")
add_call_chain(<<BOOLEAN,INTEGER>>)
int_value (9)
bool_value (false)
add_query("b", "C", <<["A", "BOOLEAN"], ["D", "a"]>>, "b")
add_query("b", "d", <<["C", "BOOLEAN"]>>, "INTEGER")
add_call_chain(<<A,INTEGER,d,a,b,INTEGER,e,e,A>>)
numerical_negation
add_query("b", "BOOLEAN", <<["d", "INTEGER"], ["e", "C"], ["BOOLEAN", "BOOLEAN"]>>, "e")
add_call_chain(<<e>>)
int_value (46)
add_attribute("D", "d", "a")
add_call_chain(<<BOOLEAN,C,D,INTEGER,c,INTEGER,d,INTEGER>>)
int_value (36)
add_call_chain(<<D,b>>)
add_call_chain(<<B,D,b,b,C,d>>)
subtraction
logical_negation
add_attribute("C", "INTEGER", "b")
add_attribute("c", "BOOLEAN", "BOOLEAN")
add_command("BOOLEAN", "D", <<["c", "BOOLEAN"], ["c", "INTEGER"], ["INTEGER", "INTEGER"], ["C", "INTEGER"]>>)
add_query("D", "C", <<["B", "C"], ["b", "BOOLEAN"], ["D", "INTEGER"], ["INTEGER", "a"]>>, "c")
less_than
add_attribute("D", "a", "BOOLEAN")
modulo
add_class(e)
add_class(e)
add_command("a", "b", <<["d", "INTEGER"], ["b", "D"], ["D", "B"], ["C", "BOOLEAN"], ["A", "e"]>>)
add_call_chain(<<C,D,e,C,e>>)
bool_value (true)
conjunction
numerical_negation
add_query("a", "d", <<["B", "BOOLEAN"], ["d", "C"], ["C", "B"]>>, "A")
add_command("a", "e", <<["c", "d"], ["e", "INTEGER"], ["a", "INTEGER"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["INTEGER", "BOOLEAN"], ["c", "e"], ["a", "BOOLEAN"]>>)
int_value (17)
int_value (41)
equals
generate_java_code
add_class(INTEGER)
add_command("B", "B", <<["C", "b"]>>)
generate_java_code
bool_value (true)
int_value (18)
equals
add_call_chain(<<d>>)
add_call_chain(<<c,C,INTEGER,e,a,A,D,BOOLEAN,e>>)
addition
logical_negation
add_query("e", "e", <<["c", "A"], ["C", "INTEGER"], ["C", "INTEGER"], ["e", "BOOLEAN"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["e", "A"], ["C", "INTEGER"], ["D", "INTEGER"]>>, "A")
add_query("INTEGER", "a", <<["e", "BOOLEAN"], ["B", "INTEGER"], ["C", "INTEGER"], ["b", "INTEGER"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "INTEGER"]>>, "INTEGER")
bool_value (true)
add_command("c", "e", <<["C", "INTEGER"], ["d", "INTEGER"], ["e", "INTEGER"], ["a", "BOOLEAN"]>>)
add_command("e", "c", <<["C", "C"], ["b", "INTEGER"]>>)
add_query("D", "BOOLEAN", <<["C", "INTEGER"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "C"], ["C", "C"], ["e", "INTEGER"], ["D", "INTEGER"], ["e", "INTEGER"]>>, "a")
add_call_chain(<<B,C,a,D,D,c,e>>)
int_value (14)
add_class(c)
add_call_chain(<<b,e,b,BOOLEAN,b,D,d>>)
disjunction
type_check
bool_value (true)
bool_value (false)
equals
add_call_chain(<<B,D,C,B,a,D,b,D,A>>)
add_attribute("INTEGER", "A", "INTEGER")
add_query("A", "C", <<["C", "b"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["BOOLEAN", "INTEGER"], ["e", "BOOLEAN"]>>, "A")
logical_negation
add_call_chain(<<d>>)
numerical_negation
add_command("d", "b", <<["C", "INTEGER"], ["a", "INTEGER"], ["C", "c"], ["INTEGER", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["d", "INTEGER"]>>)
add_class(d)
add_attribute("a", "c", "b")
add_call_chain(<<e,d,c>>)
add_query("a", "c", <<["e", "INTEGER"], ["C", "BOOLEAN"]>>, "b")
bool_value (false)
bool_value (false)
generate_java_code
add_query("b", "e", <<["C", "BOOLEAN"], ["INTEGER", "e"], ["d", "INTEGER"], ["e", "BOOLEAN"]>>, "e")
bool_value (true)
add_attribute("e", "b", "INTEGER")
add_query("e", "b", <<["C", "INTEGER"], ["A", "e"], ["c", "BOOLEAN"], ["d", "C"], ["D", "B"]>>, "e")
addition
numerical_negation
add_call_chain(<<A,C,D,B,c,a,B,A,D>>)
add_query("C", "INTEGER", <<["INTEGER", "BOOLEAN"], ["b", "A"], ["c", "BOOLEAN"], ["D", "a"], ["d", "D"], ["C", "b"], ["C", "D"], ["a", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>, "D")
bool_value (true)
less_than
type_check
bool_value (true)
add_query("B", "A", <<["C", "d"], ["D", "INTEGER"], ["c", "D"], ["e", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "A"], ["C", "BOOLEAN"], ["B", "BOOLEAN"]>>, "b")
type_check
add_attribute("INTEGER", "A", "BOOLEAN")
add_attribute("b", "a", "BOOLEAN")
logical_negation
add_command("A", "c", <<["D", "b"], ["e", "D"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["b", "a"]>>)
numerical_negation
add_attribute("A", "BOOLEAN", "b")
add_call_chain(<<C>>)
add_call_chain(<<b>>)
numerical_negation
disjunction
add_class(B)
type_check
generate_java_code
int_value (48)
add_query("b", "INTEGER", <<["C", "a"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["c", "INTEGER"], ["B", "e"], ["d", "INTEGER"]>>, "A")
bool_value (true)
add_attribute("BOOLEAN", "D", "A")
add_call_chain(<<C,b,B,d,D,c,C>>)
add_call_chain(<<a,b>>)
add_attribute("b", "C", "BOOLEAN")
add_attribute("b", "B", "INTEGER")
conjunction
add_query("D", "A", <<["A", "INTEGER"], ["d", "B"], ["B", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "INTEGER"]>>, "D")
add_query("D", "e", <<["B", "A"], ["d", "BOOLEAN"], ["a", "INTEGER"]>>, "d")
greater_than
numerical_negation
add_command("C", "b", <<["c", "INTEGER"], ["B", "BOOLEAN"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["a", "C"], ["e", "INTEGER"]>>)
int_value (32)
int_value (26)
add_query("c", "a", <<["INTEGER", "BOOLEAN"], ["D", "a"], ["b", "b"], ["d", "BOOLEAN"], ["d", "INTEGER"], ["e", "INTEGER"], ["b", "BOOLEAN"]>>, "D")
int_value (1)
logical_negation
int_value (35)
type_check
add_call_chain(<<c,b,B>>)
add_class(B)
add_call_chain(<<c>>)
modulo
numerical_negation
multiplication
int_value (47)
add_query("C", "INTEGER", <<["e", "b"], ["B", "B"], ["b", "a"], ["d", "D"], ["BOOLEAN", "A"], ["B", "INTEGER"], ["c", "d"], ["c", "INTEGER"], ["D", "BOOLEAN"]>>, "INTEGER")
add_attribute("C", "A", "INTEGER")
logical_negation
type_check
generate_java_code
numerical_negation
add_call_chain(<<A,d,BOOLEAN,e,b,BOOLEAN>>)
int_value (17)
add_command("a", "C", <<["A", "BOOLEAN"], ["B", "D"], ["C", "d"], ["B", "INTEGER"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["B", "INTEGER"]>>)
logical_negation
logical_negation
add_class(INTEGER)
add_call_chain(<<C,B,B,b,a>>)
add_call_chain(<<D,A,B,a,A,D,b,c,D>>)
add_query("D", "a", <<["C", "INTEGER"], ["d", "BOOLEAN"]>>, "B")
add_query("d", "D", <<["d", "BOOLEAN"], ["A", "INTEGER"], ["C", "a"], ["C", "INTEGER"], ["A", "INTEGER"], ["A", "INTEGER"], ["BOOLEAN", "A"], ["b", "INTEGER"]>>, "c")
add_call_chain(<<C,c,C,d,A,C>>)
add_attribute("A", "d", "B")
less_than
equals
quotient
logical_negation
numerical_negation
add_command("C", "a", <<["b", "B"], ["A", "INTEGER"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["e", "C"], ["B", "A"], ["C", "INTEGER"]>>)
add_command("A", "D", <<["D", "INTEGER"], ["INTEGER", "INTEGER"], ["d", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["d", "BOOLEAN"], ["d", "INTEGER"], ["A", "INTEGER"], ["b", "INTEGER"]>>)
generate_java_code
add_attribute("INTEGER", "a", "C")
add_query("B", "A", <<["D", "A"], ["INTEGER", "BOOLEAN"], ["B", "INTEGER"], ["e", "A"]>>, "INTEGER")
add_query("B", "d", <<["D", "b"]>>, "BOOLEAN")
add_attribute("b", "c", "INTEGER")
add_call_chain(<<c,INTEGER,b,d,b,C,B,D>>)
add_call_chain(<<D,BOOLEAN,a,c,D,a,c>>)
add_attribute("a", "C", "BOOLEAN")
add_attribute("A", "B", "D")
int_value (14)
generate_java_code
int_value (1)
add_command("C", "A", <<["b", "BOOLEAN"], ["a", "INTEGER"], ["c", "INTEGER"]>>)
int_value (23)
