add_call_chain(<<B,e,D,B,a,D,BOOLEAN,c>>)
add_call_chain(<<A,B>>)
add_attribute("INTEGER", "e", "BOOLEAN")
add_call_chain(<<A,D,e,B,b,c,c>>)
logical_negation
bool_value (false)
quotient
conjunction
type_check
disjunction
less_than
add_attribute("b", "e", "INTEGER")
bool_value (true)
int_value (41)
add_call_chain(<<e,e,BOOLEAN,C,A>>)
logical_negation
numerical_negation
add_query("C", "A", <<["e", "BOOLEAN"], ["c", "INTEGER"], ["e", "A"], ["C", "BOOLEAN"]>>, "e")
greater_than
add_class(A)
add_call_chain(<<d,a,D,A,c,C,c,INTEGER,BOOLEAN>>)
add_command("d", "d", <<["INTEGER", "a"], ["e", "BOOLEAN"], ["b", "INTEGER"], ["A", "BOOLEAN"], ["a", "INTEGER"], ["d", "a"], ["e", "BOOLEAN"]>>)
add_call_chain(<<INTEGER,e,a,A,D,a,c,C,B>>)
int_value (39)
logical_negation
bool_value (true)
add_call_chain(<<INTEGER,C>>)
add_query("B", "c", <<["BOOLEAN", "INTEGER"], ["C", "D"], ["b", "D"]>>, "INTEGER")
add_attribute("BOOLEAN", "b", "BOOLEAN")
bool_value (false)
add_query("BOOLEAN", "e", <<["B", "INTEGER"], ["D", "BOOLEAN"], ["c", "BOOLEAN"]>>, "BOOLEAN")
generate_java_code
add_query("c", "A", <<["d", "INTEGER"], ["d", "A"], ["a", "INTEGER"], ["B", "INTEGER"], ["BOOLEAN", "e"]>>, "BOOLEAN")
logical_negation
add_call_chain(<<a,B,D,d,C,c,B>>)
equals
add_query("INTEGER", "A", <<["e", "BOOLEAN"], ["INTEGER", "INTEGER"], ["b", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["A", "a"], ["e", "e"], ["A", "B"], ["C", "d"]>>, "INTEGER")
add_call_chain(<<A,A,INTEGER>>)
add_call_chain(<<e,D>>)
add_class(B)
add_call_chain(<<a,A,D,D,D,e>>)
type_check
add_class(d)
add_call_chain(<<C,C,c,c,C,C>>)
generate_java_code
addition
add_query("e", "D", <<["e", "BOOLEAN"], ["C", "INTEGER"], ["a", "INTEGER"]>>, "B")
add_attribute("b", "e", "INTEGER")
add_attribute("C", "C", "A")
logical_negation
disjunction
conjunction
type_check
greater_than
add_attribute("c", "D", "INTEGER")
greater_than
add_attribute("INTEGER", "B", "c")
add_call_chain(<<D,b,A,D,b,d,BOOLEAN>>)
conjunction
add_command("D", "a", <<["B", "e"], ["a", "INTEGER"]>>)
int_value (9)
bool_value (true)
add_command("B", "c", <<["A", "INTEGER"], ["BOOLEAN", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>)
bool_value (false)
numerical_negation
type_check
logical_negation
type_check
int_value (27)
add_call_chain(<<D,d,D,c,c,c>>)
generate_java_code
logical_negation
logical_negation
add_call_chain(<<B,b,C,D,A,B>>)
greater_than
add_query("A", "c", <<["d", "b"], ["c", "BOOLEAN"], ["e", "INTEGER"], ["INTEGER", "e"], ["b", "INTEGER"]>>, "C")
logical_negation
int_value (24)
type_check
add_command("C", "b", <<["B", "BOOLEAN"], ["a", "d"], ["e", "BOOLEAN"], ["e", "INTEGER"], ["a", "D"], ["C", "D"]>>)
int_value (46)
type_check
add_attribute("B", "C", "BOOLEAN")
int_value (27)
add_call_chain(<<B,C,a,C,c,e,b,D,d>>)
add_call_chain(<<D,b,A,a,e,d,e,b,D>>)
type_check
greater_than
add_command("BOOLEAN", "b", <<["B", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "A"], ["INTEGER", "C"], ["C", "BOOLEAN"]>>)
add_call_chain(<<A,c,INTEGER,B,B,C,C,c,a>>)
int_value (9)
conjunction
add_command("a", "INTEGER", <<["d", "INTEGER"], ["C", "C"]>>)
int_value (12)
add_call_chain(<<a,INTEGER,D,a,B,c,d>>)
numerical_negation
numerical_negation
greater_than
add_call_chain(<<INTEGER,A,B,b>>)
add_call_chain(<<B,e,A,a>>)
add_attribute("A", "A", "BOOLEAN")
add_call_chain(<<B,B>>)
type_check
numerical_negation
disjunction
int_value (21)
quotient
add_call_chain(<<D,A,b,BOOLEAN,a,d>>)
add_query("b", "e", <<["INTEGER", "BOOLEAN"], ["d", "d"], ["A", "BOOLEAN"]>>, "c")
add_call_chain(<<d>>)
add_attribute("C", "B", "d")
logical_negation
type_check
add_attribute("e", "BOOLEAN", "BOOLEAN")
add_call_chain(<<d,b,b,C,c,b,e>>)
logical_negation
add_attribute("a", "b", "BOOLEAN")
add_call_chain(<<d,A,BOOLEAN,e,e>>)
subtraction
add_call_chain(<<c,B,D,c,D>>)
add_call_chain(<<e,C,D,b,b,c,A,b>>)
numerical_negation
type_check
int_value (32)
int_value (35)
add_call_chain(<<D,e,d,e,c,b,b,c,b>>)
subtraction
equals
quotient
add_query("B", "BOOLEAN", <<["BOOLEAN", "b"], ["BOOLEAN", "B"], ["b", "INTEGER"], ["a", "INTEGER"], ["b", "INTEGER"], ["BOOLEAN", "INTEGER"], ["A", "D"]>>, "d")
add_call_chain(<<A,INTEGER,A,A,C,b,d>>)
add_query("a", "a", <<["C", "e"], ["C", "INTEGER"]>>, "c")
add_command("C", "c", <<["D", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["a", "B"], ["a", "INTEGER"], ["e", "INTEGER"], ["e", "D"], ["A", "INTEGER"], ["A", "INTEGER"], ["A", "BOOLEAN"]>>)
type_check
subtraction
add_attribute("b", "D", "INTEGER")
bool_value (true)
add_attribute("c", "D", "INTEGER")
numerical_negation
add_query("b", "c", <<["A", "d"], ["D", "INTEGER"], ["c", "A"], ["INTEGER", "BOOLEAN"], ["c", "BOOLEAN"], ["INTEGER", "INTEGER"], ["INTEGER", "B"]>>, "INTEGER")
logical_negation
bool_value (false)
add_command("e", "C", <<["D", "INTEGER"], ["c", "A"], ["c", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "INTEGER"], ["e", "INTEGER"], ["C", "INTEGER"]>>)
conjunction
add_call_chain(<<c,C,A,B,D,e>>)
int_value (41)
add_class(e)
multiplication
bool_value (true)
int_value (17)
multiplication
generate_java_code
add_query("A", "b", <<["a", "BOOLEAN"], ["A", "B"], ["c", "C"], ["BOOLEAN", "C"], ["c", "INTEGER"], ["D", "c"], ["e", "INTEGER"], ["D", "C"]>>, "B")
add_command("A", "B", <<["C", "INTEGER"], ["c", "BOOLEAN"], ["C", "INTEGER"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["d", "BOOLEAN"]>>)
modulo
int_value (12)
generate_java_code
add_query("B", "A", <<["INTEGER", "BOOLEAN"], ["d", "e"], ["b", "e"], ["e", "BOOLEAN"]>>, "c")
numerical_negation
add_command("B", "BOOLEAN", <<["D", "BOOLEAN"], ["A", "INTEGER"], ["b", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "BOOLEAN"]>>)
logical_negation
int_value (13)
add_call_chain(<<A,INTEGER,INTEGER,c,INTEGER>>)
numerical_negation
add_attribute("A", "b", "A")
add_call_chain(<<A,e,C>>)
add_command("C", "e", <<["BOOLEAN", "INTEGER"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["D", "INTEGER"], ["d", "BOOLEAN"], ["D", "d"], ["d", "INTEGER"]>>)
int_value (6)
add_call_chain(<<C,B,c,A,A,d,e,BOOLEAN>>)
add_call_chain(<<INTEGER,D,C,D,INTEGER,d>>)
add_attribute("e", "e", "BOOLEAN")
numerical_negation
add_call_chain(<<A>>)
bool_value (false)
int_value (3)
type_check
add_query("d", "A", <<["A", "BOOLEAN"], ["b", "C"], ["D", "e"], ["d", "INTEGER"], ["C", "INTEGER"], ["C", "A"], ["B", "BOOLEAN"]>>, "B")
add_query("b", "INTEGER", <<["D", "D"], ["e", "BOOLEAN"], ["d", "INTEGER"], ["e", "BOOLEAN"]>>, "BOOLEAN")
logical_negation
add_class(e)
add_query("C", "b", <<["c", "INTEGER"], ["d", "INTEGER"], ["b", "BOOLEAN"]>>, "D")
add_class(e)
add_call_chain(<<C,D>>)
numerical_negation
numerical_negation
add_query("d", "c", <<["B", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "INTEGER"]>>, "a")
add_call_chain(<<D,c>>)
add_query("D", "b", <<["b", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "B"], ["A", "INTEGER"], ["b", "BOOLEAN"]>>, "A")
bool_value (true)
less_than
add_attribute("B", "d", "d")
add_call_chain(<<C,d,INTEGER,BOOLEAN>>)
type_check
add_attribute("D", "e", "b")
add_query("C", "D", <<["d", "d"], ["INTEGER", "B"], ["A", "BOOLEAN"]>>, "d")
add_attribute("INTEGER", "C", "BOOLEAN")
add_command("d", "b", <<["A", "BOOLEAN"], ["e", "INTEGER"], ["B", "C"], ["C", "INTEGER"], ["A", "INTEGER"], ["e", "b"], ["D", "b"], ["d", "INTEGER"]>>)
add_query("D", "d", <<["a", "BOOLEAN"], ["B", "INTEGER"]>>, "a")
add_attribute("a", "B", "e")
int_value (30)
int_value (33)
add_call_chain(<<b,c,a,INTEGER,C,B,a>>)
add_call_chain(<<C,B,INTEGER,D>>)
numerical_negation
add_call_chain(<<c,a,INTEGER,d>>)
add_attribute("d", "B", "e")
logical_negation
add_attribute("B", "c", "BOOLEAN")
logical_negation
bool_value (false)
type_check
int_value (36)
int_value (18)
int_value (46)
type_check
numerical_negation
conjunction
add_query("D", "B", <<["d", "BOOLEAN"], ["B", "INTEGER"]>>, "B")
numerical_negation
