add_command("a", "d", <<["B", "INTEGER"], ["D", "INTEGER"], ["D", "INTEGER"], ["B", "A"], ["A", "BOOLEAN"], ["D", "INTEGER"], ["e", "INTEGER"], ["c", "BOOLEAN"]>>)
add_call_chain(<<A>>)
conjunction
int_value (30)
subtraction
bool_value (true)
modulo
less_than
int_value (23)
numerical_negation
add_attribute("a", "A", "INTEGER")
int_value (33)
add_class(B)
generate_java_code
int_value (44)
add_command("e", "D", <<["D", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["D", "A"], ["BOOLEAN", "BOOLEAN"], ["C", "INTEGER"], ["a", "BOOLEAN"], ["B", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["B", "a"]>>)
equals
type_check
add_attribute("A", "C", "d")
conjunction
add_class(a)
add_call_chain(<<b,D,c,A,c,c>>)
bool_value (false)
disjunction
add_command("e", "e", <<["D", "BOOLEAN"], ["A", "INTEGER"], ["INTEGER", "B"], ["A", "INTEGER"], ["C", "INTEGER"], ["b", "BOOLEAN"], ["D", "BOOLEAN"]>>)
bool_value (true)
add_query("INTEGER", "d", <<["e", "C"], ["e", "D"]>>, "C")
add_query("b", "B", <<["BOOLEAN", "INTEGER"], ["C", "BOOLEAN"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["C", "BOOLEAN"]>>, "b")
disjunction
add_call_chain(<<C,D,A,b,e,e,C,e>>)
logical_negation
numerical_negation
int_value (17)
numerical_negation
int_value (25)
bool_value (false)
add_call_chain(<<BOOLEAN>>)
add_command("b", "d", <<["d", "BOOLEAN"], ["D", "INTEGER"], ["e", "BOOLEAN"], ["d", "B"], ["B", "INTEGER"], ["d", "INTEGER"], ["A", "c"], ["C", "BOOLEAN"], ["a", "C"]>>)
add_attribute("D", "BOOLEAN", "INTEGER")
int_value (7)
numerical_negation
add_command("INTEGER", "e", <<["c", "BOOLEAN"], ["c", "INTEGER"], ["B", "INTEGER"]>>)
add_call_chain(<<a,e,A,B,B,d>>)
add_query("d", "C", <<["D", "BOOLEAN"]>>, "A")
add_query("c", "D", <<["INTEGER", "e"]>>, "INTEGER")
int_value (38)
int_value (2)
type_check
type_check
numerical_negation
logical_negation
logical_negation
type_check
add_class(d)
int_value (9)
add_class(d)
add_attribute("INTEGER", "B", "INTEGER")
int_value (46)
add_call_chain(<<c,C,a,A,a>>)
int_value (32)
type_check
quotient
add_attribute("c", "A", "B")
add_query("D", "e", <<["b", "B"], ["A", "BOOLEAN"]>>, "D")
bool_value (false)
add_command("d", "A", <<["b", "INTEGER"], ["INTEGER", "INTEGER"], ["D", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "BOOLEAN"], ["c", "c"], ["A", "INTEGER"], ["A", "INTEGER"]>>)
numerical_negation
bool_value (false)
addition
logical_negation
add_attribute("c", "d", "INTEGER")
int_value (14)
add_call_chain(<<c>>)
logical_negation
add_call_chain(<<B,D,B,A,D,a,a,c,d>>)
generate_java_code
logical_negation
add_call_chain(<<a,C>>)
add_call_chain(<<D,d,C,d,e,A,B,a,d>>)
numerical_negation
add_call_chain(<<A,b>>)
numerical_negation
add_call_chain(<<a,B>>)
generate_java_code
add_query("B", "D", <<["INTEGER", "INTEGER"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["A", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "BOOLEAN"]>>, "e")
add_command("A", "D", <<["C", "INTEGER"], ["c", "INTEGER"], ["c", "C"]>>)
add_attribute("C", "d", "B")
int_value (46)
add_call_chain(<<B>>)
add_command("B", "e", <<["B", "a"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["d", "INTEGER"], ["BOOLEAN", "B"], ["a", "BOOLEAN"], ["c", "INTEGER"]>>)
add_command("BOOLEAN", "A", <<["A", "BOOLEAN"], ["B", "A"], ["A", "c"], ["c", "INTEGER"], ["a", "BOOLEAN"]>>)
logical_negation
add_call_chain(<<e,INTEGER,D,d,D,e,C,BOOLEAN>>)
add_attribute("B", "d", "BOOLEAN")
add_call_chain(<<b>>)
numerical_negation
greater_than
add_class(d)
add_call_chain(<<e,A,D,BOOLEAN,d,a,c>>)
add_command("e", "A", <<["BOOLEAN", "INTEGER"], ["B", "INTEGER"], ["B", "INTEGER"]>>)
subtraction
add_query("e", "e", <<["c", "INTEGER"], ["d", "e"]>>, "e")
add_class(A)
generate_java_code
bool_value (false)
add_class(B)
type_check
int_value (16)
bool_value (false)
bool_value (false)
add_command("b", "e", <<["D", "B"], ["e", "c"], ["d", "BOOLEAN"]>>)
add_command("b", "b", <<["a", "INTEGER"], ["e", "BOOLEAN"]>>)
generate_java_code
type_check
add_query("c", "D", <<["C", "BOOLEAN"], ["b", "INTEGER"], ["e", "C"], ["b", "INTEGER"], ["a", "BOOLEAN"], ["e", "INTEGER"], ["d", "BOOLEAN"], ["a", "c"], ["d", "B"]>>, "B")
numerical_negation
add_attribute("e", "d", "A")
add_call_chain(<<b,e,a,e,D,A,c,D>>)
equals
add_query("D", "A", <<["A", "INTEGER"]>>, "b")
type_check
add_class(C)
add_call_chain(<<b,c,e,A,a,a,C>>)
int_value (46)
logical_negation
add_call_chain(<<e,A,a,d,B,A,C,B>>)
disjunction
logical_negation
bool_value (true)
generate_java_code
add_class(BOOLEAN)
add_call_chain(<<A,e,b,BOOLEAN,D>>)
add_call_chain(<<BOOLEAN,c,c>>)
logical_negation
numerical_negation
add_call_chain(<<a,c,c,A,b,A,D,e,d>>)
add_attribute("b", "B", "BOOLEAN")
add_command("d", "a", <<["e", "BOOLEAN"], ["a", "D"], ["c", "INTEGER"], ["A", "B"]>>)
add_command("D", "a", <<["a", "A"], ["a", "BOOLEAN"], ["a", "INTEGER"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["e", "c"], ["BOOLEAN", "BOOLEAN"], ["D", "c"], ["A", "b"]>>)
add_query("b", "BOOLEAN", <<["A", "INTEGER"], ["C", "e"], ["B", "D"]>>, "B")
generate_java_code
logical_negation
bool_value (true)
multiplication
logical_negation
disjunction
greater_than
int_value (17)
bool_value (true)
add_call_chain(<<e,D,b,A,d,A,A,BOOLEAN,c>>)
add_query("A", "C", <<["e", "INTEGER"]>>, "a")
add_attribute("A", "D", "BOOLEAN")
generate_java_code
add_call_chain(<<A,A,D,INTEGER,c,C,BOOLEAN,A,A>>)
add_command("B", "D", <<["B", "INTEGER"], ["c", "C"], ["d", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>)
bool_value (true)
int_value (49)
add_query("A", "d", <<["A", "a"], ["d", "INTEGER"], ["A", "BOOLEAN"], ["D", "d"], ["INTEGER", "INTEGER"], ["b", "INTEGER"], ["B", "BOOLEAN"]>>, "c")
add_call_chain(<<B,D,C,e,d>>)
type_check
add_command("BOOLEAN", "BOOLEAN", <<["a", "a"], ["INTEGER", "INTEGER"], ["D", "INTEGER"], ["D", "d"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "INTEGER"], ["A", "BOOLEAN"]>>)
add_call_chain(<<A,A,d,BOOLEAN,b,b,B,C,BOOLEAN>>)
logical_negation
add_query("a", "c", <<["A", "b"], ["B", "BOOLEAN"], ["B", "INTEGER"], ["e", "a"], ["A", "C"]>>, "D")
numerical_negation
greater_than
int_value (23)
add_call_chain(<<D,e>>)
logical_negation
add_class(A)
int_value (16)
logical_negation
add_command("A", "e", <<["INTEGER", "B"], ["e", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "BOOLEAN"]>>)
bool_value (false)
bool_value (false)
add_attribute("A", "B", "e")
add_call_chain(<<b,B>>)
add_attribute("c", "c", "INTEGER")
logical_negation
add_call_chain(<<BOOLEAN,B,B,e,B,a>>)
type_check
bool_value (false)
int_value (12)
add_query("C", "e", <<["D", "D"], ["A", "INTEGER"], ["b", "INTEGER"], ["D", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "a"], ["INTEGER", "BOOLEAN"]>>, "A")
add_query("D", "e", <<["A", "BOOLEAN"], ["d", "e"], ["b", "INTEGER"], ["B", "INTEGER"]>>, "e")
add_attribute("c", "d", "BOOLEAN")
conjunction
bool_value (true)
logical_negation
add_call_chain(<<BOOLEAN>>)
less_than
add_call_chain(<<C,D,BOOLEAN,D,b,B,INTEGER,BOOLEAN>>)
logical_negation
add_call_chain(<<b,d,b,INTEGER,A,C,BOOLEAN>>)
add_attribute("b", "b", "C")
add_query("b", "b", <<["C", "INTEGER"], ["C", "INTEGER"], ["B", "B"]>>, "D")
bool_value (false)
logical_negation
bool_value (true)
greater_than
add_call_chain(<<D,d>>)
add_command("B", "c", <<["a", "c"]>>)
bool_value (false)
generate_java_code
type_check
add_query("A", "d", <<["b", "BOOLEAN"], ["A", "BOOLEAN"]>>, "e")
bool_value (false)
quotient
multiplication
logical_negation
less_than
int_value (48)
int_value (1)
generate_java_code
add_call_chain(<<d,D,c,a>>)
add_command("a", "BOOLEAN", <<["e", "BOOLEAN"], ["d", "INTEGER"], ["D", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["D", "c"], ["c", "c"]>>)
add_query("c", "B", <<["D", "d"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["BOOLEAN", "A"], ["INTEGER", "INTEGER"], ["c", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "BOOLEAN"]>>, "b")
add_command("e", "C", <<["C", "INTEGER"], ["e", "INTEGER"], ["b", "BOOLEAN"], ["e", "INTEGER"], ["d", "A"], ["b", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["D", "INTEGER"], ["b", "INTEGER"]>>)
add_call_chain(<<BOOLEAN,b,a,A,INTEGER,c,d,d,a>>)
bool_value (false)
add_query("e", "A", <<["A", "BOOLEAN"], ["c", "INTEGER"], ["c", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "BOOLEAN"]>>, "e")
add_command("c", "c", <<["A", "BOOLEAN"], ["a", "c"]>>)
int_value (8)
add_query("C", "e", <<["c", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["C", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["a", "A"], ["BOOLEAN", "INTEGER"], ["C", "c"]>>, "e")
logical_negation
add_call_chain(<<a,A,D,e,C>>)
numerical_negation
multiplication
bool_value (true)
numerical_negation
