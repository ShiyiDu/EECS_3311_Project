add_attribute("A", "A", "C")
add_class(C)
bool_value (true)
add_command("d", "D", <<["C", "B"], ["d", "INTEGER"], ["C", "INTEGER"], ["B", "INTEGER"], ["D", "C"], ["C", "BOOLEAN"], ["d", "e"]>>)
logical_negation
numerical_negation
add_command("e", "e", <<["d", "d"], ["b", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["C", "C"], ["d", "INTEGER"], ["C", "INTEGER"], ["d", "INTEGER"]>>)
add_call_chain(<<c,A,B,e,B,e>>)
logical_negation
add_call_chain(<<A,c,b,B>>)
add_call_chain(<<INTEGER,A>>)
add_command("B", "a", <<["d", "BOOLEAN"], ["D", "INTEGER"], ["c", "INTEGER"], ["INTEGER", "BOOLEAN"], ["c", "BOOLEAN"], ["c", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
bool_value (false)
add_attribute("c", "A", "d")
add_attribute("a", "B", "c")
add_query("INTEGER", "B", <<["C", "BOOLEAN"], ["A", "d"], ["C", "INTEGER"], ["INTEGER", "e"], ["D", "b"]>>, "D")
logical_negation
less_than
add_command("D", "c", <<["e", "INTEGER"], ["c", "INTEGER"], ["c", "INTEGER"], ["C", "INTEGER"], ["a", "BOOLEAN"], ["D", "A"], ["e", "a"]>>)
add_command("c", "BOOLEAN", <<["C", "BOOLEAN"], ["B", "A"], ["d", "BOOLEAN"]>>)
int_value (9)
generate_java_code
add_attribute("B", "INTEGER", "BOOLEAN")
disjunction
type_check
equals
add_call_chain(<<A,D,d,e>>)
logical_negation
logical_negation
numerical_negation
bool_value (true)
add_call_chain(<<a,D,BOOLEAN,c>>)
add_attribute("INTEGER", "b", "INTEGER")
int_value (24)
bool_value (true)
add_attribute("INTEGER", "B", "BOOLEAN")
add_call_chain(<<d,INTEGER,BOOLEAN,D,e,D,A,b>>)
int_value (22)
add_attribute("C", "B", "INTEGER")
generate_java_code
less_than
bool_value (false)
equals
add_call_chain(<<d,C,c,C,B,d,BOOLEAN>>)
add_call_chain(<<d>>)
bool_value (false)
int_value (30)
equals
add_call_chain(<<C,D,B,e,b,c,INTEGER,D,D>>)
generate_java_code
modulo
int_value (37)
modulo
add_command("c", "d", <<["B", "BOOLEAN"], ["b", "INTEGER"], ["e", "a"], ["e", "BOOLEAN"]>>)
numerical_negation
add_call_chain(<<a>>)
add_call_chain(<<C>>)
disjunction
type_check
int_value (4)
add_command("b", "A", <<["e", "D"], ["b", "A"], ["b", "BOOLEAN"]>>)
add_call_chain(<<d,B,A,A,B,a,e,d>>)
add_call_chain(<<D,D,BOOLEAN,a,D,b,D>>)
add_call_chain(<<a,a,A,a,A,B>>)
add_class(A)
generate_java_code
add_attribute("d", "D", "INTEGER")
equals
generate_java_code
add_attribute("B", "A", "d")
int_value (4)
add_query("e", "a", <<["d", "BOOLEAN"], ["B", "b"], ["BOOLEAN", "INTEGER"], ["B", "BOOLEAN"], ["a", "INTEGER"], ["d", "BOOLEAN"], ["e", "INTEGER"]>>, "C")
generate_java_code
add_query("C", "D", <<["C", "BOOLEAN"], ["b", "INTEGER"], ["b", "B"], ["B", "INTEGER"], ["B", "BOOLEAN"], ["c", "e"], ["D", "BOOLEAN"], ["c", "INTEGER"], ["d", "A"]>>, "C")
add_call_chain(<<BOOLEAN,C,C,A>>)
numerical_negation
numerical_negation
disjunction
add_query("d", "C", <<["d", "BOOLEAN"], ["c", "B"], ["b", "D"]>>, "C")
generate_java_code
add_query("c", "C", <<["c", "BOOLEAN"], ["e", "B"]>>, "e")
add_call_chain(<<INTEGER,e>>)
add_call_chain(<<A,BOOLEAN,D,e,A,D>>)
add_call_chain(<<D,C,D,d,a>>)
generate_java_code
type_check
type_check
bool_value (true)
int_value (20)
add_query("a", "e", <<["c", "BOOLEAN"], ["C", "C"], ["BOOLEAN", "INTEGER"], ["b", "A"], ["e", "INTEGER"], ["INTEGER", "BOOLEAN"], ["b", "BOOLEAN"]>>, "D")
quotient
modulo
add_call_chain(<<c,d,e,C,a>>)
disjunction
bool_value (false)
add_command("e", "d", <<["e", "BOOLEAN"], ["INTEGER", "D"], ["a", "INTEGER"], ["C", "INTEGER"]>>)
add_query("c", "C", <<["A", "BOOLEAN"], ["d", "b"], ["d", "e"], ["d", "INTEGER"], ["c", "BOOLEAN"]>>, "c")
bool_value (true)
add_query("A", "A", <<["b", "B"]>>, "d")
int_value (41)
add_command("e", "a", <<["A", "BOOLEAN"], ["B", "INTEGER"], ["B", "BOOLEAN"]>>)
numerical_negation
numerical_negation
bool_value (true)
int_value (5)
add_call_chain(<<c,b,D,b,b,D,c>>)
logical_negation
add_query("b", "A", <<["B", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "BOOLEAN"]>>, "d")
add_query("e", "B", <<["e", "e"], ["d", "BOOLEAN"]>>, "d")
add_command("B", "a", <<["B", "BOOLEAN"], ["b", "INTEGER"], ["a", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "BOOLEAN"], ["BOOLEAN", "D"]>>)
conjunction
modulo
add_command("b", "D", <<["D", "BOOLEAN"]>>)
add_call_chain(<<C,B,C,a>>)
add_call_chain(<<e,d,D>>)
numerical_negation
add_attribute("B", "C", "BOOLEAN")
bool_value (false)
logical_negation
bool_value (true)
add_query("D", "BOOLEAN", <<["d", "C"]>>, "e")
add_attribute("e", "B", "INTEGER")
bool_value (false)
numerical_negation
add_attribute("b", "c", "BOOLEAN")
disjunction
add_call_chain(<<INTEGER,B,D,D,D,d,D,B>>)
type_check
add_query("C", "c", <<["B", "BOOLEAN"], ["a", "INTEGER"], ["B", "INTEGER"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["B", "BOOLEAN"]>>, "e")
add_query("C", "D", <<["b", "INTEGER"], ["d", "B"], ["b", "C"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["INTEGER", "d"], ["b", "INTEGER"]>>, "INTEGER")
bool_value (true)
bool_value (false)
conjunction
disjunction
numerical_negation
add_command("c", "e", <<["b", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "B"], ["BOOLEAN", "BOOLEAN"], ["B", "d"], ["B", "c"], ["A", "INTEGER"]>>)
bool_value (false)
type_check
add_query("INTEGER", "e", <<["b", "BOOLEAN"], ["C", "B"], ["d", "BOOLEAN"]>>, "a")
bool_value (false)
generate_java_code
add_attribute("D", "A", "A")
add_query("e", "e", <<["B", "INTEGER"]>>, "BOOLEAN")
numerical_negation
add_class(a)
add_command("d", "D", <<["b", "INTEGER"], ["e", "INTEGER"], ["a", "A"], ["INTEGER", "INTEGER"], ["A", "INTEGER"], ["c", "INTEGER"], ["d", "BOOLEAN"], ["BOOLEAN", "a"]>>)
add_attribute("B", "B", "BOOLEAN")
add_call_chain(<<c>>)
disjunction
disjunction
add_command("A", "b", <<["a", "BOOLEAN"], ["d", "A"], ["B", "B"], ["A", "e"]>>)
add_class(C)
add_query("A", "D", <<["b", "INTEGER"]>>, "INTEGER")
add_class(INTEGER)
add_call_chain(<<B,C,B,b,a,C,A>>)
add_call_chain(<<c,d,BOOLEAN>>)
add_query("a", "C", <<["D", "INTEGER"]>>, "C")
add_command("d", "C", <<["A", "c"], ["c", "b"], ["b", "BOOLEAN"], ["B", "b"], ["INTEGER", "D"], ["a", "BOOLEAN"], ["c", "INTEGER"], ["b", "BOOLEAN"], ["BOOLEAN", "b"]>>)
add_class(C)
add_attribute("B", "B", "INTEGER")
int_value (9)
equals
add_command("B", "d", <<["B", "a"], ["D", "INTEGER"]>>)
bool_value (false)
add_query("b", "e", <<["INTEGER", "C"], ["D", "INTEGER"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["d", "BOOLEAN"]>>, "A")
add_attribute("INTEGER", "d", "INTEGER")
logical_negation
add_command("D", "C", <<["A", "INTEGER"]>>)
addition
add_call_chain(<<B,D,a>>)
type_check
conjunction
bool_value (false)
numerical_negation
numerical_negation
add_command("c", "D", <<["D", "b"], ["A", "INTEGER"], ["C", "INTEGER"], ["D", "a"], ["d", "D"], ["c", "A"], ["C", "INTEGER"], ["c", "INTEGER"], ["b", "D"]>>)
type_check
int_value (24)
numerical_negation
int_value (5)
add_class(D)
type_check
add_call_chain(<<b,B,C,A,b>>)
int_value (39)
add_attribute("D", "b", "BOOLEAN")
type_check
bool_value (false)
add_attribute("b", "D", "INTEGER")
add_call_chain(<<D,B,D,d>>)
bool_value (false)
add_query("A", "a", <<["A", "BOOLEAN"], ["B", "INTEGER"], ["a", "D"]>>, "C")
add_call_chain(<<d>>)
int_value (28)
generate_java_code
add_query("D", "e", <<["e", "INTEGER"], ["d", "BOOLEAN"], ["e", "BOOLEAN"], ["a", "INTEGER"], ["d", "INTEGER"], ["e", "INTEGER"], ["B", "INTEGER"], ["d", "INTEGER"]>>, "c")
numerical_negation
bool_value (true)
numerical_negation
numerical_negation
add_class(e)
bool_value (false)
