numerical_negation
int_value (1)
add_command("d", "C", <<["INTEGER", "b"]>>)
disjunction
add_call_chain(<<b,C,c,D,D,D>>)
add_call_chain(<<D,A>>)
greater_than
numerical_negation
greater_than
add_call_chain(<<A>>)
add_command("c", "d", <<["b", "B"], ["A", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["a", "D"], ["C", "INTEGER"]>>)
add_call_chain(<<C,a,B,e,c,A>>)
int_value (1)
generate_java_code
add_attribute("B", "D", "BOOLEAN")
add_class(D)
add_call_chain(<<A,a,e>>)
add_command("C", "C", <<["A", "BOOLEAN"], ["D", "b"], ["a", "INTEGER"], ["C", "BOOLEAN"]>>)
add_query("C", "d", <<["b", "C"], ["A", "D"], ["A", "BOOLEAN"], ["B", "a"], ["a", "INTEGER"], ["d", "INTEGER"]>>, "c")
add_command("C", "e", <<["a", "INTEGER"], ["e", "INTEGER"], ["B", "e"]>>)
bool_value (true)
add_query("INTEGER", "c", <<["d", "BOOLEAN"], ["A", "INTEGER"], ["d", "A"], ["e", "INTEGER"], ["a", "INTEGER"], ["C", "INTEGER"], ["D", "INTEGER"], ["e", "BOOLEAN"], ["A", "B"]>>, "d")
quotient
bool_value (true)
int_value (33)
add_query("a", "D", <<["d", "BOOLEAN"], ["A", "INTEGER"], ["D", "d"], ["c", "BOOLEAN"], ["c", "BOOLEAN"], ["c", "d"]>>, "e")
disjunction
add_query("C", "e", <<["b", "BOOLEAN"], ["C", "INTEGER"]>>, "D")
quotient
disjunction
type_check
add_call_chain(<<B,C,d,INTEGER,c,b>>)
add_attribute("e", "D", "C")
type_check
add_call_chain(<<D,A,C>>)
add_class(C)
add_call_chain(<<INTEGER,a,d,B,d,C,d,e,A>>)
type_check
less_than
bool_value (true)
add_query("b", "A", <<["d", "INTEGER"]>>, "b")
numerical_negation
int_value (38)
add_call_chain(<<A,A>>)
numerical_negation
greater_than
add_call_chain(<<a>>)
int_value (20)
add_command("e", "C", <<["D", "BOOLEAN"]>>)
add_call_chain(<<d,INTEGER,B,BOOLEAN,d>>)
add_call_chain(<<C,B,a,B,C>>)
add_query("A", "d", <<["D", "INTEGER"], ["A", "D"], ["d", "BOOLEAN"], ["INTEGER", "b"], ["e", "B"]>>, "INTEGER")
add_call_chain(<<B>>)
add_attribute("c", "C", "C")
add_call_chain(<<A>>)
multiplication
add_call_chain(<<D,e,D,b,C>>)
add_call_chain(<<C,c,c,D,C,A>>)
numerical_negation
add_attribute("b", "A", "BOOLEAN")
equals
add_attribute("c", "a", "BOOLEAN")
add_query("B", "d", <<["e", "C"]>>, "d")
int_value (21)
add_query("a", "e", <<["a", "C"], ["e", "BOOLEAN"], ["D", "INTEGER"], ["C", "d"], ["c", "b"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["c", "BOOLEAN"]>>, "c")
generate_java_code
numerical_negation
add_class(d)
logical_negation
numerical_negation
conjunction
int_value (31)
add_command("BOOLEAN", "B", <<["a", "INTEGER"], ["b", "INTEGER"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "INTEGER"]>>)
add_command("D", "D", <<["e", "INTEGER"], ["e", "INTEGER"], ["D", "INTEGER"]>>)
add_call_chain(<<a,a,e>>)
add_query("e", "b", <<["BOOLEAN", "D"], ["e", "a"]>>, "C")
add_attribute("c", "BOOLEAN", "INTEGER")
add_call_chain(<<A,INTEGER,B>>)
add_call_chain(<<A,c,C,INTEGER,B>>)
add_command("C", "b", <<["B", "BOOLEAN"], ["c", "A"], ["B", "INTEGER"], ["INTEGER", "c"]>>)
add_call_chain(<<C,INTEGER,e,D,INTEGER,INTEGER,C,b,A>>)
add_query("D", "e", <<["a", "BOOLEAN"], ["d", "b"], ["C", "BOOLEAN"], ["e", "INTEGER"]>>, "d")
int_value (34)
add_query("d", "a", <<["A", "INTEGER"]>>, "B")
add_call_chain(<<e,c,C,b,e,c,a,B>>)
add_call_chain(<<INTEGER,C,A,e,e,INTEGER,b,d,B>>)
add_class(D)
add_call_chain(<<A,e,B,b,INTEGER,D>>)
add_command("BOOLEAN", "C", <<["b", "d"], ["a", "D"], ["d", "BOOLEAN"]>>)
logical_negation
bool_value (true)
bool_value (false)
add_command("C", "a", <<["d", "INTEGER"], ["D", "INTEGER"], ["B", "BOOLEAN"]>>)
quotient
logical_negation
int_value (23)
add_class(B)
type_check
int_value (30)
add_call_chain(<<A,B,d,c,BOOLEAN,A>>)
type_check
int_value (23)
subtraction
add_query("d", "A", <<["e", "INTEGER"], ["a", "c"], ["c", "BOOLEAN"], ["INTEGER", "D"], ["d", "e"]>>, "B")
add_call_chain(<<INTEGER,c,D,A,B>>)
add_command("e", "b", <<["c", "e"], ["a", "BOOLEAN"], ["INTEGER", "c"], ["D", "INTEGER"], ["b", "e"], ["A", "INTEGER"]>>)
add_call_chain(<<C,D,d,d,b,e>>)
logical_negation
logical_negation
add_attribute("d", "a", "BOOLEAN")
add_attribute("B", "INTEGER", "BOOLEAN")
add_attribute("a", "B", "D")
int_value (49)
add_attribute("b", "a", "BOOLEAN")
add_call_chain(<<e>>)
bool_value (false)
add_call_chain(<<a>>)
add_call_chain(<<C,A,a>>)
add_attribute("B", "C", "BOOLEAN")
modulo
add_call_chain(<<BOOLEAN>>)
add_attribute("d", "BOOLEAN", "A")
logical_negation
add_call_chain(<<C>>)
int_value (45)
logical_negation
add_call_chain(<<C,D,INTEGER,B,B,d,A,C>>)
add_attribute("b", "e", "BOOLEAN")
logical_negation
add_attribute("INTEGER", "B", "A")
int_value (32)
add_call_chain(<<C,d,d,D,C,A>>)
type_check
conjunction
add_call_chain(<<A>>)
add_call_chain(<<D,b,INTEGER,B>>)
modulo
add_command("a", "c", <<["BOOLEAN", "INTEGER"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["d", "INTEGER"]>>)
logical_negation
add_attribute("C", "A", "INTEGER")
add_call_chain(<<C>>)
add_attribute("C", "b", "b")
add_call_chain(<<a,a>>)
equals
add_attribute("b", "b", "INTEGER")
add_command("INTEGER", "c", <<["INTEGER", "INTEGER"], ["INTEGER", "C"], ["e", "C"], ["b", "D"], ["C", "b"], ["C", "INTEGER"], ["d", "INTEGER"], ["d", "INTEGER"]>>)
int_value (2)
logical_negation
subtraction
add_call_chain(<<B,e,a,D,c>>)
add_call_chain(<<c,c,c,c,b>>)
add_class(c)
generate_java_code
int_value (22)
add_call_chain(<<B,BOOLEAN,D>>)
numerical_negation
add_command("INTEGER", "B", <<["c", "A"]>>)
add_class(A)
numerical_negation
add_query("d", "A", <<["D", "D"], ["C", "A"], ["D", "INTEGER"], ["D", "c"], ["a", "INTEGER"], ["BOOLEAN", "e"], ["a", "BOOLEAN"], ["A", "d"]>>, "A")
modulo
add_query("b", "e", <<["C", "BOOLEAN"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["B", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "INTEGER"]>>, "d")
numerical_negation
bool_value (true)
generate_java_code
add_query("C", "a", <<["D", "INTEGER"], ["b", "BOOLEAN"]>>, "A")
add_query("C", "C", <<["a", "INTEGER"], ["b", "D"], ["B", "a"], ["e", "BOOLEAN"], ["d", "BOOLEAN"], ["e", "INTEGER"]>>, "c")
add_call_chain(<<D>>)
add_call_chain(<<d>>)
add_command("B", "a", <<["c", "e"], ["A", "c"], ["a", "BOOLEAN"], ["d", "INTEGER"], ["e", "INTEGER"], ["B", "BOOLEAN"], ["BOOLEAN", "A"], ["D", "BOOLEAN"], ["A", "INTEGER"]>>)
add_call_chain(<<INTEGER>>)
bool_value (true)
logical_negation
generate_java_code
int_value (29)
numerical_negation
add_attribute("D", "e", "a")
add_attribute("a", "A", "BOOLEAN")
logical_negation
int_value (17)
type_check
logical_negation
bool_value (false)
int_value (33)
generate_java_code
numerical_negation
add_command("INTEGER", "C", <<["c", "INTEGER"], ["A", "e"], ["BOOLEAN", "INTEGER"], ["a", "INTEGER"]>>)
add_call_chain(<<b,e,d,e>>)
add_call_chain(<<e,D,e,A,b,e>>)
add_call_chain(<<d,A,A>>)
add_command("c", "A", <<["A", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["A", "INTEGER"], ["c", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "C"], ["d", "BOOLEAN"]>>)
conjunction
add_command("d", "D", <<["c", "BOOLEAN"], ["D", "c"], ["b", "BOOLEAN"], ["e", "B"], ["B", "e"]>>)
add_class(e)
add_call_chain(<<C,INTEGER>>)
add_attribute("A", "c", "BOOLEAN")
disjunction
add_command("e", "B", <<["B", "INTEGER"], ["d", "INTEGER"], ["c", "C"], ["c", "INTEGER"]>>)
int_value (34)
logical_negation
int_value (5)
add_call_chain(<<C,c,B,e,A,D,B,B>>)
add_call_chain(<<C,INTEGER,a,D,e,b,C,c,D>>)
add_command("a", "A", <<["c", "e"], ["A", "B"], ["B", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["D", "INTEGER"]>>)
add_command("D", "c", <<["d", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "b"], ["d", "INTEGER"], ["A", "A"], ["c", "BOOLEAN"], ["INTEGER", "INTEGER"], ["d", "INTEGER"]>>)
logical_negation
add_query("C", "BOOLEAN", <<["A", "BOOLEAN"], ["A", "A"], ["d", "INTEGER"], ["B", "B"], ["c", "INTEGER"]>>, "B")
numerical_negation
bool_value (false)
add_call_chain(<<D,A,e,C,A,C>>)
add_query("c", "A", <<["C", "INTEGER"]>>, "BOOLEAN")
add_command("e", "b", <<["c", "INTEGER"], ["B", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["D", "INTEGER"], ["A", "INTEGER"], ["INTEGER", "INTEGER"], ["d", "d"], ["b", "BOOLEAN"], ["a", "INTEGER"]>>)
type_check
bool_value (true)
add_command("b", "c", <<["e", "D"], ["B", "INTEGER"], ["A", "INTEGER"], ["a", "INTEGER"], ["D", "d"], ["e", "D"], ["c", "b"], ["a", "INTEGER"], ["B", "BOOLEAN"]>>)
add_query("d", "a", <<["C", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "INTEGER"], ["b", "a"], ["A", "BOOLEAN"], ["D", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["A", "BOOLEAN"]>>, "BOOLEAN")
less_than
add_attribute("d", "d", "BOOLEAN")
disjunction
type_check
add_query("a", "B", <<["D", "INTEGER"], ["BOOLEAN", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>, "a")
bool_value (false)
numerical_negation
add_query("BOOLEAN", "d", <<["INTEGER", "BOOLEAN"], ["D", "INTEGER"], ["a", "A"], ["e", "C"], ["C", "c"], ["b", "INTEGER"]>>, "B")
bool_value (false)
add_query("c", "a", <<["D", "B"], ["e", "BOOLEAN"], ["e", "d"], ["B", "BOOLEAN"], ["C", "e"], ["b", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>, "e")
int_value (8)
add_attribute("a", "B", "INTEGER")
less_than
add_call_chain(<<e,d,A,A,c>>)
add_command("INTEGER", "e", <<["BOOLEAN", "INTEGER"], ["c", "INTEGER"], ["C", "INTEGER"], ["a", "INTEGER"], ["b", "BOOLEAN"]>>)
generate_java_code
numerical_negation
add_command("INTEGER", "c", <<["B", "INTEGER"]>>)
add_command("a", "A", <<["c", "INTEGER"], ["b", "INTEGER"], ["a", "BOOLEAN"], ["D", "INTEGER"], ["d", "A"]>>)
generate_java_code
logical_negation
type_check
add_call_chain(<<b,BOOLEAN,a,a,BOOLEAN,A>>)
generate_java_code
add_attribute("e", "A", "d")
add_command("INTEGER", "b", <<["B", "INTEGER"], ["D", "INTEGER"], ["A", "BOOLEAN"], ["INTEGER", "c"], ["e", "BOOLEAN"], ["a", "INTEGER"], ["c", "D"], ["INTEGER", "INTEGER"]>>)
bool_value (false)
add_query("BOOLEAN", "c", <<["d", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "c"]>>, "BOOLEAN")
add_command("BOOLEAN", "d", <<["a", "INTEGER"], ["a", "e"], ["b", "C"], ["b", "BOOLEAN"]>>)
bool_value (false)
add_query("INTEGER", "C", <<["b", "BOOLEAN"], ["C", "INTEGER"], ["C", "BOOLEAN"]>>, "D")
type_check
bool_value (true)
add_call_chain(<<C,C,B,D,e,e,B,b>>)
add_query("b", "d", <<["C", "BOOLEAN"], ["D", "B"], ["d", "INTEGER"], ["C", "BOOLEAN"], ["C", "C"], ["B", "INTEGER"], ["D", "BOOLEAN"]>>, "INTEGER")
add_query("BOOLEAN", "BOOLEAN", <<["d", "INTEGER"], ["b", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["b", "BOOLEAN"], ["c", "D"], ["b", "C"], ["C", "INTEGER"], ["c", "BOOLEAN"]>>, "B")
int_value (33)
int_value (6)
int_value (23)
logical_negation
subtraction
int_value (25)
add_call_chain(<<INTEGER,A>>)
add_command("a", "C", <<["INTEGER", "BOOLEAN"], ["A", "INTEGER"], ["b", "BOOLEAN"], ["D", "BOOLEAN"]>>)
conjunction
logical_negation
add_attribute("a", "D", "INTEGER")
less_than
less_than
numerical_negation
add_query("C", "INTEGER", <<["INTEGER", "BOOLEAN"], ["C", "B"]>>, "b")
less_than
add_attribute("d", "D", "INTEGER")
add_call_chain(<<C,d,c,b,B,B,B,D>>)
int_value (15)
add_command("BOOLEAN", "d", <<["a", "INTEGER"], ["b", "INTEGER"], ["B", "INTEGER"], ["C", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["INTEGER", "INTEGER"], ["BOOLEAN", "INTEGER"], ["D", "BOOLEAN"]>>)
add_command("D", "C", <<["d", "INTEGER"], ["INTEGER", "INTEGER"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "c"], ["B", "INTEGER"], ["b", "c"]>>)
numerical_negation
int_value (5)
type_check
bool_value (false)
add_call_chain(<<C,e,d,c,D,c,C,B,e>>)
type_check
type_check
add_call_chain(<<A,B,B,b>>)
type_check
add_class(a)
bool_value (true)
