numerical_negation
add_command("b", "D", <<["c", "c"], ["B", "A"], ["a", "A"], ["INTEGER", "INTEGER"], ["a", "INTEGER"]>>)
generate_java_code
numerical_negation
add_attribute("C", "b", "BOOLEAN")
add_call_chain(<<A,d,D,A,e>>)
greater_than
add_call_chain(<<B,D,D,INTEGER,D,C>>)
type_check
add_query("C", "C", <<["INTEGER", "d"], ["d", "INTEGER"], ["B", "INTEGER"]>>, "e")
generate_java_code
add_call_chain(<<BOOLEAN,D,D,A,BOOLEAN,C,e>>)
add_call_chain(<<A>>)
add_call_chain(<<d,e,BOOLEAN,B,C,D,e,D>>)
modulo
add_attribute("e", "b", "BOOLEAN")
int_value (15)
numerical_negation
add_class(d)
add_query("d", "a", <<["C", "INTEGER"], ["A", "c"], ["C", "BOOLEAN"], ["B", "INTEGER"], ["B", "BOOLEAN"], ["D", "d"]>>, "e")
addition
add_call_chain(<<C,c,D,A,B,b,d,A>>)
add_attribute("a", "c", "C")
add_query("e", "D", <<["B", "INTEGER"], ["A", "BOOLEAN"], ["c", "INTEGER"], ["C", "INTEGER"], ["c", "BOOLEAN"], ["D", "INTEGER"], ["B", "C"], ["c", "c"]>>, "B")
int_value (7)
add_attribute("A", "d", "BOOLEAN")
add_call_chain(<<c,BOOLEAN,INTEGER,d,d,a,D>>)
disjunction
int_value (6)
logical_negation
add_command("A", "e", <<["C", "INTEGER"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "D"], ["C", "B"], ["D", "BOOLEAN"]>>)
bool_value (false)
add_call_chain(<<b,c,a,A>>)
add_query("d", "d", <<["A", "e"], ["c", "INTEGER"]>>, "A")
numerical_negation
numerical_negation
addition
logical_negation
add_command("d", "A", <<["B", "INTEGER"], ["d", "BOOLEAN"], ["e", "a"], ["D", "INTEGER"], ["A", "BOOLEAN"], ["D", "BOOLEAN"], ["C", "INTEGER"]>>)
generate_java_code
add_class(B)
add_command("e", "A", <<["C", "d"], ["c", "INTEGER"], ["B", "INTEGER"]>>)
add_query("a", "e", <<["BOOLEAN", "BOOLEAN"], ["a", "B"], ["e", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "INTEGER"], ["b", "INTEGER"]>>, "d")
int_value (44)
add_call_chain(<<c,D,B,D,e,b,d,BOOLEAN>>)
add_call_chain(<<B,A,d,a>>)
add_class(B)
type_check
add_class(c)
bool_value (false)
add_attribute("c", "c", "INTEGER")
add_class(d)
add_attribute("C", "D", "INTEGER")
generate_java_code
add_query("B", "B", <<["e", "INTEGER"], ["e", "BOOLEAN"], ["BOOLEAN", "C"], ["B", "b"], ["e", "a"], ["A", "INTEGER"], ["a", "INTEGER"], ["a", "INTEGER"]>>, "C")
add_query("e", "INTEGER", <<["b", "d"], ["BOOLEAN", "D"], ["b", "BOOLEAN"], ["c", "INTEGER"], ["c", "BOOLEAN"], ["A", "D"], ["b", "BOOLEAN"]>>, "d")
modulo
add_command("INTEGER", "c", <<["B", "INTEGER"], ["b", "BOOLEAN"], ["A", "BOOLEAN"], ["c", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "INTEGER"]>>)
logical_negation
int_value (17)
bool_value (true)
add_call_chain(<<a,INTEGER,d>>)
add_query("c", "B", <<["C", "BOOLEAN"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["c", "BOOLEAN"], ["b", "c"]>>, "INTEGER")
add_command("d", "D", <<["B", "INTEGER"], ["B", "INTEGER"], ["A", "b"], ["C", "BOOLEAN"], ["C", "BOOLEAN"]>>)
bool_value (true)
add_attribute("D", "B", "a")
logical_negation
greater_than
subtraction
add_attribute("e", "b", "INTEGER")
numerical_negation
bool_value (false)
add_class(c)
generate_java_code
generate_java_code
addition
add_command("d", "b", <<["C", "INTEGER"], ["c", "b"], ["e", "INTEGER"], ["C", "BOOLEAN"], ["e", "BOOLEAN"]>>)
numerical_negation
numerical_negation
bool_value (false)
type_check
int_value (23)
add_command("C", "e", <<["BOOLEAN", "a"], ["C", "INTEGER"], ["e", "BOOLEAN"], ["D", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>)
add_command("A", "b", <<["A", "INTEGER"], ["b", "INTEGER"], ["e", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["e", "BOOLEAN"]>>)
generate_java_code
conjunction
greater_than
add_call_chain(<<BOOLEAN,C,A,C,b,c>>)
numerical_negation
add_command("C", "B", <<["D", "BOOLEAN"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "INTEGER"]>>)
add_call_chain(<<B,D,D>>)
add_command("A", "C", <<["e", "INTEGER"], ["C", "BOOLEAN"], ["e", "B"], ["c", "BOOLEAN"]>>)
bool_value (false)
generate_java_code
type_check
bool_value (false)
conjunction
equals
int_value (43)
bool_value (true)
quotient
add_command("c", "D", <<["C", "a"], ["B", "D"], ["A", "INTEGER"]>>)
add_attribute("c", "d", "INTEGER")
add_call_chain(<<e,c,e,e,INTEGER,D,A>>)
numerical_negation
add_call_chain(<<D,b>>)
equals
disjunction
int_value (1)
add_attribute("c", "D", "INTEGER")
add_command("a", "A", <<["BOOLEAN", "INTEGER"], ["C", "A"]>>)
disjunction
addition
bool_value (true)
generate_java_code
logical_negation
int_value (3)
numerical_negation
generate_java_code
int_value (36)
add_query("a", "D", <<["C", "BOOLEAN"], ["c", "INTEGER"], ["B", "BOOLEAN"]>>, "a")
int_value (32)
add_call_chain(<<B,a>>)
add_call_chain(<<D,e,e,a,D,d,b,c>>)
type_check
int_value (42)
disjunction
add_query("B", "c", <<["e", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "A"], ["A", "C"], ["b", "INTEGER"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["b", "INTEGER"], ["C", "A"]>>, "A")
type_check
disjunction
subtraction
add_command("d", "b", <<["b", "INTEGER"], ["e", "BOOLEAN"], ["B", "A"], ["b", "BOOLEAN"], ["e", "INTEGER"], ["B", "e"], ["d", "d"], ["b", "INTEGER"]>>)
numerical_negation
numerical_negation
bool_value (true)
numerical_negation
add_query("C", "d", <<["a", "INTEGER"], ["c", "c"], ["BOOLEAN", "A"], ["D", "INTEGER"]>>, "C")
modulo
int_value (37)
add_call_chain(<<B,A,c,C,BOOLEAN,C,a>>)
add_call_chain(<<D,c,D,BOOLEAN,D,A,A>>)
add_call_chain(<<B,A,e,d,B,c,D>>)
add_class(A)
add_call_chain(<<C,C,INTEGER,c,e,INTEGER,D,B>>)
add_query("a", "A", <<["B", "BOOLEAN"], ["d", "A"], ["C", "d"], ["e", "e"], ["D", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "INTEGER"]>>, "d")
add_class(d)
add_call_chain(<<d,B,b,D,C,B,D,b,a>>)
add_class(a)
add_call_chain(<<c,A,INTEGER,b,c,e,B,c,BOOLEAN>>)
add_query("d", "B", <<["B", "d"]>>, "C")
logical_negation
add_call_chain(<<C,A,b,C,B,BOOLEAN,BOOLEAN,B,B>>)
add_query("b", "D", <<["B", "a"], ["b", "INTEGER"], ["D", "e"], ["e", "BOOLEAN"], ["c", "a"], ["c", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "C"]>>, "C")
int_value (29)
logical_negation
numerical_negation
type_check
add_query("e", "b", <<["C", "INTEGER"], ["BOOLEAN", "b"], ["a", "BOOLEAN"], ["B", "INTEGER"], ["d", "INTEGER"]>>, "B")
add_call_chain(<<b,d,A,B,b>>)
generate_java_code
generate_java_code
generate_java_code
add_call_chain(<<b,B,D,B,C,d>>)
int_value (2)
add_command("B", "a", <<["c", "INTEGER"]>>)
add_attribute("C", "A", "INTEGER")
add_call_chain(<<c>>)
logical_negation
add_command("B", "D", <<["e", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "BOOLEAN"]>>)
add_command("D", "c", <<["INTEGER", "A"], ["D", "BOOLEAN"], ["e", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["BOOLEAN", "D"], ["C", "a"]>>)
add_call_chain(<<e,INTEGER,e,INTEGER>>)
addition
int_value (28)
equals
add_query("B", "a", <<["c", "BOOLEAN"], ["c", "BOOLEAN"], ["a", "B"], ["b", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "INTEGER"], ["c", "BOOLEAN"]>>, "d")
greater_than
add_call_chain(<<B,D,e,e,INTEGER,b>>)
int_value (3)
add_call_chain(<<a,a,INTEGER,C,C>>)
numerical_negation
generate_java_code
disjunction
less_than
add_call_chain(<<INTEGER,C>>)
logical_negation
add_query("c", "b", <<["b", "c"], ["b", "b"]>>, "C")
add_class(d)
bool_value (true)
add_command("a", "d", <<["INTEGER", "d"], ["a", "INTEGER"], ["d", "INTEGER"], ["d", "INTEGER"]>>)
add_class(e)
generate_java_code
add_call_chain(<<a,D,d,c,D,d>>)
add_call_chain(<<D,INTEGER,A,C,A>>)
