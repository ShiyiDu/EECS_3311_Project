type_check
add_call_chain(<<B,a,b,c,c>>)
bool_value (false)
add_query("D", "c", <<["b", "INTEGER"], ["B", "INTEGER"], ["C", "INTEGER"], ["d", "A"], ["INTEGER", "BOOLEAN"]>>, "C")
add_command("a", "C", <<["B", "BOOLEAN"], ["C", "INTEGER"], ["b", "A"], ["b", "INTEGER"]>>)
subtraction
add_call_chain(<<e,INTEGER,a,b,b>>)
less_than
logical_negation
int_value (22)
add_command("c", "BOOLEAN", <<["e", "A"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["BOOLEAN", "a"], ["b", "BOOLEAN"]>>)
add_query("B", "B", <<["BOOLEAN", "c"], ["A", "INTEGER"], ["D", "INTEGER"]>>, "D")
add_call_chain(<<B,A,a,C,A>>)
numerical_negation
add_query("B", "c", <<["BOOLEAN", "a"], ["b", "INTEGER"], ["a", "C"], ["C", "BOOLEAN"], ["b", "BOOLEAN"]>>, "a")
int_value (42)
add_call_chain(<<D,C,INTEGER,D,B,d,c>>)
greater_than
equals
logical_negation
disjunction
type_check
add_class(A)
bool_value (false)
add_query("c", "b", <<["C", "C"], ["B", "BOOLEAN"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["c", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "e"]>>, "D")
disjunction
add_call_chain(<<c,b,A,B,b,A,B>>)
int_value (29)
add_call_chain(<<b,e,D,d,D,d,A,e>>)
add_call_chain(<<D,e,b,A,A,D,b>>)
numerical_negation
type_check
generate_java_code
add_call_chain(<<D,b,D,D>>)
add_call_chain(<<c,C,BOOLEAN,D>>)
add_query("b", "BOOLEAN", <<["C", "b"], ["D", "INTEGER"], ["a", "BOOLEAN"], ["b", "BOOLEAN"]>>, "D")
add_attribute("BOOLEAN", "INTEGER", "BOOLEAN")
add_attribute("D", "b", "C")
add_command("A", "d", <<["a", "d"], ["INTEGER", "BOOLEAN"], ["D", "INTEGER"], ["c", "e"], ["b", "INTEGER"], ["BOOLEAN", "INTEGER"], ["d", "INTEGER"]>>)
int_value (40)
add_call_chain(<<d,D,A,a,a>>)
bool_value (true)
add_query("D", "c", <<["d", "B"], ["a", "INTEGER"], ["D", "INTEGER"], ["b", "INTEGER"], ["D", "BOOLEAN"], ["C", "BOOLEAN"], ["b", "A"], ["b", "A"], ["c", "BOOLEAN"]>>, "b")
numerical_negation
subtraction
add_class(C)
type_check
disjunction
addition
add_command("D", "D", <<["a", "A"], ["D", "BOOLEAN"], ["c", "C"], ["d", "BOOLEAN"]>>)
add_command("A", "B", <<["D", "BOOLEAN"], ["INTEGER", "INTEGER"], ["c", "BOOLEAN"], ["b", "INTEGER"], ["a", "BOOLEAN"], ["A", "b"], ["B", "INTEGER"], ["e", "a"]>>)
bool_value (false)
int_value (4)
add_call_chain(<<c,e>>)
add_attribute("D", "e", "BOOLEAN")
add_call_chain(<<INTEGER,B,INTEGER>>)
generate_java_code
add_query("C", "D", <<["e", "INTEGER"], ["d", "BOOLEAN"], ["D", "B"], ["c", "e"], ["e", "BOOLEAN"]>>, "b")
bool_value (true)
add_query("b", "d", <<["e", "D"], ["e", "INTEGER"], ["A", "INTEGER"], ["C", "INTEGER"], ["b", "INTEGER"]>>, "e")
add_call_chain(<<b,e,b,C,d,D,C>>)
int_value (2)
add_call_chain(<<b,b,INTEGER,INTEGER>>)
addition
greater_than
add_attribute("INTEGER", "a", "e")
numerical_negation
disjunction
add_call_chain(<<C,C,C,c>>)
add_attribute("e", "A", "BOOLEAN")
add_call_chain(<<C,B,C,e,a,C,c>>)
add_class(d)
add_call_chain(<<BOOLEAN,c,B,c,A>>)
add_command("e", "b", <<["a", "INTEGER"], ["e", "INTEGER"], ["D", "B"], ["A", "D"], ["A", "BOOLEAN"], ["A", "INTEGER"], ["C", "BOOLEAN"], ["c", "INTEGER"]>>)
add_attribute("a", "INTEGER", "BOOLEAN")
logical_negation
add_query("A", "b", <<["C", "BOOLEAN"], ["b", "BOOLEAN"]>>, "C")
add_call_chain(<<INTEGER,c,D,D,A,B,c,INTEGER,e>>)
int_value (32)
less_than
add_command("D", "B", <<["D", "BOOLEAN"], ["D", "INTEGER"], ["D", "e"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "INTEGER"], ["B", "d"]>>)
numerical_negation
add_query("b", "INTEGER", <<["INTEGER", "BOOLEAN"], ["a", "c"], ["C", "c"], ["e", "BOOLEAN"], ["C", "A"], ["C", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>, "BOOLEAN")
numerical_negation
add_query("C", "e", <<["b", "a"], ["B", "INTEGER"], ["e", "D"], ["A", "INTEGER"], ["d", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "INTEGER"], ["BOOLEAN", "INTEGER"], ["INTEGER", "b"]>>, "D")
add_class(BOOLEAN)
add_attribute("D", "c", "BOOLEAN")
int_value (2)
add_call_chain(<<BOOLEAN,C,INTEGER,e,D,a>>)
less_than
add_attribute("A", "A", "D")
numerical_negation
int_value (1)
type_check
add_command("C", "D", <<["b", "INTEGER"], ["B", "c"], ["b", "C"], ["A", "INTEGER"], ["a", "B"], ["c", "BOOLEAN"], ["D", "D"], ["b", "c"]>>)
add_query("D", "B", <<["A", "INTEGER"], ["D", "BOOLEAN"], ["A", "B"], ["e", "INTEGER"]>>, "a")
bool_value (true)
bool_value (false)
add_call_chain(<<B,A,c>>)
addition
add_query("INTEGER", "a", <<["e", "INTEGER"], ["C", "B"], ["d", "INTEGER"], ["INTEGER", "BOOLEAN"], ["e", "a"], ["C", "INTEGER"], ["b", "INTEGER"], ["a", "BOOLEAN"], ["A", "INTEGER"]>>, "B")
bool_value (false)
less_than
add_command("B", "a", <<["D", "BOOLEAN"]>>)
add_attribute("INTEGER", "D", "c")
add_attribute("INTEGER", "C", "INTEGER")
int_value (4)
add_query("A", "d", <<["b", "INTEGER"], ["A", "BOOLEAN"], ["D", "BOOLEAN"]>>, "C")
add_call_chain(<<D,c,INTEGER,A,a,e,c,C,e>>)
add_command("a", "c", <<["BOOLEAN", "INTEGER"], ["C", "BOOLEAN"], ["C", "c"], ["C", "D"], ["b", "INTEGER"], ["c", "BOOLEAN"]>>)
add_query("e", "C", <<["D", "BOOLEAN"], ["A", "c"], ["A", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "BOOLEAN"], ["b", "C"], ["a", "BOOLEAN"], ["B", "INTEGER"]>>, "a")
add_class(e)
quotient
add_attribute("e", "a", "BOOLEAN")
numerical_negation
type_check
logical_negation
add_call_chain(<<INTEGER,c,D,a,b,D,b,b>>)
add_command("A", "BOOLEAN", <<["a", "INTEGER"]>>)
logical_negation
multiplication
add_call_chain(<<d,a>>)
bool_value (true)
bool_value (true)
add_call_chain(<<C,C,e>>)
addition
numerical_negation
add_attribute("INTEGER", "C", "BOOLEAN")
bool_value (true)
add_call_chain(<<A,C,c,a,A,C,d>>)
disjunction
quotient
disjunction
equals
add_query("d", "a", <<["B", "BOOLEAN"], ["B", "e"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "D"], ["D", "INTEGER"]>>, "C")
numerical_negation
int_value (22)
add_command("a", "a", <<["b", "BOOLEAN"], ["A", "INTEGER"], ["A", "INTEGER"], ["e", "INTEGER"], ["D", "BOOLEAN"]>>)
add_query("C", "c", <<["C", "BOOLEAN"], ["A", "INTEGER"], ["e", "BOOLEAN"], ["e", "INTEGER"], ["d", "INTEGER"], ["B", "c"], ["d", "INTEGER"]>>, "b")
add_class(e)
add_query("A", "a", <<["b", "INTEGER"], ["d", "INTEGER"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["c", "BOOLEAN"], ["INTEGER", "INTEGER"], ["d", "BOOLEAN"]>>, "B")
add_class(b)
add_call_chain(<<B,B,b,b>>)
add_call_chain(<<b,a,INTEGER,a,a,BOOLEAN>>)
add_call_chain(<<C,A,A,BOOLEAN,A>>)
generate_java_code
type_check
add_query("a", "d", <<["A", "INTEGER"], ["b", "INTEGER"]>>, "A")
int_value (21)
add_attribute("D", "A", "BOOLEAN")
add_query("D", "e", <<["C", "e"], ["D", "BOOLEAN"]>>, "d")
add_query("D", "e", <<["A", "BOOLEAN"], ["e", "D"], ["a", "INTEGER"], ["a", "BOOLEAN"], ["B", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["B", "b"]>>, "B")
subtraction
equals
int_value (14)
add_call_chain(<<D>>)
add_call_chain(<<C,A,A,b,A,C,c,d,BOOLEAN>>)
add_class(b)
add_class(e)
add_call_chain(<<b,A,b,BOOLEAN,B>>)
add_query("e", "b", <<["d", "A"]>>, "A")
numerical_negation
add_command("C", "d", <<["c", "BOOLEAN"], ["a", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
disjunction
conjunction
add_call_chain(<<INTEGER>>)
add_call_chain(<<B,e,e,e,d,e,A,BOOLEAN>>)
add_attribute("c", "e", "INTEGER")
logical_negation
add_query("c", "c", <<["a", "BOOLEAN"], ["D", "INTEGER"], ["c", "B"], ["a", "BOOLEAN"], ["B", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>, "c")
add_class(a)
int_value (17)
disjunction
bool_value (false)
numerical_negation
add_attribute("c", "D", "BOOLEAN")
add_attribute("c", "C", "C")
add_class(a)
logical_negation
add_command("D", "a", <<["D", "INTEGER"], ["a", "B"], ["D", "BOOLEAN"], ["BOOLEAN", "b"], ["b", "INTEGER"], ["a", "INTEGER"], ["B", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>)
add_call_chain(<<c,c,C>>)
less_than
add_call_chain(<<C,C,d,C>>)
conjunction
add_call_chain(<<c,D,A,a,B,BOOLEAN>>)
add_query("b", "B", <<["INTEGER", "BOOLEAN"]>>, "D")
add_call_chain(<<d,B>>)
add_command("B", "A", <<["B", "BOOLEAN"], ["d", "BOOLEAN"]>>)
logical_negation
int_value (7)
type_check
add_query("e", "b", <<["INTEGER", "INTEGER"], ["B", "e"]>>, "C")
bool_value (true)
add_call_chain(<<a,D,A,A,BOOLEAN,b,c,b,C>>)
add_call_chain(<<D,a,B,e,C,d,b,A,D>>)
add_class(a)
logical_negation
bool_value (false)
logical_negation
add_call_chain(<<C,d,a,a,INTEGER,A>>)
multiplication
add_query("b", "D", <<["b", "BOOLEAN"], ["c", "BOOLEAN"], ["a", "A"], ["a", "C"], ["D", "INTEGER"], ["BOOLEAN", "BOOLEAN"]>>, "A")
int_value (35)
disjunction
disjunction
int_value (21)
bool_value (true)
add_attribute("C", "BOOLEAN", "BOOLEAN")
equals
add_query("d", "C", <<["d", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["a", "BOOLEAN"], ["d", "BOOLEAN"], ["c", "A"], ["B", "INTEGER"], ["INTEGER", "BOOLEAN"], ["b", "BOOLEAN"]>>, "A")
disjunction
generate_java_code
add_query("c", "b", <<["c", "INTEGER"], ["C", "INTEGER"], ["c", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "b"], ["BOOLEAN", "INTEGER"]>>, "b")
type_check
add_class(B)
add_call_chain(<<B,a,INTEGER,b,d,c,D>>)
add_command("C", "B", <<["d", "BOOLEAN"], ["d", "BOOLEAN"], ["INTEGER", "e"], ["INTEGER", "b"], ["BOOLEAN", "A"], ["a", "BOOLEAN"]>>)
add_query("D", "d", <<["b", "INTEGER"], ["e", "BOOLEAN"], ["B", "a"]>>, "B")
add_call_chain(<<D,A>>)
add_query("A", "A", <<["A", "D"], ["c", "INTEGER"], ["c", "BOOLEAN"], ["c", "INTEGER"], ["D", "a"], ["d", "INTEGER"], ["e", "BOOLEAN"]>>, "d")
add_call_chain(<<INTEGER,e,A,B,e,B>>)
int_value (38)
add_command("e", "D", <<["D", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "BOOLEAN"]>>)
bool_value (false)
add_attribute("e", "BOOLEAN", "BOOLEAN")
numerical_negation
int_value (2)
disjunction
add_call_chain(<<c,BOOLEAN,e,D>>)
add_attribute("e", "e", "INTEGER")
add_call_chain(<<b,D,C,INTEGER,c,c,D,C>>)
numerical_negation
int_value (31)
multiplication
type_check
type_check
generate_java_code
disjunction
bool_value (true)
add_command("INTEGER", "a", <<["B", "D"], ["b", "BOOLEAN"], ["b", "BOOLEAN"], ["b", "INTEGER"], ["C", "c"], ["d", "INTEGER"], ["c", "INTEGER"], ["c", "INTEGER"]>>)
add_call_chain(<<B,C>>)
int_value (39)
add_class(B)
add_query("C", "d", <<["b", "BOOLEAN"], ["INTEGER", "INTEGER"], ["b", "BOOLEAN"], ["c", "BOOLEAN"]>>, "d")
add_call_chain(<<B,d>>)
add_class(C)
add_call_chain(<<b>>)
add_call_chain(<<B,B,a,d,c,A,c,A>>)
numerical_negation
add_query("a", "c", <<["b", "INTEGER"], ["c", "INTEGER"], ["D", "INTEGER"], ["INTEGER", "B"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["b", "INTEGER"], ["D", "BOOLEAN"], ["a", "BOOLEAN"]>>, "b")
add_query("c", "A", <<["c", "c"], ["D", "D"]>>, "C")
add_class(c)
logical_negation
add_class(A)
add_class(A)
numerical_negation
int_value (26)
