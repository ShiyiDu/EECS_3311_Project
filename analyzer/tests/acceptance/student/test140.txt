add_attribute("d", "c", "BOOLEAN")
add_attribute("e", "BOOLEAN", "INTEGER")
add_query("A", "A", <<["B", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "A"], ["d", "a"], ["C", "d"], ["INTEGER", "e"], ["D", "INTEGER"], ["e", "BOOLEAN"], ["c", "BOOLEAN"]>>, "C")
add_query("d", "c", <<["A", "c"], ["b", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["b", "BOOLEAN"], ["d", "INTEGER"], ["INTEGER", "BOOLEAN"], ["B", "INTEGER"], ["d", "BOOLEAN"]>>, "B")
add_attribute("B", "INTEGER", "BOOLEAN")
add_call_chain(<<e,a,b,a,b,a,D,C>>)
add_class(c)
generate_java_code
add_command("BOOLEAN", "e", <<["d", "a"], ["d", "a"], ["d", "BOOLEAN"], ["A", "BOOLEAN"]>>)
add_attribute("A", "a", "BOOLEAN")
greater_than
add_command("BOOLEAN", "A", <<["e", "INTEGER"], ["b", "BOOLEAN"], ["d", "INTEGER"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["c", "BOOLEAN"]>>)
bool_value (false)
int_value (39)
add_call_chain(<<A,A,B,INTEGER,b,c,C,a>>)
add_attribute("b", "B", "INTEGER")
bool_value (true)
add_attribute("b", "B", "INTEGER")
add_query("b", "C", <<["A", "BOOLEAN"], ["c", "c"], ["INTEGER", "INTEGER"], ["c", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["d", "INTEGER"], ["e", "INTEGER"], ["A", "INTEGER"]>>, "B")
logical_negation
numerical_negation
add_command("d", "B", <<["BOOLEAN", "D"], ["BOOLEAN", "A"], ["a", "A"]>>)
logical_negation
add_command("A", "e", <<["D", "INTEGER"], ["A", "A"], ["A", "C"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["d", "d"]>>)
add_class(e)
add_command("C", "a", <<["BOOLEAN", "BOOLEAN"], ["e", "A"], ["e", "BOOLEAN"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["BOOLEAN", "INTEGER"], ["B", "D"]>>)
generate_java_code
numerical_negation
numerical_negation
add_command("BOOLEAN", "BOOLEAN", <<["B", "C"], ["B", "INTEGER"]>>)
add_call_chain(<<A,e,A,D>>)
add_call_chain(<<d,d,D,D,B>>)
add_command("d", "b", <<["a", "BOOLEAN"], ["c", "d"], ["C", "INTEGER"], ["INTEGER", "BOOLEAN"], ["B", "c"]>>)
conjunction
logical_negation
add_query("A", "b", <<["e", "BOOLEAN"], ["C", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["A", "INTEGER"]>>, "C")
add_command("C", "b", <<["B", "INTEGER"], ["B", "e"], ["D", "BOOLEAN"], ["B", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
add_command("A", "BOOLEAN", <<["d", "a"], ["INTEGER", "BOOLEAN"], ["c", "BOOLEAN"], ["c", "BOOLEAN"]>>)
add_query("c", "A", <<["C", "INTEGER"], ["e", "C"], ["A", "a"], ["d", "INTEGER"]>>, "BOOLEAN")
add_call_chain(<<C>>)
generate_java_code
add_call_chain(<<d,D,e,b,INTEGER,d,D,A>>)
add_command("INTEGER", "B", <<["D", "C"], ["A", "INTEGER"], ["C", "C"]>>)
add_call_chain(<<B,C,D,a,b,e,a,D>>)
add_call_chain(<<B,e,C,A,A,e,INTEGER,d>>)
logical_negation
add_call_chain(<<c,D,C,D>>)
type_check
add_call_chain(<<a>>)
add_class(C)
add_class(A)
add_class(B)
logical_negation
type_check
bool_value (true)
add_call_chain(<<e,B,d,c>>)
bool_value (true)
add_query("b", "e", <<["e", "D"], ["B", "INTEGER"]>>, "A")
add_attribute("D", "d", "BOOLEAN")
numerical_negation
less_than
type_check
add_query("B", "e", <<["c", "C"], ["D", "INTEGER"], ["INTEGER", "INTEGER"], ["A", "BOOLEAN"], ["A", "INTEGER"], ["INTEGER", "INTEGER"], ["A", "b"]>>, "c")
add_call_chain(<<B,C,BOOLEAN,A>>)
add_query("A", "BOOLEAN", <<["B", "INTEGER"], ["C", "INTEGER"], ["B", "INTEGER"], ["d", "e"], ["d", "INTEGER"], ["INTEGER", "BOOLEAN"], ["A", "INTEGER"], ["e", "BOOLEAN"]>>, "A")
addition
add_command("INTEGER", "C", <<["B", "INTEGER"], ["d", "BOOLEAN"], ["d", "INTEGER"]>>)
generate_java_code
add_call_chain(<<D,BOOLEAN,D,b,INTEGER>>)
add_attribute("c", "e", "A")
add_call_chain(<<b>>)
less_than
numerical_negation
conjunction
add_call_chain(<<BOOLEAN,e,C,C,A,BOOLEAN,a,INTEGER>>)
add_query("c", "A", <<["D", "INTEGER"], ["c", "BOOLEAN"], ["B", "INTEGER"], ["e", "BOOLEAN"]>>, "e")
add_class(D)
add_command("e", "c", <<["INTEGER", "b"], ["c", "BOOLEAN"], ["d", "A"], ["b", "BOOLEAN"]>>)
numerical_negation
add_command("BOOLEAN", "D", <<["b", "INTEGER"], ["d", "BOOLEAN"], ["B", "B"], ["A", "b"], ["e", "INTEGER"]>>)
int_value (19)
bool_value (false)
add_call_chain(<<BOOLEAN,c,C,c,b,C>>)
int_value (14)
logical_negation
add_query("INTEGER", "b", <<["d", "BOOLEAN"], ["a", "INTEGER"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["e", "a"], ["D", "BOOLEAN"], ["C", "b"], ["D", "BOOLEAN"], ["b", "INTEGER"]>>, "B")
add_call_chain(<<INTEGER,b,D,BOOLEAN,c,B,c,b>>)
add_query("d", "BOOLEAN", <<["A", "BOOLEAN"], ["B", "INTEGER"], ["BOOLEAN", "INTEGER"], ["B", "BOOLEAN"], ["c", "b"], ["c", "b"], ["a", "BOOLEAN"], ["C", "INTEGER"]>>, "d")
add_attribute("D", "b", "INTEGER")
add_command("INTEGER", "D", <<["e", "BOOLEAN"], ["c", "INTEGER"], ["B", "b"], ["d", "BOOLEAN"], ["B", "INTEGER"], ["BOOLEAN", "INTEGER"], ["c", "c"]>>)
generate_java_code
add_attribute("C", "B", "C")
add_query("a", "BOOLEAN", <<["c", "BOOLEAN"], ["e", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["a", "e"]>>, "d")
generate_java_code
add_command("B", "B", <<["D", "BOOLEAN"], ["A", "B"], ["C", "INTEGER"], ["A", "INTEGER"], ["d", "b"]>>)
greater_than
add_attribute("A", "C", "INTEGER")
add_class(c)
add_attribute("B", "B", "INTEGER")
add_attribute("e", "D", "BOOLEAN")
generate_java_code
add_attribute("c", "e", "BOOLEAN")
add_class(a)
add_call_chain(<<d,D,c,a,e,d,a>>)
add_attribute("B", "B", "INTEGER")
generate_java_code
add_query("B", "A", <<["b", "B"], ["C", "INTEGER"], ["a", "INTEGER"]>>, "d")
add_call_chain(<<a,a,d>>)
quotient
add_attribute("B", "A", "BOOLEAN")
logical_negation
type_check
add_class(B)
less_than
subtraction
add_call_chain(<<a,A,INTEGER,C,d,B,e,e>>)
add_call_chain(<<b,D,d>>)
int_value (18)
add_query("C", "B", <<["B", "INTEGER"], ["B", "INTEGER"], ["e", "INTEGER"]>>, "e")
add_class(INTEGER)
bool_value (false)
bool_value (true)
type_check
add_query("b", "INTEGER", <<["b", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "INTEGER"], ["c", "BOOLEAN"], ["a", "BOOLEAN"], ["c", "BOOLEAN"], ["b", "INTEGER"], ["e", "INTEGER"], ["A", "INTEGER"]>>, "C")
add_call_chain(<<C,c>>)
int_value (32)
disjunction
add_class(INTEGER)
logical_negation
bool_value (true)
numerical_negation
int_value (11)
numerical_negation
type_check
add_query("BOOLEAN", "D", <<["D", "INTEGER"], ["b", "INTEGER"], ["a", "INTEGER"], ["B", "B"], ["C", "c"], ["A", "A"], ["A", "BOOLEAN"], ["c", "BOOLEAN"], ["d", "c"]>>, "D")
add_command("B", "B", <<["a", "BOOLEAN"], ["B", "INTEGER"], ["a", "b"], ["e", "INTEGER"], ["a", "BOOLEAN"], ["D", "b"], ["b", "BOOLEAN"], ["b", "B"]>>)
int_value (23)
add_call_chain(<<B,b,INTEGER,A,C,D,A,D>>)
type_check
logical_negation
add_call_chain(<<d,INTEGER,d,c,b,B,A,c>>)
less_than
numerical_negation
bool_value (false)
add_call_chain(<<C,a,C,a,d>>)
int_value (21)
add_call_chain(<<A,D,C,b,d>>)
logical_negation
multiplication
add_query("A", "D", <<["d", "B"], ["D", "INTEGER"], ["C", "BOOLEAN"], ["B", "c"], ["D", "INTEGER"], ["B", "A"], ["e", "D"], ["C", "C"]>>, "d")
int_value (15)
add_class(c)
add_class(b)
add_attribute("a", "BOOLEAN", "e")
add_command("B", "B", <<["C", "BOOLEAN"], ["a", "BOOLEAN"], ["A", "c"], ["B", "BOOLEAN"], ["D", "C"], ["B", "INTEGER"], ["d", "INTEGER"], ["A", "INTEGER"], ["C", "INTEGER"]>>)
add_call_chain(<<C,d,a>>)
add_command("a", "D", <<["BOOLEAN", "BOOLEAN"], ["a", "b"], ["a", "D"], ["d", "INTEGER"], ["B", "INTEGER"], ["e", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "INTEGER"]>>)
add_attribute("a", "e", "INTEGER")
add_command("a", "B", <<["D", "BOOLEAN"], ["d", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "BOOLEAN"], ["INTEGER", "INTEGER"], ["d", "e"]>>)
addition
bool_value (false)
quotient
type_check
add_command("C", "b", <<["b", "INTEGER"]>>)
add_command("D", "D", <<["b", "BOOLEAN"], ["C", "INTEGER"], ["b", "INTEGER"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["D", "A"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>)
bool_value (true)
int_value (15)
add_call_chain(<<B,C,c,BOOLEAN>>)
multiplication
modulo
numerical_negation
add_call_chain(<<C,d,C,c,b,c,BOOLEAN>>)
generate_java_code
add_call_chain(<<c,B,d,D>>)
add_attribute("B", "D", "BOOLEAN")
add_call_chain(<<BOOLEAN,D,A,b,A,BOOLEAN,B,d,d>>)
add_call_chain(<<C,D,A,INTEGER,c,d,c,B>>)
add_command("b", "e", <<["b", "INTEGER"], ["C", "D"], ["C", "BOOLEAN"]>>)
add_command("a", "A", <<["INTEGER", "INTEGER"], ["c", "INTEGER"], ["C", "a"], ["C", "BOOLEAN"], ["a", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["a", "D"], ["D", "BOOLEAN"]>>)
add_call_chain(<<a>>)
generate_java_code
add_call_chain(<<B,INTEGER,C>>)
add_call_chain(<<D>>)
conjunction
add_query("BOOLEAN", "A", <<["c", "INTEGER"], ["e", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "C"], ["e", "INTEGER"]>>, "B")
add_call_chain(<<d,a,B,e,C,D,D,e,A>>)
type_check
add_command("b", "C", <<["e", "INTEGER"], ["B", "BOOLEAN"], ["b", "BOOLEAN"], ["d", "INTEGER"], ["B", "e"], ["B", "B"], ["D", "INTEGER"]>>)
add_class(e)
add_query("C", "c", <<["e", "INTEGER"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["A", "d"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "INTEGER"], ["A", "BOOLEAN"], ["b", "BOOLEAN"]>>, "D")
add_class(C)
add_command("C", "d", <<["d", "BOOLEAN"], ["B", "BOOLEAN"], ["INTEGER", "c"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["A", "INTEGER"], ["C", "C"], ["c", "BOOLEAN"]>>)
numerical_negation
add_command("c", "c", <<["B", "INTEGER"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["a", "INTEGER"], ["D", "INTEGER"], ["A", "BOOLEAN"], ["B", "INTEGER"], ["b", "INTEGER"]>>)
add_call_chain(<<D,D,c,a>>)
add_command("e", "C", <<["d", "b"], ["B", "INTEGER"], ["e", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "BOOLEAN"]>>)
bool_value (true)
type_check
generate_java_code
numerical_negation
numerical_negation
add_command("A", "C", <<["A", "INTEGER"], ["c", "INTEGER"], ["A", "BOOLEAN"], ["a", "a"], ["e", "INTEGER"], ["e", "e"]>>)
type_check
add_call_chain(<<INTEGER,b,D>>)
add_attribute("a", "D", "BOOLEAN")
add_call_chain(<<a,B,e,D,B>>)
numerical_negation
add_attribute("c", "b", "INTEGER")
type_check
bool_value (false)
add_query("b", "INTEGER", <<["B", "INTEGER"], ["A", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "INTEGER"]>>, "A")
add_command("d", "D", <<["A", "BOOLEAN"], ["b", "INTEGER"], ["B", "D"], ["C", "INTEGER"], ["A", "INTEGER"], ["b", "c"], ["BOOLEAN", "BOOLEAN"], ["b", "INTEGER"]>>)
add_attribute("A", "e", "BOOLEAN")
add_call_chain(<<c>>)
add_call_chain(<<a,a,c>>)
numerical_negation
int_value (24)
disjunction
add_command("b", "A", <<["B", "INTEGER"], ["C", "BOOLEAN"]>>)
bool_value (true)
bool_value (false)
add_call_chain(<<c,C>>)
add_query("e", "INTEGER", <<["e", "BOOLEAN"], ["b", "BOOLEAN"], ["D", "INTEGER"], ["C", "a"], ["b", "BOOLEAN"], ["e", "A"], ["D", "BOOLEAN"]>>, "e")
add_call_chain(<<c,C,A>>)
add_command("D", "b", <<["D", "INTEGER"], ["a", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "BOOLEAN"]>>)
bool_value (false)
add_class(e)
less_than
subtraction
add_command("C", "e", <<["D", "c"], ["a", "BOOLEAN"], ["e", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["a", "INTEGER"], ["B", "INTEGER"], ["b", "INTEGER"]>>)
add_query("d", "a", <<["C", "INTEGER"], ["C", "a"]>>, "D")
generate_java_code
add_call_chain(<<c,b,c,b,b,e,A>>)
