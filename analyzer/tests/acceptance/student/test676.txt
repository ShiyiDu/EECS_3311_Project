add_command("e", "e", <<["BOOLEAN", "INTEGER"], ["B", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["e", "A"], ["BOOLEAN", "c"], ["B", "C"], ["BOOLEAN", "A"], ["e", "BOOLEAN"]>>)
int_value (35)
add_query("C", "C", <<["e", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "INTEGER"], ["INTEGER", "D"], ["INTEGER", "BOOLEAN"], ["B", "INTEGER"]>>, "BOOLEAN")
logical_negation
int_value (13)
add_call_chain(<<A>>)
bool_value (false)
conjunction
disjunction
modulo
add_command("b", "B", <<["INTEGER", "BOOLEAN"], ["a", "INTEGER"], ["A", "A"], ["d", "BOOLEAN"], ["INTEGER", "INTEGER"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["d", "INTEGER"]>>)
add_query("C", "INTEGER", <<["D", "INTEGER"], ["D", "A"], ["d", "A"], ["c", "B"]>>, "INTEGER")
generate_java_code
generate_java_code
add_call_chain(<<a,C,A,C,A,d,A>>)
add_attribute("b", "d", "C")
add_call_chain(<<c,b,d>>)
add_call_chain(<<d,D,c,C,d>>)
type_check
add_class(e)
bool_value (false)
add_call_chain(<<a>>)
add_command("B", "b", <<["A", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["d", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "INTEGER"], ["BOOLEAN", "INTEGER"]>>)
numerical_negation
add_command("e", "A", <<["D", "INTEGER"], ["b", "INTEGER"], ["BOOLEAN", "INTEGER"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "BOOLEAN"]>>)
bool_value (true)
numerical_negation
add_call_chain(<<D,D>>)
type_check
int_value (40)
less_than
numerical_negation
add_call_chain(<<D>>)
add_call_chain(<<A,D,e,c,BOOLEAN,e,e,B,c>>)
add_query("e", "B", <<["A", "BOOLEAN"]>>, "c")
bool_value (false)
add_attribute("A", "D", "BOOLEAN")
add_call_chain(<<B,a,c,D,b,C,B,e,d>>)
add_query("B", "a", <<["B", "a"], ["C", "BOOLEAN"], ["d", "BOOLEAN"]>>, "C")
add_attribute("b", "e", "INTEGER")
type_check
logical_negation
add_attribute("d", "C", "BOOLEAN")
add_class(A)
add_query("e", "a", <<["C", "INTEGER"], ["D", "d"], ["d", "BOOLEAN"], ["c", "INTEGER"], ["B", "INTEGER"], ["d", "BOOLEAN"], ["a", "INTEGER"], ["c", "INTEGER"], ["c", "INTEGER"]>>, "d")
generate_java_code
add_command("D", "B", <<["C", "c"], ["d", "BOOLEAN"], ["A", "A"]>>)
int_value (9)
less_than
bool_value (false)
bool_value (false)
type_check
add_query("A", "C", <<["a", "BOOLEAN"], ["c", "e"], ["B", "INTEGER"], ["C", "INTEGER"]>>, "a")
quotient
generate_java_code
int_value (25)
add_attribute("D", "e", "INTEGER")
bool_value (true)
bool_value (false)
less_than
logical_negation
int_value (41)
add_call_chain(<<A,b,C,BOOLEAN,C,A,A,B,b>>)
numerical_negation
int_value (15)
generate_java_code
add_query("A", "B", <<["a", "a"], ["c", "INTEGER"]>>, "e")
int_value (34)
type_check
add_call_chain(<<C,D,c,d>>)
less_than
numerical_negation
type_check
logical_negation
add_class(BOOLEAN)
add_call_chain(<<b,a,B,C,C,C,a,INTEGER,e>>)
bool_value (true)
type_check
add_attribute("B", "C", "INTEGER")
add_attribute("A", "e", "BOOLEAN")
add_attribute("a", "A", "INTEGER")
int_value (4)
add_command("b", "B", <<["a", "BOOLEAN"], ["b", "INTEGER"], ["INTEGER", "b"], ["d", "BOOLEAN"], ["b", "C"], ["a", "INTEGER"], ["b", "INTEGER"]>>)
int_value (1)
add_attribute("BOOLEAN", "A", "BOOLEAN")
add_attribute("b", "d", "INTEGER")
addition
add_call_chain(<<C>>)
add_attribute("INTEGER", "B", "INTEGER")
generate_java_code
equals
add_call_chain(<<C,d,D,INTEGER,BOOLEAN,d>>)
add_call_chain(<<A,b,d,A,B,BOOLEAN,e>>)
add_query("D", "C", <<["D", "c"], ["C", "INTEGER"]>>, "D")
addition
add_call_chain(<<B,A>>)
int_value (41)
disjunction
less_than
add_attribute("D", "B", "a")
logical_negation
int_value (23)
add_attribute("d", "B", "INTEGER")
less_than
less_than
int_value (45)
int_value (7)
logical_negation
add_query("INTEGER", "b", <<["BOOLEAN", "BOOLEAN"], ["a", "b"], ["B", "c"], ["D", "INTEGER"]>>, "C")
add_attribute("BOOLEAN", "a", "B")
add_query("d", "BOOLEAN", <<["e", "D"], ["C", "INTEGER"], ["d", "INTEGER"], ["A", "INTEGER"], ["A", "D"], ["a", "BOOLEAN"]>>, "d")
bool_value (true)
add_attribute("e", "A", "B")
add_attribute("A", "C", "BOOLEAN")
logical_negation
add_command("d", "C", <<["d", "BOOLEAN"], ["c", "INTEGER"]>>)
add_call_chain(<<INTEGER,c,e,B,e,d,b,e>>)
add_command("C", "BOOLEAN", <<["b", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "INTEGER"]>>)
generate_java_code
int_value (18)
add_call_chain(<<C,D,e,D,B>>)
add_query("c", "a", <<["A", "INTEGER"], ["a", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "c"], ["a", "d"], ["D", "INTEGER"], ["D", "A"], ["INTEGER", "BOOLEAN"], ["e", "BOOLEAN"]>>, "C")
int_value (25)
add_class(e)
subtraction
add_query("D", "d", <<["c", "INTEGER"], ["a", "INTEGER"], ["c", "B"], ["b", "BOOLEAN"]>>, "c")
add_attribute("D", "C", "BOOLEAN")
add_command("A", "D", <<["B", "INTEGER"], ["INTEGER", "A"], ["BOOLEAN", "C"], ["d", "B"], ["d", "a"], ["e", "BOOLEAN"]>>)
add_command("b", "d", <<["e", "BOOLEAN"], ["c", "INTEGER"], ["A", "INTEGER"], ["A", "BOOLEAN"], ["a", "BOOLEAN"]>>)
type_check
multiplication
add_call_chain(<<INTEGER,a,D>>)
add_class(c)
add_command("INTEGER", "C", <<["b", "C"], ["a", "B"]>>)
add_call_chain(<<D,BOOLEAN,b,B,A,d,d>>)
add_call_chain(<<a,B,a,D,c>>)
numerical_negation
int_value (39)
type_check
int_value (15)
add_query("e", "d", <<["c", "INTEGER"], ["B", "INTEGER"]>>, "D")
logical_negation
type_check
quotient
int_value (49)
generate_java_code
greater_than
multiplication
add_query("d", "a", <<["D", "A"], ["BOOLEAN", "A"], ["a", "INTEGER"], ["a", "BOOLEAN"]>>, "D")
add_command("d", "a", <<["a", "c"], ["B", "BOOLEAN"], ["c", "INTEGER"], ["c", "BOOLEAN"], ["b", "C"], ["d", "C"]>>)
add_call_chain(<<D,b,b,e,B,C,d,INTEGER,d>>)
add_query("a", "e", <<["d", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "BOOLEAN"], ["D", "C"], ["A", "BOOLEAN"]>>, "A")
bool_value (true)
type_check
add_command("a", "b", <<["BOOLEAN", "INTEGER"], ["d", "INTEGER"]>>)
add_call_chain(<<A,e,INTEGER>>)
add_query("d", "INTEGER", <<["b", "INTEGER"]>>, "d")
add_command("C", "A", <<["a", "INTEGER"], ["d", "INTEGER"], ["C", "INTEGER"], ["a", "e"], ["b", "INTEGER"], ["a", "INTEGER"], ["d", "c"], ["D", "INTEGER"], ["BOOLEAN", "INTEGER"]>>)
add_call_chain(<<c,B,b,D,D,c>>)
disjunction
add_command("b", "b", <<["c", "BOOLEAN"]>>)
add_call_chain(<<a,D,e,d,d,c,d,B>>)
add_call_chain(<<C,a,A>>)
logical_negation
add_command("D", "e", <<["B", "BOOLEAN"], ["B", "B"], ["D", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "B"], ["b", "D"], ["b", "A"], ["D", "A"]>>)
add_call_chain(<<e,D,C,e,a,B,e>>)
add_attribute("b", "b", "INTEGER")
add_call_chain(<<c,a>>)
addition
addition
add_command("d", "C", <<["A", "INTEGER"], ["e", "INTEGER"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["C", "BOOLEAN"]>>)
numerical_negation
int_value (41)
bool_value (true)
add_class(e)
add_class(d)
multiplication
bool_value (false)
add_class(BOOLEAN)
add_query("B", "c", <<["e", "e"], ["d", "INTEGER"], ["a", "INTEGER"], ["D", "INTEGER"], ["B", "B"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["c", "C"]>>, "a")
add_attribute("D", "c", "BOOLEAN")
addition
add_class(a)
add_command("e", "A", <<["INTEGER", "a"], ["B", "INTEGER"], ["BOOLEAN", "B"], ["e", "e"], ["A", "BOOLEAN"], ["D", "A"]>>)
int_value (12)
add_call_chain(<<e,d,B,B,a,B>>)
add_query("b", "D", <<["A", "BOOLEAN"], ["D", "D"], ["C", "INTEGER"], ["D", "BOOLEAN"], ["C", "INTEGER"], ["a", "BOOLEAN"], ["B", "INTEGER"], ["a", "BOOLEAN"]>>, "C")
add_query("a", "C", <<["B", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["D", "BOOLEAN"]>>, "A")
quotient
greater_than
subtraction
bool_value (true)
less_than
addition
add_command("B", "D", <<["b", "C"], ["A", "BOOLEAN"], ["C", "e"], ["INTEGER", "INTEGER"], ["a", "INTEGER"], ["D", "BOOLEAN"], ["a", "BOOLEAN"]>>)
bool_value (false)
bool_value (true)
add_command("d", "a", <<["b", "C"], ["D", "BOOLEAN"], ["c", "B"]>>)
int_value (29)
add_class(d)
bool_value (true)
add_attribute("a", "c", "d")
add_call_chain(<<a,INTEGER,C,BOOLEAN,b,c,C,C>>)
add_call_chain(<<D,D,a,C,a,C,BOOLEAN,A>>)
add_call_chain(<<C,B>>)
bool_value (false)
type_check
add_query("A", "A", <<["b", "INTEGER"], ["d", "INTEGER"], ["e", "A"], ["C", "BOOLEAN"], ["e", "C"]>>, "B")
generate_java_code
type_check
add_command("b", "b", <<["C", "INTEGER"], ["A", "e"], ["a", "INTEGER"], ["B", "C"], ["c", "INTEGER"], ["A", "BOOLEAN"]>>)
add_call_chain(<<A,C,c,INTEGER,e,c,d,e>>)
logical_negation
numerical_negation
add_call_chain(<<C,B,B,B>>)
add_query("A", "b", <<["D", "D"], ["A", "C"], ["d", "A"], ["d", "a"], ["D", "INTEGER"], ["INTEGER", "INTEGER"], ["e", "B"], ["BOOLEAN", "d"], ["INTEGER", "INTEGER"]>>, "c")
numerical_negation
bool_value (false)
greater_than
addition
add_call_chain(<<D,a,c,D,D,D,A,b,BOOLEAN>>)
add_attribute("C", "c", "INTEGER")
add_query("c", "d", <<["e", "c"], ["C", "d"], ["a", "BOOLEAN"], ["C", "INTEGER"], ["a", "INTEGER"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "INTEGER"]>>, "B")
add_call_chain(<<BOOLEAN,INTEGER,D>>)
bool_value (true)
add_call_chain(<<B,d>>)
type_check
bool_value (false)
add_attribute("B", "e", "INTEGER")
bool_value (false)
add_call_chain(<<INTEGER,e,e,C,D,D,BOOLEAN,INTEGER>>)
add_call_chain(<<D,D,b,b>>)
addition
add_attribute("e", "B", "BOOLEAN")
add_command("d", "a", <<["D", "BOOLEAN"], ["B", "D"]>>)
add_command("INTEGER", "C", <<["BOOLEAN", "C"], ["c", "BOOLEAN"], ["B", "INTEGER"]>>)
type_check
generate_java_code
add_attribute("b", "B", "b")
add_attribute("d", "A", "BOOLEAN")
conjunction
type_check
quotient
int_value (29)
bool_value (false)
subtraction
int_value (42)
add_command("c", "BOOLEAN", <<["d", "a"], ["c", "BOOLEAN"], ["d", "INTEGER"], ["b", "d"]>>)
multiplication
bool_value (false)
