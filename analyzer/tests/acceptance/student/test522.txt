type_check
add_class(b)
add_call_chain(<<D>>)
subtraction
generate_java_code
add_query("c", "b", <<["c", "INTEGER"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["C", "d"], ["d", "INTEGER"]>>, "d")
add_call_chain(<<d,BOOLEAN,d>>)
conjunction
numerical_negation
add_call_chain(<<B>>)
type_check
add_attribute("c", "A", "BOOLEAN")
add_query("b", "C", <<["B", "INTEGER"], ["INTEGER", "INTEGER"], ["BOOLEAN", "a"], ["c", "BOOLEAN"], ["a", "A"]>>, "b")
generate_java_code
logical_negation
add_command("D", "A", <<["e", "d"], ["a", "INTEGER"], ["e", "D"], ["C", "BOOLEAN"]>>)
add_class(A)
multiplication
int_value (49)
multiplication
add_class(a)
greater_than
add_attribute("B", "C", "INTEGER")
add_query("A", "a", <<["b", "d"], ["e", "c"], ["d", "D"]>>, "A")
add_call_chain(<<e,C>>)
less_than
add_call_chain(<<D,B,e,BOOLEAN,D,A>>)
add_query("A", "D", <<["d", "C"], ["e", "INTEGER"], ["d", "INTEGER"], ["BOOLEAN", "B"], ["B", "INTEGER"], ["A", "C"], ["INTEGER", "d"]>>, "e")
add_class(C)
add_call_chain(<<e,B,d,a,e,d,A,C>>)
add_call_chain(<<c>>)
add_command("C", "c", <<["a", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "C"], ["e", "BOOLEAN"], ["C", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["e", "INTEGER"], ["a", "INTEGER"]>>)
type_check
bool_value (true)
add_command("b", "d", <<["B", "INTEGER"], ["C", "d"], ["a", "INTEGER"], ["INTEGER", "b"], ["D", "INTEGER"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["D", "INTEGER"]>>)
add_class(a)
int_value (31)
bool_value (true)
add_command("e", "b", <<["D", "A"], ["a", "INTEGER"], ["B", "BOOLEAN"]>>)
add_class(C)
add_call_chain(<<e,d,B,b,a,a,A,A>>)
bool_value (true)
add_call_chain(<<b>>)
logical_negation
int_value (44)
add_command("a", "C", <<["B", "INTEGER"], ["INTEGER", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "D"]>>)
bool_value (false)
add_call_chain(<<c,D>>)
equals
add_call_chain(<<D,C>>)
add_query("b", "D", <<["D", "INTEGER"], ["a", "INTEGER"], ["D", "INTEGER"], ["d", "e"]>>, "D")
greater_than
add_call_chain(<<C>>)
bool_value (true)
add_command("C", "C", <<["A", "INTEGER"], ["B", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "c"], ["INTEGER", "INTEGER"], ["D", "INTEGER"], ["B", "INTEGER"]>>)
numerical_negation
addition
logical_negation
add_query("D", "b", <<["D", "BOOLEAN"], ["BOOLEAN", "INTEGER"]>>, "INTEGER")
add_query("D", "C", <<["d", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "INTEGER"]>>, "e")
logical_negation
add_command("D", "A", <<["A", "BOOLEAN"], ["d", "b"], ["B", "C"], ["C", "INTEGER"], ["c", "INTEGER"], ["A", "INTEGER"], ["a", "D"]>>)
add_query("a", "c", <<["e", "INTEGER"], ["e", "BOOLEAN"], ["D", "INTEGER"], ["d", "BOOLEAN"], ["c", "C"], ["a", "a"], ["e", "INTEGER"]>>, "B")
add_call_chain(<<a,c,B,b,d,c>>)
logical_negation
add_call_chain(<<B,D,A,A,b,A,D,d,A>>)
logical_negation
numerical_negation
multiplication
numerical_negation
add_query("c", "c", <<["INTEGER", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "BOOLEAN"]>>, "D")
int_value (21)
add_class(D)
int_value (44)
add_command("d", "e", <<["C", "BOOLEAN"], ["D", "INTEGER"], ["A", "BOOLEAN"], ["c", "e"]>>)
logical_negation
conjunction
generate_java_code
add_query("a", "B", <<["e", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "e"], ["A", "D"], ["C", "BOOLEAN"]>>, "B")
add_attribute("a", "a", "BOOLEAN")
conjunction
logical_negation
add_query("D", "BOOLEAN", <<["a", "c"], ["INTEGER", "D"], ["e", "B"], ["B", "BOOLEAN"]>>, "C")
add_command("C", "d", <<["A", "BOOLEAN"], ["D", "BOOLEAN"], ["c", "BOOLEAN"], ["c", "INTEGER"], ["e", "BOOLEAN"], ["BOOLEAN", "D"], ["c", "BOOLEAN"]>>)
add_call_chain(<<c,a>>)
int_value (3)
add_attribute("D", "c", "INTEGER")
add_query("b", "e", <<["b", "BOOLEAN"]>>, "c")
int_value (24)
add_call_chain(<<d,e>>)
add_query("a", "b", <<["c", "b"], ["a", "BOOLEAN"], ["a", "INTEGER"], ["d", "BOOLEAN"], ["d", "INTEGER"], ["b", "INTEGER"], ["C", "BOOLEAN"], ["A", "a"]>>, "INTEGER")
add_command("d", "b", <<["B", "e"], ["d", "INTEGER"], ["b", "INTEGER"]>>)
add_query("e", "c", <<["c", "BOOLEAN"], ["e", "INTEGER"], ["c", "BOOLEAN"], ["A", "C"], ["D", "e"]>>, "c")
add_call_chain(<<c>>)
add_call_chain(<<BOOLEAN,c,INTEGER,b,B,e>>)
add_call_chain(<<C,c,B,a,A,e,D,C,c>>)
add_call_chain(<<a>>)
add_attribute("D", "a", "BOOLEAN")
disjunction
add_query("b", "a", <<["A", "INTEGER"], ["B", "BOOLEAN"]>>, "c")
greater_than
add_query("c", "INTEGER", <<["e", "D"]>>, "e")
modulo
numerical_negation
type_check
add_attribute("e", "c", "INTEGER")
quotient
add_attribute("c", "A", "BOOLEAN")
generate_java_code
int_value (13)
add_call_chain(<<d,D,e,C>>)
add_command("B", "B", <<["c", "b"], ["A", "INTEGER"], ["BOOLEAN", "d"]>>)
logical_negation
add_command("a", "a", <<["A", "B"], ["A", "BOOLEAN"], ["D", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "BOOLEAN"], ["INTEGER", "INTEGER"], ["A", "BOOLEAN"]>>)
logical_negation
add_class(INTEGER)
modulo
logical_negation
add_call_chain(<<C,c,A,e,a,BOOLEAN,B,b>>)
add_query("c", "A", <<["a", "d"], ["C", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "INTEGER"], ["c", "INTEGER"], ["B", "BOOLEAN"], ["d", "C"], ["D", "BOOLEAN"], ["a", "INTEGER"]>>, "B")
int_value (21)
bool_value (true)
add_call_chain(<<INTEGER,A,B,c>>)
add_query("a", "INTEGER", <<["BOOLEAN", "INTEGER"], ["INTEGER", "A"], ["B", "BOOLEAN"], ["c", "BOOLEAN"], ["b", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>, "a")
logical_negation
bool_value (true)
multiplication
bool_value (true)
generate_java_code
numerical_negation
add_command("A", "c", <<["a", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "INTEGER"], ["b", "e"], ["e", "BOOLEAN"], ["b", "A"]>>)
logical_negation
add_query("INTEGER", "b", <<["B", "BOOLEAN"], ["D", "A"], ["B", "INTEGER"], ["e", "BOOLEAN"], ["A", "BOOLEAN"], ["D", "INTEGER"], ["A", "D"]>>, "C")
add_call_chain(<<e,c,b>>)
int_value (41)
add_command("d", "b", <<["BOOLEAN", "d"], ["a", "D"], ["A", "C"]>>)
add_command("B", "d", <<["d", "C"], ["c", "INTEGER"], ["A", "A"], ["a", "c"], ["C", "A"], ["C", "INTEGER"], ["B", "INTEGER"]>>)
add_call_chain(<<BOOLEAN,c,d,e,A,B>>)
add_call_chain(<<c,e,B,B>>)
add_call_chain(<<BOOLEAN,C,e,c,A>>)
quotient
add_call_chain(<<a>>)
type_check
numerical_negation
add_call_chain(<<a,e,c,b>>)
int_value (30)
add_command("e", "B", <<["D", "INTEGER"], ["d", "D"], ["c", "A"]>>)
int_value (17)
multiplication
numerical_negation
numerical_negation
add_call_chain(<<C,c,c,c,C,a>>)
add_attribute("BOOLEAN", "A", "d")
add_command("B", "C", <<["B", "b"], ["A", "BOOLEAN"], ["c", "INTEGER"]>>)
add_command("B", "C", <<["C", "c"], ["B", "BOOLEAN"], ["B", "INTEGER"], ["c", "a"], ["e", "D"], ["D", "INTEGER"], ["d", "BOOLEAN"]>>)
generate_java_code
int_value (21)
add_call_chain(<<e,a>>)
add_call_chain(<<d,B,d,D,c,INTEGER,a,d,BOOLEAN>>)
add_attribute("a", "c", "b")
generate_java_code
bool_value (true)
bool_value (true)
add_call_chain(<<INTEGER,B,A,b,BOOLEAN>>)
add_class(b)
add_attribute("b", "A", "c")
generate_java_code
add_command("BOOLEAN", "e", <<["a", "BOOLEAN"], ["C", "BOOLEAN"], ["INTEGER", "INTEGER"], ["INTEGER", "BOOLEAN"], ["e", "INTEGER"]>>)
add_query("B", "D", <<["b", "BOOLEAN"], ["d", "BOOLEAN"], ["e", "INTEGER"], ["INTEGER", "INTEGER"]>>, "D")
add_query("B", "B", <<["D", "BOOLEAN"]>>, "c")
add_class(B)
logical_negation
numerical_negation
bool_value (false)
numerical_negation
equals
add_attribute("C", "C", "INTEGER")
add_command("D", "a", <<["c", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "INTEGER"]>>)
bool_value (true)
numerical_negation
add_attribute("d", "BOOLEAN", "A")
generate_java_code
add_command("C", "A", <<["BOOLEAN", "D"], ["a", "INTEGER"], ["BOOLEAN", "INTEGER"]>>)
int_value (40)
numerical_negation
add_query("A", "A", <<["e", "BOOLEAN"], ["C", "INTEGER"], ["d", "INTEGER"], ["C", "INTEGER"], ["c", "d"], ["INTEGER", "INTEGER"], ["b", "INTEGER"], ["d", "B"], ["INTEGER", "A"]>>, "A")
logical_negation
equals
numerical_negation
add_command("B", "D", <<["a", "BOOLEAN"], ["B", "INTEGER"], ["c", "INTEGER"], ["A", "d"], ["b", "INTEGER"], ["a", "INTEGER"]>>)
add_call_chain(<<a,D,d,D,B>>)
bool_value (false)
add_class(b)
add_call_chain(<<e,c,a>>)
add_attribute("e", "b", "BOOLEAN")
int_value (25)
add_command("A", "c", <<["a", "BOOLEAN"], ["c", "INTEGER"], ["b", "INTEGER"], ["c", "BOOLEAN"], ["a", "A"], ["BOOLEAN", "INTEGER"], ["a", "INTEGER"], ["a", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>)
add_call_chain(<<b,D>>)
bool_value (true)
type_check
logical_negation
add_call_chain(<<B,A,B,A,c>>)
add_call_chain(<<INTEGER,A,D,c,A,A,a,D>>)
less_than
generate_java_code
subtraction
add_call_chain(<<D,c,INTEGER,INTEGER,D,B>>)
add_call_chain(<<b,D,INTEGER>>)
add_command("B", "B", <<["c", "INTEGER"], ["a", "BOOLEAN"]>>)
type_check
add_command("b", "e", <<["C", "INTEGER"], ["d", "INTEGER"], ["d", "e"], ["BOOLEAN", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "INTEGER"]>>)
logical_negation
add_attribute("D", "D", "INTEGER")
less_than
int_value (21)
add_call_chain(<<c,D>>)
type_check
logical_negation
numerical_negation
conjunction
bool_value (false)
int_value (46)
type_check
bool_value (true)
add_call_chain(<<C,d,D,A,d,c,A,B,C>>)
bool_value (false)
bool_value (true)
modulo
