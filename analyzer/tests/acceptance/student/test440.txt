conjunction
less_than
add_command("A", "d", <<["b", "INTEGER"]>>)
int_value (1)
generate_java_code
add_query("e", "e", <<["d", "INTEGER"], ["INTEGER", "INTEGER"]>>, "d")
add_call_chain(<<D,d,B,A,B,c,d,C>>)
add_call_chain(<<d,d,d,b,B,b,BOOLEAN,A,INTEGER>>)
equals
logical_negation
add_call_chain(<<e,d,A,A,d,D>>)
bool_value (true)
add_command("A", "d", <<["e", "D"], ["a", "BOOLEAN"], ["b", "INTEGER"], ["BOOLEAN", "b"], ["D", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["d", "b"], ["c", "D"], ["D", "INTEGER"]>>)
int_value (47)
disjunction
disjunction
add_call_chain(<<d>>)
logical_negation
disjunction
add_command("d", "d", <<["c", "BOOLEAN"], ["c", "BOOLEAN"], ["a", "e"]>>)
add_command("INTEGER", "INTEGER", <<["a", "BOOLEAN"], ["c", "INTEGER"]>>)
add_class(A)
add_call_chain(<<D,a,e,B,a,A,a,D>>)
logical_negation
add_call_chain(<<A,B,a,b,e,b,a>>)
addition
add_attribute("A", "B", "BOOLEAN")
add_class(B)
int_value (6)
logical_negation
type_check
add_query("B", "c", <<["a", "a"], ["c", "BOOLEAN"]>>, "D")
add_query("e", "c", <<["d", "INTEGER"], ["e", "b"], ["a", "INTEGER"]>>, "B")
generate_java_code
add_call_chain(<<C,INTEGER,c>>)
int_value (42)
numerical_negation
disjunction
add_call_chain(<<INTEGER,d,c,e>>)
add_call_chain(<<e,D,INTEGER>>)
logical_negation
add_attribute("d", "a", "A")
add_class(c)
quotient
add_query("INTEGER", "e", <<["d", "BOOLEAN"], ["C", "B"], ["BOOLEAN", "a"], ["A", "BOOLEAN"], ["B", "B"], ["B", "INTEGER"], ["A", "BOOLEAN"]>>, "e")
less_than
logical_negation
add_call_chain(<<C,a,d,c,b,BOOLEAN,a>>)
int_value (33)
numerical_negation
disjunction
disjunction
numerical_negation
type_check
add_attribute("C", "e", "INTEGER")
add_call_chain(<<c,C,b,A,A>>)
add_query("BOOLEAN", "B", <<["C", "BOOLEAN"], ["D", "INTEGER"], ["BOOLEAN", "INTEGER"], ["INTEGER", "B"], ["a", "INTEGER"]>>, "c")
add_attribute("e", "A", "BOOLEAN")
bool_value (true)
add_call_chain(<<c,B,D,d,A,C,A,C>>)
generate_java_code
generate_java_code
type_check
add_query("a", "A", <<["c", "BOOLEAN"], ["A", "BOOLEAN"]>>, "B")
add_call_chain(<<d,D,A,c,D,A,B,e,D>>)
int_value (46)
add_class(a)
add_query("a", "D", <<["C", "INTEGER"], ["A", "BOOLEAN"], ["b", "INTEGER"], ["b", "C"], ["A", "INTEGER"], ["B", "INTEGER"]>>, "c")
add_class(A)
add_query("d", "c", <<["INTEGER", "INTEGER"], ["D", "INTEGER"]>>, "e")
add_attribute("c", "A", "BOOLEAN")
add_query("b", "C", <<["A", "BOOLEAN"], ["D", "INTEGER"], ["e", "D"], ["e", "D"], ["B", "INTEGER"], ["D", "C"]>>, "d")
add_class(D)
int_value (16)
add_attribute("A", "a", "INTEGER")
add_query("d", "e", <<["B", "INTEGER"], ["A", "d"], ["a", "INTEGER"], ["B", "INTEGER"], ["D", "BOOLEAN"], ["B", "BOOLEAN"]>>, "B")
add_attribute("e", "A", "D")
add_class(c)
add_command("B", "b", <<["c", "INTEGER"], ["A", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "b"]>>)
add_call_chain(<<INTEGER,C,B>>)
type_check
add_call_chain(<<c>>)
bool_value (false)
multiplication
add_call_chain(<<b>>)
equals
add_attribute("C", "BOOLEAN", "BOOLEAN")
add_query("INTEGER", "INTEGER", <<["c", "a"], ["d", "d"], ["INTEGER", "INTEGER"], ["c", "BOOLEAN"], ["b", "D"]>>, "B")
add_query("b", "C", <<["d", "d"], ["INTEGER", "BOOLEAN"], ["B", "c"], ["d", "BOOLEAN"], ["a", "A"], ["e", "D"]>>, "d")
logical_negation
add_call_chain(<<d,b,B,e,B,B>>)
int_value (20)
add_call_chain(<<b,D,e,BOOLEAN,A,b>>)
add_attribute("D", "a", "INTEGER")
logical_negation
logical_negation
add_call_chain(<<B,INTEGER,BOOLEAN,A,INTEGER,C>>)
add_call_chain(<<C,D,D,A>>)
add_query("BOOLEAN", "A", <<["INTEGER", "INTEGER"], ["e", "INTEGER"], ["C", "D"], ["A", "INTEGER"], ["A", "INTEGER"], ["a", "INTEGER"], ["BOOLEAN", "INTEGER"], ["c", "D"]>>, "d")
add_command("C", "D", <<["d", "A"]>>)
add_command("D", "A", <<["D", "INTEGER"], ["d", "BOOLEAN"]>>)
add_command("INTEGER", "INTEGER", <<["INTEGER", "C"], ["e", "INTEGER"], ["a", "b"]>>)
add_call_chain(<<a,d,BOOLEAN>>)
add_command("B", "c", <<["d", "D"], ["e", "D"], ["BOOLEAN", "BOOLEAN"], ["e", "a"], ["a", "INTEGER"], ["C", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["c", "INTEGER"], ["D", "INTEGER"]>>)
add_call_chain(<<A,C,A>>)
equals
add_command("D", "D", <<["C", "INTEGER"]>>)
add_class(a)
bool_value (true)
add_attribute("A", "d", "A")
add_query("C", "c", <<["a", "INTEGER"], ["D", "INTEGER"], ["D", "d"], ["A", "BOOLEAN"], ["B", "A"], ["b", "BOOLEAN"]>>, "A")
numerical_negation
add_call_chain(<<C,c,e,a,D,D,D,e>>)
conjunction
add_class(B)
logical_negation
bool_value (true)
add_call_chain(<<C,e>>)
add_query("D", "A", <<["C", "b"], ["A", "BOOLEAN"], ["d", "INTEGER"], ["d", "BOOLEAN"], ["e", "INTEGER"], ["B", "INTEGER"]>>, "BOOLEAN")
add_call_chain(<<INTEGER,b,D,B,B>>)
modulo
add_attribute("INTEGER", "c", "C")
modulo
add_call_chain(<<INTEGER,e,B,c,D>>)
add_command("D", "B", <<["C", "BOOLEAN"], ["A", "INTEGER"], ["d", "INTEGER"], ["INTEGER", "INTEGER"], ["e", "INTEGER"]>>)
int_value (19)
add_call_chain(<<e,e,A,a,A,D>>)
type_check
add_class(d)
add_call_chain(<<c,b,B,e,b>>)
logical_negation
type_check
addition
add_command("A", "a", <<["a", "BOOLEAN"], ["A", "INTEGER"], ["D", "INTEGER"], ["c", "a"], ["a", "BOOLEAN"], ["d", "INTEGER"], ["e", "BOOLEAN"]>>)
numerical_negation
add_call_chain(<<a,c>>)
logical_negation
type_check
add_call_chain(<<C,d,B,c,b,B,A,a,A>>)
add_query("D", "D", <<["a", "b"], ["C", "INTEGER"], ["d", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["C", "D"], ["C", "INTEGER"], ["d", "BOOLEAN"], ["e", "B"]>>, "D")
generate_java_code
add_class(INTEGER)
int_value (21)
numerical_negation
greater_than
type_check
bool_value (true)
bool_value (true)
less_than
add_command("INTEGER", "C", <<["a", "B"], ["A", "INTEGER"], ["B", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "INTEGER"]>>)
add_call_chain(<<D,D,b,C,C,A>>)
bool_value (true)
bool_value (false)
add_call_chain(<<C,C>>)
disjunction
numerical_negation
numerical_negation
add_attribute("a", "C", "BOOLEAN")
add_command("BOOLEAN", "e", <<["D", "BOOLEAN"], ["D", "BOOLEAN"], ["a", "b"], ["B", "BOOLEAN"]>>)
int_value (47)
multiplication
add_call_chain(<<d,e,BOOLEAN,INTEGER,c,b,e,BOOLEAN,C>>)
int_value (30)
generate_java_code
numerical_negation
numerical_negation
add_call_chain(<<C,c,a,B>>)
add_call_chain(<<a,A,e,A>>)
add_attribute("e", "b", "INTEGER")
int_value (16)
logical_negation
conjunction
add_call_chain(<<INTEGER,C,A>>)
numerical_negation
add_query("D", "B", <<["B", "BOOLEAN"], ["c", "C"], ["INTEGER", "BOOLEAN"], ["INTEGER", "b"], ["D", "BOOLEAN"], ["b", "B"], ["B", "INTEGER"]>>, "D")
bool_value (true)
int_value (48)
add_attribute("D", "b", "INTEGER")
add_command("B", "b", <<["INTEGER", "BOOLEAN"], ["A", "B"], ["B", "B"], ["BOOLEAN", "D"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["a", "INTEGER"], ["d", "b"]>>)
subtraction
int_value (47)
add_call_chain(<<B,D,D,c,b,a,b,d,e>>)
add_class(a)
disjunction
add_command("A", "d", <<["C", "BOOLEAN"], ["c", "INTEGER"], ["b", "BOOLEAN"], ["d", "c"], ["C", "c"], ["C", "INTEGER"], ["b", "d"], ["D", "D"]>>)
subtraction
add_query("c", "D", <<["c", "d"], ["INTEGER", "INTEGER"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["e", "BOOLEAN"], ["A", "INTEGER"]>>, "INTEGER")
int_value (9)
conjunction
add_class(a)
greater_than
add_query("C", "d", <<["C", "BOOLEAN"], ["INTEGER", "INTEGER"]>>, "D")
disjunction
bool_value (false)
add_command("B", "D", <<["d", "INTEGER"], ["D", "A"], ["D", "D"]>>)
logical_negation
bool_value (false)
less_than
int_value (45)
add_call_chain(<<BOOLEAN,C,c>>)
add_call_chain(<<C,C,d>>)
add_attribute("BOOLEAN", "c", "INTEGER")
add_attribute("c", "b", "INTEGER")
conjunction
logical_negation
add_query("A", "A", <<["e", "INTEGER"], ["e", "BOOLEAN"]>>, "e")
int_value (41)
int_value (31)
add_call_chain(<<D,C,c,D,A,D,e>>)
int_value (19)
bool_value (false)
numerical_negation
generate_java_code
type_check
numerical_negation
add_command("INTEGER", "a", <<["B", "BOOLEAN"], ["C", "INTEGER"]>>)
add_attribute("d", "a", "e")
greater_than
add_query("D", "d", <<["b", "BOOLEAN"], ["a", "e"]>>, "INTEGER")
add_command("D", "D", <<["A", "INTEGER"], ["B", "INTEGER"], ["D", "A"]>>)
add_attribute("A", "BOOLEAN", "BOOLEAN")
add_attribute("a", "C", "INTEGER")
logical_negation
logical_negation
bool_value (false)
logical_negation
disjunction
bool_value (false)
generate_java_code
add_attribute("d", "BOOLEAN", "INTEGER")
add_call_chain(<<B,B,C,INTEGER>>)
add_call_chain(<<e,BOOLEAN>>)
add_command("A", "a", <<["B", "BOOLEAN"], ["d", "BOOLEAN"], ["C", "INTEGER"], ["c", "c"], ["INTEGER", "e"], ["e", "BOOLEAN"]>>)
add_call_chain(<<D,A,D,C>>)
add_command("D", "c", <<["D", "BOOLEAN"], ["c", "A"], ["e", "INTEGER"], ["d", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["d", "BOOLEAN"], ["e", "a"], ["D", "D"]>>)
add_query("BOOLEAN", "e", <<["C", "INTEGER"]>>, "INTEGER")
add_call_chain(<<e,e>>)
add_class(B)
add_call_chain(<<INTEGER,d,A,d,A,B,c>>)
equals
type_check
add_class(d)
logical_negation
int_value (47)
generate_java_code
bool_value (false)
