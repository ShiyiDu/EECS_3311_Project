int_value (8)
disjunction
int_value (34)
multiplication
greater_than
logical_negation
numerical_negation
add_attribute("d", "c", "INTEGER")
add_call_chain(<<a,a,BOOLEAN,b,C,A,C,b>>)
add_command("a", "A", <<["b", "C"], ["C", "BOOLEAN"], ["e", "a"]>>)
add_call_chain(<<a>>)
bool_value (true)
bool_value (true)
bool_value (false)
int_value (35)
add_call_chain(<<d,b,b,b,e,A,e>>)
add_attribute("a", "B", "D")
add_class(C)
add_call_chain(<<c,C,C,b,C,INTEGER,D>>)
conjunction
conjunction
add_attribute("c", "D", "c")
add_class(D)
add_call_chain(<<D,B>>)
add_command("d", "b", <<["A", "B"], ["INTEGER", "INTEGER"], ["c", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["c", "INTEGER"]>>)
logical_negation
add_call_chain(<<INTEGER,INTEGER,d,D,D>>)
logical_negation
add_attribute("b", "c", "c")
conjunction
add_command("c", "B", <<["b", "b"], ["INTEGER", "BOOLEAN"], ["C", "D"], ["c", "c"], ["D", "BOOLEAN"]>>)
add_attribute("B", "A", "BOOLEAN")
generate_java_code
add_call_chain(<<b,A,e>>)
add_attribute("A", "a", "BOOLEAN")
numerical_negation
add_call_chain(<<A,INTEGER,C,a,B>>)
add_command("d", "INTEGER", <<["a", "INTEGER"], ["a", "c"], ["d", "INTEGER"], ["e", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "e"]>>)
numerical_negation
add_call_chain(<<d,A,C,a,B>>)
add_call_chain(<<e,C,C,a,b,C>>)
add_call_chain(<<d,A,b>>)
add_query("b", "A", <<["d", "D"]>>, "a")
int_value (43)
add_command("D", "D", <<["b", "e"], ["c", "A"], ["A", "c"], ["A", "B"], ["A", "INTEGER"], ["d", "b"], ["a", "BOOLEAN"], ["b", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
int_value (5)
add_command("B", "b", <<["D", "d"], ["D", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "BOOLEAN"], ["B", "INTEGER"], ["C", "BOOLEAN"], ["A", "BOOLEAN"], ["a", "INTEGER"]>>)
add_command("e", "e", <<["C", "BOOLEAN"]>>)
multiplication
add_call_chain(<<b,A,B,B,c,c,A,D,c>>)
logical_negation
add_call_chain(<<D,A,d,e>>)
type_check
add_attribute("e", "c", "e")
quotient
add_call_chain(<<B,BOOLEAN,C,c,d,A,b>>)
add_attribute("B", "a", "c")
add_query("d", "INTEGER", <<["D", "BOOLEAN"]>>, "c")
type_check
numerical_negation
numerical_negation
bool_value (false)
bool_value (true)
modulo
conjunction
numerical_negation
logical_negation
int_value (37)
int_value (23)
add_class(c)
add_call_chain(<<INTEGER,c,e,c,e,C,D>>)
int_value (30)
add_call_chain(<<e,d>>)
type_check
add_class(e)
int_value (27)
numerical_negation
add_attribute("A", "B", "INTEGER")
logical_negation
add_call_chain(<<BOOLEAN,B,INTEGER,D,b,b,D,b>>)
numerical_negation
add_attribute("BOOLEAN", "INTEGER", "BOOLEAN")
add_call_chain(<<c,d,C,A,a>>)
disjunction
add_call_chain(<<b>>)
bool_value (true)
add_call_chain(<<C,BOOLEAN,d,c,D,b,c,d,B>>)
add_command("a", "b", <<["a", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["b", "INTEGER"], ["B", "C"], ["a", "BOOLEAN"], ["B", "INTEGER"], ["e", "INTEGER"], ["A", "D"], ["A", "BOOLEAN"]>>)
add_query("d", "A", <<["c", "B"]>>, "A")
logical_negation
int_value (31)
add_call_chain(<<a>>)
multiplication
generate_java_code
add_attribute("e", "INTEGER", "BOOLEAN")
add_call_chain(<<B,c,e,d,A,B,e>>)
conjunction
bool_value (false)
greater_than
numerical_negation
add_command("C", "c", <<["A", "INTEGER"]>>)
add_call_chain(<<c,B>>)
add_command("C", "D", <<["D", "BOOLEAN"], ["a", "b"], ["d", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["b", "BOOLEAN"], ["a", "BOOLEAN"], ["b", "BOOLEAN"]>>)
add_class(e)
add_command("C", "A", <<["a", "D"], ["A", "BOOLEAN"]>>)
type_check
add_class(d)
add_call_chain(<<A,c,D,b>>)
add_query("a", "A", <<["A", "INTEGER"], ["c", "d"], ["BOOLEAN", "e"], ["B", "a"], ["d", "BOOLEAN"], ["D", "BOOLEAN"], ["D", "INTEGER"]>>, "c")
add_command("D", "INTEGER", <<["C", "INTEGER"], ["c", "BOOLEAN"], ["b", "INTEGER"], ["B", "a"], ["b", "BOOLEAN"], ["d", "INTEGER"], ["d", "INTEGER"], ["a", "d"]>>)
generate_java_code
type_check
bool_value (false)
add_command("d", "a", <<["a", "BOOLEAN"], ["d", "INTEGER"], ["B", "BOOLEAN"], ["b", "BOOLEAN"]>>)
generate_java_code
equals
bool_value (false)
logical_negation
bool_value (false)
numerical_negation
add_call_chain(<<C,e,c>>)
add_command("e", "A", <<["A", "BOOLEAN"], ["e", "c"], ["e", "BOOLEAN"], ["a", "INTEGER"], ["e", "INTEGER"], ["B", "INTEGER"], ["B", "INTEGER"], ["D", "e"], ["INTEGER", "b"]>>)
numerical_negation
add_class(c)
add_call_chain(<<a,INTEGER,A>>)
type_check
disjunction
add_command("A", "B", <<["B", "C"], ["C", "INTEGER"], ["b", "BOOLEAN"], ["c", "A"], ["c", "INTEGER"]>>)
add_query("b", "BOOLEAN", <<["c", "D"], ["B", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["INTEGER", "INTEGER"], ["e", "INTEGER"]>>, "D")
numerical_negation
add_class(c)
add_call_chain(<<a>>)
add_call_chain(<<D,D,d,D,D>>)
bool_value (false)
add_call_chain(<<b,b,D,C,d,d,b>>)
numerical_negation
bool_value (false)
add_attribute("C", "d", "a")
add_query("D", "b", <<["b", "BOOLEAN"], ["e", "INTEGER"], ["a", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "C"], ["a", "BOOLEAN"]>>, "c")
conjunction
conjunction
greater_than
add_call_chain(<<e,B>>)
add_attribute("c", "C", "INTEGER")
bool_value (true)
add_command("A", "c", <<["B", "c"], ["C", "INTEGER"], ["a", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "BOOLEAN"], ["INTEGER", "INTEGER"], ["C", "INTEGER"]>>)
add_query("C", "e", <<["b", "INTEGER"], ["C", "B"], ["B", "INTEGER"], ["D", "C"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["C", "BOOLEAN"], ["D", "INTEGER"], ["c", "INTEGER"]>>, "d")
int_value (45)
addition
type_check
bool_value (true)
add_command("A", "INTEGER", <<["c", "C"], ["d", "A"], ["e", "INTEGER"], ["D", "BOOLEAN"], ["B", "C"], ["BOOLEAN", "INTEGER"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["d", "BOOLEAN"]>>)
add_query("BOOLEAN", "B", <<["c", "INTEGER"], ["C", "INTEGER"], ["A", "c"], ["A", "BOOLEAN"]>>, "C")
bool_value (true)
add_command("D", "D", <<["b", "INTEGER"], ["C", "BOOLEAN"]>>)
generate_java_code
add_call_chain(<<A,e,B,C,C,a,C,B>>)
add_attribute("B", "a", "INTEGER")
bool_value (false)
add_query("BOOLEAN", "C", <<["c", "BOOLEAN"], ["A", "INTEGER"], ["A", "INTEGER"], ["e", "C"], ["BOOLEAN", "BOOLEAN"], ["D", "INTEGER"]>>, "e")
add_attribute("b", "c", "BOOLEAN")
numerical_negation
add_command("d", "c", <<["INTEGER", "INTEGER"], ["A", "BOOLEAN"], ["d", "BOOLEAN"], ["c", "BOOLEAN"], ["e", "D"], ["a", "INTEGER"], ["BOOLEAN", "INTEGER"]>>)
add_call_chain(<<A,c>>)
add_command("a", "A", <<["A", "INTEGER"], ["a", "BOOLEAN"], ["D", "BOOLEAN"], ["b", "INTEGER"], ["BOOLEAN", "INTEGER"], ["D", "INTEGER"], ["b", "BOOLEAN"], ["C", "INTEGER"]>>)
add_attribute("INTEGER", "d", "INTEGER")
add_call_chain(<<C,a,B,C>>)
add_call_chain(<<d,d,B,e,d,D,d,B>>)
add_attribute("D", "b", "D")
type_check
multiplication
greater_than
addition
add_attribute("B", "D", "B")
numerical_negation
add_command("C", "INTEGER", <<["e", "e"], ["d", "c"], ["d", "BOOLEAN"], ["A", "INTEGER"], ["d", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "D"]>>)
bool_value (false)
generate_java_code
numerical_negation
bool_value (false)
numerical_negation
add_class(D)
numerical_negation
add_command("a", "D", <<["BOOLEAN", "e"]>>)
less_than
add_attribute("C", "A", "BOOLEAN")
add_query("a", "D", <<["B", "BOOLEAN"], ["C", "INTEGER"]>>, "b")
add_command("A", "b", <<["D", "INTEGER"]>>)
bool_value (false)
add_command("D", "BOOLEAN", <<["C", "BOOLEAN"]>>)
int_value (40)
add_call_chain(<<e,A,D,D,a>>)
int_value (44)
int_value (39)
int_value (31)
bool_value (false)
bool_value (false)
add_command("c", "INTEGER", <<["A", "BOOLEAN"], ["c", "INTEGER"], ["e", "b"]>>)
disjunction
int_value (29)
numerical_negation
add_command("e", "e", <<["C", "BOOLEAN"], ["D", "BOOLEAN"]>>)
equals
add_call_chain(<<A,A,C,BOOLEAN,BOOLEAN,C>>)
numerical_negation
logical_negation
add_query("d", "B", <<["BOOLEAN", "e"], ["e", "a"], ["INTEGER", "c"], ["e", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["D", "a"]>>, "a")
add_query("a", "C", <<["e", "c"], ["INTEGER", "b"], ["A", "BOOLEAN"], ["e", "e"]>>, "C")
add_call_chain(<<c,e,b,d,C>>)
greater_than
bool_value (false)
add_attribute("D", "d", "BOOLEAN")
subtraction
add_attribute("C", "INTEGER", "a")
bool_value (false)
int_value (28)
add_query("b", "c", <<["C", "INTEGER"], ["b", "BOOLEAN"], ["b", "BOOLEAN"], ["B", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "B"], ["e", "BOOLEAN"], ["B", "BOOLEAN"]>>, "A")
add_attribute("d", "D", "C")
bool_value (false)
greater_than
bool_value (false)
add_attribute("c", "B", "BOOLEAN")
disjunction
int_value (47)
add_query("c", "e", <<["A", "c"], ["C", "BOOLEAN"], ["e", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["c", "d"], ["d", "c"], ["d", "a"]>>, "A")
add_call_chain(<<B,c,a,a,A,c,C,INTEGER>>)
numerical_negation
add_call_chain(<<D,B,BOOLEAN>>)
add_class(INTEGER)
