generate_java_code
add_command("INTEGER", "a", <<["d", "b"], ["A", "INTEGER"]>>)
add_call_chain(<<e,INTEGER,a,d,C,a,A,b>>)
add_attribute("D", "C", "D")
logical_negation
add_command("INTEGER", "C", <<["a", "C"]>>)
add_query("e", "B", <<["B", "C"], ["b", "INTEGER"]>>, "A")
logical_negation
int_value (12)
add_query("B", "B", <<["C", "INTEGER"], ["b", "BOOLEAN"]>>, "b")
add_attribute("B", "C", "c")
conjunction
add_call_chain(<<a,a,d>>)
add_attribute("D", "c", "BOOLEAN")
add_command("BOOLEAN", "B", <<["INTEGER", "INTEGER"], ["INTEGER", "INTEGER"], ["BOOLEAN", "A"], ["INTEGER", "b"], ["A", "INTEGER"], ["B", "C"]>>)
disjunction
generate_java_code
add_command("D", "d", <<["A", "C"], ["A", "BOOLEAN"], ["D", "BOOLEAN"], ["a", "INTEGER"]>>)
add_call_chain(<<B,b,BOOLEAN>>)
add_command("D", "b", <<["c", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["D", "INTEGER"], ["INTEGER", "INTEGER"]>>)
add_class(C)
add_call_chain(<<e,A,INTEGER,BOOLEAN,BOOLEAN,b>>)
bool_value (true)
add_call_chain(<<e,b,c,B>>)
multiplication
logical_negation
add_query("a", "C", <<["d", "INTEGER"], ["A", "INTEGER"], ["e", "INTEGER"], ["D", "INTEGER"], ["a", "INTEGER"], ["e", "a"], ["A", "INTEGER"], ["B", "BOOLEAN"]>>, "d")
int_value (36)
logical_negation
int_value (45)
int_value (31)
numerical_negation
quotient
numerical_negation
add_call_chain(<<b,a>>)
logical_negation
add_command("B", "B", <<["d", "INTEGER"], ["e", "BOOLEAN"], ["a", "INTEGER"], ["B", "BOOLEAN"], ["d", "INTEGER"], ["D", "INTEGER"], ["c", "INTEGER"]>>)
add_call_chain(<<B,D>>)
type_check
add_command("d", "a", <<["D", "INTEGER"], ["B", "e"], ["D", "BOOLEAN"], ["D", "INTEGER"], ["e", "INTEGER"], ["INTEGER", "c"]>>)
add_query("d", "INTEGER", <<["B", "C"], ["B", "INTEGER"], ["C", "INTEGER"], ["BOOLEAN", "C"], ["c", "A"], ["D", "BOOLEAN"], ["a", "BOOLEAN"]>>, "c")
numerical_negation
add_attribute("B", "BOOLEAN", "A")
generate_java_code
add_call_chain(<<D,b,A,c,e,C,e,a>>)
add_query("C", "c", <<["A", "D"], ["a", "BOOLEAN"], ["c", "D"], ["INTEGER", "d"], ["C", "INTEGER"], ["D", "INTEGER"], ["c", "B"]>>, "INTEGER")
add_command("B", "a", <<["e", "INTEGER"], ["e", "INTEGER"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["c", "INTEGER"], ["B", "INTEGER"]>>)
add_query("c", "d", <<["B", "INTEGER"], ["c", "e"]>>, "b")
logical_negation
numerical_negation
add_class(INTEGER)
logical_negation
add_class(A)
add_query("b", "A", <<["a", "INTEGER"], ["B", "INTEGER"], ["INTEGER", "BOOLEAN"], ["C", "BOOLEAN"], ["a", "INTEGER"]>>, "C")
int_value (7)
type_check
add_attribute("D", "INTEGER", "BOOLEAN")
add_attribute("A", "d", "INTEGER")
type_check
add_call_chain(<<INTEGER,A,c>>)
logical_negation
logical_negation
add_attribute("B", "A", "INTEGER")
add_call_chain(<<BOOLEAN,C,b,d,e,b>>)
greater_than
add_call_chain(<<D,B>>)
type_check
bool_value (false)
add_class(b)
add_query("C", "d", <<["a", "C"], ["B", "INTEGER"], ["C", "INTEGER"], ["B", "INTEGER"], ["C", "BOOLEAN"], ["c", "BOOLEAN"], ["D", "BOOLEAN"]>>, "c")
numerical_negation
int_value (44)
multiplication
int_value (30)
add_call_chain(<<C,B,A,b,D,C,e,A>>)
type_check
add_query("D", "BOOLEAN", <<["INTEGER", "INTEGER"], ["INTEGER", "BOOLEAN"], ["INTEGER", "INTEGER"], ["e", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["INTEGER", "C"]>>, "c")
numerical_negation
add_attribute("e", "D", "d")
bool_value (true)
add_command("d", "b", <<["c", "INTEGER"], ["D", "C"], ["D", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "C"]>>)
add_query("a", "a", <<["A", "b"], ["INTEGER", "C"], ["D", "INTEGER"]>>, "b")
add_call_chain(<<b,C,C>>)
add_command("C", "B", <<["D", "BOOLEAN"], ["c", "INTEGER"], ["INTEGER", "c"], ["BOOLEAN", "INTEGER"], ["D", "A"]>>)
logical_negation
addition
add_class(C)
add_attribute("D", "INTEGER", "c")
add_query("D", "e", <<["A", "B"]>>, "B")
generate_java_code
bool_value (true)
multiplication
numerical_negation
numerical_negation
multiplication
add_call_chain(<<d,D,e,INTEGER,D,C,e,A>>)
type_check
add_attribute("B", "C", "BOOLEAN")
add_class(B)
add_query("d", "b", <<["b", "BOOLEAN"], ["C", "INTEGER"], ["c", "INTEGER"], ["D", "a"], ["D", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["b", "d"], ["e", "BOOLEAN"], ["D", "BOOLEAN"]>>, "B")
add_command("b", "d", <<["d", "INTEGER"], ["A", "INTEGER"]>>)
add_query("A", "D", <<["e", "INTEGER"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["B", "c"], ["e", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["a", "BOOLEAN"], ["d", "INTEGER"]>>, "D")
int_value (19)
add_command("e", "b", <<["c", "INTEGER"], ["B", "INTEGER"]>>)
type_check
numerical_negation
equals
add_call_chain(<<c,B,D,INTEGER,D,C,d,D,e>>)
int_value (20)
type_check
type_check
int_value (26)
add_class(e)
generate_java_code
add_call_chain(<<d,B,D>>)
logical_negation
numerical_negation
type_check
bool_value (false)
add_call_chain(<<D>>)
add_class(C)
add_command("BOOLEAN", "e", <<["D", "BOOLEAN"], ["a", "e"], ["c", "BOOLEAN"], ["e", "INTEGER"]>>)
add_call_chain(<<D,a,c>>)
add_call_chain(<<A,BOOLEAN,A,A,b>>)
numerical_negation
multiplication
subtraction
add_attribute("C", "B", "INTEGER")
int_value (39)
int_value (38)
add_call_chain(<<C,D,a,d>>)
type_check
int_value (49)
add_call_chain(<<B,b,b>>)
add_query("a", "A", <<["D", "B"], ["BOOLEAN", "BOOLEAN"], ["c", "a"], ["D", "INTEGER"], ["BOOLEAN", "INTEGER"], ["a", "BOOLEAN"], ["A", "INTEGER"], ["A", "BOOLEAN"]>>, "INTEGER")
generate_java_code
add_command("a", "a", <<["D", "e"], ["e", "C"], ["a", "BOOLEAN"], ["a", "INTEGER"], ["A", "D"], ["BOOLEAN", "INTEGER"]>>)
addition
add_query("A", "C", <<["A", "INTEGER"], ["C", "c"], ["a", "INTEGER"], ["B", "INTEGER"], ["d", "e"]>>, "c")
generate_java_code
disjunction
generate_java_code
greater_than
logical_negation
add_query("b", "INTEGER", <<["c", "INTEGER"], ["BOOLEAN", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["A", "INTEGER"], ["INTEGER", "B"], ["A", "c"], ["e", "INTEGER"]>>, "e")
add_class(b)
add_call_chain(<<e,C,INTEGER,A,a,INTEGER,a,C>>)
type_check
numerical_negation
generate_java_code
int_value (38)
add_call_chain(<<a,C,B,d,e>>)
less_than
numerical_negation
add_query("A", "INTEGER", <<["d", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "D"]>>, "C")
add_call_chain(<<INTEGER,a>>)
subtraction
bool_value (false)
add_query("C", "b", <<["A", "C"], ["A", "INTEGER"], ["INTEGER", "C"]>>, "e")
add_attribute("e", "c", "INTEGER")
type_check
add_attribute("B", "C", "INTEGER")
generate_java_code
add_query("B", "c", <<["b", "C"], ["d", "C"], ["e", "INTEGER"], ["b", "INTEGER"], ["d", "D"], ["d", "BOOLEAN"], ["b", "BOOLEAN"], ["e", "a"], ["D", "INTEGER"]>>, "a")
int_value (48)
bool_value (true)
add_call_chain(<<e>>)
disjunction
add_call_chain(<<C,a,b,b,a,INTEGER>>)
add_call_chain(<<B,BOOLEAN,INTEGER,D,b>>)
modulo
logical_negation
int_value (27)
logical_negation
numerical_negation
add_command("B", "a", <<["b", "BOOLEAN"], ["d", "BOOLEAN"], ["b", "INTEGER"], ["B", "d"], ["a", "INTEGER"], ["e", "BOOLEAN"]>>)
add_call_chain(<<d,c,d,D,d,INTEGER,d,C,D>>)
int_value (46)
add_query("B", "e", <<["e", "c"], ["b", "D"], ["BOOLEAN", "INTEGER"], ["C", "BOOLEAN"], ["B", "INTEGER"], ["B", "INTEGER"], ["C", "INTEGER"], ["A", "B"]>>, "D")
bool_value (false)
add_query("B", "b", <<["c", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["D", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["C", "a"]>>, "C")
type_check
add_query("B", "a", <<["A", "INTEGER"], ["a", "INTEGER"], ["C", "INTEGER"], ["a", "BOOLEAN"], ["INTEGER", "D"], ["a", "INTEGER"], ["C", "INTEGER"], ["b", "BOOLEAN"], ["d", "A"]>>, "B")
int_value (26)
