add_class(A)
add_call_chain(<<BOOLEAN>>)
add_query("D", "d", <<["e", "D"], ["d", "b"], ["d", "d"]>>, "B")
add_call_chain(<<C,B,A>>)
logical_negation
int_value (5)
bool_value (false)
int_value (12)
equals
logical_negation
add_query("B", "D", <<["D", "BOOLEAN"], ["D", "D"], ["c", "C"], ["B", "a"], ["b", "BOOLEAN"], ["e", "BOOLEAN"], ["d", "e"], ["B", "INTEGER"], ["INTEGER", "B"]>>, "B")
generate_java_code
add_attribute("C", "INTEGER", "BOOLEAN")
greater_than
add_call_chain(<<b,c,e,d,D,D,b,a>>)
add_command("B", "d", <<["BOOLEAN", "INTEGER"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["b", "INTEGER"], ["e", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "INTEGER"], ["C", "INTEGER"]>>)
logical_negation
add_call_chain(<<b,B,b,INTEGER,A>>)
type_check
bool_value (false)
less_than
add_command("e", "c", <<["BOOLEAN", "INTEGER"]>>)
type_check
type_check
int_value (3)
add_class(b)
disjunction
bool_value (true)
add_query("BOOLEAN", "BOOLEAN", <<["B", "BOOLEAN"], ["D", "a"], ["c", "INTEGER"], ["C", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "c"], ["b", "c"]>>, "A")
add_call_chain(<<a,e,d>>)
logical_negation
add_query("e", "A", <<["C", "INTEGER"], ["a", "c"], ["d", "INTEGER"], ["b", "D"], ["b", "BOOLEAN"], ["c", "INTEGER"], ["C", "INTEGER"]>>, "C")
add_command("INTEGER", "A", <<["D", "BOOLEAN"]>>)
equals
bool_value (true)
generate_java_code
add_attribute("A", "A", "a")
equals
equals
add_call_chain(<<C,D,a,D,C,A,A,C>>)
add_call_chain(<<d,c,b,a>>)
add_call_chain(<<a,BOOLEAN>>)
conjunction
type_check
add_attribute("c", "B", "INTEGER")
add_attribute("e", "d", "INTEGER")
add_command("D", "A", <<["c", "INTEGER"], ["B", "INTEGER"], ["INTEGER", "c"], ["C", "INTEGER"], ["A", "INTEGER"]>>)
add_query("a", "D", <<["A", "BOOLEAN"], ["e", "d"], ["e", "A"], ["d", "B"]>>, "b")
generate_java_code
logical_negation
int_value (15)
less_than
type_check
add_call_chain(<<D,B,D,B>>)
logical_negation
type_check
generate_java_code
add_command("INTEGER", "C", <<["e", "C"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["e", "d"], ["C", "d"]>>)
int_value (19)
add_query("C", "b", <<["D", "A"], ["INTEGER", "INTEGER"], ["e", "INTEGER"], ["B", "BOOLEAN"], ["D", "B"], ["B", "a"], ["d", "BOOLEAN"], ["b", "BOOLEAN"], ["d", "INTEGER"]>>, "INTEGER")
modulo
add_call_chain(<<b,C,c,D,b,C,C,A>>)
add_command("c", "b", <<["A", "c"], ["c", "INTEGER"], ["A", "a"], ["A", "BOOLEAN"], ["e", "BOOLEAN"], ["b", "INTEGER"], ["B", "INTEGER"], ["A", "BOOLEAN"]>>)
logical_negation
add_call_chain(<<a,a>>)
generate_java_code
logical_negation
add_query("c", "b", <<["A", "INTEGER"], ["c", "INTEGER"], ["d", "INTEGER"], ["e", "D"], ["B", "BOOLEAN"], ["B", "BOOLEAN"], ["d", "BOOLEAN"], ["A", "INTEGER"]>>, "A")
int_value (3)
conjunction
generate_java_code
type_check
add_command("B", "A", <<["b", "INTEGER"], ["C", "C"], ["A", "C"], ["BOOLEAN", "A"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["D", "c"]>>)
add_query("C", "b", <<["C", "INTEGER"], ["INTEGER", "INTEGER"], ["e", "INTEGER"], ["D", "INTEGER"]>>, "A")
add_call_chain(<<BOOLEAN>>)
bool_value (true)
add_attribute("B", "A", "BOOLEAN")
int_value (3)
add_attribute("b", "e", "INTEGER")
int_value (16)
add_attribute("D", "A", "INTEGER")
bool_value (true)
int_value (4)
logical_negation
int_value (14)
add_call_chain(<<B,c>>)
add_class(b)
add_call_chain(<<a,C,b,A,B>>)
numerical_negation
add_command("D", "C", <<["BOOLEAN", "BOOLEAN"], ["a", "BOOLEAN"], ["D", "e"], ["D", "BOOLEAN"], ["d", "INTEGER"], ["e", "D"], ["b", "BOOLEAN"]>>)
logical_negation
disjunction
add_attribute("INTEGER", "INTEGER", "INTEGER")
add_attribute("C", "INTEGER", "INTEGER")
add_command("B", "d", <<["BOOLEAN", "BOOLEAN"], ["D", "INTEGER"], ["INTEGER", "INTEGER"], ["A", "INTEGER"], ["e", "INTEGER"], ["B", "BOOLEAN"]>>)
add_attribute("c", "B", "BOOLEAN")
add_class(C)
bool_value (false)
add_attribute("BOOLEAN", "INTEGER", "INTEGER")
add_command("b", "INTEGER", <<["c", "BOOLEAN"], ["A", "BOOLEAN"], ["d", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "INTEGER"], ["B", "INTEGER"], ["D", "INTEGER"]>>)
conjunction
add_call_chain(<<c,d,a,A,e,D>>)
numerical_negation
generate_java_code
add_call_chain(<<A,B>>)
add_command("B", "a", <<["d", "INTEGER"], ["d", "BOOLEAN"], ["c", "INTEGER"], ["C", "D"], ["e", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["e", "BOOLEAN"]>>)
subtraction
addition
add_call_chain(<<A,A,c,c>>)
generate_java_code
add_attribute("B", "C", "INTEGER")
modulo
disjunction
add_call_chain(<<B,b>>)
add_attribute("a", "A", "INTEGER")
add_call_chain(<<c,D,d,BOOLEAN,INTEGER>>)
generate_java_code
int_value (39)
disjunction
add_attribute("a", "d", "INTEGER")
bool_value (false)
add_attribute("a", "A", "B")
numerical_negation
disjunction
add_class(A)
bool_value (true)
generate_java_code
add_call_chain(<<INTEGER,b,D,BOOLEAN,C>>)
add_query("B", "D", <<["D", "INTEGER"], ["e", "INTEGER"], ["B", "C"]>>, "C")
greater_than
add_command("D", "B", <<["BOOLEAN", "d"], ["BOOLEAN", "BOOLEAN"], ["b", "BOOLEAN"], ["e", "INTEGER"], ["b", "c"], ["d", "INTEGER"], ["d", "BOOLEAN"]>>)
equals
add_query("D", "B", <<["c", "BOOLEAN"], ["e", "BOOLEAN"], ["e", "BOOLEAN"], ["A", "BOOLEAN"]>>, "C")
add_command("C", "a", <<["d", "INTEGER"], ["A", "INTEGER"]>>)
multiplication
add_call_chain(<<A,C,C,c,d,d,A,B,B>>)
numerical_negation
int_value (37)
add_query("D", "D", <<["D", "BOOLEAN"], ["b", "BOOLEAN"]>>, "e")
bool_value (false)
add_attribute("BOOLEAN", "C", "INTEGER")
bool_value (false)
logical_negation
type_check
add_call_chain(<<d,B,a,C,B,c,e>>)
int_value (17)
add_command("C", "D", <<["d", "a"], ["a", "B"], ["a", "INTEGER"], ["a", "BOOLEAN"], ["b", "B"], ["C", "INTEGER"], ["d", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
subtraction
add_class(c)
bool_value (false)
add_query("d", "b", <<["C", "BOOLEAN"], ["B", "D"], ["C", "INTEGER"], ["D", "INTEGER"]>>, "INTEGER")
less_than
bool_value (true)
disjunction
add_call_chain(<<e,B,d,a,BOOLEAN,e,b,D>>)
add_attribute("a", "D", "c")
numerical_negation
add_command("C", "D", <<["C", "A"], ["C", "d"], ["A", "BOOLEAN"], ["c", "C"], ["A", "a"]>>)
add_call_chain(<<B,c,A,a,d,c,D>>)
quotient
disjunction
numerical_negation
add_class(C)
less_than
generate_java_code
add_query("D", "A", <<["d", "INTEGER"], ["A", "INTEGER"], ["D", "INTEGER"], ["e", "INTEGER"], ["C", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["e", "INTEGER"], ["B", "BOOLEAN"]>>, "A")
add_query("d", "d", <<["A", "INTEGER"]>>, "d")
bool_value (true)
add_command("b", "D", <<["a", "INTEGER"], ["INTEGER", "INTEGER"], ["B", "BOOLEAN"]>>)
add_call_chain(<<b,b,B,e>>)
add_query("e", "A", <<["B", "INTEGER"], ["BOOLEAN", "INTEGER"], ["d", "INTEGER"]>>, "INTEGER")
bool_value (false)
add_attribute("a", "c", "a")
bool_value (false)
add_query("C", "D", <<["INTEGER", "BOOLEAN"], ["b", "c"], ["e", "BOOLEAN"], ["a", "C"], ["D", "BOOLEAN"]>>, "C")
int_value (6)
add_call_chain(<<e,C,D,BOOLEAN>>)
generate_java_code
int_value (2)
conjunction
disjunction
add_call_chain(<<D,C,B,b,D>>)
numerical_negation
add_call_chain(<<e,b,INTEGER,C,C>>)
add_call_chain(<<INTEGER,A,A>>)
bool_value (false)
int_value (22)
logical_negation
add_query("B", "b", <<["BOOLEAN", "d"]>>, "B")
add_call_chain(<<D,e,INTEGER,C,b>>)
add_class(B)
add_command("a", "c", <<["a", "INTEGER"], ["c", "INTEGER"], ["B", "INTEGER"], ["a", "INTEGER"], ["e", "A"]>>)
add_command("b", "c", <<["A", "INTEGER"], ["INTEGER", "B"], ["D", "A"], ["B", "INTEGER"], ["c", "BOOLEAN"], ["c", "INTEGER"], ["B", "A"], ["A", "INTEGER"], ["a", "INTEGER"]>>)
less_than
add_attribute("INTEGER", "e", "INTEGER")
logical_negation
add_command("A", "INTEGER", <<["c", "A"], ["INTEGER", "INTEGER"], ["a", "e"], ["c", "INTEGER"], ["b", "d"], ["b", "BOOLEAN"], ["A", "INTEGER"], ["b", "A"]>>)
multiplication
bool_value (false)
numerical_negation
add_call_chain(<<C,e,d,a,e,INTEGER,A,D>>)
add_call_chain(<<b,B>>)
multiplication
add_call_chain(<<b,B,e,A>>)
less_than
type_check
add_call_chain(<<B,B,b,A,b,C,c,D,b>>)
less_than
add_attribute("a", "A", "BOOLEAN")
add_call_chain(<<B,A,C>>)
int_value (40)
