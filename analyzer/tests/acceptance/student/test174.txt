disjunction
conjunction
add_call_chain(<<INTEGER,b,d,B,e,C,B,e>>)
add_attribute("e", "b", "BOOLEAN")
add_call_chain(<<A,B,D,b>>)
bool_value (false)
add_call_chain(<<BOOLEAN,d,B,a,B>>)
logical_negation
bool_value (false)
conjunction
add_call_chain(<<b,d>>)
conjunction
int_value (42)
add_query("e", "a", <<["e", "BOOLEAN"], ["a", "INTEGER"], ["c", "BOOLEAN"], ["C", "INTEGER"], ["e", "e"], ["B", "e"]>>, "B")
bool_value (true)
int_value (25)
equals
add_call_chain(<<d,A,D>>)
add_command("C", "b", <<["BOOLEAN", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "B"], ["c", "BOOLEAN"], ["A", "INTEGER"], ["D", "d"], ["INTEGER", "INTEGER"], ["b", "BOOLEAN"], ["C", "INTEGER"]>>)
conjunction
add_call_chain(<<a,D,A,D,C,e>>)
bool_value (true)
logical_negation
int_value (31)
add_command("INTEGER", "A", <<["C", "A"], ["c", "e"]>>)
add_query("d", "A", <<["a", "A"], ["A", "d"], ["A", "d"], ["c", "BOOLEAN"], ["C", "D"]>>, "e")
bool_value (false)
add_query("D", "A", <<["b", "C"], ["e", "INTEGER"], ["D", "BOOLEAN"], ["e", "D"], ["D", "b"], ["INTEGER", "D"], ["a", "a"], ["b", "A"], ["e", "INTEGER"]>>, "A")
int_value (40)
subtraction
add_attribute("BOOLEAN", "b", "D")
type_check
logical_negation
add_call_chain(<<a,d>>)
add_call_chain(<<C,b,b,A,A,b,BOOLEAN,d,b>>)
add_query("b", "c", <<["d", "BOOLEAN"], ["c", "C"], ["INTEGER", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>, "C")
bool_value (true)
bool_value (false)
disjunction
type_check
add_class(D)
numerical_negation
add_class(A)
equals
int_value (46)
add_call_chain(<<B,C,A>>)
add_attribute("B", "b", "D")
add_attribute("B", "c", "INTEGER")
add_attribute("A", "C", "BOOLEAN")
add_query("BOOLEAN", "B", <<["a", "INTEGER"]>>, "D")
add_call_chain(<<D,D,c,A,D,e>>)
bool_value (false)
add_query("C", "e", <<["b", "INTEGER"], ["A", "INTEGER"], ["B", "INTEGER"], ["a", "BOOLEAN"]>>, "D")
quotient
add_command("a", "C", <<["b", "b"], ["b", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "INTEGER"], ["d", "B"], ["c", "INTEGER"], ["A", "BOOLEAN"]>>)
logical_negation
add_attribute("a", "C", "b")
numerical_negation
add_call_chain(<<BOOLEAN,INTEGER,d>>)
add_call_chain(<<D,A,a,d>>)
add_query("e", "d", <<["A", "BOOLEAN"], ["d", "A"], ["BOOLEAN", "d"]>>, "a")
bool_value (false)
logical_negation
add_command("e", "C", <<["c", "B"], ["D", "C"], ["A", "INTEGER"], ["e", "d"], ["c", "BOOLEAN"], ["A", "BOOLEAN"]>>)
type_check
numerical_negation
add_query("A", "a", <<["D", "INTEGER"]>>, "c")
int_value (22)
logical_negation
add_call_chain(<<D,BOOLEAN,B,b,D,a,INTEGER>>)
add_attribute("b", "C", "B")
logical_negation
numerical_negation
add_call_chain(<<D,B,D,A,c,b,BOOLEAN,B,A>>)
int_value (40)
add_class(b)
add_command("c", "D", <<["d", "e"], ["a", "INTEGER"], ["A", "BOOLEAN"], ["a", "C"], ["A", "INTEGER"], ["c", "INTEGER"], ["C", "BOOLEAN"], ["D", "D"], ["D", "INTEGER"]>>)
add_query("d", "b", <<["B", "INTEGER"], ["a", "BOOLEAN"], ["B", "d"], ["INTEGER", "BOOLEAN"]>>, "BOOLEAN")
add_call_chain(<<INTEGER>>)
add_call_chain(<<a,D,d,a,D>>)
bool_value (true)
equals
disjunction
add_call_chain(<<b,D,c>>)
add_class(B)
add_call_chain(<<C,c,a,C,B,C,B>>)
modulo
add_call_chain(<<d,INTEGER,BOOLEAN,BOOLEAN,A,BOOLEAN,B,D>>)
add_command("C", "C", <<["B", "BOOLEAN"], ["e", "c"], ["BOOLEAN", "INTEGER"], ["C", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "B"], ["C", "C"], ["C", "INTEGER"], ["a", "BOOLEAN"]>>)
bool_value (false)
add_call_chain(<<d,e>>)
disjunction
add_query("c", "b", <<["c", "BOOLEAN"], ["b", "BOOLEAN"], ["BOOLEAN", "INTEGER"], ["b", "BOOLEAN"]>>, "a")
generate_java_code
numerical_negation
add_class(a)
add_attribute("C", "d", "BOOLEAN")
bool_value (false)
add_command("d", "e", <<["c", "BOOLEAN"], ["A", "INTEGER"], ["e", "BOOLEAN"], ["D", "INTEGER"], ["C", "INTEGER"], ["A", "BOOLEAN"], ["BOOLEAN", "D"], ["c", "INTEGER"]>>)
type_check
add_attribute("BOOLEAN", "D", "B")
add_query("C", "B", <<["C", "B"], ["d", "BOOLEAN"], ["A", "INTEGER"]>>, "a")
generate_java_code
add_call_chain(<<e,B,INTEGER>>)
add_query("B", "B", <<["A", "INTEGER"], ["B", "INTEGER"]>>, "B")
add_query("INTEGER", "INTEGER", <<["a", "BOOLEAN"], ["a", "INTEGER"], ["b", "INTEGER"], ["C", "INTEGER"], ["c", "INTEGER"], ["B", "INTEGER"]>>, "BOOLEAN")
add_attribute("BOOLEAN", "D", "BOOLEAN")
add_command("c", "BOOLEAN", <<["a", "e"], ["B", "INTEGER"], ["A", "INTEGER"], ["A", "C"], ["C", "a"], ["B", "b"], ["B", "INTEGER"], ["INTEGER", "INTEGER"]>>)
equals
type_check
bool_value (false)
modulo
add_command("B", "c", <<["d", "a"], ["INTEGER", "BOOLEAN"], ["B", "BOOLEAN"], ["A", "INTEGER"], ["D", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["BOOLEAN", "d"], ["D", "a"], ["c", "INTEGER"]>>)
type_check
add_command("B", "c", <<["d", "BOOLEAN"], ["c", "BOOLEAN"], ["C", "d"], ["D", "BOOLEAN"], ["A", "INTEGER"]>>)
add_query("a", "C", <<["e", "BOOLEAN"], ["a", "BOOLEAN"], ["b", "INTEGER"], ["D", "BOOLEAN"], ["B", "INTEGER"], ["B", "INTEGER"]>>, "C")
add_command("a", "a", <<["B", "BOOLEAN"], ["b", "A"], ["d", "BOOLEAN"]>>)
int_value (21)
equals
add_command("B", "D", <<["A", "BOOLEAN"], ["b", "BOOLEAN"], ["C", "BOOLEAN"], ["c", "INTEGER"], ["C", "INTEGER"], ["d", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "BOOLEAN"]>>)
add_command("INTEGER", "B", <<["B", "D"], ["a", "INTEGER"]>>)
type_check
conjunction
add_query("BOOLEAN", "C", <<["D", "BOOLEAN"]>>, "b")
add_class(e)
add_call_chain(<<b>>)
int_value (19)
logical_negation
type_check
add_call_chain(<<B,INTEGER,B>>)
equals
generate_java_code
bool_value (false)
addition
add_call_chain(<<d,C,B>>)
add_call_chain(<<B,B,A,D,D>>)
add_command("b", "A", <<["B", "INTEGER"], ["c", "D"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["c", "INTEGER"]>>)
int_value (12)
logical_negation
add_attribute("D", "A", "b")
add_call_chain(<<a,D,D>>)
generate_java_code
add_query("INTEGER", "B", <<["C", "INTEGER"], ["c", "INTEGER"], ["c", "C"], ["a", "INTEGER"], ["A", "INTEGER"], ["B", "a"], ["d", "A"], ["C", "BOOLEAN"]>>, "D")
equals
logical_negation
quotient
add_attribute("INTEGER", "B", "b")
add_attribute("e", "b", "INTEGER")
add_class(A)
add_attribute("e", "INTEGER", "BOOLEAN")
bool_value (false)
add_command("INTEGER", "A", <<["C", "b"], ["a", "INTEGER"], ["C", "BOOLEAN"]>>)
add_command("B", "c", <<["a", "A"], ["b", "INTEGER"], ["B", "INTEGER"], ["D", "BOOLEAN"]>>)
bool_value (false)
disjunction
add_command("A", "c", <<["INTEGER", "BOOLEAN"], ["b", "INTEGER"], ["b", "BOOLEAN"]>>)
logical_negation
add_call_chain(<<D,C,C,b>>)
int_value (45)
conjunction
add_query("B", "b", <<["c", "INTEGER"], ["A", "INTEGER"], ["c", "INTEGER"], ["D", "BOOLEAN"], ["D", "d"], ["C", "INTEGER"], ["D", "B"]>>, "B")
numerical_negation
add_call_chain(<<D,b,C>>)
add_attribute("D", "d", "BOOLEAN")
int_value (18)
add_attribute("e", "INTEGER", "e")
logical_negation
numerical_negation
int_value (8)
bool_value (false)
add_call_chain(<<c,BOOLEAN>>)
add_call_chain(<<C,d,c,d,B,c>>)
int_value (29)
add_command("C", "BOOLEAN", <<["c", "BOOLEAN"], ["C", "INTEGER"], ["a", "e"], ["a", "INTEGER"]>>)
conjunction
equals
numerical_negation
add_command("c", "B", <<["a", "INTEGER"], ["D", "BOOLEAN"], ["a", "INTEGER"], ["b", "INTEGER"]>>)
add_call_chain(<<c,c,BOOLEAN,c,a,c,c,d,b>>)
add_query("a", "a", <<["C", "BOOLEAN"], ["D", "A"]>>, "INTEGER")
type_check
bool_value (false)
add_attribute("b", "A", "INTEGER")
equals
add_query("B", "a", <<["C", "D"], ["B", "d"], ["d", "e"], ["A", "BOOLEAN"], ["B", "BOOLEAN"], ["c", "D"]>>, "INTEGER")
conjunction
add_query("B", "c", <<["a", "BOOLEAN"], ["C", "BOOLEAN"], ["A", "BOOLEAN"], ["C", "INTEGER"], ["D", "BOOLEAN"]>>, "B")
add_call_chain(<<e,INTEGER,b,e,D,INTEGER,C,c>>)
int_value (29)
bool_value (true)
int_value (2)
disjunction
greater_than
add_call_chain(<<C,d,b>>)
int_value (3)
add_command("b", "e", <<["a", "INTEGER"], ["b", "D"], ["INTEGER", "BOOLEAN"], ["INTEGER", "INTEGER"], ["e", "D"]>>)
add_attribute("e", "INTEGER", "INTEGER")
bool_value (true)
add_attribute("INTEGER", "e", "INTEGER")
numerical_negation
add_command("B", "e", <<["D", "b"]>>)
add_query("D", "c", <<["B", "BOOLEAN"], ["d", "BOOLEAN"], ["D", "A"], ["c", "INTEGER"]>>, "d")
add_query("e", "d", <<["a", "BOOLEAN"], ["D", "BOOLEAN"], ["A", "BOOLEAN"], ["e", "c"]>>, "INTEGER")
add_call_chain(<<D,C,c,d,e>>)
add_command("BOOLEAN", "B", <<["e", "D"]>>)
add_command("A", "A", <<["e", "BOOLEAN"]>>)
add_attribute("b", "e", "BOOLEAN")
numerical_negation
add_attribute("D", "A", "BOOLEAN")
add_query("d", "b", <<["C", "BOOLEAN"], ["D", "d"], ["A", "B"], ["b", "BOOLEAN"], ["C", "INTEGER"]>>, "C")
subtraction
generate_java_code
int_value (8)
generate_java_code
generate_java_code
int_value (35)
generate_java_code
add_attribute("BOOLEAN", "e", "BOOLEAN")
bool_value (true)
generate_java_code
disjunction
numerical_negation
add_call_chain(<<D,a,e>>)
numerical_negation
add_attribute("INTEGER", "c", "e")
add_command("A", "B", <<["D", "BOOLEAN"], ["e", "INTEGER"]>>)
bool_value (true)
add_command("d", "D", <<["e", "INTEGER"], ["A", "BOOLEAN"], ["INTEGER", "INTEGER"], ["e", "d"], ["b", "BOOLEAN"], ["A", "INTEGER"]>>)
add_command("A", "c", <<["D", "INTEGER"], ["b", "BOOLEAN"], ["A", "b"], ["INTEGER", "e"], ["C", "BOOLEAN"], ["A", "INTEGER"], ["C", "A"], ["B", "BOOLEAN"], ["b", "BOOLEAN"]>>)
add_call_chain(<<B,B>>)
add_query("e", "b", <<["A", "BOOLEAN"], ["B", "INTEGER"]>>, "B")
add_call_chain(<<B,e,C,D,B,c,d,b>>)
