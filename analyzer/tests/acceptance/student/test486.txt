logical_negation
add_call_chain(<<C,d,e,C,B,c,BOOLEAN>>)
add_call_chain(<<A,D,b,BOOLEAN,a,c,INTEGER,d>>)
int_value (18)
add_query("c", "A", <<["A", "B"], ["B", "BOOLEAN"], ["e", "BOOLEAN"], ["d", "BOOLEAN"], ["B", "INTEGER"], ["C", "INTEGER"], ["D", "INTEGER"], ["D", "BOOLEAN"]>>, "a")
bool_value (true)
add_attribute("e", "A", "BOOLEAN")
int_value (46)
add_class(B)
add_command("A", "A", <<["b", "BOOLEAN"], ["B", "a"], ["D", "INTEGER"], ["D", "INTEGER"], ["A", "a"], ["BOOLEAN", "BOOLEAN"], ["INTEGER", "BOOLEAN"]>>)
logical_negation
subtraction
logical_negation
logical_negation
bool_value (true)
add_query("d", "b", <<["B", "INTEGER"], ["C", "BOOLEAN"], ["C", "INTEGER"], ["B", "d"], ["BOOLEAN", "INTEGER"], ["a", "B"], ["B", "BOOLEAN"]>>, "d")
int_value (26)
disjunction
disjunction
add_command("C", "d", <<["e", "INTEGER"], ["d", "INTEGER"], ["a", "BOOLEAN"], ["A", "BOOLEAN"]>>)
int_value (23)
add_query("A", "C", <<["A", "BOOLEAN"], ["b", "BOOLEAN"], ["A", "INTEGER"], ["BOOLEAN", "INTEGER"], ["D", "BOOLEAN"]>>, "D")
greater_than
add_class(d)
type_check
generate_java_code
add_command("A", "c", <<["BOOLEAN", "INTEGER"], ["c", "INTEGER"], ["B", "INTEGER"], ["d", "INTEGER"]>>)
logical_negation
add_command("B", "BOOLEAN", <<["e", "e"], ["D", "INTEGER"]>>)
type_check
add_attribute("d", "C", "BOOLEAN")
int_value (48)
bool_value (false)
numerical_negation
generate_java_code
add_attribute("A", "c", "BOOLEAN")
add_query("B", "C", <<["d", "b"], ["BOOLEAN", "BOOLEAN"], ["c", "INTEGER"], ["C", "BOOLEAN"], ["A", "D"]>>, "b")
add_class(d)
bool_value (true)
logical_negation
disjunction
numerical_negation
add_class(e)
add_command("A", "INTEGER", <<["INTEGER", "A"], ["c", "INTEGER"], ["c", "BOOLEAN"]>>)
add_class(e)
add_call_chain(<<C,BOOLEAN,c,B,c,b,e>>)
type_check
add_query("A", "A", <<["a", "INTEGER"], ["D", "A"]>>, "c")
numerical_negation
add_call_chain(<<b,e,a,A,A,d>>)
add_call_chain(<<d,c,C,c,e,C,c,c>>)
add_call_chain(<<e,BOOLEAN,a>>)
add_call_chain(<<A,A,b,C>>)
add_query("C", "c", <<["D", "INTEGER"], ["C", "D"], ["A", "BOOLEAN"], ["D", "A"], ["a", "c"], ["INTEGER", "INTEGER"], ["C", "BOOLEAN"], ["C", "BOOLEAN"]>>, "B")
subtraction
add_command("C", "a", <<["B", "C"], ["d", "D"], ["C", "BOOLEAN"], ["C", "BOOLEAN"], ["B", "e"], ["C", "INTEGER"], ["C", "BOOLEAN"], ["e", "BOOLEAN"], ["C", "BOOLEAN"]>>)
bool_value (false)
numerical_negation
add_attribute("INTEGER", "B", "BOOLEAN")
add_attribute("C", "BOOLEAN", "INTEGER")
bool_value (true)
numerical_negation
bool_value (true)
addition
add_attribute("d", "d", "BOOLEAN")
add_class(B)
equals
add_query("d", "b", <<["C", "BOOLEAN"], ["D", "D"], ["b", "BOOLEAN"], ["C", "D"], ["a", "D"], ["d", "c"], ["b", "a"], ["b", "INTEGER"], ["d", "BOOLEAN"]>>, "e")
add_class(d)
add_call_chain(<<B,B,INTEGER,d,BOOLEAN,b,c>>)
add_call_chain(<<a,INTEGER,e>>)
numerical_negation
add_class(B)
add_call_chain(<<b,C,d,b,INTEGER,C,e,A>>)
add_attribute("C", "BOOLEAN", "C")
int_value (25)
numerical_negation
int_value (39)
add_class(A)
add_attribute("e", "C", "BOOLEAN")
numerical_negation
numerical_negation
add_query("D", "D", <<["a", "BOOLEAN"]>>, "D")
int_value (37)
type_check
add_query("c", "c", <<["d", "BOOLEAN"], ["c", "INTEGER"], ["C", "BOOLEAN"], ["e", "d"], ["A", "INTEGER"], ["d", "INTEGER"], ["e", "INTEGER"], ["C", "b"], ["a", "INTEGER"]>>, "a")
modulo
int_value (24)
bool_value (false)
numerical_negation
add_query("D", "D", <<["d", "C"], ["b", "d"], ["d", "B"], ["B", "A"], ["C", "a"]>>, "b")
add_call_chain(<<d,b,B,A,D,BOOLEAN>>)
conjunction
add_call_chain(<<B,c,e,e,D,a,INTEGER,a,A>>)
logical_negation
add_query("A", "BOOLEAN", <<["B", "INTEGER"], ["b", "BOOLEAN"]>>, "a")
add_call_chain(<<C,e>>)
numerical_negation
add_call_chain(<<A,d,b,A,b,B,A,a>>)
int_value (18)
int_value (34)
add_attribute("A", "D", "a")
add_command("B", "d", <<["D", "INTEGER"], ["C", "INTEGER"], ["b", "INTEGER"], ["B", "BOOLEAN"], ["e", "BOOLEAN"]>>)
add_attribute("C", "c", "INTEGER")
add_class(d)
numerical_negation
greater_than
add_class(C)
numerical_negation
add_command("C", "d", <<["D", "b"], ["b", "INTEGER"]>>)
add_command("BOOLEAN", "B", <<["d", "INTEGER"], ["c", "BOOLEAN"], ["b", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>)
add_attribute("D", "INTEGER", "BOOLEAN")
logical_negation
logical_negation
bool_value (false)
generate_java_code
add_class(D)
bool_value (true)
add_call_chain(<<A,A,d,c,B,d>>)
add_class(INTEGER)
int_value (43)
multiplication
int_value (14)
type_check
disjunction
add_call_chain(<<a,C,a,a>>)
bool_value (false)
int_value (20)
logical_negation
add_call_chain(<<D,B>>)
int_value (8)
greater_than
add_attribute("C", "c", "BOOLEAN")
logical_negation
add_call_chain(<<e,BOOLEAN>>)
int_value (3)
add_command("e", "a", <<["BOOLEAN", "INTEGER"], ["C", "INTEGER"], ["e", "BOOLEAN"]>>)
add_call_chain(<<A,d,a,c,d,INTEGER>>)
add_call_chain(<<D,D>>)
generate_java_code
add_call_chain(<<BOOLEAN,e,e,d,A,A,a,b,d>>)
add_call_chain(<<BOOLEAN,b,e>>)
add_attribute("B", "d", "D")
int_value (4)
generate_java_code
add_call_chain(<<C,e,INTEGER,e,a>>)
addition
add_attribute("B", "D", "a")
numerical_negation
add_attribute("b", "INTEGER", "e")
int_value (15)
add_class(D)
add_command("d", "B", <<["B", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["B", "BOOLEAN"], ["INTEGER", "INTEGER"]>>)
conjunction
add_query("D", "d", <<["D", "BOOLEAN"], ["b", "INTEGER"], ["INTEGER", "INTEGER"]>>, "d")
less_than
multiplication
bool_value (false)
subtraction
int_value (2)
int_value (23)
bool_value (true)
subtraction
add_query("e", "BOOLEAN", <<["a", "a"], ["A", "D"], ["c", "BOOLEAN"], ["B", "INTEGER"], ["BOOLEAN", "INTEGER"]>>, "a")
add_query("A", "D", <<["D", "INTEGER"], ["B", "INTEGER"], ["c", "B"], ["d", "d"]>>, "a")
add_query("a", "B", <<["INTEGER", "c"], ["c", "INTEGER"], ["D", "BOOLEAN"], ["c", "INTEGER"], ["c", "INTEGER"], ["b", "BOOLEAN"]>>, "C")
add_attribute("B", "a", "INTEGER")
add_class(C)
type_check
add_query("a", "b", <<["c", "BOOLEAN"], ["D", "e"], ["B", "INTEGER"]>>, "e")
subtraction
add_call_chain(<<C,D,C,D,C>>)
numerical_negation
bool_value (false)
bool_value (true)
add_query("c", "b", <<["c", "INTEGER"], ["b", "BOOLEAN"], ["B", "C"], ["BOOLEAN", "BOOLEAN"], ["C", "d"], ["A", "INTEGER"], ["B", "INTEGER"], ["d", "BOOLEAN"], ["a", "BOOLEAN"]>>, "D")
add_call_chain(<<c,C,A,d>>)
numerical_negation
generate_java_code
generate_java_code
add_attribute("a", "INTEGER", "BOOLEAN")
add_attribute("b", "A", "INTEGER")
add_query("b", "D", <<["c", "INTEGER"], ["C", "C"], ["D", "INTEGER"], ["D", "BOOLEAN"], ["c", "INTEGER"], ["d", "INTEGER"], ["b", "INTEGER"]>>, "D")
modulo
add_call_chain(<<D>>)
add_call_chain(<<c,C,A,d,INTEGER,a,d,D,A>>)
addition
numerical_negation
type_check
type_check
generate_java_code
int_value (22)
generate_java_code
generate_java_code
greater_than
bool_value (false)
logical_negation
add_call_chain(<<d,b,d,e,a,C>>)
logical_negation
add_command("A", "e", <<["A", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["D", "INTEGER"]>>)
quotient
add_query("b", "A", <<["c", "INTEGER"], ["a", "b"], ["B", "D"], ["b", "BOOLEAN"]>>, "B")
bool_value (false)
add_class(D)
add_call_chain(<<b,A,A,BOOLEAN,B,d,A,b>>)
disjunction
add_call_chain(<<b,BOOLEAN,b,B,INTEGER,C,D,b,D>>)
bool_value (false)
disjunction
addition
int_value (25)
generate_java_code
add_query("B", "b", <<["A", "C"], ["e", "D"], ["e", "BOOLEAN"], ["c", "BOOLEAN"], ["e", "BOOLEAN"], ["D", "INTEGER"], ["B", "c"], ["b", "e"]>>, "A")
bool_value (true)
add_command("e", "C", <<["b", "INTEGER"], ["e", "INTEGER"], ["b", "INTEGER"], ["d", "BOOLEAN"], ["A", "BOOLEAN"], ["A", "b"], ["e", "e"], ["INTEGER", "D"], ["B", "b"]>>)
add_call_chain(<<INTEGER,B,B,d>>)
add_attribute("D", "D", "INTEGER")
add_command("B", "d", <<["C", "BOOLEAN"], ["INTEGER", "BOOLEAN"], ["d", "INTEGER"], ["C", "D"], ["a", "BOOLEAN"]>>)
add_call_chain(<<C,B>>)
int_value (39)
modulo
int_value (21)
multiplication
modulo
add_attribute("C", "b", "BOOLEAN")
generate_java_code
