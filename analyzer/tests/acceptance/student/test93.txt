add_query("a", "d", <<["C", "INTEGER"], ["D", "B"], ["D", "e"]>>, "D")
logical_negation
logical_negation
int_value (37)
add_attribute("INTEGER", "d", "BOOLEAN")
add_call_chain(<<b,C,b,d,C,D,e,A>>)
add_call_chain(<<b,D,e,C>>)
greater_than
conjunction
conjunction
int_value (32)
numerical_negation
add_call_chain(<<B,a,a,A,C,INTEGER,d>>)
add_command("C", "D", <<["B", "BOOLEAN"], ["e", "INTEGER"], ["D", "INTEGER"], ["e", "INTEGER"], ["e", "INTEGER"], ["e", "c"]>>)
add_attribute("B", "c", "BOOLEAN")
add_query("D", "D", <<["d", "B"], ["B", "INTEGER"], ["C", "A"], ["D", "INTEGER"], ["INTEGER", "INTEGER"], ["e", "BOOLEAN"], ["C", "b"], ["a", "BOOLEAN"]>>, "A")
generate_java_code
add_attribute("B", "c", "D")
int_value (1)
bool_value (false)
bool_value (false)
greater_than
multiplication
bool_value (false)
add_call_chain(<<d,e,c,d>>)
equals
int_value (8)
subtraction
bool_value (false)
int_value (41)
add_command("d", "C", <<["B", "B"], ["c", "BOOLEAN"], ["c", "BOOLEAN"], ["c", "B"], ["d", "BOOLEAN"], ["d", "D"], ["C", "INTEGER"], ["D", "INTEGER"], ["D", "BOOLEAN"]>>)
add_attribute("D", "D", "BOOLEAN")
add_command("D", "BOOLEAN", <<["e", "e"], ["e", "INTEGER"], ["A", "INTEGER"], ["C", "INTEGER"], ["B", "BOOLEAN"], ["C", "e"], ["BOOLEAN", "BOOLEAN"], ["a", "B"], ["d", "INTEGER"]>>)
addition
add_call_chain(<<c>>)
generate_java_code
add_call_chain(<<b,a,b,c,B,c>>)
add_command("D", "B", <<["e", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "BOOLEAN"]>>)
add_attribute("e", "A", "B")
add_command("d", "d", <<["BOOLEAN", "INTEGER"], ["c", "C"], ["B", "B"], ["A", "BOOLEAN"], ["INTEGER", "INTEGER"], ["C", "BOOLEAN"], ["b", "BOOLEAN"]>>)
bool_value (true)
generate_java_code
less_than
add_call_chain(<<BOOLEAN,A>>)
bool_value (true)
add_attribute("a", "B", "BOOLEAN")
add_call_chain(<<e,B,d,C,e,D,e,b>>)
int_value (40)
generate_java_code
add_attribute("d", "b", "BOOLEAN")
add_query("e", "INTEGER", <<["c", "e"], ["BOOLEAN", "BOOLEAN"], ["C", "INTEGER"], ["A", "INTEGER"], ["A", "INTEGER"]>>, "b")
logical_negation
add_query("b", "D", <<["d", "BOOLEAN"]>>, "INTEGER")
add_query("e", "C", <<["A", "B"], ["a", "INTEGER"], ["c", "INTEGER"], ["B", "INTEGER"]>>, "C")
less_than
addition
multiplication
greater_than
add_command("e", "INTEGER", <<["c", "b"], ["c", "BOOLEAN"], ["C", "C"], ["a", "a"], ["C", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["e", "INTEGER"]>>)
logical_negation
add_call_chain(<<A,B,D,A,C,c,a,B,B>>)
logical_negation
bool_value (false)
add_query("a", "b", <<["c", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "BOOLEAN"], ["C", "e"], ["C", "e"]>>, "BOOLEAN")
bool_value (false)
int_value (42)
multiplication
add_query("A", "e", <<["A", "BOOLEAN"], ["C", "BOOLEAN"], ["e", "INTEGER"], ["a", "INTEGER"], ["C", "BOOLEAN"]>>, "INTEGER")
bool_value (true)
conjunction
add_call_chain(<<BOOLEAN,INTEGER,e,d,B,D>>)
add_class(e)
add_query("B", "D", <<["b", "D"]>>, "D")
bool_value (true)
generate_java_code
add_call_chain(<<B,C>>)
add_command("B", "B", <<["c", "b"], ["a", "b"], ["e", "e"], ["a", "b"], ["A", "BOOLEAN"]>>)
modulo
add_attribute("D", "BOOLEAN", "INTEGER")
bool_value (true)
int_value (25)
generate_java_code
add_attribute("C", "d", "BOOLEAN")
add_call_chain(<<b>>)
numerical_negation
numerical_negation
int_value (3)
add_call_chain(<<b,BOOLEAN>>)
bool_value (true)
add_class(INTEGER)
equals
add_call_chain(<<c>>)
quotient
numerical_negation
generate_java_code
add_attribute("d", "A", "INTEGER")
bool_value (true)
add_attribute("d", "e", "BOOLEAN")
bool_value (false)
add_call_chain(<<C,B,c>>)
add_attribute("BOOLEAN", "e", "INTEGER")
add_call_chain(<<A,e,D,C,BOOLEAN,c,d,D>>)
add_call_chain(<<C,A,INTEGER,b,BOOLEAN,D,B,A,b>>)
add_call_chain(<<a,B,d,C,A>>)
numerical_negation
add_command("b", "D", <<["C", "BOOLEAN"], ["a", "BOOLEAN"]>>)
generate_java_code
type_check
quotient
less_than
add_command("BOOLEAN", "B", <<["D", "c"], ["a", "BOOLEAN"]>>)
add_call_chain(<<D,B,b,A>>)
add_call_chain(<<e>>)
add_call_chain(<<B,B,D,B,e,a,d>>)
add_call_chain(<<e,d>>)
add_call_chain(<<C>>)
add_class(D)
add_query("a", "A", <<["c", "D"], ["D", "BOOLEAN"], ["c", "INTEGER"], ["a", "B"]>>, "A")
greater_than
addition
add_command("INTEGER", "A", <<["c", "C"], ["C", "INTEGER"], ["C", "INTEGER"], ["BOOLEAN", "c"], ["B", "BOOLEAN"]>>)
multiplication
disjunction
add_attribute("d", "b", "INTEGER")
conjunction
add_call_chain(<<c,c,C,c,e,INTEGER,A,D,D>>)
numerical_negation
add_attribute("C", "A", "INTEGER")
generate_java_code
conjunction
subtraction
type_check
add_query("C", "B", <<["a", "INTEGER"], ["d", "BOOLEAN"], ["D", "INTEGER"], ["e", "INTEGER"], ["D", "INTEGER"], ["INTEGER", "d"], ["C", "INTEGER"], ["c", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"]>>, "C")
add_call_chain(<<b,C,B,B,c,a,A,c>>)
add_call_chain(<<c,A,C,c,BOOLEAN>>)
add_call_chain(<<D,e,c,A>>)
add_attribute("D", "C", "INTEGER")
add_attribute("C", "C", "d")
add_call_chain(<<e,b,d>>)
type_check
int_value (16)
add_call_chain(<<B,INTEGER>>)
logical_negation
add_call_chain(<<BOOLEAN,e,a,BOOLEAN,a,d,D,c,C>>)
numerical_negation
add_command("INTEGER", "C", <<["c", "D"], ["e", "D"], ["a", "INTEGER"], ["B", "INTEGER"], ["C", "INTEGER"], ["b", "BOOLEAN"], ["a", "INTEGER"]>>)
int_value (6)
add_attribute("B", "B", "INTEGER")
numerical_negation
greater_than
add_command("b", "D", <<["a", "INTEGER"], ["e", "C"], ["d", "b"], ["B", "d"], ["C", "e"], ["D", "INTEGER"], ["D", "INTEGER"], ["e", "INTEGER"], ["d", "INTEGER"]>>)
add_call_chain(<<c,A,A,D,b,INTEGER,B,INTEGER,D>>)
add_query("D", "C", <<["D", "INTEGER"], ["e", "BOOLEAN"], ["a", "B"], ["a", "A"], ["d", "BOOLEAN"], ["e", "b"], ["B", "INTEGER"], ["A", "D"]>>, "A")
type_check
add_query("d", "A", <<["INTEGER", "INTEGER"], ["B", "INTEGER"]>>, "a")
bool_value (false)
int_value (18)
add_attribute("INTEGER", "INTEGER", "b")
add_call_chain(<<d,e,C,A,D,d>>)
add_command("INTEGER", "B", <<["b", "D"], ["A", "BOOLEAN"], ["A", "INTEGER"], ["B", "INTEGER"], ["B", "INTEGER"], ["e", "BOOLEAN"], ["B", "INTEGER"], ["b", "INTEGER"]>>)
bool_value (true)
add_call_chain(<<C,A,e,b,D,B,e,BOOLEAN,c>>)
int_value (22)
add_query("B", "c", <<["c", "b"], ["INTEGER", "b"], ["B", "INTEGER"], ["B", "D"]>>, "d")
disjunction
add_attribute("b", "B", "BOOLEAN")
logical_negation
quotient
numerical_negation
add_attribute("INTEGER", "B", "BOOLEAN")
add_command("c", "BOOLEAN", <<["B", "D"], ["e", "C"], ["d", "BOOLEAN"], ["d", "B"], ["c", "BOOLEAN"]>>)
bool_value (false)
add_command("B", "e", <<["d", "BOOLEAN"], ["d", "INTEGER"], ["d", "INTEGER"]>>)
add_call_chain(<<d,C,A,a,A,d,INTEGER,c>>)
int_value (21)
conjunction
add_command("c", "b", <<["b", "c"], ["D", "INTEGER"], ["INTEGER", "INTEGER"], ["C", "D"], ["D", "BOOLEAN"], ["BOOLEAN", "BOOLEAN"], ["c", "A"]>>)
type_check
bool_value (false)
add_query("B", "c", <<["e", "BOOLEAN"], ["A", "INTEGER"], ["a", "BOOLEAN"]>>, "e")
add_call_chain(<<C>>)
add_class(b)
disjunction
add_call_chain(<<c,b>>)
equals
add_call_chain(<<C,d,a,B,e>>)
generate_java_code
add_command("C", "A", <<["A", "C"]>>)
logical_negation
add_call_chain(<<e,C,A,B,b,b,B,A>>)
add_call_chain(<<INTEGER,BOOLEAN,a,e,D,INTEGER>>)
logical_negation
generate_java_code
disjunction
add_call_chain(<<A,c,b,d,d,D>>)
generate_java_code
numerical_negation
add_attribute("INTEGER", "b", "BOOLEAN")
add_call_chain(<<c,C>>)
generate_java_code
add_call_chain(<<B>>)
add_query("D", "D", <<["C", "INTEGER"], ["e", "d"]>>, "INTEGER")
add_query("b", "d", <<["b", "C"], ["b", "BOOLEAN"], ["c", "BOOLEAN"], ["B", "A"]>>, "C")
logical_negation
add_class(D)
bool_value (true)
int_value (46)
add_call_chain(<<B,e>>)
type_check
add_call_chain(<<C,b,d,D>>)
logical_negation
add_attribute("e", "a", "INTEGER")
bool_value (true)
add_query("c", "b", <<["e", "BOOLEAN"], ["B", "BOOLEAN"], ["a", "INTEGER"]>>, "b")
add_query("C", "d", <<["a", "BOOLEAN"], ["B", "INTEGER"]>>, "b")
greater_than
generate_java_code
logical_negation
type_check
add_command("C", "e", <<["A", "BOOLEAN"], ["e", "BOOLEAN"], ["a", "BOOLEAN"], ["e", "INTEGER"], ["BOOLEAN", "INTEGER"], ["e", "BOOLEAN"], ["e", "BOOLEAN"]>>)
add_call_chain(<<d,c,D>>)
modulo
add_class(A)
numerical_negation
add_call_chain(<<D,e,b>>)
add_call_chain(<<BOOLEAN,c,C,e,b,c,b,a>>)
add_class(D)
equals
add_call_chain(<<c,d,B,a,b,D>>)
add_command("d", "C", <<["B", "INTEGER"], ["C", "INTEGER"], ["INTEGER", "A"], ["BOOLEAN", "a"], ["d", "BOOLEAN"], ["d", "B"]>>)
add_call_chain(<<C,a,d,d,A,a>>)
numerical_negation
int_value (37)
add_call_chain(<<e,b,a>>)
bool_value (false)
add_attribute("C", "d", "a")
int_value (14)
type_check
numerical_negation
add_query("B", "d", <<["d", "BOOLEAN"], ["d", "INTEGER"], ["d", "BOOLEAN"], ["a", "BOOLEAN"], ["a", "INTEGER"], ["INTEGER", "B"], ["C", "b"], ["b", "d"]>>, "BOOLEAN")
add_query("C", "d", <<["A", "INTEGER"], ["D", "B"], ["C", "C"], ["d", "D"], ["B", "c"], ["c", "e"], ["D", "a"], ["D", "a"], ["b", "D"]>>, "d")
add_call_chain(<<D>>)
add_call_chain(<<C,C,e,d,a,B,B,INTEGER,C>>)
logical_negation
add_query("e", "D", <<["A", "INTEGER"], ["D", "BOOLEAN"], ["BOOLEAN", "A"], ["C", "B"], ["e", "BOOLEAN"], ["a", "BOOLEAN"], ["B", "BOOLEAN"]>>, "B")
equals
add_call_chain(<<b,C,e,b,e>>)
bool_value (false)
add_attribute("A", "e", "d")
bool_value (false)
type_check
logical_negation
generate_java_code
int_value (19)
logical_negation
add_command("d", "b", <<["A", "BOOLEAN"], ["e", "INTEGER"], ["C", "INTEGER"], ["B", "INTEGER"], ["A", "INTEGER"], ["a", "INTEGER"], ["INTEGER", "INTEGER"], ["INTEGER", "BOOLEAN"]>>)
add_query("A", "A", <<["e", "BOOLEAN"], ["C", "C"], ["C", "a"], ["D", "a"], ["c", "B"], ["e", "BOOLEAN"], ["d", "BOOLEAN"]>>, "b")
subtraction
bool_value (false)
